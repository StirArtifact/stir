struct	O
rpm_type_size	struct(int,int)
{	O
int	O
typeM	int
;	O
int	O
sizeM	int
;	O
}	O
;	O
static	O
struct	O
rpm_type_size	struct(int,int)
rpmTypeSizes	array(struct(int,int))
[	O
]	O
=	O
{	O
{	O
RPM_NULL_TYPE	int
,	O
0	int
}	O
,	O
{	O
RPM_CHAR_TYPE	int
,	O
1	int
}	O
,	O
{	O
RPM_INT8_TYPE	int
,	O
1	int
}	O
,	O
{	O
RPM_INT16_TYPE	int
,	O
2	int
}	O
,	O
{	O
RPM_INT32_TYPE	int
,	O
4	int
}	O
,	O
{	O
RPM_INT64_TYPE	int
,	O
8	int
}	O
,	O
{	O
RPM_STRING_TYPE	int
,	O
0	int
}	O
,	O
{	O
RPM_BIN_TYPE	int
,	O
0	int
}	O
,	O
{	O
RPM_STRING_ARRAY_TYPE	int
,	O
0	int
}	O
,	O
{	O
RPM_I18NSTRING_ARRAY_TYPE	int
,	O
0	int
}	O
}	O
;	O
static	O
int	O
get_size_by_type	(int)->(int)
(	O
int	O
type	int
)	O
{	O
if	O
(	O
type	int
>	O
RPM_I18NSTRING_ARRAY_TYPE	int
)	O
return	O
-	O
1	int
;	O
return	O
rpmTypeSizes	array(struct(int,int))
[	O
type	int
]	O
.	O
sizeM	int
;	O
}	O
void	O
rpmbis_px_lead_init	(*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))))->(void)
(	O
RPM_PX_LEAD	struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))
*	O
px_lead	*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char)))
)	O
{	O
memset	(*(void),int,long)->(*(void))
(	O
px_lead	*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char)))
,	O
'\0'	O
,	O
RPM_LEAD_SIZE	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
px_lead	*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char)))
->	O
px_magic	array(char)
,	O
RPM_MAGIC	*(char)
,	O
4	int
)	O
;	O
}	O
static	O
int	O
rpmbis_i_get_type	(int,int)->(int)
(	O
int	O
table_id	int
,	O
int	O
rpmtag	int
)	O
{	O
int	O
type	int
;	O
type	int
=	O
swatt_get_rpmtype	(int,int)->(int)
(	O
table_id	int
,	O
rpmtag	int
)	O
;	O
return	O
type	int
;	O
}	O
RPMHDRINDEX	struct(int,int,int,int)
*	O
rpm_hdrindex_create	(int,int)->(*(struct(int,int,int,int)))
(	O
int	O
which_header	int
,	O
int	O
rpmtag	int
)	O
{	O
RPMHDRINDEX	struct(int,int,int,int)
*	O
hdrindex	*(struct(int,int,int,int))
;	O
hdrindex	*(struct(int,int,int,int))
=	O
(	O
RPMHDRINDEX	struct(int,int,int,int)
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
RPMHDRINDEX	struct(int,int,int,int)
*	O
)	O
)	O
;	O
hdrindex	*(struct(int,int,int,int))
->	O
tag	int
=	O
rpmtag	int
;	O
hdrindex	*(struct(int,int,int,int))
->	O
type	int
=	O
rpmbis_i_get_type	(int,int)->(int)
(	O
which_header	int
,	O
rpmtag	int
)	O
;	O
if	O
(	O
hdrindex	*(struct(int,int,int,int))
->	O
type	int
<	O
0	int
)	O
{	O
return	O
NULL	O
;	O
}	O
hdrindex	*(struct(int,int,int,int))
->	O
offset	int
=	O
0	int
;	O
hdrindex	*(struct(int,int,int,int))
->	O
count	int
=	O
0	int
;	O
return	O
hdrindex	*(struct(int,int,int,int))
;	O
}	O
void	O
rpm_hdrindex_delete	(*(struct(int,int,int,int)))->(void)
(	O
RPMHDRINDEX	struct(int,int,int,int)
*	O
hdrindex	*(struct(int,int,int,int))
)	O
{	O
free	(*(void))->(void)
(	O
hdrindex	*(struct(int,int,int,int))
)	O
;	O
}	O
RPMBIS_RECORD	struct(*(struct(int,int,int,int)),*(struct(*(char),*(char),int,int,int,char,int)))
*	O
rpmbis_record_create	(int,int)->(*(struct(*(struct(int,int,int,int)),*(struct(*`,*`,int,int,int,char,int)))))
(	O
int	O
which_header	int
,	O
int	O
tag	int
)	O
{	O
RPMBIS_RECORD	struct(*(struct(int,int,int,int)),*(struct(*(char),*(char),int,int,int,char,int)))
*	O
rcd	*(struct(*(struct(int,int,int,int)),*(struct(*(char),*(char),int,int,int,char,int))))
;	O
rcd	*(struct(*(struct(int,int,int,int)),*(struct(*(char),*(char),int,int,int,char,int))))
=	O
(	O
RPMBIS_RECORD	struct(*(struct(int,int,int,int)),*(struct(*(char),*(char),int,int,int,char,int)))
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
RPMBIS_RECORD	struct(*(struct(int,int,int,int)),*(struct(*(char),*(char),int,int,int,char,int)))
)	O
)	O
;	O
rcd	*(struct(*(struct(int,int,int,int)),*(struct(*(char),*(char),int,int,int,char,int))))
->	O
tag_valueM	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
10	int
)	O
;	O
rcd	*(struct(*(struct(int,int,int,int)),*(struct(*(char),*(char),int,int,int,char,int))))
->	O
indexM	*(struct(int,int,int,int))
=	O
rpm_hdrindex_create	(int,int)->(*(struct(int,int,int,int)))
(	O
which_header	int
,	O
tag	int
)	O
;	O
return	O
rcd	*(struct(*(struct(int,int,int,int)),*(struct(*(char),*(char),int,int,int,char,int))))
;	O
}	O
int	O
rpmbis_record_add_value	(*(struct(*(struct(int,int,int,int)),*(struct(*`,*`,int,int,int,char,int)))),*(void),int)->(int)
(	O
RPMBIS_RECORD	struct(*(struct(int,int,int,int)),*(struct(*(char),*(char),int,int,int,char,int)))
*	O
rcd	*(struct(*(struct(int,int,int,int)),*(struct(*(char),*(char),int,int,int,char,int))))
,	O
void	O
*	O
value	int
,	O
int	O
table_id	int
)	O
{	O
int	O
type	int
;	O
int	O
size	long
;	O
if	O
(	O
table_id	int
>=	O
0	int
)	O
{	O
type	int
=	O
rpmbis_i_get_type	(int,int)->(int)
(	O
table_id	int
,	O
rcd	*(struct(*(struct(int,int,int,int)),*(struct(*(char),*(char),int,int,int,char,int))))
->	O
indexM	*(struct(int,int,int,int))
->	O
tag	int
)	O
;	O
if	O
(	O
type	int
!=	O
rcd	*(struct(*(struct(int,int,int,int)),*(struct(*(char),*(char),int,int,int,char,int))))
->	O
indexM	*(struct(int,int,int,int))
->	O
type	int
)	O
{	O
exit	(int)->(void)
(	O
254	int
)	O
;	O
}	O
}	O
else	O
{	O
type	int
=	O
rcd	*(struct(*(struct(int,int,int,int)),*(struct(*(char),*(char),int,int,int,char,int))))
->	O
indexM	*(struct(int,int,int,int))
->	O
type	int
;	O
}	O
return	O
0	int
;	O
}	O
void	O
rpmbis_record_delete	(*(struct(*(struct(int,int,int,int)),*(struct(*`,*`,int,int,int,char,int)))))->(void)
(	O
RPMBIS_RECORD	struct(*(struct(int,int,int,int)),*(struct(*(char),*(char),int,int,int,char,int)))
*	O
rcd	*(struct(*(struct(int,int,int,int)),*(struct(*(char),*(char),int,int,int,char,int))))
)	O
{	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
rcd	*(struct(*(struct(int,int,int,int)),*(struct(*(char),*(char),int,int,int,char,int))))
->	O
tag_valueM	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
rpm_hdrindex_delete	(*(struct(int,int,int,int)))->(void)
(	O
rcd	*(struct(*(struct(int,int,int,int)),*(struct(*(char),*(char),int,int,int,char,int))))
->	O
indexM	*(struct(int,int,int,int))
)	O
;	O
free	(*(void))->(void)
(	O
rcd	*(struct(*(struct(int,int,int,int)),*(struct(*(char),*(char),int,int,int,char,int))))
)	O
;	O
}	O
RPMLEAD	struct(array(char),char,char,short,short,array(char),short,short,array(char))
*	O
rpmbis_rpmlead_create	()->(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))))
(	O
void	O
)	O
{	O
return	O
(	O
RPMLEAD	struct(array(char),char,char,short,short,array(char),short,short,array(char))
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
RPMLEAD	struct(array(char),char,char,short,short,array(char),short,short,array(char))
)	O
)	O
;	O
}	O
void	O
rpmbis_rpmlead_delete	(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))))->(void)
(	O
RPMLEAD	struct(array(char),char,char,short,short,array(char),short,short,array(char))
*	O
rpmlead	struct(array(char),char,char,short,short,array(char),short,short,array(char))
)	O
{	O
free	(*(void))->(void)
(	O
rpmlead	struct(array(char),char,char,short,short,array(char),short,short,array(char))
)	O
;	O
}	O
RPMBIS	struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(*`,*`,int,int)),*(struct(*`,*`,int,int)),*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*`,*`,*`,*`,*`,*`,int,int,int,*`,struct`,*`,*`)))))
*	O
rpmbis_create	()->(*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*`,*`,*`,*`)))))
(	O
void	O
)	O
{	O
RPMBIS	struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(*`,*`,int,int)),*(struct(*`,*`,int,int)),*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*`,*`,*`,*`,*`,*`,int,int,int,*`,struct`,*`,*`)))))
*	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
;	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
=	O
(	O
RPMBIS	struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(*`,*`,int,int)),*(struct(*`,*`,int,int)),*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*`,*`,*`,*`,*`,*`,int,int,int,*`,struct`,*`,*`)))))
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
RPMBIS	struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(*`,*`,int,int)),*(struct(*`,*`,int,int)),*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*`,*`,*`,*`,*`,*`,int,int,int,*`,struct`,*`,*`)))))
)	O
)	O
;	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
h_leadM	*(struct(array(char),char,char,short,short,array(char),short,short,array(char)))
=	O
(	O
RPMLEAD	struct(array(char),char,char,short,short,array(char),short,short,array(char))
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
RPMLEAD	struct(array(char),char,char,short,short,array(char),short,short,array(char))
)	O
)	O
;	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
n_leadM	*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char)))
=	O
(	O
RPM_PX_LEAD	struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
RPM_PX_LEAD	struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))
)	O
)	O
;	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
h_headerM	*(struct(array(char),array(char),int,int))
=	O
(	O
RPM_HSHEADER	struct(array(char),array(char),int,int)
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
RPM_HSHEADER	struct(array(char),array(char),int,int)
)	O
)	O
;	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
n_headerM	*(struct(array(char),array(char),array(char),array(char)))
=	O
(	O
RPM_PX_HSHEADER	struct(array(char),array(char),array(char),array(char))
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
RPM_PX_HSHEADER	struct(array(char),array(char),array(char),array(char))
)	O
)	O
;	O
return	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
;	O
}	O
void	O
rpmbis_delete	(*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*`,*`,*`,*`)))))->(void)
(	O
RPMBIS	struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(*`,*`,int,int)),*(struct(*`,*`,int,int)),*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*`,*`,*`,*`,*`,*`,int,int,int,*`,struct`,*`,*`)))))
*	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
)	O
{	O
free	(*(void))->(void)
(	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
h_leadM	*(struct(array(char),char,char,short,short,array(char),short,short,array(char)))
)	O
;	O
free	(*(void))->(void)
(	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
n_leadM	*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char)))
)	O
;	O
free	(*(void))->(void)
(	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
h_headerM	*(struct(array(char),array(char),int,int))
)	O
;	O
free	(*(void))->(void)
(	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
n_headerM	*(struct(array(char),array(char),array(char),array(char)))
)	O
;	O
free	(*(void))->(void)
(	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
)	O
;	O
}	O
RPMBIS_RPMH	struct(*(struct(array(char),array(char),int,int)),*(struct(*(*(char)),int,int,long,int)),int,int)
*	O
rpmbis_rpmh_create	()->(*(struct(*(struct(array(char),array(char),int,int)),*(struct(*`,int,int,long,int)),int,int)))
(	O
void	O
)	O
{	O
RPMBIS_RPMH	struct(*(struct(array(char),array(char),int,int)),*(struct(*(*(char)),int,int,long,int)),int,int)
*	O
rpmh	*(struct(*(struct(array(char),array(char),int,int)),*(struct(*(*`),int,int,long,int)),int,int))
;	O
rpmh	*(struct(*(struct(array(char),array(char),int,int)),*(struct(*(*`),int,int,long,int)),int,int))
=	O
(	O
RPMBIS_RPMH	struct(*(struct(array(char),array(char),int,int)),*(struct(*(*(char)),int,int,long,int)),int,int)
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
RPMBIS_RPMH	struct(*(struct(array(char),array(char),int,int)),*(struct(*(*(char)),int,int,long,int)),int,int)
)	O
)	O
;	O
rpmh	*(struct(*(struct(array(char),array(char),int,int)),*(struct(*(*`),int,int,long,int)),int,int))
->	O
hshM	*(struct(array(char),array(char),int,int))
=	O
rpmbis_hsh_create	()->(*(struct(array(char),array(char),int,int)))
(	O
)	O
;	O
rpmh	*(struct(*(struct(array(char),array(char),int,int)),*(struct(*(*`),int,int,long,int)),int,int))
->	O
host_recordsM	*(struct(*(*(char)),int,int,long,int))
=	O
cplob_open	(int)->(*(struct(*(*(char)),int,int,long,int)))
(	O
12	int
)	O
;	O
rpmh	*(struct(*(struct(array(char),array(char),int,int)),*(struct(*(*`),int,int,long,int)),int,int))
->	O
hdrindex_fdM	int
=	O
swlib_open_memfd	()->(int)
(	O
)	O
;	O
rpmh	*(struct(*(struct(array(char),array(char),int,int)),*(struct(*(*`),int,int,long,int)),int,int))
->	O
store_fdM	int
=	O
swlib_open_memfd	()->(int)
(	O
)	O
;	O
return	O
rpmh	*(struct(*(struct(array(char),array(char),int,int)),*(struct(*(*`),int,int,long,int)),int,int))
;	O
}	O
void	O
rpmbis_rpmh_delete	(*(struct(*(struct(array(char),array(char),int,int)),*(struct(*`,int,int,long,int)),int,int)))->(void)
(	O
RPMBIS_RPMH	struct(*(struct(array(char),array(char),int,int)),*(struct(*(*(char)),int,int,long,int)),int,int)
*	O
rpmh	*(struct(*(struct(array(char),array(char),int,int)),*(struct(*(*`),int,int,long,int)),int,int))
)	O
{	O
uxfio_close	(int)->(int)
(	O
rpmh	*(struct(*(struct(array(char),array(char),int,int)),*(struct(*(*`),int,int,long,int)),int,int))
->	O
store_fdM	int
)	O
;	O
uxfio_close	(int)->(int)
(	O
rpmh	*(struct(*(struct(array(char),array(char),int,int)),*(struct(*(*`),int,int,long,int)),int,int))
->	O
hdrindex_fdM	int
)	O
;	O
free	(*(void))->(void)
(	O
rpmh	*(struct(*(struct(array(char),array(char),int,int)),*(struct(*(*`),int,int,long,int)),int,int))
)	O
;	O
}	O
RPM_HSHEADER	struct(array(char),array(char),int,int)
*	O
rpm_hsh_create	()->(*(struct(array(char),array(char),int,int)))
(	O
void	O
)	O
{	O
RPM_HSHEADER	struct(array(char),array(char),int,int)
*	O
hsh	*(struct(array(char),array(char),int,int))
;	O
hsh	*(struct(array(char),array(char),int,int))
=	O
(	O
RPM_HSHEADER	struct(array(char),array(char),int,int)
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
RPM_HSHEADER	struct(array(char),array(char),int,int)
)	O
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
(	O
hsh	*(struct(array(char),array(char),int,int))
->	O
magic	array(char)
)	O
,	O
RPM_HEADER_MAGIC	*(char)
,	O
4	int
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
hsh	*(struct(array(char),array(char),int,int))
->	O
reserved	array(char)
,	O
'\0'	O
,	O
4	int
)	O
;	O
hsh	*(struct(array(char),array(char),int,int))
->	O
nindex	int
=	O
0	int
;	O
hsh	*(struct(array(char),array(char),int,int))
->	O
hsize	int
=	O
0	int
;	O
return	O
hsh	*(struct(array(char),array(char),int,int))
;	O
}	O
void	O
rpm_hsh_delete	(*(struct(array(char),array(char),int,int)))->(void)
(	O
RPM_HSHEADER	struct(array(char),array(char),int,int)
*	O
hsh	*(struct(array(char),array(char),int,int))
)	O
{	O
free	(*(void))->(void)
(	O
hsh	*(struct(array(char),array(char),int,int))
)	O
;	O
}	O
int	O
rpmbis_ntoh_lead	(*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*`,*`,*`,*`)))),*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))))->(int)
(	O
RPMBIS	struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(*`,*`,int,int)),*(struct(*`,*`,int,int)),*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*`,*`,*`,*`,*`,*`,int,int,int,*`,struct`,*`,*`)))))
*	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
,	O
RPMLEAD	struct(array(char),char,char,short,short,array(char),short,short,array(char))
*	O
dst	*(char)
,	O
RPM_PX_LEAD	struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))
*	O
src	*(char)
)	O
{	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
dst	*(char)
,	O
src	*(char)
,	O
RPM_LEAD_SIZE	int
)	O
;	O
return	O
0	int
;	O
}	O
int	O
rpmbis_ntoh_header	(*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*`,*`,*`,*`)))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))))->(int)
(	O
RPMBIS	struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(*`,*`,int,int)),*(struct(*`,*`,int,int)),*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*`,*`,*`,*`,*`,*`,int,int,int,*`,struct`,*`,*`)))))
*	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
,	O
RPM_HSHEADER	struct(array(char),array(char),int,int)
*	O
dst	*(char)
,	O
RPM_PX_HSHEADER	struct(array(char),array(char),array(char),array(char))
*	O
src	*(char)
)	O
{	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
(	O
dst	*(char)
->	O
magic	array(char)
)	O
,	O
&	O
(	O
src	*(char)
->	O
px_magic	array(char)
)	O
,	O
sizeof	O
(	O
src	*(char)
->	O
px_magic	array(char)
)	O
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
(	O
dst	*(char)
->	O
reserved	array(char)
)	O
,	O
&	O
(	O
src	*(char)
->	O
px_reserved	array(char)
)	O
,	O
sizeof	O
(	O
src	*(char)
->	O
px_reserved	array(char)
)	O
)	O
;	O
dst	*(char)
->	O
nindex	int
=	O
(	O
int	O
)	O
ntohl	(int)->(int)
(	O
*	O
(	O
(	O
uint32_t	int
*	O
)	O
(	O
src	*(char)
->	O
px_nindex	array(char)
)	O
)	O
)	O
;	O
dst	*(char)
->	O
hsize	int
=	O
(	O
int	O
)	O
ntohl	(int)->(int)
(	O
*	O
(	O
(	O
uint32_t	int
*	O
)	O
(	O
src	*(char)
->	O
px_hsize	array(char)
)	O
)	O
)	O
;	O
return	O
0	int
;	O
}	O
int	O
rpmbis_hton_header	(*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*`,*`,*`,*`)))),*(struct(array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)))->(int)
(	O
RPMBIS	struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(*`,*`,int,int)),*(struct(*`,*`,int,int)),*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*`,*`,*`,*`,*`,*`,int,int,int,*`,struct`,*`,*`)))))
*	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
,	O
RPM_PX_HSHEADER	struct(array(char),array(char),array(char),array(char))
*	O
dst	*(char)
,	O
RPM_HSHEADER	struct(array(char),array(char),int,int)
*	O
src	*(char)
)	O
{	O
uint32_t	int
tmp	*(struct(*(char),*(char),int,int,int,char,int))
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
(	O
dst	*(char)
->	O
px_magic	array(char)
)	O
,	O
&	O
(	O
src	*(char)
->	O
magic	array(char)
)	O
,	O
sizeof	O
(	O
src	*(char)
->	O
magic	array(char)
)	O
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
(	O
dst	*(char)
->	O
px_reserved	array(char)
)	O
,	O
&	O
(	O
src	*(char)
->	O
magic	array(char)
)	O
,	O
sizeof	O
(	O
src	*(char)
->	O
reserved	array(char)
)	O
)	O
;	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
=	O
htonl	(int)->(int)
(	O
(	O
uint32_t	int
)	O
src	*(char)
->	O
nindex	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
(	O
dst	*(char)
->	O
px_nindex	array(char)
)	O
,	O
&	O
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
,	O
sizeof	O
(	O
uint32_t	int
)	O
)	O
;	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
=	O
htonl	(int)->(int)
(	O
(	O
uint32_t	int
)	O
src	*(char)
->	O
hsize	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
(	O
dst	*(char)
->	O
px_hsize	array(char)
)	O
,	O
&	O
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
,	O
sizeof	O
(	O
uint32_t	int
)	O
)	O
;	O
return	O
0	int
;	O
}	O
int	O
rpmbis_hton_hdrindex	(*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*`,*`,*`,*`)))),*(struct(array(char),array(char),array(char),array(char))),*(struct(int,int,int,int)))->(int)
(	O
RPMBIS	struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(*`,*`,int,int)),*(struct(*`,*`,int,int)),*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*`,*`,*`,*`,*`,*`,int,int,int,*`,struct`,*`,*`)))))
*	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
,	O
RPM_PX_HDRINDEX	struct(array(char),array(char),array(char),array(char))
*	O
dst	*(char)
,	O
RPMHDRINDEX	struct(int,int,int,int)
*	O
src	*(char)
)	O
{	O
uint32_t	int
tmp	*(struct(*(char),*(char),int,int,int,char,int))
;	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
=	O
htonl	(int)->(int)
(	O
(	O
uint32_t	int
)	O
src	*(char)
->	O
tag	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
(	O
dst	*(char)
->	O
px_tag	array(char)
)	O
,	O
&	O
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
,	O
sizeof	O
(	O
uint32_t	int
)	O
)	O
;	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
=	O
htonl	(int)->(int)
(	O
(	O
uint32_t	int
)	O
src	*(char)
->	O
type	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
(	O
dst	*(char)
->	O
px_type	array(char)
)	O
,	O
&	O
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
,	O
sizeof	O
(	O
uint32_t	int
)	O
)	O
;	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
=	O
htonl	(int)->(int)
(	O
(	O
uint32_t	int
)	O
src	*(char)
->	O
offset	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
(	O
dst	*(char)
->	O
px_offset	array(char)
)	O
,	O
&	O
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
,	O
sizeof	O
(	O
uint32_t	int
)	O
)	O
;	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
=	O
htonl	(int)->(int)
(	O
(	O
uint32_t	int
)	O
src	*(char)
->	O
count	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
(	O
dst	*(char)
->	O
px_count	array(char)
)	O
,	O
&	O
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
,	O
sizeof	O
(	O
uint32_t	int
)	O
)	O
;	O
return	O
0	int
;	O
}	O
int	O
rpmbis_ntoh_hdrindex	(*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*`,*`,*`,*`)))),*(struct(int,int,int,int)),*(struct(array(char),array(char),array(char),array(char))))->(int)
(	O
RPMBIS	struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(*`,*`,int,int)),*(struct(*`,*`,int,int)),*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*`,*`,*`,*`,*`,*`,int,int,int,*`,struct`,*`,*`)))))
*	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
,	O
RPMHDRINDEX	struct(int,int,int,int)
*	O
dst	*(char)
,	O
RPM_PX_HDRINDEX	struct(array(char),array(char),array(char),array(char))
*	O
src	*(char)
)	O
{	O
dst	*(char)
->	O
tag	int
=	O
(	O
int	O
)	O
ntohl	(int)->(int)
(	O
*	O
(	O
(	O
uint32_t	int
*	O
)	O
(	O
src	*(char)
->	O
px_tag	array(char)
)	O
)	O
)	O
;	O
dst	*(char)
->	O
type	int
=	O
(	O
int	O
)	O
ntohl	(int)->(int)
(	O
*	O
(	O
(	O
uint32_t	int
*	O
)	O
(	O
src	*(char)
->	O
px_type	array(char)
)	O
)	O
)	O
;	O
dst	*(char)
->	O
offset	int
=	O
(	O
int	O
)	O
ntohl	(int)->(int)
(	O
*	O
(	O
(	O
uint32_t	int
*	O
)	O
(	O
src	*(char)
->	O
px_offset	array(char)
)	O
)	O
)	O
;	O
dst	*(char)
->	O
count	int
=	O
(	O
int	O
)	O
ntohl	(int)->(int)
(	O
*	O
(	O
(	O
uint32_t	int
*	O
)	O
(	O
src	*(char)
->	O
px_count	array(char)
)	O
)	O
)	O
;	O
return	O
0	int
;	O
}	O
int	O
rpmbis_io_write_lead	(*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*`,*`,*`,*`)))),int)->(int)
(	O
RPMBIS	struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(*`,*`,int,int)),*(struct(*`,*`,int,int)),*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*`,*`,*`,*`,*`,*`,int,int,int,*`,struct`,*`,*`)))))
*	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
,	O
int	O
ofd	int
)	O
{	O
int	O
ret	int
;	O
rpmbis_px_lead_init	(*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))))->(void)
(	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
n_leadM	*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char)))
)	O
;	O
ret	int
=	O
atomicio	(*((int,*(void),long)->(long)),int,*(void),long)->(long)
(	O
(	O
ssize_t	long
(	O
*	O
)	O
(	O
int	O
,	O
void	O
*	O
,	O
size_t	long
)	O
)	O
(	O
write	(int,*(void),long)->(long)
)	O
,	O
ofd	int
,	O
(	O
void	O
*	O
)	O
(	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
n_leadM	*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char)))
)	O
,	O
RPM_LEAD_SIZE	int
)	O
;	O
if	O
(	O
ret	int
!=	O
RPM_LEAD_SIZE	int
)	O
return	O
-	O
1	int
;	O
return	O
ret	int
;	O
}	O
int	O
rpmbis_io_read_lead	(*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*`,*`,*`,*`)))),int)->(int)
(	O
RPMBIS	struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(*`,*`,int,int)),*(struct(*`,*`,int,int)),*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*`,*`,*`,*`,*`,*`,int,int,int,*`,struct`,*`,*`)))))
*	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
,	O
int	O
ifd	int
)	O
{	O
int	O
ret	int
;	O
ret	int
=	O
uxfio_unix_safe_atomic_read	(int,*(void),long)->(long)
(	O
ifd	int
,	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
n_leadM	*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char)))
,	O
RPM_LEAD_SIZE	int
)	O
;	O
if	O
(	O
ret	int
!=	O
RPM_LEAD_SIZE	int
)	O
return	O
-	O
1	int
;	O
rpmbis_ntoh_lead	(*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*`,*`,*`,*`)))),*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))))->(int)
(	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
,	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
h_leadM	*(struct(array(char),char,char,short,short,array(char),short,short,array(char)))
,	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
n_leadM	*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char)))
)	O
;	O
return	O
ret	int
;	O
}	O
int	O
rpmbis_io_read_header	(*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*`,*`,*`,*`)))),int)->(int)
(	O
RPMBIS	struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(*`,*`,int,int)),*(struct(*`,*`,int,int)),*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*`,*`,*`,*`,*`,*`,int,int,int,*`,struct`,*`,*`)))))
*	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
,	O
int	O
ifd	int
)	O
{	O
int	O
ret	int
;	O
ret	int
=	O
uxfio_unix_safe_atomic_read	(int,*(void),long)->(long)
(	O
ifd	int
,	O
(	O
void	O
*	O
)	O
(	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
n_headerM	*(struct(array(char),array(char),array(char),array(char)))
)	O
,	O
RPM_HEADER_SIZE	int
)	O
;	O
if	O
(	O
ret	int
!=	O
RPM_HEADER_SIZE	int
)	O
return	O
-	O
1	int
;	O
rpmbis_ntoh_header	(*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*`,*`,*`,*`)))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))))->(int)
(	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
,	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
h_headerM	*(struct(array(char),array(char),int,int))
,	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
n_headerM	*(struct(array(char),array(char),array(char),array(char)))
)	O
;	O
return	O
ret	int
;	O
}	O
int	O
rpmbis_io_write_header	(*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*`,*`,*`,*`)))),int)->(int)
(	O
RPMBIS	struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(*`,*`,int,int)),*(struct(*`,*`,int,int)),*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*`,*`,*`,*`,*`,*`,int,int,int,*`,struct`,*`,*`)))))
*	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
,	O
int	O
ofd	int
)	O
{	O
int	O
ret	int
;	O
ret	int
=	O
rpmbis_hton_header	(*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*`,*`,*`,*`)))),*(struct(array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)))->(int)
(	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
,	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
n_headerM	*(struct(array(char),array(char),array(char),array(char)))
,	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
h_headerM	*(struct(array(char),array(char),int,int))
)	O
;	O
if	O
(	O
ret	int
)	O
return	O
-	O
1	int
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
(	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
n_headerM	*(struct(array(char),array(char),array(char),array(char)))
->	O
px_magic	array(char)
)	O
,	O
RPM_HEADER_MAGIC	*(char)
,	O
sizeof	O
(	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
n_headerM	*(struct(array(char),array(char),array(char),array(char)))
->	O
px_magic	array(char)
)	O
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
(	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
n_headerM	*(struct(array(char),array(char),array(char),array(char)))
->	O
px_reserved	array(char)
)	O
,	O
'\0'	O
,	O
sizeof	O
(	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
n_headerM	*(struct(array(char),array(char),array(char),array(char)))
->	O
px_reserved	array(char)
)	O
)	O
;	O
ret	int
=	O
atomicio	(*((int,*(void),long)->(long)),int,*(void),long)->(long)
(	O
(	O
ssize_t	long
(	O
*	O
)	O
(	O
int	O
,	O
void	O
*	O
,	O
size_t	long
)	O
)	O
(	O
write	(int,*(void),long)->(long)
)	O
,	O
ofd	int
,	O
(	O
void	O
*	O
)	O
(	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
n_headerM	*(struct(array(char),array(char),array(char),array(char)))
)	O
,	O
RPM_HEADER_SIZE	int
)	O
;	O
if	O
(	O
ret	int
!=	O
RPM_HEADER_SIZE	int
)	O
return	O
-	O
1	int
;	O
return	O
RPM_HEADER_SIZE	int
;	O
}	O
int	O
rpmbis_io_read_hdrindexes	(*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*`,*`,*`,*`)))),int)->(int)
(	O
RPMBIS	struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(*`,*`,int,int)),*(struct(*`,*`,int,int)),*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*`,*`,*`,*`,*`,*`,int,int,int,*`,struct`,*`,*`)))))
*	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
,	O
int	O
ofd	int
)	O
{	O
int	O
nhdrs	int
;	O
RPMHDRINDEX	struct(int,int,int,int)
hdrindex	*(struct(int,int,int,int))
;	O
RPM_PX_HDRINDEX	struct(array(char),array(char),array(char),array(char))
*	O
px_hdrindex	*(struct(array(char),array(char),array(char),array(char)))
;	O
nhdrs	int
=	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
h_headerM	*(struct(array(char),array(char),int,int))
->	O
nindex	int
;	O
return	O
0	int
;	O
}	O
int	O
rpmbis_io_write_hdrindexes	(*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*`,*`,*`,*`)))),int)->(int)
(	O
RPMBIS	struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(*`,*`,int,int)),*(struct(*`,*`,int,int)),*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*`,*`,*`,*`,*`,*`,int,int,int,*`,struct`,*`,*`)))))
*	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
,	O
int	O
ofd	int
)	O
{	O
return	O
0	int
;	O
}	O
int	O
rpmbis_io_write_blob	(*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*`,*`,*`,*`)))),int)->(int)
(	O
RPMBIS	struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(*`,*`,int,int)),*(struct(*`,*`,int,int)),*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*`,*`,*`,*`,*`,*`,int,int,int,*`,struct`,*`,*`)))))
*	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
,	O
int	O
ofd	int
)	O
{	O
int	O
ret	int
;	O
int	O
retval	int
;	O
retval	int
=	O
0	int
;	O
ret	int
=	O
rpmbis_io_write_lead	(*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*`,*`,*`,*`)))),int)->(int)
(	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
,	O
ofd	int
)	O
;	O
if	O
(	O
ret	int
<=	O
0	int
)	O
{	O
return	O
-	O
1	int
;	O
}	O
retval	int
+=	O
ret	int
;	O
ret	int
=	O
rpmbis_io_write_header	(*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*`,*`,*`,*`)))),int)->(int)
(	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
,	O
ofd	int
)	O
;	O
if	O
(	O
ret	int
<=	O
0	int
)	O
{	O
return	O
-	O
1	int
;	O
}	O
retval	int
+=	O
ret	int
;	O
ret	int
=	O
rpmbis_io_write_hdrindexes	(*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*`,*`,*`,*`)))),int)->(int)
(	O
rpmbis	*(struct(*(struct(array(char),char,char,short,short,array(char),short,short,array(char))),*(struct(array(char),char,char,array(char),array(char),array(char),array(char),array(char),array(char))),*(struct(array(char),array(char),int,int)),*(struct(array(char),array(char),array(char),array(char))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
,	O
ofd	int
)	O
;	O
if	O
(	O
ret	int
<=	O
0	int
)	O
{	O
return	O
-	O
1	int
;	O
}	O
retval	int
+=	O
ret	int
;	O
return	O
retval	int
;	O
}	O
