int	O
VFontWidthPixels	(*(struct(*(struct(*`,long,*`,int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*`,int,short,short,short,short,int,struct`,*`,*`,*`,*`,*`,*`,int,int,int,*`,int,int,*`,int,int,*`,int,int)),long,long,struct(array(array(double))),*(struct(short,short,short,struct`,*`,*`,*`,double)),array(struct(double,double,double)),double,double,double,double,int,int,struct(short,short),struct(double,double,double),*(struct),int,long,long,long,*(struct),array(long),int,int,long,long,long,*(short),*(short),array(short),struct(long,short,short,short,char,char),array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*(struct(*`,long,int,long,long,long,int,int)),*(struct(short,long,*`,*`)),long,long,*(()->(void)),*((*`,long,*`)->(int)),*((*`,int,int,int,int,short)->(void)),*((*`,*`,int,short)->(void)),*((*`,long,*`,*`)->(void)),*((*`,int,int,int,int,short)->(void)),*((*`,*`)->(void)),*((*`,int,int,int,int)->(void)),*((*`)->(void)),long)),int)->(int)
(	O
Viewport	struct(*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*`,*`,int)),*(struct(*`,*`,int)),*(struct(*`,*`,int)),*(struct(*`)),*(struct(*`)),*(struct(short,long,long,*`,*`,*`)),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int)),long,long,struct(array(array(double))),*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*`,short,short,*`)),*(struct(*`,short,short,*`)),double)),array(struct(double,double,double)),double,double,double,double,int,int,struct(short,short),struct(double,double,double),*(struct),int,long,long,long,*(struct),array(long),int,int,long,long,long,*(short),*(short),array(short),struct(long,short,short,short,char,char),array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*(struct(*(struct(int,*`,*`,*`)),long,int,long,long,long,int,int)),*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),long,long,*(()->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),long,*(struct(long,short,short,short,char,char)))->(int)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),int,int,int,int,short)->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),*(struct(short,short,short,short)),int,short)->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),long,*(struct),*(struct(short,short,short,struct`,*`,*`,*`,double)))->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),int,int,int,int,short)->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),*(struct))->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),int,int,int,int)->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)))->(void)),long)
*	O
v	struct(double,double,double)
,	O
int	O
scale	int
)	O
{	O
return	O
VRomanGlyph	array(struct(short,short,short))
[	O
'A'	O
]	O
.	O
glyph_width	short
*	O
scale	int
/	O
25600	int
;	O
}	O
void	O
VDrawStrokeString	(*(struct(*(struct(*`,long,*`,int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*`,int,short,short,short,short,int,struct`,*`,*`,*`,*`,*`,*`,int,int,int,*`,int,int,*`,int,int,*`,int,int)),long,long,struct(array(array(double))),*(struct(short,short,short,struct`,*`,*`,*`,double)),array(struct(double,double,double)),double,double,double,double,int,int,struct(short,short),struct(double,double,double),*(struct),int,long,long,long,*(struct),array(long),int,int,long,long,long,*(short),*(short),array(short),struct(long,short,short,short,char,char),array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*(struct(*`,long,int,long,long,long,int,int)),*(struct(short,long,*`,*`)),long,long,*(()->(void)),*((*`,long,*`)->(int)),*((*`,int,int,int,int,short)->(void)),*((*`,*`,int,short)->(void)),*((*`,long,*`,*`)->(void)),*((*`,int,int,int,int,short)->(void)),*((*`,*`)->(void)),*((*`,int,int,int,int)->(void)),*((*`)->(void)),long)),int,int,*(char),int,int,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))))->(void)
(	O
Viewport	struct(*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*`,*`,int)),*(struct(*`,*`,int)),*(struct(*`,*`,int)),*(struct(*`)),*(struct(*`)),*(struct(short,long,long,*`,*`,*`)),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int)),long,long,struct(array(array(double))),*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*`,short,short,*`)),*(struct(*`,short,short,*`)),double)),array(struct(double,double,double)),double,double,double,double,int,int,struct(short,short),struct(double,double,double),*(struct),int,long,long,long,*(struct),array(long),int,int,long,long,long,*(short),*(short),array(short),struct(long,short,short,short,char,char),array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*(struct(*(struct(int,*`,*`,*`)),long,int,long,long,long,int,int)),*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),long,long,*(()->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),long,*(struct(long,short,short,short,char,char)))->(int)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),int,int,int,int,short)->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),*(struct(short,short,short,short)),int,short)->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),long,*(struct),*(struct(short,short,short,struct`,*`,*`,*`,double)))->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),int,int,int,int,short)->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),*(struct))->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),int,int,int,int)->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)))->(void)),long)
*	O
v	struct(double,double,double)
,	O
int	O
x	double
,	O
int	O
y	double
,	O
unsigned	O
char	O
*	O
str	*(char)
,	O
int	O
len	int
,	O
int	O
scale	int
,	O
ZInfo	struct(short,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))))
*	O
zinfo	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
)	O
{	O
register	O
int	O
c	*(struct(long,short,short,short,char,char))
,	O
i	int
,	O
k	int
,	O
m	array(array(double))
;	O
register	O
VGlyphVertex	struct(short,short)
*	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
;	O
register	O
int	O
x1	short
,	O
y1	(double)->(double)
,	O
x2	short
,	O
y2	short
;	O
for	O
(	O
;	O
len	int
>	O
0	int
;	O
--	O
len	int
)	O
{	O
if	O
(	O
(	O
c	*(struct(long,short,short,short,char,char))
=	O
*	O
str	*(char)
++	O
)	O
<	O
128	int
)	O
{	O
k	int
=	O
VRomanGlyph	array(struct(short,short,short))
[	O
c	*(struct(long,short,short,short,char,char))
]	O
.	O
path_start	short
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
VRomanGlyph	array(struct(short,short,short))
[	O
c	*(struct(long,short,short,short,char,char))
]	O
.	O
path_count	short
;	O
++	O
i	int
,	O
++	O
k	int
)	O
{	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
=	O
&	O
VRomanVertex	array(struct(short,short))
[	O
VRomanPath	array(struct(short,short))
[	O
k	int
]	O
.	O
vertex_start	short
]	O
;	O
x1	short
=	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
x	double
*	O
scale	int
/	O
25600	int
+	O
x	double
;	O
y1	(double)->(double)
=	O
y	double
-	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
y	double
*	O
scale	int
/	O
25600	int
;	O
++	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
;	O
for	O
(	O
m	array(array(double))
=	O
1	int
;	O
m	array(array(double))
<	O
VRomanPath	array(struct(short,short))
[	O
k	int
]	O
.	O
vertex_count	short
;	O
++	O
m	array(array(double))
,	O
++	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
)	O
{	O
x2	short
=	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
x	double
*	O
scale	int
/	O
25600	int
+	O
x	double
;	O
y2	short
=	O
y	double
-	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
y	double
*	O
scale	int
/	O
25600	int
;	O
v	struct(double,double,double)
->	O
DrawLine	(*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*`,*`,int)),*(struct(*`,*`,int)),*(struct(*`,*`,int)),*(struct(*`)),*(struct(*`)),*(struct(short,long,long,*`,*`,*`)),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int)),int,int,int,int,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))))->(void)
(	O
v	struct(double,double,double)
,	O
x1	short
,	O
y1	(double)->(double)
,	O
x2	short
,	O
y2	short
,	O
zinfo	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
color	*(struct(*(char),short,short,*(struct(*(char),short,short,*(struct`)))))
)	O
;	O
x1	short
=	O
x2	short
;	O
y1	(double)->(double)
=	O
y2	short
;	O
}	O
}	O
x	double
+=	O
VRomanGlyph	array(struct(short,short,short))
[	O
c	*(struct(long,short,short,short,char,char))
]	O
.	O
glyph_width	short
*	O
scale	int
/	O
25600	int
;	O
}	O
}	O
}	O
void	O
VGetStrokeString	(*(struct(*(struct(*`,long,*`,int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*`,int,short,short,short,short,int,struct`,*`,*`,*`,*`,*`,*`,int,int,int,*`,int,int,*`,int,int,*`,int,int)),long,long,struct(array(array(double))),*(struct(short,short,short,struct`,*`,*`,*`,double)),array(struct(double,double,double)),double,double,double,double,int,int,struct(short,short),struct(double,double,double),*(struct),int,long,long,long,*(struct),array(long),int,int,long,long,long,*(short),*(short),array(short),struct(long,short,short,short,char,char),array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*(struct(*`,long,int,long,long,long,int,int)),*(struct(short,long,*`,*`)),long,long,*(()->(void)),*((*`,long,*`)->(int)),*((*`,int,int,int,int,short)->(void)),*((*`,*`,int,short)->(void)),*((*`,long,*`,*`)->(void)),*((*`,int,int,int,int,short)->(void)),*((*`,*`)->(void)),*((*`,int,int,int,int)->(void)),*((*`)->(void)),long)),int,int,*(struct(short,short,short,short)),*(int),*(char),int,int)->(void)
(	O
Viewport	struct(*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*`,*`,int)),*(struct(*`,*`,int)),*(struct(*`,*`,int)),*(struct(*`)),*(struct(*`)),*(struct(short,long,long,*`,*`,*`)),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int)),long,long,struct(array(array(double))),*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*`,short,short,*`)),*(struct(*`,short,short,*`)),double)),array(struct(double,double,double)),double,double,double,double,int,int,struct(short,short),struct(double,double,double),*(struct),int,long,long,long,*(struct),array(long),int,int,long,long,long,*(short),*(short),array(short),struct(long,short,short,short,char,char),array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*(struct(*(struct(int,*`,*`,*`)),long,int,long,long,long,int,int)),*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),long,long,*(()->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),long,*(struct(long,short,short,short,char,char)))->(int)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),int,int,int,int,short)->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),*(struct(short,short,short,short)),int,short)->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),long,*(struct),*(struct(short,short,short,struct`,*`,*`,*`,double)))->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),int,int,int,int,short)->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),*(struct))->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),int,int,int,int)->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)))->(void)),long)
*	O
v	struct(double,double,double)
,	O
int	O
x	double
,	O
int	O
y	double
,	O
Segment	struct(short,short,short,short)
*	O
seg	*(struct(short,short,short,short))
,	O
int	O
*	O
nseg	int
,	O
unsigned	O
char	O
*	O
str	*(char)
,	O
int	O
len	int
,	O
int	O
scale	int
)	O
{	O
register	O
int	O
c	*(struct(long,short,short,short,char,char))
,	O
i	int
,	O
k	int
,	O
m	array(array(double))
,	O
count	int
;	O
register	O
VGlyphVertex	struct(short,short)
*	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
;	O
register	O
int	O
x1	short
,	O
y1	(double)->(double)
,	O
x2	short
,	O
y2	short
;	O
Segment	struct(short,short,short,short)
*	O
pseg	*(struct(short,short,short,short))
;	O
count	int
=	O
*	O
nseg	int
;	O
for	O
(	O
;	O
len	int
>	O
0	int
;	O
--	O
len	int
)	O
{	O
if	O
(	O
(	O
c	*(struct(long,short,short,short,char,char))
=	O
*	O
str	*(char)
++	O
)	O
<	O
128	int
)	O
{	O
k	int
=	O
VRomanGlyph	array(struct(short,short,short))
[	O
c	*(struct(long,short,short,short,char,char))
]	O
.	O
path_start	short
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
VRomanGlyph	array(struct(short,short,short))
[	O
c	*(struct(long,short,short,short,char,char))
]	O
.	O
path_count	short
;	O
++	O
i	int
,	O
++	O
k	int
)	O
{	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
=	O
&	O
VRomanVertex	array(struct(short,short))
[	O
VRomanPath	array(struct(short,short))
[	O
k	int
]	O
.	O
vertex_start	short
]	O
;	O
x1	short
=	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
x	double
*	O
scale	int
/	O
25600	int
+	O
x	double
;	O
y1	(double)->(double)
=	O
y	double
-	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
y	double
*	O
scale	int
/	O
25600	int
;	O
++	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
;	O
for	O
(	O
m	array(array(double))
=	O
1	int
;	O
m	array(array(double))
<	O
VRomanPath	array(struct(short,short))
[	O
k	int
]	O
.	O
vertex_count	short
;	O
++	O
m	array(array(double))
,	O
++	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
)	O
{	O
x2	short
=	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
x	double
*	O
scale	int
/	O
25600	int
+	O
x	double
;	O
y2	short
=	O
y	double
-	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
y	double
*	O
scale	int
/	O
25600	int
;	O
pseg	*(struct(short,short,short,short))
=	O
&	O
seg	*(struct(short,short,short,short))
[	O
count	int
++	O
]	O
;	O
pseg	*(struct(short,short,short,short))
->	O
x1	short
=	O
x1	short
;	O
pseg	*(struct(short,short,short,short))
->	O
x2	short
=	O
x2	short
;	O
pseg	*(struct(short,short,short,short))
->	O
y1	(double)->(double)
=	O
y1	(double)->(double)
;	O
pseg	*(struct(short,short,short,short))
->	O
y2	short
=	O
y2	short
;	O
x1	short
=	O
x2	short
;	O
y1	(double)->(double)
=	O
y2	short
;	O
}	O
}	O
x	double
+=	O
VRomanGlyph	array(struct(short,short,short))
[	O
c	*(struct(long,short,short,short,char,char))
]	O
.	O
glyph_width	short
*	O
scale	int
/	O
25600	int
;	O
}	O
}	O
*	O
nseg	int
=	O
count	int
;	O
}	O
