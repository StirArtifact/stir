mu_msgset_format_t	*(struct(*(char),*(char),*(char),*(char)))
format	*(char)
=	O
mu_msgset_fmt_imap	O
;	O
static	O
void	O
parse_msgrange	(*(char),*(struct(long,long)))->(void)
(	O
char	O
*	O
arg	*(char)
,	O
struct	O
mu_msgrange	struct(long,long)
*	O
range	*(char)
)	O
{	O
size_t	long
msgnum	long
;	O
char	O
*	O
p	*(char)
;	O
errno	O
=	O
0	int
;	O
msgnum	long
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
arg	*(char)
,	O
&	O
p	*(char)
,	O
10	int
)	O
;	O
range	*(char)
->	O
msg_beg	long
=	O
msgnum	long
;	O
if	O
(	O
*	O
p	*(char)
==	O
':'	O
)	O
{	O
if	O
(	O
*	O
++	O
p	*(char)
==	O
'*'	O
)	O
msgnum	long
=	O
0	int
;	O
else	O
{	O
msgnum	long
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
p	*(char)
,	O
&	O
p	*(char)
,	O
10	int
)	O
;	O
if	O
(	O
*	O
p	*(char)
)	O
{	O
mu_error	(*(char))->(int)
(	O
"error in message range near %s"	*(char)
,	O
p	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
}	O
}	O
else	O
if	O
(	O
*	O
p	*(char)
==	O
'*'	O
)	O
msgnum	long
=	O
0	int
;	O
else	O
if	O
(	O
*	O
p	*(char)
)	O
{	O
mu_error	(*(char))->(int)
(	O
"error in message range near %s"	*(char)
,	O
p	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
range	*(char)
->	O
msg_end	long
=	O
msgnum	long
;	O
}	O
mu_msgset_t	*(struct)
parse_msgset	(*(char))->(*(struct))
(	O
const	O
char	O
*	O
arg	*(char)
)	O
{	O
int	O
rc	int
;	O
mu_msgset_t	*(struct)
msgset	*(struct)
;	O
char	O
*	O
end	struct(*(char),int,int)
;	O
MU_ASSERT	O
(	O
mu_msgset_create	(*(*(struct)),*(struct),int)->(int)
(	O
&	O
msgset	*(struct)
,	O
NULL	O
,	O
MU_MSGSET_NUM	int
)	O
)	O
;	O
if	O
(	O
arg	*(char)
)	O
{	O
rc	int
=	O
mu_msgset_parse_imap	(*(struct),int,*(char),*(*(char)))->(int)
(	O
msgset	*(struct)
,	O
MU_MSGSET_NUM	int
,	O
arg	*(char)
,	O
&	O
end	struct(*(char),int,int)
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_error	(*(char))->(int)
(	O
"mu_msgset_parse_imap: %s near %s"	*(char)
,	O
mu_strerror	(int)->(*(char))
(	O
rc	int
)	O
,	O
end	struct(*(char),int,int)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
}	O
return	O
msgset	*(struct)
;	O
}	O
static	O
void	O
print_all	(*(struct))->(void)
(	O
mu_msgset_t	*(struct)
msgset	*(struct)
)	O
{	O
MU_ASSERT	O
(	O
mu_stream_msgset_format	(*(struct),*(struct(*(char),*(char),*(char),*(char))),*(struct))->(int)
(	O
mu_strout	*(struct)
,	O
format	*(char)
,	O
msgset	*(struct)
)	O
)	O
;	O
mu_printf	(*(char))->(int)
(	O
"\n"	*(char)
)	O
;	O
}	O
static	O
void	O
print_first	(*(struct))->(void)
(	O
mu_msgset_t	*(struct)
msgset	*(struct)
)	O
{	O
size_t	long
n	*(long)
;	O
MU_ASSERT	O
(	O
mu_msgset_first	(*(struct),*(long))->(int)
(	O
msgset	*(struct)
,	O
&	O
n	*(long)
)	O
)	O
;	O
printf	(*(char))->(int)
(	O
"%zu\n"	*(char)
,	O
n	*(long)
)	O
;	O
}	O
static	O
void	O
print_last	(*(struct))->(void)
(	O
mu_msgset_t	*(struct)
msgset	*(struct)
)	O
{	O
size_t	long
n	*(long)
;	O
MU_ASSERT	O
(	O
mu_msgset_last	(*(struct),*(long))->(int)
(	O
msgset	*(struct)
,	O
&	O
n	*(long)
)	O
)	O
;	O
printf	(*(char))->(int)
(	O
"%zu\n"	*(char)
,	O
n	*(long)
)	O
;	O
}	O
int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
int	O
i	long
;	O
char	O
*	O
msgset_string	*(char)
=	O
NULL	O
;	O
mu_msgset_t	*(struct)
msgset	*(struct)
;	O
void	O
(	O
*	O
print	*((*(struct))->(void))
)	O
(	O
mu_msgset_t	*(struct)
)	O
=	O
print_all	(*(struct))->(void)
;	O
mu_set_program_name	(*(char))->(void)
(	O
argv	*(*(char))
[	O
0	int
]	O
)	O
;	O
for	O
(	O
i	long
=	O
1	int
;	O
i	long
<	O
argc	long
;	O
i	long
++	O
)	O
{	O
char	O
*	O
arg	*(char)
=	O
argv	*(*(char))
[	O
i	long
]	O
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"-h"	*(char)
)	O
==	O
0	int
||	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"-help"	*(char)
)	O
==	O
0	int
)	O
{	O
mu_printf	(*(char))->(int)
(	O
"usage: %s [-mh] [-msgset=SET] [-add=X[:Y]] [-del=X[:Y]] "	*(char)
"[-addset=SET] [-delset=SET] [-first] [-last] ...\n"	*(char)
,	O
mu_program_name	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
arg	*(char)
,	O
"-msgset="	*(char)
,	O
8	int
)	O
==	O
0	int
)	O
msgset_string	*(char)
=	O
arg	*(char)
+	O
8	int
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"-mh"	*(char)
)	O
==	O
0	int
)	O
format	*(char)
=	O
mu_msgset_fmt_mh	O
;	O
else	O
break	O
;	O
}	O
msgset	*(struct)
=	O
parse_msgset	(*(char))->(*(struct))
(	O
msgset_string	*(char)
)	O
;	O
for	O
(	O
;	O
i	long
<	O
argc	long
;	O
i	long
++	O
)	O
{	O
char	O
*	O
arg	*(char)
=	O
argv	*(*(char))
[	O
i	long
]	O
;	O
struct	O
mu_msgrange	struct(long,long)
range	*(char)
;	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
arg	*(char)
,	O
"-add="	*(char)
,	O
5	int
)	O
==	O
0	int
)	O
{	O
parse_msgrange	(*(char),*(struct(long,long)))->(void)
(	O
arg	*(char)
+	O
5	int
,	O
&	O
range	*(char)
)	O
;	O
MU_ASSERT	O
(	O
mu_msgset_add_range	(*(struct),long,long,int)->(int)
(	O
msgset	*(struct)
,	O
range	*(char)
.	O
msg_beg	long
,	O
range	*(char)
.	O
msg_end	long
,	O
MU_MSGSET_NUM	int
)	O
)	O
;	O
}	O
else	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
arg	*(char)
,	O
"-sub="	*(char)
,	O
5	int
)	O
==	O
0	int
)	O
{	O
parse_msgrange	(*(char),*(struct(long,long)))->(void)
(	O
arg	*(char)
+	O
5	int
,	O
&	O
range	*(char)
)	O
;	O
MU_ASSERT	O
(	O
mu_msgset_sub_range	(*(struct),long,long,int)->(int)
(	O
msgset	*(struct)
,	O
range	*(char)
.	O
msg_beg	long
,	O
range	*(char)
.	O
msg_end	long
,	O
MU_MSGSET_NUM	int
)	O
)	O
;	O
}	O
else	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
arg	*(char)
,	O
"-addset="	*(char)
,	O
8	int
)	O
==	O
0	int
)	O
{	O
mu_msgset_t	*(struct)
tset	*(struct)
=	O
parse_msgset	(*(char))->(*(struct))
(	O
arg	*(char)
+	O
8	int
)	O
;	O
if	O
(	O
!	O
msgset	*(struct)
)	O
msgset	*(struct)
=	O
tset	*(struct)
;	O
else	O
{	O
MU_ASSERT	O
(	O
mu_msgset_add	(*(struct),*(struct))->(int)
(	O
msgset	*(struct)
,	O
tset	*(struct)
)	O
)	O
;	O
mu_msgset_free	(*(struct))->(void)
(	O
tset	*(struct)
)	O
;	O
}	O
}	O
else	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
arg	*(char)
,	O
"-subset="	*(char)
,	O
8	int
)	O
==	O
0	int
)	O
{	O
mu_msgset_t	*(struct)
tset	*(struct)
=	O
parse_msgset	(*(char))->(*(struct))
(	O
arg	*(char)
+	O
8	int
)	O
;	O
if	O
(	O
!	O
msgset	*(struct)
)	O
{	O
mu_error	(*(char))->(int)
(	O
"no initial message set"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
else	O
{	O
MU_ASSERT	O
(	O
mu_msgset_sub	(*(struct),*(struct))->(int)
(	O
msgset	*(struct)
,	O
tset	*(struct)
)	O
)	O
;	O
mu_msgset_free	(*(struct))->(void)
(	O
tset	*(struct)
)	O
;	O
}	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"-first"	*(char)
)	O
==	O
0	int
)	O
print	*((*(struct))->(void))
=	O
print_first	(*(struct))->(void)
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"-last"	*(char)
)	O
==	O
0	int
)	O
print	*((*(struct))->(void))
=	O
print_last	(*(struct))->(void)
;	O
else	O
{	O
mu_error	(*(char))->(int)
(	O
"unknown option %s"	*(char)
,	O
arg	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
}	O
print	*((*(struct))->(void))
(	O
msgset	*(struct)
)	O
;	O
mu_msgset_free	(*(struct))->(void)
(	O
msgset	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
