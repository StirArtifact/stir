struct	O
dirtrans	struct(*(char),long,*(char),long)
{	O
char	O
*	O
dir	*(char)
;	O
size_t	long
dirlen	long
;	O
char	O
const	O
*	O
trans	*(char)
;	O
ssize_t	long
translen	long
;	O
}	O
;	O
mu_list_t	*(struct)
translist	*(struct)
;	O
static	O
int	O
transcmp	(*(void),*(void))->(int)
(	O
const	O
void	O
*	O
a	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))
,	O
const	O
void	O
*	O
b	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
{	O
struct	O
dirtrans	struct(*(char),long,*(char),long)
const	O
*	O
trans1	*(struct(*(char),long,*(char),long))
=	O
a	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))
;	O
struct	O
dirtrans	struct(*(char),long,*(char),long)
const	O
*	O
trans2	*(struct(*(char),long,*(char),long))
=	O
b	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
return	O
strcmp	(*(char),*(char))->(int)
(	O
trans1	*(struct(*(char),long,*(char),long))
->	O
dir	*(char)
,	O
trans2	*(struct(*(char),long,*(char),long))
->	O
dir	*(char)
)	O
;	O
}	O
static	O
void	O
newdir	(*(char),*(char))->(void)
(	O
char	O
const	O
*	O
dir	*(char)
,	O
char	O
const	O
*	O
trans	*(char)
)	O
{	O
if	O
(	O
dir	*(char)
)	O
{	O
size_t	long
dirlen	long
=	O
strlen	(*(char))->(long)
(	O
dir	*(char)
)	O
;	O
size_t	long
translen	long
=	O
strlen	(*(char))->(long)
(	O
trans	*(char)
)	O
;	O
struct	O
dirtrans	struct(*(char),long,*(char),long)
*	O
dt	*(struct(*(char),long,*(char),long))
=	O
mu_alloc	(long)->(*(void))
(	O
sizeof	O
*	O
dt	*(struct(*(char),long,*(char),long))
)	O
;	O
while	O
(	O
dirlen	long
>	O
0	int
&&	O
dir	*(char)
[	O
dirlen	long
-	O
1	int
]	O
==	O
'/'	O
)	O
dirlen	long
--	O
;	O
dt	*(struct(*(char),long,*(char),long))
->	O
dir	*(char)
=	O
mu_alloc	(long)->(*(void))
(	O
dirlen	long
+	O
1	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
dt	*(struct(*(char),long,*(char),long))
->	O
dir	*(char)
,	O
dir	*(char)
,	O
dirlen	long
)	O
;	O
dt	*(struct(*(char),long,*(char),long))
->	O
dir	*(char)
[	O
dirlen	long
]	O
=	O
0	int
;	O
dt	*(struct(*(char),long,*(char),long))
->	O
dirlen	long
=	O
dirlen	long
;	O
dt	*(struct(*(char),long,*(char),long))
->	O
trans	*(char)
=	O
trans	*(char)
;	O
dt	*(struct(*(char),long,*(char),long))
->	O
translen	long
=	O
translen	long
;	O
if	O
(	O
!	O
translist	*(struct)
)	O
{	O
MU_ASSERT	O
(	O
mu_list_create	(*(*(struct)))->(int)
(	O
&	O
translist	*(struct)
)	O
)	O
;	O
mu_list_set_comparator	(*(struct),*((*(void),*(void))->(int)))->(*((*(void),*(void))->(int)))
(	O
translist	*(struct)
,	O
transcmp	(*(void),*(void))->(int)
)	O
;	O
}	O
else	O
if	O
(	O
mu_list_locate	(*(struct),*(void),*(*(void)))->(int)
(	O
translist	*(struct)
,	O
dt	*(struct(*(char),long,*(char),long))
,	O
NULL	O
)	O
==	O
0	int
)	O
{	O
free	(*(void))->(void)
(	O
dt	*(struct(*(char),long,*(char),long))
->	O
dir	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
dt	*(struct(*(char),long,*(char),long))
)	O
;	O
return	O
;	O
}	O
MU_ASSERT	O
(	O
mu_list_append	(*(struct),*(void))->(int)
(	O
translist	*(struct)
,	O
dt	*(struct(*(char),long,*(char),long))
)	O
)	O
;	O
}	O
}	O
static	O
inline	O
int	O
isbnd	(int)->(int)
(	O
int	O
c	char
)	O
{	O
return	O
mu_c_is_class	O
(	O
c	char
,	O
MU_CTYPE_CNTRL	int
|	O
MU_CTYPE_PUNCT	int
|	O
MU_CTYPE_SPACE	int
)	O
;	O
}	O
int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
int	O
i	long
;	O
int	O
rc	int
;	O
char	O
*	O
buf	*(char)
=	O
NULL	O
;	O
size_t	long
size	long
,	O
n	*(long)
;	O
mu_iterator_t	*(struct)
itr	*(struct)
;	O
mu_set_program_name	(*(char))->(void)
(	O
argv	*(*(char))
[	O
0	int
]	O
)	O
;	O
mu_stdstream_setup	(int)->(void)
(	O
MU_STDSTREAM_RESET_NONE	int
)	O
;	O
for	O
(	O
i	long
=	O
1	int
;	O
i	long
<	O
argc	long
;	O
i	long
+=	O
2	int
)	O
newdir	(*(char),*(char))->(void)
(	O
argv	*(*(char))
[	O
i	long
]	O
,	O
(	O
i	long
+	O
1	int
<	O
argc	long
)	O
?	O
argv	*(*(char))
[	O
i	long
+	O
1	int
]	O
:	O
""	*(char)
)	O
;	O
newdir	(*(char),*(char))->(void)
(	O
getenv	(*(char))->(*(char))
(	O
"PWD"	*(char)
)	O
,	O
"."	*(char)
)	O
;	O
newdir	(*(char),*(char))->(void)
(	O
mu_getcwd	()->(*(char))
(	O
)	O
,	O
"."	*(char)
)	O
;	O
MU_ASSERT	O
(	O
mu_list_get_iterator	(*(struct),*(*(struct)))->(int)
(	O
translist	*(struct)
,	O
&	O
itr	*(struct)
)	O
)	O
;	O
while	O
(	O
(	O
rc	int
=	O
mu_stream_getline	(*(struct),*(*(char)),*(long),*(long))->(int)
(	O
mu_strin	*(struct)
,	O
&	O
buf	*(char)
,	O
&	O
size	long
,	O
&	O
n	*(long)
)	O
)	O
==	O
0	int
&&	O
n	*(long)
>	O
0	int
)	O
{	O
n	*(long)
=	O
mu_rtrim_class	(*(char),int)->(long)
(	O
buf	*(char)
,	O
MU_CTYPE_SPACE	int
)	O
;	O
for	O
(	O
mu_iterator_first	(*(struct))->(int)
(	O
itr	*(struct)
)	O
;	O
!	O
mu_iterator_is_done	(*(struct))->(int)
(	O
itr	*(struct)
)	O
;	O
mu_iterator_next	(*(struct))->(int)
(	O
itr	*(struct)
)	O
)	O
{	O
struct	O
dirtrans	struct(*(char),long,*(char),long)
*	O
dt	*(struct(*(char),long,*(char),long))
;	O
size_t	long
start	*(int)
=	O
0	int
;	O
char	O
*	O
p	*(char)
;	O
mu_iterator_current	(*(struct),*(*(void)))->(int)
(	O
itr	*(struct)
,	O
(	O
void	O
*	O
*	O
)	O
&	O
dt	*(struct(*(char),long,*(char),long))
)	O
;	O
while	O
(	O
(	O
p	*(char)
=	O
strstr	(*(char),*(char))->(*(char))
(	O
buf	*(char)
+	O
start	*(int)
,	O
dt	*(struct(*(char),long,*(char),long))
->	O
dir	*(char)
)	O
)	O
)	O
{	O
if	O
(	O
isbnd	(int)->(int)
(	O
p	*(char)
[	O
dt	*(struct(*(char),long,*(char),long))
->	O
dirlen	long
]	O
)	O
)	O
{	O
size_t	long
off	long
=	O
p	*(char)
-	O
buf	*(char)
;	O
size_t	long
rest	long
=	O
n	*(long)
-	O
start	*(int)
;	O
ssize_t	long
d	long
=	O
(	O
ssize_t	long
)	O
dt	*(struct(*(char),long,*(char),long))
->	O
translen	long
-	O
dt	*(struct(*(char),long,*(char),long))
->	O
dirlen	long
;	O
if	O
(	O
d	long
>	O
0	int
)	O
{	O
if	O
(	O
n	*(long)
+	O
d	long
+	O
1	int
>	O
size	long
)	O
{	O
size	long
=	O
n	*(long)
+	O
d	long
+	O
1	int
;	O
buf	*(char)
=	O
mu_realloc	(*(void),long)->(*(void))
(	O
buf	*(char)
,	O
size	long
)	O
;	O
p	*(char)
=	O
buf	*(char)
+	O
off	long
;	O
}	O
}	O
memmove	(*(void),*(void),long)->(*(void))
(	O
p	*(char)
+	O
dt	*(struct(*(char),long,*(char),long))
->	O
translen	long
,	O
p	*(char)
+	O
dt	*(struct(*(char),long,*(char),long))
->	O
dirlen	long
,	O
rest	long
-	O
dt	*(struct(*(char),long,*(char),long))
->	O
dirlen	long
+	O
1	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
p	*(char)
,	O
dt	*(struct(*(char),long,*(char),long))
->	O
trans	*(char)
,	O
dt	*(struct(*(char),long,*(char),long))
->	O
translen	long
)	O
;	O
n	*(long)
+=	O
d	long
;	O
start	*(int)
=	O
off	long
+	O
dt	*(struct(*(char),long,*(char),long))
->	O
translen	long
;	O
}	O
else	O
start	*(int)
++	O
;	O
}	O
}	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
mu_strout	*(struct)
,	O
buf	*(char)
,	O
n	*(long)
,	O
NULL	O
)	O
;	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
mu_strout	*(struct)
,	O
"\n"	*(char)
,	O
1	int
,	O
NULL	O
)	O
;	O
}	O
return	O
0	int
;	O
}	O
