static	O
void	O
usage	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"usage: %s [-debug] [-struct] [-nopr] [-help] FILE [OFF SIZE]\n"	*(char)
,	O
dico_program_name	*(char)
)	O
;	O
}	O
struct	O
output_closure	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),int,int)
{	O
FILE	struct
*	O
stream	*(struct)
;	O
int	O
flags	int
;	O
int	O
level	int
;	O
}	O
;	O
static	O
int	O
print_tag	(int,*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*`,enum(int,int,int),*`,union`)),union(*(char),long,*(struct`)))),*(void))->(int)
(	O
int	O
end	int
,	O
struct	O
gcide_tag	struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`))),union(*(char),long,*(struct)))),union(*(char),long,*(struct)))
*	O
tag	*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`))),union(*(char),long,*(struct))))
,	O
void	O
*	O
data	*(void)
)	O
{	O
size_t	long
i	long
;	O
struct	O
output_closure	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),int,int)
*	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
=	O
data	*(void)
;	O
if	O
(	O
end	int
)	O
{	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
level	int
--	O
;	O
printf	(*(char))->(int)
(	O
"%*.*s"	*(char)
,	O
2	int
*	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
level	int
,	O
2	int
*	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
level	int
,	O
""	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"END"	*(char)
)	O
;	O
if	O
(	O
tag	*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`))),union(*(char),long,*(struct))))
->	O
tag_parmc	long
)	O
printf	(*(char))->(int)
(	O
" %s"	*(char)
,	O
tag	*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`))),union(*(char),long,*(struct))))
->	O
tag_name	O
)	O
;	O
putchar	(int)->(int)
(	O
'\n'	O
)	O
;	O
return	O
0	int
;	O
}	O
printf	(*(char))->(int)
(	O
"%*.*s"	*(char)
,	O
2	int
*	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
level	int
,	O
2	int
*	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
level	int
,	O
""	*(char)
)	O
;	O
switch	O
(	O
tag	*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`))),union(*(char),long,*(struct))))
->	O
tag_type	enum(int,int,int)
)	O
{	O
case	O
gcide_content_unspecified	int
:	O
break	O
;	O
case	O
gcide_content_text	int
:	O
printf	(*(char))->(int)
(	O
"TEXT"	*(char)
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
tag	*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`))),union(*(char),long,*(struct))))
->	O
tag_parmc	long
;	O
i	long
++	O
)	O
printf	(*(char))->(int)
(	O
" %s"	*(char)
,	O
tag	*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`))),union(*(char),long,*(struct))))
->	O
tag_parmv	*(*(char))
[	O
i	long
]	O
)	O
;	O
printf	(*(char))->(int)
(	O
":\n%s\n%*.*sENDTEXT"	*(char)
,	O
tag	*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`))),union(*(char),long,*(struct))))
->	O
tag_v	union(*(char),long,*(struct))
.	O
text	*(char)
,	O
2	int
*	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
level	int
,	O
2	int
*	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
level	int
,	O
""	*(char)
)	O
;	O
if	O
(	O
tag	*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`))),union(*(char),long,*(struct))))
->	O
tag_parmc	long
)	O
printf	(*(char))->(int)
(	O
" %s"	*(char)
,	O
tag	*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`))),union(*(char),long,*(struct))))
->	O
tag_name	O
)	O
;	O
putchar	(int)->(int)
(	O
'\n'	O
)	O
;	O
break	O
;	O
case	O
gcide_content_taglist	int
:	O
printf	(*(char))->(int)
(	O
"BEGIN"	*(char)
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
tag	*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`))),union(*(char),long,*(struct))))
->	O
tag_parmc	long
;	O
i	long
++	O
)	O
printf	(*(char))->(int)
(	O
" %s"	*(char)
,	O
tag	*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`))),union(*(char),long,*(struct))))
->	O
tag_parmv	*(*(char))
[	O
i	long
]	O
)	O
;	O
putchar	(int)->(int)
(	O
'\n'	O
)	O
;	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
level	int
++	O
;	O
break	O
;	O
}	O
return	O
0	int
;	O
}	O
static	O
int	O
print_text	(int,*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*`,enum(int,int,int),*`,union`)),union(*(char),long,*(struct`)))),*(void))->(int)
(	O
int	O
end	int
,	O
struct	O
gcide_tag	struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`))),union(*(char),long,*(struct)))),union(*(char),long,*(struct)))
*	O
tag	*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`))),union(*(char),long,*(struct))))
,	O
void	O
*	O
data	*(void)
)	O
{	O
struct	O
output_closure	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),int,int)
*	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
=	O
data	*(void)
;	O
static	O
char	O
*	O
quote	*(int)
[	O
2	int
]	O
=	O
{	O
"``"	*(char)
,	O
"''"	*(char)
}	O
;	O
static	O
char	O
*	O
ref	array(*(char))
[	O
2	int
]	O
=	O
{	O
"{"	*(char)
,	O
"}"	*(char)
}	O
;	O
switch	O
(	O
tag	*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`))),union(*(char),long,*(struct))))
->	O
tag_type	enum(int,int,int)
)	O
{	O
case	O
gcide_content_unspecified	int
:	O
break	O
;	O
case	O
gcide_content_text	int
:	O
if	O
(	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
flags	int
&	O
GOF_IGNORE	int
)	O
break	O
;	O
if	O
(	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
flags	int
&	O
GOF_AS	int
)	O
{	O
char	O
*	O
s	*(char)
=	O
tag	*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`))),union(*(char),long,*(struct))))
->	O
tag_v	union(*(char),long,*(struct))
.	O
text	*(char)
;	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
s	*(char)
,	O
"as"	*(char)
,	O
2	int
)	O
==	O
0	int
&&	O
(	O
isspace	(int)->(int)
(	O
s	*(char)
[	O
3	int
]	O
)	O
||	O
ispunct	(int)->(int)
(	O
s	*(char)
[	O
3	int
]	O
)	O
)	O
)	O
{	O
fwrite	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
s	*(char)
,	O
3	int
,	O
1	int
,	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
stream	*(struct)
)	O
;	O
for	O
(	O
s	*(char)
+=	O
3	int
;	O
*	O
s	*(char)
&&	O
isspace	(int)->(int)
(	O
*	O
s	*(char)
)	O
;	O
s	*(char)
++	O
)	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
*	O
s	*(char)
,	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
stream	*(struct)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
stream	*(struct)
,	O
"%s%s"	*(char)
,	O
quote	*(int)
[	O
0	int
]	O
,	O
s	*(char)
)	O
;	O
}	O
else	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
stream	*(struct)
,	O
"%s"	*(char)
,	O
quote	*(int)
[	O
0	int
]	O
)	O
;	O
}	O
else	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
stream	*(struct)
,	O
"%s"	*(char)
,	O
tag	*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`))),union(*(char),long,*(struct))))
->	O
tag_v	union(*(char),long,*(struct))
.	O
text	*(char)
)	O
;	O
break	O
;	O
case	O
gcide_content_taglist	int
:	O
if	O
(	O
tag	*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`))),union(*(char),long,*(struct))))
->	O
tag_parmc	long
)	O
{	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
flags	int
&=	O
~	O
GOF_AS	int
;	O
if	O
(	O
end	int
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
tag	*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`))),union(*(char),long,*(struct))))
->	O
tag_name	O
,	O
"pr"	*(char)
)	O
==	O
0	int
&&	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
flags	int
&	O
GCIDE_NOPR	int
)	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
flags	int
&=	O
~	O
GOF_IGNORE	int
;	O
else	O
if	O
(	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
flags	int
&	O
GOF_IGNORE	int
)	O
break	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
tag	*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`))),union(*(char),long,*(struct))))
->	O
tag_name	O
,	O
"as"	*(char)
)	O
==	O
0	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
stream	*(struct)
,	O
"%s"	*(char)
,	O
quote	*(int)
[	O
1	int
]	O
)	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
tag	*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`))),union(*(char),long,*(struct))))
->	O
tag_name	O
,	O
"er"	*(char)
)	O
==	O
0	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
stream	*(struct)
,	O
"%s"	*(char)
,	O
ref	array(*(char))
[	O
1	int
]	O
)	O
;	O
}	O
else	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
tag	*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`))),union(*(char),long,*(struct))))
->	O
tag_name	O
,	O
"pr"	*(char)
)	O
==	O
0	int
&&	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
flags	int
&	O
GCIDE_NOPR	int
)	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
flags	int
|=	O
GOF_IGNORE	int
;	O
else	O
if	O
(	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
flags	int
&	O
GOF_IGNORE	int
)	O
break	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
tag	*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`))),union(*(char),long,*(struct))))
->	O
tag_name	O
,	O
"sn"	*(char)
)	O
==	O
0	int
)	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\n'	O
,	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
stream	*(struct)
)	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
tag	*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`))),union(*(char),long,*(struct))))
->	O
tag_name	O
,	O
"as"	*(char)
)	O
==	O
0	int
)	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
flags	int
|=	O
GOF_AS	int
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
tag	*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`))),union(*(char),long,*(struct))))
->	O
tag_name	O
,	O
"er"	*(char)
)	O
==	O
0	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
->	O
stream	*(struct)
,	O
"%s"	*(char)
,	O
ref	array(*(char))
[	O
0	int
]	O
)	O
;	O
}	O
}	O
}	O
return	O
0	int
;	O
}	O
int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
char	O
*	O
file	*(char)
;	O
unsigned	O
long	O
offset	long
=	O
0	int
;	O
unsigned	O
long	O
size	long
=	O
0	int
;	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
char	O
*	O
textbuf	*(char)
;	O
struct	O
gcide_parse_tree	struct(*(char),long,*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`))),union(*(char),long,*(struct)))))
*	O
tree	*(struct(*(char),long,*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`)))))
;	O
struct	O
output_closure	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),int,int)
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
;	O
int	O
show_struct	int
=	O
0	int
;	O
int	O
dbglex	int
=	O
0	int
;	O
dico_set_program_name	(*(char))->(void)
(	O
argv	*(*(char))
[	O
0	int
]	O
)	O
;	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
.	O
flags	int
=	O
0	int
;	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
.	O
stream	*(struct)
=	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
while	O
(	O
--	O
argc	int
)	O
{	O
char	O
*	O
arg	*(char)
=	O
*	O
++	O
argv	*(*(char))
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"-debug"	*(char)
)	O
==	O
0	int
)	O
dbglex	int
=	O
1	int
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"-h"	*(char)
)	O
==	O
0	int
||	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"-help"	*(char)
)	O
==	O
0	int
)	O
{	O
usage	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"-struct"	*(char)
)	O
==	O
0	int
)	O
show_struct	int
=	O
1	int
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"-nopr"	*(char)
)	O
==	O
0	int
)	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
.	O
flags	int
=	O
GCIDE_NOPR	int
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"--"	*(char)
)	O
==	O
0	int
)	O
{	O
--	O
argc	int
;	O
++	O
argv	*(*(char))
;	O
break	O
;	O
}	O
else	O
if	O
(	O
arg	*(char)
[	O
0	int
]	O
==	O
'-'	O
)	O
{	O
usage	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
exit	(int)->(void)
(	O
EX_USAGE	int
)	O
;	O
}	O
else	O
break	O
;	O
}	O
if	O
(	O
argc	int
==	O
0	int
||	O
argc	int
>	O
3	int
)	O
{	O
usage	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
exit	(int)->(void)
(	O
EX_USAGE	int
)	O
;	O
}	O
file	*(char)
=	O
argv	*(*(char))
[	O
0	int
]	O
;	O
if	O
(	O
argc	int
>	O
1	int
)	O
{	O
offset	long
=	O
atoi	(*(char))->(int)
(	O
argv	*(*(char))
[	O
1	int
]	O
)	O
;	O
if	O
(	O
argc	int
==	O
3	int
)	O
size	long
=	O
atoi	(*(char))->(int)
(	O
argv	*(*(char))
[	O
2	int
]	O
)	O
;	O
}	O
if	O
(	O
size	long
==	O
0	int
)	O
{	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
;	O
if	O
(	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
(	O
file	*(char)
,	O
&	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
)	O
{	O
dico_log	(int,int,*(char))->(void)
(	O
L_ERR	int
,	O
errno	O
,	O
"stat"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
EX_UNAVAILABLE	int
)	O
;	O
}	O
if	O
(	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_size	long
<	O
offset	long
)	O
{	O
dico_log	(int,int,*(char))->(void)
(	O
L_ERR	int
,	O
0	int
,	O
"invalid offset"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
EX_UNAVAILABLE	int
)	O
;	O
}	O
size	long
=	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_size	long
-	O
offset	long
;	O
}	O
textbuf	*(char)
=	O
malloc	(long)->(*(void))
(	O
size	long
)	O
;	O
if	O
(	O
!	O
textbuf	*(char)
)	O
{	O
DICO_LOG_ERRNO	O
(	O
)	O
;	O
exit	(int)->(void)
(	O
EX_UNAVAILABLE	int
)	O
;	O
}	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
file	*(char)
,	O
"r"	*(char)
)	O
;	O
if	O
(	O
!	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
dico_log	(int,int,*(char))->(void)
(	O
L_ERR	int
,	O
errno	O
,	O
"cannot open file %s"	*(char)
,	O
file	*(char)
)	O
;	O
exit	(int)->(void)
(	O
EX_UNAVAILABLE	int
)	O
;	O
}	O
if	O
(	O
fseek	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),long,int)->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
offset	long
,	O
SEEK_SET	int
)	O
)	O
{	O
dico_log	(int,int,*(char))->(void)
(	O
L_ERR	int
,	O
errno	O
,	O
"%s"	*(char)
,	O
file	*(char)
)	O
;	O
exit	(int)->(void)
(	O
EX_UNAVAILABLE	int
)	O
;	O
}	O
if	O
(	O
fread	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
textbuf	*(char)
,	O
size	long
,	O
1	int
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
!=	O
1	int
)	O
{	O
dico_log	(int,int,*(char))->(void)
(	O
L_ERR	int
,	O
errno	O
,	O
"%s: read error"	*(char)
,	O
file	*(char)
)	O
;	O
exit	(int)->(void)
(	O
EX_UNAVAILABLE	int
)	O
;	O
}	O
tree	*(struct(*(char),long,*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`)))))
=	O
gcide_markup_parse	(*(char),long,int)->(*(struct(*(char),long,*(struct(long,*`,enum(int,int,int),*`,union`)))))
(	O
textbuf	*(char)
,	O
size	long
,	O
dbglex	int
)	O
;	O
if	O
(	O
!	O
tree	*(struct(*(char),long,*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`)))))
)	O
exit	(int)->(void)
(	O
EX_UNAVAILABLE	int
)	O
;	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
.	O
level	int
=	O
0	int
;	O
gcide_parse_tree_inorder	(*(struct(*(char),long,*(struct(long,*`,enum(int,int,int),*`,union`)))),*((int,*(struct(long,*`,enum(int,int,int),*`,union`)),*(void))->(int)),*(void))->(int)
(	O
tree	*(struct(*(char),long,*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`)))))
,	O
show_struct	int
?	O
print_tag	(int,*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*`,enum(int,int,int),*`,union`)),union(*(char),long,*(struct`)))),*(void))->(int)
:	O
print_text	(int,*(struct(long,*(*(char)),enum(int,int,int),*(struct(long,*`,enum(int,int,int),*`,union`)),union(*(char),long,*(struct`)))),*(void))->(int)
,	O
&	O
clos	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int))
)	O
;	O
gcide_parse_tree_free	(*(struct(*(char),long,*(struct(long,*`,enum(int,int,int),*`,union`)))))->(void)
(	O
tree	*(struct(*(char),long,*(struct(long,*(*`),enum(int,int,int),*(struct`),union(*`,long,*`)))))
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
