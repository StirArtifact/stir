static	O
struct	O
timeval	struct(long,long)
offset	struct(long,long)
=	O
{	O
0	int
,	O
0	int
}	O
;	O
void	O
add_gettimeofday	(*(struct(long,long)),int)->(void)
(	O
struct	O
timeval	struct(long,long)
*	O
atv	*(struct(long,long))
,	O
int	O
ms	int
)	O
{	O
int	O
m	int
;	O
if	O
(	O
ms	int
>=	O
1000000	int
)	O
{	O
atv	*(struct(long,long))
->	O
tv_usec	long
=	O
0	int
;	O
m	int
=	O
ms	int
/	O
1000	int
;	O
}	O
else	O
{	O
atv	*(struct(long,long))
->	O
tv_usec	long
+=	O
ms	int
*	O
1000	int
;	O
m	int
=	O
atv	*(struct(long,long))
->	O
tv_usec	long
/	O
1000000	int
;	O
atv	*(struct(long,long))
->	O
tv_usec	long
=	O
atv	*(struct(long,long))
->	O
tv_usec	long
%	O
1000000	int
;	O
}	O
atv	*(struct(long,long))
->	O
tv_sec	long
+=	O
m	int
;	O
}	O
void	O
min_timercmp	(*(struct(long,long)),*(struct(long,long)))->(void)
(	O
struct	O
timeval	struct(long,long)
*	O
tv1	*(struct(long,long))
,	O
struct	O
timeval	struct(long,long)
*	O
tv2	*(struct(long,long))
)	O
{	O
if	O
(	O
tv2	*(struct(long,long))
->	O
tv_sec	long
==	O
-	O
1	int
)	O
return	O
;	O
if	O
(	O
osip_timercmp	O
(	O
tv1	*(struct(long,long))
,	O
tv2	*(struct(long,long))
,	O
>	O
)	O
)	O
{	O
tv1	*(struct(long,long))
->	O
tv_sec	long
=	O
tv2	*(struct(long,long))
->	O
tv_sec	long
;	O
tv1	*(struct(long,long))
->	O
tv_usec	long
=	O
tv2	*(struct(long,long))
->	O
tv_usec	long
;	O
}	O
}	O
int	O
osip_gettimeofday	(*(struct(long,long)),*(void))->(int)
(	O
struct	O
timeval	struct(long,long)
*	O
tp	*(struct(long,long))
,	O
void	O
*	O
tz	*(void)
)	O
{	O
struct	O
timespec	struct(long,long)
ts	struct(long,long)
;	O
if	O
(	O
clock_gettime	(int,*(struct(long,long)))->(int)
(	O
CLOCK_MONOTONIC	int
,	O
&	O
ts	struct(long,long)
)	O
<	O
0	int
)	O
{	O
gettimeofday	(*(struct(long,long)),*(void))->(int)
(	O
tp	*(struct(long,long))
,	O
tz	*(void)
)	O
;	O
return	O
0	int
;	O
}	O
tp	*(struct(long,long))
->	O
tv_sec	long
=	O
ts	struct(long,long)
.	O
tv_sec	long
+	O
offset	struct(long,long)
.	O
tv_sec	long
;	O
tp	*(struct(long,long))
->	O
tv_usec	long
=	O
ts	struct(long,long)
.	O
tv_nsec	long
/	O
1000	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_osip_gettimeofday_realtime	(*(struct(long,long)),*(void))->(int)
(	O
struct	O
timeval	struct(long,long)
*	O
tp	*(struct(long,long))
,	O
void	O
*	O
tz	*(void)
)	O
{	O
struct	O
timespec	struct(long,long)
ts	struct(long,long)
;	O
if	O
(	O
clock_gettime	(int,*(struct(long,long)))->(int)
(	O
CLOCK_REALTIME	int
,	O
&	O
ts	struct(long,long)
)	O
<	O
0	int
)	O
{	O
gettimeofday	(*(struct(long,long)),*(void))->(int)
(	O
tp	*(struct(long,long))
,	O
tz	*(void)
)	O
;	O
return	O
0	int
;	O
}	O
tp	*(struct(long,long))
->	O
tv_sec	long
=	O
ts	struct(long,long)
.	O
tv_sec	long
;	O
tp	*(struct(long,long))
->	O
tv_usec	long
=	O
ts	struct(long,long)
.	O
tv_nsec	long
/	O
1000	int
;	O
return	O
0	int
;	O
}	O
void	O
osip_compensatetime	()->(void)
(	O
)	O
{	O
static	O
struct	O
timeval	struct(long,long)
last_now_monotonic	struct(long,long)
=	O
{	O
0	int
,	O
0	int
}	O
;	O
static	O
struct	O
timeval	struct(long,long)
last_now_real	struct(long,long)
=	O
{	O
0	int
,	O
0	int
}	O
;	O
struct	O
timeval	struct(long,long)
now_monotonic	struct(long,long)
;	O
struct	O
timeval	struct(long,long)
now_real	struct(long,long)
;	O
struct	O
timeval	struct(long,long)
diff_monotonic	struct(long,long)
;	O
struct	O
timeval	struct(long,long)
diff_real	struct(long,long)
;	O
return	O
;	O
_osip_gettimeofday_realtime	(*(struct(long,long)),*(void))->(int)
(	O
&	O
now_real	struct(long,long)
,	O
NULL	O
)	O
;	O
osip_gettimeofday	(*(struct(long,long)),*(void))->(int)
(	O
&	O
now_monotonic	struct(long,long)
,	O
NULL	O
)	O
;	O
now_monotonic	struct(long,long)
.	O
tv_sec	long
-=	O
offset	struct(long,long)
.	O
tv_sec	long
;	O
if	O
(	O
now_real	struct(long,long)
.	O
tv_sec	long
==	O
0	int
)	O
return	O
;	O
if	O
(	O
last_now_monotonic	struct(long,long)
.	O
tv_sec	long
==	O
0	int
)	O
{	O
_osip_gettimeofday_realtime	(*(struct(long,long)),*(void))->(int)
(	O
&	O
last_now_real	struct(long,long)
,	O
NULL	O
)	O
;	O
osip_gettimeofday	(*(struct(long,long)),*(void))->(int)
(	O
&	O
last_now_monotonic	struct(long,long)
,	O
NULL	O
)	O
;	O
last_now_monotonic	struct(long,long)
.	O
tv_sec	long
-=	O
offset	struct(long,long)
.	O
tv_sec	long
;	O
return	O
;	O
}	O
diff_monotonic	struct(long,long)
.	O
tv_sec	long
=	O
now_monotonic	struct(long,long)
.	O
tv_sec	long
-	O
last_now_monotonic	struct(long,long)
.	O
tv_sec	long
;	O
diff_real	struct(long,long)
.	O
tv_sec	long
=	O
now_real	struct(long,long)
.	O
tv_sec	long
-	O
last_now_real	struct(long,long)
.	O
tv_sec	long
;	O
if	O
(	O
diff_real	struct(long,long)
.	O
tv_sec	long
<	O
5	int
)	O
return	O
;	O
if	O
(	O
diff_real	struct(long,long)
.	O
tv_sec	long
>	O
3600	int
)	O
return	O
;	O
if	O
(	O
diff_real	struct(long,long)
.	O
tv_sec	long
<	O
diff_monotonic	struct(long,long)
.	O
tv_sec	long
+	O
2	int
)	O
return	O
;	O
OSIP_TRACE	O
(	O
osip_trace	(*(char),int,enum(int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_WARNING	O
,	O
NULL	O
,	O
"adjusting exosip monotonic time (%i)!\n"	*(char)
,	O
diff_real	struct(long,long)
.	O
tv_sec	long
-	O
diff_monotonic	struct(long,long)
.	O
tv_sec	long
)	O
)	O
;	O
offset	struct(long,long)
.	O
tv_sec	long
+=	O
diff_real	struct(long,long)
.	O
tv_sec	long
-	O
diff_monotonic	struct(long,long)
.	O
tv_sec	long
;	O
_osip_gettimeofday_realtime	(*(struct(long,long)),*(void))->(int)
(	O
&	O
last_now_real	struct(long,long)
,	O
NULL	O
)	O
;	O
osip_gettimeofday	(*(struct(long,long)),*(void))->(int)
(	O
&	O
last_now_monotonic	struct(long,long)
,	O
NULL	O
)	O
;	O
last_now_monotonic	struct(long,long)
.	O
tv_sec	long
-=	O
offset	struct(long,long)
.	O
tv_sec	long
;	O
}	O
time_t	long
osip_getsystemtime	(*(long))->(long)
(	O
time_t	long
*	O
t	*(long)
)	O
{	O
struct	O
timeval	struct(long,long)
now_monotonic	struct(long,long)
;	O
osip_gettimeofday	(*(struct(long,long)),*(void))->(int)
(	O
&	O
now_monotonic	struct(long,long)
,	O
NULL	O
)	O
;	O
if	O
(	O
t	*(long)
!=	O
NULL	O
)	O
{	O
*	O
t	*(long)
=	O
now_monotonic	struct(long,long)
.	O
tv_sec	long
;	O
}	O
return	O
now_monotonic	struct(long,long)
.	O
tv_sec	long
;	O
}	O
