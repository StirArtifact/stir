static	O
error_t	int
dgram_write	(*(struct(*(struct(short,*`,*`,long,*`,*`,int,*`,long,long,*`,*`)),*(struct(short,*`,*`,long,*`,*`,int,*`,long,long,*`,*`)),*(struct(short,*`,*`,long,*`,*`,int,*`,long,long,*`,*`)))),*(void),*(char),long,*(long))->(int)
(	O
struct	O
pq	struct(*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))))))
*	O
pq	struct(*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))))))
,	O
void	O
*	O
source	*(void)
,	O
char	O
*	O
data	*(char)
,	O
size_t	long
data_len	long
,	O
size_t	long
*	O
amount	*(long)
)	O
{	O
struct	O
packet	struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))))))
*	O
packet	struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))))))
=	O
pq_queue	(*(struct(*(struct(short,*`,*`,long,*`,*`,int,*`,long,long,*`,*`)),*(struct(short,*`,*`,long,*`,*`,int,*`,long,long,*`,*`)),*(struct(short,*`,*`,long,*`,*`,int,*`,long,long,*`,*`)))),int,*(void))->(*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*`,*`,long,*`,*`,int,*`,long,long,*`,*`)),*(struct(short,*`,*`,long,*`,*`,int,*`,long,long,*`,*`)))))
(	O
pq	struct(*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))))))
,	O
PACKET_TYPE_DATA	int
,	O
source	*(void)
)	O
;	O
if	O
(	O
!	O
packet	struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))))))
)	O
return	O
ENOBUFS	int
;	O
else	O
return	O
packet_write	(*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*`,*`,long,*`,*`,int,*`,long,long,*`,*`)),*(struct(short,*`,*`,long,*`,*`,int,*`,long,long,*`,*`)))),*(char),long,*(long))->(int)
(	O
packet	struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))))))
,	O
data	*(char)
,	O
data_len	long
,	O
amount	*(long)
)	O
;	O
}	O
static	O
error_t	int
dgram_read	(*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*`,*`,long,*`,*`,int,*`,long,long,*`,*`)),*(struct(short,*`,*`,long,*`,*`,int,*`,long,long,*`,*`)))),*(int),*(int),*(*(char)),*(long),long)->(int)
(	O
struct	O
packet	struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))))))
*	O
packet	struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))))))
,	O
int	O
*	O
dequeue	*(int)
,	O
unsigned	O
*	O
flags	*(int)
,	O
char	O
*	O
*	O
data	*(char)
,	O
size_t	long
*	O
data_len	long
,	O
size_t	long
amount	*(long)
)	O
{	O
if	O
(	O
flags	*(int)
&&	O
*	O
flags	*(int)
&	O
MSG_PEEK	int
)	O
{	O
*	O
dequeue	*(int)
=	O
0	int
;	O
return	O
packet_peek	(*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*`,*`,long,*`,*`,int,*`,long,long,*`,*`)),*(struct(short,*`,*`,long,*`,*`,int,*`,long,long,*`,*`)))),*(*(char)),*(long),long)->(int)
(	O
packet	struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))))))
,	O
data	*(char)
,	O
data_len	long
,	O
amount	*(long)
)	O
;	O
}	O
else	O
{	O
*	O
dequeue	*(int)
=	O
1	int
;	O
return	O
packet_read	(*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*`,*`,long,*`,*`,int,*`,long,long,*`,*`)),*(struct(short,*`,*`,long,*`,*`,int,*`,long,long,*`,*`)))),*(*(char)),*(long),long)->(int)
(	O
packet	struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))))))
,	O
data	*(char)
,	O
data_len	long
,	O
amount	*(long)
)	O
;	O
}	O
}	O
struct	O
pipe_class	struct(int,int,*((*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(int),*(int),*(*(char)),*(long),long)->(int)),*((*(struct(*(struct`),*(struct`),*(struct`))),*(void),*(char),long,*(long))->(int)))
_dgram_pipe_class	struct(int,int,*((*(struct(short,*`,*`,long,*`,*`,int,*`,long,long,*`,*`)),*(int),*(int),*(*(char)),*(long),long)->(int)),*((*(struct(*`,*`,*`)),*(void),*(char),long,*(long))->(int)))
=	O
{	O
SOCK_DGRAM	int
,	O
PIPE_CLASS_CONNECTIONLESS	int
,	O
dgram_read	(*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct(short,*`,*`,long,*`,*`,int,*`,long,long,*`,*`)),*(struct(short,*`,*`,long,*`,*`,int,*`,long,long,*`,*`)))),*(int),*(int),*(*(char)),*(long),long)->(int)
,	O
dgram_write	(*(struct(*(struct(short,*`,*`,long,*`,*`,int,*`,long,long,*`,*`)),*(struct(short,*`,*`,long,*`,*`,int,*`,long,long,*`,*`)),*(struct(short,*`,*`,long,*`,*`,int,*`,long,long,*`,*`)))),*(void),*(char),long,*(long))->(int)
}	O
;	O
struct	O
pipe_class	struct(int,int,*((*(struct(short,*(void),*(char),long,*(char),*(char),int,*(int),long,long,*(struct`),*(struct`))),*(int),*(int),*(*(char)),*(long),long)->(int)),*((*(struct(*(struct`),*(struct`),*(struct`))),*(void),*(char),long,*(long))->(int)))
*	O
dgram_pipe_class	*(struct(int,int,*((*(struct`),*(int),*(int),*(*`),*(long),long)->(int)),*((*(struct`),*(void),*(char),long,*(long))->(int))))
=	O
&	O
_dgram_pipe_class	struct(int,int,*((*(struct(short,*`,*`,long,*`,*`,int,*`,long,long,*`,*`)),*(int),*(int),*(*(char)),*(long),long)->(int)),*((*(struct(*`,*`,*`)),*(void),*(char),long,*(long))->(int)))
;	O
