int	O
mib_lookup	(*(struct(*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(int),int,*(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void)))))->(int)
(	O
struct	O
mib_node_t	struct(*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*(struct(*`,*`,int,char,union`))),*(int))->(int)),*(void))
*	O
node	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
,	O
oid_t	*(int)
oid	*(int)
,	O
int	O
len	int
,	O
struct	O
mib_node_t	struct(*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*(struct(*`,*`,int,char,union`))),*(int))->(int)),*(void))
*	O
*	O
return_node	*(*(struct(*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))))
)	O
{	O
subid_t	int
*	O
p	*(int)
=	O
OIDPTR	O
(	O
oid	*(int)
)	O
;	O
int	O
ind	int
;	O
for	O
(	O
ind	int
=	O
0	int
;	O
ind	int
<	O
len	int
;	O
ind	int
++	O
)	O
{	O
while	O
(	O
SCMP	O
(	O
node	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
,	O
p	*(int)
[	O
ind	int
]	O
,	O
<	O
)	O
)	O
{	O
if	O
(	O
node	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
->	O
down	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
)	O
{	O
node	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
=	O
node	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
->	O
down	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
;	O
}	O
else	O
{	O
*	O
return_node	*(*(struct(*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))))
=	O
node	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
;	O
return	O
MIB_MATCH_UPPER	int
;	O
}	O
}	O
if	O
(	O
node	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
->	O
next	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
==	O
NULL	O
)	O
{	O
*	O
return_node	*(*(struct(*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))))
=	O
node	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
;	O
break	O
;	O
}	O
node	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
=	O
node	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
->	O
next	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
;	O
}	O
*	O
return_node	*(*(struct(*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))))
=	O
node	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
;	O
return	O
(	O
ind	int
+	O
1	int
)	O
<	O
len	int
?	O
MIB_MATCH_PREV	int
:	O
MIB_MATCH_EXACT	int
;	O
}	O
int	O
mib_insert_node	(*(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void)))),*(int),int,*(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void)))))->(int)
(	O
struct	O
mib_node_t	struct(*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*(struct(*`,*`,int,char,union`))),*(int))->(int)),*(void))
*	O
*	O
root_node	*(*(struct(*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))))
,	O
oid_t	*(int)
oid	*(int)
,	O
int	O
len	int
,	O
struct	O
mib_node_t	struct(*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*(struct(*`,*`,int,char,union`))),*(int))->(int)),*(void))
*	O
*	O
return_node	*(*(struct(*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))))
)	O
{	O
int	O
rc	int
;	O
struct	O
mib_node_t	struct(*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*(struct(*`,*`,int,char,union`))),*(int))->(int)),*(void))
*	O
newp	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
;	O
*	O
return_node	*(*(struct(*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))))
=	O
*	O
root_node	*(*(struct(*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))))
;	O
if	O
(	O
*	O
root_node	*(*(struct(*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))))
&&	O
(	O
rc	int
=	O
mib_lookup	(*(struct(*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(int),int,*(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void)))))->(int)
(	O
*	O
root_node	*(*(struct(*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))))
,	O
oid	*(int)
,	O
len	int
,	O
return_node	*(*(struct(*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))))
)	O
)	O
==	O
MIB_MATCH_EXACT	int
)	O
return	O
rc	int
;	O
if	O
(	O
!	O
(	O
newp	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
=	O
snmp_alloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
newp	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
)	O
)	O
)	O
)	O
{	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_NOMEM	int
)	O
;	O
return	O
MIB_ERROR	O
;	O
}	O
newp	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
->	O
next	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
newp	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
->	O
down	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
=	O
NULL	O
;	O
newp	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
->	O
index	(*(char),int)->(*(char))
=	O
len	int
-	O
1	int
;	O
newp	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
->	O
subid	*(int)
=	O
SUBID	O
(	O
oid	*(int)
,	O
len	int
-	O
1	int
)	O
;	O
newp	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
->	O
handler	*((enum(int,int,int,int,int,int,int),*(void),int,*(*(struct(*`,*`,int,char,union`))),*(int))->(int))
=	O
NULL	O
;	O
if	O
(	O
!	O
*	O
root_node	*(*(struct(*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))))
)	O
*	O
root_node	*(*(struct(*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))))
=	O
newp	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
;	O
else	O
if	O
(	O
rc	int
==	O
MIB_MATCH_UPPER	int
)	O
{	O
struct	O
mib_node_t	struct(*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*(struct(*`,*`,int,char,union`))),*(int))->(int)),*(void))
*	O
p	*(int)
;	O
newp	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
->	O
up	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
=	O
(	O
*	O
return_node	*(*(struct(*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))))
)	O
->	O
up	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
;	O
if	O
(	O
!	O
(	O
*	O
return_node	*(*(struct(*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))))
)	O
->	O
down	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
)	O
(	O
*	O
return_node	*(*(struct(*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))))
)	O
->	O
down	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
=	O
newp	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
;	O
else	O
{	O
for	O
(	O
p	*(int)
=	O
(	O
*	O
return_node	*(*(struct(*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))))
)	O
->	O
down	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
;	O
p	*(int)
->	O
down	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
;	O
p	*(int)
=	O
p	*(int)
->	O
down	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
)	O
;	O
p	*(int)
->	O
down	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
=	O
newp	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
;	O
}	O
}	O
else	O
{	O
(	O
*	O
return_node	*(*(struct(*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))))
)	O
->	O
next	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
newp	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
;	O
newp	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
->	O
up	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
=	O
*	O
return_node	*(*(struct(*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))))
;	O
}	O
*	O
return_node	*(*(struct(*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))))
=	O
newp	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
;	O
return	O
rc	int
;	O
}	O
int	O
mib_insert	(*(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void)))),*(int),*(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void)))))->(int)
(	O
struct	O
mib_node_t	struct(*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*(struct(*`,*`,int,char,union`))),*(int))->(int)),*(void))
*	O
*	O
node	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
,	O
oid_t	*(int)
oid	*(int)
,	O
struct	O
mib_node_t	struct(*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*(struct(*`,*`,int,char,union`))),*(int))->(int)),*(void))
*	O
*	O
return_node	*(*(struct(*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))))
)	O
{	O
int	O
len	int
=	O
OIDLEN	O
(	O
oid	*(int)
)	O
;	O
int	O
i	int
;	O
int	O
rc	int
;	O
*	O
return_node	*(*(struct(*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))))
=	O
NULL	O
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<=	O
len	int
;	O
i	int
++	O
)	O
rc	int
=	O
mib_insert_node	(*(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void)))),*(int),int,*(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void)))))->(int)
(	O
node	*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),*(struct(*(struct`),*(struct`),*(struct`),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))),int,int,*((enum(int,int,int,int,int,int,int),*(void),int,*(*`),*(int))->(int)),*(void)))
,	O
oid	*(int)
,	O
i	int
,	O
return_node	*(*(struct(*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),*(struct(*`,*`,*`,int,int,*`,*`)),int,int,*((enum(int,int,int,int,int,int,int),*`,int,*`,*`)->(int)),*(void))))
)	O
;	O
return	O
rc	int
;	O
}	O
