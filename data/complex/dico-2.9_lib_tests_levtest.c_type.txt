int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
int	O
flags	int
=	O
0	int
;	O
dico_set_program_name	(*(char))->(void)
(	O
argv	*(*(char))
[	O
0	int
]	O
)	O
;	O
while	O
(	O
--	O
argc	int
)	O
{	O
char	O
*	O
arg	*(char)
=	O
*	O
++	O
argv	*(*(char))
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"-d"	*(char)
)	O
==	O
0	int
)	O
flags	int
|=	O
DICO_LEV_DAMERAU	int
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"-n"	*(char)
)	O
==	O
0	int
)	O
flags	int
|=	O
DICO_LEV_NORM	int
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"-h"	*(char)
)	O
==	O
0	int
)	O
{	O
printf	(*(char))->(int)
(	O
"Usage: %s [-dn] word word\n"	*(char)
,	O
dico_program_name	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"--"	*(char)
)	O
==	O
0	int
)	O
{	O
--	O
argc	int
;	O
++	O
argv	*(*(char))
;	O
}	O
else	O
if	O
(	O
arg	*(char)
[	O
0	int
]	O
==	O
'-'	O
)	O
{	O
dico_log	(int,int,*(char))->(void)
(	O
L_ERR	int
,	O
0	int
,	O
"unknown option '%s'"	*(char)
,	O
arg	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
else	O
break	O
;	O
}	O
if	O
(	O
argc	int
!=	O
2	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Usage: %s [-dn] word word\n"	*(char)
,	O
argv	*(*(char))
[	O
0	int
]	O
)	O
;	O
return	O
1	int
;	O
}	O
printf	(*(char))->(int)
(	O
"%d\n"	*(char)
,	O
dico_levenshtein_distance	(*(char),*(char),int)->(int)
(	O
argv	*(*(char))
[	O
0	int
]	O
,	O
argv	*(*(char))
[	O
1	int
]	O
,	O
flags	int
)	O
)	O
;	O
return	O
0	int
;	O
}	O
