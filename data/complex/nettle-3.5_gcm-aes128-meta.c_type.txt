static	O
nettle_set_key_func	(*(void),*(char))->(void)
gcm_aes128_set_nonce_wrapper	(*(void),*(char))->(void)
;	O
static	O
void	O
gcm_aes128_set_nonce_wrapper	(*(void),*(char))->(void)
(	O
void	O
*	O
ctx	*(void)
,	O
const	O
uint8_t	char
*	O
nonce	*(char)
)	O
{	O
gcm_aes128_set_iv	O
(	O
ctx	*(void)
,	O
GCM_IV_SIZE	O
,	O
nonce	*(char)
)	O
;	O
}	O
const	O
struct	O
nettle_aead	struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void)))
nettle_gcm_aes128	struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void)))
=	O
{	O
"gcm_aes128"	*(char)
,	O
sizeof	O
(	O
struct	O
gcm_aes128_ctx	struct(struct(array(union(array(char),array(long),array(long)))),struct(union(array(char),array(long),array(long)),union(array(char),array(long),array(long)),union(array(char),array(long),array(long)),long,long),struct(array(int)))
)	O
,	O
GCM_BLOCK_SIZE	int
,	O
AES128_KEY_SIZE	int
,	O
GCM_IV_SIZE	O
,	O
GCM_DIGEST_SIZE	int
,	O
(	O
nettle_set_key_func	(*(void),*(char))->(void)
*	O
)	O
gcm_aes128_set_key	O
,	O
(	O
nettle_set_key_func	(*(void),*(char))->(void)
*	O
)	O
gcm_aes128_set_key	O
,	O
gcm_aes128_set_nonce_wrapper	(*(void),*(char))->(void)
,	O
(	O
nettle_hash_update_func	(*(void),long,*(char))->(void)
*	O
)	O
gcm_aes128_update	O
,	O
(	O
nettle_crypt_func	(*(void),long,*(char),*(char))->(void)
*	O
)	O
gcm_aes128_encrypt	O
,	O
(	O
nettle_crypt_func	(*(void),long,*(char),*(char))->(void)
*	O
)	O
gcm_aes128_decrypt	O
,	O
(	O
nettle_hash_digest_func	(*(void),long,*(char))->(void)
*	O
)	O
gcm_aes128_digest	O
,	O
}	O
;	O
