static	O
double	O
lower_tail	(int,int,int,int)->(double)
(	O
const	O
unsigned	O
int	O
k	int
,	O
const	O
unsigned	O
int	O
n1	int
,	O
const	O
unsigned	O
int	O
n2	int
,	O
const	O
unsigned	O
int	O
t	int
)	O
{	O
double	O
relerr	double
;	O
int	O
i	long
=	O
k	int
;	O
double	O
s	*(float)
,	O
P	double
;	O
s	*(float)
=	O
gsl_ran_hypergeometric_pdf	(int,int,int,int)->(double)
(	O
i	long
,	O
n1	int
,	O
n2	int
,	O
t	int
)	O
;	O
P	double
=	O
s	*(float)
;	O
while	O
(	O
i	long
>	O
0	int
)	O
{	O
double	O
factor	double
=	O
(	O
i	long
/	O
(	O
n1	int
-	O
i	long
+	O
1.0	int
)	O
)	O
*	O
(	O
(	O
n2	int
+	O
i	long
-	O
t	int
)	O
/	O
(	O
t	int
-	O
i	long
+	O
1.0	int
)	O
)	O
;	O
s	*(float)
*=	O
factor	double
;	O
P	double
+=	O
s	*(float)
;	O
relerr	double
=	O
s	*(float)
/	O
P	double
;	O
if	O
(	O
relerr	double
<	O
GSL_DBL_EPSILON	int
)	O
break	O
;	O
i	long
--	O
;	O
}	O
return	O
P	double
;	O
}	O
static	O
double	O
upper_tail	(int,int,int,int)->(double)
(	O
const	O
unsigned	O
int	O
k	int
,	O
const	O
unsigned	O
int	O
n1	int
,	O
const	O
unsigned	O
int	O
n2	int
,	O
const	O
unsigned	O
int	O
t	int
)	O
{	O
double	O
relerr	double
;	O
unsigned	O
int	O
i	long
=	O
k	int
+	O
1	int
;	O
double	O
s	*(float)
,	O
Q	double
;	O
s	*(float)
=	O
gsl_ran_hypergeometric_pdf	(int,int,int,int)->(double)
(	O
i	long
,	O
n1	int
,	O
n2	int
,	O
t	int
)	O
;	O
Q	double
=	O
s	*(float)
;	O
while	O
(	O
i	long
<	O
t	int
)	O
{	O
double	O
factor	double
=	O
(	O
(	O
n1	int
-	O
i	long
)	O
/	O
(	O
i	long
+	O
1.0	int
)	O
)	O
*	O
(	O
(	O
t	int
-	O
i	long
)	O
/	O
(	O
n2	int
+	O
i	long
+	O
1.0	int
-	O
t	int
)	O
)	O
;	O
s	*(float)
*=	O
factor	double
;	O
Q	double
+=	O
s	*(float)
;	O
relerr	double
=	O
s	*(float)
/	O
Q	double
;	O
if	O
(	O
relerr	double
<	O
GSL_DBL_EPSILON	int
)	O
break	O
;	O
i	long
++	O
;	O
}	O
return	O
Q	double
;	O
}	O
double	O
gsl_cdf_hypergeometric_P	(int,int,int,int)->(double)
(	O
const	O
unsigned	O
int	O
k	int
,	O
const	O
unsigned	O
int	O
n1	int
,	O
const	O
unsigned	O
int	O
n2	int
,	O
const	O
unsigned	O
int	O
t	int
)	O
{	O
double	O
P	double
;	O
if	O
(	O
t	int
>	O
(	O
n1	int
+	O
n2	int
)	O
)	O
{	O
CDF_ERROR	O
(	O
"t larger than population size"	*(char)
,	O
GSL_EDOM	int
)	O
;	O
}	O
else	O
if	O
(	O
k	int
>=	O
n1	int
||	O
k	int
>=	O
t	int
)	O
{	O
P	double
=	O
1.0	int
;	O
}	O
else	O
if	O
(	O
k	int
<	O
0.0	int
)	O
{	O
P	double
=	O
0.0	int
;	O
}	O
else	O
{	O
double	O
midpoint	double
=	O
(	O
(	O
double	O
)	O
t	int
*	O
n1	int
)	O
/	O
(	O
(	O
double	O
)	O
n1	int
+	O
(	O
double	O
)	O
n2	int
)	O
;	O
if	O
(	O
k	int
>=	O
midpoint	double
)	O
{	O
P	double
=	O
1	int
-	O
upper_tail	(int,int,int,int)->(double)
(	O
k	int
,	O
n1	int
,	O
n2	int
,	O
t	int
)	O
;	O
}	O
else	O
{	O
P	double
=	O
lower_tail	(int,int,int,int)->(double)
(	O
k	int
,	O
n1	int
,	O
n2	int
,	O
t	int
)	O
;	O
}	O
}	O
return	O
P	double
;	O
}	O
double	O
gsl_cdf_hypergeometric_Q	(int,int,int,int)->(double)
(	O
const	O
unsigned	O
int	O
k	int
,	O
const	O
unsigned	O
int	O
n1	int
,	O
const	O
unsigned	O
int	O
n2	int
,	O
const	O
unsigned	O
int	O
t	int
)	O
{	O
double	O
Q	double
;	O
if	O
(	O
t	int
>	O
(	O
n1	int
+	O
n2	int
)	O
)	O
{	O
CDF_ERROR	O
(	O
"t larger than population size"	*(char)
,	O
GSL_EDOM	int
)	O
;	O
}	O
else	O
if	O
(	O
k	int
>=	O
n1	int
||	O
k	int
>=	O
t	int
)	O
{	O
Q	double
=	O
0.0	int
;	O
}	O
else	O
if	O
(	O
k	int
<	O
0.0	int
)	O
{	O
Q	double
=	O
1.0	int
;	O
}	O
else	O
{	O
double	O
midpoint	double
=	O
(	O
(	O
double	O
)	O
t	int
*	O
n1	int
)	O
/	O
(	O
(	O
double	O
)	O
n1	int
+	O
(	O
double	O
)	O
n2	int
)	O
;	O
if	O
(	O
k	int
<	O
midpoint	double
)	O
{	O
Q	double
=	O
1	int
-	O
lower_tail	(int,int,int,int)->(double)
(	O
k	int
,	O
n1	int
,	O
n2	int
,	O
t	int
)	O
;	O
}	O
else	O
{	O
Q	double
=	O
upper_tail	(int,int,int,int)->(double)
(	O
k	int
,	O
n1	int
,	O
n2	int
,	O
t	int
)	O
;	O
}	O
}	O
return	O
Q	double
;	O
}	O
