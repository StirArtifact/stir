static	O
int	O
i386_iscall	O
(	O
unsigned	O
char	O
*	O
)	O
;	O
void	O
i386_find_call	O
(	O
Sym	O
*	O
,	O
bfd_vma	long
,	O
bfd_vma	long
)	O
;	O
static	O
int	O
i386_iscall	O
(	O
unsigned	O
char	O
*	O
ip	O
)	O
{	O
if	O
(	O
*	O
ip	O
==	O
0xe8	int
)	O
return	O
1	int
;	O
return	O
0	int
;	O
}	O
void	O
i386_find_call	O
(	O
Sym	O
*	O
parent	O
,	O
bfd_vma	long
p_lowpc	O
,	O
bfd_vma	long
p_highpc	O
)	O
{	O
unsigned	O
char	O
*	O
instructp	O
;	O
Sym	O
*	O
child	O
;	O
bfd_vma	long
pc	O
,	O
destpc	O
;	O
DBG	O
(	O
CALLDEBUG	O
,	O
printf	(*(char))->(int)
(	O
"[findcall] %s: 0x%lx to 0x%lx\n"	*(char)
,	O
parent	O
->	O
name	*(char)
,	O
(	O
unsigned	O
long	O
)	O
p_lowpc	O
,	O
(	O
unsigned	O
long	O
)	O
p_highpc	O
)	O
)	O
;	O
for	O
(	O
pc	O
=	O
p_lowpc	O
;	O
pc	O
<	O
p_highpc	O
;	O
++	O
pc	O
)	O
{	O
instructp	O
=	O
(	O
unsigned	O
char	O
*	O
)	O
core_text_space	O
+	O
pc	O
-	O
core_text_sect	O
->	O
vma	long
;	O
if	O
(	O
i386_iscall	O
(	O
instructp	O
)	O
)	O
{	O
DBG	O
(	O
CALLDEBUG	O
,	O
printf	(*(char))->(int)
(	O
"[findcall]\t0x%lx:call"	*(char)
,	O
(	O
unsigned	O
long	O
)	O
pc	O
)	O
)	O
;	O
destpc	O
=	O
bfd_get_32	O
(	O
core_bfd	*(struct(*(char),*(struct),*(void),*(struct),*(struct(*(char),*(struct`),*(void),*(struct`),*(struct`),*(struct`),long,long,int,enum(int,int,int,int,int),enum(int,int,int,int),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int,int),int,int,*(struct`),long,long,struct(*`,*`,*`,int,int,int,int),*(struct`),*(struct`),int,int,long,*(*`),int,int,*(struct`),*(void),*(struct`),*(struct`),*(struct`),*(struct`),union(*`,*`),union(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`),*(void),*(void),*(struct`))),*(struct(*(char),*(struct`),*(void),*(struct`),*(struct`),*(struct`),long,long,int,enum(int,int,int,int,int),enum(int,int,int,int),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int,int),int,int,*(struct`),long,long,struct(*`,*`,*`,int,int,int,int),*(struct`),*(struct`),int,int,long,*(*`),int,int,*(struct`),*(void),*(struct`),*(struct`),*(struct`),*(struct`),union(*`,*`),union(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`),*(void),*(void),*(struct`))),long,long,int,enum(int,int,int,int,int),enum(int,int,int,int),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int,int),int,int,*(struct(*(char),*(struct`),*(void),*(struct`),*(struct`),*(struct`),long,long,int,enum(int,int,int,int,int),enum(int,int,int,int),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int,int),int,int,*(struct`),long,long,struct(*`,*`,*`,int,int,int,int),*(struct`),*(struct`),int,int,long,*(*`),int,int,*(struct`),*(void),*(struct`),*(struct`),*(struct`),*(struct`),union(*`,*`),union(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`),*(void),*(void),*(struct`))),long,long,struct(*(*(struct`)),*((*`,*`,*`)->(*`)),*(void),int,int,int,int),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,long,*(*(struct(*`,*`,long,int,*`,union`))),int,int,*(struct(int,int,int,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,*(char),*(char),int,int,*((*`,*`)->(*`)),*((*`,*`)->(int)),*((long,int,int)->(*`)),*(struct`),int)),*(void),*(struct(*(char),*(struct`),*(void),*(struct`),*(struct`),*(struct`),long,long,int,enum(int,int,int,int,int),enum(int,int,int,int),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int,int),int,int,*(struct`),long,long,struct(*`,*`,*`,int,int,int,int),*(struct`),*(struct`),int,int,long,*(*`),int,int,*(struct`),*(void),*(struct`),*(struct`),*(struct`),*(struct`),union(*`,*`),union(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`),*(void),*(void),*(struct`))),*(struct(*(char),*(struct`),*(void),*(struct`),*(struct`),*(struct`),long,long,int,enum(int,int,int,int,int),enum(int,int,int,int),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int,int),int,int,*(struct`),long,long,struct(*`,*`,*`,int,int,int,int),*(struct`),*(struct`),int,int,long,*(*`),int,int,*(struct`),*(void),*(struct`),*(struct`),*(struct`),*(struct`),union(*`,*`),union(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`),*(void),*(void),*(struct`))),*(struct(*(char),*(struct`),*(void),*(struct`),*(struct`),*(struct`),long,long,int,enum(int,int,int,int,int),enum(int,int,int,int),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int,int),int,int,*(struct`),long,long,struct(*`,*`,*`,int,int,int,int),*(struct`),*(struct`),int,int,long,*(*`),int,int,*(struct`),*(void),*(struct`),*(struct`),*(struct`),*(struct`),union(*`,*`),union(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`),*(void),*(void),*(struct`))),*(struct(*(char),*(struct`),*(void),*(struct`),*(struct`),*(struct`),long,long,int,enum(int,int,int,int,int),enum(int,int,int,int),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int,int),int,int,*(struct`),long,long,struct(*`,*`,*`,int,int,int,int),*(struct`),*(struct`),int,int,long,*(*`),int,int,*(struct`),*(void),*(struct`),*(struct`),*(struct`),*(struct`),union(*`,*`),union(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`),*(void),*(void),*(struct`))),union(*(struct(*`,*`,*`,*`,*`,*`,long,long,int,enum(int,int,int,int,int),enum(int,int,int,int),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int,int),int,int,*`,long,long,struct`,*`,*`,int,int,long,*`,int,int,*`,*`,*`,*`,*`,*`,union`,union`,*`,*`,*`)),*(struct)),union(*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(void)),*(void),*(void),*(struct(long,array(char)))))
,	O
instructp	O
+	O
1	int
)	O
+	O
pc	O
+	O
5	int
;	O
if	O
(	O
hist_check_address	O
(	O
destpc	O
)	O
)	O
{	O
child	O
=	O
sym_lookup	O
(	O
&	O
symtab	O
,	O
destpc	O
)	O
;	O
if	O
(	O
child	O
&&	O
child	O
->	O
addr	*(void)
==	O
destpc	O
)	O
{	O
DBG	O
(	O
CALLDEBUG	O
,	O
printf	(*(char))->(int)
(	O
"\tdestpc 0x%lx (%s)\n"	*(char)
,	O
(	O
unsigned	O
long	O
)	O
destpc	O
,	O
child	O
->	O
name	*(char)
)	O
)	O
;	O
arc_add	O
(	O
parent	O
,	O
child	O
,	O
(	O
unsigned	O
long	O
)	O
0	int
)	O
;	O
instructp	O
+=	O
4	int
;	O
continue	O
;	O
}	O
}	O
DBG	O
(	O
CALLDEBUG	O
,	O
printf	(*(char))->(int)
(	O
"\tbut it's a botch\n"	*(char)
)	O
)	O
;	O
}	O
}	O
}	O
