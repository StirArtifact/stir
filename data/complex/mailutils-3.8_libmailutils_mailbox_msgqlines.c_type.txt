int	O
mu_message_quick_lines	(*(struct),*(long))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
size_t	long
*	O
plines	*(long)
)	O
{	O
size_t	long
hlines	long
,	O
blines	long
;	O
int	O
rc	int
;	O
if	O
(	O
msg	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
msg	*(struct)
->	O
_lines	*((*(struct),*(long),int)->(int))
)	O
{	O
int	O
rc	int
=	O
msg	*(struct)
->	O
_lines	*((*(struct),*(long),int)->(int))
(	O
msg	*(struct)
,	O
plines	*(long)
,	O
1	int
)	O
;	O
if	O
(	O
rc	int
!=	O
ENOSYS	int
)	O
return	O
rc	int
;	O
}	O
if	O
(	O
plines	*(long)
)	O
{	O
mu_header_t	*(struct)
hdr	*(struct)
=	O
NULL	O
;	O
mu_body_t	*(struct)
body	*(struct)
=	O
NULL	O
;	O
hlines	long
=	O
blines	long
=	O
0	int
;	O
mu_message_get_header	(*(struct),*(*(struct)))->(int)
(	O
msg	*(struct)
,	O
&	O
hdr	*(struct)
)	O
;	O
mu_message_get_body	(*(struct),*(*(struct)))->(int)
(	O
msg	*(struct)
,	O
&	O
body	*(struct)
)	O
;	O
if	O
(	O
(	O
rc	int
=	O
mu_header_lines	(*(struct),*(long))->(int)
(	O
hdr	*(struct)
,	O
&	O
hlines	long
)	O
)	O
==	O
0	int
)	O
rc	int
=	O
mu_body_lines	(*(struct),*(long))->(int)
(	O
body	*(struct)
,	O
&	O
blines	long
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
*	O
plines	*(long)
=	O
hlines	long
+	O
blines	long
;	O
}	O
return	O
rc	int
;	O
}	O
