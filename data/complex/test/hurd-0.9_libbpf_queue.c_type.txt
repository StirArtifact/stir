void	O
enqueue_head	(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))),*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))->(void)
(	O
register	O
queue_t	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
que	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
,	O
register	O
queue_entry_t	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
)	O
{	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
que	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
que	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
que	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
}	O
void	O
enqueue_tail	(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))),*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))->(void)
(	O
register	O
queue_t	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
que	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
,	O
register	O
queue_entry_t	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
)	O
{	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
que	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
que	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
que	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
}	O
queue_entry_t	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
dequeue_head	(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))->(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))
(	O
register	O
queue_t	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
que	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
)	O
{	O
register	O
queue_entry_t	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
if	O
(	O
que	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
==	O
que	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
)	O
return	O
(	O
(	O
queue_entry_t	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
)	O
0	int
)	O
;	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
que	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
que	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
que	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
return	O
(	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
)	O
;	O
}	O
queue_entry_t	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
dequeue_tail	(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))->(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))
(	O
register	O
queue_t	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
que	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
)	O
{	O
register	O
queue_entry_t	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
if	O
(	O
que	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
==	O
que	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
)	O
return	O
(	O
(	O
queue_entry_t	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
)	O
0	int
)	O
;	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
que	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
que	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
que	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
return	O
(	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
)	O
;	O
}	O
void	O
remqueue	(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))),*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))->(void)
(	O
queue_t	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
que	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
,	O
register	O
queue_entry_t	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
)	O
{	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
}	O
void	O
insque	(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))),*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))->(void)
(	O
register	O
struct	O
queue_entry	struct(*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`))))),*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`))))))
*	O
entry	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
,	O
register	O
struct	O
queue_entry	struct(*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`))))),*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`))))))
*	O
pred	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
)	O
{	O
entry	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
pred	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
entry	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
pred	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
(	O
pred	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
)	O
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
entry	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
pred	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
entry	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
}	O
struct	O
queue_entry	struct(*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`))))),*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`))))))
*	O
remque	(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))->(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))
(	O
register	O
struct	O
queue_entry	struct(*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`))))),*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`))))))
*	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
)	O
{	O
(	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
)	O
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
(	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
)	O
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
return	O
(	O
elt	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
)	O
;	O
}	O
