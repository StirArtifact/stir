struct	O
bf	struct(int,array(char))
{	O
int	O
counter	int
;	O
char	O
buf	array(char)
[	O
PKTSIZE	O
]	O
;	O
}	O
bfs	array(struct(int,array(char)))
[	O
2	int
]	O
;	O
static	O
int	O
nextone	int
;	O
static	O
int	O
current	int
;	O
int	O
newline	int
=	O
0	int
;	O
int	O
prevchar	int
=	O
-	O
1	int
;	O
static	O
struct	O
tftphdr	struct(short,union(array(char),struct(union(short,short),array(char)),array(char)))
*	O
rw_init	(int)->(*(struct(short,union(array(char),struct(union`,array(char)),array(char)))))
(	O
int	O
)	O
;	O
struct	O
tftphdr	struct(short,union(array(char),struct(union(short,short),array(char)),array(char)))
*	O
w_init	()->(*(struct(short,union(array(char),struct(union`,array(char)),array(char)))))
(	O
void	O
)	O
{	O
return	O
rw_init	(int)->(*(struct(short,union(array(char),struct(union`,array(char)),array(char)))))
(	O
0	int
)	O
;	O
}	O
struct	O
tftphdr	struct(short,union(array(char),struct(union(short,short),array(char)),array(char)))
*	O
r_init	()->(*(struct(short,union(array(char),struct(union`,array(char)),array(char)))))
(	O
void	O
)	O
{	O
return	O
rw_init	(int)->(*(struct(short,union(array(char),struct(union`,array(char)),array(char)))))
(	O
1	int
)	O
;	O
}	O
static	O
struct	O
tftphdr	struct(short,union(array(char),struct(union(short,short),array(char)),array(char)))
*	O
rw_init	(int)->(*(struct(short,union(array(char),struct(union`,array(char)),array(char)))))
(	O
int	O
x	int
)	O
{	O
newline	int
=	O
0	int
;	O
prevchar	int
=	O
-	O
1	int
;	O
bfs	array(struct(int,array(char)))
[	O
0	int
]	O
.	O
counter	int
=	O
BF_ALLOC	O
;	O
current	int
=	O
0	int
;	O
bfs	array(struct(int,array(char)))
[	O
1	int
]	O
.	O
counter	int
=	O
BF_FREE	O
;	O
nextone	int
=	O
x	int
;	O
return	O
(	O
struct	O
tftphdr	struct(short,union(array(char),struct(union(short,short),array(char)),array(char)))
*	O
)	O
bfs	array(struct(int,array(char)))
[	O
0	int
]	O
.	O
buf	array(char)
;	O
}	O
int	O
readit	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(*(struct(short,union(array(char),struct`,array(char))))),int)->(int)
(	O
FILE	struct
*	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
struct	O
tftphdr	struct(short,union(array(char),struct(union(short,short),array(char)),array(char)))
*	O
*	O
dpp	*(*(struct(short,union(array(char),struct(union`,array(char)),array(char)))))
,	O
int	O
convert	int
)	O
{	O
struct	O
bf	struct(int,array(char))
*	O
b	*(struct(int,array(char)))
;	O
bfs	array(struct(int,array(char)))
[	O
current	int
]	O
.	O
counter	int
=	O
BF_FREE	O
;	O
current	int
=	O
!	O
current	int
;	O
b	*(struct(int,array(char)))
=	O
&	O
bfs	array(struct(int,array(char)))
[	O
current	int
]	O
;	O
if	O
(	O
b	*(struct(int,array(char)))
->	O
counter	int
==	O
BF_FREE	O
)	O
read_ahead	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),int)->(void)
(	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
convert	int
)	O
;	O
*	O
dpp	*(*(struct(short,union(array(char),struct(union`,array(char)),array(char)))))
=	O
(	O
struct	O
tftphdr	struct(short,union(array(char),struct(union(short,short),array(char)),array(char)))
*	O
)	O
b	*(struct(int,array(char)))
->	O
buf	array(char)
;	O
return	O
b	*(struct(int,array(char)))
->	O
counter	int
;	O
}	O
void	O
read_ahead	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),int)->(void)
(	O
FILE	struct
*	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
int	O
convert	int
)	O
{	O
register	O
int	O
i	int
;	O
register	O
char	O
*	O
p	*(char)
;	O
register	O
int	O
c	int
;	O
struct	O
bf	struct(int,array(char))
*	O
b	*(struct(int,array(char)))
;	O
struct	O
tftphdr	struct(short,union(array(char),struct(union(short,short),array(char)),array(char)))
*	O
dp	*(struct(short,union(array(char),struct(union(short,short),array(char)),array(char))))
;	O
b	*(struct(int,array(char)))
=	O
&	O
bfs	array(struct(int,array(char)))
[	O
nextone	int
]	O
;	O
if	O
(	O
b	*(struct(int,array(char)))
->	O
counter	int
!=	O
BF_FREE	O
)	O
return	O
;	O
nextone	int
=	O
!	O
nextone	int
;	O
dp	*(struct(short,union(array(char),struct(union(short,short),array(char)),array(char))))
=	O
(	O
struct	O
tftphdr	struct(short,union(array(char),struct(union(short,short),array(char)),array(char)))
*	O
)	O
b	*(struct(int,array(char)))
->	O
buf	array(char)
;	O
if	O
(	O
convert	int
==	O
0	int
)	O
{	O
b	*(struct(int,array(char)))
->	O
counter	int
=	O
read	*((*(void),*(char),long)->(long))
(	O
fileno	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
,	O
dp	*(struct(short,union(array(char),struct(union(short,short),array(char)),array(char))))
->	O
th_data	O
,	O
SEGSIZE	int
)	O
;	O
return	O
;	O
}	O
p	*(char)
=	O
dp	*(struct(short,union(array(char),struct(union(short,short),array(char)),array(char))))
->	O
th_data	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
SEGSIZE	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
newline	int
)	O
{	O
if	O
(	O
prevchar	int
==	O
'\n'	O
)	O
c	int
=	O
'\n'	O
;	O
else	O
c	int
=	O
'\0'	O
;	O
newline	int
=	O
0	int
;	O
}	O
else	O
{	O
c	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
c	int
==	O
EOF	O
)	O
break	O
;	O
if	O
(	O
c	int
==	O
'\n'	O
||	O
c	int
==	O
'\r'	O
)	O
{	O
prevchar	int
=	O
c	int
;	O
c	int
=	O
'\r'	O
;	O
newline	int
=	O
1	int
;	O
}	O
}	O
*	O
p	*(char)
++	O
=	O
c	int
;	O
}	O
b	*(struct(int,array(char)))
->	O
counter	int
=	O
(	O
int	O
)	O
(	O
p	*(char)
-	O
dp	*(struct(short,union(array(char),struct(union(short,short),array(char)),array(char))))
->	O
th_data	O
)	O
;	O
}	O
int	O
writeit	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(*(struct(short,union(array(char),struct`,array(char))))),int,int)->(int)
(	O
FILE	struct
*	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
struct	O
tftphdr	struct(short,union(array(char),struct(union(short,short),array(char)),array(char)))
*	O
*	O
dpp	*(*(struct(short,union(array(char),struct(union`,array(char)),array(char)))))
,	O
int	O
ct	int
,	O
int	O
convert	int
)	O
{	O
bfs	array(struct(int,array(char)))
[	O
current	int
]	O
.	O
counter	int
=	O
ct	int
;	O
current	int
=	O
!	O
current	int
;	O
if	O
(	O
bfs	array(struct(int,array(char)))
[	O
current	int
]	O
.	O
counter	int
!=	O
BF_FREE	O
)	O
write_behind	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),int)->(int)
(	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
convert	int
)	O
;	O
bfs	array(struct(int,array(char)))
[	O
current	int
]	O
.	O
counter	int
=	O
BF_ALLOC	O
;	O
*	O
dpp	*(*(struct(short,union(array(char),struct(union`,array(char)),array(char)))))
=	O
(	O
struct	O
tftphdr	struct(short,union(array(char),struct(union(short,short),array(char)),array(char)))
*	O
)	O
bfs	array(struct(int,array(char)))
[	O
current	int
]	O
.	O
buf	array(char)
;	O
return	O
ct	int
;	O
}	O
int	O
write_behind	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),int)->(int)
(	O
FILE	struct
*	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
int	O
convert	int
)	O
{	O
char	O
*	O
buf	array(char)
;	O
int	O
count	int
;	O
register	O
int	O
ct	int
;	O
register	O
char	O
*	O
p	*(char)
;	O
register	O
int	O
c	int
;	O
struct	O
bf	struct(int,array(char))
*	O
b	*(struct(int,array(char)))
;	O
struct	O
tftphdr	struct(short,union(array(char),struct(union(short,short),array(char)),array(char)))
*	O
dp	*(struct(short,union(array(char),struct(union(short,short),array(char)),array(char))))
;	O
b	*(struct(int,array(char)))
=	O
&	O
bfs	array(struct(int,array(char)))
[	O
nextone	int
]	O
;	O
if	O
(	O
b	*(struct(int,array(char)))
->	O
counter	int
<	O
-	O
1	int
)	O
return	O
0	int
;	O
count	int
=	O
b	*(struct(int,array(char)))
->	O
counter	int
;	O
b	*(struct(int,array(char)))
->	O
counter	int
=	O
BF_FREE	O
;	O
dp	*(struct(short,union(array(char),struct(union(short,short),array(char)),array(char))))
=	O
(	O
struct	O
tftphdr	struct(short,union(array(char),struct(union(short,short),array(char)),array(char)))
*	O
)	O
b	*(struct(int,array(char)))
->	O
buf	array(char)
;	O
nextone	int
=	O
!	O
nextone	int
;	O
buf	array(char)
=	O
dp	*(struct(short,union(array(char),struct(union(short,short),array(char)),array(char))))
->	O
th_data	O
;	O
if	O
(	O
count	int
<=	O
0	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
convert	int
==	O
0	int
)	O
return	O
write	*((*(void),*(char),long)->(long))
(	O
fileno	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
,	O
buf	array(char)
,	O
count	int
)	O
;	O
p	*(char)
=	O
buf	array(char)
;	O
ct	int
=	O
count	int
;	O
while	O
(	O
ct	int
--	O
)	O
{	O
c	int
=	O
*	O
p	*(char)
++	O
;	O
if	O
(	O
prevchar	int
==	O
'\r'	O
)	O
{	O
if	O
(	O
c	int
==	O
'\n'	O
)	O
fseeko	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),long,int)->(int)
(	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
-	O
1	int
,	O
1	int
)	O
;	O
else	O
if	O
(	O
c	int
==	O
'\0'	O
)	O
goto	O
skipit	O
;	O
}	O
putc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
c	int
,	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
skipit	O
:	O
prevchar	int
=	O
c	int
;	O
}	O
return	O
count	int
;	O
}	O
int	O
synchnet	(int)->(int)
(	O
int	O
f	int
)	O
{	O
int	O
i	int
,	O
j	int
=	O
0	int
;	O
char	O
rbuf	array(char)
[	O
PKTSIZE	O
]	O
;	O
struct	O
sockaddr_storage	struct(short,array(char),long)
from	struct(short,array(char),long)
;	O
socklen_t	int
fromlen	int
;	O
while	O
(	O
1	int
)	O
{	O
ioctl	(int,long)->(int)
(	O
f	int
,	O
FIONREAD	int
,	O
&	O
i	int
)	O
;	O
if	O
(	O
i	int
)	O
{	O
j	int
++	O
;	O
fromlen	int
=	O
sizeof	O
from	struct(short,array(char),long)
;	O
recvfrom	(int,*(void),long,int,union(*(struct(short,array(char))),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct)),*(int))->(long)
(	O
f	int
,	O
rbuf	array(char)
,	O
sizeof	O
(	O
rbuf	array(char)
)	O
,	O
0	int
,	O
(	O
struct	O
sockaddr	struct(short,array(char))
*	O
)	O
&	O
from	struct(short,array(char),long)
,	O
&	O
fromlen	int
)	O
;	O
}	O
else	O
{	O
return	O
(	O
j	int
)	O
;	O
}	O
}	O
}	O
