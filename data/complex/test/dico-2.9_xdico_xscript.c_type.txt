struct	O
transcript_stream	struct(int,*(struct),*(struct),array(*(char)))
{	O
int	O
flags	int
;	O
dico_stream_t	*(struct)
transport	*(struct)
;	O
dico_stream_t	*(struct)
logstr	*(struct)
;	O
char	O
*	O
prefix	array(*(char))
[	O
2	int
]	O
;	O
}	O
;	O
static	O
void	O
print_transcript	(*(struct(int,*(struct),*(struct),array(*(char)))),int,*(char),long)->(void)
(	O
struct	O
transcript_stream	struct(int,*(struct),*(struct),array(*(char)))
*	O
str	*(struct)
,	O
int	O
flag	int
,	O
const	O
char	O
*	O
buf	*(void)
,	O
size_t	long
size	long
)	O
{	O
while	O
(	O
size	long
)	O
{	O
const	O
char	O
*	O
p	*(char)
;	O
size_t	long
len	int
;	O
if	O
(	O
str	*(struct)
->	O
flags	int
&	O
flag	int
)	O
{	O
dico_stream_write	(*(struct),*(void),long)->(int)
(	O
str	*(struct)
->	O
logstr	*(struct)
,	O
str	*(struct)
->	O
prefix	array(*(char))
[	O
FLAG_TO_PFX	O
(	O
flag	int
)	O
]	O
,	O
strlen	(*(char))->(long)
(	O
str	*(struct)
->	O
prefix	array(*(char))
[	O
FLAG_TO_PFX	O
(	O
flag	int
)	O
]	O
)	O
)	O
;	O
str	*(struct)
->	O
flags	int
&=	O
~	O
flag	int
;	O
}	O
p	*(char)
=	O
memchr	(*(void),int,long)->(*(void))
(	O
buf	*(void)
,	O
'\n'	O
,	O
size	long
)	O
;	O
if	O
(	O
p	*(char)
)	O
{	O
len	int
=	O
p	*(char)
-	O
buf	*(void)
;	O
if	O
(	O
p	*(char)
>	O
buf	*(void)
&&	O
p	*(char)
[	O
-	O
1	int
]	O
==	O
'\r'	O
)	O
len	int
--	O
;	O
dico_stream_write	(*(struct),*(void),long)->(int)
(	O
str	*(struct)
->	O
logstr	*(struct)
,	O
buf	*(void)
,	O
len	int
)	O
;	O
dico_stream_write	(*(struct),*(void),long)->(int)
(	O
str	*(struct)
->	O
logstr	*(struct)
,	O
"\n"	*(char)
,	O
1	int
)	O
;	O
str	*(struct)
->	O
flags	int
|=	O
flag	int
;	O
len	int
=	O
p	*(char)
-	O
buf	*(void)
+	O
1	int
;	O
buf	*(void)
=	O
p	*(char)
+	O
1	int
;	O
size	long
-=	O
len	int
;	O
}	O
else	O
{	O
dico_stream_write	(*(struct),*(void),long)->(int)
(	O
str	*(struct)
->	O
logstr	*(struct)
,	O
buf	*(void)
,	O
size	long
)	O
;	O
break	O
;	O
}	O
}	O
}	O
static	O
int	O
transcript_read	(*(void),*(char),long,*(long))->(int)
(	O
void	O
*	O
data	*(void)
,	O
char	O
*	O
buf	*(void)
,	O
size_t	long
size	long
,	O
size_t	long
*	O
pret	*(*(void))
)	O
{	O
struct	O
transcript_stream	struct(int,*(struct),*(struct),array(*(char)))
*	O
p	*(char)
=	O
data	*(void)
;	O
size_t	long
nbytes	long
;	O
if	O
(	O
dico_stream_read	(*(struct),*(void),long,*(long))->(int)
(	O
p	*(char)
->	O
transport	*(struct)
,	O
buf	*(void)
,	O
size	long
,	O
&	O
nbytes	long
)	O
==	O
0	int
)	O
{	O
print_transcript	(*(struct(int,*(struct),*(struct),array(*(char)))),int,*(char),long)->(void)
(	O
p	*(char)
,	O
TRANS_READ	int
,	O
buf	*(void)
,	O
nbytes	long
)	O
;	O
if	O
(	O
pret	*(*(void))
)	O
*	O
pret	*(*(void))
=	O
nbytes	long
;	O
}	O
else	O
return	O
dico_stream_last_error	(*(struct))->(int)
(	O
p	*(char)
->	O
transport	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
transcript_write	(*(void),*(char),long,*(long))->(int)
(	O
void	O
*	O
data	*(void)
,	O
const	O
char	O
*	O
buf	*(void)
,	O
size_t	long
size	long
,	O
size_t	long
*	O
pret	*(*(void))
)	O
{	O
struct	O
transcript_stream	struct(int,*(struct),*(struct),array(*(char)))
*	O
p	*(char)
=	O
data	*(void)
;	O
if	O
(	O
dico_stream_write	(*(struct),*(void),long)->(int)
(	O
p	*(char)
->	O
transport	*(struct)
,	O
buf	*(void)
,	O
size	long
)	O
==	O
0	int
)	O
{	O
print_transcript	(*(struct(int,*(struct),*(struct),array(*(char)))),int,*(char),long)->(void)
(	O
p	*(char)
,	O
TRANS_WRITE	int
,	O
buf	*(void)
,	O
size	long
)	O
;	O
if	O
(	O
pret	*(*(void))
)	O
*	O
pret	*(*(void))
=	O
size	long
;	O
}	O
else	O
return	O
dico_stream_last_error	(*(struct))->(int)
(	O
p	*(char)
->	O
transport	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
transcript_flush	(*(void))->(int)
(	O
void	O
*	O
data	*(void)
)	O
{	O
struct	O
transcript_stream	struct(int,*(struct),*(struct),array(*(char)))
*	O
p	*(char)
=	O
data	*(void)
;	O
if	O
(	O
!	O
p	*(char)
->	O
transport	*(struct)
)	O
return	O
0	int
;	O
return	O
dico_stream_flush	(*(struct))->(int)
(	O
p	*(char)
->	O
transport	*(struct)
)	O
;	O
}	O
static	O
int	O
transcript_close	(*(void))->(int)
(	O
void	O
*	O
data	*(void)
)	O
{	O
struct	O
transcript_stream	struct(int,*(struct),*(struct),array(*(char)))
*	O
p	*(char)
=	O
data	*(void)
;	O
dico_stream_close	(*(struct))->(int)
(	O
p	*(char)
->	O
logstr	*(struct)
)	O
;	O
dico_stream_close	(*(struct))->(int)
(	O
p	*(char)
->	O
transport	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
transcript_destroy	(*(void))->(int)
(	O
void	O
*	O
data	*(void)
)	O
{	O
struct	O
transcript_stream	struct(int,*(struct),*(struct),array(*(char)))
*	O
p	*(char)
=	O
data	*(void)
;	O
free	(*(void))->(void)
(	O
p	*(char)
->	O
prefix	array(*(char))
[	O
0	int
]	O
)	O
;	O
free	(*(void))->(void)
(	O
p	*(char)
->	O
prefix	array(*(char))
[	O
1	int
]	O
)	O
;	O
dico_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
p	*(char)
->	O
transport	*(struct)
)	O
;	O
dico_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
p	*(char)
->	O
logstr	*(struct)
)	O
;	O
free	(*(void))->(void)
(	O
p	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
static	O
const	O
char	O
*	O
transcript_strerror	(*(void),int)->(*(char))
(	O
void	O
*	O
data	*(void)
,	O
int	O
rc	int
)	O
{	O
struct	O
transcript_stream	struct(int,*(struct),*(struct),array(*(char)))
*	O
p	*(char)
=	O
data	*(void)
;	O
return	O
dico_stream_strerror	(*(struct),int)->(*(char))
(	O
p	*(char)
->	O
transport	*(struct)
,	O
rc	int
)	O
;	O
}	O
static	O
int	O
transcript_ioctl	(*(void),int,*(void))->(int)
(	O
void	O
*	O
data	*(void)
,	O
int	O
code	int
,	O
void	O
*	O
call_data	*(void)
)	O
{	O
struct	O
transcript_stream	struct(int,*(struct),*(struct),array(*(char)))
*	O
p	*(char)
=	O
data	*(void)
;	O
switch	O
(	O
code	int
)	O
{	O
case	O
DICO_IOCTL_GET_TRANSPORT	int
:	O
*	O
(	O
dico_stream_t	*(struct)
*	O
)	O
call_data	*(void)
=	O
p	*(char)
->	O
transport	*(struct)
;	O
break	O
;	O
case	O
DICO_IOCTL_SET_TRANSPORT	int
:	O
p	*(char)
->	O
transport	*(struct)
=	O
call_data	*(void)
;	O
break	O
;	O
case	O
DICO_IOCTL_BYTES_IN	int
:	O
*	O
(	O
off_t	long
*	O
)	O
call_data	*(void)
=	O
dico_stream_bytes_in	(*(struct))->(long)
(	O
p	*(char)
->	O
transport	*(struct)
)	O
;	O
break	O
;	O
case	O
DICO_IOCTL_BYTES_OUT	int
:	O
*	O
(	O
off_t	long
*	O
)	O
call_data	*(void)
=	O
dico_stream_bytes_out	(*(struct))->(long)
(	O
p	*(char)
->	O
transport	*(struct)
)	O
;	O
break	O
;	O
default	O
:	O
errno	O
=	O
EINVAL	int
;	O
return	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
const	O
char	O
*	O
default_prefix	array(*(char))
[	O
2	int
]	O
=	O
{	O
"C: "	*(char)
,	O
"S: "	*(char)
}	O
;	O
dico_stream_t	*(struct)
xdico_transcript_stream_create	(*(struct),*(struct),array(*(char)))->(*(struct))
(	O
dico_stream_t	*(struct)
transport	*(struct)
,	O
dico_stream_t	*(struct)
logstr	*(struct)
,	O
const	O
char	O
*	O
prefix	array(*(char))
[	O
]	O
)	O
{	O
struct	O
transcript_stream	struct(int,*(struct),*(struct),array(*(char)))
*	O
p	*(char)
=	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
p	*(char)
)	O
)	O
;	O
dico_stream_t	*(struct)
stream	*(struct)
;	O
int	O
rc	int
=	O
dico_stream_create	(*(*(struct)),int,*(void))->(int)
(	O
&	O
stream	*(struct)
,	O
DICO_STREAM_READ	int
|	O
DICO_STREAM_WRITE	int
,	O
p	*(char)
)	O
;	O
if	O
(	O
rc	int
)	O
xalloc_die	()->(void)
(	O
)	O
;	O
p	*(char)
->	O
flags	int
=	O
TRANS_READ	int
|	O
TRANS_WRITE	int
;	O
if	O
(	O
prefix	array(*(char))
)	O
{	O
p	*(char)
->	O
prefix	array(*(char))
[	O
0	int
]	O
=	O
xstrdup	(*(char))->(*(char))
(	O
prefix	array(*(char))
[	O
0	int
]	O
?	O
prefix	array(*(char))
[	O
0	int
]	O
:	O
default_prefix	array(*(char))
[	O
0	int
]	O
)	O
;	O
p	*(char)
->	O
prefix	array(*(char))
[	O
1	int
]	O
=	O
xstrdup	(*(char))->(*(char))
(	O
prefix	array(*(char))
[	O
1	int
]	O
?	O
prefix	array(*(char))
[	O
1	int
]	O
:	O
default_prefix	array(*(char))
[	O
1	int
]	O
)	O
;	O
}	O
else	O
{	O
p	*(char)
->	O
prefix	array(*(char))
[	O
0	int
]	O
=	O
xstrdup	(*(char))->(*(char))
(	O
default_prefix	array(*(char))
[	O
0	int
]	O
)	O
;	O
p	*(char)
->	O
prefix	array(*(char))
[	O
1	int
]	O
=	O
xstrdup	(*(char))->(*(char))
(	O
default_prefix	array(*(char))
[	O
1	int
]	O
)	O
;	O
}	O
p	*(char)
->	O
transport	*(struct)
=	O
transport	*(struct)
;	O
p	*(char)
->	O
logstr	*(struct)
=	O
logstr	*(struct)
;	O
dico_stream_set_read	(*(struct),*((*(void),*(char),long,*(long))->(int)))->(void)
(	O
stream	*(struct)
,	O
transcript_read	(*(void),*(char),long,*(long))->(int)
)	O
;	O
dico_stream_set_write	(*(struct),*((*(void),*(char),long,*(long))->(int)))->(void)
(	O
stream	*(struct)
,	O
transcript_write	(*(void),*(char),long,*(long))->(int)
)	O
;	O
dico_stream_set_flush	(*(struct),*((*(void))->(int)))->(void)
(	O
stream	*(struct)
,	O
transcript_flush	(*(void))->(int)
)	O
;	O
dico_stream_set_close	(*(struct),*((*(void))->(int)))->(void)
(	O
stream	*(struct)
,	O
transcript_close	(*(void))->(int)
)	O
;	O
dico_stream_set_destroy	(*(struct),*((*(void))->(int)))->(void)
(	O
stream	*(struct)
,	O
transcript_destroy	(*(void))->(int)
)	O
;	O
dico_stream_set_ioctl	(*(struct),*((*(void),int,*(void))->(int)))->(void)
(	O
stream	*(struct)
,	O
transcript_ioctl	(*(void),int,*(void))->(int)
)	O
;	O
dico_stream_set_error_string	(*(struct),*((*(void),int)->(*(char))))->(void)
(	O
stream	*(struct)
,	O
transcript_strerror	(*(void),int)->(*(char))
)	O
;	O
dico_stream_set_buffer	(*(struct),enum(int,int,int),long)->(int)
(	O
stream	*(struct)
,	O
dico_buffer_line	int
,	O
1024	int
)	O
;	O
return	O
stream	*(struct)
;	O
}	O
