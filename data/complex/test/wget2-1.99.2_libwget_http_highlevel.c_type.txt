static	O
int	O
_stream_callback	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)),*(void),*(char),long)->(int)
(	O
wget_http_response	struct
*	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
WGET_GCC_UNUSED	O
,	O
void	O
*	O
user_data	*(void)
,	O
const	O
char	O
*	O
data	*(void)
,	O
size_t	long
length	long
)	O
{	O
FILE	struct
*	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
(	O
FILE	struct
*	O
)	O
user_data	*(void)
;	O
size_t	long
nbytes	long
=	O
fwrite	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
data	*(void)
,	O
1	int
,	O
length	long
,	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
nbytes	long
!=	O
length	long
)	O
{	O
error_printf	O
(	O
_	O
(	O
"Failed to write %zu bytes of data (%d: %s)\n"	*(char)
)	O
,	O
length	long
,	O
errno	O
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
if	O
(	O
feof	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
return	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
static	O
int	O
_fd_callback	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)),*(void),*(char),long)->(int)
(	O
wget_http_response	struct
*	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
WGET_GCC_UNUSED	O
,	O
void	O
*	O
user_data	*(void)
,	O
const	O
char	O
*	O
data	*(void)
,	O
size_t	long
length	long
)	O
{	O
int	O
fd	array(int)
=	O
*	O
(	O
int	O
*	O
)	O
user_data	*(void)
;	O
ssize_t	long
nbytes	long
=	O
write	*((*(void),*(char),long)->(long))
(	O
fd	array(int)
,	O
data	*(void)
,	O
length	long
)	O
;	O
if	O
(	O
nbytes	long
==	O
-	O
1	int
||	O
(	O
size_t	long
)	O
nbytes	long
!=	O
length	long
)	O
error_printf	O
(	O
_	O
(	O
"Failed to write %zu bytes of data (%d: %s)\n"	*(char)
)	O
,	O
length	long
,	O
errno	O
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
0	int
;	O
}	O
wget_http_response	struct
*	O
wget_http_get	(int)->(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
(	O
int	O
first_key	int
,	O
...	O
)	O
{	O
wget_vector	struct
*	O
headers	*(struct)
;	O
wget_iri	struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)
*	O
uri	*(char)
=	O
NULL	O
;	O
wget_http_connection	struct
*	O
conn	*(struct)
=	O
NULL	O
,	O
*	O
*	O
connp	*(*(struct(*(struct),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct),*(struct),int,enum(int,int),short,char,bool,bool,bool)))
=	O
NULL	O
;	O
wget_http_request	struct(*(struct),*(char),*((*(struct),*(void))->(int)),*((*(struct),*(void),*(char),long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)
*	O
req	*(struct(*(struct),*(char),*((*(struct`),*(void))->(int)),*((*(struct`),*(void),*(char),long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long))
;	O
wget_http_response	struct
*	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
=	O
NULL	O
;	O
wget_vector	struct
*	O
challenges	*(struct)
=	O
NULL	O
;	O
wget_cookie_db	struct
*	O
cookie_db	*(struct)
=	O
NULL	O
;	O
FILE	struct
*	O
saveas_stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
NULL	O
;	O
wget_http_body_callback	(*(struct),*(void),*(char),long)->(int)
*	O
saveas_callback	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)),*(void),*(char),long)->(int))
=	O
NULL	O
;	O
int	O
saveas_fd	int
=	O
-	O
1	int
;	O
wget_http_header_callback	(*(struct),*(void))->(int)
*	O
header_callback	*((*(struct),*(void))->(int))
=	O
NULL	O
;	O
va_list	array(struct(int,int,*(void),*(void)))
args	array(struct(int,int,*(void),*(void)))
;	O
const	O
char	O
*	O
url	*(char)
=	O
NULL	O
,	O
*	O
url_encoding	*(char)
=	O
NULL	O
,	O
*	O
scheme	enum(int,int)
=	O
"GET"	*(char)
;	O
const	O
char	O
*	O
http_username	*(char)
=	O
NULL	O
,	O
*	O
http_password	*(char)
=	O
NULL	O
;	O
const	O
char	O
*	O
saveas_name	*(char)
=	O
NULL	O
;	O
int	O
key	int
,	O
it	int
,	O
max_redirections	int
=	O
5	int
,	O
redirection_level	int
=	O
0	int
;	O
size_t	long
bodylen	long
=	O
0	int
;	O
const	O
void	O
*	O
body	*(char)
=	O
NULL	O
;	O
void	O
*	O
header_user_data	*(void)
=	O
NULL	O
,	O
*	O
body_user_data	*(void)
=	O
NULL	O
;	O
struct	O
{	O
bool	bool
cookies_enabled	bool
:	O
1	int
,	O
keep_header	bool
:	O
1	int
,	O
free_uri	bool
:	O
1	int
;	O
}	O
bits	int
=	O
{	O
.	O
cookies_enabled	bool
=	O
wget_global_get_int	(int)->(int)
(	O
WGET_COOKIES_ENABLED	int
)	O
!=	O
0	int
}	O
;	O
if	O
(	O
!	O
(	O
headers	*(struct)
=	O
wget_vector_create	(int,*((*(void),*(void))->(int)))->(*(struct))
(	O
8	int
,	O
NULL	O
)	O
)	O
)	O
{	O
debug_printf	O
(	O
"no memory\n"	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
va_start	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
first_key	int
)	O
;	O
for	O
(	O
key	int
=	O
first_key	int
;	O
key	int
;	O
key	int
=	O
va_arg	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
int	O
)	O
)	O
{	O
switch	O
(	O
key	int
)	O
{	O
case	O
WGET_HTTP_URL	int
:	O
url	*(char)
=	O
va_arg	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
const	O
char	O
*	O
)	O
;	O
break	O
;	O
case	O
WGET_HTTP_URI	int
:	O
uri	*(char)
=	O
va_arg	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
wget_iri	struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)
*	O
)	O
;	O
break	O
;	O
case	O
WGET_HTTP_URL_ENCODING	int
:	O
url_encoding	*(char)
=	O
va_arg	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
const	O
char	O
*	O
)	O
;	O
break	O
;	O
case	O
WGET_HTTP_HEADER_ADD	int
:	O
{	O
wget_http_header_param	struct(*(char),*(char))
param	*(*(char))
=	O
{	O
.	O
name	*(char)
=	O
va_arg	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
const	O
char	O
*	O
)	O
,	O
.	O
value	*(void)
=	O
va_arg	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
const	O
char	O
*	O
)	O
}	O
;	O
if	O
(	O
wget_vector_add_memdup	(*(struct),*(void),long)->(int)
(	O
headers	*(struct)
,	O
&	O
param	*(*(char))
,	O
sizeof	O
(	O
param	*(*(char))
)	O
)	O
<	O
0	int
)	O
{	O
va_end	O
(	O
args	array(struct(int,int,*(void),*(void)))
)	O
;	O
goto	O
out	*(*(char))
;	O
}	O
break	O
;	O
}	O
case	O
WGET_HTTP_CONNECTION_PTR	int
:	O
connp	*(*(struct(*(struct),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct),*(struct),int,enum(int,int),short,char,bool,bool,bool)))
=	O
va_arg	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
wget_http_connection	struct
*	O
*	O
)	O
;	O
if	O
(	O
connp	*(*(struct(*(struct),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct),*(struct),int,enum(int,int),short,char,bool,bool,bool)))
)	O
conn	*(struct)
=	O
*	O
connp	*(*(struct(*(struct),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct),*(struct),int,enum(int,int),short,char,bool,bool,bool)))
;	O
break	O
;	O
case	O
WGET_HTTP_RESPONSE_KEEPHEADER	int
:	O
bits	int
.	O
keep_header	bool
=	O
va_arg	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
int	O
)	O
;	O
break	O
;	O
case	O
WGET_HTTP_MAX_REDIRECTIONS	int
:	O
max_redirections	int
=	O
va_arg	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
int	O
)	O
;	O
break	O
;	O
case	O
WGET_HTTP_BODY_SAVEAS	int
:	O
saveas_name	*(char)
=	O
va_arg	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
const	O
char	O
*	O
)	O
;	O
break	O
;	O
case	O
WGET_HTTP_BODY_SAVEAS_STREAM	int
:	O
saveas_stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
va_arg	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
FILE	struct
*	O
)	O
;	O
break	O
;	O
case	O
WGET_HTTP_BODY_SAVEAS_FUNC	int
:	O
saveas_callback	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)),*(void),*(char),long)->(int))
=	O
va_arg	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
wget_http_body_callback	(*(struct),*(void),*(char),long)->(int)
*	O
)	O
;	O
body_user_data	*(void)
=	O
va_arg	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
void	O
*	O
)	O
;	O
break	O
;	O
case	O
WGET_HTTP_BODY_SAVEAS_FD	int
:	O
saveas_fd	int
=	O
va_arg	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
int	O
)	O
;	O
break	O
;	O
case	O
WGET_HTTP_HEADER_FUNC	int
:	O
header_callback	*((*(struct),*(void))->(int))
=	O
va_arg	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
wget_http_header_callback	(*(struct),*(void))->(int)
*	O
)	O
;	O
header_user_data	*(void)
=	O
va_arg	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
void	O
*	O
)	O
;	O
break	O
;	O
case	O
WGET_HTTP_SCHEME	int
:	O
scheme	enum(int,int)
=	O
va_arg	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
const	O
char	O
*	O
)	O
;	O
break	O
;	O
case	O
WGET_HTTP_BODY	int
:	O
body	*(char)
=	O
va_arg	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
const	O
void	O
*	O
)	O
;	O
bodylen	long
=	O
va_arg	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
size_t	long
)	O
;	O
break	O
;	O
default	O
:	O
error_printf	O
(	O
_	O
(	O
"Unknown option %d\n"	*(char)
)	O
,	O
key	int
)	O
;	O
va_end	O
(	O
args	array(struct(int,int,*(void),*(void)))
)	O
;	O
goto	O
out	*(*(char))
;	O
}	O
}	O
va_end	O
(	O
args	array(struct(int,int,*(void),*(void)))
)	O
;	O
if	O
(	O
url	*(char)
&&	O
!	O
uri	*(char)
)	O
{	O
uri	*(char)
=	O
wget_iri_parse	(*(char),*(char))->(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))
(	O
url	*(char)
,	O
url_encoding	*(char)
)	O
;	O
if	O
(	O
!	O
uri	*(char)
)	O
{	O
error_printf	O
(	O
_	O
(	O
"Error parsing URL\n"	*(char)
)	O
)	O
;	O
goto	O
out	*(*(char))
;	O
}	O
bits	int
.	O
free_uri	bool
=	O
1	int
;	O
}	O
if	O
(	O
!	O
uri	*(char)
)	O
{	O
error_printf	O
(	O
_	O
(	O
"Missing URL/URI\n"	*(char)
)	O
)	O
;	O
goto	O
out	*(*(char))
;	O
}	O
if	O
(	O
bits	int
.	O
cookies_enabled	bool
)	O
cookie_db	*(struct)
=	O
(	O
wget_cookie_db	struct
*	O
)	O
wget_global_get_ptr	(int)->(*(void))
(	O
WGET_COOKIE_DB	int
)	O
;	O
while	O
(	O
uri	*(char)
&&	O
redirection_level	int
<=	O
max_redirections	int
)	O
{	O
req	*(struct(*(struct),*(char),*((*(struct`),*(void))->(int)),*((*(struct`),*(void),*(char),long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long))
=	O
wget_http_create_request	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char))->(*(struct(*(struct),*(char),*((*`,*`)->(int)),*((*`,*`,*`,long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)))
(	O
uri	*(char)
,	O
scheme	enum(int,int)
)	O
;	O
if	O
(	O
!	O
req	*(struct(*(struct),*(char),*((*(struct`),*(void))->(int)),*((*(struct`),*(void),*(char),long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long))
)	O
goto	O
out	*(*(char))
;	O
for	O
(	O
it	int
=	O
0	int
;	O
it	int
<	O
wget_vector_size	(*(struct))->(int)
(	O
headers	*(struct)
)	O
;	O
it	int
++	O
)	O
{	O
wget_http_add_header_param	(*(struct(*(struct),*(char),*((*`,*`)->(int)),*((*`,*`,*`,long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct(*(char),*(char))))->(int)
(	O
req	*(struct(*(struct),*(char),*((*(struct`),*(void))->(int)),*((*(struct`),*(void),*(char),long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long))
,	O
wget_vector_get	(*(struct),int)->(*(void))
(	O
headers	*(struct)
,	O
it	int
)	O
)	O
;	O
}	O
if	O
(	O
challenges	*(struct)
)	O
{	O
wget_http_add_credentials	(*(struct(*(struct),*(char),*((*`,*`)->(int)),*((*`,*`,*`,long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct(*(char),*(struct))),*(char),*(char),int)->(void)
(	O
req	*(struct(*(struct),*(char),*((*(struct`),*(void))->(int)),*((*(struct`),*(void),*(char),long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long))
,	O
wget_vector_get	(*(struct),int)->(*(void))
(	O
challenges	*(struct)
,	O
0	int
)	O
,	O
http_username	*(char)
,	O
http_password	*(char)
,	O
0	int
)	O
;	O
wget_http_free_challenges	(*(*(struct)))->(void)
(	O
&	O
challenges	*(struct)
)	O
;	O
}	O
if	O
(	O
cookie_db	*(struct)
)	O
{	O
const	O
char	O
*	O
cookie_string	*(char)
;	O
if	O
(	O
(	O
cookie_string	*(char)
=	O
wget_cookie_create_request_header	(*(struct),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))->(*(char))
(	O
cookie_db	*(struct)
,	O
uri	*(char)
)	O
)	O
)	O
{	O
wget_http_add_header	(*(struct(*(struct),*(char),*((*`,*`)->(int)),*((*`,*`,*`,long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(char),*(char))->(int)
(	O
req	*(struct(*(struct),*(char),*((*(struct`),*(void))->(int)),*((*(struct`),*(void),*(char),long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long))
,	O
"Cookie"	*(char)
,	O
cookie_string	*(char)
)	O
;	O
xfree	O
(	O
cookie_string	*(char)
)	O
;	O
}	O
}	O
if	O
(	O
connp	*(*(struct(*(struct),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct),*(struct),int,enum(int,int),short,char,bool,bool,bool)))
)	O
{	O
wget_http_add_header	(*(struct(*(struct),*(char),*((*`,*`)->(int)),*((*`,*`,*`,long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(char),*(char))->(int)
(	O
req	*(struct(*(struct),*(char),*((*(struct`),*(void))->(int)),*((*(struct`),*(void),*(char),long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long))
,	O
"Connection"	*(char)
,	O
"keepalive"	*(char)
)	O
;	O
}	O
if	O
(	O
conn	*(struct)
&&	O
!	O
wget_strcmp	(*(char),*(char))->(int)
(	O
conn	*(struct)
->	O
esc_host	struct(*(char),long,long,bool,bool,bool)
,	O
uri	*(char)
->	O
host	*(char)
)	O
&&	O
conn	*(struct)
->	O
scheme	enum(int,int)
==	O
uri	*(char)
->	O
scheme	enum(int,int)
&&	O
conn	*(struct)
->	O
port	short
==	O
uri	*(char)
->	O
port	short
)	O
{	O
debug_printf	O
(	O
"reuse connection %s\n"	*(char)
,	O
conn	*(struct)
->	O
esc_host	struct(*(char),long,long,bool,bool,bool)
)	O
;	O
}	O
else	O
{	O
if	O
(	O
conn	*(struct)
)	O
{	O
debug_printf	O
(	O
"close connection %s\n"	*(char)
,	O
conn	*(struct)
->	O
esc_host	struct(*(char),long,long,bool,bool,bool)
)	O
;	O
wget_http_close	(*(*(struct)))->(void)
(	O
&	O
conn	*(struct)
)	O
;	O
}	O
if	O
(	O
wget_http_open	(*(*(struct)),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))->(int)
(	O
&	O
conn	*(struct)
,	O
uri	*(char)
)	O
==	O
WGET_E_SUCCESS	int
)	O
debug_printf	O
(	O
"opened connection %s\n"	*(char)
,	O
conn	*(struct)
->	O
esc_host	struct(*(char),long,long,bool,bool,bool)
)	O
;	O
}	O
if	O
(	O
conn	*(struct)
)	O
{	O
int	O
rc	int
;	O
if	O
(	O
body	*(char)
&&	O
bodylen	long
)	O
wget_http_request_set_body	(*(struct(*(struct),*(char),*((*`,*`)->(int)),*((*`,*`,*`,long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(char),*(char),long)->(void)
(	O
req	*(struct(*(struct),*(char),*((*(struct`),*(void))->(int)),*((*(struct`),*(void),*(char),long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long))
,	O
NULL	O
,	O
wget_memdup	(*(void),long)->(*(void))
(	O
body	*(char)
,	O
bodylen	long
)	O
,	O
bodylen	long
)	O
;	O
rc	int
=	O
wget_http_send_request	(*(struct),*(struct(*(struct),*(char),*((*`,*`)->(int)),*((*`,*`,*`,long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)))->(int)
(	O
conn	*(struct)
,	O
req	*(struct(*(struct),*(char),*((*(struct`),*(void))->(int)),*((*(struct`),*(void),*(char),long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long))
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
wget_http_request_set_header_cb	(*(struct(*(struct),*(char),*((*`,*`)->(int)),*((*`,*`,*`,long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)),*(void))->(int)),*(void))->(void)
(	O
req	*(struct(*(struct),*(char),*((*(struct`),*(void))->(int)),*((*(struct`),*(void),*(char),long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long))
,	O
header_callback	*((*(struct),*(void))->(int))
,	O
header_user_data	*(void)
)	O
;	O
wget_http_request_set_int	(*(struct(*(struct),*(char),*((*`,*`)->(int)),*((*`,*`,*`,long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),int,int)->(void)
(	O
req	*(struct(*(struct),*(char),*((*(struct`),*(void))->(int)),*((*(struct`),*(void),*(char),long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long))
,	O
WGET_HTTP_RESPONSE_KEEPHEADER	int
,	O
1	int
)	O
;	O
if	O
(	O
saveas_name	*(char)
)	O
{	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
if	O
(	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
saveas_name	*(char)
,	O
"wb"	*(char)
)	O
)	O
)	O
{	O
wget_http_request_set_body_cb	(*(struct(*(struct),*(char),*((*`,*`)->(int)),*((*`,*`,*`,long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)),*(void),*(char),long)->(int)),*(void))->(void)
(	O
req	*(struct(*(struct),*(char),*((*(struct`),*(void))->(int)),*((*(struct`),*(void),*(char),long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long))
,	O
_stream_callback	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)),*(void),*(char),long)->(int)
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
=	O
wget_http_get_response	(*(struct))->(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
(	O
conn	*(struct)
)	O
;	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
else	O
debug_printf	O
(	O
"Failed to open '%s' for writing\n"	*(char)
,	O
saveas_name	*(char)
)	O
;	O
}	O
else	O
if	O
(	O
saveas_stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
wget_http_request_set_body_cb	(*(struct(*(struct),*(char),*((*`,*`)->(int)),*((*`,*`,*`,long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)),*(void),*(char),long)->(int)),*(void))->(void)
(	O
req	*(struct(*(struct),*(char),*((*(struct`),*(void))->(int)),*((*(struct`),*(void),*(char),long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long))
,	O
_stream_callback	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)),*(void),*(char),long)->(int)
,	O
saveas_stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
=	O
wget_http_get_response	(*(struct))->(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
(	O
conn	*(struct)
)	O
;	O
}	O
else	O
if	O
(	O
saveas_callback	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)),*(void),*(char),long)->(int))
)	O
{	O
wget_http_request_set_body_cb	(*(struct(*(struct),*(char),*((*`,*`)->(int)),*((*`,*`,*`,long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)),*(void),*(char),long)->(int)),*(void))->(void)
(	O
req	*(struct(*(struct),*(char),*((*(struct`),*(void))->(int)),*((*(struct`),*(void),*(char),long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long))
,	O
saveas_callback	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)),*(void),*(char),long)->(int))
,	O
body_user_data	*(void)
)	O
;	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
=	O
wget_http_get_response	(*(struct))->(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
(	O
conn	*(struct)
)	O
;	O
}	O
else	O
if	O
(	O
saveas_fd	int
!=	O
-	O
1	int
)	O
{	O
wget_http_request_set_body_cb	(*(struct(*(struct),*(char),*((*`,*`)->(int)),*((*`,*`,*`,long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)),*(void),*(char),long)->(int)),*(void))->(void)
(	O
req	*(struct(*(struct),*(char),*((*(struct`),*(void))->(int)),*((*(struct`),*(void),*(char),long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long))
,	O
_fd_callback	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)),*(void),*(char),long)->(int)
,	O
&	O
saveas_fd	int
)	O
;	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
=	O
wget_http_get_response	(*(struct))->(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
(	O
conn	*(struct)
)	O
;	O
}	O
else	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
=	O
wget_http_get_response	(*(struct))->(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
(	O
conn	*(struct)
)	O
;	O
}	O
}	O
wget_http_free_request	(*(*(struct(*(struct`),*(char),*((*`,*`)->(int)),*((*`,*`,*`,long)->(int)),*(void),*(void),*(void),struct(*`,long,long,bool,bool,bool),struct(*`,long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long))))->(void)
(	O
&	O
req	*(struct(*(struct),*(char),*((*(struct`),*(void))->(int)),*((*(struct`),*(void),*(char),long)->(int)),*(void),*(void),*(void),struct(*(char),long,long,bool,bool,bool),struct(*(char),long,long,bool,bool,bool),long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long))
)	O
;	O
if	O
(	O
!	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
)	O
goto	O
out	*(*(char))
;	O
if	O
(	O
!	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
->	O
keep_alive	char
)	O
wget_http_close	(*(*(struct)))->(void)
(	O
&	O
conn	*(struct)
)	O
;	O
if	O
(	O
cookie_db	*(struct)
)	O
{	O
wget_cookie_normalize_cookies	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct))->(void)
(	O
uri	*(char)
,	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
->	O
cookies	*(struct)
)	O
;	O
wget_cookie_store_cookies	(*(struct),*(struct))->(void)
(	O
cookie_db	*(struct)
,	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
->	O
cookies	*(struct)
)	O
;	O
}	O
if	O
(	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
->	O
code	short
==	O
401	int
&&	O
!	O
challenges	*(struct)
)	O
{	O
if	O
(	O
(	O
challenges	*(struct)
=	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
->	O
challenges	*(struct)
)	O
)	O
{	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
->	O
challenges	*(struct)
=	O
NULL	O
;	O
wget_http_free_response	(*(*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long))))->(void)
(	O
&	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
)	O
;	O
if	O
(	O
redirection_level	int
==	O
0	int
&&	O
max_redirections	int
)	O
{	O
redirection_level	int
=	O
max_redirections	int
;	O
continue	O
;	O
}	O
}	O
break	O
;	O
}	O
if	O
(	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
->	O
code	short
/	O
100	int
==	O
2	int
||	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
->	O
code	short
/	O
100	int
>=	O
4	int
||	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
->	O
code	short
==	O
304	int
)	O
break	O
;	O
if	O
(	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
->	O
location	*(char)
)	O
{	O
char	O
uri_sbuf	array(char)
[	O
1024	int
]	O
;	O
wget_buffer	struct(*(char),long,long,bool,bool,bool)
uri_buf	struct(*(char),long,long,bool,bool,bool)
;	O
wget_buffer_init	(*(struct(*(char),long,long,bool,bool,bool)),*(char),long)->(int)
(	O
&	O
uri_buf	struct(*(char),long,long,bool,bool,bool)
,	O
uri_sbuf	array(char)
,	O
sizeof	O
(	O
uri_sbuf	array(char)
)	O
)	O
;	O
wget_iri_relative_to_abs	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),long,*(struct(*(char),long,long,bool,bool,bool)))->(*(char))
(	O
uri	*(char)
,	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
->	O
location	*(char)
,	O
-	O
1	int
,	O
&	O
uri_buf	struct(*(char),long,long,bool,bool,bool)
)	O
;	O
if	O
(	O
bits	int
.	O
free_uri	bool
)	O
wget_iri_free	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool))))->(void)
(	O
&	O
uri	*(char)
)	O
;	O
uri	*(char)
=	O
wget_iri_parse	(*(char),*(char))->(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))
(	O
uri_buf	struct(*(char),long,long,bool,bool,bool)
.	O
data	*(void)
,	O
NULL	O
)	O
;	O
bits	int
.	O
free_uri	bool
=	O
1	int
;	O
wget_buffer_deinit	(*(struct(*(char),long,long,bool,bool,bool)))->(void)
(	O
&	O
uri_buf	struct(*(char),long,long,bool,bool,bool)
)	O
;	O
redirection_level	int
++	O
;	O
continue	O
;	O
}	O
break	O
;	O
}	O
out	*(*(char))
:	O
if	O
(	O
connp	*(*(struct(*(struct),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct),*(struct),int,enum(int,int),short,char,bool,bool,bool)))
)	O
{	O
*	O
connp	*(*(struct(*(struct),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct),*(struct),int,enum(int,int),short,char,bool,bool,bool)))
=	O
conn	*(struct)
;	O
}	O
else	O
{	O
wget_http_close	(*(*(struct)))->(void)
(	O
&	O
conn	*(struct)
)	O
;	O
}	O
wget_http_free_challenges	(*(*(struct)))->(void)
(	O
&	O
challenges	*(struct)
)	O
;	O
wget_vector_free	(*(*(struct)))->(void)
(	O
&	O
headers	*(struct)
)	O
;	O
if	O
(	O
bits	int
.	O
free_uri	bool
)	O
wget_iri_free	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool))))->(void)
(	O
&	O
uri	*(char)
)	O
;	O
return	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
;	O
}	O
