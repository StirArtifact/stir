typedef	O
struct	O
{	O
double	O
*	O
zx	*(double)
;	O
double	O
*	O
zy	*(double)
;	O
double	O
*	O
zxy	*(double)
;	O
size_t	long
xsize	long
;	O
size_t	long
ysize	long
;	O
}	O
bicubic_state_t	struct(*(double),*(double),*(double),long,long)
;	O
static	O
void	O
bicubic_free	(*(void))->(void)
(	O
void	O
*	O
vstate	*(void)
)	O
;	O
static	O
void	O
*	O
bicubic_alloc	(long,long)->(*(void))
(	O
size_t	long
xsize	long
,	O
size_t	long
ysize	long
)	O
{	O
bicubic_state_t	struct(*(double),*(double),*(double),long,long)
*	O
state	*(int)
;	O
state	*(int)
=	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
bicubic_state_t	struct(*(double),*(double),*(double),long,long)
)	O
)	O
;	O
if	O
(	O
state	*(int)
==	O
NULL	O
)	O
{	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for state"	*(char)
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
state	*(int)
->	O
zx	*(double)
=	O
(	O
double	O
*	O
)	O
malloc	(long)->(*(void))
(	O
xsize	long
*	O
ysize	long
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
if	O
(	O
state	*(int)
->	O
zx	*(double)
==	O
NULL	O
)	O
{	O
bicubic_free	(*(void))->(void)
(	O
state	*(int)
)	O
;	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for zx"	*(char)
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
state	*(int)
->	O
zy	*(double)
=	O
(	O
double	O
*	O
)	O
malloc	(long)->(*(void))
(	O
xsize	long
*	O
ysize	long
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
if	O
(	O
state	*(int)
->	O
zy	*(double)
==	O
NULL	O
)	O
{	O
bicubic_free	(*(void))->(void)
(	O
state	*(int)
)	O
;	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for zy"	*(char)
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
state	*(int)
->	O
zxy	*(double)
=	O
(	O
double	O
*	O
)	O
malloc	(long)->(*(void))
(	O
xsize	long
*	O
ysize	long
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
if	O
(	O
state	*(int)
->	O
zxy	*(double)
==	O
NULL	O
)	O
{	O
bicubic_free	(*(void))->(void)
(	O
state	*(int)
)	O
;	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for zxy"	*(char)
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
state	*(int)
->	O
xsize	long
=	O
xsize	long
;	O
state	*(int)
->	O
ysize	long
=	O
ysize	long
;	O
return	O
state	*(int)
;	O
}	O
static	O
void	O
bicubic_free	(*(void))->(void)
(	O
void	O
*	O
vstate	*(void)
)	O
{	O
bicubic_state_t	struct(*(double),*(double),*(double),long,long)
*	O
state	*(int)
=	O
(	O
bicubic_state_t	struct(*(double),*(double),*(double),long,long)
*	O
)	O
vstate	*(void)
;	O
RETURN_IF_NULL	O
(	O
state	*(int)
)	O
;	O
if	O
(	O
state	*(int)
->	O
zx	*(double)
)	O
free	(*(void))->(void)
(	O
state	*(int)
->	O
zx	*(double)
)	O
;	O
if	O
(	O
state	*(int)
->	O
zy	*(double)
)	O
free	(*(void))->(void)
(	O
state	*(int)
->	O
zy	*(double)
)	O
;	O
if	O
(	O
state	*(int)
->	O
zxy	*(double)
)	O
free	(*(void))->(void)
(	O
state	*(int)
->	O
zxy	*(double)
)	O
;	O
free	(*(void))->(void)
(	O
state	*(int)
)	O
;	O
}	O
static	O
int	O
bicubic_init	(*(void),array(double),array(double),array(double),long,long)->(int)
(	O
void	O
*	O
vstate	*(void)
,	O
const	O
double	O
xa	array(double)
[	O
]	O
,	O
const	O
double	O
ya	array(double)
[	O
]	O
,	O
const	O
double	O
za	array(double)
[	O
]	O
,	O
size_t	long
xsize	long
,	O
size_t	long
ysize	long
)	O
{	O
bicubic_state_t	struct(*(double),*(double),*(double),long,long)
*	O
state	*(int)
=	O
(	O
bicubic_state_t	struct(*(double),*(double),*(double),long,long)
*	O
)	O
vstate	*(void)
;	O
gsl_interp_accel	struct(long,long,long)
*	O
acc	*(struct(long,long,long))
=	O
gsl_interp_accel_alloc	()->(*(struct(long,long,long)))
(	O
)	O
;	O
gsl_spline	struct(*(struct(*(struct(*`,int,*`,*`,*`,*`,*`,*`,*`)),double,double,long,*(void))),*(double),*(double),long)
*	O
spline	*(struct(*(struct(*(struct`),double,double,long,*(void))),*(double),*(double),long))
;	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
x	double
;	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
y	*(double)
;	O
size_t	long
i	long
,	O
j	long
;	O
x	double
=	O
gsl_vector_alloc	(long)->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
xsize	long
)	O
;	O
y	*(double)
=	O
gsl_vector_alloc	(long)->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
xsize	long
)	O
;	O
spline	*(struct(*(struct(*(struct`),double,double,long,*(void))),*(double),*(double),long))
=	O
gsl_spline_alloc	(*(struct(*(char),int,*((long)->(*`)),*((*`,array(double),array(double),long)->(int)),*((*`,array(double),array(double),long,double,*`,*`)->(int)),*((*`,array(double),array(double),long,double,*`,*`)->(int)),*((*`,array(double),array(double),long,double,*`,*`)->(int)),*((*`,array(double),array(double),long,*`,double,double,*`)->(int)),*((*`)->(void)))),long)->(*(struct(*(struct(*`,double,double,long,*`)),*(double),*(double),long)))
(	O
gsl_interp_cspline	*(struct(*(char),int,*((long)->(*(void))),*((*(void),array(double),array(double),long)->(int)),*((*(void),array(double),array(double),long,double,*(struct`),*(double))->(int)),*((*(void),array(double),array(double),long,double,*(struct`),*(double))->(int)),*((*(void),array(double),array(double),long,double,*(struct`),*(double))->(int)),*((*(void),array(double),array(double),long,*(struct`),double,double,*(double))->(int)),*((*(void))->(void))))
,	O
xsize	long
)	O
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<=	O
ysize	long
-	O
1	int
;	O
j	long
++	O
)	O
{	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<=	O
xsize	long
-	O
1	int
;	O
i	long
++	O
)	O
{	O
gsl_vector_set	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long,double)->(void)
(	O
x	double
,	O
i	long
,	O
xa	array(double)
[	O
i	long
]	O
)	O
;	O
gsl_vector_set	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long,double)->(void)
(	O
y	*(double)
,	O
i	long
,	O
za	array(double)
[	O
IDX2D	O
(	O
i	long
,	O
j	long
,	O
state	*(int)
)	O
]	O
)	O
;	O
}	O
gsl_spline_init	(*(struct(*(struct(*`,double,double,long,*`)),*(double),*(double),long)),array(double),array(double),long)->(int)
(	O
spline	*(struct(*(struct(*(struct`),double,double,long,*(void))),*(double),*(double),long))
,	O
x	double
->	O
data	*(long double)
,	O
y	*(double)
->	O
data	*(long double)
,	O
xsize	long
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<=	O
xsize	long
-	O
1	int
;	O
i	long
++	O
)	O
{	O
state	*(int)
->	O
zx	*(double)
[	O
IDX2D	O
(	O
i	long
,	O
j	long
,	O
state	*(int)
)	O
]	O
=	O
gsl_spline_eval_deriv	(*(struct(*(struct(*`,double,double,long,*`)),*(double),*(double),long)),double,*(struct(long,long,long)))->(double)
(	O
spline	*(struct(*(struct(*(struct`),double,double,long,*(void))),*(double),*(double),long))
,	O
xa	array(double)
[	O
i	long
]	O
,	O
acc	*(struct(long,long,long))
)	O
;	O
}	O
}	O
gsl_vector_free	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
x	double
)	O
;	O
gsl_vector_free	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
y	*(double)
)	O
;	O
gsl_spline_free	(*(struct(*(struct(*`,double,double,long,*`)),*(double),*(double),long)))->(void)
(	O
spline	*(struct(*(struct(*(struct`),double,double,long,*(void))),*(double),*(double),long))
)	O
;	O
gsl_interp_accel_reset	(*(struct(long,long,long)))->(int)
(	O
acc	*(struct(long,long,long))
)	O
;	O
x	double
=	O
gsl_vector_alloc	(long)->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
ysize	long
)	O
;	O
y	*(double)
=	O
gsl_vector_alloc	(long)->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
ysize	long
)	O
;	O
spline	*(struct(*(struct(*(struct`),double,double,long,*(void))),*(double),*(double),long))
=	O
gsl_spline_alloc	(*(struct(*(char),int,*((long)->(*`)),*((*`,array(double),array(double),long)->(int)),*((*`,array(double),array(double),long,double,*`,*`)->(int)),*((*`,array(double),array(double),long,double,*`,*`)->(int)),*((*`,array(double),array(double),long,double,*`,*`)->(int)),*((*`,array(double),array(double),long,*`,double,double,*`)->(int)),*((*`)->(void)))),long)->(*(struct(*(struct(*`,double,double,long,*`)),*(double),*(double),long)))
(	O
gsl_interp_cspline	*(struct(*(char),int,*((long)->(*(void))),*((*(void),array(double),array(double),long)->(int)),*((*(void),array(double),array(double),long,double,*(struct`),*(double))->(int)),*((*(void),array(double),array(double),long,double,*(struct`),*(double))->(int)),*((*(void),array(double),array(double),long,double,*(struct`),*(double))->(int)),*((*(void),array(double),array(double),long,*(struct`),double,double,*(double))->(int)),*((*(void))->(void))))
,	O
ysize	long
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<=	O
xsize	long
-	O
1	int
;	O
i	long
++	O
)	O
{	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<=	O
ysize	long
-	O
1	int
;	O
j	long
++	O
)	O
{	O
gsl_vector_set	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long,double)->(void)
(	O
x	double
,	O
j	long
,	O
ya	array(double)
[	O
j	long
]	O
)	O
;	O
gsl_vector_set	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long,double)->(void)
(	O
y	*(double)
,	O
j	long
,	O
za	array(double)
[	O
IDX2D	O
(	O
i	long
,	O
j	long
,	O
state	*(int)
)	O
]	O
)	O
;	O
}	O
gsl_spline_init	(*(struct(*(struct(*`,double,double,long,*`)),*(double),*(double),long)),array(double),array(double),long)->(int)
(	O
spline	*(struct(*(struct(*(struct`),double,double,long,*(void))),*(double),*(double),long))
,	O
x	double
->	O
data	*(long double)
,	O
y	*(double)
->	O
data	*(long double)
,	O
ysize	long
)	O
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<=	O
ysize	long
-	O
1	int
;	O
j	long
++	O
)	O
{	O
state	*(int)
->	O
zy	*(double)
[	O
IDX2D	O
(	O
i	long
,	O
j	long
,	O
state	*(int)
)	O
]	O
=	O
gsl_spline_eval_deriv	(*(struct(*(struct(*`,double,double,long,*`)),*(double),*(double),long)),double,*(struct(long,long,long)))->(double)
(	O
spline	*(struct(*(struct(*(struct`),double,double,long,*(void))),*(double),*(double),long))
,	O
ya	array(double)
[	O
j	long
]	O
,	O
acc	*(struct(long,long,long))
)	O
;	O
}	O
}	O
gsl_vector_free	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
x	double
)	O
;	O
gsl_vector_free	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
y	*(double)
)	O
;	O
gsl_spline_free	(*(struct(*(struct(*`,double,double,long,*`)),*(double),*(double),long)))->(void)
(	O
spline	*(struct(*(struct(*(struct`),double,double,long,*(void))),*(double),*(double),long))
)	O
;	O
gsl_interp_accel_reset	(*(struct(long,long,long)))->(int)
(	O
acc	*(struct(long,long,long))
)	O
;	O
x	double
=	O
gsl_vector_alloc	(long)->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
xsize	long
)	O
;	O
y	*(double)
=	O
gsl_vector_alloc	(long)->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
xsize	long
)	O
;	O
spline	*(struct(*(struct(*(struct`),double,double,long,*(void))),*(double),*(double),long))
=	O
gsl_spline_alloc	(*(struct(*(char),int,*((long)->(*`)),*((*`,array(double),array(double),long)->(int)),*((*`,array(double),array(double),long,double,*`,*`)->(int)),*((*`,array(double),array(double),long,double,*`,*`)->(int)),*((*`,array(double),array(double),long,double,*`,*`)->(int)),*((*`,array(double),array(double),long,*`,double,double,*`)->(int)),*((*`)->(void)))),long)->(*(struct(*(struct(*`,double,double,long,*`)),*(double),*(double),long)))
(	O
gsl_interp_cspline	*(struct(*(char),int,*((long)->(*(void))),*((*(void),array(double),array(double),long)->(int)),*((*(void),array(double),array(double),long,double,*(struct`),*(double))->(int)),*((*(void),array(double),array(double),long,double,*(struct`),*(double))->(int)),*((*(void),array(double),array(double),long,double,*(struct`),*(double))->(int)),*((*(void),array(double),array(double),long,*(struct`),double,double,*(double))->(int)),*((*(void))->(void))))
,	O
xsize	long
)	O
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<=	O
ysize	long
-	O
1	int
;	O
j	long
++	O
)	O
{	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<=	O
xsize	long
-	O
1	int
;	O
i	long
++	O
)	O
{	O
gsl_vector_set	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long,double)->(void)
(	O
x	double
,	O
i	long
,	O
xa	array(double)
[	O
i	long
]	O
)	O
;	O
gsl_vector_set	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long,double)->(void)
(	O
y	*(double)
,	O
i	long
,	O
state	*(int)
->	O
zy	*(double)
[	O
IDX2D	O
(	O
i	long
,	O
j	long
,	O
state	*(int)
)	O
]	O
)	O
;	O
}	O
gsl_spline_init	(*(struct(*(struct(*`,double,double,long,*`)),*(double),*(double),long)),array(double),array(double),long)->(int)
(	O
spline	*(struct(*(struct(*(struct`),double,double,long,*(void))),*(double),*(double),long))
,	O
x	double
->	O
data	*(long double)
,	O
y	*(double)
->	O
data	*(long double)
,	O
xsize	long
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<=	O
xsize	long
-	O
1	int
;	O
i	long
++	O
)	O
{	O
state	*(int)
->	O
zxy	*(double)
[	O
IDX2D	O
(	O
i	long
,	O
j	long
,	O
state	*(int)
)	O
]	O
=	O
gsl_spline_eval_deriv	(*(struct(*(struct(*`,double,double,long,*`)),*(double),*(double),long)),double,*(struct(long,long,long)))->(double)
(	O
spline	*(struct(*(struct(*(struct`),double,double,long,*(void))),*(double),*(double),long))
,	O
xa	array(double)
[	O
i	long
]	O
,	O
acc	*(struct(long,long,long))
)	O
;	O
}	O
}	O
gsl_vector_free	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
x	double
)	O
;	O
gsl_vector_free	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
y	*(double)
)	O
;	O
gsl_spline_free	(*(struct(*(struct(*`,double,double,long,*`)),*(double),*(double),long)))->(void)
(	O
spline	*(struct(*(struct(*(struct`),double,double,long,*(void))),*(double),*(double),long))
)	O
;	O
gsl_interp_accel_free	(*(struct(long,long,long)))->(void)
(	O
acc	*(struct(long,long,long))
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
bicubic_eval	(*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)
(	O
const	O
void	O
*	O
vstate	*(void)
,	O
const	O
double	O
xarr	array(double)
[	O
]	O
,	O
const	O
double	O
yarr	array(double)
[	O
]	O
,	O
const	O
double	O
zarr	array(double)
[	O
]	O
,	O
size_t	long
xsize	long
,	O
size_t	long
ysize	long
,	O
double	O
x	double
,	O
double	O
y	*(double)
,	O
gsl_interp_accel	struct(long,long,long)
*	O
xa	array(double)
,	O
gsl_interp_accel	struct(long,long,long)
*	O
ya	array(double)
,	O
double	O
*	O
z	struct(array(long double))
)	O
{	O
bicubic_state_t	struct(*(double),*(double),*(double),long,long)
*	O
state	*(int)
=	O
(	O
bicubic_state_t	struct(*(double),*(double),*(double),long,long)
*	O
)	O
vstate	*(void)
;	O
double	O
xmin	double
,	O
xmax	double
,	O
ymin	double
,	O
ymax	double
;	O
double	O
zminmin	double
,	O
zminmax	double
,	O
zmaxmin	double
,	O
zmaxmax	double
;	O
double	O
zxminmin	double
,	O
zxminmax	double
,	O
zxmaxmin	double
,	O
zxmaxmax	double
;	O
double	O
zyminmin	double
,	O
zyminmax	double
,	O
zymaxmin	double
,	O
zymaxmax	double
;	O
double	O
zxyminmin	double
,	O
zxyminmax	double
,	O
zxymaxmin	double
,	O
zxymaxmax	double
;	O
double	O
dx	double
,	O
dy	double
;	O
double	O
dt	double
,	O
du	double
;	O
double	O
t	double
,	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
double	O
t0	double
,	O
t1	double
,	O
t2	double
,	O
t3	double
,	O
u0	double
,	O
u1	double
,	O
u2	double
,	O
u3	double
;	O
double	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
size_t	long
xi	long
,	O
yi	long
;	O
if	O
(	O
xa	array(double)
!=	O
NULL	O
)	O
xi	long
=	O
gsl_interp_accel_find	(*(struct(long,long,long)),array(double),long,double)->(long)
(	O
xa	array(double)
,	O
xarr	array(double)
,	O
xsize	long
,	O
x	double
)	O
;	O
else	O
xi	long
=	O
gsl_interp_bsearch	(array(double),double,long,long)->(long)
(	O
xarr	array(double)
,	O
x	double
,	O
0	int
,	O
xsize	long
-	O
1	int
)	O
;	O
if	O
(	O
ya	array(double)
!=	O
NULL	O
)	O
yi	long
=	O
gsl_interp_accel_find	(*(struct(long,long,long)),array(double),long,double)->(long)
(	O
ya	array(double)
,	O
yarr	array(double)
,	O
ysize	long
,	O
y	*(double)
)	O
;	O
else	O
yi	long
=	O
gsl_interp_bsearch	(array(double),double,long,long)->(long)
(	O
yarr	array(double)
,	O
y	*(double)
,	O
0	int
,	O
ysize	long
-	O
1	int
)	O
;	O
xmin	double
=	O
xarr	array(double)
[	O
xi	long
]	O
;	O
xmax	double
=	O
xarr	array(double)
[	O
xi	long
+	O
1	int
]	O
;	O
ymin	double
=	O
yarr	array(double)
[	O
yi	long
]	O
;	O
ymax	double
=	O
yarr	array(double)
[	O
yi	long
+	O
1	int
]	O
;	O
zminmin	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
state	*(int)
)	O
]	O
;	O
zminmax	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
;	O
zmaxmin	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
state	*(int)
)	O
]	O
;	O
zmaxmax	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
;	O
dx	double
=	O
xmax	double
-	O
xmin	double
;	O
dy	double
=	O
ymax	double
-	O
ymin	double
;	O
t	double
=	O
(	O
x	double
-	O
xmin	double
)	O
/	O
dx	double
;	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
(	O
y	*(double)
-	O
ymin	double
)	O
/	O
dy	double
;	O
dt	double
=	O
1.	int
/	O
dx	double
;	O
du	double
=	O
1.	int
/	O
dy	double
;	O
zxminmin	double
=	O
state	*(int)
->	O
zx	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
dt	double
;	O
zxminmax	double
=	O
state	*(int)
->	O
zx	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
dt	double
;	O
zxmaxmin	double
=	O
state	*(int)
->	O
zx	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
dt	double
;	O
zxmaxmax	double
=	O
state	*(int)
->	O
zx	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
dt	double
;	O
zyminmin	double
=	O
state	*(int)
->	O
zy	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
du	double
;	O
zyminmax	double
=	O
state	*(int)
->	O
zy	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
du	double
;	O
zymaxmin	double
=	O
state	*(int)
->	O
zy	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
du	double
;	O
zymaxmax	double
=	O
state	*(int)
->	O
zy	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
du	double
;	O
zxyminmin	double
=	O
state	*(int)
->	O
zxy	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
(	O
dt	double
*	O
du	double
)	O
;	O
zxyminmax	double
=	O
state	*(int)
->	O
zxy	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
(	O
dt	double
*	O
du	double
)	O
;	O
zxymaxmin	double
=	O
state	*(int)
->	O
zxy	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
(	O
dt	double
*	O
du	double
)	O
;	O
zxymaxmax	double
=	O
state	*(int)
->	O
zxy	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
(	O
dt	double
*	O
du	double
)	O
;	O
t0	double
=	O
1	int
;	O
t1	double
=	O
t	double
;	O
t2	double
=	O
t	double
*	O
t	double
;	O
t3	double
=	O
t	double
*	O
t2	double
;	O
u0	double
=	O
1	int
;	O
u1	double
=	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
u2	double
=	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
u3	double
=	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
u2	double
;	O
*	O
z	struct(array(long double))
=	O
0	int
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
zminmin	double
;	O
*	O
z	struct(array(long double))
+=	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t0	double
*	O
u0	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
zyminmin	double
;	O
*	O
z	struct(array(long double))
+=	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t0	double
*	O
u1	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
3	int
*	O
zminmin	double
+	O
3	int
*	O
zminmax	double
-	O
2	int
*	O
zyminmin	double
-	O
zyminmax	double
;	O
*	O
z	struct(array(long double))
+=	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t0	double
*	O
u2	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
2	int
*	O
zminmin	double
-	O
2	int
*	O
zminmax	double
+	O
zyminmin	double
+	O
zyminmax	double
;	O
*	O
z	struct(array(long double))
+=	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t0	double
*	O
u3	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
zxminmin	double
;	O
*	O
z	struct(array(long double))
+=	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t1	double
*	O
u0	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
zxyminmin	double
;	O
*	O
z	struct(array(long double))
+=	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t1	double
*	O
u1	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
3	int
*	O
zxminmin	double
+	O
3	int
*	O
zxminmax	double
-	O
2	int
*	O
zxyminmin	double
-	O
zxyminmax	double
;	O
*	O
z	struct(array(long double))
+=	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t1	double
*	O
u2	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
2	int
*	O
zxminmin	double
-	O
2	int
*	O
zxminmax	double
+	O
zxyminmin	double
+	O
zxyminmax	double
;	O
*	O
z	struct(array(long double))
+=	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t1	double
*	O
u3	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
3	int
*	O
zminmin	double
+	O
3	int
*	O
zmaxmin	double
-	O
2	int
*	O
zxminmin	double
-	O
zxmaxmin	double
;	O
*	O
z	struct(array(long double))
+=	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t2	double
*	O
u0	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
3	int
*	O
zyminmin	double
+	O
3	int
*	O
zymaxmin	double
-	O
2	int
*	O
zxyminmin	double
-	O
zxymaxmin	double
;	O
*	O
z	struct(array(long double))
+=	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t2	double
*	O
u1	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
9	int
*	O
zminmin	double
-	O
9	int
*	O
zmaxmin	double
+	O
9	int
*	O
zmaxmax	double
-	O
9	int
*	O
zminmax	double
+	O
6	int
*	O
zxminmin	double
+	O
3	int
*	O
zxmaxmin	double
-	O
3	int
*	O
zxmaxmax	double
-	O
6	int
*	O
zxminmax	double
+	O
6	int
*	O
zyminmin	double
-	O
6	int
*	O
zymaxmin	double
-	O
3	int
*	O
zymaxmax	double
+	O
3	int
*	O
zyminmax	double
+	O
4	int
*	O
zxyminmin	double
+	O
2	int
*	O
zxymaxmin	double
+	O
zxymaxmax	double
+	O
2	int
*	O
zxyminmax	double
;	O
*	O
z	struct(array(long double))
+=	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t2	double
*	O
u2	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
6	int
*	O
zminmin	double
+	O
6	int
*	O
zmaxmin	double
-	O
6	int
*	O
zmaxmax	double
+	O
6	int
*	O
zminmax	double
-	O
4	int
*	O
zxminmin	double
-	O
2	int
*	O
zxmaxmin	double
+	O
2	int
*	O
zxmaxmax	double
+	O
4	int
*	O
zxminmax	double
-	O
3	int
*	O
zyminmin	double
+	O
3	int
*	O
zymaxmin	double
+	O
3	int
*	O
zymaxmax	double
-	O
3	int
*	O
zyminmax	double
-	O
2	int
*	O
zxyminmin	double
-	O
zxymaxmin	double
-	O
zxymaxmax	double
-	O
2	int
*	O
zxyminmax	double
;	O
*	O
z	struct(array(long double))
+=	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t2	double
*	O
u3	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
2	int
*	O
zminmin	double
-	O
2	int
*	O
zmaxmin	double
+	O
zxminmin	double
+	O
zxmaxmin	double
;	O
*	O
z	struct(array(long double))
+=	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t3	double
*	O
u0	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
2	int
*	O
zyminmin	double
-	O
2	int
*	O
zymaxmin	double
+	O
zxyminmin	double
+	O
zxymaxmin	double
;	O
*	O
z	struct(array(long double))
+=	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t3	double
*	O
u1	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
6	int
*	O
zminmin	double
+	O
6	int
*	O
zmaxmin	double
-	O
6	int
*	O
zmaxmax	double
+	O
6	int
*	O
zminmax	double
-	O
3	int
*	O
zxminmin	double
-	O
3	int
*	O
zxmaxmin	double
+	O
3	int
*	O
zxmaxmax	double
+	O
3	int
*	O
zxminmax	double
-	O
4	int
*	O
zyminmin	double
+	O
4	int
*	O
zymaxmin	double
+	O
2	int
*	O
zymaxmax	double
-	O
2	int
*	O
zyminmax	double
-	O
2	int
*	O
zxyminmin	double
-	O
2	int
*	O
zxymaxmin	double
-	O
zxymaxmax	double
-	O
zxyminmax	double
;	O
*	O
z	struct(array(long double))
+=	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t3	double
*	O
u2	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
4	int
*	O
zminmin	double
-	O
4	int
*	O
zmaxmin	double
+	O
4	int
*	O
zmaxmax	double
-	O
4	int
*	O
zminmax	double
+	O
2	int
*	O
zxminmin	double
+	O
2	int
*	O
zxmaxmin	double
-	O
2	int
*	O
zxmaxmax	double
-	O
2	int
*	O
zxminmax	double
+	O
2	int
*	O
zyminmin	double
-	O
2	int
*	O
zymaxmin	double
-	O
2	int
*	O
zymaxmax	double
+	O
2	int
*	O
zyminmax	double
+	O
zxyminmin	double
+	O
zxymaxmin	double
+	O
zxymaxmax	double
+	O
zxyminmax	double
;	O
*	O
z	struct(array(long double))
+=	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t3	double
*	O
u3	double
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
bicubic_deriv_x	(*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)
(	O
const	O
void	O
*	O
vstate	*(void)
,	O
const	O
double	O
xarr	array(double)
[	O
]	O
,	O
const	O
double	O
yarr	array(double)
[	O
]	O
,	O
const	O
double	O
zarr	array(double)
[	O
]	O
,	O
size_t	long
xsize	long
,	O
size_t	long
ysize	long
,	O
double	O
x	double
,	O
double	O
y	*(double)
,	O
gsl_interp_accel	struct(long,long,long)
*	O
xa	array(double)
,	O
gsl_interp_accel	struct(long,long,long)
*	O
ya	array(double)
,	O
double	O
*	O
z_p	*(double)
)	O
{	O
bicubic_state_t	struct(*(double),*(double),*(double),long,long)
*	O
state	*(int)
=	O
(	O
bicubic_state_t	struct(*(double),*(double),*(double),long,long)
*	O
)	O
vstate	*(void)
;	O
double	O
xmin	double
,	O
xmax	double
,	O
ymin	double
,	O
ymax	double
;	O
double	O
zminmin	double
,	O
zminmax	double
,	O
zmaxmin	double
,	O
zmaxmax	double
;	O
double	O
zxminmin	double
,	O
zxminmax	double
,	O
zxmaxmin	double
,	O
zxmaxmax	double
;	O
double	O
zyminmin	double
,	O
zyminmax	double
,	O
zymaxmin	double
,	O
zymaxmax	double
;	O
double	O
zxyminmin	double
,	O
zxyminmax	double
,	O
zxymaxmin	double
,	O
zxymaxmax	double
;	O
double	O
dx	double
,	O
dy	double
;	O
double	O
dt	double
,	O
du	double
;	O
double	O
t	double
,	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
double	O
t0	double
,	O
t1	double
,	O
t2	double
,	O
u0	double
,	O
u1	double
,	O
u2	double
,	O
u3	double
;	O
double	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
size_t	long
xi	long
,	O
yi	long
;	O
if	O
(	O
xa	array(double)
!=	O
NULL	O
)	O
xi	long
=	O
gsl_interp_accel_find	(*(struct(long,long,long)),array(double),long,double)->(long)
(	O
xa	array(double)
,	O
xarr	array(double)
,	O
xsize	long
,	O
x	double
)	O
;	O
else	O
xi	long
=	O
gsl_interp_bsearch	(array(double),double,long,long)->(long)
(	O
xarr	array(double)
,	O
x	double
,	O
0	int
,	O
xsize	long
-	O
1	int
)	O
;	O
if	O
(	O
ya	array(double)
!=	O
NULL	O
)	O
yi	long
=	O
gsl_interp_accel_find	(*(struct(long,long,long)),array(double),long,double)->(long)
(	O
ya	array(double)
,	O
yarr	array(double)
,	O
ysize	long
,	O
y	*(double)
)	O
;	O
else	O
yi	long
=	O
gsl_interp_bsearch	(array(double),double,long,long)->(long)
(	O
yarr	array(double)
,	O
y	*(double)
,	O
0	int
,	O
ysize	long
-	O
1	int
)	O
;	O
xmin	double
=	O
xarr	array(double)
[	O
xi	long
]	O
;	O
xmax	double
=	O
xarr	array(double)
[	O
xi	long
+	O
1	int
]	O
;	O
ymin	double
=	O
yarr	array(double)
[	O
yi	long
]	O
;	O
ymax	double
=	O
yarr	array(double)
[	O
yi	long
+	O
1	int
]	O
;	O
zminmin	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
state	*(int)
)	O
]	O
;	O
zminmax	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
;	O
zmaxmin	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
state	*(int)
)	O
]	O
;	O
zmaxmax	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
;	O
dx	double
=	O
xmax	double
-	O
xmin	double
;	O
dy	double
=	O
ymax	double
-	O
ymin	double
;	O
t	double
=	O
(	O
x	double
-	O
xmin	double
)	O
/	O
dx	double
;	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
(	O
y	*(double)
-	O
ymin	double
)	O
/	O
dy	double
;	O
dt	double
=	O
1.	int
/	O
dx	double
;	O
du	double
=	O
1.	int
/	O
dy	double
;	O
zxminmin	double
=	O
state	*(int)
->	O
zx	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
dt	double
;	O
zxminmax	double
=	O
state	*(int)
->	O
zx	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
dt	double
;	O
zxmaxmin	double
=	O
state	*(int)
->	O
zx	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
dt	double
;	O
zxmaxmax	double
=	O
state	*(int)
->	O
zx	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
dt	double
;	O
zyminmin	double
=	O
state	*(int)
->	O
zy	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
du	double
;	O
zyminmax	double
=	O
state	*(int)
->	O
zy	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
du	double
;	O
zymaxmin	double
=	O
state	*(int)
->	O
zy	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
du	double
;	O
zymaxmax	double
=	O
state	*(int)
->	O
zy	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
du	double
;	O
zxyminmin	double
=	O
state	*(int)
->	O
zxy	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
(	O
dt	double
*	O
du	double
)	O
;	O
zxyminmax	double
=	O
state	*(int)
->	O
zxy	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
(	O
dt	double
*	O
du	double
)	O
;	O
zxymaxmin	double
=	O
state	*(int)
->	O
zxy	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
(	O
dt	double
*	O
du	double
)	O
;	O
zxymaxmax	double
=	O
state	*(int)
->	O
zxy	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
(	O
dt	double
*	O
du	double
)	O
;	O
t0	double
=	O
1	int
;	O
t1	double
=	O
t	double
;	O
t2	double
=	O
t	double
*	O
t	double
;	O
u0	double
=	O
1	int
;	O
u1	double
=	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
u2	double
=	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
u3	double
=	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
u2	double
;	O
*	O
z_p	*(double)
=	O
0	int
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
zxminmin	double
;	O
*	O
z_p	*(double)
+=	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t0	double
*	O
u0	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
zxyminmin	double
;	O
*	O
z_p	*(double)
+=	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t0	double
*	O
u1	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
3	int
*	O
zxminmin	double
+	O
3	int
*	O
zxminmax	double
-	O
2	int
*	O
zxyminmin	double
-	O
zxyminmax	double
;	O
*	O
z_p	*(double)
+=	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t0	double
*	O
u2	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
2	int
*	O
zxminmin	double
-	O
2	int
*	O
zxminmax	double
+	O
zxyminmin	double
+	O
zxyminmax	double
;	O
*	O
z_p	*(double)
+=	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t0	double
*	O
u3	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
3	int
*	O
zminmin	double
+	O
3	int
*	O
zmaxmin	double
-	O
2	int
*	O
zxminmin	double
-	O
zxmaxmin	double
;	O
*	O
z_p	*(double)
+=	O
2	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t1	double
*	O
u0	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
3	int
*	O
zyminmin	double
+	O
3	int
*	O
zymaxmin	double
-	O
2	int
*	O
zxyminmin	double
-	O
zxymaxmin	double
;	O
*	O
z_p	*(double)
+=	O
2	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t1	double
*	O
u1	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
9	int
*	O
zminmin	double
-	O
9	int
*	O
zmaxmin	double
+	O
9	int
*	O
zmaxmax	double
-	O
9	int
*	O
zminmax	double
+	O
6	int
*	O
zxminmin	double
+	O
3	int
*	O
zxmaxmin	double
-	O
3	int
*	O
zxmaxmax	double
-	O
6	int
*	O
zxminmax	double
+	O
6	int
*	O
zyminmin	double
-	O
6	int
*	O
zymaxmin	double
-	O
3	int
*	O
zymaxmax	double
+	O
3	int
*	O
zyminmax	double
+	O
4	int
*	O
zxyminmin	double
+	O
2	int
*	O
zxymaxmin	double
+	O
zxymaxmax	double
+	O
2	int
*	O
zxyminmax	double
;	O
*	O
z_p	*(double)
+=	O
2	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t1	double
*	O
u2	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
6	int
*	O
zminmin	double
+	O
6	int
*	O
zmaxmin	double
-	O
6	int
*	O
zmaxmax	double
+	O
6	int
*	O
zminmax	double
-	O
4	int
*	O
zxminmin	double
-	O
2	int
*	O
zxmaxmin	double
+	O
2	int
*	O
zxmaxmax	double
+	O
4	int
*	O
zxminmax	double
-	O
3	int
*	O
zyminmin	double
+	O
3	int
*	O
zymaxmin	double
+	O
3	int
*	O
zymaxmax	double
-	O
3	int
*	O
zyminmax	double
-	O
2	int
*	O
zxyminmin	double
-	O
zxymaxmin	double
-	O
zxymaxmax	double
-	O
2	int
*	O
zxyminmax	double
;	O
*	O
z_p	*(double)
+=	O
2	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t1	double
*	O
u3	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
2	int
*	O
zminmin	double
-	O
2	int
*	O
zmaxmin	double
+	O
zxminmin	double
+	O
zxmaxmin	double
;	O
*	O
z_p	*(double)
+=	O
3	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t2	double
*	O
u0	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
2	int
*	O
zyminmin	double
-	O
2	int
*	O
zymaxmin	double
+	O
zxyminmin	double
+	O
zxymaxmin	double
;	O
*	O
z_p	*(double)
+=	O
3	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t2	double
*	O
u1	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
6	int
*	O
zminmin	double
+	O
6	int
*	O
zmaxmin	double
-	O
6	int
*	O
zmaxmax	double
+	O
6	int
*	O
zminmax	double
-	O
3	int
*	O
zxminmin	double
-	O
3	int
*	O
zxmaxmin	double
+	O
3	int
*	O
zxmaxmax	double
+	O
3	int
*	O
zxminmax	double
-	O
4	int
*	O
zyminmin	double
+	O
4	int
*	O
zymaxmin	double
+	O
2	int
*	O
zymaxmax	double
-	O
2	int
*	O
zyminmax	double
-	O
2	int
*	O
zxyminmin	double
-	O
2	int
*	O
zxymaxmin	double
-	O
zxymaxmax	double
-	O
zxyminmax	double
;	O
*	O
z_p	*(double)
+=	O
3	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t2	double
*	O
u2	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
4	int
*	O
zminmin	double
-	O
4	int
*	O
zmaxmin	double
+	O
4	int
*	O
zmaxmax	double
-	O
4	int
*	O
zminmax	double
+	O
2	int
*	O
zxminmin	double
+	O
2	int
*	O
zxmaxmin	double
-	O
2	int
*	O
zxmaxmax	double
-	O
2	int
*	O
zxminmax	double
+	O
2	int
*	O
zyminmin	double
-	O
2	int
*	O
zymaxmin	double
-	O
2	int
*	O
zymaxmax	double
+	O
2	int
*	O
zyminmax	double
+	O
zxyminmin	double
+	O
zxymaxmin	double
+	O
zxymaxmax	double
+	O
zxyminmax	double
;	O
*	O
z_p	*(double)
+=	O
3	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t2	double
*	O
u3	double
;	O
*	O
z_p	*(double)
*=	O
dt	double
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
bicubic_deriv_y	(*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)
(	O
const	O
void	O
*	O
vstate	*(void)
,	O
const	O
double	O
xarr	array(double)
[	O
]	O
,	O
const	O
double	O
yarr	array(double)
[	O
]	O
,	O
const	O
double	O
zarr	array(double)
[	O
]	O
,	O
size_t	long
xsize	long
,	O
size_t	long
ysize	long
,	O
double	O
x	double
,	O
double	O
y	*(double)
,	O
gsl_interp_accel	struct(long,long,long)
*	O
xa	array(double)
,	O
gsl_interp_accel	struct(long,long,long)
*	O
ya	array(double)
,	O
double	O
*	O
z_p	*(double)
)	O
{	O
bicubic_state_t	struct(*(double),*(double),*(double),long,long)
*	O
state	*(int)
=	O
(	O
bicubic_state_t	struct(*(double),*(double),*(double),long,long)
*	O
)	O
vstate	*(void)
;	O
double	O
xmin	double
,	O
xmax	double
,	O
ymin	double
,	O
ymax	double
;	O
double	O
zminmin	double
,	O
zminmax	double
,	O
zmaxmin	double
,	O
zmaxmax	double
;	O
double	O
zxminmin	double
,	O
zxminmax	double
,	O
zxmaxmin	double
,	O
zxmaxmax	double
;	O
double	O
zyminmin	double
,	O
zyminmax	double
,	O
zymaxmin	double
,	O
zymaxmax	double
;	O
double	O
zxyminmin	double
,	O
zxyminmax	double
,	O
zxymaxmin	double
,	O
zxymaxmax	double
;	O
double	O
dx	double
,	O
dy	double
;	O
double	O
dt	double
,	O
du	double
;	O
double	O
t	double
,	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
double	O
t0	double
,	O
t1	double
,	O
t2	double
,	O
t3	double
,	O
u0	double
,	O
u1	double
,	O
u2	double
;	O
double	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
size_t	long
xi	long
,	O
yi	long
;	O
if	O
(	O
xa	array(double)
!=	O
NULL	O
)	O
xi	long
=	O
gsl_interp_accel_find	(*(struct(long,long,long)),array(double),long,double)->(long)
(	O
xa	array(double)
,	O
xarr	array(double)
,	O
xsize	long
,	O
x	double
)	O
;	O
else	O
xi	long
=	O
gsl_interp_bsearch	(array(double),double,long,long)->(long)
(	O
xarr	array(double)
,	O
x	double
,	O
0	int
,	O
xsize	long
-	O
1	int
)	O
;	O
if	O
(	O
ya	array(double)
!=	O
NULL	O
)	O
yi	long
=	O
gsl_interp_accel_find	(*(struct(long,long,long)),array(double),long,double)->(long)
(	O
ya	array(double)
,	O
yarr	array(double)
,	O
ysize	long
,	O
y	*(double)
)	O
;	O
else	O
yi	long
=	O
gsl_interp_bsearch	(array(double),double,long,long)->(long)
(	O
yarr	array(double)
,	O
y	*(double)
,	O
0	int
,	O
ysize	long
-	O
1	int
)	O
;	O
xmin	double
=	O
xarr	array(double)
[	O
xi	long
]	O
;	O
xmax	double
=	O
xarr	array(double)
[	O
xi	long
+	O
1	int
]	O
;	O
ymin	double
=	O
yarr	array(double)
[	O
yi	long
]	O
;	O
ymax	double
=	O
yarr	array(double)
[	O
yi	long
+	O
1	int
]	O
;	O
zminmin	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
state	*(int)
)	O
]	O
;	O
zminmax	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
;	O
zmaxmin	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
state	*(int)
)	O
]	O
;	O
zmaxmax	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
;	O
dx	double
=	O
xmax	double
-	O
xmin	double
;	O
dy	double
=	O
ymax	double
-	O
ymin	double
;	O
t	double
=	O
(	O
x	double
-	O
xmin	double
)	O
/	O
dx	double
;	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
(	O
y	*(double)
-	O
ymin	double
)	O
/	O
dy	double
;	O
dt	double
=	O
1.	int
/	O
dx	double
;	O
du	double
=	O
1.	int
/	O
dy	double
;	O
zxminmin	double
=	O
state	*(int)
->	O
zx	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
dt	double
;	O
zxminmax	double
=	O
state	*(int)
->	O
zx	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
dt	double
;	O
zxmaxmin	double
=	O
state	*(int)
->	O
zx	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
dt	double
;	O
zxmaxmax	double
=	O
state	*(int)
->	O
zx	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
dt	double
;	O
zyminmin	double
=	O
state	*(int)
->	O
zy	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
du	double
;	O
zyminmax	double
=	O
state	*(int)
->	O
zy	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
du	double
;	O
zymaxmin	double
=	O
state	*(int)
->	O
zy	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
du	double
;	O
zymaxmax	double
=	O
state	*(int)
->	O
zy	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
du	double
;	O
zxyminmin	double
=	O
state	*(int)
->	O
zxy	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
(	O
dt	double
*	O
du	double
)	O
;	O
zxyminmax	double
=	O
state	*(int)
->	O
zxy	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
(	O
dt	double
*	O
du	double
)	O
;	O
zxymaxmin	double
=	O
state	*(int)
->	O
zxy	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
(	O
dt	double
*	O
du	double
)	O
;	O
zxymaxmax	double
=	O
state	*(int)
->	O
zxy	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
(	O
dt	double
*	O
du	double
)	O
;	O
t0	double
=	O
1	int
;	O
t1	double
=	O
t	double
;	O
t2	double
=	O
t	double
*	O
t	double
;	O
t3	double
=	O
t	double
*	O
t2	double
;	O
u0	double
=	O
1	int
;	O
u1	double
=	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
u2	double
=	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
*	O
z_p	*(double)
=	O
0	int
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
zyminmin	double
;	O
*	O
z_p	*(double)
+=	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t0	double
*	O
u0	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
3	int
*	O
zminmin	double
+	O
3	int
*	O
zminmax	double
-	O
2	int
*	O
zyminmin	double
-	O
zyminmax	double
;	O
*	O
z_p	*(double)
+=	O
2	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t0	double
*	O
u1	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
2	int
*	O
zminmin	double
-	O
2	int
*	O
zminmax	double
+	O
zyminmin	double
+	O
zyminmax	double
;	O
*	O
z_p	*(double)
+=	O
3	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t0	double
*	O
u2	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
zxyminmin	double
;	O
*	O
z_p	*(double)
+=	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t1	double
*	O
u0	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
3	int
*	O
zxminmin	double
+	O
3	int
*	O
zxminmax	double
-	O
2	int
*	O
zxyminmin	double
-	O
zxyminmax	double
;	O
*	O
z_p	*(double)
+=	O
2	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t1	double
*	O
u1	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
2	int
*	O
zxminmin	double
-	O
2	int
*	O
zxminmax	double
+	O
zxyminmin	double
+	O
zxyminmax	double
;	O
*	O
z_p	*(double)
+=	O
3	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t1	double
*	O
u2	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
3	int
*	O
zyminmin	double
+	O
3	int
*	O
zymaxmin	double
-	O
2	int
*	O
zxyminmin	double
-	O
zxymaxmin	double
;	O
*	O
z_p	*(double)
+=	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t2	double
*	O
u0	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
9	int
*	O
zminmin	double
-	O
9	int
*	O
zmaxmin	double
+	O
9	int
*	O
zmaxmax	double
-	O
9	int
*	O
zminmax	double
+	O
6	int
*	O
zxminmin	double
+	O
3	int
*	O
zxmaxmin	double
-	O
3	int
*	O
zxmaxmax	double
-	O
6	int
*	O
zxminmax	double
+	O
6	int
*	O
zyminmin	double
-	O
6	int
*	O
zymaxmin	double
-	O
3	int
*	O
zymaxmax	double
+	O
3	int
*	O
zyminmax	double
+	O
4	int
*	O
zxyminmin	double
+	O
2	int
*	O
zxymaxmin	double
+	O
zxymaxmax	double
+	O
2	int
*	O
zxyminmax	double
;	O
*	O
z_p	*(double)
+=	O
2	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t2	double
*	O
u1	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
6	int
*	O
zminmin	double
+	O
6	int
*	O
zmaxmin	double
-	O
6	int
*	O
zmaxmax	double
+	O
6	int
*	O
zminmax	double
-	O
4	int
*	O
zxminmin	double
-	O
2	int
*	O
zxmaxmin	double
+	O
2	int
*	O
zxmaxmax	double
+	O
4	int
*	O
zxminmax	double
-	O
3	int
*	O
zyminmin	double
+	O
3	int
*	O
zymaxmin	double
+	O
3	int
*	O
zymaxmax	double
-	O
3	int
*	O
zyminmax	double
-	O
2	int
*	O
zxyminmin	double
-	O
zxymaxmin	double
-	O
zxymaxmax	double
-	O
2	int
*	O
zxyminmax	double
;	O
*	O
z_p	*(double)
+=	O
3	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t2	double
*	O
u2	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
2	int
*	O
zyminmin	double
-	O
2	int
*	O
zymaxmin	double
+	O
zxyminmin	double
+	O
zxymaxmin	double
;	O
*	O
z_p	*(double)
+=	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t3	double
*	O
u0	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
6	int
*	O
zminmin	double
+	O
6	int
*	O
zmaxmin	double
-	O
6	int
*	O
zmaxmax	double
+	O
6	int
*	O
zminmax	double
-	O
3	int
*	O
zxminmin	double
-	O
3	int
*	O
zxmaxmin	double
+	O
3	int
*	O
zxmaxmax	double
+	O
3	int
*	O
zxminmax	double
-	O
4	int
*	O
zyminmin	double
+	O
4	int
*	O
zymaxmin	double
+	O
2	int
*	O
zymaxmax	double
-	O
2	int
*	O
zyminmax	double
-	O
2	int
*	O
zxyminmin	double
-	O
2	int
*	O
zxymaxmin	double
-	O
zxymaxmax	double
-	O
zxyminmax	double
;	O
*	O
z_p	*(double)
+=	O
2	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t3	double
*	O
u1	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
4	int
*	O
zminmin	double
-	O
4	int
*	O
zmaxmin	double
+	O
4	int
*	O
zmaxmax	double
-	O
4	int
*	O
zminmax	double
+	O
2	int
*	O
zxminmin	double
+	O
2	int
*	O
zxmaxmin	double
-	O
2	int
*	O
zxmaxmax	double
-	O
2	int
*	O
zxminmax	double
+	O
2	int
*	O
zyminmin	double
-	O
2	int
*	O
zymaxmin	double
-	O
2	int
*	O
zymaxmax	double
+	O
2	int
*	O
zyminmax	double
+	O
zxyminmin	double
+	O
zxymaxmin	double
+	O
zxymaxmax	double
+	O
zxyminmax	double
;	O
*	O
z_p	*(double)
+=	O
3	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t3	double
*	O
u2	double
;	O
*	O
z_p	*(double)
*=	O
du	double
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
bicubic_deriv_xx	(*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)
(	O
const	O
void	O
*	O
vstate	*(void)
,	O
const	O
double	O
xarr	array(double)
[	O
]	O
,	O
const	O
double	O
yarr	array(double)
[	O
]	O
,	O
const	O
double	O
zarr	array(double)
[	O
]	O
,	O
size_t	long
xsize	long
,	O
size_t	long
ysize	long
,	O
double	O
x	double
,	O
double	O
y	*(double)
,	O
gsl_interp_accel	struct(long,long,long)
*	O
xa	array(double)
,	O
gsl_interp_accel	struct(long,long,long)
*	O
ya	array(double)
,	O
double	O
*	O
z_pp	*(double)
)	O
{	O
bicubic_state_t	struct(*(double),*(double),*(double),long,long)
*	O
state	*(int)
=	O
(	O
bicubic_state_t	struct(*(double),*(double),*(double),long,long)
*	O
)	O
vstate	*(void)
;	O
double	O
xmin	double
,	O
xmax	double
,	O
ymin	double
,	O
ymax	double
;	O
double	O
zminmin	double
,	O
zminmax	double
,	O
zmaxmin	double
,	O
zmaxmax	double
;	O
double	O
zxminmin	double
,	O
zxminmax	double
,	O
zxmaxmin	double
,	O
zxmaxmax	double
;	O
double	O
zyminmin	double
,	O
zyminmax	double
,	O
zymaxmin	double
,	O
zymaxmax	double
;	O
double	O
zxyminmin	double
,	O
zxyminmax	double
,	O
zxymaxmin	double
,	O
zxymaxmax	double
;	O
double	O
dx	double
,	O
dy	double
;	O
double	O
dt	double
,	O
du	double
;	O
double	O
t	double
,	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
double	O
t0	double
,	O
t1	double
,	O
u0	double
,	O
u1	double
,	O
u2	double
,	O
u3	double
;	O
double	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
size_t	long
xi	long
,	O
yi	long
;	O
if	O
(	O
xa	array(double)
!=	O
NULL	O
)	O
xi	long
=	O
gsl_interp_accel_find	(*(struct(long,long,long)),array(double),long,double)->(long)
(	O
xa	array(double)
,	O
xarr	array(double)
,	O
xsize	long
,	O
x	double
)	O
;	O
else	O
xi	long
=	O
gsl_interp_bsearch	(array(double),double,long,long)->(long)
(	O
xarr	array(double)
,	O
x	double
,	O
0	int
,	O
xsize	long
-	O
1	int
)	O
;	O
if	O
(	O
ya	array(double)
!=	O
NULL	O
)	O
yi	long
=	O
gsl_interp_accel_find	(*(struct(long,long,long)),array(double),long,double)->(long)
(	O
ya	array(double)
,	O
yarr	array(double)
,	O
ysize	long
,	O
y	*(double)
)	O
;	O
else	O
yi	long
=	O
gsl_interp_bsearch	(array(double),double,long,long)->(long)
(	O
yarr	array(double)
,	O
y	*(double)
,	O
0	int
,	O
ysize	long
-	O
1	int
)	O
;	O
xmin	double
=	O
xarr	array(double)
[	O
xi	long
]	O
;	O
xmax	double
=	O
xarr	array(double)
[	O
xi	long
+	O
1	int
]	O
;	O
ymin	double
=	O
yarr	array(double)
[	O
yi	long
]	O
;	O
ymax	double
=	O
yarr	array(double)
[	O
yi	long
+	O
1	int
]	O
;	O
zminmin	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
state	*(int)
)	O
]	O
;	O
zminmax	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
;	O
zmaxmin	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
state	*(int)
)	O
]	O
;	O
zmaxmax	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
;	O
dx	double
=	O
xmax	double
-	O
xmin	double
;	O
dy	double
=	O
ymax	double
-	O
ymin	double
;	O
t	double
=	O
(	O
x	double
-	O
xmin	double
)	O
/	O
dx	double
;	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
(	O
y	*(double)
-	O
ymin	double
)	O
/	O
dy	double
;	O
dt	double
=	O
1.	int
/	O
dx	double
;	O
du	double
=	O
1.	int
/	O
dy	double
;	O
zxminmin	double
=	O
state	*(int)
->	O
zx	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
dt	double
;	O
zxminmax	double
=	O
state	*(int)
->	O
zx	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
dt	double
;	O
zxmaxmin	double
=	O
state	*(int)
->	O
zx	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
dt	double
;	O
zxmaxmax	double
=	O
state	*(int)
->	O
zx	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
dt	double
;	O
zyminmin	double
=	O
state	*(int)
->	O
zy	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
du	double
;	O
zyminmax	double
=	O
state	*(int)
->	O
zy	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
du	double
;	O
zymaxmin	double
=	O
state	*(int)
->	O
zy	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
du	double
;	O
zymaxmax	double
=	O
state	*(int)
->	O
zy	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
du	double
;	O
zxyminmin	double
=	O
state	*(int)
->	O
zxy	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
(	O
dt	double
*	O
du	double
)	O
;	O
zxyminmax	double
=	O
state	*(int)
->	O
zxy	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
(	O
dt	double
*	O
du	double
)	O
;	O
zxymaxmin	double
=	O
state	*(int)
->	O
zxy	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
(	O
dt	double
*	O
du	double
)	O
;	O
zxymaxmax	double
=	O
state	*(int)
->	O
zxy	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
(	O
dt	double
*	O
du	double
)	O
;	O
t0	double
=	O
1	int
;	O
t1	double
=	O
t	double
;	O
u0	double
=	O
1	int
;	O
u1	double
=	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
u2	double
=	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
u3	double
=	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
u2	double
;	O
*	O
z_pp	*(double)
=	O
0	int
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
3	int
*	O
zminmin	double
+	O
3	int
*	O
zmaxmin	double
-	O
2	int
*	O
zxminmin	double
-	O
zxmaxmin	double
;	O
*	O
z_pp	*(double)
+=	O
2	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t0	double
*	O
u0	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
3	int
*	O
zyminmin	double
+	O
3	int
*	O
zymaxmin	double
-	O
2	int
*	O
zxyminmin	double
-	O
zxymaxmin	double
;	O
*	O
z_pp	*(double)
+=	O
2	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t0	double
*	O
u1	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
9	int
*	O
zminmin	double
-	O
9	int
*	O
zmaxmin	double
+	O
9	int
*	O
zmaxmax	double
-	O
9	int
*	O
zminmax	double
+	O
6	int
*	O
zxminmin	double
+	O
3	int
*	O
zxmaxmin	double
-	O
3	int
*	O
zxmaxmax	double
-	O
6	int
*	O
zxminmax	double
+	O
6	int
*	O
zyminmin	double
-	O
6	int
*	O
zymaxmin	double
-	O
3	int
*	O
zymaxmax	double
+	O
3	int
*	O
zyminmax	double
+	O
4	int
*	O
zxyminmin	double
+	O
2	int
*	O
zxymaxmin	double
+	O
zxymaxmax	double
+	O
2	int
*	O
zxyminmax	double
;	O
*	O
z_pp	*(double)
+=	O
2	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t0	double
*	O
u2	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
6	int
*	O
zminmin	double
+	O
6	int
*	O
zmaxmin	double
-	O
6	int
*	O
zmaxmax	double
+	O
6	int
*	O
zminmax	double
-	O
4	int
*	O
zxminmin	double
-	O
2	int
*	O
zxmaxmin	double
+	O
2	int
*	O
zxmaxmax	double
+	O
4	int
*	O
zxminmax	double
-	O
3	int
*	O
zyminmin	double
+	O
3	int
*	O
zymaxmin	double
+	O
3	int
*	O
zymaxmax	double
-	O
3	int
*	O
zyminmax	double
-	O
2	int
*	O
zxyminmin	double
-	O
zxymaxmin	double
-	O
zxymaxmax	double
-	O
2	int
*	O
zxyminmax	double
;	O
*	O
z_pp	*(double)
+=	O
2	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t0	double
*	O
u3	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
2	int
*	O
zminmin	double
-	O
2	int
*	O
zmaxmin	double
+	O
zxminmin	double
+	O
zxmaxmin	double
;	O
*	O
z_pp	*(double)
+=	O
6	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t1	double
*	O
u0	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
2	int
*	O
zyminmin	double
-	O
2	int
*	O
zymaxmin	double
+	O
zxyminmin	double
+	O
zxymaxmin	double
;	O
*	O
z_pp	*(double)
+=	O
6	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t1	double
*	O
u1	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
6	int
*	O
zminmin	double
+	O
6	int
*	O
zmaxmin	double
-	O
6	int
*	O
zmaxmax	double
+	O
6	int
*	O
zminmax	double
-	O
3	int
*	O
zxminmin	double
-	O
3	int
*	O
zxmaxmin	double
+	O
3	int
*	O
zxmaxmax	double
+	O
3	int
*	O
zxminmax	double
-	O
4	int
*	O
zyminmin	double
+	O
4	int
*	O
zymaxmin	double
+	O
2	int
*	O
zymaxmax	double
-	O
2	int
*	O
zyminmax	double
-	O
2	int
*	O
zxyminmin	double
-	O
2	int
*	O
zxymaxmin	double
-	O
zxymaxmax	double
-	O
zxyminmax	double
;	O
*	O
z_pp	*(double)
+=	O
6	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t1	double
*	O
u2	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
4	int
*	O
zminmin	double
-	O
4	int
*	O
zmaxmin	double
+	O
4	int
*	O
zmaxmax	double
-	O
4	int
*	O
zminmax	double
+	O
2	int
*	O
zxminmin	double
+	O
2	int
*	O
zxmaxmin	double
-	O
2	int
*	O
zxmaxmax	double
-	O
2	int
*	O
zxminmax	double
+	O
2	int
*	O
zyminmin	double
-	O
2	int
*	O
zymaxmin	double
-	O
2	int
*	O
zymaxmax	double
+	O
2	int
*	O
zyminmax	double
+	O
zxyminmin	double
+	O
zxymaxmin	double
+	O
zxymaxmax	double
+	O
zxyminmax	double
;	O
*	O
z_pp	*(double)
+=	O
6	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t1	double
*	O
u3	double
;	O
*	O
z_pp	*(double)
*=	O
dt	double
*	O
dt	double
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
bicubic_deriv_xy	(*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)
(	O
const	O
void	O
*	O
vstate	*(void)
,	O
const	O
double	O
xarr	array(double)
[	O
]	O
,	O
const	O
double	O
yarr	array(double)
[	O
]	O
,	O
const	O
double	O
zarr	array(double)
[	O
]	O
,	O
size_t	long
xsize	long
,	O
size_t	long
ysize	long
,	O
double	O
x	double
,	O
double	O
y	*(double)
,	O
gsl_interp_accel	struct(long,long,long)
*	O
xa	array(double)
,	O
gsl_interp_accel	struct(long,long,long)
*	O
ya	array(double)
,	O
double	O
*	O
z_pp	*(double)
)	O
{	O
bicubic_state_t	struct(*(double),*(double),*(double),long,long)
*	O
state	*(int)
=	O
(	O
bicubic_state_t	struct(*(double),*(double),*(double),long,long)
*	O
)	O
vstate	*(void)
;	O
double	O
xmin	double
,	O
xmax	double
,	O
ymin	double
,	O
ymax	double
;	O
double	O
zminmin	double
,	O
zminmax	double
,	O
zmaxmin	double
,	O
zmaxmax	double
;	O
double	O
zxminmin	double
,	O
zxminmax	double
,	O
zxmaxmin	double
,	O
zxmaxmax	double
;	O
double	O
zyminmin	double
,	O
zyminmax	double
,	O
zymaxmin	double
,	O
zymaxmax	double
;	O
double	O
zxyminmin	double
,	O
zxyminmax	double
,	O
zxymaxmin	double
,	O
zxymaxmax	double
;	O
double	O
dx	double
,	O
dy	double
;	O
double	O
dt	double
,	O
du	double
;	O
double	O
t	double
,	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
double	O
t0	double
,	O
t1	double
,	O
t2	double
,	O
u0	double
,	O
u1	double
,	O
u2	double
;	O
double	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
size_t	long
xi	long
,	O
yi	long
;	O
if	O
(	O
xa	array(double)
!=	O
NULL	O
)	O
xi	long
=	O
gsl_interp_accel_find	(*(struct(long,long,long)),array(double),long,double)->(long)
(	O
xa	array(double)
,	O
xarr	array(double)
,	O
xsize	long
,	O
x	double
)	O
;	O
else	O
xi	long
=	O
gsl_interp_bsearch	(array(double),double,long,long)->(long)
(	O
xarr	array(double)
,	O
x	double
,	O
0	int
,	O
xsize	long
-	O
1	int
)	O
;	O
if	O
(	O
ya	array(double)
!=	O
NULL	O
)	O
yi	long
=	O
gsl_interp_accel_find	(*(struct(long,long,long)),array(double),long,double)->(long)
(	O
ya	array(double)
,	O
yarr	array(double)
,	O
ysize	long
,	O
y	*(double)
)	O
;	O
else	O
yi	long
=	O
gsl_interp_bsearch	(array(double),double,long,long)->(long)
(	O
yarr	array(double)
,	O
y	*(double)
,	O
0	int
,	O
ysize	long
-	O
1	int
)	O
;	O
xmin	double
=	O
xarr	array(double)
[	O
xi	long
]	O
;	O
xmax	double
=	O
xarr	array(double)
[	O
xi	long
+	O
1	int
]	O
;	O
ymin	double
=	O
yarr	array(double)
[	O
yi	long
]	O
;	O
ymax	double
=	O
yarr	array(double)
[	O
yi	long
+	O
1	int
]	O
;	O
zminmin	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
state	*(int)
)	O
]	O
;	O
zminmax	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
;	O
zmaxmin	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
state	*(int)
)	O
]	O
;	O
zmaxmax	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
;	O
dx	double
=	O
xmax	double
-	O
xmin	double
;	O
dy	double
=	O
ymax	double
-	O
ymin	double
;	O
t	double
=	O
(	O
x	double
-	O
xmin	double
)	O
/	O
dx	double
;	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
(	O
y	*(double)
-	O
ymin	double
)	O
/	O
dy	double
;	O
dt	double
=	O
1.	int
/	O
dx	double
;	O
du	double
=	O
1.	int
/	O
dy	double
;	O
zxminmin	double
=	O
state	*(int)
->	O
zx	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
dt	double
;	O
zxminmax	double
=	O
state	*(int)
->	O
zx	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
dt	double
;	O
zxmaxmin	double
=	O
state	*(int)
->	O
zx	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
dt	double
;	O
zxmaxmax	double
=	O
state	*(int)
->	O
zx	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
dt	double
;	O
zyminmin	double
=	O
state	*(int)
->	O
zy	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
du	double
;	O
zyminmax	double
=	O
state	*(int)
->	O
zy	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
du	double
;	O
zymaxmin	double
=	O
state	*(int)
->	O
zy	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
du	double
;	O
zymaxmax	double
=	O
state	*(int)
->	O
zy	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
du	double
;	O
zxyminmin	double
=	O
state	*(int)
->	O
zxy	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
(	O
dt	double
*	O
du	double
)	O
;	O
zxyminmax	double
=	O
state	*(int)
->	O
zxy	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
(	O
dt	double
*	O
du	double
)	O
;	O
zxymaxmin	double
=	O
state	*(int)
->	O
zxy	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
(	O
dt	double
*	O
du	double
)	O
;	O
zxymaxmax	double
=	O
state	*(int)
->	O
zxy	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
(	O
dt	double
*	O
du	double
)	O
;	O
t0	double
=	O
1	int
;	O
t1	double
=	O
t	double
;	O
t2	double
=	O
t	double
*	O
t	double
;	O
u0	double
=	O
1	int
;	O
u1	double
=	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
u2	double
=	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
*	O
z_pp	*(double)
=	O
0	int
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
zxyminmin	double
;	O
*	O
z_pp	*(double)
+=	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t0	double
*	O
u0	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
3	int
*	O
zxminmin	double
+	O
3	int
*	O
zxminmax	double
-	O
2	int
*	O
zxyminmin	double
-	O
zxyminmax	double
;	O
*	O
z_pp	*(double)
+=	O
2	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t0	double
*	O
u1	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
2	int
*	O
zxminmin	double
-	O
2	int
*	O
zxminmax	double
+	O
zxyminmin	double
+	O
zxyminmax	double
;	O
*	O
z_pp	*(double)
+=	O
3	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t0	double
*	O
u2	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
3	int
*	O
zyminmin	double
+	O
3	int
*	O
zymaxmin	double
-	O
2	int
*	O
zxyminmin	double
-	O
zxymaxmin	double
;	O
*	O
z_pp	*(double)
+=	O
2	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t1	double
*	O
u0	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
9	int
*	O
zminmin	double
-	O
9	int
*	O
zmaxmin	double
+	O
9	int
*	O
zmaxmax	double
-	O
9	int
*	O
zminmax	double
+	O
6	int
*	O
zxminmin	double
+	O
3	int
*	O
zxmaxmin	double
-	O
3	int
*	O
zxmaxmax	double
-	O
6	int
*	O
zxminmax	double
+	O
6	int
*	O
zyminmin	double
-	O
6	int
*	O
zymaxmin	double
-	O
3	int
*	O
zymaxmax	double
+	O
3	int
*	O
zyminmax	double
+	O
4	int
*	O
zxyminmin	double
+	O
2	int
*	O
zxymaxmin	double
+	O
zxymaxmax	double
+	O
2	int
*	O
zxyminmax	double
;	O
*	O
z_pp	*(double)
+=	O
4	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t1	double
*	O
u1	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
6	int
*	O
zminmin	double
+	O
6	int
*	O
zmaxmin	double
-	O
6	int
*	O
zmaxmax	double
+	O
6	int
*	O
zminmax	double
-	O
4	int
*	O
zxminmin	double
-	O
2	int
*	O
zxmaxmin	double
+	O
2	int
*	O
zxmaxmax	double
+	O
4	int
*	O
zxminmax	double
-	O
3	int
*	O
zyminmin	double
+	O
3	int
*	O
zymaxmin	double
+	O
3	int
*	O
zymaxmax	double
-	O
3	int
*	O
zyminmax	double
-	O
2	int
*	O
zxyminmin	double
-	O
zxymaxmin	double
-	O
zxymaxmax	double
-	O
2	int
*	O
zxyminmax	double
;	O
*	O
z_pp	*(double)
+=	O
6	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t1	double
*	O
u2	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
2	int
*	O
zyminmin	double
-	O
2	int
*	O
zymaxmin	double
+	O
zxyminmin	double
+	O
zxymaxmin	double
;	O
*	O
z_pp	*(double)
+=	O
3	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t2	double
*	O
u0	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
6	int
*	O
zminmin	double
+	O
6	int
*	O
zmaxmin	double
-	O
6	int
*	O
zmaxmax	double
+	O
6	int
*	O
zminmax	double
-	O
3	int
*	O
zxminmin	double
-	O
3	int
*	O
zxmaxmin	double
+	O
3	int
*	O
zxmaxmax	double
+	O
3	int
*	O
zxminmax	double
-	O
4	int
*	O
zyminmin	double
+	O
4	int
*	O
zymaxmin	double
+	O
2	int
*	O
zymaxmax	double
-	O
2	int
*	O
zyminmax	double
-	O
2	int
*	O
zxyminmin	double
-	O
2	int
*	O
zxymaxmin	double
-	O
zxymaxmax	double
-	O
zxyminmax	double
;	O
*	O
z_pp	*(double)
+=	O
6	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t2	double
*	O
u1	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
4	int
*	O
zminmin	double
-	O
4	int
*	O
zmaxmin	double
+	O
4	int
*	O
zmaxmax	double
-	O
4	int
*	O
zminmax	double
+	O
2	int
*	O
zxminmin	double
+	O
2	int
*	O
zxmaxmin	double
-	O
2	int
*	O
zxmaxmax	double
-	O
2	int
*	O
zxminmax	double
+	O
2	int
*	O
zyminmin	double
-	O
2	int
*	O
zymaxmin	double
-	O
2	int
*	O
zymaxmax	double
+	O
2	int
*	O
zyminmax	double
+	O
zxyminmin	double
+	O
zxymaxmin	double
+	O
zxymaxmax	double
+	O
zxyminmax	double
;	O
*	O
z_pp	*(double)
+=	O
9	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t2	double
*	O
u2	double
;	O
*	O
z_pp	*(double)
*=	O
dt	double
*	O
du	double
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
bicubic_deriv_yy	(*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)
(	O
const	O
void	O
*	O
vstate	*(void)
,	O
const	O
double	O
xarr	array(double)
[	O
]	O
,	O
const	O
double	O
yarr	array(double)
[	O
]	O
,	O
const	O
double	O
zarr	array(double)
[	O
]	O
,	O
size_t	long
xsize	long
,	O
size_t	long
ysize	long
,	O
double	O
x	double
,	O
double	O
y	*(double)
,	O
gsl_interp_accel	struct(long,long,long)
*	O
xa	array(double)
,	O
gsl_interp_accel	struct(long,long,long)
*	O
ya	array(double)
,	O
double	O
*	O
z_pp	*(double)
)	O
{	O
bicubic_state_t	struct(*(double),*(double),*(double),long,long)
*	O
state	*(int)
=	O
(	O
bicubic_state_t	struct(*(double),*(double),*(double),long,long)
*	O
)	O
vstate	*(void)
;	O
double	O
xmin	double
,	O
xmax	double
,	O
ymin	double
,	O
ymax	double
;	O
double	O
zminmin	double
,	O
zminmax	double
,	O
zmaxmin	double
,	O
zmaxmax	double
;	O
double	O
zxminmin	double
,	O
zxminmax	double
,	O
zxmaxmin	double
,	O
zxmaxmax	double
;	O
double	O
zyminmin	double
,	O
zyminmax	double
,	O
zymaxmin	double
,	O
zymaxmax	double
;	O
double	O
zxyminmin	double
,	O
zxyminmax	double
,	O
zxymaxmin	double
,	O
zxymaxmax	double
;	O
double	O
dx	double
,	O
dy	double
;	O
double	O
dt	double
,	O
du	double
;	O
double	O
t	double
,	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
double	O
t0	double
,	O
t1	double
,	O
t2	double
,	O
t3	double
,	O
u0	double
,	O
u1	double
;	O
double	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
size_t	long
xi	long
,	O
yi	long
;	O
if	O
(	O
xa	array(double)
!=	O
NULL	O
)	O
xi	long
=	O
gsl_interp_accel_find	(*(struct(long,long,long)),array(double),long,double)->(long)
(	O
xa	array(double)
,	O
xarr	array(double)
,	O
xsize	long
,	O
x	double
)	O
;	O
else	O
xi	long
=	O
gsl_interp_bsearch	(array(double),double,long,long)->(long)
(	O
xarr	array(double)
,	O
x	double
,	O
0	int
,	O
xsize	long
-	O
1	int
)	O
;	O
if	O
(	O
ya	array(double)
!=	O
NULL	O
)	O
yi	long
=	O
gsl_interp_accel_find	(*(struct(long,long,long)),array(double),long,double)->(long)
(	O
ya	array(double)
,	O
yarr	array(double)
,	O
ysize	long
,	O
y	*(double)
)	O
;	O
else	O
yi	long
=	O
gsl_interp_bsearch	(array(double),double,long,long)->(long)
(	O
yarr	array(double)
,	O
y	*(double)
,	O
0	int
,	O
ysize	long
-	O
1	int
)	O
;	O
xmin	double
=	O
xarr	array(double)
[	O
xi	long
]	O
;	O
xmax	double
=	O
xarr	array(double)
[	O
xi	long
+	O
1	int
]	O
;	O
ymin	double
=	O
yarr	array(double)
[	O
yi	long
]	O
;	O
ymax	double
=	O
yarr	array(double)
[	O
yi	long
+	O
1	int
]	O
;	O
zminmin	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
state	*(int)
)	O
]	O
;	O
zminmax	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
;	O
zmaxmin	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
state	*(int)
)	O
]	O
;	O
zmaxmax	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
;	O
dx	double
=	O
xmax	double
-	O
xmin	double
;	O
dy	double
=	O
ymax	double
-	O
ymin	double
;	O
t	double
=	O
(	O
x	double
-	O
xmin	double
)	O
/	O
dx	double
;	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
(	O
y	*(double)
-	O
ymin	double
)	O
/	O
dy	double
;	O
dt	double
=	O
1.	int
/	O
dx	double
;	O
du	double
=	O
1.	int
/	O
dy	double
;	O
zxminmin	double
=	O
state	*(int)
->	O
zx	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
dt	double
;	O
zxminmax	double
=	O
state	*(int)
->	O
zx	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
dt	double
;	O
zxmaxmin	double
=	O
state	*(int)
->	O
zx	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
dt	double
;	O
zxmaxmax	double
=	O
state	*(int)
->	O
zx	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
dt	double
;	O
zyminmin	double
=	O
state	*(int)
->	O
zy	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
du	double
;	O
zyminmax	double
=	O
state	*(int)
->	O
zy	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
du	double
;	O
zymaxmin	double
=	O
state	*(int)
->	O
zy	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
du	double
;	O
zymaxmax	double
=	O
state	*(int)
->	O
zy	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
du	double
;	O
zxyminmin	double
=	O
state	*(int)
->	O
zxy	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
(	O
dt	double
*	O
du	double
)	O
;	O
zxyminmax	double
=	O
state	*(int)
->	O
zxy	*(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
(	O
dt	double
*	O
du	double
)	O
;	O
zxymaxmin	double
=	O
state	*(int)
->	O
zxy	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
state	*(int)
)	O
]	O
/	O
(	O
dt	double
*	O
du	double
)	O
;	O
zxymaxmax	double
=	O
state	*(int)
->	O
zxy	*(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
state	*(int)
)	O
]	O
/	O
(	O
dt	double
*	O
du	double
)	O
;	O
t0	double
=	O
1	int
;	O
t1	double
=	O
t	double
;	O
t2	double
=	O
t	double
*	O
t	double
;	O
t3	double
=	O
t	double
*	O
t2	double
;	O
u0	double
=	O
1	int
;	O
u1	double
=	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
*	O
z_pp	*(double)
=	O
0	int
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
3	int
*	O
zminmin	double
+	O
3	int
*	O
zminmax	double
-	O
2	int
*	O
zyminmin	double
-	O
zyminmax	double
;	O
*	O
z_pp	*(double)
+=	O
2	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t0	double
*	O
u0	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
2	int
*	O
zminmin	double
-	O
2	int
*	O
zminmax	double
+	O
zyminmin	double
+	O
zyminmax	double
;	O
*	O
z_pp	*(double)
+=	O
6	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t0	double
*	O
u1	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
3	int
*	O
zxminmin	double
+	O
3	int
*	O
zxminmax	double
-	O
2	int
*	O
zxyminmin	double
-	O
zxyminmax	double
;	O
*	O
z_pp	*(double)
+=	O
2	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t1	double
*	O
u0	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
2	int
*	O
zxminmin	double
-	O
2	int
*	O
zxminmax	double
+	O
zxyminmin	double
+	O
zxyminmax	double
;	O
*	O
z_pp	*(double)
+=	O
6	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t1	double
*	O
u1	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
9	int
*	O
zminmin	double
-	O
9	int
*	O
zmaxmin	double
+	O
9	int
*	O
zmaxmax	double
-	O
9	int
*	O
zminmax	double
+	O
6	int
*	O
zxminmin	double
+	O
3	int
*	O
zxmaxmin	double
-	O
3	int
*	O
zxmaxmax	double
-	O
6	int
*	O
zxminmax	double
+	O
6	int
*	O
zyminmin	double
-	O
6	int
*	O
zymaxmin	double
-	O
3	int
*	O
zymaxmax	double
+	O
3	int
*	O
zyminmax	double
+	O
4	int
*	O
zxyminmin	double
+	O
2	int
*	O
zxymaxmin	double
+	O
zxymaxmax	double
+	O
2	int
*	O
zxyminmax	double
;	O
*	O
z_pp	*(double)
+=	O
2	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t2	double
*	O
u0	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
6	int
*	O
zminmin	double
+	O
6	int
*	O
zmaxmin	double
-	O
6	int
*	O
zmaxmax	double
+	O
6	int
*	O
zminmax	double
-	O
4	int
*	O
zxminmin	double
-	O
2	int
*	O
zxmaxmin	double
+	O
2	int
*	O
zxmaxmax	double
+	O
4	int
*	O
zxminmax	double
-	O
3	int
*	O
zyminmin	double
+	O
3	int
*	O
zymaxmin	double
+	O
3	int
*	O
zymaxmax	double
-	O
3	int
*	O
zyminmax	double
-	O
2	int
*	O
zxyminmin	double
-	O
zxymaxmin	double
-	O
zxymaxmax	double
-	O
2	int
*	O
zxyminmax	double
;	O
*	O
z_pp	*(double)
+=	O
6	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t2	double
*	O
u1	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
-	O
6	int
*	O
zminmin	double
+	O
6	int
*	O
zmaxmin	double
-	O
6	int
*	O
zmaxmax	double
+	O
6	int
*	O
zminmax	double
-	O
3	int
*	O
zxminmin	double
-	O
3	int
*	O
zxmaxmin	double
+	O
3	int
*	O
zxmaxmax	double
+	O
3	int
*	O
zxminmax	double
-	O
4	int
*	O
zyminmin	double
+	O
4	int
*	O
zymaxmin	double
+	O
2	int
*	O
zymaxmax	double
-	O
2	int
*	O
zyminmax	double
-	O
2	int
*	O
zxyminmin	double
-	O
2	int
*	O
zxymaxmin	double
-	O
zxymaxmax	double
-	O
zxyminmax	double
;	O
*	O
z_pp	*(double)
+=	O
2	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t3	double
*	O
u0	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
4	int
*	O
zminmin	double
-	O
4	int
*	O
zmaxmin	double
+	O
4	int
*	O
zmaxmax	double
-	O
4	int
*	O
zminmax	double
+	O
2	int
*	O
zxminmin	double
+	O
2	int
*	O
zxmaxmin	double
-	O
2	int
*	O
zxmaxmax	double
-	O
2	int
*	O
zxminmax	double
+	O
2	int
*	O
zyminmin	double
-	O
2	int
*	O
zymaxmin	double
-	O
2	int
*	O
zymaxmax	double
+	O
2	int
*	O
zyminmax	double
+	O
zxyminmin	double
+	O
zxymaxmin	double
+	O
zxymaxmax	double
+	O
zxyminmax	double
;	O
*	O
z_pp	*(double)
+=	O
6	int
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
t3	double
*	O
u1	double
;	O
*	O
z_pp	*(double)
*=	O
du	double
*	O
du	double
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
const	O
gsl_interp2d_type	struct(*(char),int,*((long,long)->(*(void))),*((*(void),array(double),array(double),array(double),long,long)->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void))->(void)))
bicubic_type	struct(*(char),int,*((long,long)->(*(void))),*((*(void),array(double),array(double),array(double),long,long)->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void))->(void)))
=	O
{	O
"bicubic"	*(char)
,	O
4	int
,	O
&	O
bicubic_alloc	(long,long)->(*(void))
,	O
&	O
bicubic_init	(*(void),array(double),array(double),array(double),long,long)->(int)
,	O
&	O
bicubic_eval	(*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)
,	O
&	O
bicubic_deriv_x	(*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)
,	O
&	O
bicubic_deriv_y	(*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)
,	O
&	O
bicubic_deriv_xx	(*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)
,	O
&	O
bicubic_deriv_xy	(*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)
,	O
&	O
bicubic_deriv_yy	(*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)
,	O
&	O
bicubic_free	(*(void))->(void)
}	O
;	O
const	O
gsl_interp2d_type	struct(*(char),int,*((long,long)->(*(void))),*((*(void),array(double),array(double),array(double),long,long)->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void))->(void)))
*	O
gsl_interp2d_bicubic	*(struct(*(char),int,*((long,long)->(*(void))),*((*(void),array(double),array(double),array(double),long,long)->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct`),*(struct`),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct`),*(struct`),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct`),*(struct`),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct`),*(struct`),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct`),*(struct`),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct`),*(struct`),*(double))->(int)),*((*(void))->(void))))
=	O
&	O
bicubic_type	struct(*(char),int,*((long,long)->(*(void))),*((*(void),array(double),array(double),array(double),long,long)->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void))->(void)))
;	O
