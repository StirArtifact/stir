int	O
mu_property_sget_value	(*(struct),*(char),*(*(char)))->(int)
(	O
mu_property_t	*(struct)
prop	*(struct)
,	O
const	O
char	O
*	O
key	*(char)
,	O
const	O
char	O
*	O
*	O
pval	*(void)
)	O
{	O
int	O
rc	int
=	O
_mu_property_check	(*(struct(long,int,*(void),*(void),*((*`)->(int)),*((*`)->(void)),*((*`)->(int)),*((*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)))))->(int)
(	O
prop	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
if	O
(	O
!	O
prop	*(struct)
->	O
_prop_getval	*((*(struct(long,int,*(void),*(void),*((*`)->(int)),*((*`)->(void)),*((*`)->(int)),*((*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)))),*(char),*(*(char)))->(int))
)	O
return	O
MU_ERR_EMPTY_VFN	O
;	O
return	O
prop	*(struct)
->	O
_prop_getval	*((*(struct(long,int,*(void),*(void),*((*`)->(int)),*((*`)->(void)),*((*`)->(int)),*((*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)))),*(char),*(*(char)))->(int))
(	O
prop	*(struct)
,	O
key	*(char)
,	O
pval	*(void)
)	O
;	O
}	O
int	O
mu_property_aget_value	(*(struct),*(char),*(*(char)))->(int)
(	O
mu_property_t	*(struct)
prop	*(struct)
,	O
const	O
char	O
*	O
key	*(char)
,	O
char	O
*	O
*	O
buffer	*(*(char))
)	O
{	O
const	O
char	O
*	O
value	*(void)
;	O
int	O
rc	int
=	O
mu_property_sget_value	(*(struct),*(char),*(*(char)))->(int)
(	O
prop	*(struct)
,	O
key	*(char)
,	O
&	O
value	*(void)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
if	O
(	O
(	O
*	O
buffer	*(*(char))
=	O
strdup	(*(char))->(*(char))
(	O
value	*(void)
)	O
)	O
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
}	O
return	O
rc	int
;	O
}	O
int	O
mu_property_get_value	(*(struct),*(char),*(char),long,*(long))->(int)
(	O
mu_property_t	*(struct)
prop	*(struct)
,	O
const	O
char	O
*	O
key	*(char)
,	O
char	O
*	O
buffer	*(*(char))
,	O
size_t	long
buflen	long
,	O
size_t	long
*	O
n	*(long)
)	O
{	O
size_t	long
len	long
=	O
0	int
;	O
const	O
char	O
*	O
value	*(void)
;	O
int	O
rc	int
=	O
mu_property_sget_value	(*(struct),*(char),*(*(char)))->(int)
(	O
prop	*(struct)
,	O
key	*(char)
,	O
&	O
value	*(void)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
len	long
=	O
strlen	(*(char))->(long)
(	O
value	*(void)
)	O
+	O
1	int
;	O
if	O
(	O
buffer	*(*(char))
&&	O
buflen	long
)	O
{	O
if	O
(	O
buflen	long
<	O
len	long
)	O
len	long
=	O
buflen	long
;	O
len	long
--	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
buffer	*(*(char))
,	O
value	*(void)
,	O
len	long
)	O
;	O
buffer	*(*(char))
[	O
len	long
]	O
=	O
0	int
;	O
}	O
}	O
if	O
(	O
n	*(long)
)	O
*	O
n	*(long)
=	O
len	long
;	O
return	O
rc	int
;	O
}	O
int	O
mu_property_is_set	(*(struct),*(char))->(int)
(	O
mu_property_t	*(struct)
prop	*(struct)
,	O
const	O
char	O
*	O
key	*(char)
)	O
{	O
if	O
(	O
_mu_property_check	(*(struct(long,int,*(void),*(void),*((*`)->(int)),*((*`)->(void)),*((*`)->(int)),*((*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)))))->(int)
(	O
prop	*(struct)
)	O
)	O
return	O
0	int
;	O
return	O
mu_property_sget_value	(*(struct),*(char),*(*(char)))->(int)
(	O
prop	*(struct)
,	O
key	*(char)
,	O
NULL	O
)	O
==	O
0	int
;	O
}	O
