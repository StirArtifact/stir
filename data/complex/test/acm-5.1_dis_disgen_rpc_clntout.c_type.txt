static	O
char	O
rcsid	array(char)
[	O
]	O
=	O
"$Id: rpc_clntout.c,v 1.1.1.1 2005/10/28 14:46:46 k0ro Exp $"	*(char)
;	O
static	O
int	O
write_program	()->(int)
(	O
)	O
,	O
printbody	()->(int)
(	O
)	O
;	O
void	O
write_stubs	()->(void)
(	O
)	O
{	O
list	struct(*(char),*(struct(*(char),*(struct(*(char),*(struct`))))))
*	O
l	*(struct(*(char),*(struct(*(char),*(struct`)))))
;	O
definition	struct(*(char),enum(int,int,int,int,int,int),union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`))))))
*	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n/* Default timeout can be changed using clnt_control() */\n"	*(char)
)	O
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"static struct timeval TIMEOUT = { %d, 0 };\n"	*(char)
,	O
DEFAULT_TIMEOUT	int
)	O
;	O
for	O
(	O
l	*(struct(*(char),*(struct(*(char),*(struct`)))))
=	O
defined	*(struct(*(char),*(struct(*(char),*(struct`)))))
;	O
l	*(struct(*(char),*(struct(*(char),*(struct`)))))
!=	O
NULL	O
;	O
l	*(struct(*(char),*(struct(*(char),*(struct`)))))
=	O
l	*(struct(*(char),*(struct(*(char),*(struct`)))))
->	O
next	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`)))))
)	O
{	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
=	O
(	O
definition	struct(*(char),enum(int,int,int,int,int,int),union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`))))))
*	O
)	O
l	*(struct(*(char),*(struct(*(char),*(struct`)))))
->	O
val	*(char)
;	O
if	O
(	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def_kind	enum(int,int,int,int,int,int)
==	O
DEF_PROGRAM	int
)	O
{	O
write_program	()->(int)
(	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
)	O
;	O
}	O
}	O
}	O
static	O
write_program	()->(int)
(	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
)	O
definition	struct(*(char),enum(int,int,int,int,int,int),union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`))))))
*	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
;	O
{	O
version_list	struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))))),*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`))))))
*	O
vp	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
;	O
proc_list	struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))))))
*	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
for	O
(	O
vp	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
=	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
.	O
pr	struct(*(char),*(struct(*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))
.	O
versions	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
;	O
vp	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
!=	O
NULL	O
;	O
vp	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
=	O
vp	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`)))))
)	O
{	O
for	O
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
=	O
vp	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
procs	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
!=	O
NULL	O
;	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
=	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
next	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`)))))
)	O
{	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
ptype	()->(void)
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
res_prefix	*(char)
,	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
res_type	*(char)
,	O
1	int
)	O
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"*\n"	*(char)
)	O
;	O
pvname	()->(void)
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
proc_name	*(char)
,	O
vp	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
vers_num	*(char)
)	O
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"(argp, clnt)\n"	*(char)
)	O
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\t"	*(char)
)	O
;	O
ptype	()->(void)
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
arg_prefix	*(char)
,	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
arg_type	*(char)
,	O
1	int
)	O
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"*argp;\n"	*(char)
)	O
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\tCLIENT *clnt;\n"	*(char)
)	O
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"{\n"	*(char)
)	O
;	O
printbody	()->(int)
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"}\n\n"	*(char)
)	O
;	O
}	O
}	O
return	O
0	int
;	O
}	O
static	O
char	O
*	O
ampr	(*(char))->(*(char))
(	O
type	*(char)
)	O
char	O
*	O
type	*(char)
;	O
{	O
if	O
(	O
isvectordef	()->(int)
(	O
type	*(char)
,	O
REL_ALIAS	int
)	O
)	O
{	O
return	O
(	O
""	*(char)
)	O
;	O
}	O
else	O
{	O
return	O
(	O
"&"	*(char)
)	O
;	O
}	O
}	O
static	O
printbody	()->(int)
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
proc_list	struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))))))
*	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
{	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\tstatic "	*(char)
)	O
;	O
if	O
(	O
streq	()->(int)
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
res_type	*(char)
,	O
"void"	*(char)
)	O
)	O
{	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"char "	*(char)
)	O
;	O
}	O
else	O
{	O
ptype	()->(void)
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
res_prefix	*(char)
,	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
res_type	*(char)
,	O
0	int
)	O
;	O
}	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"res;\n"	*(char)
)	O
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\tbzero((char *)%sres, sizeof(res));\n"	*(char)
,	O
ampr	(*(char))->(*(char))
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
res_type	*(char)
)	O
)	O
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\tif (clnt_call(clnt, %s, xdr_%s, argp, xdr_%s, %sres, TIMEOUT) != RPC_SUCCESS) {\n"	*(char)
,	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
proc_name	*(char)
,	O
stringfix	()->(*(char))
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
arg_type	*(char)
)	O
,	O
stringfix	()->(*(char))
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
res_type	*(char)
)	O
,	O
ampr	(*(char))->(*(char))
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
res_type	*(char)
)	O
)	O
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\t\treturn (NULL);\n"	*(char)
)	O
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\t}\n"	*(char)
)	O
;	O
if	O
(	O
streq	()->(int)
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
res_type	*(char)
,	O
"void"	*(char)
)	O
)	O
{	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\treturn ((void *)%sres);\n"	*(char)
,	O
ampr	(*(char))->(*(char))
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
res_type	*(char)
)	O
)	O
;	O
}	O
else	O
{	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\treturn (%sres);\n"	*(char)
,	O
ampr	(*(char))->(*(char))
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
res_type	*(char)
)	O
)	O
;	O
}	O
return	O
0	int
;	O
}	O
