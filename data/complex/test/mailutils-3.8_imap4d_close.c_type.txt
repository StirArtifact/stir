static	O
int	O
imap4d_close0	(*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct),int)->(int)
(	O
struct	O
imap4d_command	struct(*(char),*((*(struct),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)),int,int,int,*(char))
*	O
command	*(char)
,	O
imap4d_tokbuf_t	*(struct)
tok	*(*(struct))
,	O
int	O
expunge	int
)	O
{	O
const	O
char	O
*	O
msg	*(struct)
=	O
NULL	O
;	O
int	O
status	int
,	O
flags	int
;	O
if	O
(	O
imap4d_tokbuf_argc	(*(struct))->(int)
(	O
tok	*(*(struct))
)	O
!=	O
2	int
)	O
return	O
io_completion_response	(*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),int,*(char))->(int)
(	O
command	*(char)
,	O
RESP_BAD	int
,	O
"Invalid arguments"	*(char)
)	O
;	O
mu_mailbox_get_flags	(*(struct),*(int))->(int)
(	O
mbox	*(struct)
,	O
&	O
flags	int
)	O
;	O
if	O
(	O
flags	int
&	O
MU_STREAM_WRITE	int
)	O
{	O
silent_expunge	int
=	O
expunge	int
;	O
imap4d_enter_critical	()->(void)
(	O
)	O
;	O
status	int
=	O
mu_mailbox_flush	(*(struct),int)->(int)
(	O
mbox	*(struct)
,	O
expunge	int
)	O
;	O
imap4d_leave_critical	()->(void)
(	O
)	O
;	O
silent_expunge	int
=	O
0	int
;	O
if	O
(	O
status	int
)	O
{	O
mu_diag_funcall	(int,*(char),*(char),int)->(void)
(	O
MU_DIAG_ERROR	O
,	O
"mu_mailbox_flush"	*(char)
,	O
NULL	O
,	O
status	int
)	O
;	O
msg	*(struct)
=	O
"flushing mailbox failed"	*(char)
;	O
}	O
}	O
imap4d_enter_critical	()->(void)
(	O
)	O
;	O
status	int
=	O
mu_mailbox_close	(*(struct))->(int)
(	O
mbox	*(struct)
)	O
;	O
imap4d_leave_critical	()->(void)
(	O
)	O
;	O
if	O
(	O
status	int
)	O
{	O
mu_diag_funcall	(int,*(char),*(char),int)->(void)
(	O
MU_DIAG_ERROR	O
,	O
"mu_mailbox_close"	*(char)
,	O
NULL	O
,	O
status	int
)	O
;	O
msg	*(struct)
=	O
"closing mailbox failed"	*(char)
;	O
}	O
manlock_unlock	(*(struct))->(int)
(	O
mbox	*(struct)
)	O
;	O
mu_mailbox_destroy	(*(*(struct)))->(void)
(	O
&	O
mbox	*(struct)
)	O
;	O
if	O
(	O
msg	*(struct)
)	O
return	O
io_completion_response	(*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),int,*(char))->(int)
(	O
command	*(char)
,	O
RESP_NO	int
,	O
"%s"	*(char)
,	O
msg	*(struct)
)	O
;	O
return	O
io_completion_response	(*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),int,*(char))->(int)
(	O
command	*(char)
,	O
RESP_OK	int
,	O
"Completed"	*(char)
)	O
;	O
}	O
int	O
imap4d_close	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
(	O
struct	O
imap4d_session	struct(enum(int,int,int,int,int),*(struct(*(char),*(char),*(char),*(char))))
*	O
session	*(struct(enum(int,int,int,int,int),*(struct(*(char),*(char),*(char),*(char)))))
,	O
struct	O
imap4d_command	struct(*(char),*((*(struct),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)),int,int,int,*(char))
*	O
command	*(char)
,	O
imap4d_tokbuf_t	*(struct)
tok	*(*(struct))
)	O
{	O
return	O
imap4d_close0	(*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct),int)->(int)
(	O
command	*(char)
,	O
tok	*(*(struct))
,	O
1	int
)	O
;	O
}	O
int	O
imap4d_unselect	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
(	O
struct	O
imap4d_session	struct(enum(int,int,int,int,int),*(struct(*(char),*(char),*(char),*(char))))
*	O
session	*(struct(enum(int,int,int,int,int),*(struct(*(char),*(char),*(char),*(char)))))
,	O
struct	O
imap4d_command	struct(*(char),*((*(struct),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)),int,int,int,*(char))
*	O
command	*(char)
,	O
imap4d_tokbuf_t	*(struct)
tok	*(*(struct))
)	O
{	O
return	O
imap4d_close0	(*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct),int)->(int)
(	O
command	*(char)
,	O
tok	*(*(struct))
,	O
0	int
)	O
;	O
}	O
