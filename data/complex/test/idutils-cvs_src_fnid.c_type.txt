void	O
scan_files	(*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
struct	O
idhead	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))))
*	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
;	O
void	O
scan_member_file	(*(struct(*(struct(union`,char,array(char))),*(struct),long)))->(void)
(	O
struct	O
member_file	struct(*(struct(union(*(struct(union`,char,array(char))),long),char,array(char))),*(struct),long)
const	O
*	O
member	*(struct(*(struct(union(*`,long),char,array(char))),*(struct),long))
)	O
;	O
void	O
usage	()->(void)
(	O
void	O
)	O
;	O
char	O
const	O
*	O
program_name	*(char)
;	O
int	O
show_version	int
=	O
0	int
;	O
int	O
show_help	int
=	O
0	int
;	O
struct	O
idhead	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))))
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
;	O
struct	O
file_link	struct(union(*(struct(union(*(struct`),long),char,array(char))),long),char,array(char))
*	O
cw_dlink	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
;	O
int	O
no_id_flag	int
=	O
1	int
;	O
enum	O
separator_style	enum(int,int,int,int,int)
separator_style	enum(int,int,int,int,int)
=	O
ss_contextual	int
;	O
void	O
usage	()->(void)
(	O
void	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"Try `%s --help' for more information.\n"	*(char)
)	O
,	O
program_name	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
static	O
struct	O
option	struct(*(char),int,*(int),int)
const	O
long_options	array(struct(*(char),int,*(int),int))
[	O
]	O
=	O
{	O
{	O
"file"	*(char)
,	O
required_argument	int
,	O
0	int
,	O
'f'	O
}	O
,	O
{	O
"separator"	*(char)
,	O
required_argument	int
,	O
0	int
,	O
'S'	O
}	O
,	O
{	O
"help"	*(char)
,	O
no_argument	int
,	O
&	O
show_help	int
,	O
1	int
}	O
,	O
{	O
"version"	*(char)
,	O
no_argument	int
,	O
&	O
show_version	int
,	O
1	int
}	O
,	O
{	O
0	int
}	O
}	O
;	O
static	O
void	O
help_me	()->(void)
(	O
void	O
)	O
{	O
printf	(*(char))->(int)
(	O
_	O
(	O
"Usage: %s [OPTION]... [PATTERN]...\n"	*(char)
)	O
,	O
program_name	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
_	O
(	O
"Print constituent file names that match PATTERN,\nusing shell-style wildcards.\n  -f, --file=FILE        file name of ID database\n  -S, --separator=STYLE  STYLE is one of `braces', `space' or `newline'\n      --help             display this help and exit\n      --version          output version information and exit\n"	*(char)
)	O
)	O
;	O
printf	(*(char))->(int)
(	O
_	O
(	O
"\nReport bugs to "	*(char)
PACKAGE_BUGREPORT	*(char)
"\n\n"	*(char)
)	O
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
program_name	*(char)
=	O
argv	*(*(char))
[	O
0	int
]	O
;	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
.	O
idh_file_name	*(char)
=	O
0	int
;	O
setlocale	(int,*(char))->(*(char))
(	O
LC_ALL	O
,	O
""	*(char)
)	O
;	O
bindtextdomain	(*(char),*(char))->(*(char))
(	O
PACKAGE	*(char)
,	O
LOCALEDIR	O
)	O
;	O
textdomain	(*(char))->(*(char))
(	O
PACKAGE	*(char)
)	O
;	O
for	O
(	O
;	O
;	O
)	O
{	O
int	O
optc	int
=	O
getopt_long	(int,*(*(char)),*(char),*(struct(*(char),int,*(int),int)),*(int))->(int)
(	O
argc	int
,	O
argv	*(*(char))
,	O
"f:S:"	*(char)
,	O
long_options	array(struct(*(char),int,*(int),int))
,	O
(	O
int	O
*	O
)	O
0	int
)	O
;	O
if	O
(	O
optc	int
<	O
0	int
)	O
break	O
;	O
switch	O
(	O
optc	int
)	O
{	O
case	O
0	int
:	O
break	O
;	O
case	O
'f'	O
:	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
.	O
idh_file_name	*(char)
=	O
optarg	*(char)
;	O
break	O
;	O
case	O
'S'	O
:	O
separator_style	enum(int,int,int,int,int)
=	O
parse_separator_style	(*(char))->(enum(int,int,int,int,int))
(	O
optarg	*(char)
)	O
;	O
break	O
;	O
default	O
:	O
usage	()->(void)
(	O
)	O
;	O
}	O
}	O
if	O
(	O
show_version	int
)	O
{	O
printf	(*(char))->(int)
(	O
"%s - %s\n"	*(char)
,	O
program_name	*(char)
,	O
PACKAGE_VERSION	*(char)
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
if	O
(	O
show_help	int
)	O
help_me	()->(void)
(	O
)	O
;	O
if	O
(	O
separator_style	enum(int,int,int,int,int)
==	O
ss_contextual	int
)	O
{	O
if	O
(	O
isatty	(int)->(int)
(	O
STDOUT_FILENO	int
)	O
)	O
separator_style	enum(int,int,int,int,int)
=	O
DEFAULT_SEPARATOR_STYLE	O
;	O
else	O
separator_style	enum(int,int,int,int,int)
=	O
ss_newline	int
;	O
}	O
argc	int
-=	O
optind	int
;	O
argv	*(*(char))
+=	O
optind	int
;	O
if	O
(	O
argc	int
==	O
0	int
)	O
{	O
static	O
char	O
star	array(char)
[	O
]	O
=	O
"*"	*(char)
;	O
static	O
char	O
*	O
starp	*(char)
=	O
star	array(char)
;	O
argc	int
=	O
1	int
;	O
argv	*(*(char))
=	O
&	O
starp	*(char)
;	O
}	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
.	O
idh_file_name	*(char)
=	O
locate_id_file_name	(*(char))->(*(char))
(	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
.	O
idh_file_name	*(char)
)	O
;	O
if	O
(	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
.	O
idh_file_name	*(char)
==	O
0	int
)	O
error	(int,int,*(char))->(void)
(	O
1	int
,	O
errno	O
,	O
_	O
(	O
"can't locate `ID'"	*(char)
)	O
)	O
;	O
init_idh_obstacks	(*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
&	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
)	O
;	O
init_idh_tables	(*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
&	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
)	O
;	O
cw_dlink	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
=	O
get_current_dir_link	()->(*(struct(union(*(struct`),long),char,array(char))))
(	O
)	O
;	O
{	O
struct	O
file_link	struct(union(*(struct(union(*(struct`),long),char,array(char))),long),char,array(char))
*	O
*	O
members	*(*(struct(union(*(struct`),long),char,array(char))))
=	O
read_id_file	(*(char),*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(*(*(struct(union(*`,long),char,array(char)))))
(	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
.	O
idh_file_name	*(char)
,	O
&	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
)	O
;	O
struct	O
file_link	struct(union(*(struct(union(*(struct`),long),char,array(char))),long),char,array(char))
*	O
*	O
members_N	*(*(struct(union(*(struct`),long),char,array(char))))
=	O
&	O
members	*(*(struct(union(*(struct`),long),char,array(char))))
[	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
.	O
idh_files	long
]	O
;	O
struct	O
file_link	struct(union(*(struct(union(*(struct`),long),char,array(char))),long),char,array(char))
*	O
*	O
flinkv_0	*(*(struct(union(*(struct`),long),char,array(char))))
=	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
file_link	struct(union(*(struct(union(*(struct`),long),char,array(char))),long),char,array(char))
*	O
)	O
*	O
(	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
.	O
idh_files	long
+	O
1	int
)	O
)	O
;	O
struct	O
file_link	struct(union(*(struct(union(*(struct`),long),char,array(char))),long),char,array(char))
*	O
*	O
flinkv	*(*(struct(union(*(struct`),long),char,array(char))))
=	O
flinkv_0	*(*(struct(union(*(struct`),long),char,array(char))))
;	O
char	O
*	O
*	O
patv_0	*(*(char))
=	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
(	O
char	O
*	O
)	O
*	O
(	O
argc	int
*	O
2	int
)	O
)	O
;	O
char	O
*	O
*	O
patv_N	*(*(char))
;	O
char	O
*	O
*	O
patv	*(*(char))
=	O
patv_0	*(*(char))
;	O
char	O
*	O
file_name	*(char)
=	O
alloca	O
(	O
PATH_MAX	int
)	O
;	O
for	O
(	O
;	O
argc	int
;	O
argc	int
--	O
,	O
argv	*(*(char))
++	O
)	O
{	O
char	O
*	O
arg	*(char)
=	O
*	O
argv	*(*(char))
;	O
*	O
patv	*(*(char))
++	O
=	O
arg	*(char)
;	O
if	O
(	O
*	O
arg	*(char)
!=	O
'*'	O
&&	O
*	O
arg	*(char)
!=	O
'/'	O
)	O
{	O
char	O
*	O
pat	*(char)
=	O
xmalloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
arg	*(char)
)	O
+	O
2	int
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
pat	*(char)
,	O
"*/%s"	*(char)
,	O
arg	*(char)
)	O
;	O
*	O
patv	*(*(char))
++	O
=	O
pat	*(char)
;	O
}	O
}	O
patv_N	*(*(char))
=	O
patv	*(*(char))
;	O
for	O
(	O
;	O
members	*(*(struct(union(*(struct`),long),char,array(char))))
<	O
members_N	*(*(struct(union(*(struct`),long),char,array(char))))
;	O
members	*(*(struct(union(*(struct`),long),char,array(char))))
++	O
)	O
{	O
maybe_relative_file_name	(*(char),*(struct(union(*(struct`),long),char,array(char))),*(struct(union(*(struct`),long),char,array(char))))->(*(char))
(	O
file_name	*(char)
,	O
*	O
members	*(*(struct(union(*(struct`),long),char,array(char))))
,	O
cw_dlink	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
)	O
;	O
for	O
(	O
patv	*(*(char))
=	O
patv_0	*(*(char))
;	O
patv	*(*(char))
<	O
patv_N	*(*(char))
;	O
patv	*(*(char))
++	O
)	O
{	O
if	O
(	O
fnmatch	(*(char),*(char),int)->(int)
(	O
*	O
patv	*(*(char))
,	O
file_name	*(char)
,	O
MAYBE_FNM_CASEFOLD	int
)	O
==	O
0	int
)	O
{	O
*	O
flinkv	*(*(struct(union(*(struct`),long),char,array(char))))
++	O
=	O
*	O
members	*(*(struct(union(*(struct`),long),char,array(char))))
;	O
break	O
;	O
}	O
}	O
}	O
*	O
flinkv	*(*(struct(union(*(struct`),long),char,array(char))))
=	O
0	int
;	O
print_filenames	(*(*(struct(union(*`,long),char,array(char)))),enum(int,int,int,int,int))->(void)
(	O
flinkv_0	*(*(struct(union(*(struct`),long),char,array(char))))
,	O
separator_style	enum(int,int,int,int,int)
)	O
;	O
}	O
return	O
0	int
;	O
}	O
