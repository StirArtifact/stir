static	O
gboolean	int
is_logging_enabled	()->(int)
(	O
void	O
)	O
{	O
static	O
gboolean	int
logging_initialized	int
=	O
FALSE	O
;	O
static	O
gboolean	int
logging_enabled	int
=	O
FALSE	O
;	O
char	O
*	O
mc_ini	*(char)
;	O
if	O
(	O
!	O
logging_initialized	int
)	O
{	O
mc_ini	*(char)
=	O
g_strdup_printf	(*(char))->(*(char))
(	O
"%s/%s"	*(char)
,	O
home_dir	*(char)
,	O
PROFILE_NAME	*(char)
)	O
;	O
logging_enabled	int
=	O
get_int	(*(char),*(char),int)->(int)
(	O
mc_ini	*(char)
,	O
"development.enable_logging"	*(char)
,	O
FALSE	O
)	O
;	O
g_free	(*(void))->(void)
(	O
mc_ini	*(char)
)	O
;	O
logging_initialized	int
=	O
TRUE	O
;	O
}	O
return	O
logging_enabled	int
;	O
}	O
void	O
mc_log	(*(char))->(void)
(	O
const	O
char	O
*	O
fmt	*(char)
,	O
...	O
)	O
{	O
va_list	array(struct(int,int,*(void),*(void)))
args	array(struct(int,int,*(void),*(void)))
;	O
FILE	struct
*	O
f	struct(int,int,int,int)
;	O
char	O
*	O
logfilename	*(char)
;	O
if	O
(	O
is_logging_enabled	()->(int)
(	O
)	O
)	O
{	O
va_start	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
fmt	*(char)
)	O
;	O
logfilename	*(char)
=	O
g_strdup_printf	(*(char))->(*(char))
(	O
"%s/.mc/log"	*(char)
,	O
home_dir	*(char)
)	O
;	O
if	O
(	O
(	O
f	struct(int,int,int,int)
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
logfilename	*(char)
,	O
"a"	*(char)
)	O
)	O
!=	O
NULL	O
)	O
{	O
(	O
void	O
)	O
vfprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),array(struct(int,int,*(void),*(void))))->(int)
(	O
f	struct(int,int,int,int)
,	O
fmt	*(char)
,	O
args	array(struct(int,int,*(void),*(void)))
)	O
;	O
(	O
void	O
)	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
f	struct(int,int,int,int)
)	O
;	O
}	O
g_free	(*(void))->(void)
(	O
logfilename	*(char)
)	O
;	O
}	O
}	O
