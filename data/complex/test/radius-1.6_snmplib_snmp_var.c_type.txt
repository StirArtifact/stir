void	O
snmp_var_free	(*(struct(*(struct(*`,*`,int,char,union`)),*(int),int,char,union(int,*(char),*(int)))))->(void)
(	O
struct	O
snmp_var	struct(*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int)))),*(int),int,char,union(int,*(char),*(int)))
*	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
)	O
{	O
if	O
(	O
!	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
)	O
return	O
;	O
switch	O
(	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
type	*(char)
)	O
{	O
case	O
ASN_BOOLEAN	O
:	O
case	O
ASN_INTEGER	O
:	O
case	O
ASN_NULL	O
:	O
case	O
SMI_COUNTER32	O
:	O
case	O
SMI_GAUGE32	O
:	O
case	O
SMI_TIMETICKS	O
:	O
break	O
;	O
case	O
ASN_OCTET_STR	O
:	O
case	O
SMI_IPADDRESS	O
:	O
case	O
SMI_OPAQUE	O
:	O
case	O
ASN_BIT_STR	O
:	O
snmp_free	(*(void))->(void)
(	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
var_str	O
)	O
;	O
break	O
;	O
case	O
ASN_OBJECT_ID	O
:	O
snmp_free	(*(void))->(void)
(	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
var_oid	O
)	O
;	O
break	O
;	O
default	O
:	O
abort	()->(void)
(	O
)	O
;	O
}	O
snmp_free	(*(void))->(void)
(	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
name	*(int)
)	O
;	O
snmp_free	(*(void))->(void)
(	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
)	O
;	O
}	O
void	O
snmp_var_free_list	(*(struct(*(struct(*`,*`,int,char,union`)),*(int),int,char,union(int,*(char),*(int)))))->(void)
(	O
struct	O
snmp_var	struct(*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int)))),*(int),int,char,union(int,*(char),*(int)))
*	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
)	O
{	O
struct	O
snmp_var	struct(*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int)))),*(int),int,char,union(int,*(char),*(int)))
*	O
next	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
;	O
while	O
(	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
)	O
{	O
next	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
next	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
;	O
snmp_var_free	(*(struct(*(struct(*`,*`,int,char,union`)),*(int),int,char,union(int,*(char),*(int)))))->(void)
(	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
)	O
;	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
next	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
;	O
}	O
}	O
struct	O
snmp_var	struct(*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int)))),*(int),int,char,union(int,*(char),*(int)))
*	O
snmp_var_create	(*(int))->(*(struct(*(struct(*`,*`,int,char,union`)),*(int),int,char,union(int,*(char),*(int)))))
(	O
oid_t	*(int)
oid	*(int)
)	O
{	O
struct	O
snmp_var	struct(*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int)))),*(int),int,char,union(int,*(char),*(int)))
*	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
;	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
snmp_alloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
)	O
)	O
;	O
if	O
(	O
!	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
)	O
{	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_NOMEM	int
)	O
;	O
return	O
NULL	O
;	O
}	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
name	*(int)
=	O
oid_dup	(*(int))->(*(int))
(	O
oid	*(int)
)	O
;	O
if	O
(	O
!	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
name	*(int)
)	O
{	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_NOMEM	int
)	O
;	O
snmp_free	(*(void))->(void)
(	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
)	O
;	O
return	O
NULL	O
;	O
}	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
type	*(char)
=	O
ASN_NULL	O
;	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
next	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
NULL	O
;	O
return	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
;	O
}	O
struct	O
snmp_var	struct(*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int)))),*(int),int,char,union(int,*(char),*(int)))
*	O
snmp_var_dup	(*(struct(*(struct(*`,*`,int,char,union`)),*(int),int,char,union(int,*(char),*(int)))))->(*(struct(*(struct(*`,*`,int,char,union`)),*(int),int,char,union(int,*(char),*(int)))))
(	O
struct	O
snmp_var	struct(*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int)))),*(int),int,char,union(int,*(char),*(int)))
*	O
src	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
)	O
{	O
struct	O
snmp_var	struct(*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int)))),*(int),int,char,union(int,*(char),*(int)))
*	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
;	O
if	O
(	O
(	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
snmp_var_create	(*(int))->(*(struct(*(struct(*`,*`,int,char,union`)),*(int),int,char,union(int,*(char),*(int)))))
(	O
src	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
name	*(int)
)	O
)	O
==	O
NULL	O
)	O
return	O
NULL	O
;	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
type	*(char)
=	O
src	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
type	*(char)
;	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
val_length	int
=	O
src	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
val_length	int
;	O
switch	O
(	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
type	*(char)
)	O
{	O
case	O
ASN_BOOLEAN	O
:	O
case	O
ASN_INTEGER	O
:	O
case	O
ASN_NULL	O
:	O
case	O
SMI_COUNTER32	O
:	O
case	O
SMI_GAUGE32	O
:	O
case	O
SMI_TIMETICKS	O
:	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
var_int	O
=	O
src	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
var_int	O
;	O
break	O
;	O
case	O
ASN_OCTET_STR	O
:	O
case	O
SMI_IPADDRESS	O
:	O
case	O
SMI_OPAQUE	O
:	O
case	O
ASN_BIT_STR	O
:	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
var_str	O
=	O
snmp_alloc	(long)->(*(void))
(	O
src	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
val_length	int
)	O
;	O
if	O
(	O
!	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
var_str	O
)	O
{	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_NOMEM	int
)	O
;	O
snmp_free	(*(void))->(void)
(	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
)	O
;	O
return	O
NULL	O
;	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
var_str	O
,	O
src	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
var_str	O
,	O
src	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
val_length	int
)	O
;	O
break	O
;	O
case	O
ASN_OBJECT_ID	O
:	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
var_oid	O
=	O
oid_dup	(*(int))->(*(int))
(	O
src	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
var_oid	O
)	O
;	O
if	O
(	O
!	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
var_oid	O
)	O
{	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_NOMEM	int
)	O
;	O
snmp_free	(*(void))->(void)
(	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
)	O
;	O
return	O
NULL	O
;	O
}	O
break	O
;	O
default	O
:	O
abort	()->(void)
(	O
)	O
;	O
}	O
return	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
;	O
}	O
struct	O
snmp_var	struct(*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int)))),*(int),int,char,union(int,*(char),*(int)))
*	O
snmp_var_dup_list	(*(struct(*(struct(*`,*`,int,char,union`)),*(int),int,char,union(int,*(char),*(int)))))->(*(struct(*(struct(*`,*`,int,char,union`)),*(int),int,char,union(int,*(char),*(int)))))
(	O
struct	O
snmp_var	struct(*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int)))),*(int),int,char,union(int,*(char),*(int)))
*	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
)	O
{	O
struct	O
snmp_var	struct(*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int)))),*(int),int,char,union(int,*(char),*(int)))
*	O
var_head	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
,	O
*	O
var_tail	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
,	O
*	O
vp	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
;	O
var_head	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
var_tail	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
NULL	O
;	O
for	O
(	O
;	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
;	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
next	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
)	O
{	O
if	O
(	O
(	O
vp	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
snmp_var_dup	(*(struct(*(struct(*`,*`,int,char,union`)),*(int),int,char,union(int,*(char),*(int)))))->(*(struct(*(struct(*`,*`,int,char,union`)),*(int),int,char,union(int,*(char),*(int)))))
(	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
)	O
)	O
==	O
NULL	O
)	O
{	O
snmp_var_free_list	(*(struct(*(struct(*`,*`,int,char,union`)),*(int),int,char,union(int,*(char),*(int)))))->(void)
(	O
var_head	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
)	O
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
var_tail	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
)	O
var_tail	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
next	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
vp	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
;	O
else	O
var_head	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
vp	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
;	O
var_tail	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
vp	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
;	O
}	O
return	O
var_head	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
;	O
}	O
u_char	char
*	O
snmp_var_decode	(*(char),*(int),*(*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))),int)->(*(char))
(	O
u_char	char
*	O
data	*(char)
,	O
int	O
*	O
length	*(int)
,	O
struct	O
snmp_var	struct(*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int)))),*(int),int,char,union(int,*(char),*(int)))
*	O
*	O
var_head	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
,	O
int	O
version	int
)	O
{	O
u_char	char
*	O
buf	*(char)
,	O
*	O
tmp	*(char)
;	O
u_char	char
*	O
data_ptr	*(char)
;	O
u_char	char
type	*(char)
;	O
int	O
list_length	int
=	O
*	O
length	*(int)
;	O
int	O
var_length	int
,	O
data_len	int
;	O
subid_t	int
oid	*(int)
[	O
MAX_OID_LEN	int
+	O
1	int
]	O
;	O
struct	O
snmp_var	struct(*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int)))),*(int),int,char,union(int,*(char),*(int)))
*	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
NULL	O
,	O
*	O
var_tail	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
;	O
buf	*(char)
=	O
asn_decode_header	(*(char),*(int),*(char))->(*(char))
(	O
data	*(char)
,	O
&	O
list_length	int
,	O
&	O
type	*(char)
)	O
;	O
if	O
(	O
!	O
buf	*(char)
)	O
return	O
NULL	O
;	O
if	O
(	O
type	*(char)
!=	O
(	O
u_char	char
)	O
(	O
ASN_SEQUENCE	O
|	O
ASN_CONSTRUCTOR	O
)	O
)	O
{	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_DECODE	int
)	O
;	O
return	O
NULL	O
;	O
}	O
*	O
var_head	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
var_tail	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
NULL	O
;	O
while	O
(	O
list_length	int
>	O
0	int
)	O
{	O
var_length	int
=	O
list_length	int
;	O
tmp	*(char)
=	O
asn_decode_header	(*(char),*(int),*(char))->(*(char))
(	O
buf	*(char)
,	O
&	O
var_length	int
,	O
&	O
type	*(char)
)	O
;	O
if	O
(	O
!	O
tmp	*(char)
)	O
goto	O
err	O
;	O
list_length	int
-=	O
var_length	int
+	O
(	O
tmp	*(char)
-	O
buf	*(char)
)	O
;	O
buf	*(char)
=	O
tmp	*(char)
;	O
if	O
(	O
type	*(char)
!=	O
(	O
ASN_SEQUENCE	O
|	O
ASN_CONSTRUCTOR	O
)	O
)	O
{	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_DECODE	int
)	O
;	O
goto	O
err	O
;	O
}	O
OIDLEN	O
(	O
oid	*(int)
)	O
=	O
MAX_OID_LEN	int
;	O
buf	*(char)
=	O
asn_decode_oid	(*(char),*(int),*(char),*(int),*(int))->(*(char))
(	O
buf	*(char)
,	O
&	O
var_length	int
,	O
&	O
type	*(char)
,	O
OIDPTR	O
(	O
oid	*(int)
)	O
,	O
&	O
OIDLEN	O
(	O
oid	*(int)
)	O
)	O
;	O
if	O
(	O
!	O
buf	*(char)
)	O
goto	O
err	O
;	O
if	O
(	O
type	*(char)
!=	O
(	O
ASN_UNIVERSAL	O
|	O
ASN_PRIMITIVE	O
|	O
ASN_OBJECT_ID	O
)	O
)	O
{	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_DECODE	int
)	O
;	O
goto	O
err	O
;	O
}	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
snmp_var_create	(*(int))->(*(struct(*(struct(*`,*`,int,char,union`)),*(int),int,char,union(int,*(char),*(int)))))
(	O
oid	*(int)
)	O
;	O
data_ptr	*(char)
=	O
buf	*(char)
;	O
data_len	int
=	O
var_length	int
;	O
buf	*(char)
=	O
asn_decode_header	(*(char),*(int),*(char))->(*(char))
(	O
buf	*(char)
,	O
&	O
data_len	int
,	O
&	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
type	*(char)
)	O
;	O
if	O
(	O
!	O
buf	*(char)
)	O
goto	O
err	O
;	O
switch	O
(	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
type	*(char)
)	O
{	O
case	O
ASN_INTEGER	O
:	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
val_length	int
=	O
sizeof	O
(	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
var_int	O
)	O
;	O
buf	*(char)
=	O
asn_decode_int	(*(char),*(int),*(char),*(int),int)->(*(char))
(	O
data_ptr	*(char)
,	O
&	O
var_length	int
,	O
&	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
type	*(char)
,	O
&	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
var_int	O
,	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
val_length	int
)	O
;	O
break	O
;	O
case	O
SMI_COUNTER32	O
:	O
case	O
SMI_GAUGE32	O
:	O
case	O
SMI_TIMETICKS	O
:	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
val_length	int
=	O
sizeof	O
(	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
var_int	O
)	O
;	O
buf	*(char)
=	O
asn_decode_uint	O
(	O
data_ptr	*(char)
,	O
&	O
var_length	int
,	O
&	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
type	*(char)
,	O
&	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
var_int	O
,	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
val_length	int
)	O
;	O
break	O
;	O
case	O
ASN_OCTET_STR	O
:	O
case	O
SMI_IPADDRESS	O
:	O
case	O
SMI_OPAQUE	O
:	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
val_length	int
=	O
var_length	int
;	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
var_str	O
=	O
snmp_alloc	(long)->(*(void))
(	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
val_length	int
)	O
;	O
if	O
(	O
!	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
var_str	O
)	O
{	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_NOMEM	int
)	O
;	O
goto	O
err	O
;	O
}	O
buf	*(char)
=	O
asn_decode_string	(*(char),*(int),*(char),*(char),*(int))->(*(char))
(	O
data_ptr	*(char)
,	O
&	O
var_length	int
,	O
&	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
type	*(char)
,	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
var_str	O
,	O
&	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
val_length	int
)	O
;	O
break	O
;	O
case	O
ASN_OBJECT_ID	O
:	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
val_length	int
=	O
MAX_OID_LEN	int
;	O
buf	*(char)
=	O
asn_decode_oid	(*(char),*(int),*(char),*(int),*(int))->(*(char))
(	O
data_ptr	*(char)
,	O
&	O
var_length	int
,	O
&	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
type	*(char)
,	O
OIDPTR	O
(	O
oid	*(int)
)	O
,	O
&	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
val_length	int
)	O
;	O
if	O
(	O
buf	*(char)
)	O
{	O
OIDLEN	O
(	O
oid	*(int)
)	O
=	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
val_length	int
;	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
var_oid	O
=	O
oid_dup	(*(int))->(*(int))
(	O
oid	*(int)
)	O
;	O
}	O
break	O
;	O
case	O
ASN_NULL	O
:	O
break	O
;	O
default	O
:	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_BAD_VARTYPE	int
)	O
;	O
break	O
;	O
}	O
if	O
(	O
!	O
buf	*(char)
)	O
goto	O
err	O
;	O
if	O
(	O
!	O
var_tail	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
)	O
*	O
var_head	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
;	O
else	O
var_tail	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
next	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
;	O
var_tail	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
;	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
NULL	O
;	O
}	O
return	O
buf	*(char)
;	O
err	O
:	O
snmp_var_free	(*(struct(*(struct(*`,*`,int,char,union`)),*(int),int,char,union(int,*(char),*(int)))))->(void)
(	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
)	O
;	O
snmp_var_free_list	(*(struct(*(struct(*`,*`,int,char,union`)),*(int),int,char,union(int,*(char),*(int)))))->(void)
(	O
*	O
var_head	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
)	O
;	O
return	O
NULL	O
;	O
}	O
u_char	char
*	O
snmp_var_encode	(*(char),*(int),*(struct(*(struct(*`,*`,int,char,union`)),*(int),int,char,union(int,*(char),*(int)))),int)->(*(char))
(	O
u_char	char
*	O
data	*(char)
,	O
int	O
*	O
length	*(int)
,	O
struct	O
snmp_var	struct(*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int)))),*(int),int,char,union(int,*(char),*(int)))
*	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
,	O
int	O
version	int
)	O
{	O
u_char	char
*	O
buf	*(char)
=	O
data	*(char)
;	O
u_char	char
*	O
header_ptr	*(char)
,	O
*	O
header_end	*(char)
;	O
for	O
(	O
;	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
;	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
next	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
)	O
{	O
header_ptr	*(char)
=	O
buf	*(char)
;	O
buf	*(char)
=	O
asn_encode_header	(*(char),*(int),char,int)->(*(char))
(	O
buf	*(char)
,	O
length	*(int)
,	O
(	O
ASN_SEQUENCE	O
|	O
ASN_CONSTRUCTOR	O
)	O
,	O
0xffff	int
)	O
;	O
if	O
(	O
!	O
buf	*(char)
)	O
return	O
NULL	O
;	O
header_end	*(char)
=	O
buf	*(char)
;	O
buf	*(char)
=	O
asn_encode_oid	(*(char),*(int),char,*(int),int)->(*(char))
(	O
buf	*(char)
,	O
length	*(int)
,	O
(	O
ASN_UNIVERSAL	O
|	O
ASN_PRIMITIVE	O
|	O
ASN_OBJECT_ID	O
)	O
,	O
OIDPTR	O
(	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
name	*(int)
)	O
,	O
OIDLEN	O
(	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
name	*(int)
)	O
)	O
;	O
if	O
(	O
!	O
buf	*(char)
)	O
return	O
NULL	O
;	O
switch	O
(	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
type	*(char)
)	O
{	O
case	O
ASN_INTEGER	O
:	O
buf	*(char)
=	O
asn_encode_int	(*(char),*(int),char,int)->(*(char))
(	O
buf	*(char)
,	O
length	*(int)
,	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
type	*(char)
,	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
var_int	O
)	O
;	O
break	O
;	O
case	O
SMI_COUNTER32	O
:	O
case	O
SMI_GAUGE32	O
:	O
case	O
SMI_TIMETICKS	O
:	O
buf	*(char)
=	O
asn_encode_uint	O
(	O
buf	*(char)
,	O
length	*(int)
,	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
type	*(char)
,	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
var_int	O
)	O
;	O
break	O
;	O
case	O
ASN_OCTET_STR	O
:	O
case	O
SMI_IPADDRESS	O
:	O
case	O
SMI_OPAQUE	O
:	O
buf	*(char)
=	O
asn_encode_string	(*(char),*(int),char,*(char),int)->(*(char))
(	O
buf	*(char)
,	O
length	*(int)
,	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
type	*(char)
,	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
var_str	O
,	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
val_length	int
)	O
;	O
break	O
;	O
case	O
ASN_OBJECT_ID	O
:	O
buf	*(char)
=	O
asn_encode_oid	(*(char),*(int),char,*(int),int)->(*(char))
(	O
buf	*(char)
,	O
length	*(int)
,	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
type	*(char)
,	O
OIDPTR	O
(	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
var_oid	O
)	O
,	O
OIDLEN	O
(	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
var_oid	O
)	O
)	O
;	O
break	O
;	O
case	O
ASN_NULL	O
:	O
buf	*(char)
=	O
asn_encode_null	(*(char),*(int),char)->(*(char))
(	O
buf	*(char)
,	O
length	*(int)
,	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
type	*(char)
)	O
;	O
break	O
;	O
default	O
:	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_NOT_SUPPORTED	int
)	O
;	O
buf	*(char)
=	O
NULL	O
;	O
}	O
if	O
(	O
!	O
buf	*(char)
)	O
return	O
NULL	O
;	O
asn_recode_length	(*(char),int)->(*(char))
(	O
header_ptr	*(char)
+	O
1	int
,	O
buf	*(char)
-	O
header_end	*(char)
)	O
;	O
}	O
return	O
buf	*(char)
;	O
}	O
