void	O
mpf_add_ui	O
(	O
mpf_ptr	*(struct(int,int,long,*(long)))
sum	*(struct(int,int,long,*(long)))
,	O
mpf_srcptr	*(struct(int,int,long,*(long)))
u	array(array(long))
,	O
unsigned	O
long	O
int	O
v	long
)	O
{	O
mp_srcptr	*(long)
up	*(long)
=	O
u	array(array(long))
->	O
_mp_d	*(long)
;	O
mp_ptr	*(long)
sump	*(long)
=	O
sum	*(struct(int,int,long,*(long)))
->	O
_mp_d	*(long)
;	O
mp_size_t	long
usize	*(long)
,	O
sumsize	long
;	O
mp_size_t	long
prec	int
=	O
sum	*(struct(int,int,long,*(long)))
->	O
_mp_prec	int
;	O
mp_exp_t	long
uexp	long
=	O
u	array(array(long))
->	O
_mp_exp	long
;	O
usize	*(long)
=	O
u	array(array(long))
->	O
_mp_size	int
;	O
if	O
(	O
usize	*(long)
<=	O
0	int
)	O
{	O
if	O
(	O
usize	*(long)
==	O
0	int
)	O
{	O
mpf_set_ui	O
(	O
sum	*(struct(int,int,long,*(long)))
,	O
v	long
)	O
;	O
return	O
;	O
}	O
else	O
{	O
__mpf_struct	struct(int,int,long,*(long))
u_negated	struct(int,int,long,*(long))
;	O
u_negated	struct(int,int,long,*(long))
.	O
_mp_size	int
=	O
-	O
usize	*(long)
;	O
u_negated	struct(int,int,long,*(long))
.	O
_mp_exp	long
=	O
u	array(array(long))
->	O
_mp_exp	long
;	O
u_negated	struct(int,int,long,*(long))
.	O
_mp_d	*(long)
=	O
u	array(array(long))
->	O
_mp_d	*(long)
;	O
mpf_sub_ui	O
(	O
sum	*(struct(int,int,long,*(long)))
,	O
&	O
u_negated	struct(int,int,long,*(long))
,	O
v	long
)	O
;	O
sum	*(struct(int,int,long,*(long)))
->	O
_mp_size	int
=	O
-	O
(	O
sum	*(struct(int,int,long,*(long)))
->	O
_mp_size	int
)	O
;	O
return	O
;	O
}	O
}	O
if	O
(	O
v	long
==	O
0	int
)	O
{	O
sum_is_u	O
:	O
if	O
(	O
u	array(array(long))
!=	O
sum	*(struct(int,int,long,*(long)))
)	O
{	O
sumsize	long
=	O
MIN	O
(	O
usize	*(long)
,	O
prec	int
+	O
1	int
)	O
;	O
MPN_COPY	O
(	O
sum	*(struct(int,int,long,*(long)))
->	O
_mp_d	*(long)
,	O
up	*(long)
+	O
usize	*(long)
-	O
sumsize	long
,	O
sumsize	long
)	O
;	O
sum	*(struct(int,int,long,*(long)))
->	O
_mp_size	int
=	O
sumsize	long
;	O
sum	*(struct(int,int,long,*(long)))
->	O
_mp_exp	long
=	O
u	array(array(long))
->	O
_mp_exp	long
;	O
}	O
return	O
;	O
}	O
if	O
(	O
uexp	long
>	O
0	int
)	O
{	O
if	O
(	O
uexp	long
>	O
prec	int
)	O
{	O
goto	O
sum_is_u	O
;	O
}	O
else	O
{	O
if	O
(	O
uexp	long
>	O
usize	*(long)
)	O
{	O
MPN_COPY_DECR	O
(	O
sump	*(long)
+	O
uexp	long
-	O
usize	*(long)
,	O
up	*(long)
,	O
usize	*(long)
)	O
;	O
sump	*(long)
[	O
0	int
]	O
=	O
v	long
;	O
MPN_ZERO	O
(	O
sump	*(long)
+	O
1	int
,	O
uexp	long
-	O
usize	*(long)
-	O
1	int
)	O
;	O
sum	*(struct(int,int,long,*(long)))
->	O
_mp_size	int
=	O
uexp	long
;	O
sum	*(struct(int,int,long,*(long)))
->	O
_mp_exp	long
=	O
uexp	long
;	O
}	O
else	O
{	O
mp_limb_t	long
cy_limb	long
;	O
if	O
(	O
usize	*(long)
>	O
prec	int
)	O
{	O
up	*(long)
+=	O
usize	*(long)
-	O
prec	int
;	O
usize	*(long)
-=	O
usize	*(long)
-	O
prec	int
;	O
}	O
if	O
(	O
sump	*(long)
!=	O
up	*(long)
)	O
MPN_COPY_INCR	O
(	O
sump	*(long)
,	O
up	*(long)
,	O
usize	*(long)
-	O
uexp	long
)	O
;	O
cy_limb	long
=	O
mpn_add_1	O
(	O
sump	*(long)
+	O
usize	*(long)
-	O
uexp	long
,	O
up	*(long)
+	O
usize	*(long)
-	O
uexp	long
,	O
uexp	long
,	O
(	O
mp_limb_t	long
)	O
v	long
)	O
;	O
sump	*(long)
[	O
usize	*(long)
]	O
=	O
cy_limb	long
;	O
sum	*(struct(int,int,long,*(long)))
->	O
_mp_size	int
=	O
usize	*(long)
+	O
cy_limb	long
;	O
sum	*(struct(int,int,long,*(long)))
->	O
_mp_exp	long
=	O
uexp	long
+	O
cy_limb	long
;	O
}	O
}	O
}	O
else	O
{	O
if	O
(	O
(	O
-	O
uexp	long
)	O
>=	O
prec	int
)	O
{	O
sump	*(long)
[	O
0	int
]	O
=	O
v	long
;	O
sum	*(struct(int,int,long,*(long)))
->	O
_mp_size	int
=	O
1	int
;	O
sum	*(struct(int,int,long,*(long)))
->	O
_mp_exp	long
=	O
1	int
;	O
}	O
else	O
{	O
if	O
(	O
usize	*(long)
+	O
(	O
-	O
uexp	long
)	O
+	O
1	int
>	O
prec	int
)	O
{	O
up	*(long)
+=	O
usize	*(long)
+	O
(	O
-	O
uexp	long
)	O
+	O
1	int
-	O
prec	int
;	O
usize	*(long)
-=	O
usize	*(long)
+	O
(	O
-	O
uexp	long
)	O
+	O
1	int
-	O
prec	int
;	O
}	O
if	O
(	O
sump	*(long)
!=	O
up	*(long)
)	O
MPN_COPY_INCR	O
(	O
sump	*(long)
,	O
up	*(long)
,	O
usize	*(long)
)	O
;	O
MPN_ZERO	O
(	O
sump	*(long)
+	O
usize	*(long)
,	O
-	O
uexp	long
)	O
;	O
sump	*(long)
[	O
usize	*(long)
+	O
(	O
-	O
uexp	long
)	O
]	O
=	O
v	long
;	O
sum	*(struct(int,int,long,*(long)))
->	O
_mp_size	int
=	O
usize	*(long)
+	O
(	O
-	O
uexp	long
)	O
+	O
1	int
;	O
sum	*(struct(int,int,long,*(long)))
->	O
_mp_exp	long
=	O
1	int
;	O
}	O
}	O
}	O
