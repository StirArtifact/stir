static	O
void	O
printer	(*(void),*(char),long)->(void)
(	O
void	O
*	O
d	*(void)
,	O
char	O
const	O
*	O
buf	*(char)
,	O
size_t	long
size	*(long)
)	O
{	O
FILE	struct
*	O
fp	*(struct(*((*(char),*(void))->(int)),*(void)))
=	O
d	*(void)
;	O
fwrite	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
buf	*(char)
,	O
size	*(long)
,	O
1	int
,	O
fp	*(struct(*((*(char),*(void))->(int)),*(void)))
)	O
;	O
}	O
struct	O
json_format	struct(long,int,*((*(void),*(char),long)->(void)),*(void))
fmt	*(char)
=	O
{	O
0	int
,	O
-	O
1	int
,	O
printer	(*(void),*(char),long)->(void)
,	O
NULL	O
}	O
;	O
static	O
void	O
usage	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),int)->(void)
(	O
const	O
char	O
*	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
FILE	struct
*	O
fp	*(struct(*((*(char),*(void))->(int)),*(void)))
,	O
int	O
code	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(*((*(char),*(void))->(int)),*(void)))
,	O
"usage: %s [-file=FILE][-indent=N][-precision=N] [expr]\n"	*(char)
,	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
)	O
;	O
exit	(int)->(void)
(	O
code	int
)	O
;	O
}	O
int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
char	O
*	O
progname	*(char)
=	O
argv	*(*(char))
[	O
0	int
]	O
;	O
char	O
*	O
file	*(char)
=	O
NULL	O
;	O
char	O
*	O
input	*(struct(int,struct(struct(*(char),int,int),struct(*(char),int,int)),union(*(struct(*`,*`,long,*`,*`)),*(char),struct(long,*(*`)))))
;	O
size_t	long
size	*(long)
;	O
struct	O
json_value	struct(enum(int,int,int,int,int,int),union(int,double,*(char),*(struct(long,*(*(struct`)),*(struct(*`,*`,long,*`,*`)))),*(struct)))
*	O
obj	*(struct(enum(int,int,int,int,int,int),union(int,double,*(char),*(struct(long,*`,*`)),*(struct))))
;	O
char	O
*	O
key	*(void)
=	O
NULL	O
;	O
while	O
(	O
--	O
argc	int
)	O
{	O
char	O
*	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
=	O
*	O
++	O
argv	*(*(char))
;	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
"-file="	*(char)
,	O
6	int
)	O
==	O
0	int
)	O
file	*(char)
=	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
+	O
6	int
;	O
else	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
"-indent="	*(char)
,	O
8	int
)	O
==	O
0	int
)	O
fmt	*(char)
.	O
indent	long
=	O
atoi	(*(char))->(int)
(	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
+	O
8	int
)	O
;	O
else	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
"-search="	*(char)
,	O
8	int
)	O
==	O
0	int
)	O
key	*(void)
=	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
+	O
8	int
;	O
else	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
"-precision="	*(char)
,	O
11	int
)	O
==	O
0	int
)	O
fmt	*(char)
.	O
precision	int
=	O
atoi	(*(char))->(int)
(	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
+	O
11	int
)	O
;	O
else	O
if	O
(	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
[	O
0	int
]	O
==	O
'-'	O
)	O
usage	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),int)->(void)
(	O
progname	*(char)
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
1	int
)	O
;	O
else	O
break	O
;	O
}	O
if	O
(	O
file	*(char)
)	O
{	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
st	*(struct)
;	O
int	O
fd	int
;	O
ssize_t	long
n	long
;	O
if	O
(	O
argc	int
!=	O
0	int
)	O
usage	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),int)->(void)
(	O
progname	*(char)
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
1	int
)	O
;	O
fd	int
=	O
open	(*(char),int)->(int)
(	O
file	*(char)
,	O
O_RDONLY	int
)	O
;	O
if	O
(	O
fd	int
==	O
-	O
1	int
)	O
{	O
perror	(*(char))->(void)
(	O
file	*(char)
)	O
;	O
return	O
2	int
;	O
}	O
if	O
(	O
fstat	(int,*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
fd	int
,	O
&	O
st	*(struct)
)	O
)	O
{	O
perror	(*(char))->(void)
(	O
"fstat"	*(char)
)	O
;	O
return	O
2	int
;	O
}	O
size	*(long)
=	O
(	O
size_t	long
)	O
st	*(struct)
.	O
st_size	long
;	O
if	O
(	O
size	*(long)
!=	O
st	*(struct)
.	O
st_size	long
)	O
abort	()->(void)
(	O
)	O
;	O
input	*(struct(int,struct(struct(*(char),int,int),struct(*(char),int,int)),union(*(struct(*`,*`,long,*`,*`)),*(char),struct(long,*(*`)))))
=	O
grecs_malloc	(long)->(*(void))
(	O
size	*(long)
+	O
1	int
)	O
;	O
n	long
=	O
read	(int,*(void),long)->(long)
(	O
fd	int
,	O
input	*(struct(int,struct(struct(*(char),int,int),struct(*(char),int,int)),union(*(struct(*`,*`,long,*`,*`)),*(char),struct(long,*(*`)))))
,	O
size	*(long)
)	O
;	O
if	O
(	O
n	long
==	O
-	O
1	int
)	O
{	O
perror	(*(char))->(void)
(	O
"read"	*(char)
)	O
;	O
return	O
2	int
;	O
}	O
if	O
(	O
n	long
!=	O
size	*(long)
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: short read from %s\n"	*(char)
,	O
progname	*(char)
,	O
file	*(char)
)	O
;	O
return	O
2	int
;	O
}	O
input	*(struct(int,struct(struct(*(char),int,int),struct(*(char),int,int)),union(*(struct(*`,*`,long,*`,*`)),*(char),struct(long,*(*`)))))
[	O
n	long
]	O
=	O
0	int
;	O
close	(int)->(int)
(	O
fd	int
)	O
;	O
}	O
else	O
if	O
(	O
argc	int
==	O
1	int
)	O
{	O
if	O
(	O
file	*(char)
)	O
usage	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),int)->(void)
(	O
progname	*(char)
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
1	int
)	O
;	O
input	*(struct(int,struct(struct(*(char),int,int),struct(*(char),int,int)),union(*(struct(*`,*`,long,*`,*`)),*(char),struct(long,*(*`)))))
=	O
*	O
argv	*(*(char))
;	O
size	*(long)
=	O
strlen	(*(char))->(long)
(	O
input	*(struct(int,struct(struct(*(char),int,int),struct(*(char),int,int)),union(*(struct(*`,*`,long,*`,*`)),*(char),struct(long,*(*`)))))
)	O
;	O
}	O
else	O
usage	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),int)->(void)
(	O
progname	*(char)
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
1	int
)	O
;	O
obj	*(struct(enum(int,int,int,int,int,int),union(int,double,*(char),*(struct(long,*`,*`)),*(struct))))
=	O
json_parse_string	(*(char),long)->(*(struct(enum(int,int,int,int,int,int),union(int,double,*(char),*(struct`),*(struct`)))))
(	O
input	*(struct(int,struct(struct(*(char),int,int),struct(*(char),int,int)),union(*(struct(*`,*`,long,*`,*`)),*(char),struct(long,*(*`)))))
,	O
size	*(long)
)	O
;	O
if	O
(	O
!	O
obj	*(struct(enum(int,int,int,int,int,int),union(int,double,*(char),*(struct(long,*`,*`)),*(struct))))
)	O
{	O
json_err_locus	struct(struct(*(char),int,int),struct(*(char),int,int))
.	O
beg	struct(*(char),int,int)
.	O
file	*(char)
=	O
json_err_locus	struct(struct(*(char),int,int),struct(*(char),int,int))
.	O
end	struct(*(char),int,int)
.	O
file	*(char)
=	O
file	*(char)
?	O
file	*(char)
:	O
"input"	*(char)
;	O
grecs_error	(*(struct(struct(*(char),int,int),struct(*(char),int,int))),int,*(char))->(void)
(	O
&	O
json_err_locus	struct(struct(*(char),int,int),struct(*(char),int,int))
,	O
0	int
,	O
"%s"	*(char)
,	O
json_err_diag	*(char)
)	O
;	O
return	O
3	int
;	O
}	O
if	O
(	O
key	*(void)
)	O
{	O
struct	O
json_value	struct(enum(int,int,int,int,int,int),union(int,double,*(char),*(struct(long,*(*(struct`)),*(struct(*`,*`,long,*`,*`)))),*(struct)))
*	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
=	O
json_value_lookup	(*(struct(enum(int,int,int,int,int,int),union(int,double,*(char),*(struct`),*(struct`)))),*(char))->(*(struct(enum(int,int,int,int,int,int),union(int,double,*(char),*(struct`),*(struct`)))))
(	O
obj	*(struct(enum(int,int,int,int,int,int),union(int,double,*(char),*(struct(long,*`,*`)),*(struct))))
,	O
key	*(void)
)	O
;	O
if	O
(	O
!	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
)	O
return	O
4	int
;	O
obj	*(struct(enum(int,int,int,int,int,int),union(int,double,*(char),*(struct(long,*`,*`)),*(struct))))
=	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
;	O
}	O
fmt	*(char)
.	O
data	*(void)
=	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
json_format_value	(*(struct(enum(int,int,int,int,int,int),union(int,double,*(char),*(struct`),*(struct`)))),*(struct(long,int,*((*`,*`,long)->(void)),*(void))))->(void)
(	O
obj	*(struct(enum(int,int,int,int,int,int),union(int,double,*(char),*(struct(long,*`,*`)),*(struct))))
,	O
&	O
fmt	*(char)
)	O
;	O
putchar	(int)->(int)
(	O
'\n'	O
)	O
;	O
return	O
0	int
;	O
}	O
