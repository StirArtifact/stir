const	O
char	O
uuname_rcsid	array(char)
[	O
]	O
=	O
"$Id: uuname.c,v 1.24 2002/03/05 19:10:42 ian Rel $"	*(char)
;	O
static	O
void	O
unusage	()->(void)
P	O
(	O
(	O
void	O
)	O
)	O
;	O
static	O
void	O
unhelp	()->(void)
P	O
(	O
(	O
void	O
)	O
)	O
;	O
static	O
const	O
struct	O
option	struct(*(char),int,*(int),int)
asNlongopts	array(struct(*(char),int,*(int),int))
[	O
]	O
=	O
{	O
{	O
"aliases"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
'a'	O
}	O
,	O
{	O
"local"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
'l'	O
}	O
,	O
{	O
"config"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'I'	O
}	O
,	O
{	O
"debug"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'x'	O
}	O
,	O
{	O
"version"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
'v'	O
}	O
,	O
{	O
"help"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
1	int
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
0	int
}	O
}	O
;	O
int	O
main	(int,*(*(char)))->(int)
(	O
argc	int
,	O
argv	*(*(char))
)	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	*(*(char))
;	O
{	O
boolean	int
falias	int
=	O
FALSE	O
;	O
boolean	int
flocal	int
=	O
FALSE	O
;	O
const	O
char	O
*	O
zconfig	*(char)
=	O
NULL	O
;	O
int	O
iopt	int
;	O
pointer	*(void)
puuconf	*(void)
;	O
int	O
iuuconf	int
;	O
zProgram	*(char)
=	O
argv	*(*(char))
[	O
0	int
]	O
;	O
while	O
(	O
(	O
iopt	int
=	O
getopt_long	(int,*(*(char)),*(char),*(struct(*(char),int,*(int),int)),*(int))->(int)
(	O
argc	int
,	O
argv	*(*(char))
,	O
"alI:vx:"	*(char)
,	O
asNlongopts	array(struct(*(char),int,*(int),int))
,	O
(	O
int	O
*	O
)	O
NULL	O
)	O
)	O
!=	O
EOF	O
)	O
{	O
switch	O
(	O
iopt	int
)	O
{	O
case	O
'a'	O
:	O
falias	int
=	O
TRUE	O
;	O
break	O
;	O
case	O
'l'	O
:	O
flocal	int
=	O
TRUE	O
;	O
break	O
;	O
case	O
'I'	O
:	O
if	O
(	O
fsysdep_other_config	(*(char))->(int)
(	O
optarg	O
)	O
)	O
zconfig	*(char)
=	O
optarg	O
;	O
break	O
;	O
case	O
'x'	O
:	O
iDebug	int
|=	O
idebug_parse	(*(char))->(int)
(	O
optarg	O
)	O
;	O
break	O
;	O
case	O
'v'	O
:	O
printf	(*(char))->(int)
(	O
"uuname (Taylor UUCP) %s\n"	*(char)
,	O
VERSION	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"Copyright (C) 1991, 92, 93, 94, 1995, 2002 Ian Lance Taylor\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"This program is free software; you may redistribute it under the terms of\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"the GNU General Public LIcense.  This program has ABSOLUTELY NO WARRANTY.\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
EXIT_SUCCESS	int
)	O
;	O
case	O
1	int
:	O
unhelp	()->(void)
(	O
)	O
;	O
exit	(int)->(void)
(	O
EXIT_SUCCESS	int
)	O
;	O
case	O
0	int
:	O
break	O
;	O
default	O
:	O
unusage	()->(void)
(	O
)	O
;	O
}	O
}	O
if	O
(	O
optind	O
!=	O
argc	int
)	O
unusage	()->(void)
(	O
)	O
;	O
iuuconf	int
=	O
uuconf_init	(*(*(void)),*(char),*(char))->(int)
(	O
&	O
puuconf	*(void)
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
zconfig	*(char)
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
ulog_uuconf	(enum(int,int,int,int,int,int,int),*(void),int)->(void)
(	O
LOG_FATAL	int
,	O
puuconf	*(void)
,	O
iuuconf	int
)	O
;	O
{	O
const	O
char	O
*	O
zdebug	*(char)
;	O
iuuconf	int
=	O
uuconf_debuglevel	(*(void),*(*(char)))->(int)
(	O
puuconf	*(void)
,	O
&	O
zdebug	*(char)
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
ulog_uuconf	(enum(int,int,int,int,int,int,int),*(void),int)->(void)
(	O
LOG_FATAL	int
,	O
puuconf	*(void)
,	O
iuuconf	int
)	O
;	O
if	O
(	O
zdebug	*(char)
!=	O
NULL	O
)	O
iDebug	int
|=	O
idebug_parse	(*(char))->(int)
(	O
zdebug	*(char)
)	O
;	O
}	O
usysdep_initialize	(*(void),int)->(void)
(	O
puuconf	*(void)
,	O
INIT_SUID	O
|	O
INIT_NOCHDIR	O
)	O
;	O
if	O
(	O
flocal	int
)	O
{	O
const	O
char	O
*	O
zlocalname	*(char)
;	O
iuuconf	int
=	O
uuconf_localname	(*(void),*(*(char)))->(int)
(	O
puuconf	*(void)
,	O
&	O
zlocalname	*(char)
)	O
;	O
if	O
(	O
iuuconf	int
==	O
UUCONF_NOT_FOUND	O
)	O
{	O
zlocalname	*(char)
=	O
zsysdep_localname	()->(*(char))
(	O
)	O
;	O
if	O
(	O
zlocalname	*(char)
==	O
NULL	O
)	O
usysdep_exit	(int)->(void)
(	O
FALSE	O
)	O
;	O
}	O
else	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
ulog_uuconf	(enum(int,int,int,int,int,int,int),*(void),int)->(void)
(	O
LOG_FATAL	int
,	O
puuconf	*(void)
,	O
iuuconf	int
)	O
;	O
printf	(*(char))->(int)
(	O
"%s\n"	*(char)
,	O
zlocalname	*(char)
)	O
;	O
}	O
else	O
{	O
char	O
*	O
*	O
pznames	*(*(char))
,	O
*	O
*	O
pz	*(*(char))
;	O
iuuconf	int
=	O
uuconf_system_names	(*(void),*(*(*(char))),int)->(int)
(	O
puuconf	*(void)
,	O
&	O
pznames	*(*(char))
,	O
falias	int
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
ulog_uuconf	(enum(int,int,int,int,int,int,int),*(void),int)->(void)
(	O
LOG_FATAL	int
,	O
puuconf	*(void)
,	O
iuuconf	int
)	O
;	O
for	O
(	O
pz	*(*(char))
=	O
pznames	*(*(char))
;	O
*	O
pz	*(*(char))
!=	O
NULL	O
;	O
pz	*(*(char))
++	O
)	O
printf	(*(char))->(int)
(	O
"%s\n"	*(char)
,	O
*	O
pz	*(*(char))
)	O
;	O
}	O
usysdep_exit	(int)->(void)
(	O
TRUE	O
)	O
;	O
return	O
0	int
;	O
}	O
static	O
void	O
unusage	()->(void)
(	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Usage: %s [-a] [-l] [-I file]\n"	*(char)
,	O
zProgram	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Use %s --help for help\n"	*(char)
,	O
zProgram	*(char)
)	O
;	O
exit	(int)->(void)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
static	O
void	O
unhelp	()->(void)
(	O
)	O
{	O
printf	(*(char))->(int)
(	O
"Taylor UUCP %s, copyright (C) 1991, 92, 93, 94, 1995, 2002 Ian Lance Taylor\n"	*(char)
,	O
VERSION	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"Usage: %s [-a] [-l] [-I file]\n"	*(char)
,	O
zProgram	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
" -a,--aliases: display aliases\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
" -l,--local: print local name\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
" -I,--config file: Set configuration file to use\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
" -v,--version: Print version and exit\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
" --help: Print help and exit\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"Report bugs to taylor-uucp@gnu.org\n"	*(char)
)	O
;	O
}	O
