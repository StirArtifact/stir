static	O
short	O
str2short	(*(char))->(short)
(	O
char	O
*	O
str	*(char)
)	O
;	O
static	O
short	O
str2short	(*(char))->(short)
(	O
char	O
*	O
str	*(char)
)	O
{	O
return	O
(	O
str	*(char)
[	O
0	int
]	O
|	O
str	*(char)
[	O
1	int
]	O
<<	O
8	int
)	O
;	O
}	O
int	O
main	()->(int)
(	O
void	O
)	O
{	O
char	O
instring	array(char)
[	O
MAX_LINE	int
]	O
;	O
char	O
sgf_tag	array(char)
[	O
MAX_LINE	int
]	O
;	O
char	O
comment	array(char)
[	O
MAX_LINE	int
]	O
;	O
int	O
i	int
;	O
while	O
(	O
fgets	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
instring	array(char)
,	O
MAX_LINE	int
,	O
stdin	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
i	int
=	O
strlen	(*(char))->(long)
(	O
instring	array(char)
)	O
-	O
1	int
;	O
while	O
(	O
i	int
>=	O
0	int
&&	O
(	O
instring	array(char)
[	O
i	int
]	O
==	O
' '	O
||	O
instring	array(char)
[	O
i	int
]	O
==	O
10	int
)	O
)	O
instring	array(char)
[	O
i	int
--	O
]	O
=	O
0	int
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
instring	array(char)
,	O
""	*(char)
)	O
==	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
continue	O
;	O
}	O
sscanf	(*(char),*(char))->(int)
(	O
instring	array(char)
,	O
"%4s %75s"	*(char)
,	O
sgf_tag	array(char)
,	O
comment	array(char)
)	O
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
sgf_tag	array(char)
,	O
instring	array(char)
,	O
4	int
)	O
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
instring	array(char)
)	O
>	O
4	int
)	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
comment	array(char)
,	O
instring	array(char)
+	O
4	int
,	O
MAX_LINE	int
-	O
4	int
)	O
;	O
else	O
strcpy	(*(char),*(char))->(*(char))
(	O
comment	array(char)
,	O
""	*(char)
)	O
;	O
if	O
(	O
sgf_tag	array(char)
[	O
0	int
]	O
==	O
'*'	O
||	O
sgf_tag	array(char)
[	O
0	int
]	O
==	O
'!'	O
)	O
{	O
sgf_tag	array(char)
[	O
0	int
]	O
=	O
sgf_tag	array(char)
[	O
1	int
]	O
;	O
sgf_tag	array(char)
[	O
1	int
]	O
=	O
sgf_tag	array(char)
[	O
2	int
]	O
;	O
sgf_tag	array(char)
[	O
2	int
]	O
=	O
sgf_tag	array(char)
[	O
3	int
]	O
;	O
}	O
if	O
(	O
sgf_tag	array(char)
[	O
0	int
]	O
<	O
'A'	O
||	O
sgf_tag	array(char)
[	O
0	int
]	O
>	O
'Z'	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"/* %s */\n"	*(char)
,	O
instring	array(char)
)	O
;	O
continue	O
;	O
}	O
else	O
{	O
if	O
(	O
strlen	(*(char))->(long)
(	O
comment	array(char)
)	O
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"     /* %s */\n"	*(char)
,	O
comment	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"#define SGF%s %5d\n"	*(char)
,	O
sgf_tag	array(char)
,	O
str2short	(*(char))->(short)
(	O
sgf_tag	array(char)
)	O
)	O
;	O
}	O
}	O
return	O
EXIT_SUCCESS	int
;	O
}	O
