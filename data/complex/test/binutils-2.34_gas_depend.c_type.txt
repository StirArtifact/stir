static	O
char	O
*	O
dep_file	O
=	O
NULL	O
;	O
struct	O
dependency	O
{	O
char	O
*	O
file	*(void)
;	O
struct	O
dependency	O
*	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
;	O
}	O
;	O
static	O
struct	O
dependency	O
*	O
dep_chain	O
=	O
NULL	O
;	O
static	O
int	O
column	O
=	O
0	int
;	O
static	O
int	O
quote_string_for_make	O
(	O
FILE	struct
*	O
,	O
const	O
char	O
*	O
)	O
;	O
static	O
void	O
wrap_output	O
(	O
FILE	struct
*	O
,	O
const	O
char	O
*	O
,	O
int	O
)	O
;	O
void	O
start_dependencies	O
(	O
char	O
*	O
filename	*(char)
)	O
{	O
dep_file	O
=	O
filename	*(char)
;	O
}	O
void	O
register_dependency	O
(	O
const	O
char	O
*	O
filename	*(char)
)	O
{	O
struct	O
dependency	O
*	O
dep	O
;	O
if	O
(	O
dep_file	O
==	O
NULL	O
)	O
return	O
;	O
for	O
(	O
dep	O
=	O
dep_chain	O
;	O
dep	O
!=	O
NULL	O
;	O
dep	O
=	O
dep	O
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
)	O
{	O
if	O
(	O
!	O
filename_cmp	O
(	O
filename	*(char)
,	O
dep	O
->	O
file	*(void)
)	O
)	O
return	O
;	O
}	O
dep	O
=	O
XNEW	O
(	O
struct	O
dependency	O
)	O
;	O
dep	O
->	O
file	*(void)
=	O
xstrdup	O
(	O
filename	*(char)
)	O
;	O
dep	O
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
=	O
dep_chain	O
;	O
dep_chain	O
=	O
dep	O
;	O
}	O
static	O
int	O
quote_string_for_make	O
(	O
FILE	struct
*	O
file	*(void)
,	O
const	O
char	O
*	O
src	O
)	O
{	O
const	O
char	O
*	O
p	*(void)
=	O
src	O
;	O
int	O
i	*(struct)
=	O
0	int
;	O
for	O
(	O
;	O
;	O
)	O
{	O
char	O
c	O
=	O
*	O
p	*(void)
++	O
;	O
switch	O
(	O
c	O
)	O
{	O
case	O
'\0'	O
:	O
case	O
' '	O
:	O
case	O
'\t'	O
:	O
{	O
const	O
char	O
*	O
q	O
;	O
for	O
(	O
q	O
=	O
p	*(void)
-	O
1	int
;	O
src	O
<	O
q	O
&&	O
q	O
[	O
-	O
1	int
]	O
==	O
'\\'	O
;	O
q	O
--	O
)	O
{	O
if	O
(	O
file	*(void)
)	O
putc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\\'	O
,	O
file	*(void)
)	O
;	O
i	*(struct)
++	O
;	O
}	O
}	O
if	O
(	O
!	O
c	O
)	O
return	O
i	*(struct)
;	O
if	O
(	O
file	*(void)
)	O
putc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\\'	O
,	O
file	*(void)
)	O
;	O
i	*(struct)
++	O
;	O
goto	O
ordinary_char	O
;	O
case	O
'$'	O
:	O
if	O
(	O
file	*(void)
)	O
putc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
c	O
,	O
file	*(void)
)	O
;	O
i	*(struct)
++	O
;	O
default	O
:	O
ordinary_char	O
:	O
if	O
(	O
file	*(void)
)	O
putc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
c	O
,	O
file	*(void)
)	O
;	O
i	*(struct)
++	O
;	O
break	O
;	O
}	O
}	O
}	O
static	O
void	O
wrap_output	O
(	O
FILE	struct
*	O
f	O
,	O
const	O
char	O
*	O
string	*(char)
,	O
int	O
spacer	O
)	O
{	O
int	O
len	long
=	O
quote_string_for_make	O
(	O
NULL	O
,	O
string	*(char)
)	O
;	O
if	O
(	O
len	long
==	O
0	int
)	O
return	O
;	O
if	O
(	O
column	O
&&	O
(	O
MAX_COLUMNS	O
-	O
1	int
-	O
2	int
<	O
column	O
+	O
len	long
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
f	O
,	O
" \\\n "	*(char)
)	O
;	O
column	O
=	O
0	int
;	O
if	O
(	O
spacer	O
==	O
' '	O
)	O
spacer	O
=	O
'\0'	O
;	O
}	O
if	O
(	O
spacer	O
==	O
' '	O
)	O
{	O
putc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
spacer	O
,	O
f	O
)	O
;	O
++	O
column	O
;	O
}	O
quote_string_for_make	O
(	O
f	O
,	O
string	*(char)
)	O
;	O
column	O
+=	O
len	long
;	O
if	O
(	O
spacer	O
==	O
':'	O
)	O
{	O
putc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
spacer	O
,	O
f	O
)	O
;	O
++	O
column	O
;	O
}	O
}	O
void	O
print_dependencies	O
(	O
void	O
)	O
{	O
FILE	struct
*	O
f	O
;	O
struct	O
dependency	O
*	O
dep	O
;	O
if	O
(	O
dep_file	O
==	O
NULL	O
)	O
return	O
;	O
f	O
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
dep_file	O
,	O
FOPEN_WT	O
)	O
;	O
if	O
(	O
f	O
==	O
NULL	O
)	O
{	O
as_warn	O
(	O
_	O
(	O
"can't open `%s' for writing"	*(char)
)	O
,	O
dep_file	O
)	O
;	O
return	O
;	O
}	O
column	O
=	O
0	int
;	O
wrap_output	O
(	O
f	O
,	O
out_file_name	O
,	O
':'	O
)	O
;	O
for	O
(	O
dep	O
=	O
dep_chain	O
;	O
dep	O
!=	O
NULL	O
;	O
dep	O
=	O
dep	O
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
)	O
wrap_output	O
(	O
f	O
,	O
dep	O
->	O
file	*(void)
,	O
' '	O
)	O
;	O
putc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\n'	O
,	O
f	O
)	O
;	O
if	O
(	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
f	O
)	O
)	O
as_warn	O
(	O
_	O
(	O
"can't close `%s'"	*(char)
)	O
,	O
dep_file	O
)	O
;	O
}	O
