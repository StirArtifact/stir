static	O
int	O
compare_geom	(*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char))),*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char))))->(int)
(	O
struct	O
device	struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char))
*	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
,	O
struct	O
device	struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char))
*	O
orig_dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
)	O
{	O
if	O
(	O
IS_MFORMAT_ONLY	O
(	O
orig_dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
)	O
)	O
return	O
0	int
;	O
if	O
(	O
!	O
orig_dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
||	O
!	O
orig_dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
tracks	int
||	O
!	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
||	O
!	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
tracks	int
)	O
return	O
0	int
;	O
return	O
(	O
orig_dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
tracks	int
!=	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
tracks	int
||	O
orig_dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
heads	short
!=	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
heads	short
||	O
orig_dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
sectors	short
!=	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
sectors	short
)	O
;	O
}	O
static	O
const	O
char	O
*	O
error_msg	array(*(char))
[	O
22	int
]	O
=	O
{	O
"Missing Data Address Mark"	*(char)
,	O
"Bad cylinder"	*(char)
,	O
"Scan not satisfied"	*(char)
,	O
"Scan equal hit"	*(char)
,	O
"Wrong cylinder"	*(char)
,	O
"CRC error in data field"	*(char)
,	O
"Control Mark = deleted"	*(char)
,	O
0	int
,	O
"Missing Address Mark"	*(char)
,	O
"Write Protect"	*(char)
,	O
"No Data - unreadable"	*(char)
,	O
0	int
,	O
"OverRun"	*(char)
,	O
"CRC error in data or address"	*(char)
,	O
0	int
,	O
"End Of Cylinder"	*(char)
,	O
0	int
,	O
0	int
,	O
0	int
,	O
"Not ready"	*(char)
,	O
"Equipment check error"	*(char)
,	O
"Seek end"	*(char)
}	O
;	O
static	O
__inline__	O
void	O
print_message	(*(struct(int,*(void),*(char),*(struct(int,*`,*`,*`,long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),*(char))->(void)
(	O
RawRequest_t	struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct(int,*`,*`,*`,long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int)
*	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
,	O
const	O
char	O
*	O
message	*(char)
)	O
{	O
int	O
i	int
,	O
code	int
;	O
if	O
(	O
!	O
message	*(char)
)	O
return	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"   "	*(char)
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
->	O
cmd_count	char
;	O
i	int
++	O
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%2.2x "	*(char)
,	O
(	O
int	O
)	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
->	O
cmd	array(char)
[	O
i	int
]	O
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
->	O
reply_count	char
;	O
i	int
++	O
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%2.2x "	*(char)
,	O
(	O
int	O
)	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
->	O
reply	array(char)
[	O
i	int
]	O
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
code	int
=	O
(	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
->	O
reply	array(char)
[	O
0	int
]	O
<<	O
16	int
)	O
+	O
(	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
->	O
reply	array(char)
[	O
1	int
]	O
<<	O
8	int
)	O
+	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
->	O
reply	array(char)
[	O
2	int
]	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
22	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
(	O
code	int
&	O
(	O
1	int
<<	O
i	int
)	O
)	O
&&	O
error_msg	array(*(char))
[	O
i	int
]	O
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s\n"	*(char)
,	O
error_msg	array(*(char))
[	O
i	int
]	O
)	O
;	O
}	O
}	O
int	O
send_one_cmd	(int,*(struct(int,*(void),*(char),*(struct(int,*`,*`,*`,long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),*(char))->(int)
(	O
int	O
fd	int
,	O
RawRequest_t	struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct(int,*`,*`,*`,long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int)
*	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
,	O
const	O
char	O
*	O
message	*(char)
)	O
{	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
fd	int
,	O
FDRAWCMD	O
,	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
)	O
>=	O
0	int
)	O
{	O
if	O
(	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
->	O
reply_count	char
<	O
7	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Short reply from FDC\n"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
switch	O
(	O
errno	O
)	O
{	O
case	O
EBUSY	int
:	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"FDC busy, sleeping for a second\n"	*(char)
)	O
;	O
sleep	(int)->(int)
(	O
1	int
)	O
;	O
return	O
1	int
;	O
case	O
EIO	int
:	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"resetting controller\n"	*(char)
)	O
;	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
fd	int
,	O
FDRESET	O
,	O
2	int
)	O
<	O
0	int
)	O
{	O
perror	(*(char))->(void)
(	O
"reset"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
return	O
1	int
;	O
default	O
:	O
perror	(*(char))->(void)
(	O
message	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
int	O
analyze_one_reply	(*(struct(int,*(void),*(char),*(struct(int,*`,*`,*`,long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),*(int),int)->(int)
(	O
RawRequest_t	struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct(int,*`,*`,*`,long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int)
*	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
,	O
int	O
*	O
bytes	array(char)
,	O
int	O
do_print	int
)	O
{	O
if	O
(	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
->	O
reply_count	char
==	O
7	int
)	O
{	O
int	O
end	int
;	O
if	O
(	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
->	O
reply	array(char)
[	O
3	int
]	O
!=	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
->	O
cmd	array(char)
[	O
2	int
]	O
)	O
{	O
end	int
=	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
->	O
cmd	array(char)
[	O
6	int
]	O
+	O
1	int
;	O
}	O
else	O
{	O
end	int
=	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
->	O
reply	array(char)
[	O
5	int
]	O
;	O
}	O
*	O
bytes	array(char)
=	O
end	int
-	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
->	O
cmd	array(char)
[	O
4	int
]	O
;	O
*	O
bytes	array(char)
=	O
*	O
bytes	array(char)
<<	O
(	O
7	int
+	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
->	O
cmd	array(char)
[	O
5	int
]	O
)	O
;	O
}	O
else	O
*	O
bytes	array(char)
=	O
0	int
;	O
switch	O
(	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
->	O
reply	array(char)
[	O
0	int
]	O
&	O
0xc0	int
)	O
{	O
case	O
0x40	int
:	O
if	O
(	O
(	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
->	O
reply	array(char)
[	O
0	int
]	O
&	O
0x38	int
)	O
==	O
0	int
&&	O
(	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
->	O
reply	array(char)
[	O
1	int
]	O
)	O
==	O
0x80	int
&&	O
(	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
->	O
reply	array(char)
[	O
2	int
]	O
)	O
==	O
0	int
)	O
{	O
*	O
bytes	array(char)
+=	O
1	int
<<	O
(	O
7	int
+	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
->	O
cmd	array(char)
[	O
5	int
]	O
)	O
;	O
break	O
;	O
}	O
if	O
(	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
->	O
reply	array(char)
[	O
1	int
]	O
&	O
ST1_WP	int
)	O
{	O
*	O
bytes	array(char)
=	O
0	int
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"This disk is write protected\n"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
!	O
*	O
bytes	array(char)
&&	O
do_print	int
)	O
print_message	(*(struct(int,*(void),*(char),*(struct(int,*`,*`,*`,long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),*(char))->(void)
(	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
,	O
""	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
case	O
0x80	int
:	O
*	O
bytes	array(char)
=	O
0	int
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"invalid command given\n"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
case	O
0xc0	int
:	O
*	O
bytes	array(char)
=	O
0	int
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"abnormal termination caused by polling\n"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
default	O
:	O
break	O
;	O
}	O
if	O
(	O
raw_cmd	*(struct(int,*(void),*(char),*(struct(int,*(void),*(char),*(struct`),long,long,int,char,char,array(char),char,array(char),int,int,int,int)),long,long,int,char,char,array(char),char,array(char),int,int,int,int))
->	O
flags	char
&	O
FD_RAW_MORE	int
)	O
return	O
1	int
;	O
return	O
0	int
;	O
}	O
struct	O
device	struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char))
devices	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
[	O
]	O
=	O
{	O
{	O
"/dev/fd0"	*(char)
,	O
'A'	O
,	O
0	int
,	O
0	int
,	O
80	int
,	O
2	int
,	O
18	int
,	O
0	int
,	O
MDEF_ARG	O
,	O
0	int
,	O
0	int
}	O
,	O
{	O
"/dev/fd1"	*(char)
,	O
'B'	O
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
FDEF_ARG	O
,	O
0	int
,	O
0	int
}	O
,	O
{	O
"/dev/sdb4"	*(char)
,	O
'J'	O
,	O
GENHD	O
,	O
0	int
,	O
0	int
}	O
,	O
{	O
"/dev/sdb4"	*(char)
,	O
'Z'	O
,	O
GENHD	O
,	O
0	int
,	O
0	int
}	O
,	O
REMOTE	O
}	O
;	O
static	O
__inline__	O
void	O
set_2m	(*(struct(int,int,int,int,int,char,char,char,char,*(char))),int)->(void)
(	O
struct	O
floppy_struct	struct(int,int,int,int,int,char,char,char,char,*(char))
*	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
,	O
int	O
value	int
)	O
{	O
if	O
(	O
value	int
&	O
0x7f	int
)	O
value	int
=	O
FD_2M	int
;	O
else	O
value	int
=	O
0	int
;	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
->	O
rate	int
=	O
(	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
->	O
rate	int
&	O
~	O
FD_2M	int
)	O
|	O
value	int
;	O
}	O
static	O
__inline__	O
void	O
set_ssize	(*(struct(int,int,int,int,int,char,char,char,char,*(char))),int)->(void)
(	O
struct	O
floppy_struct	struct(int,int,int,int,int,char,char,char,char,*(char))
*	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
,	O
int	O
value	int
)	O
{	O
value	int
=	O
(	O
(	O
(	O
value	int
&	O
7	int
)	O
+	O
6	int
)	O
%	O
8	int
)	O
<<	O
3	int
;	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
->	O
rate	int
=	O
(	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
->	O
rate	int
&	O
~	O
0x38	int
)	O
|	O
value	int
;	O
}	O
static	O
__inline__	O
int	O
set_parameters	(int,*(struct(int,int,int,int,int,char,char,char,char,*(char))),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
int	O
fd	int
,	O
struct	O
floppy_struct	struct(int,int,int,int,int,char,char,char,char,*(char))
*	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
,	O
struct	O
MT_STAT	O
*	O
buf	*(char)
)	O
{	O
if	O
(	O
(	O
MINOR	O
(	O
buf	*(char)
->	O
st_rdev	long
)	O
&	O
0x7f	int
)	O
>	O
3	int
)	O
return	O
1	int
;	O
return	O
ioctl	(int,long)->(int)
(	O
fd	int
,	O
FDSETPRM	O
,	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
)	O
;	O
}	O
static	O
__inline__	O
int	O
get_parameters	(int,*(struct(int,int,int,int,int,char,char,char,char,*(char))))->(int)
(	O
int	O
fd	int
,	O
struct	O
floppy_struct	struct(int,int,int,int,int,char,char,char,char,*(char))
*	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
)	O
{	O
return	O
ioctl	(int,long)->(int)
(	O
fd	int
,	O
FDGETPRM	O
,	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
)	O
;	O
}	O
int	O
init_geom	(int,*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char))),*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char))),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
int	O
fd	int
,	O
struct	O
device	struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char))
*	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
,	O
struct	O
device	struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char))
*	O
orig_dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
,	O
struct	O
MT_STAT	O
*	O
statbuf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
)	O
{	O
struct	O
generic_floppy_struct	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
;	O
int	O
change	int
;	O
if	O
(	O
!	O
(	O
(	O
S_ISBLK	O
(	O
statbuf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_mode	int
)	O
&&	O
major	O
(	O
statbuf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_rdev	long
)	O
==	O
BLOCK_MAJOR	int
)	O
)	O
)	O
return	O
compare_geom	(*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char))),*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char))))->(int)
(	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
,	O
orig_dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
)	O
;	O
if	O
(	O
get_parameters	(int,*(struct(int,int,int,int,int,char,char,char,char,*(char))))->(int)
(	O
fd	int
,	O
&	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
)	O
)	O
return	O
1	int
;	O
change	int
=	O
0	int
;	O
if	O
(	O
compare	(long,long)->(int)
(	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
sectors	short
,	O
SECTORS	O
(	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
)	O
)	O
)	O
{	O
SECTORS	O
(	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
)	O
=	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
sectors	short
;	O
change	int
=	O
1	int
;	O
}	O
else	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
sectors	short
=	O
SECTORS	O
(	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
)	O
;	O
if	O
(	O
compare	(long,long)->(int)
(	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
heads	short
,	O
HEADS	O
(	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
)	O
)	O
)	O
{	O
HEADS	O
(	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
)	O
=	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
heads	short
;	O
change	int
=	O
1	int
;	O
}	O
else	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
heads	short
=	O
HEADS	O
(	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
)	O
;	O
if	O
(	O
compare	(long,long)->(int)
(	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
tracks	int
,	O
TRACKS	O
(	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
)	O
)	O
)	O
{	O
TRACKS	O
(	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
)	O
=	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
tracks	int
;	O
change	int
=	O
1	int
;	O
}	O
else	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
tracks	int
=	O
TRACKS	O
(	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
)	O
;	O
if	O
(	O
compare	(long,long)->(int)
(	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
use_2m	int
,	O
USE_2M	O
(	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
)	O
)	O
)	O
{	O
SET_2M	O
(	O
&	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
,	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
use_2m	int
)	O
;	O
change	int
=	O
1	int
;	O
}	O
else	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
use_2m	int
=	O
USE_2M	O
(	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
)	O
;	O
if	O
(	O
!	O
(	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
ssize	char
&	O
0x80	int
)	O
)	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
ssize	char
=	O
0	int
;	O
if	O
(	O
compare	(long,long)->(int)
(	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
ssize	char
,	O
SSIZE	O
(	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
)	O
+	O
128	int
)	O
)	O
{	O
SET_SSIZE	O
(	O
&	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
,	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
ssize	char
)	O
;	O
change	int
=	O
1	int
;	O
}	O
else	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
ssize	char
=	O
SSIZE	O
(	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
)	O
;	O
if	O
(	O
!	O
change	int
)	O
return	O
0	int
;	O
SECTORS_PER_DISK	O
(	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
)	O
=	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
sectors	short
*	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
heads	short
*	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
tracks	int
;	O
if	O
(	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
->	O
tracks	int
>	O
41	int
)	O
STRETCH	O
(	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
)	O
=	O
0	int
;	O
else	O
STRETCH	O
(	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
)	O
=	O
1	int
;	O
return	O
set_parameters	(int,*(struct(int,int,int,int,int,char,char,char,char,*(char))),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
fd	int
,	O
&	O
floppy	*(struct(int,int,int,int,int,char,char,char,char,*(char)))
,	O
statbuf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
)	O
;	O
}	O
const	O
unsigned	O
int	O
nr_const_devices	int
=	O
sizeof	O
(	O
const_devices	array(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
)	O
/	O
sizeof	O
(	O
*	O
const_devices	array(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
)	O
;	O
