kern_return_t	O
cons_S_file_changed	(*(struct(struct,*(struct(union`,*`,*`,*`,*`,*`,int,int)))),int,int,int,int)->(int)
(	O
cons_notify_t	*(struct)
notify	struct(struct,*(struct))
,	O
natural_t	O
tickno	int
,	O
file_changed_type_t	O
change	int
,	O
off_t	O
start	int
,	O
off_t	O
end	int
)	O
{	O
error_t	int
err	int
=	O
0	int
;	O
vcons_t	*(struct)
vcons	*(struct)
=	O
(	O
vcons_t	*(struct)
)	O
notify	struct(struct,*(struct))
;	O
if	O
(	O
!	O
notify	struct(struct,*(struct))
||	O
notify	struct(struct,*(struct))
->	O
cons	*(struct)
)	O
return	O
EOPNOTSUPP	int
;	O
pthread_mutex_lock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
vcons	*(struct)
->	O
lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
switch	O
(	O
change	int
)	O
{	O
case	O
FILE_CHANGED_NULL	O
:	O
cons_vcons_refresh	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)))->(void)
(	O
vcons	*(struct)
)	O
;	O
break	O
;	O
case	O
FILE_CHANGED_WRITE	O
:	O
while	O
(	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
changes	struct(int,int,*(int))
.	O
written	int
<	O
vcons	*(struct)
->	O
display	*(struct)
->	O
changes	struct(int,int,*(int))
.	O
written	int
)	O
{	O
cons_change_t	O
change	int
;	O
if	O
(	O
vcons	*(struct)
->	O
display	*(struct)
->	O
changes	struct(int,int,*(int))
.	O
written	int
-	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
changes	struct(int,int,*(int))
.	O
written	int
>	O
vcons	*(struct)
->	O
cons	*(struct)
->	O
slack	int
)	O
{	O
cons_vcons_refresh	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)))->(void)
(	O
vcons	*(struct)
)	O
;	O
continue	O
;	O
}	O
change	int
=	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
changes	struct(int,int,*(int))
.	O
buffer	*(int)
[	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
changes	struct(int,int,*(int))
.	O
written	int
%	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
changes	struct(int,int,*(int))
.	O
length	int
]	O
;	O
if	O
(	O
vcons	*(struct)
->	O
display	*(struct)
->	O
changes	struct(int,int,*(int))
.	O
written	int
-	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
changes	struct(int,int,*(int))
.	O
written	int
>	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
changes	struct(int,int,*(int))
.	O
length	int
-	O
1	int
)	O
{	O
cons_vcons_refresh	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)))->(void)
(	O
vcons	*(struct)
)	O
;	O
continue	O
;	O
}	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
changes	struct(int,int,*(int))
.	O
written	int
++	O
;	O
if	O
(	O
change	int
.	O
what	O
.	O
not_matrix	O
)	O
{	O
if	O
(	O
change	int
.	O
what	O
.	O
cursor_pos	O
)	O
{	O
uint32_t	O
old_row	O
=	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
cursor	struct(int,int,int)
.	O
row	int
;	O
uint32_t	O
height	int
=	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
height	int
;	O
uint32_t	O
row	int
;	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
cursor	struct(int,int,int)
.	O
col	int
=	O
vcons	*(struct)
->	O
display	*(struct)
->	O
cursor	struct(int,int,int)
.	O
col	int
;	O
row	int
=	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
cursor	struct(int,int,int)
.	O
row	int
=	O
vcons	*(struct)
->	O
display	*(struct)
->	O
cursor	struct(int,int,int)
.	O
row	int
;	O
if	O
(	O
row	int
+	O
vcons	*(struct)
->	O
scrolling	int
<	O
height	int
)	O
{	O
cons_vcons_set_cursor_pos	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)),int,int)->(void)
(	O
vcons	*(struct)
,	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
cursor	struct(int,int,int)
.	O
col	int
,	O
row	int
+	O
vcons	*(struct)
->	O
scrolling	int
)	O
;	O
if	O
(	O
old_row	O
+	O
vcons	*(struct)
->	O
scrolling	int
>=	O
height	int
)	O
cons_vcons_set_cursor_status	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)),int)->(void)
(	O
vcons	*(struct)
,	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
cursor	struct(int,int,int)
.	O
status	int
)	O
;	O
}	O
else	O
if	O
(	O
old_row	O
+	O
vcons	*(struct)
->	O
scrolling	int
<	O
height	int
)	O
cons_vcons_set_cursor_status	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)),int)->(void)
(	O
vcons	*(struct)
,	O
CONS_CURSOR_INVISIBLE	O
)	O
;	O
_cons_vcons_console_event	()->(int)
(	O
vcons	*(struct)
,	O
CONS_EVT_OUTPUT	O
)	O
;	O
cons_vcons_update	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)))->(void)
(	O
vcons	*(struct)
)	O
;	O
}	O
if	O
(	O
change	int
.	O
what	O
.	O
cursor_status	O
)	O
{	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
cursor	struct(int,int,int)
.	O
status	int
=	O
vcons	*(struct)
->	O
display	*(struct)
->	O
cursor	struct(int,int,int)
.	O
status	int
;	O
cons_vcons_set_cursor_status	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)),int)->(void)
(	O
vcons	*(struct)
,	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
cursor	struct(int,int,int)
.	O
status	int
)	O
;	O
cons_vcons_update	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)))->(void)
(	O
vcons	*(struct)
)	O
;	O
}	O
if	O
(	O
change	int
.	O
what	O
.	O
screen_cur_line	O
)	O
{	O
uint32_t	O
new_cur_line	O
;	O
new_cur_line	O
=	O
vcons	*(struct)
->	O
display	*(struct)
->	O
screen	struct(int,int,int,int,int,*(int))
.	O
cur_line	int
;	O
if	O
(	O
new_cur_line	O
!=	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
cur_line	int
)	O
{	O
off_t	O
size	long
=	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
width	int
*	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
lines	int
;	O
off_t	O
vis_start	O
;	O
uint32_t	O
scrolling	int
;	O
off_t	O
start	int
;	O
off_t	O
end	int
;	O
if	O
(	O
new_cur_line	O
>	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
cur_line	int
)	O
scrolling	int
=	O
new_cur_line	O
-	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
cur_line	int
;	O
else	O
scrolling	int
=	O
UINT32_MAX	O
-	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
cur_line	int
+	O
1	int
+	O
new_cur_line	O
;	O
if	O
(	O
vcons	*(struct)
->	O
scrolling	int
)	O
{	O
if	O
(	O
_cons_jump_down_on_output	O
)	O
_cons_vcons_scrollback	()->(int)
(	O
vcons	*(struct)
,	O
CONS_SCROLL_ABSOLUTE_LINE	int
,	O
0	int
)	O
;	O
else	O
{	O
if	O
(	O
vcons	*(struct)
->	O
scrolling	int
+	O
scrolling	int
<=	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
scr_lines	int
)	O
{	O
vcons	*(struct)
->	O
scrolling	int
+=	O
scrolling	int
;	O
scrolling	int
=	O
0	int
;	O
}	O
else	O
{	O
scrolling	int
-=	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
scr_lines	int
-	O
vcons	*(struct)
->	O
scrolling	int
;	O
vcons	*(struct)
->	O
scrolling	int
=	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
scr_lines	int
;	O
}	O
}	O
}	O
if	O
(	O
scrolling	int
)	O
{	O
uint32_t	O
cur_disp_line	O
;	O
if	O
(	O
new_cur_line	O
>=	O
vcons	*(struct)
->	O
scrolling	int
)	O
cur_disp_line	O
=	O
new_cur_line	O
-	O
vcons	*(struct)
->	O
scrolling	int
;	O
else	O
cur_disp_line	O
=	O
(	O
UINT32_MAX	O
-	O
(	O
vcons	*(struct)
->	O
scrolling	int
-	O
new_cur_line	O
)	O
)	O
+	O
1	int
;	O
if	O
(	O
scrolling	int
>	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
height	int
)	O
scrolling	int
=	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
height	int
;	O
if	O
(	O
scrolling	int
<	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
height	int
)	O
cons_vcons_scroll	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)),int)->(void)
(	O
vcons	*(struct)
,	O
scrolling	int
)	O
;	O
else	O
cons_vcons_clear	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)),long,int,int)->(void)
(	O
vcons	*(struct)
,	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
width	int
*	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
height	int
,	O
0	int
,	O
0	int
)	O
;	O
vis_start	O
=	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
width	int
*	O
(	O
cur_disp_line	O
%	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
lines	int
)	O
;	O
start	int
=	O
(	O
(	O
(	O
cur_disp_line	O
%	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
lines	int
)	O
+	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
height	int
-	O
scrolling	int
)	O
*	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
width	int
)	O
%	O
size	long
;	O
end	int
=	O
start	int
+	O
scrolling	int
*	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
width	int
-	O
1	int
;	O
cons_vcons_write	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)),*(int),long,int,int)->(void)
(	O
vcons	*(struct)
,	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
matrix	*(int)
+	O
start	int
,	O
end	int
<	O
size	long
?	O
end	int
-	O
start	int
+	O
1	int
:	O
size	long
-	O
start	int
,	O
0	int
,	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
height	int
-	O
scrolling	int
)	O
;	O
if	O
(	O
end	int
>=	O
size	long
)	O
cons_vcons_write	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)),*(int),long,int,int)->(void)
(	O
vcons	*(struct)
,	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
matrix	*(int)
,	O
end	int
-	O
size	long
+	O
1	int
,	O
0	int
,	O
(	O
size	long
-	O
vis_start	O
)	O
/	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
width	int
)	O
;	O
_cons_vcons_console_event	()->(int)
(	O
vcons	*(struct)
,	O
CONS_EVT_OUTPUT	O
)	O
;	O
cons_vcons_update	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)))->(void)
(	O
vcons	*(struct)
)	O
;	O
}	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
cur_line	int
=	O
new_cur_line	O
;	O
}	O
}	O
if	O
(	O
change	int
.	O
what	O
.	O
screen_scr_lines	O
)	O
{	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
scr_lines	int
=	O
vcons	*(struct)
->	O
display	*(struct)
->	O
screen	struct(int,int,int,int,int,*(int))
.	O
scr_lines	int
;	O
if	O
(	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
scr_lines	int
<	O
vcons	*(struct)
->	O
scrolling	int
)	O
assert	O
(	O
!	O
"Implement shrinking scrollback buffer! XXX"	*(char)
)	O
;	O
}	O
if	O
(	O
change	int
.	O
what	O
.	O
bell_audible	O
)	O
{	O
while	O
(	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
bell	struct(int,int)
.	O
audible	int
<	O
vcons	*(struct)
->	O
display	*(struct)
->	O
bell	struct(int,int)
.	O
audible	int
)	O
{	O
if	O
(	O
_cons_audible_bell	O
==	O
BELL_AUDIBLE	O
)	O
cons_vcons_beep	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)))->(void)
(	O
vcons	*(struct)
)	O
;	O
else	O
if	O
(	O
_cons_audible_bell	O
==	O
BELL_VISUAL	O
)	O
cons_vcons_flash	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)))->(void)
(	O
vcons	*(struct)
)	O
;	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
bell	struct(int,int)
.	O
audible	int
++	O
;	O
}	O
}	O
if	O
(	O
change	int
.	O
what	O
.	O
bell_visible	O
)	O
{	O
while	O
(	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
bell	struct(int,int)
.	O
visible	int
<	O
vcons	*(struct)
->	O
display	*(struct)
->	O
bell	struct(int,int)
.	O
visible	int
)	O
{	O
if	O
(	O
_cons_visual_bell	O
==	O
BELL_VISUAL	O
)	O
cons_vcons_flash	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)))->(void)
(	O
vcons	*(struct)
)	O
;	O
else	O
if	O
(	O
_cons_visual_bell	O
==	O
BELL_AUDIBLE	O
)	O
cons_vcons_beep	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)))->(void)
(	O
vcons	*(struct)
)	O
;	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
bell	struct(int,int)
.	O
visible	int
++	O
;	O
}	O
}	O
if	O
(	O
change	int
.	O
what	O
.	O
flags	int
)	O
{	O
uint32_t	O
flags	int
=	O
vcons	*(struct)
->	O
display	*(struct)
->	O
flags	int
;	O
if	O
(	O
(	O
flags	int
&	O
CONS_FLAGS_SCROLL_LOCK	O
)	O
!=	O
(	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
flags	int
&	O
CONS_FLAGS_SCROLL_LOCK	O
)	O
)	O
cons_vcons_set_scroll_lock	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)),int)->(void)
(	O
vcons	*(struct)
,	O
flags	int
&	O
CONS_FLAGS_SCROLL_LOCK	O
)	O
;	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
flags	int
=	O
flags	int
;	O
}	O
}	O
else	O
{	O
off_t	O
size	long
=	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
width	int
*	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
lines	int
;	O
off_t	O
rotate	O
;	O
off_t	O
vis_end	O
=	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
height	int
*	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
width	int
-	O
1	int
;	O
off_t	O
end2	O
=	O
-	O
1	int
;	O
off_t	O
start_rel	O
=	O
0	int
;	O
off_t	O
start	int
=	O
change	int
.	O
matrix	*(int)
.	O
start	int
;	O
off_t	O
end	int
=	O
change	int
.	O
matrix	*(int)
.	O
end	int
;	O
if	O
(	O
vcons	*(struct)
->	O
scrolling	int
&&	O
_cons_jump_down_on_output	O
)	O
_cons_vcons_scrollback	()->(int)
(	O
vcons	*(struct)
,	O
CONS_SCROLL_ABSOLUTE_LINE	int
,	O
0	int
)	O
;	O
if	O
(	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
cur_line	int
>=	O
vcons	*(struct)
->	O
scrolling	int
)	O
rotate	O
=	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
cur_line	int
-	O
vcons	*(struct)
->	O
scrolling	int
;	O
else	O
rotate	O
=	O
(	O
UINT32_MAX	O
-	O
(	O
vcons	*(struct)
->	O
scrolling	int
-	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
cur_line	int
)	O
)	O
+	O
1	int
;	O
rotate	O
=	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
width	int
*	O
(	O
rotate	O
%	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
lines	int
)	O
;	O
start	int
-=	O
rotate	O
;	O
if	O
(	O
start	int
<	O
0	int
)	O
start	int
+=	O
size	long
;	O
end	int
-=	O
rotate	O
;	O
if	O
(	O
end	int
<	O
0	int
)	O
end	int
+=	O
size	long
;	O
if	O
(	O
start	int
>	O
vis_end	O
)	O
{	O
if	O
(	O
end	int
<	O
start	int
)	O
{	O
start	int
=	O
0	int
;	O
if	O
(	O
vis_end	O
<	O
end	int
)	O
end	int
=	O
vis_end	O
;	O
}	O
else	O
start	int
=	O
-	O
1	int
;	O
}	O
else	O
{	O
if	O
(	O
end	int
>=	O
start	int
)	O
{	O
if	O
(	O
end	int
>	O
vis_end	O
)	O
end	int
=	O
vis_end	O
;	O
}	O
else	O
{	O
end2	O
=	O
end	int
;	O
end	int
=	O
vis_end	O
;	O
}	O
}	O
if	O
(	O
start	int
!=	O
-	O
1	int
)	O
{	O
start_rel	O
=	O
start	int
;	O
start	int
+=	O
rotate	O
;	O
if	O
(	O
start	int
>=	O
size	long
)	O
start	int
-=	O
size	long
;	O
end	int
+=	O
rotate	O
;	O
if	O
(	O
end	int
>=	O
size	long
)	O
end	int
-=	O
size	long
;	O
if	O
(	O
start	int
>	O
end	int
)	O
end	int
+=	O
size	long
;	O
}	O
if	O
(	O
end2	O
!=	O
-	O
1	int
)	O
end2	O
+=	O
rotate	O
;	O
if	O
(	O
start	int
!=	O
-	O
1	int
)	O
{	O
cons_vcons_clear	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)),long,int,int)->(void)
(	O
vcons	*(struct)
,	O
end	int
-	O
start	int
+	O
1	int
,	O
start_rel	O
%	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
width	int
,	O
start_rel	O
/	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
width	int
)	O
;	O
cons_vcons_write	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)),*(int),long,int,int)->(void)
(	O
vcons	*(struct)
,	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
matrix	*(int)
+	O
start	int
,	O
end	int
<	O
size	long
?	O
end	int
-	O
start	int
+	O
1	int
:	O
size	long
-	O
start	int
,	O
start_rel	O
%	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
width	int
,	O
start_rel	O
/	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
width	int
)	O
;	O
if	O
(	O
end	int
>=	O
size	long
)	O
cons_vcons_write	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)),*(int),long,int,int)->(void)
(	O
vcons	*(struct)
,	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
matrix	*(int)
,	O
end	int
-	O
size	long
+	O
1	int
,	O
(	O
size	long
-	O
rotate	O
)	O
%	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
width	int
,	O
(	O
size	long
-	O
rotate	O
)	O
/	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
width	int
)	O
;	O
if	O
(	O
end2	O
!=	O
-	O
1	int
)	O
{	O
cons_vcons_clear	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)),long,int,int)->(void)
(	O
vcons	*(struct)
,	O
end2	O
-	O
rotate	O
+	O
1	int
,	O
0	int
,	O
0	int
)	O
;	O
cons_vcons_write	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)),*(int),long,int,int)->(void)
(	O
vcons	*(struct)
,	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
matrix	*(int)
+	O
rotate	O
,	O
end2	O
<	O
size	long
?	O
end2	O
-	O
rotate	O
+	O
1	int
:	O
size	long
-	O
rotate	O
,	O
0	int
,	O
0	int
)	O
;	O
if	O
(	O
end2	O
>=	O
size	long
)	O
cons_vcons_write	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)),*(int),long,int,int)->(void)
(	O
vcons	*(struct)
,	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
matrix	*(int)
,	O
end2	O
-	O
size	long
+	O
1	int
,	O
(	O
size	long
-	O
rotate	O
)	O
%	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
width	int
,	O
(	O
size	long
-	O
rotate	O
)	O
/	O
vcons	*(struct)
->	O
state	struct(int,struct(int,int,int),struct(int,int,int,int,int,*(int)),struct(int,int),struct(int,int,*(int)))
.	O
screen	struct(int,int,int,int,int,*(int))
.	O
width	int
)	O
;	O
}	O
_cons_vcons_console_event	()->(int)
(	O
vcons	*(struct)
,	O
CONS_EVT_OUTPUT	O
)	O
;	O
cons_vcons_update	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)))->(void)
(	O
vcons	*(struct)
)	O
;	O
}	O
}	O
}	O
break	O
;	O
case	O
FILE_CHANGED_EXTEND	O
:	O
case	O
FILE_CHANGED_TRUNCATE	O
:	O
case	O
FILE_CHANGED_META	O
:	O
default	O
:	O
err	int
=	O
EINVAL	int
;	O
}	O
;	O
pthread_mutex_unlock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
vcons	*(struct)
->	O
lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
return	O
err	int
;	O
}	O
