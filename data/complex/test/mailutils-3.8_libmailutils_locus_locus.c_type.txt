int	O
mu_locus_point_set_file	(*(struct(*(char),int,int)),*(char))->(int)
(	O
struct	O
mu_locus_point	struct(*(char),int,int)
*	O
pt	*(struct(*(char),int,int))
,	O
const	O
char	O
*	O
filename	*(char)
)	O
{	O
int	O
rc	int
;	O
char	O
const	O
*	O
ref	*(char)
;	O
rc	int
=	O
mu_ident_ref	(*(char),*(*(char)))->(int)
(	O
filename	*(char)
,	O
&	O
ref	*(char)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
mu_ident_deref	(*(char))->(int)
(	O
pt	*(struct(*(char),int,int))
->	O
mu_file	*(char)
)	O
;	O
pt	*(struct(*(char),int,int))
->	O
mu_file	*(char)
=	O
ref	*(char)
;	O
return	O
0	int
;	O
}	O
void	O
mu_locus_point_init	(*(struct(*(char),int,int)))->(void)
(	O
struct	O
mu_locus_point	struct(*(char),int,int)
*	O
pt	*(struct(*(char),int,int))
)	O
{	O
memset	(*(void),int,long)->(*(void))
(	O
pt	*(struct(*(char),int,int))
,	O
0	int
,	O
sizeof	O
*	O
pt	*(struct(*(char),int,int))
)	O
;	O
}	O
void	O
mu_locus_point_deinit	(*(struct(*(char),int,int)))->(void)
(	O
struct	O
mu_locus_point	struct(*(char),int,int)
*	O
pt	*(struct(*(char),int,int))
)	O
{	O
mu_ident_deref	(*(char))->(int)
(	O
pt	*(struct(*(char),int,int))
->	O
mu_file	*(char)
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
pt	*(struct(*(char),int,int))
,	O
0	int
,	O
sizeof	O
*	O
pt	*(struct(*(char),int,int))
)	O
;	O
}	O
int	O
mu_locus_point_copy	(*(struct(*(char),int,int)),*(struct(*(char),int,int)))->(int)
(	O
struct	O
mu_locus_point	struct(*(char),int,int)
*	O
dest	*(struct(*(char),int,int))
,	O
struct	O
mu_locus_point	struct(*(char),int,int)
const	O
*	O
src	*(struct(*(char),int,int))
)	O
{	O
int	O
rc	int
=	O
mu_locus_point_set_file	(*(struct(*(char),int,int)),*(char))->(int)
(	O
dest	*(struct(*(char),int,int))
,	O
src	*(struct(*(char),int,int))
->	O
mu_file	*(char)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
dest	*(struct(*(char),int,int))
->	O
mu_col	int
=	O
src	*(struct(*(char),int,int))
->	O
mu_col	int
;	O
dest	*(struct(*(char),int,int))
->	O
mu_line	int
=	O
src	*(struct(*(char),int,int))
->	O
mu_line	int
;	O
}	O
return	O
rc	int
;	O
}	O
void	O
mu_locus_range_init	(*(struct(struct(*(char),int,int),struct(*(char),int,int))))->(void)
(	O
struct	O
mu_locus_range	struct(struct(*(char),int,int),struct(*(char),int,int))
*	O
dest	*(struct(*(char),int,int))
)	O
{	O
memset	(*(void),int,long)->(*(void))
(	O
dest	*(struct(*(char),int,int))
,	O
0	int
,	O
sizeof	O
*	O
dest	*(struct(*(char),int,int))
)	O
;	O
}	O
int	O
mu_locus_range_copy	(*(struct(struct(*(char),int,int),struct(*(char),int,int))),*(struct(struct(*(char),int,int),struct(*(char),int,int))))->(int)
(	O
struct	O
mu_locus_range	struct(struct(*(char),int,int),struct(*(char),int,int))
*	O
dest	*(struct(*(char),int,int))
,	O
struct	O
mu_locus_range	struct(struct(*(char),int,int),struct(*(char),int,int))
const	O
*	O
src	*(struct(*(char),int,int))
)	O
{	O
int	O
rc	int
;	O
struct	O
mu_locus_range	struct(struct(*(char),int,int),struct(*(char),int,int))
tmp	struct(struct(*(char),int,int),struct(*(char),int,int))
=	O
MU_LOCUS_RANGE_INITIALIZER	O
;	O
if	O
(	O
!	O
dest	*(struct(*(char),int,int))
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
rc	int
=	O
mu_locus_point_copy	(*(struct(*(char),int,int)),*(struct(*(char),int,int)))->(int)
(	O
&	O
tmp	struct(struct(*(char),int,int),struct(*(char),int,int))
.	O
beg	struct(*(char),int,int)
,	O
&	O
src	*(struct(*(char),int,int))
->	O
beg	struct(*(char),int,int)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
rc	int
=	O
mu_locus_point_copy	(*(struct(*(char),int,int)),*(struct(*(char),int,int)))->(int)
(	O
&	O
tmp	struct(struct(*(char),int,int),struct(*(char),int,int))
.	O
end	struct(*(char),int,int)
,	O
&	O
src	*(struct(*(char),int,int))
->	O
end	struct(*(char),int,int)
)	O
;	O
if	O
(	O
rc	int
)	O
mu_locus_point_deinit	(*(struct(*(char),int,int)))->(void)
(	O
&	O
tmp	struct(struct(*(char),int,int),struct(*(char),int,int))
.	O
beg	struct(*(char),int,int)
)	O
;	O
else	O
{	O
mu_locus_range_deinit	(*(struct(struct(*(char),int,int),struct(*(char),int,int))))->(void)
(	O
dest	*(struct(*(char),int,int))
)	O
;	O
*	O
dest	*(struct(*(char),int,int))
=	O
tmp	struct(struct(*(char),int,int),struct(*(char),int,int))
;	O
}	O
}	O
return	O
rc	int
;	O
}	O
void	O
mu_locus_range_deinit	(*(struct(struct(*(char),int,int),struct(*(char),int,int))))->(void)
(	O
struct	O
mu_locus_range	struct(struct(*(char),int,int),struct(*(char),int,int))
*	O
lr	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
)	O
{	O
mu_locus_point_deinit	(*(struct(*(char),int,int)))->(void)
(	O
&	O
lr	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
->	O
beg	struct(*(char),int,int)
)	O
;	O
mu_locus_point_deinit	(*(struct(*(char),int,int)))->(void)
(	O
&	O
lr	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
->	O
end	struct(*(char),int,int)
)	O
;	O
}	O
