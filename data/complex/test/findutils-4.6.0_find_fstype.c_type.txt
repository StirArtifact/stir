static	O
char	O
*	O
file_system_type_uncached	(*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))),*(char))->(*(char))
(	O
const	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
statp	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
,	O
const	O
char	O
*	O
path	*(char)
)	O
;	O
static	O
void	O
free_file_system_list	(*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*`,*`,*`,*`,long,int,int,int,*`)))))->(void)
(	O
struct	O
mount_entry	struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`))))))
*	O
p	*(void)
)	O
{	O
while	O
(	O
p	*(void)
)	O
{	O
struct	O
mount_entry	struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`))))))
*	O
pnext	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
=	O
p	*(void)
->	O
me_next	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
;	O
free	(*(void))->(void)
(	O
p	*(void)
->	O
me_devname	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
p	*(void)
->	O
me_mountdir	*(char)
)	O
;	O
if	O
(	O
p	*(void)
->	O
me_type_malloced	int
)	O
free	(*(void))->(void)
(	O
p	*(void)
->	O
me_type	*(char)
)	O
;	O
p	*(void)
->	O
me_next	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
=	O
NULL	O
;	O
free	(*(void))->(void)
(	O
p	*(void)
)	O
;	O
p	*(void)
=	O
pnext	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
;	O
}	O
}	O
static	O
int	O
fstype_known	int
=	O
0	int
;	O
char	O
*	O
filesystem_type	(*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))),*(char))->(*(char))
(	O
const	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
statp	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
,	O
const	O
char	O
*	O
path	*(char)
)	O
{	O
static	O
char	O
*	O
current_fstype	*(char)
=	O
NULL	O
;	O
static	O
dev_t	long
current_dev	long
;	O
if	O
(	O
current_fstype	*(char)
!=	O
NULL	O
)	O
{	O
if	O
(	O
fstype_known	int
&&	O
statp	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_dev	long
==	O
current_dev	long
)	O
return	O
current_fstype	*(char)
;	O
free	(*(void))->(void)
(	O
current_fstype	*(char)
)	O
;	O
}	O
current_dev	long
=	O
statp	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_dev	long
;	O
current_fstype	*(char)
=	O
file_system_type_uncached	(*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))),*(char))->(*(char))
(	O
statp	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
,	O
path	*(char)
)	O
;	O
return	O
current_fstype	*(char)
;	O
}	O
static	O
int	O
set_fstype_devno	(*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*`,*`,*`,*`,long,int,int,int,*`)))))->(int)
(	O
struct	O
mount_entry	struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`))))))
*	O
p	*(void)
)	O
{	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
stbuf	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
;	O
if	O
(	O
p	*(void)
->	O
me_dev	long
==	O
(	O
dev_t	long
)	O
-	O
1	int
)	O
{	O
set_stat_placeholders	(*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(void)
(	O
&	O
stbuf	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
;	O
if	O
(	O
0	int
==	O
(	O
options	struct(bool,bool,int,int,bool,bool,bool,bool,bool,bool,struct(long,long),struct(long,long),bool,int,long,enum(int,int,int),*((*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)),bool,int,*((int,*(char),*(*(char)))->(int)),short,enum(int,int,int,int,int,int,int,int,int,int,int))
.	O
xstat	*((*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int))
)	O
(	O
p	*(void)
->	O
me_mountdir	*(char)
,	O
&	O
stbuf	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
)	O
{	O
p	*(void)
->	O
me_dev	long
=	O
stbuf	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_dev	long
;	O
return	O
0	int
;	O
}	O
else	O
{	O
return	O
-	O
1	int
;	O
}	O
}	O
return	O
0	int
;	O
}	O
static	O
struct	O
mount_entry	struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`))))))
*	O
must_read_fs_list	(bool)->(*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*`,*`,*`,*`,long,int,int,int,*`)))))
(	O
bool	bool
need_fs_type	bool
)	O
{	O
struct	O
mount_entry	struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`))))))
*	O
entries	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
=	O
read_file_system_list	(bool)->(*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*`,*`,*`,*`,long,int,int,int,*`)))))
(	O
need_fs_type	bool
)	O
;	O
if	O
(	O
NULL	O
==	O
entries	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
)	O
{	O
error	(int,int,*(char))->(void)
(	O
EXIT_FAILURE	int
,	O
0	int
,	O
_	O
(	O
"Cannot read mounted file system list"	*(char)
)	O
)	O
;	O
}	O
return	O
entries	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
;	O
}	O
static	O
char	O
*	O
file_system_type_uncached	(*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))),*(char))->(*(char))
(	O
const	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
statp	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
,	O
const	O
char	O
*	O
path	*(char)
)	O
{	O
struct	O
mount_entry	struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`))))))
*	O
entries	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
,	O
*	O
entry	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
,	O
*	O
best	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
;	O
char	O
*	O
type	enum(int,int,int,int)
;	O
(	O
void	O
)	O
path	*(char)
;	O
best	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
=	O
NULL	O
;	O
entries	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
=	O
must_read_fs_list	(bool)->(*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*`,*`,*`,*`,long,int,int,int,*`)))))
(	O
true	int
)	O
;	O
for	O
(	O
type	enum(int,int,int,int)
=	O
NULL	O
,	O
entry	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
=	O
entries	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
;	O
entry	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
;	O
entry	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
=	O
entry	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_next	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
)	O
{	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
entry	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_type	*(char)
,	O
MNTTYPE_IGNORE	*(char)
)	O
)	O
continue	O
;	O
if	O
(	O
0	int
==	O
set_fstype_devno	(*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*`,*`,*`,*`,long,int,int,int,*`)))))->(int)
(	O
entry	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
)	O
)	O
{	O
if	O
(	O
entry	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_dev	long
==	O
statp	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_dev	long
)	O
{	O
best	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
=	O
entry	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
;	O
}	O
}	O
}	O
if	O
(	O
best	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
)	O
{	O
type	enum(int,int,int,int)
=	O
xstrdup	(*(char))->(*(char))
(	O
best	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_type	*(char)
)	O
;	O
}	O
free_file_system_list	(*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*`,*`,*`,*`,long,int,int,int,*`)))))->(void)
(	O
entries	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
)	O
;	O
fstype_known	int
=	O
(	O
type	enum(int,int,int,int)
!=	O
NULL	O
)	O
;	O
return	O
type	enum(int,int,int,int)
?	O
type	enum(int,int,int,int)
:	O
xstrdup	(*(char))->(*(char))
(	O
_	O
(	O
"unknown"	*(char)
)	O
)	O
;	O
}	O
char	O
*	O
get_mounted_filesystems	()->(*(char))
(	O
void	O
)	O
{	O
char	O
*	O
result	*(*(char))
=	O
NULL	O
;	O
size_t	long
alloc_size	long
=	O
0u	int
;	O
size_t	long
used	long
=	O
0u	int
;	O
struct	O
mount_entry	struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`))))))
*	O
entries	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
,	O
*	O
entry	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
;	O
void	O
*	O
p	*(void)
;	O
entries	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
=	O
must_read_fs_list	(bool)->(*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*`,*`,*`,*`,long,int,int,int,*`)))))
(	O
false	int
)	O
;	O
for	O
(	O
entry	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
=	O
entries	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
;	O
entry	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
;	O
entry	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
=	O
entry	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_next	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
)	O
{	O
size_t	long
len	long
;	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
entry	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_type	*(char)
,	O
MNTTYPE_IGNORE	*(char)
)	O
)	O
continue	O
;	O
len	long
=	O
strlen	(*(char))->(long)
(	O
entry	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_mountdir	*(char)
)	O
+	O
1	int
;	O
p	*(void)
=	O
extendbuf	(*(void),long,*(long))->(*(void))
(	O
result	*(*(char))
,	O
used	long
+	O
len	long
,	O
&	O
alloc_size	long
)	O
;	O
if	O
(	O
p	*(void)
)	O
{	O
result	*(*(char))
=	O
p	*(void)
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
&	O
result	*(*(char))
[	O
used	long
]	O
,	O
entry	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_mountdir	*(char)
)	O
;	O
used	long
+=	O
len	long
;	O
}	O
else	O
{	O
break	O
;	O
}	O
}	O
free_file_system_list	(*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*`,*`,*`,*`,long,int,int,int,*`)))))->(void)
(	O
entries	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
)	O
;	O
return	O
result	*(*(char))
;	O
}	O
dev_t	long
*	O
get_mounted_devices	(*(long))->(*(long))
(	O
size_t	long
*	O
n	long
)	O
{	O
size_t	long
alloc_size	long
=	O
0u	int
;	O
size_t	long
used	long
=	O
0u	int
;	O
struct	O
mount_entry	struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`))))))
*	O
entries	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
,	O
*	O
entry	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
;	O
dev_t	long
*	O
result	*(*(char))
=	O
NULL	O
;	O
for	O
(	O
entry	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
=	O
entries	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
=	O
read_file_system_list	(bool)->(*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*`,*`,*`,*`,long,int,int,int,*`)))))
(	O
false	int
)	O
;	O
entry	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
;	O
entry	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
=	O
entry	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_next	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
)	O
{	O
void	O
*	O
p	*(void)
=	O
extendbuf	(*(void),long,*(long))->(*(void))
(	O
result	*(*(char))
,	O
sizeof	O
(	O
dev_t	long
)	O
*	O
(	O
used	long
+	O
1	int
)	O
,	O
&	O
alloc_size	long
)	O
;	O
if	O
(	O
p	*(void)
)	O
{	O
result	*(*(char))
=	O
p	*(void)
;	O
if	O
(	O
0	int
==	O
set_fstype_devno	(*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*`,*`,*`,*`,long,int,int,int,*`)))))->(int)
(	O
entry	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
)	O
)	O
{	O
result	*(*(char))
[	O
used	long
]	O
=	O
entry	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_dev	long
;	O
++	O
used	long
;	O
}	O
}	O
else	O
{	O
free	(*(void))->(void)
(	O
result	*(*(char))
)	O
;	O
result	*(*(char))
=	O
NULL	O
;	O
}	O
}	O
free_file_system_list	(*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*`,*`,*`,*`,long,int,int,int,*`)))))->(void)
(	O
entries	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
)	O
;	O
if	O
(	O
result	*(*(char))
)	O
{	O
*	O
n	long
=	O
used	long
;	O
}	O
return	O
result	*(*(char))
;	O
}	O
