struct	O
snmp_pdu	struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int)))))
*	O
snmp_pdu_create	(int)->(*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*`,*`,int,char,union`)))))
(	O
int	O
type	*(char)
)	O
{	O
struct	O
snmp_pdu	struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int)))))
*	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
;	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
=	O
snmp_alloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
)	O
)	O
;	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
->	O
type	*(char)
=	O
type	*(char)
;	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
->	O
req_id	int
=	O
0	int
;	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
->	O
err_stat	int
=	O
0	int
;	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
->	O
err_ind	int
=	O
0	int
;	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
->	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
NULL	O
;	O
return	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
;	O
}	O
void	O
snmp_pdu_free	(*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*`,*`,int,char,union`)))))->(void)
(	O
struct	O
snmp_pdu	struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int)))))
*	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
)	O
{	O
if	O
(	O
!	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
)	O
return	O
;	O
snmp_var_free_list	(*(struct(*(struct(*`,*`,int,char,union`)),*(int),int,char,union(int,*(char),*(int)))))->(void)
(	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
->	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
)	O
;	O
snmp_free	(*(void))->(void)
(	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
)	O
;	O
}	O
void	O
snmp_pdu_add_var	(*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*`,*`,int,char,union`)))),*(struct(*(struct(*`,*`,int,char,union`)),*(int),int,char,union(int,*(char),*(int)))))->(void)
(	O
struct	O
snmp_pdu	struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int)))))
*	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
,	O
struct	O
snmp_var	struct(*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int)))),*(int),int,char,union(int,*(char),*(int)))
*	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
)	O
{	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
->	O
next	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
->	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
;	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
->	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
var	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
;	O
}	O
u_char	char
*	O
snmp_pdu_decode	(*(char),*(int),*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*`,*`,int,char,union`)))))->(*(char))
(	O
u_char	char
*	O
data	*(char)
,	O
int	O
*	O
length	*(int)
,	O
struct	O
snmp_pdu	struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int)))))
*	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
)	O
{	O
u_char	char
*	O
buf	*(char)
=	O
data	*(char)
;	O
u_char	char
type	*(char)
;	O
buf	*(char)
=	O
asn_decode_header	(*(char),*(int),*(char))->(*(char))
(	O
buf	*(char)
,	O
length	*(int)
,	O
&	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
->	O
type	*(char)
)	O
;	O
if	O
(	O
!	O
buf	*(char)
)	O
return	O
NULL	O
;	O
switch	O
(	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
->	O
type	*(char)
)	O
{	O
case	O
SNMP_PDU_RESPONSE	O
:	O
case	O
SNMP_PDU_GET	O
:	O
case	O
SNMP_PDU_GETNEXT	O
:	O
case	O
SNMP_PDU_SET	O
:	O
buf	*(char)
=	O
asn_decode_int	(*(char),*(int),*(char),*(int),int)->(*(char))
(	O
buf	*(char)
,	O
length	*(int)
,	O
&	O
type	*(char)
,	O
&	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
->	O
req_id	int
,	O
sizeof	O
(	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
->	O
req_id	int
)	O
)	O
;	O
if	O
(	O
!	O
buf	*(char)
)	O
break	O
;	O
buf	*(char)
=	O
asn_decode_int	(*(char),*(int),*(char),*(int),int)->(*(char))
(	O
buf	*(char)
,	O
length	*(int)
,	O
&	O
type	*(char)
,	O
&	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
->	O
err_stat	int
,	O
sizeof	O
(	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
->	O
err_stat	int
)	O
)	O
;	O
if	O
(	O
!	O
buf	*(char)
)	O
break	O
;	O
buf	*(char)
=	O
asn_decode_int	(*(char),*(int),*(char),*(int),int)->(*(char))
(	O
buf	*(char)
,	O
length	*(int)
,	O
&	O
type	*(char)
,	O
&	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
->	O
err_ind	int
,	O
sizeof	O
(	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
->	O
err_ind	int
)	O
)	O
;	O
break	O
;	O
default	O
:	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_UNKNOWN_REQ	int
)	O
;	O
buf	*(char)
=	O
NULL	O
;	O
}	O
return	O
buf	*(char)
;	O
}	O
u_char	char
*	O
snmp_pdu_encode	(*(char),*(int),*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*`,*`,int,char,union`)))))->(*(char))
(	O
u_char	char
*	O
data	*(char)
,	O
int	O
*	O
length	*(int)
,	O
struct	O
snmp_pdu	struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int)))))
*	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
)	O
{	O
u_char	char
*	O
buf	*(char)
=	O
data	*(char)
;	O
buf	*(char)
=	O
asn_encode_int	(*(char),*(int),char,int)->(*(char))
(	O
buf	*(char)
,	O
length	*(int)
,	O
(	O
ASN_UNIVERSAL	O
|	O
ASN_PRIMITIVE	O
|	O
ASN_INTEGER	O
)	O
,	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
->	O
req_id	int
)	O
;	O
BAIL_OUT	O
;	O
buf	*(char)
=	O
asn_encode_int	(*(char),*(int),char,int)->(*(char))
(	O
buf	*(char)
,	O
length	*(int)
,	O
(	O
ASN_UNIVERSAL	O
|	O
ASN_PRIMITIVE	O
|	O
ASN_INTEGER	O
)	O
,	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
->	O
err_stat	int
)	O
;	O
BAIL_OUT	O
;	O
buf	*(char)
=	O
asn_encode_int	(*(char),*(int),char,int)->(*(char))
(	O
buf	*(char)
,	O
length	*(int)
,	O
(	O
ASN_UNIVERSAL	O
|	O
ASN_PRIMITIVE	O
|	O
ASN_INTEGER	O
)	O
,	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
->	O
err_ind	int
)	O
;	O
BAIL_OUT	O
;	O
return	O
buf	*(char)
;	O
}	O
