static	O
inline	O
void	O
downheap	(*(long),*(void),long,long,long,*((*(void),*(void))->(int)))->(void)
(	O
size_t	long
*	O
p	*(struct(long,*(long)))
,	O
const	O
void	O
*	O
data	*(long)
,	O
const	O
size_t	long
size	long
,	O
const	O
size_t	long
N	long
,	O
size_t	long
k	long
,	O
gsl_comparison_fn_t	*((*(void),*(void))->(int))
compare	*((*(void),*(void))->(int))
)	O
;	O
static	O
inline	O
void	O
downheap	(*(long),*(void),long,long,long,*((*(void),*(void))->(int)))->(void)
(	O
size_t	long
*	O
p	*(struct(long,*(long)))
,	O
const	O
void	O
*	O
data	*(long)
,	O
const	O
size_t	long
size	long
,	O
const	O
size_t	long
N	long
,	O
size_t	long
k	long
,	O
gsl_comparison_fn_t	*((*(void),*(void))->(int))
compare	*((*(void),*(void))->(int))
)	O
{	O
const	O
size_t	long
pki	long
=	O
p	*(struct(long,*(long)))
[	O
k	long
]	O
;	O
while	O
(	O
k	long
<=	O
N	long
/	O
2	int
)	O
{	O
size_t	long
j	long
=	O
2	int
*	O
k	long
;	O
if	O
(	O
j	long
<	O
N	long
&&	O
CMP	O
(	O
data	*(long)
,	O
size	long
,	O
p	*(struct(long,*(long)))
[	O
j	long
]	O
,	O
p	*(struct(long,*(long)))
[	O
j	long
+	O
1	int
]	O
)	O
<	O
0	int
)	O
{	O
j	long
++	O
;	O
}	O
if	O
(	O
CMP	O
(	O
data	*(long)
,	O
size	long
,	O
pki	long
,	O
p	*(struct(long,*(long)))
[	O
j	long
]	O
)	O
>=	O
0	int
)	O
{	O
break	O
;	O
}	O
p	*(struct(long,*(long)))
[	O
k	long
]	O
=	O
p	*(struct(long,*(long)))
[	O
j	long
]	O
;	O
k	long
=	O
j	long
;	O
}	O
p	*(struct(long,*(long)))
[	O
k	long
]	O
=	O
pki	long
;	O
}	O
int	O
gsl_heapsort_index	(*(long),*(void),long,long,*((*(void),*(void))->(int)))->(int)
(	O
size_t	long
*	O
p	*(struct(long,*(long)))
,	O
const	O
void	O
*	O
data	*(long)
,	O
size_t	long
count	long
,	O
size_t	long
size	long
,	O
gsl_comparison_fn_t	*((*(void),*(void))->(int))
compare	*((*(void),*(void))->(int))
)	O
{	O
size_t	long
i	long
,	O
k	long
,	O
N	long
;	O
if	O
(	O
count	long
==	O
0	int
)	O
{	O
return	O
GSL_SUCCESS	int
;	O
}	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
count	long
;	O
i	long
++	O
)	O
{	O
p	*(struct(long,*(long)))
[	O
i	long
]	O
=	O
i	long
;	O
}	O
N	long
=	O
count	long
-	O
1	int
;	O
k	long
=	O
N	long
/	O
2	int
;	O
k	long
++	O
;	O
do	O
{	O
k	long
--	O
;	O
downheap	(*(long),*(void),long,long,long,*((*(void),*(void))->(int)))->(void)
(	O
p	*(struct(long,*(long)))
,	O
data	*(long)
,	O
size	long
,	O
N	long
,	O
k	long
,	O
compare	*((*(void),*(void))->(int))
)	O
;	O
}	O
while	O
(	O
k	long
>	O
0	int
)	O
;	O
while	O
(	O
N	long
>	O
0	int
)	O
{	O
size_t	long
tmp	long
=	O
p	*(struct(long,*(long)))
[	O
0	int
]	O
;	O
p	*(struct(long,*(long)))
[	O
0	int
]	O
=	O
p	*(struct(long,*(long)))
[	O
N	long
]	O
;	O
p	*(struct(long,*(long)))
[	O
N	long
]	O
=	O
tmp	long
;	O
N	long
--	O
;	O
downheap	(*(long),*(void),long,long,long,*((*(void),*(void))->(int)))->(void)
(	O
p	*(struct(long,*(long)))
,	O
data	*(long)
,	O
size	long
,	O
N	long
,	O
0	int
,	O
compare	*((*(void),*(void))->(int))
)	O
;	O
}	O
return	O
GSL_SUCCESS	int
;	O
}	O
