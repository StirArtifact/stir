void	O
mu_gdb_bt	()->(void)
(	O
)	O
{	O
int	O
i	int
;	O
pid_t	int
master_pid	int
=	O
getpid	()->(int)
(	O
)	O
;	O
pid_t	int
pid	int
;	O
static	O
char	O
buf	*(char)
[	O
1024	int
]	O
;	O
static	O
char	O
fname	array(char)
[	O
1024	int
]	O
;	O
int	O
fd	int
;	O
char	O
*	O
argv	*(*(char))
[	O
8	int
]	O
;	O
if	O
(	O
!	O
mu_program_name	*(char)
)	O
abort	()->(void)
(	O
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
fname	array(char)
,	O
"/tmp/mailutils.%s.%lu"	*(char)
,	O
mu_program_name	*(char)
,	O
(	O
unsigned	O
long	O
)	O
master_pid	int
)	O
;	O
pid	int
=	O
fork	()->(int)
(	O
)	O
;	O
if	O
(	O
pid	int
==	O
(	O
pid_t	int
)	O
-	O
1	int
)	O
abort	()->(void)
(	O
)	O
;	O
if	O
(	O
pid	int
)	O
{	O
sleep	(int)->(int)
(	O
10	int
)	O
;	O
abort	()->(void)
(	O
)	O
;	O
}	O
for	O
(	O
i	int
=	O
mu_getmaxfd	()->(int)
(	O
)	O
;	O
i	int
>=	O
0	int
;	O
i	int
--	O
)	O
close	(int)->(int)
(	O
i	int
)	O
;	O
fd	int
=	O
open	(*(char),int)->(int)
(	O
fname	array(char)
,	O
O_WRONLY	int
|	O
O_CREAT	int
,	O
0600	int
)	O
;	O
if	O
(	O
fd	int
==	O
-	O
1	int
)	O
abort	()->(void)
(	O
)	O
;	O
dup2	(int,int)->(int)
(	O
fd	int
,	O
1	int
)	O
;	O
dup2	(int,int)->(int)
(	O
fd	int
,	O
2	int
)	O
;	O
close	(int)->(int)
(	O
fd	int
)	O
;	O
argv	*(*(char))
[	O
0	int
]	O
=	O
"/usr/bin/gdb"	*(char)
;	O
argv	*(*(char))
[	O
1	int
]	O
=	O
(	O
char	O
*	O
)	O
mu_full_program_name	*(char)
;	O
sprintf	(*(char),*(char))->(int)
(	O
buf	*(char)
,	O
"%lu"	*(char)
,	O
(	O
unsigned	O
long	O
)	O
master_pid	int
)	O
;	O
argv	*(*(char))
[	O
2	int
]	O
=	O
buf	*(char)
;	O
argv	*(*(char))
[	O
3	int
]	O
=	O
"-ex"	*(char)
;	O
argv	*(*(char))
[	O
4	int
]	O
=	O
"bt"	*(char)
;	O
argv	*(*(char))
[	O
5	int
]	O
=	O
"-ex"	*(char)
;	O
argv	*(*(char))
[	O
6	int
]	O
=	O
"kill"	*(char)
;	O
argv	*(*(char))
[	O
7	int
]	O
=	O
NULL	O
;	O
execvp	(*(char),array(*(char)))->(int)
(	O
argv	*(*(char))
[	O
0	int
]	O
,	O
argv	*(*(char))
)	O
;	O
abort	()->(void)
(	O
)	O
;	O
}	O
