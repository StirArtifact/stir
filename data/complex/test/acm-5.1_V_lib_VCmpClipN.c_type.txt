void	O
VComputeClipNormals	(*(struct(*(struct(*`,long,*`,int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*`,int,short,short,short,short,int,struct`,*`,*`,*`,*`,*`,*`,int,int,int,*`,int,int,*`,int,int,*`,int,int)),long,long,struct(array(array(double))),*(struct(short,short,short,struct`,*`,*`,*`,double)),array(struct(double,double,double)),double,double,double,double,int,int,struct(short,short),struct(double,double,double),*(struct),int,long,long,long,*(struct),array(long),int,int,long,long,long,*(short),*(short),array(short),struct(long,short,short,short,char,char),array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*(struct(*`,long,int,long,long,long,int,int)),*(struct(short,long,*`,*`)),long,long,*(()->(void)),*((*`,long,*`)->(int)),*((*`,int,int,int,int,short)->(void)),*((*`,*`,int,short)->(void)),*((*`,long,*`,*`)->(void)),*((*`,int,int,int,int,short)->(void)),*((*`,*`)->(void)),*((*`,int,int,int,int)->(void)),*((*`)->(void)),long)))->(void)
(	O
Viewport	struct(*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*`,*`,int)),*(struct(*`,*`,int)),*(struct(*`,*`,int)),*(struct(*`)),*(struct(*`)),*(struct(short,long,long,*`,*`,*`)),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int)),long,long,struct(array(array(double))),*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*`,short,short,*`)),*(struct(*`,short,short,*`)),double)),array(struct(double,double,double)),double,double,double,double,int,int,struct(short,short),struct(double,double,double),*(struct),int,long,long,long,*(struct),array(long),int,int,long,long,long,*(short),*(short),array(short),struct(long,short,short,short,char,char),array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*(struct(*(struct(int,*`,*`,*`)),long,int,long,long,long,int,int)),*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),long,long,*(()->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),long,*(struct(long,short,short,short,char,char)))->(int)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),int,int,int,int,short)->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),*(struct(short,short,short,short)),int,short)->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),long,*(struct),*(struct(short,short,short,struct`,*`,*`,*`,double)))->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),int,int,int,int,short)->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),*(struct))->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),int,int,int,int)->(void)),*((*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)))->(void)),long)
*	O
v	struct(double,double,double)
)	O
{	O
VPoint	struct(double,double,double)
*	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
,	O
*	O
q	*(struct(double,double,double))
;	O
int	O
i	int
,	O
max	int
;	O
double	O
mag	double
;	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
=	O
v	struct(double,double,double)
->	O
clipPoly	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
vertex	*(struct(double,double,double))
;	O
q	*(struct(double,double,double))
=	O
v	struct(double,double,double)
->	O
clipNormals	array(struct(double,double,double))
;	O
max	int
=	O
(	O
v	struct(double,double,double)
->	O
clipPoly	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
numVtces	short
>	O
4	int
)	O
?	O
4	int
:	O
v	struct(double,double,double)
->	O
clipPoly	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
numVtces	short
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
max	int
;	O
++	O
i	int
)	O
{	O
mag	double
=	O
sqrt	(double)->(double)
(	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
x	double
*	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
x	double
+	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
y	double
*	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
y	double
+	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
z	double
*	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
z	double
)	O
;	O
q	*(struct(double,double,double))
->	O
x	double
=	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
x	double
/	O
mag	double
;	O
q	*(struct(double,double,double))
->	O
y	double
=	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
y	double
/	O
mag	double
;	O
q	*(struct(double,double,double))
->	O
z	double
=	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
z	double
/	O
mag	double
;	O
q	*(struct(double,double,double))
++	O
;	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
++	O
;	O
}	O
}	O
