struct	O
dynvec	struct(*(*(void)),int,int)
*	O
make_dynvec	(int)->(*(struct(*(*(void)),int,int)))
(	O
int	O
n	long
)	O
{	O
struct	O
dynvec	struct(*(*(void)),int,int)
*	O
dv	*(struct(*(*(void)),int,int))
=	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
dynvec	struct(*(*(void)),int,int)
)	O
*	O
1	int
)	O
;	O
dv	*(struct(*(*(void)),int,int))
->	O
dv_vec	*(*(void))
=	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
(	O
void	O
*	O
)	O
*	O
n	long
)	O
;	O
dv	*(struct(*(*(void)),int,int))
->	O
dv_capacity	int
=	O
n	long
;	O
dv	*(struct(*(*(void)),int,int))
->	O
dv_fill	int
=	O
0	int
;	O
return	O
dv	*(struct(*(*(void)),int,int))
;	O
}	O
void	O
dynvec_free	(*(struct(*(*(void)),int,int)))->(void)
(	O
struct	O
dynvec	struct(*(*(void)),int,int)
*	O
dv	*(struct(*(*(void)),int,int))
)	O
{	O
free	(*(void))->(void)
(	O
dv	*(struct(*(*(void)),int,int))
->	O
dv_vec	*(*(void))
)	O
;	O
free	(*(void))->(void)
(	O
dv	*(struct(*(*(void)),int,int))
)	O
;	O
}	O
void	O
dynvec_freeze	(*(struct(*(*(void)),int,int)))->(void)
(	O
struct	O
dynvec	struct(*(*(void)),int,int)
*	O
dv	*(struct(*(*(void)),int,int))
)	O
{	O
if	O
(	O
dv	*(struct(*(*(void)),int,int))
->	O
dv_fill	int
==	O
dv	*(struct(*(*(void)),int,int))
->	O
dv_capacity	int
)	O
return	O
;	O
dv	*(struct(*(*(void)),int,int))
->	O
dv_capacity	int
=	O
dv	*(struct(*(*(void)),int,int))
->	O
dv_fill	int
;	O
dv	*(struct(*(*(void)),int,int))
->	O
dv_vec	*(*(void))
=	O
xrealloc	(*(void),long)->(*(void))
(	O
dv	*(struct(*(*(void)),int,int))
->	O
dv_vec	*(*(void))
,	O
sizeof	O
(	O
void	O
*	O
)	O
*	O
dv	*(struct(*(*(void)),int,int))
->	O
dv_capacity	int
)	O
;	O
}	O
void	O
dynvec_append	(*(struct(*(*(void)),int,int)),*(void))->(void)
(	O
struct	O
dynvec	struct(*(*(void)),int,int)
*	O
dv	*(struct(*(*(void)),int,int))
,	O
void	O
*	O
element	*(void)
)	O
{	O
if	O
(	O
dv	*(struct(*(*(void)),int,int))
->	O
dv_fill	int
==	O
dv	*(struct(*(*(void)),int,int))
->	O
dv_capacity	int
)	O
{	O
dv	*(struct(*(*(void)),int,int))
->	O
dv_capacity	int
*=	O
2	int
;	O
dv	*(struct(*(*(void)),int,int))
->	O
dv_vec	*(*(void))
=	O
xrealloc	(*(void),long)->(*(void))
(	O
dv	*(struct(*(*(void)),int,int))
->	O
dv_vec	*(*(void))
,	O
sizeof	O
(	O
void	O
*	O
)	O
*	O
dv	*(struct(*(*(void)),int,int))
->	O
dv_capacity	int
)	O
;	O
}	O
dv	*(struct(*(*(void)),int,int))
->	O
dv_vec	*(*(void))
[	O
dv	*(struct(*(*(void)),int,int))
->	O
dv_fill	int
++	O
]	O
=	O
element	*(void)
;	O
}	O
