STRINGTYPE	O
df_name_data_field	struct(long,enum(int,int,int),*(char))
=	O
{	O
10	int
,	O
DStr_constant	int
,	O
"data-field"	*(char)
}	O
;	O
STRINGTYPE	O
df_name_reference_field	struct(long,enum(int,int,int),*(char))
=	O
{	O
15	int
,	O
DStr_constant	int
,	O
"reference-field"	*(char)
}	O
;	O
STRINGTYPE	O
df_name_hierarchy_field	struct(long,enum(int,int,int),*(char))
=	O
{	O
21	int
,	O
DStr_constant	int
,	O
"prior-reference-field"	*(char)
}	O
;	O
STRINGTYPE	O
df_name_sum_field	struct(long,enum(int,int,int),*(char))
=	O
{	O
9	int
,	O
DStr_constant	int
,	O
"sum-field"	*(char)
}	O
;	O
STRINGTYPE	O
df_name_input_field	struct(long,enum(int,int,int),*(char))
=	O
{	O
11	int
,	O
DStr_constant	int
,	O
"input-field"	*(char)
}	O
;	O
STRINGTYPE	O
df_name_input_record	struct(long,enum(int,int,int),*(char))
=	O
{	O
12	int
,	O
DStr_constant	int
,	O
"input-record"	*(char)
}	O
;	O
int	O
create_scheme_string_variable	(*(struct(long,enum(int,int,int),*(char))),int,*(struct(long,enum(int,int,int),*(char))))->(int)
(	O
name	*(struct(long,enum(int,int,int),*(char)))
,	O
number	int
,	O
value	*(struct(long,enum(int,int,int),*(char)))
)	O
STRINGTYPE	O
*	O
name	*(struct(long,enum(int,int,int),*(char)))
;	O
int	O
number	int
;	O
STRINGTYPE	O
*	O
value	*(struct(long,enum(int,int,int),*(char)))
;	O
{	O
char	O
*	O
command	*(char)
;	O
char	O
*	O
var_name	*(char)
;	O
return	O
EXIT_SUCCESS	int
;	O
}	O
int	O
eval_scheme_boolean_function	(*(char))->(int)
(	O
command	*(char)
)	O
char	O
*	O
command	*(char)
;	O
{	O
}	O
STRINGTYPE	O
*	O
eval_scheme_string_function	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
command	*(char)
)	O
char	O
*	O
command	*(char)
;	O
{	O
}	O
