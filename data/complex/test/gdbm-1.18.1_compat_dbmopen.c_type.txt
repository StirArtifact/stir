static	O
unsigned	O
getint	(*(char))->(int)
(	O
const	O
unsigned	O
char	O
*	O
cp	*(char)
)	O
{	O
return	O
(	O
cp	*(char)
[	O
0	int
]	O
<<	O
24	int
)	O
+	O
(	O
cp	*(char)
[	O
1	int
]	O
<<	O
16	int
)	O
+	O
(	O
cp	*(char)
[	O
2	int
]	O
<<	O
8	int
)	O
+	O
cp	*(char)
[	O
3	int
]	O
;	O
}	O
static	O
void	O
putint	(*(char),int)->(void)
(	O
unsigned	O
char	O
*	O
cp	*(char)
,	O
unsigned	O
n	int
)	O
{	O
cp	*(char)
[	O
0	int
]	O
=	O
(	O
n	int
>>	O
24	int
)	O
&	O
0xff	int
;	O
cp	*(char)
[	O
1	int
]	O
=	O
(	O
n	int
>>	O
16	int
)	O
&	O
0xff	int
;	O
cp	*(char)
[	O
2	int
]	O
=	O
(	O
n	int
>>	O
8	int
)	O
&	O
0xff	int
;	O
cp	*(char)
[	O
3	int
]	O
=	O
n	int
&	O
0xff	int
;	O
}	O
static	O
int	O
ndbm_open_dir_file0	(*(char),int,int)->(int)
(	O
const	O
char	O
*	O
file_name	*(char)
,	O
int	O
pagfd	int
,	O
int	O
mode	int
)	O
{	O
int	O
fd	int
=	O
-	O
1	int
;	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
,	O
pagst	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
;	O
unsigned	O
char	O
dirbuf	array(char)
[	O
DEF_DIR_SIZE	int
]	O
;	O
int	O
flags	int
=	O
(	O
mode	int
&	O
GDBM_OPENMASK	int
)	O
==	O
GDBM_READER	int
?	O
O_RDONLY	int
:	O
O_RDWR	int
;	O
if	O
(	O
mode	int
&	O
GDBM_CLOEXEC	int
)	O
flags	int
|=	O
O_CLOEXEC	O
;	O
if	O
(	O
fstat	(int,*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
pagfd	int
,	O
&	O
pagst	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
)	O
{	O
gdbm_set_errno	(*(struct),int,int)->(void)
(	O
NULL	O
,	O
GDBM_FILE_OPEN_ERROR	int
,	O
TRUE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
(	O
file_name	*(char)
,	O
&	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
==	O
0	int
)	O
{	O
if	O
(	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_nlink	long
>=	O
2	int
)	O
{	O
if	O
(	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_dev	long
==	O
pagst	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_dev	long
&&	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_ino	long
==	O
pagst	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_ino	long
)	O
{	O
if	O
(	O
unlink	(*(char))->(int)
(	O
file_name	*(char)
)	O
)	O
{	O
if	O
(	O
(	O
mode	int
&	O
GDBM_OPENMASK	int
)	O
==	O
GDBM_READER	int
)	O
return	O
pagfd	int
;	O
else	O
if	O
(	O
errno	O
!=	O
ENOENT	int
)	O
{	O
gdbm_set_errno	(*(struct),int,int)->(void)
(	O
NULL	O
,	O
GDBM_FILE_OPEN_ERROR	int
,	O
TRUE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
}	O
else	O
{	O
gdbm_set_errno	(*(struct),int,int)->(void)
(	O
NULL	O
,	O
GDBM_FILE_OPEN_ERROR	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
else	O
if	O
(	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_size	long
==	O
0	int
)	O
;	O
else	O
if	O
(	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_size	long
!=	O
DEF_DIR_SIZE	int
)	O
{	O
gdbm_set_errno	(*(struct),int,int)->(void)
(	O
NULL	O
,	O
GDBM_BAD_MAGIC_NUMBER	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
fd	int
=	O
open	(*(char),int)->(int)
(	O
file_name	*(char)
,	O
flags	int
)	O
;	O
if	O
(	O
fd	int
==	O
-	O
1	int
)	O
{	O
gdbm_set_errno	(*(struct),int,int)->(void)
(	O
NULL	O
,	O
GDBM_FILE_OPEN_ERROR	int
,	O
FALSE	int
)	O
;	O
return	O
fd	int
;	O
}	O
if	O
(	O
read	(int,*(void),long)->(long)
(	O
fd	int
,	O
dirbuf	array(char)
,	O
sizeof	O
(	O
dirbuf	array(char)
)	O
)	O
!=	O
sizeof	O
(	O
dirbuf	array(char)
)	O
)	O
{	O
gdbm_set_errno	(*(struct),int,int)->(void)
(	O
NULL	O
,	O
GDBM_FILE_OPEN_ERROR	int
,	O
FALSE	int
)	O
;	O
close	(int)->(int)
(	O
fd	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
getint	(*(char))->(int)
(	O
dirbuf	array(char)
)	O
==	O
GDBM_DIR_MAGIC	int
)	O
{	O
int	O
v	array(int)
[	O
3	int
]	O
;	O
v	array(int)
[	O
0	int
]	O
=	O
getint	(*(char))->(int)
(	O
dirbuf	array(char)
+	O
4	int
)	O
;	O
v	array(int)
[	O
1	int
]	O
=	O
getint	(*(char))->(int)
(	O
dirbuf	array(char)
+	O
8	int
)	O
;	O
v	array(int)
[	O
2	int
]	O
=	O
getint	(*(char))->(int)
(	O
dirbuf	array(char)
+	O
12	int
)	O
;	O
if	O
(	O
gdbm_version_cmp	(array(int),array(int))->(int)
(	O
v	array(int)
,	O
gdbm_version_number	array(int)
)	O
<=	O
0	int
)	O
return	O
fd	int
;	O
}	O
close	(int)->(int)
(	O
fd	int
)	O
;	O
gdbm_set_errno	(*(struct),int,int)->(void)
(	O
NULL	O
,	O
GDBM_BAD_MAGIC_NUMBER	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
fd	int
=	O
open	(*(char),int)->(int)
(	O
file_name	*(char)
,	O
flags	int
|	O
O_CREAT	int
,	O
pagst	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_mode	int
&	O
0777	int
)	O
;	O
if	O
(	O
fd	int
>=	O
0	int
)	O
{	O
putint	(*(char),int)->(void)
(	O
dirbuf	array(char)
,	O
GDBM_DIR_MAGIC	int
)	O
;	O
putint	(*(char),int)->(void)
(	O
dirbuf	array(char)
+	O
4	int
,	O
gdbm_version_number	array(int)
[	O
0	int
]	O
)	O
;	O
putint	(*(char),int)->(void)
(	O
dirbuf	array(char)
+	O
8	int
,	O
gdbm_version_number	array(int)
[	O
1	int
]	O
)	O
;	O
putint	(*(char),int)->(void)
(	O
dirbuf	array(char)
+	O
12	int
,	O
gdbm_version_number	array(int)
[	O
2	int
]	O
)	O
;	O
if	O
(	O
write	(int,*(void),long)->(long)
(	O
fd	int
,	O
dirbuf	array(char)
,	O
sizeof	O
(	O
dirbuf	array(char)
)	O
)	O
!=	O
sizeof	O
(	O
dirbuf	array(char)
)	O
)	O
{	O
gdbm_set_errno	(*(struct),int,int)->(void)
(	O
NULL	O
,	O
GDBM_FILE_WRITE_ERROR	int
,	O
FALSE	int
)	O
;	O
close	(int)->(int)
(	O
fd	int
)	O
;	O
fd	int
=	O
-	O
1	int
;	O
}	O
}	O
return	O
fd	int
;	O
}	O
static	O
int	O
ndbm_open_dir_file	(*(char),int,int)->(int)
(	O
const	O
char	O
*	O
base	*(char)
,	O
int	O
pagfd	int
,	O
int	O
mode	int
)	O
{	O
char	O
*	O
file_name	*(char)
=	O
malloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
base	*(char)
)	O
+	O
sizeof	O
(	O
DIRSUF	*(char)
)	O
)	O
;	O
int	O
fd	int
;	O
if	O
(	O
!	O
file_name	*(char)
)	O
{	O
gdbm_set_errno	(*(struct),int,int)->(void)
(	O
NULL	O
,	O
GDBM_MALLOC_ERROR	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
fd	int
=	O
ndbm_open_dir_file0	(*(char),int,int)->(int)
(	O
strcat	(*(char),*(char))->(*(char))
(	O
strcpy	(*(char),*(char))->(*(char))
(	O
file_name	*(char)
,	O
base	*(char)
)	O
,	O
DIRSUF	*(char)
)	O
,	O
pagfd	int
,	O
mode	int
)	O
;	O
free	(*(void))->(void)
(	O
file_name	*(char)
)	O
;	O
return	O
fd	int
;	O
}	O
DBM	struct(*(struct),int,struct(*(char),int),*(char),int)
*	O
dbm_open	(*(char),int,int)->(*(struct(*(struct),int,struct(*(char),int),*(char),int)))
(	O
char	O
*	O
file	*(struct)
,	O
int	O
flags	int
,	O
int	O
mode	int
)	O
{	O
char	O
*	O
pag_file	*(char)
;	O
DBM	struct(*(struct),int,struct(*(char),int),*(char),int)
*	O
dbm	*(struct(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct`),*(long),*(struct`),long,long,*(struct`),int,*(struct`),int,int,int,int,long,*(void),long,long,long)),int,struct(*(char),int),*(char),int))
=	O
NULL	O
;	O
int	O
open_flags	int
;	O
int	O
f	int
;	O
pag_file	*(char)
=	O
(	O
char	O
*	O
)	O
malloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
file	*(struct)
)	O
+	O
5	int
)	O
;	O
if	O
(	O
!	O
pag_file	*(char)
)	O
{	O
gdbm_set_errno	(*(struct),int,int)->(void)
(	O
NULL	O
,	O
GDBM_MALLOC_ERROR	int
,	O
FALSE	int
)	O
;	O
return	O
NULL	O
;	O
}	O
strcpy	(*(char),*(char))->(*(char))
(	O
pag_file	*(char)
,	O
file	*(struct)
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
pag_file	*(char)
,	O
".pag"	*(char)
)	O
;	O
f	int
=	O
flags	int
&	O
(	O
O_RDONLY	int
|	O
O_RDWR	int
|	O
O_CREAT	int
|	O
O_TRUNC	int
)	O
;	O
if	O
(	O
f	int
==	O
O_RDONLY	int
)	O
{	O
open_flags	int
=	O
GDBM_READER	int
;	O
mode	int
=	O
0	int
;	O
}	O
else	O
if	O
(	O
f	int
==	O
(	O
O_RDWR	int
|	O
O_CREAT	int
)	O
)	O
{	O
open_flags	int
=	O
GDBM_WRCREAT	int
;	O
}	O
else	O
if	O
(	O
(	O
f	int
&	O
O_TRUNC	int
)	O
==	O
O_TRUNC	int
)	O
{	O
open_flags	int
=	O
GDBM_NEWDB	int
;	O
}	O
else	O
{	O
open_flags	int
=	O
GDBM_WRITER	int
;	O
mode	int
=	O
0	int
;	O
}	O
if	O
(	O
flags	int
&	O
O_CLOEXEC	O
)	O
open_flags	int
|=	O
GDBM_CLOEXEC	int
;	O
open_flags	int
|=	O
GDBM_NOLOCK	int
;	O
dbm	*(struct(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct`),*(long),*(struct`),long,long,*(struct`),int,*(struct`),int,int,int,int,long,*(void),long,long,long)),int,struct(*(char),int),*(char),int))
=	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
*	O
dbm	*(struct(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct`),*(long),*(struct`),long,long,*(struct`),int,*(struct`),int,int,int,int,long,*(void),long,long,long)),int,struct(*(char),int),*(char),int))
)	O
)	O
;	O
if	O
(	O
!	O
dbm	*(struct(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct`),*(long),*(struct`),long,long,*(struct`),int,*(struct`),int,int,int,int,long,*(void),long,long,long)),int,struct(*(char),int),*(char),int))
)	O
{	O
free	(*(void))->(void)
(	O
pag_file	*(char)
)	O
;	O
gdbm_set_errno	(*(struct),int,int)->(void)
(	O
NULL	O
,	O
GDBM_MALLOC_ERROR	int
,	O
FALSE	int
)	O
;	O
return	O
NULL	O
;	O
}	O
dbm	*(struct(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct`),*(long),*(struct`),long,long,*(struct`),int,*(struct`),int,int,int,int,long,*(void),long,long,long)),int,struct(*(char),int),*(char),int))
->	O
file	*(struct)
=	O
gdbm_open	(*(char),int,int,int,*((*(char))->(void)))->(*(struct))
(	O
pag_file	*(char)
,	O
0	int
,	O
open_flags	int
,	O
mode	int
,	O
NULL	O
)	O
;	O
if	O
(	O
dbm	*(struct(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct`),*(long),*(struct`),long,long,*(struct`),int,*(struct`),int,int,int,int,long,*(void),long,long,long)),int,struct(*(char),int),*(char),int))
->	O
file	*(struct)
==	O
NULL	O
)	O
{	O
gdbm_set_errno	(*(struct),int,int)->(void)
(	O
NULL	O
,	O
GDBM_FILE_OPEN_ERROR	int
,	O
FALSE	int
)	O
;	O
free	(*(void))->(void)
(	O
dbm	*(struct(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct`),*(long),*(struct`),long,long,*(struct`),int,*(struct`),int,int,int,int,long,*(void),long,long,long)),int,struct(*(char),int),*(char),int))
)	O
;	O
dbm	*(struct(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct`),*(long),*(struct`),long,long,*(struct`),int,*(struct`),int,int,int,int,long,*(void),long,long,long)),int,struct(*(char),int),*(char),int))
=	O
NULL	O
;	O
}	O
else	O
{	O
dbm	*(struct(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct`),*(long),*(struct`),long,long,*(struct`),int,*(struct`),int,int,int,int,long,*(void),long,long,long)),int,struct(*(char),int),*(char),int))
->	O
dirfd	int
=	O
ndbm_open_dir_file	(*(char),int,int)->(int)
(	O
file	*(struct)
,	O
dbm	*(struct(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct`),*(long),*(struct`),long,long,*(struct`),int,*(struct`),int,int,int,int,long,*(void),long,long,long)),int,struct(*(char),int),*(char),int))
->	O
file	*(struct)
->	O
desc	int
,	O
open_flags	int
)	O
;	O
if	O
(	O
dbm	*(struct(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct`),*(long),*(struct`),long,long,*(struct`),int,*(struct`),int,int,int,int,long,*(void),long,long,long)),int,struct(*(char),int),*(char),int))
->	O
dirfd	int
==	O
-	O
1	int
)	O
{	O
gdbm_close	(*(struct))->(int)
(	O
dbm	*(struct(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct`),*(long),*(struct`),long,long,*(struct`),int,*(struct`),int,int,int,int,long,*(void),long,long,long)),int,struct(*(char),int),*(char),int))
->	O
file	*(struct)
)	O
;	O
free	(*(void))->(void)
(	O
dbm	*(struct(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct`),*(long),*(struct`),long,long,*(struct`),int,*(struct`),int,int,int,int,long,*(void),long,long,long)),int,struct(*(char),int),*(char),int))
)	O
;	O
dbm	*(struct(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct`),*(long),*(struct`),long,long,*(struct`),int,*(struct`),int,int,int,int,long,*(void),long,long,long)),int,struct(*(char),int),*(char),int))
=	O
NULL	O
;	O
}	O
}	O
free	(*(void))->(void)
(	O
pag_file	*(char)
)	O
;	O
return	O
dbm	*(struct(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct`),*(long),*(struct`),long,long,*(struct`),int,*(struct`),int,int,int,int,long,*(void),long,long,long)),int,struct(*(char),int),*(char),int))
;	O
}	O
