int	O
mu_getpass	(*(struct),*(struct),*(char),*(*(char)))->(int)
(	O
mu_stream_t	*(struct)
in	*(struct)
,	O
mu_stream_t	*(struct)
out	*(struct)
,	O
const	O
char	O
*	O
prompt	*(char)
,	O
char	O
*	O
*	O
passptr	*(*(char))
)	O
{	O
int	O
status	int
;	O
int	O
echo_state	int
=	O
0	int
;	O
size_t	long
size	long
=	O
0	int
;	O
char	O
*	O
buf	*(void)
=	O
NULL	O
;	O
status	int
=	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
out	*(struct)
,	O
prompt	*(char)
,	O
strlen	(*(char))->(long)
(	O
prompt	*(char)
)	O
,	O
NULL	O
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
mu_stream_flush	(*(struct))->(int)
(	O
out	*(struct)
)	O
;	O
status	int
=	O
mu_stream_ioctl	(*(struct),int,int,*(void))->(int)
(	O
in	*(struct)
,	O
MU_IOCTL_ECHO	int
,	O
MU_IOCTL_OP_SET	int
,	O
&	O
echo_state	int
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
echo_state	int
=	O
1	int
;	O
status	int
=	O
mu_stream_getline	(*(struct),*(*(char)),*(long),*(long))->(int)
(	O
in	*(struct)
,	O
&	O
buf	*(void)
,	O
&	O
size	long
,	O
NULL	O
)	O
;	O
if	O
(	O
echo_state	int
)	O
{	O
mu_stream_ioctl	(*(struct),int,int,*(void))->(int)
(	O
in	*(struct)
,	O
MU_IOCTL_ECHO	int
,	O
MU_IOCTL_OP_SET	int
,	O
&	O
echo_state	int
)	O
;	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
out	*(struct)
,	O
"\n"	*(char)
,	O
1	int
,	O
NULL	O
)	O
;	O
}	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
mu_rtrim_cset	(*(char),*(char))->(long)
(	O
buf	*(void)
,	O
"\n"	*(char)
)	O
;	O
*	O
passptr	*(*(char))
=	O
buf	*(void)
;	O
}	O
return	O
0	int
;	O
}	O
