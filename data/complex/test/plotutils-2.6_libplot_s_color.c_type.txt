static	O
const	O
plColorNameInfo	struct(*(char),char,char,char)
_svg_colornames	array(struct(*(char),char,char,char))
[	O
NUM_SVG_COLORNAMES	int
+	O
1	int
]	O
=	O
{	O
{	O
"aqua"	*(char)
,	O
0x00	int
,	O
0xff	int
,	O
0xff	int
}	O
,	O
{	O
"black"	*(char)
,	O
0x00	int
,	O
0x00	int
,	O
0x00	int
}	O
,	O
{	O
"blue"	*(char)
,	O
0x00	int
,	O
0x00	int
,	O
0xff	int
}	O
,	O
{	O
"fuchsia"	*(char)
,	O
0xff	int
,	O
0x00	int
,	O
0xff	int
}	O
,	O
{	O
"gray"	*(char)
,	O
0x80	int
,	O
0x80	int
,	O
0x80	int
}	O
,	O
{	O
"green"	*(char)
,	O
0x00	int
,	O
0x80	int
,	O
0x00	int
}	O
,	O
{	O
"lime"	*(char)
,	O
0x00	int
,	O
0xff	int
,	O
0x00	int
}	O
,	O
{	O
"maroon"	*(char)
,	O
0x80	int
,	O
0x00	int
,	O
0x00	int
}	O
,	O
{	O
"navy"	*(char)
,	O
0x00	int
,	O
0x00	int
,	O
0x80	int
}	O
,	O
{	O
"olive"	*(char)
,	O
0x80	int
,	O
0x80	int
,	O
0x00	int
}	O
,	O
{	O
"purple"	*(char)
,	O
0x80	int
,	O
0x00	int
,	O
0x80	int
}	O
,	O
{	O
"red"	*(char)
,	O
0xff	int
,	O
0x00	int
,	O
0x00	int
}	O
,	O
{	O
"silver"	*(char)
,	O
0xc0	int
,	O
0xc0	int
,	O
0xc0	int
}	O
,	O
{	O
"teal"	*(char)
,	O
0x00	int
,	O
0x80	int
,	O
0x80	int
}	O
,	O
{	O
"white"	*(char)
,	O
0xff	int
,	O
0xff	int
,	O
0xff	int
}	O
,	O
{	O
"yellow"	*(char)
,	O
0xff	int
,	O
0xff	int
,	O
0x00	int
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
0	int
,	O
0	int
}	O
}	O
;	O
const	O
char	O
*	O
_libplot_color_to_svg_color	(struct(int,int,int),array(char))->(*(char))
(	O
plColor	struct(int,int,int)
color_48	struct(int,int,int)
,	O
char	O
charbuf	array(char)
[	O
8	int
]	O
)	O
{	O
plColor	struct(int,int,int)
color_24	struct(int,int,int)
;	O
int	O
i	int
;	O
bool	enum(int,int)
found	enum(int,int)
=	O
false	int
;	O
const	O
char	O
*	O
svg_color	*(char)
;	O
color_24	struct(int,int,int)
.	O
red	int
=	O
(	O
(	O
unsigned	O
int	O
)	O
color_48	struct(int,int,int)
.	O
red	int
)	O
>>	O
8	int
;	O
color_24	struct(int,int,int)
.	O
green	int
=	O
(	O
(	O
unsigned	O
int	O
)	O
color_48	struct(int,int,int)
.	O
green	int
)	O
>>	O
8	int
;	O
color_24	struct(int,int,int)
.	O
blue	int
=	O
(	O
(	O
unsigned	O
int	O
)	O
color_48	struct(int,int,int)
.	O
blue	int
)	O
>>	O
8	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
NUM_SVG_COLORNAMES	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
color_24	struct(int,int,int)
.	O
red	int
==	O
_svg_colornames	array(struct(*(char),char,char,char))
[	O
i	int
]	O
.	O
red	int
&&	O
color_24	struct(int,int,int)
.	O
green	int
==	O
_svg_colornames	array(struct(*(char),char,char,char))
[	O
i	int
]	O
.	O
green	int
&&	O
color_24	struct(int,int,int)
.	O
blue	int
==	O
_svg_colornames	array(struct(*(char),char,char,char))
[	O
i	int
]	O
.	O
blue	int
)	O
{	O
found	enum(int,int)
=	O
true	int
;	O
break	O
;	O
}	O
}	O
if	O
(	O
found	enum(int,int)
)	O
svg_color	*(char)
=	O
_svg_colornames	array(struct(*(char),char,char,char))
[	O
i	int
]	O
.	O
name	*(char)
;	O
else	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
charbuf	array(char)
,	O
"#%02x%02x%02x"	*(char)
,	O
color_24	struct(int,int,int)
.	O
red	int
,	O
color_24	struct(int,int,int)
.	O
green	int
,	O
color_24	struct(int,int,int)
.	O
blue	int
)	O
;	O
svg_color	*(char)
=	O
charbuf	array(char)
;	O
}	O
return	O
svg_color	*(char)
;	O
}	O
