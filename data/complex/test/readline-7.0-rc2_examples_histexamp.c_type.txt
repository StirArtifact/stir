main	(int,*(*(char)))->(int)
(	O
argc	int
,	O
argv	*(*(char))
)	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	*(*(char))
;	O
{	O
char	O
line	*(char)
[	O
1024	int
]	O
,	O
*	O
t	*(char)
;	O
int	O
len	int
,	O
done	int
;	O
line	*(char)
[	O
0	int
]	O
=	O
0	int
;	O
done	int
=	O
0	int
;	O
using_history	()->(void)
(	O
)	O
;	O
while	O
(	O
!	O
done	int
)	O
{	O
printf	(*(char))->(int)
(	O
"history$ "	*(char)
)	O
;	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
t	*(char)
=	O
fgets	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
line	*(char)
,	O
sizeof	O
(	O
line	*(char)
)	O
-	O
1	int
,	O
stdin	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
t	*(char)
&&	O
*	O
t	*(char)
)	O
{	O
len	int
=	O
strlen	(*(char))->(long)
(	O
t	*(char)
)	O
;	O
if	O
(	O
t	*(char)
[	O
len	int
-	O
1	int
]	O
==	O
'\n'	O
)	O
t	*(char)
[	O
len	int
-	O
1	int
]	O
=	O
'\0'	O
;	O
}	O
if	O
(	O
!	O
t	*(char)
)	O
strcpy	(*(char),*(char))->(*(char))
(	O
line	*(char)
,	O
"quit"	*(char)
)	O
;	O
if	O
(	O
line	*(char)
[	O
0	int
]	O
)	O
{	O
char	O
*	O
expansion	*(char)
;	O
int	O
result	int
;	O
using_history	()->(void)
(	O
)	O
;	O
result	int
=	O
history_expand	(*(char),*(*(char)))->(int)
(	O
line	*(char)
,	O
&	O
expansion	*(char)
)	O
;	O
if	O
(	O
result	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s\n"	*(char)
,	O
expansion	*(char)
)	O
;	O
if	O
(	O
result	int
<	O
0	int
||	O
result	int
==	O
2	int
)	O
{	O
free	()->(int)
(	O
expansion	*(char)
)	O
;	O
continue	O
;	O
}	O
add_history	(*(char))->(void)
(	O
expansion	*(char)
)	O
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
line	*(char)
,	O
expansion	*(char)
,	O
sizeof	O
(	O
line	*(char)
)	O
-	O
1	int
)	O
;	O
free	()->(int)
(	O
expansion	*(char)
)	O
;	O
}	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
line	*(char)
,	O
"quit"	*(char)
)	O
==	O
0	int
)	O
done	int
=	O
1	int
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
line	*(char)
,	O
"save"	*(char)
)	O
==	O
0	int
)	O
write_history	(*(char))->(int)
(	O
"history_file"	*(char)
)	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
line	*(char)
,	O
"read"	*(char)
)	O
==	O
0	int
)	O
read_history	(*(char))->(int)
(	O
"history_file"	*(char)
)	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
line	*(char)
,	O
"list"	*(char)
)	O
==	O
0	int
)	O
{	O
register	O
HIST_ENTRY	struct(*(char),*(char),*(void))
*	O
*	O
the_list	*(*(struct(*(char),*(char),*(void))))
;	O
register	O
int	O
i	int
;	O
time_t	long
tt	long
;	O
char	O
timestr	array(char)
[	O
128	int
]	O
;	O
the_list	*(*(struct(*(char),*(char),*(void))))
=	O
history_list	()->(*(*(struct(*(char),*(char),*(void)))))
(	O
)	O
;	O
if	O
(	O
the_list	*(*(struct(*(char),*(char),*(void))))
)	O
for	O
(	O
i	int
=	O
0	int
;	O
the_list	*(*(struct(*(char),*(char),*(void))))
[	O
i	int
]	O
;	O
i	int
++	O
)	O
{	O
tt	long
=	O
history_get_time	(*(struct(*(char),*(char),*(void))))->(long)
(	O
the_list	*(*(struct(*(char),*(char),*(void))))
[	O
i	int
]	O
)	O
;	O
if	O
(	O
tt	long
)	O
strftime	(*(char),long,*(char),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))->(long)
(	O
timestr	array(char)
,	O
sizeof	O
(	O
timestr	array(char)
)	O
,	O
"%a %R"	*(char)
,	O
localtime	(*(long))->(*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))
(	O
&	O
tt	long
)	O
)	O
;	O
else	O
strcpy	(*(char),*(char))->(*(char))
(	O
timestr	array(char)
,	O
"??"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"%d: %s: %s\n"	*(char)
,	O
i	int
+	O
history_base	int
,	O
timestr	array(char)
,	O
the_list	*(*(struct(*(char),*(char),*(void))))
[	O
i	int
]	O
->	O
line	*(char)
)	O
;	O
}	O
}	O
else	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
line	*(char)
,	O
"delete"	*(char)
,	O
6	int
)	O
==	O
0	int
)	O
{	O
int	O
which	int
;	O
if	O
(	O
(	O
sscanf	(*(char),*(char))->(int)
(	O
line	*(char)
+	O
6	int
,	O
"%d"	*(char)
,	O
&	O
which	int
)	O
)	O
==	O
1	int
)	O
{	O
HIST_ENTRY	struct(*(char),*(char),*(void))
*	O
entry	*(struct(*(char),*(char),*(void)))
=	O
remove_history	(int)->(*(struct(*(char),*(char),*(void))))
(	O
which	int
)	O
;	O
if	O
(	O
!	O
entry	*(struct(*(char),*(char),*(void)))
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"No such entry %d\n"	*(char)
,	O
which	int
)	O
;	O
else	O
{	O
free	()->(int)
(	O
entry	*(struct(*(char),*(char),*(void)))
->	O
line	*(char)
)	O
;	O
free	()->(int)
(	O
entry	*(struct(*(char),*(char),*(void)))
)	O
;	O
}	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"non-numeric arg given to `delete'\n"	*(char)
)	O
;	O
}	O
}	O
}	O
}	O
