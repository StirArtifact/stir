adns_state	*(struct)
ads	*(struct)
;	O
struct	O
outstanding_list	struct(*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))))
outstanding	struct(*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))))
;	O
static	O
unsigned	O
long	O
idcounter	long
;	O
void	O
ensure_adns_init	()->(void)
(	O
void	O
)	O
{	O
adns_initflags	enum(int,int,int,int,int,int,int,int,int,int,int)
initflags	enum(int,int,int,int,int,int,int,int,int,int,int)
;	O
int	O
r	int
;	O
if	O
(	O
ads	*(struct)
)	O
return	O
;	O
if	O
(	O
signal	(int,*((int)->(void)))->(*((int)->(void)))
(	O
SIGPIPE	int
,	O
SIG_IGN	O
)	O
==	O
SIG_ERR	O
)	O
sysfail	(*(char),int)->(void)
(	O
"ignore SIGPIPE"	*(char)
,	O
errno	O
)	O
;	O
initflags	enum(int,int,int,int,int,int,int,int,int,int,int)
=	O
adns_if_noautosys	int
|	O
adns_if_nosigpipe	int
|	O
ov_verbose	int
;	O
if	O
(	O
!	O
ov_env	int
)	O
initflags	enum(int,int,int,int,int,int,int,int,int,int,int)
|=	O
adns_if_noenv	int
;	O
if	O
(	O
config_text	*(char)
)	O
{	O
r	int
=	O
adns_init_strcfg	(*(*(struct)),enum(int,int,int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
&	O
ads	*(struct)
,	O
initflags	enum(int,int,int,int,int,int,int,int,int,int,int)
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
config_text	*(char)
)	O
;	O
}	O
else	O
{	O
r	int
=	O
adns_init	(*(*(struct)),enum(int,int,int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ads	*(struct)
,	O
initflags	enum(int,int,int,int,int,int,int,int,int,int,int)
,	O
0	int
)	O
;	O
}	O
if	O
(	O
r	int
)	O
sysfail	(*(char),int)->(void)
(	O
"adns_init"	*(char)
,	O
r	int
)	O
;	O
if	O
(	O
ov_format	int
==	O
fmt_default	int
)	O
ov_format	int
=	O
ov_asynch	int
?	O
fmt_asynch	int
:	O
fmt_simple	int
;	O
}	O
void	O
type_info	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(*(char)),*(void),*(*(char)))->(void)
(	O
adns_rrtype	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
,	O
const	O
char	O
*	O
*	O
typename_r	*(*(char))
,	O
const	O
void	O
*	O
datap	*(void)
,	O
char	O
*	O
*	O
data_r	*(*(char))
)	O
{	O
static	O
char	O
buf	array(char)
[	O
12	int
]	O
;	O
adns_status	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
;	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
=	O
adns_rr_info	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(*(char)),*(*(char)),*(int),*(void),*(*(char)))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))
(	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
,	O
typename_r	*(*(char))
,	O
0	int
,	O
0	int
,	O
datap	*(void)
,	O
data_r	*(*(char))
)	O
;	O
if	O
(	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
==	O
adns_s_nomemory	int
)	O
sysfail	(*(char),int)->(void)
(	O
"adns_rr_info failed"	*(char)
,	O
ENOMEM	int
)	O
;	O
assert	O
(	O
!	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
;	O
if	O
(	O
typename_r	*(*(char))
&&	O
!	O
*	O
typename_r	*(*(char))
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
buf	array(char)
,	O
"TYPE%d"	*(char)
,	O
(	O
int	O
)	O
(	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
&	O
adns_rrt_typemask	int
)	O
)	O
;	O
*	O
typename_r	*(*(char))
=	O
buf	array(char)
;	O
}	O
}	O
static	O
void	O
prep_query	(*(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`)))),*(int))->(void)
(	O
struct	O
query_node	struct(*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),struct(int,int,int,int),*(char),*(char),*(struct))
*	O
*	O
qun_r	*(*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))))
,	O
int	O
*	O
quflags_r	*(int)
)	O
{	O
struct	O
query_node	struct(*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),struct(int,int,int,int),*(char),*(char),*(struct))
*	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
;	O
char	O
idbuf	array(char)
[	O
20	int
]	O
;	O
if	O
(	O
ov_pipe	int
&&	O
!	O
ads	*(struct)
)	O
usageerr	(*(char))->(void)
(	O
"-f/--pipe not consistent with domains on command line"	*(char)
)	O
;	O
ensure_adns_init	()->(void)
(	O
)	O
;	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
=	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
)	O
)	O
;	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
->	O
pqfr	struct(int,int,int,int)
=	O
ov_pqfr	struct(int,int,int,int)
;	O
if	O
(	O
ov_id	*(char)
)	O
{	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
->	O
id	*(char)
=	O
xstrsave	(*(char))->(*(char))
(	O
ov_id	*(char)
)	O
;	O
}	O
else	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
idbuf	array(char)
,	O
"%lu"	*(char)
,	O
idcounter	long
++	O
)	O
;	O
idcounter	long
&=	O
0x0fffffffflu	int
;	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
->	O
id	*(char)
=	O
xstrsave	(*(char))->(*(char))
(	O
idbuf	array(char)
)	O
;	O
}	O
*	O
quflags_r	*(int)
=	O
(	O
ov_search	int
?	O
adns_qf_search	int
:	O
0	int
)	O
|	O
(	O
ov_tcp	int
?	O
adns_qf_usevc	int
:	O
0	int
)	O
|	O
(	O
(	O
ov_pqfr	struct(int,int,int,int)
.	O
show_owner	int
||	O
ov_format	int
==	O
fmt_simple	int
)	O
?	O
adns_qf_owner	int
:	O
0	int
)	O
|	O
(	O
ov_qc_query	int
?	O
adns_qf_quoteok_query	int
:	O
0	int
)	O
|	O
(	O
ov_qc_anshost	int
?	O
adns_qf_quoteok_anshost	int
:	O
0	int
)	O
|	O
(	O
ov_qc_cname	int
?	O
0	int
:	O
adns_qf_quoteok_cname	int
)	O
|	O
ov_cname	int
,	O
*	O
qun_r	*(*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))))
=	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
;	O
}	O
void	O
of_ptr	(*(struct(enum(int,int,int,int,int,int,int),*(char),*(char),*(char),*(int),int,*((*`,*`,*`)->(void)),*(char),*(char))),*(char),*(char))->(void)
(	O
const	O
struct	O
optioninfo	struct(enum(int,int,int,int,int,int,int),*(char),*(char),*(char),*(int),int,*((*(struct(enum(int,int,int,int,int,int,int),*(char),*(char),*(char),*(int),int,*((*`,*`,*`)->(void)),*(char),*(char))),*(char),*(char))->(void)),*(char),*(char))
*	O
oi	*(struct)
,	O
const	O
char	O
*	O
arg	*(char)
,	O
const	O
char	O
*	O
arg2	*(char)
)	O
{	O
struct	O
query_node	struct(*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),struct(int,int,int,int),*(char),*(char),*(struct))
*	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
;	O
int	O
quflags	int
,	O
r	int
;	O
struct	O
sockaddr_in	struct(short,short,struct(int),array(char))
sa	struct(short,array(char))
;	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
sa	struct(short,array(char))
,	O
0	int
,	O
sizeof	O
(	O
sa	struct(short,array(char))
)	O
)	O
;	O
sa	struct(short,array(char))
.	O
sin_family	short
=	O
AF_INET	O
;	O
if	O
(	O
!	O
inet_aton	(*(char),*(struct(int)))->(int)
(	O
arg	*(char)
,	O
&	O
sa	struct(short,array(char))
.	O
sin_addr	struct(int)
)	O
)	O
usageerr	(*(char))->(void)
(	O
"invalid IP address %s"	*(char)
,	O
arg	*(char)
)	O
;	O
prep_query	(*(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`)))),*(int))->(void)
(	O
&	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
,	O
&	O
quflags	int
)	O
;	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
->	O
owner	*(char)
=	O
xstrsave	(*(char))->(*(char))
(	O
arg	*(char)
)	O
;	O
r	int
=	O
adns_submit_reverse	(*(struct),*(struct(short,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int,int),*(void),*(*(struct)))->(int)
(	O
ads	*(struct)
,	O
(	O
struct	O
sockaddr	struct(short,array(char))
*	O
)	O
&	O
sa	struct(short,array(char))
,	O
ov_type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
==	O
adns_r_none	int
?	O
adns_r_ptr	int
:	O
ov_type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
,	O
quflags	int
,	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
,	O
&	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
->	O
qu	*(struct)
)	O
;	O
if	O
(	O
r	int
)	O
sysfail	(*(char),int)->(void)
(	O
"adns_submit_reverse"	*(char)
,	O
r	int
)	O
;	O
LIST_LINK_TAIL	O
(	O
outstanding	struct(*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))))
,	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
)	O
;	O
}	O
void	O
of_reverse	(*(struct(enum(int,int,int,int,int,int,int),*(char),*(char),*(char),*(int),int,*((*`,*`,*`)->(void)),*(char),*(char))),*(char),*(char))->(void)
(	O
const	O
struct	O
optioninfo	struct(enum(int,int,int,int,int,int,int),*(char),*(char),*(char),*(int),int,*((*(struct(enum(int,int,int,int,int,int,int),*(char),*(char),*(char),*(int),int,*((*`,*`,*`)->(void)),*(char),*(char))),*(char),*(char))->(void)),*(char),*(char))
*	O
oi	*(struct)
,	O
const	O
char	O
*	O
arg	*(char)
,	O
const	O
char	O
*	O
arg2	*(char)
)	O
{	O
struct	O
query_node	struct(*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),struct(int,int,int,int),*(char),*(char),*(struct))
*	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
;	O
int	O
quflags	int
,	O
r	int
;	O
struct	O
sockaddr_in	struct(short,short,struct(int),array(char))
sa	struct(short,array(char))
;	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
sa	struct(short,array(char))
,	O
0	int
,	O
sizeof	O
(	O
sa	struct(short,array(char))
)	O
)	O
;	O
sa	struct(short,array(char))
.	O
sin_family	short
=	O
AF_INET	O
;	O
if	O
(	O
!	O
inet_aton	(*(char),*(struct(int)))->(int)
(	O
arg	*(char)
,	O
&	O
sa	struct(short,array(char))
.	O
sin_addr	struct(int)
)	O
)	O
usageerr	(*(char))->(void)
(	O
"invalid IP address %s"	*(char)
,	O
arg	*(char)
)	O
;	O
prep_query	(*(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`)))),*(int))->(void)
(	O
&	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
,	O
&	O
quflags	int
)	O
;	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
->	O
owner	*(char)
=	O
xmalloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
arg	*(char)
)	O
+	O
strlen	(*(char))->(long)
(	O
arg2	*(char)
)	O
+	O
2	int
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
->	O
owner	*(char)
,	O
"%s %s"	*(char)
,	O
arg	*(char)
,	O
arg2	*(char)
)	O
;	O
r	int
=	O
adns_submit_reverse_any	(*(struct),*(struct(short,array(char))),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int,int),*(void),*(*(struct)))->(int)
(	O
ads	*(struct)
,	O
(	O
struct	O
sockaddr	struct(short,array(char))
*	O
)	O
&	O
sa	struct(short,array(char))
,	O
arg2	*(char)
,	O
ov_type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
==	O
adns_r_none	int
?	O
adns_r_txt	int
:	O
ov_type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
,	O
quflags	int
,	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
,	O
&	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
->	O
qu	*(struct)
)	O
;	O
if	O
(	O
r	int
)	O
sysfail	(*(char),int)->(void)
(	O
"adns_submit_reverse"	*(char)
,	O
r	int
)	O
;	O
LIST_LINK_TAIL	O
(	O
outstanding	struct(*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))))
,	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
)	O
;	O
}	O
void	O
query_do	(*(char))->(void)
(	O
const	O
char	O
*	O
domain	*(char)
)	O
{	O
struct	O
query_node	struct(*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),struct(int,int,int,int),*(char),*(char),*(struct))
*	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
;	O
int	O
quflags	int
,	O
r	int
;	O
prep_query	(*(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`)))),*(int))->(void)
(	O
&	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
,	O
&	O
quflags	int
)	O
;	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
->	O
owner	*(char)
=	O
xstrsave	(*(char))->(*(char))
(	O
domain	*(char)
)	O
;	O
r	int
=	O
adns_submit	(*(struct),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int,int),*(void),*(*(struct)))->(int)
(	O
ads	*(struct)
,	O
domain	*(char)
,	O
ov_type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
==	O
adns_r_none	int
?	O
adns_r_addr	int
:	O
ov_type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
,	O
quflags	int
,	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
,	O
&	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
->	O
qu	*(struct)
)	O
;	O
if	O
(	O
r	int
)	O
sysfail	(*(char),int)->(void)
(	O
"adns_submit"	*(char)
,	O
r	int
)	O
;	O
LIST_LINK_TAIL	O
(	O
outstanding	struct(*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))))
,	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
)	O
;	O
}	O
static	O
void	O
dequeue_query	(*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))))->(void)
(	O
struct	O
query_node	struct(*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),struct(int,int,int,int),*(char),*(char),*(struct))
*	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
)	O
{	O
LIST_UNLINK	O
(	O
outstanding	struct(*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))))
,	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
)	O
;	O
free	(*(void))->(void)
(	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
->	O
id	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
->	O
owner	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
)	O
;	O
}	O
static	O
void	O
print_withspace	(*(char))->(void)
(	O
const	O
char	O
*	O
str	*(char)
)	O
{	O
if	O
(	O
printf	(*(char))->(int)
(	O
"%s "	*(char)
,	O
str	*(char)
)	O
==	O
EOF	O
)	O
outerr	()->(void)
(	O
)	O
;	O
}	O
static	O
void	O
print_ttl	(*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*`),*(*`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`)))))->(void)
(	O
struct	O
query_node	struct(*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),struct(int,int,int,int),*(char),*(char),*(struct))
*	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
,	O
adns_answer	struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct(int,*`))),*(struct(int,union(struct`,struct`))),*(struct(int)),*(struct(*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`))),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`))),*(struct(int,*(char))),*(struct(*(char),*(char),long,long,long,long,long)),*(struct(int,int,int,*(char))),*(struct(int,int,int,struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`))),*(struct(int,*(char)))))
*	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
)	O
{	O
unsigned	O
long	O
ttl	int
;	O
time_t	long
now	*(struct(long,long))
;	O
switch	O
(	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
->	O
pqfr	struct(int,int,int,int)
.	O
ttl	int
)	O
{	O
case	O
tm_none	int
:	O
return	O
;	O
case	O
tm_rel	int
:	O
if	O
(	O
time	(*(long))->(long)
(	O
&	O
now	*(struct(long,long))
)	O
==	O
(	O
time_t	long
)	O
-	O
1	int
)	O
sysfail	(*(char),int)->(void)
(	O
"get current time"	*(char)
,	O
errno	O
)	O
;	O
ttl	int
=	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
->	O
expires	long
<	O
now	*(struct(long,long))
?	O
0	int
:	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
->	O
expires	long
-	O
now	*(struct(long,long))
;	O
break	O
;	O
case	O
tm_abs	int
:	O
ttl	int
=	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
->	O
expires	long
;	O
break	O
;	O
default	O
:	O
abort	()->(void)
(	O
)	O
;	O
}	O
if	O
(	O
printf	(*(char))->(int)
(	O
"%lu "	*(char)
,	O
ttl	int
)	O
==	O
EOF	O
)	O
outerr	()->(void)
(	O
)	O
;	O
}	O
static	O
const	O
char	O
*	O
owner_show	(*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*`),*(*`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`)))))->(*(char))
(	O
struct	O
query_node	struct(*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),struct(int,int,int,int),*(char),*(char),*(struct))
*	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
,	O
adns_answer	struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct(int,*`))),*(struct(int,union(struct`,struct`))),*(struct(int)),*(struct(*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`))),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`))),*(struct(int,*(char))),*(struct(*(char),*(char),long,long,long,long,long)),*(struct(int,int,int,*(char))),*(struct(int,int,int,struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`))),*(struct(int,*(char)))))
*	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
)	O
{	O
return	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
->	O
owner	*(char)
?	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
->	O
owner	*(char)
:	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
->	O
owner	*(char)
;	O
}	O
static	O
void	O
print_owner_ttl	(*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*`),*(*`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`)))))->(void)
(	O
struct	O
query_node	struct(*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),struct(int,int,int,int),*(char),*(char),*(struct))
*	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
,	O
adns_answer	struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct(int,*`))),*(struct(int,union(struct`,struct`))),*(struct(int)),*(struct(*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`))),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`))),*(struct(int,*(char))),*(struct(*(char),*(char),long,long,long,long,long)),*(struct(int,int,int,*(char))),*(struct(int,int,int,struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`))),*(struct(int,*(char)))))
*	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
)	O
{	O
if	O
(	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
->	O
pqfr	struct(int,int,int,int)
.	O
show_owner	int
)	O
print_withspace	(*(char))->(void)
(	O
owner_show	(*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*`),*(*`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`)))))->(*(char))
(	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
,	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
)	O
)	O
;	O
print_ttl	(*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*`),*(*`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`)))))->(void)
(	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
,	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
)	O
;	O
}	O
static	O
void	O
check_status	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))->(void)
(	O
adns_status	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
{	O
static	O
const	O
adns_status	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
statuspoints	array(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))
[	O
]	O
=	O
{	O
adns_s_ok	int
,	O
adns_s_max_localfail	int
,	O
adns_s_max_remotefail	int
,	O
adns_s_max_tempfail	int
,	O
adns_s_max_misconfig	int
,	O
adns_s_max_misquery	int
}	O
;	O
const	O
adns_status	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
*	O
spp	*(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))
;	O
int	O
minrcode	int
;	O
for	O
(	O
minrcode	int
=	O
0	int
,	O
spp	*(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))
=	O
statuspoints	array(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))
;	O
spp	*(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))
<	O
statuspoints	array(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))
+	O
(	O
sizeof	O
(	O
statuspoints	array(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))
)	O
/	O
sizeof	O
(	O
statuspoints	array(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))
[	O
0	int
]	O
)	O
)	O
;	O
spp	*(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))
++	O
)	O
if	O
(	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
>	O
*	O
spp	*(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))
)	O
minrcode	int
++	O
;	O
if	O
(	O
rcode	int
<	O
minrcode	int
)	O
rcode	int
=	O
minrcode	int
;	O
}	O
static	O
void	O
print_status	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*`),*(*`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`)))))->(void)
(	O
adns_status	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
,	O
struct	O
query_node	struct(*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),struct(int,int,int,int),*(char),*(char),*(struct))
*	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
,	O
adns_answer	struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct(int,*`))),*(struct(int,union(struct`,struct`))),*(struct(int)),*(struct(*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`))),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`))),*(struct(int,*(char))),*(struct(*(char),*(char),long,long,long,long,long)),*(struct(int,int,int,*(char))),*(struct(int,int,int,struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`))),*(struct(int,*(char)))))
*	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
)	O
{	O
const	O
char	O
*	O
statustypeabbrev	*(char)
,	O
*	O
statusabbrev	*(char)
,	O
*	O
statusstring	*(char)
;	O
statustypeabbrev	*(char)
=	O
adns_errtypeabbrev	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))->(*(char))
(	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
;	O
statusabbrev	*(char)
=	O
adns_errabbrev	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))->(*(char))
(	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
;	O
statusstring	*(char)
=	O
adns_strerror	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))->(*(char))
(	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
;	O
assert	O
(	O
!	O
strchr	(*(char),int)->(*(char))
(	O
statusstring	*(char)
,	O
'"'	O
)	O
)	O
;	O
if	O
(	O
printf	(*(char))->(int)
(	O
"%s %d %s "	*(char)
,	O
statustypeabbrev	*(char)
,	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
,	O
statusabbrev	*(char)
)	O
==	O
EOF	O
)	O
outerr	()->(void)
(	O
)	O
;	O
print_owner_ttl	(*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*`),*(*`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`)))))->(void)
(	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
,	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
)	O
;	O
if	O
(	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
->	O
pqfr	struct(int,int,int,int)
.	O
show_cname	int
)	O
print_withspace	(*(char))->(void)
(	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
->	O
cname	*(char)
?	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
->	O
cname	*(char)
:	O
"$"	*(char)
)	O
;	O
if	O
(	O
printf	(*(char))->(int)
(	O
"\"%s\"\n"	*(char)
,	O
statusstring	*(char)
)	O
==	O
EOF	O
)	O
outerr	()->(void)
(	O
)	O
;	O
}	O
static	O
void	O
print_dnsfail	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*`),*(*`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`)))))->(void)
(	O
adns_status	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
,	O
struct	O
query_node	struct(*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),struct(int,int,int,int),*(char),*(char),*(struct))
*	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
,	O
adns_answer	struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct(int,*`))),*(struct(int,union(struct`,struct`))),*(struct(int)),*(struct(*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`))),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`))),*(struct(int,*(char))),*(struct(*(char),*(char),long,long,long,long,long)),*(struct(int,int,int,*(char))),*(struct(int,int,int,struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`))),*(struct(int,*(char)))))
*	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
)	O
{	O
int	O
r	int
;	O
const	O
char	O
*	O
typename	*(char)
,	O
*	O
statusstring	*(char)
;	O
if	O
(	O
ov_format	int
==	O
fmt_inline	int
)	O
{	O
if	O
(	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
"; failed "	*(char)
,	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
==	O
EOF	O
)	O
outerr	()->(void)
(	O
)	O
;	O
print_status	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*`),*(*`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`)))))->(void)
(	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
,	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
,	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
)	O
;	O
return	O
;	O
}	O
assert	O
(	O
ov_format	int
==	O
fmt_simple	int
)	O
;	O
if	O
(	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
==	O
adns_s_nxdomain	int
)	O
{	O
r	int
=	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s does not exist\n"	*(char)
,	O
owner_show	(*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*`),*(*`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`)))))->(*(char))
(	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
,	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
)	O
)	O
;	O
}	O
else	O
{	O
type_info	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(*(char)),*(void),*(*(char)))->(void)
(	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
->	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
,	O
&	O
typename	*(char)
,	O
0	int
,	O
0	int
)	O
;	O
if	O
(	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
==	O
adns_s_nodata	int
)	O
{	O
r	int
=	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s has no %s record\n"	*(char)
,	O
owner_show	(*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*`),*(*`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`)))))->(*(char))
(	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
,	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
)	O
,	O
typename	*(char)
)	O
;	O
}	O
else	O
{	O
statusstring	*(char)
=	O
adns_strerror	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))->(*(char))
(	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
;	O
r	int
=	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Error during DNS %s lookup for %s: %s\n"	*(char)
,	O
typename	*(char)
,	O
owner_show	(*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*`),*(*`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`)))))->(*(char))
(	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
,	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
)	O
,	O
statusstring	*(char)
)	O
;	O
}	O
}	O
if	O
(	O
r	int
==	O
EOF	O
)	O
sysfail	(*(char),int)->(void)
(	O
"write error message to stderr"	*(char)
,	O
errno	O
)	O
;	O
}	O
void	O
query_done	(*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*`),*(*`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`)))))->(void)
(	O
struct	O
query_node	struct(*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),struct(int,int,int,int),*(char),*(char),*(struct))
*	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
,	O
adns_answer	struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct(int,*`))),*(struct(int,union(struct`,struct`))),*(struct(int)),*(struct(*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`))),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`))),*(struct(int,*(char))),*(struct(*(char),*(char),long,long,long,long,long)),*(struct(int,int,int,*(char))),*(struct(int,int,int,struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`))),*(struct(int,*(char)))))
*	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
)	O
{	O
adns_status	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
;	O
int	O
rrn	int
,	O
nrrs	int
;	O
const	O
char	O
*	O
rrp	*(char)
,	O
*	O
realowner	*(char)
,	O
*	O
typename	*(char)
;	O
char	O
*	O
datastr	*(char)
;	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
=	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
->	O
status	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
;	O
nrrs	int
=	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
->	O
nrrs	int
;	O
if	O
(	O
ov_format	int
==	O
fmt_asynch	int
)	O
{	O
check_status	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))->(void)
(	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
;	O
if	O
(	O
printf	(*(char))->(int)
(	O
"%s %d "	*(char)
,	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
->	O
id	*(char)
,	O
nrrs	int
)	O
==	O
EOF	O
)	O
outerr	()->(void)
(	O
)	O
;	O
print_status	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*`),*(*`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`)))))->(void)
(	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
,	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
,	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
)	O
;	O
}	O
else	O
{	O
if	O
(	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
->	O
pqfr	struct(int,int,int,int)
.	O
show_cname	int
&&	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
->	O
cname	*(char)
)	O
{	O
print_owner_ttl	(*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*`),*(*`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`)))))->(void)
(	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
,	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
)	O
;	O
if	O
(	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
->	O
pqfr	struct(int,int,int,int)
.	O
show_type	int
)	O
print_withspace	(*(char))->(void)
(	O
"CNAME"	*(char)
)	O
;	O
if	O
(	O
printf	(*(char))->(int)
(	O
"%s\n"	*(char)
,	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
->	O
cname	*(char)
)	O
==	O
EOF	O
)	O
outerr	()->(void)
(	O
)	O
;	O
}	O
if	O
(	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
{	O
check_status	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))->(void)
(	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
;	O
print_dnsfail	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*`),*(*`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`)))))->(void)
(	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
,	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
,	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
)	O
;	O
}	O
}	O
if	O
(	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
->	O
pqfr	struct(int,int,int,int)
.	O
show_owner	int
)	O
{	O
realowner	*(char)
=	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
->	O
cname	*(char)
?	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
->	O
cname	*(char)
:	O
owner_show	(*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*`),*(*`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`)))))->(*(char))
(	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
,	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
)	O
;	O
assert	O
(	O
realowner	*(char)
)	O
;	O
}	O
else	O
{	O
realowner	*(char)
=	O
0	int
;	O
}	O
if	O
(	O
nrrs	int
)	O
{	O
for	O
(	O
rrn	int
=	O
0	int
,	O
rrp	*(char)
=	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
->	O
rrs	union(*(void),*(char),*(*(char)),*(*(struct(int,*(char)))),*(struct(int,union(struct(short,array(char)),struct(short,short,struct`,array(char))))),*(struct(int)),*(struct(*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(int,union`)))),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct(*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))),*(struct(int,*(char))),*(struct(*(char),*(char),long,long,long,long,long)),*(struct(int,int,int,*(char))),*(struct(int,int,int,struct(*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))),*(struct(int,*(char))))
.	O
untyped	*(void)
;	O
rrn	int
<	O
nrrs	int
;	O
rrn	int
++	O
,	O
rrp	*(char)
+=	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
->	O
rrsz	int
)	O
{	O
if	O
(	O
realowner	*(char)
)	O
print_withspace	(*(char))->(void)
(	O
realowner	*(char)
)	O
;	O
print_ttl	(*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*`),*(*`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`)))))->(void)
(	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
,	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
)	O
;	O
type_info	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(*(char)),*(void),*(*(char)))->(void)
(	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
->	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
,	O
&	O
typename	*(char)
,	O
rrp	*(char)
,	O
&	O
datastr	*(char)
)	O
;	O
if	O
(	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
->	O
pqfr	struct(int,int,int,int)
.	O
show_type	int
)	O
print_withspace	(*(char))->(void)
(	O
typename	*(char)
)	O
;	O
if	O
(	O
printf	(*(char))->(int)
(	O
"%s\n"	*(char)
,	O
datastr	*(char)
)	O
==	O
EOF	O
)	O
outerr	()->(void)
(	O
)	O
;	O
free	(*(void))->(void)
(	O
datastr	*(char)
)	O
;	O
}	O
}	O
if	O
(	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
outerr	()->(void)
(	O
)	O
;	O
free	(*(void))->(void)
(	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
)	O
;	O
dequeue_query	(*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))))->(void)
(	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
)	O
;	O
}	O
void	O
of_asynch_id	(*(struct(enum(int,int,int,int,int,int,int),*(char),*(char),*(char),*(int),int,*((*`,*`,*`)->(void)),*(char),*(char))),*(char),*(char))->(void)
(	O
const	O
struct	O
optioninfo	struct(enum(int,int,int,int,int,int,int),*(char),*(char),*(char),*(int),int,*((*(struct(enum(int,int,int,int,int,int,int),*(char),*(char),*(char),*(int),int,*((*`,*`,*`)->(void)),*(char),*(char))),*(char),*(char))->(void)),*(char),*(char))
*	O
oi	*(struct)
,	O
const	O
char	O
*	O
arg	*(char)
,	O
const	O
char	O
*	O
arg2	*(char)
)	O
{	O
free	(*(void))->(void)
(	O
ov_id	*(char)
)	O
;	O
ov_id	*(char)
=	O
xstrsave	(*(char))->(*(char))
(	O
arg	*(char)
)	O
;	O
}	O
void	O
of_cancel_id	(*(struct(enum(int,int,int,int,int,int,int),*(char),*(char),*(char),*(int),int,*((*`,*`,*`)->(void)),*(char),*(char))),*(char),*(char))->(void)
(	O
const	O
struct	O
optioninfo	struct(enum(int,int,int,int,int,int,int),*(char),*(char),*(char),*(int),int,*((*(struct(enum(int,int,int,int,int,int,int),*(char),*(char),*(char),*(int),int,*((*`,*`,*`)->(void)),*(char),*(char))),*(char),*(char))->(void)),*(char),*(char))
*	O
oi	*(struct)
,	O
const	O
char	O
*	O
arg	*(char)
,	O
const	O
char	O
*	O
arg2	*(char)
)	O
{	O
struct	O
query_node	struct(*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct))),struct(int,int,int,int),*(char),*(char),*(struct))
*	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
;	O
for	O
(	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
=	O
outstanding	struct(*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))),*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))))
.	O
head	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
;	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
&&	O
strcmp	(*(char),*(char))->(int)
(	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
->	O
id	*(char)
,	O
arg	*(char)
)	O
;	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
=	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
->	O
next	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
)	O
;	O
if	O
(	O
!	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
)	O
return	O
;	O
adns_cancel	(*(struct))->(void)
(	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
->	O
qu	*(struct)
)	O
;	O
dequeue_query	(*(struct(*(struct(*`,*`,struct`,*`,*`,*`)),*(struct(*`,*`,struct`,*`,*`,*`)),struct(int,int,int,int),*(char),*(char),*(struct))))->(void)
(	O
qun	*(struct(*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),*(struct(*(struct`),*(struct`),struct(int,int,int,int),*(char),*(char),*(struct`))),struct(int,int,int,int),*(char),*(char),*(struct)))
)	O
;	O
}	O
