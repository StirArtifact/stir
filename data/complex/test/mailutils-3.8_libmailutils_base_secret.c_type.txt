struct	O
_mu_secret	struct(int,long,*(char),*(char),int)
{	O
unsigned	O
int	O
refcnt	int
;	O
size_t	long
length	long
;	O
unsigned	O
char	O
*	O
obptr	*(char)
;	O
unsigned	O
char	O
*	O
clptr	*(char)
;	O
unsigned	O
int	O
clref	int
;	O
}	O
;	O
static	O
unsigned	O
char	O
xchar	char
;	O
static	O
void	O
obfuscate	(*(char),*(char),long)->(void)
(	O
const	O
unsigned	O
char	O
*	O
input	*(char)
,	O
unsigned	O
char	O
*	O
output	*(char)
,	O
size_t	long
len	long
)	O
{	O
if	O
(	O
!	O
xchar	char
)	O
xchar	char
=	O
random	()->(long)
(	O
)	O
%	O
255	int
;	O
while	O
(	O
len	long
--	O
)	O
*	O
output	*(char)
++	O
=	O
*	O
input	*(char)
++	O
^	O
xchar	char
;	O
}	O
int	O
mu_secret_create	(*(*(struct)),*(char),long)->(int)
(	O
mu_secret_t	*(struct)
*	O
psec	*(*(struct))
,	O
const	O
char	O
*	O
value	*(char)
,	O
size_t	long
len	long
)	O
{	O
mu_secret_t	*(struct)
sec	*(struct)
;	O
sec	*(struct)
=	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
sec	*(struct)
[	O
0	int
]	O
)	O
+	O
2	int
*	O
(	O
len	long
+	O
1	int
)	O
)	O
;	O
if	O
(	O
!	O
sec	*(struct)
)	O
return	O
ENOMEM	int
;	O
sec	*(struct)
->	O
obptr	*(char)
=	O
(	O
unsigned	O
char	O
*	O
)	O
(	O
sec	*(struct)
+	O
1	int
)	O
;	O
sec	*(struct)
->	O
clptr	*(char)
=	O
sec	*(struct)
->	O
obptr	*(char)
+	O
len	long
+	O
1	int
;	O
obfuscate	(*(char),*(char),long)->(void)
(	O
(	O
unsigned	O
char	O
*	O
)	O
value	*(char)
,	O
sec	*(struct)
->	O
obptr	*(char)
,	O
len	long
)	O
;	O
sec	*(struct)
->	O
length	long
=	O
len	long
;	O
*	O
psec	*(*(struct))
=	O
sec	*(struct)
;	O
mu_secret_ref	(*(struct))->(void)
(	O
sec	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_secret_dup	(*(struct),*(*(struct)))->(int)
(	O
mu_secret_t	*(struct)
sec	*(struct)
,	O
mu_secret_t	*(struct)
*	O
newsec	*(*(struct))
)	O
{	O
const	O
char	O
*	O
pass	*(char)
=	O
mu_secret_password	(*(struct))->(*(char))
(	O
sec	*(struct)
)	O
;	O
int	O
rc	int
=	O
mu_secret_create	(*(*(struct)),*(char),long)->(int)
(	O
newsec	*(*(struct))
,	O
pass	*(char)
,	O
strlen	(*(char))->(long)
(	O
pass	*(char)
)	O
)	O
;	O
mu_secret_password_unref	(*(struct))->(void)
(	O
sec	*(struct)
)	O
;	O
return	O
rc	int
;	O
}	O
void	O
mu_secret_ref	(*(struct))->(void)
(	O
mu_secret_t	*(struct)
sec	*(struct)
)	O
{	O
if	O
(	O
sec	*(struct)
)	O
sec	*(struct)
->	O
refcnt	int
++	O
;	O
}	O
int	O
mu_secret_unref	(*(struct))->(int)
(	O
mu_secret_t	*(struct)
sec	*(struct)
)	O
{	O
if	O
(	O
sec	*(struct)
)	O
{	O
if	O
(	O
sec	*(struct)
->	O
refcnt	int
)	O
sec	*(struct)
->	O
refcnt	int
--	O
;	O
if	O
(	O
sec	*(struct)
->	O
refcnt	int
==	O
0	int
)	O
{	O
memset	(*(void),int,long)->(*(void))
(	O
sec	*(struct)
->	O
clptr	*(char)
,	O
0	int
,	O
sec	*(struct)
->	O
length	long
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
sec	*(struct)
->	O
obptr	*(char)
,	O
0	int
,	O
sec	*(struct)
->	O
length	long
)	O
;	O
free	(*(void))->(void)
(	O
sec	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
return	O
MU_ERR_EXISTS	O
;	O
}	O
return	O
EINVAL	int
;	O
}	O
void	O
mu_secret_destroy	(*(*(struct)))->(void)
(	O
mu_secret_t	*(struct)
*	O
psec	*(*(struct))
)	O
{	O
if	O
(	O
psec	*(*(struct))
&&	O
*	O
psec	*(*(struct))
&&	O
mu_secret_unref	(*(struct))->(int)
(	O
*	O
psec	*(*(struct))
)	O
==	O
0	int
)	O
*	O
psec	*(*(struct))
=	O
NULL	O
;	O
}	O
const	O
char	O
*	O
mu_secret_password	(*(struct))->(*(char))
(	O
mu_secret_t	*(struct)
sec	*(struct)
)	O
{	O
if	O
(	O
!	O
sec	*(struct)
)	O
return	O
0	int
;	O
if	O
(	O
sec	*(struct)
->	O
clref	int
++	O
==	O
0	int
)	O
obfuscate	(*(char),*(char),long)->(void)
(	O
sec	*(struct)
->	O
obptr	*(char)
,	O
sec	*(struct)
->	O
clptr	*(char)
,	O
sec	*(struct)
->	O
length	long
)	O
;	O
return	O
(	O
const	O
char	O
*	O
)	O
sec	*(struct)
->	O
clptr	*(char)
;	O
}	O
size_t	long
mu_secret_length	(*(struct))->(long)
(	O
mu_secret_t	*(struct)
sec	*(struct)
)	O
{	O
if	O
(	O
!	O
sec	*(struct)
)	O
return	O
0	int
;	O
return	O
sec	*(struct)
->	O
length	long
;	O
}	O
void	O
mu_secret_password_unref	(*(struct))->(void)
(	O
mu_secret_t	*(struct)
sec	*(struct)
)	O
{	O
if	O
(	O
--	O
sec	*(struct)
->	O
clref	int
==	O
0	int
)	O
memset	(*(void),int,long)->(*(void))
(	O
sec	*(struct)
->	O
clptr	*(char)
,	O
0	int
,	O
sec	*(struct)
->	O
length	long
)	O
;	O
}	O
