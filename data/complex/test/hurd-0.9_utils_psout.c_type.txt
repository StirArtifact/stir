void	O
psout	(*(struct),*(char),int,*(struct),*(char),int,int,int,int,int,int)->(void)
(	O
struct	O
proc_stat_list	O
*	O
procs	*(struct)
,	O
char	O
*	O
fmt_string	*(char)
,	O
int	O
posix_fmt	int
,	O
struct	O
ps_fmt_specs	O
*	O
specs	*(struct)
,	O
char	O
*	O
sort_key_name	*(char)
,	O
int	O
sort_reverse	int
,	O
int	O
output_width	int
,	O
int	O
print_heading	int
,	O
int	O
squash_bogus_fields	int
,	O
int	O
squash_nominal_fields	int
,	O
int	O
top	int
)	O
{	O
error_t	O
err	O
;	O
struct	O
ps_stream	O
*	O
output	*(struct)
;	O
struct	O
ps_fmt	O
*	O
fmt	*(struct)
;	O
err	O
=	O
ps_fmt_create	()->(int)
(	O
fmt_string	*(char)
,	O
posix_fmt	int
,	O
specs	*(struct)
,	O
&	O
fmt	*(struct)
)	O
;	O
if	O
(	O
err	O
)	O
{	O
char	O
*	O
problem	*(char)
;	O
ps_fmt_creation_error	()->(int)
(	O
fmt_string	*(char)
,	O
posix_fmt	int
,	O
specs	*(struct)
,	O
&	O
problem	*(char)
)	O
;	O
error	()->(int)
(	O
4	int
,	O
0	int
,	O
"%s"	*(char)
,	O
problem	*(char)
)	O
;	O
}	O
if	O
(	O
squash_bogus_fields	int
)	O
{	O
ps_flags_t	O
bogus_flags	O
=	O
ps_fmt_needs	O
(	O
fmt	*(struct)
)	O
;	O
err	O
=	O
proc_stat_list_find_bogus_flags	()->(int)
(	O
procs	*(struct)
,	O
&	O
bogus_flags	O
)	O
;	O
if	O
(	O
err	O
)	O
error	()->(int)
(	O
0	int
,	O
err	O
,	O
"Couldn't remove bogus fields"	*(char)
)	O
;	O
else	O
ps_fmt_squash_flags	()->(int)
(	O
fmt	*(struct)
,	O
bogus_flags	O
)	O
;	O
}	O
if	O
(	O
squash_nominal_fields	int
)	O
{	O
int	O
nominal	O
(	O
struct	O
ps_fmt_field	O
*	O
field	*(struct)
)	O
{	O
return	O
!	O
(	O
field	*(struct)
->	O
flags	O
&	O
PS_FMT_FIELD_KEEP	O
)	O
&&	O
proc_stat_list_spec_nominal	O
(	O
procs	*(struct)
,	O
field	*(struct)
->	O
spec	O
)	O
;	O
}	O
ps_fmt_squash	()->(int)
(	O
fmt	*(struct)
,	O
nominal	O
)	O
;	O
}	O
if	O
(	O
sort_key_name	*(char)
)	O
{	O
const	O
struct	O
ps_fmt_spec	O
*	O
sort_key	*(struct)
;	O
if	O
(	O
*	O
sort_key_name	*(char)
==	O
'-'	O
)	O
{	O
sort_reverse	int
=	O
1	int
;	O
sort_key_name	*(char)
++	O
;	O
}	O
sort_key	*(struct)
=	O
ps_fmt_specs_find	()->(int)
(	O
specs	*(struct)
,	O
sort_key_name	*(char)
)	O
;	O
if	O
(	O
sort_key	*(struct)
==	O
NULL	O
)	O
error	()->(int)
(	O
3	int
,	O
0	int
,	O
"%s: bad sort key"	*(char)
,	O
sort_key_name	*(char)
)	O
;	O
err	O
=	O
proc_stat_list_sort	()->(int)
(	O
procs	*(struct)
,	O
sort_key	*(struct)
,	O
sort_reverse	int
)	O
;	O
if	O
(	O
err	O
)	O
error	()->(int)
(	O
0	int
,	O
err	O
,	O
"Couldn't sort processes"	*(char)
)	O
;	O
}	O
err	O
=	O
ps_stream_create	()->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
&	O
output	*(struct)
)	O
;	O
if	O
(	O
err	O
)	O
error	()->(int)
(	O
5	int
,	O
err	O
,	O
"Can't make output stream"	*(char)
)	O
;	O
if	O
(	O
print_heading	int
)	O
{	O
if	O
(	O
procs	*(struct)
->	O
num_procs	O
>	O
0	int
)	O
{	O
err	O
=	O
ps_fmt_write_titles	()->(int)
(	O
fmt	*(struct)
,	O
output	*(struct)
)	O
;	O
if	O
(	O
err	O
)	O
error	()->(int)
(	O
0	int
,	O
err	O
,	O
"Can't print titles"	*(char)
)	O
;	O
ps_stream_newline	()->(int)
(	O
output	*(struct)
)	O
;	O
}	O
else	O
error	()->(int)
(	O
1	int
,	O
0	int
,	O
"No applicable processes"	*(char)
)	O
;	O
}	O
if	O
(	O
output_width	int
)	O
{	O
int	O
deduce_term_size	(int,*(char),*(int),*(int))->(int)
(	O
int	O
fd	int
,	O
char	O
*	O
type	*(char)
,	O
int	O
*	O
width	*(int)
,	O
int	O
*	O
height	*(int)
)	O
;	O
if	O
(	O
output_width	int
<	O
0	int
)	O
if	O
(	O
!	O
deduce_term_size	(int,*(char),*(int),*(int))->(int)
(	O
1	int
,	O
getenv	()->(int)
(	O
"TERM"	*(char)
)	O
,	O
&	O
output_width	int
,	O
0	int
)	O
)	O
output_width	int
=	O
80	int
;	O
ps_fmt_set_output_width	()->(int)
(	O
fmt	*(struct)
,	O
output_width	int
)	O
;	O
}	O
if	O
(	O
top	int
)	O
{	O
int	O
filter	O
(	O
struct	O
proc_stat	O
*	O
ps	*(struct)
)	O
{	O
return	O
--	O
top	int
>=	O
0	int
;	O
}	O
if	O
(	O
top	int
<	O
0	int
)	O
{	O
top	int
+=	O
procs	*(struct)
->	O
num_procs	O
;	O
proc_stat_list_filter1	()->(int)
(	O
procs	*(struct)
,	O
filter	O
,	O
0	int
,	O
1	int
)	O
;	O
}	O
else	O
proc_stat_list_filter1	()->(int)
(	O
procs	*(struct)
,	O
filter	O
,	O
0	int
,	O
0	int
)	O
;	O
}	O
err	O
=	O
proc_stat_list_fmt	()->(int)
(	O
procs	*(struct)
,	O
fmt	*(struct)
,	O
output	*(struct)
)	O
;	O
if	O
(	O
err	O
)	O
error	()->(int)
(	O
5	int
,	O
err	O
,	O
"Couldn't output process status"	*(char)
)	O
;	O
}	O
