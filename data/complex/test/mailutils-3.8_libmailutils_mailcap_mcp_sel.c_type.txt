int	O
mu_mailcap_set_selector	(*(struct),*(struct(*((*`,*`)->(int)),*(void),*((*`)->(void)))))->(int)
(	O
mu_mailcap_t	*(struct)
mailcap	*(struct)
,	O
struct	O
mu_mailcap_selector_closure	struct(*((*(struct),*(void))->(int)),*(void),*((*(void))->(void)))
const	O
*	O
sel	*(struct(*((*(struct`),*(void))->(int)),*(void),*((*(void))->(void))))
)	O
{	O
if	O
(	O
!	O
mailcap	*(struct)
)	O
return	O
EINVAL	int
;	O
if	O
(	O
sel	*(struct(*((*(struct`),*(void))->(int)),*(void),*((*(void))->(void))))
)	O
mailcap	*(struct)
->	O
selector	*((*(struct),*(void))->(int))
=	O
*	O
sel	*(struct(*((*(struct`),*(void))->(int)),*(void),*((*(void))->(void))))
;	O
else	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
mailcap	*(struct)
->	O
selector	*((*(struct),*(void))->(int))
,	O
0	int
,	O
sizeof	O
(	O
mailcap	*(struct)
->	O
selector	*((*(struct),*(void))->(int))
)	O
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_mailcap_get_selector	(*(struct),*(struct(*((*`,*`)->(int)),*(void),*((*`)->(void)))))->(int)
(	O
mu_mailcap_t	*(struct)
mailcap	*(struct)
,	O
struct	O
mu_mailcap_selector_closure	struct(*((*(struct),*(void))->(int)),*(void),*((*(void))->(void)))
*	O
sel	*(struct(*((*(struct`),*(void))->(int)),*(void),*((*(void))->(void))))
)	O
{	O
if	O
(	O
!	O
mailcap	*(struct)
)	O
return	O
EINVAL	int
;	O
if	O
(	O
!	O
sel	*(struct(*((*(struct`),*(void))->(int)),*(void),*((*(void))->(void))))
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
*	O
sel	*(struct(*((*(struct`),*(void))->(int)),*(void),*((*(void))->(void))))
=	O
mailcap	*(struct)
->	O
selector	*((*(struct),*(void))->(int))
;	O
return	O
0	int
;	O
}	O
