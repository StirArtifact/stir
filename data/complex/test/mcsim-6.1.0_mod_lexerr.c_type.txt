void	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
WORD	int
wCode	int
,	O
PSTR	*(char)
szMsg	*(char)
,	O
PSTR	*(char)
szAltMsg	*(char)
)	O
{	O
char	O
cNull	char
=	O
'\0'	O
;	O
BOOL	int
bFatal	int
=	O
wCode	int
&	O
RE_FATAL	int
;	O
BOOL	int
bWarning	int
=	O
wCode	int
&	O
RE_WARNING	int
;	O
wCode	int
&=	O
~	O
(	O
RE_FATAL	int
|	O
RE_WARNING	int
)	O
;	O
if	O
(	O
!	O
szMsg	*(char)
)	O
szMsg	*(char)
=	O
&	O
cNull	char
;	O
if	O
(	O
wCode	int
)	O
{	O
if	O
(	O
bWarning	int
)	O
printf	(*(char))->(int)
(	O
"*** Warning: "	*(char)
)	O
;	O
else	O
{	O
printf	(*(char))->(int)
(	O
"*** Error: "	*(char)
)	O
;	O
bFatal	int
|=	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
&&	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
cErrors	int
++	O
>	O
MAX_ERRORS	int
)	O
)	O
;	O
}	O
}	O
if	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
)	O
{	O
if	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pfileIn	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
||	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
iLNPrev	int
)	O
{	O
printf	(*(char))->(int)
(	O
"line %d: "	*(char)
,	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
iLineNum	int
)	O
;	O
}	O
else	O
{	O
if	O
(	O
wCode	int
!=	O
RE_FILENOTFOUND	int
)	O
{	O
PSTRLEX	array(char)
szTmp	array(char)
;	O
szTmp	array(char)
[	O
MAX_LEX	int
-	O
1	int
]	O
=	O
'\0'	O
;	O
printf	(*(char))->(int)
(	O
"'%s'...\n  "	*(char)
,	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
szTmp	array(char)
,	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufOrg	*(char)
,	O
MAX_LEX	int
-	O
1	int
)	O
)	O
;	O
}	O
}	O
}	O
switch	O
(	O
wCode	int
)	O
{	O
case	O
0	int
:	O
break	O
;	O
default	O
:	O
printf	(*(char))->(int)
(	O
"Unknown error code %x: %s"	*(char)
,	O
wCode	int
,	O
szMsg	*(char)
)	O
;	O
case	O
RE_INIT	int
:	O
printf	(*(char))->(int)
(	O
"Initialization error."	*(char)
)	O
;	O
break	O
;	O
case	O
RE_FILENOTFOUND	int
:	O
printf	(*(char))->(int)
(	O
"File not found \"%s\"."	*(char)
,	O
szMsg	*(char)
)	O
;	O
break	O
;	O
case	O
RE_CANNOTOPEN	int
:	O
printf	(*(char))->(int)
(	O
"Cannot open file \"%s\"."	*(char)
,	O
szMsg	*(char)
)	O
;	O
break	O
;	O
case	O
RE_UNEXPECTED	int
:	O
printf	(*(char))->(int)
(	O
"Unexpected character '%c' in input file."	*(char)
,	O
*	O
szMsg	*(char)
)	O
;	O
break	O
;	O
case	O
RE_UNEXPESCAPE	int
:	O
printf	(*(char))->(int)
(	O
"Unexpected escape sequence '%s' in input file."	*(char)
,	O
szMsg	*(char)
)	O
;	O
break	O
;	O
case	O
RE_UNEXPNUMBER	int
:	O
printf	(*(char))->(int)
(	O
"Unexpected number %s in input file."	*(char)
,	O
szMsg	*(char)
)	O
;	O
break	O
;	O
case	O
RE_EXPECTED	int
:	O
printf	(*(char))->(int)
(	O
"Expected '%c' before '%c'."	*(char)
,	O
szMsg	*(char)
[	O
1	int
]	O
,	O
szMsg	*(char)
[	O
0	int
]	O
)	O
;	O
break	O
;	O
case	O
RE_LEXEXPECTED	int
:	O
printf	(*(char))->(int)
(	O
"Expected <%s>"	*(char)
,	O
szMsg	*(char)
)	O
;	O
if	O
(	O
szAltMsg	*(char)
)	O
printf	(*(char))->(int)
(	O
" before '%s'"	*(char)
,	O
szAltMsg	*(char)
)	O
;	O
break	O
;	O
case	O
RE_BADCONTEXT	O
:	O
printf	(*(char))->(int)
(	O
"'%s' used in invalid context."	*(char)
,	O
szMsg	*(char)
)	O
;	O
break	O
;	O
case	O
RE_DUPDECL	O
:	O
printf	(*(char))->(int)
(	O
"Duplicate declaration of model variable '%s'."	*(char)
,	O
szMsg	*(char)
)	O
;	O
break	O
;	O
case	O
RE_DUPSECT	O
:	O
printf	(*(char))->(int)
(	O
"Only one '%s' section is allowed."	*(char)
,	O
szMsg	*(char)
)	O
;	O
break	O
;	O
case	O
RE_OUTOFMEM	int
:	O
printf	(*(char))->(int)
(	O
"Out of memory in %s() !"	*(char)
,	O
szMsg	*(char)
)	O
;	O
break	O
;	O
case	O
RE_REDEF	O
:	O
printf	(*(char))->(int)
(	O
"'%s' redefined."	*(char)
,	O
szMsg	*(char)
)	O
;	O
break	O
;	O
case	O
RE_EQNTOOLONG	O
:	O
printf	(*(char))->(int)
(	O
"Equation is too long.  Possibly missing terminator."	*(char)
)	O
;	O
break	O
;	O
case	O
RE_BADSTATE	O
:	O
printf	(*(char))->(int)
(	O
"Invalid state identifier '%s'."	*(char)
,	O
szMsg	*(char)
)	O
;	O
break	O
;	O
case	O
RE_UNDEFINED	O
:	O
printf	(*(char))->(int)
(	O
"Undefined identifier '%s'."	*(char)
,	O
szMsg	*(char)
)	O
;	O
break	O
;	O
case	O
RE_NOINPDEF	O
:	O
printf	(*(char))->(int)
(	O
"Input '%s' is not initialized."	*(char)
,	O
szMsg	*(char)
)	O
;	O
break	O
;	O
case	O
RE_NODYNEQN	O
:	O
printf	(*(char))->(int)
(	O
"State variable '%s' has no dynamics."	*(char)
,	O
szMsg	*(char)
)	O
;	O
break	O
;	O
case	O
RE_NOOUTPUTEQN	O
:	O
printf	(*(char))->(int)
(	O
"Output variable '%s' is not computed anywhere."	*(char)
,	O
szMsg	*(char)
)	O
;	O
break	O
;	O
case	O
RE_TOOMANYVARS	O
:	O
printf	(*(char))->(int)
(	O
"Too many %s declarations. Limit is %d."	*(char)
,	O
szMsg	*(char)
,	O
*	O
(	O
PINT	*(int)
)	O
szAltMsg	*(char)
)	O
;	O
break	O
;	O
case	O
RE_POSITIVE	O
:	O
printf	(*(char))->(int)
(	O
"Positive number expected."	*(char)
)	O
;	O
break	O
;	O
case	O
RE_NAMETOOLONG	O
:	O
printf	(*(char))->(int)
(	O
"Name %s exceed %d characters."	*(char)
,	O
szMsg	*(char)
,	O
MAX_NAME	int
)	O
;	O
break	O
;	O
case	O
RE_UNBALPAR	O
:	O
printf	(*(char))->(int)
(	O
"Unbalanced () or equation too long at this line or above."	*(char)
)	O
;	O
break	O
;	O
case	O
RE_NOEND	O
:	O
printf	(*(char))->(int)
(	O
"End keyword is missing in file %s."	*(char)
,	O
szMsg	*(char)
)	O
;	O
break	O
;	O
}	O
printf	(*(char))->(int)
(	O
"\n"	*(char)
)	O
;	O
if	O
(	O
szAltMsg	*(char)
&&	O
wCode	int
!=	O
RE_LEXEXPECTED	int
)	O
printf	(*(char))->(int)
(	O
"%s\n"	*(char)
,	O
szAltMsg	*(char)
)	O
;	O
if	O
(	O
bFatal	int
)	O
{	O
printf	(*(char))->(int)
(	O
"One or more fatal errors: Exiting...\n\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
wCode	int
)	O
;	O
}	O
}	O
