const	O
char	O
cu_rcsid	array(char)
[	O
]	O
=	O
"$Id: cu.c,v 1.47 2002/03/05 19:10:41 ian Rel $"	*(char)
;	O
const	O
char	O
*	O
zCuvar_escape	*(char)
=	O
"~"	*(char)
;	O
boolean	int
fCuvar_delay	int
=	O
TRUE	O
;	O
const	O
char	O
*	O
zCuvar_eol	*(char)
=	O
"\r\025\003\017\004\023\021\022"	*(char)
;	O
boolean	int
fCuvar_binary	int
=	O
FALSE	O
;	O
const	O
char	O
*	O
zCuvar_binary_prefix	*(char)
=	O
"\026"	*(char)
;	O
boolean	int
fCuvar_echocheck	int
=	O
FALSE	O
;	O
const	O
char	O
*	O
zCuvar_echonl	*(char)
=	O
"\r"	*(char)
;	O
int	O
cCuvar_timeout	int
=	O
30	int
;	O
const	O
char	O
*	O
zCuvar_kill	*(char)
=	O
"\025"	*(char)
;	O
int	O
cCuvar_resend	int
=	O
10	int
;	O
const	O
char	O
*	O
zCuvar_eofwrite	*(char)
=	O
"\004"	*(char)
;	O
const	O
char	O
*	O
zCuvar_eofread	*(char)
=	O
"$"	*(char)
;	O
boolean	int
fCuvar_verbose	int
=	O
TRUE	O
;	O
static	O
const	O
struct	O
uuconf_cmdtab	struct(*(char),int,*(void),*((*(void),int,*(*(char)),*(void),*(void))->(int)))
asCuvars	array(struct(*(char),int,*(void),*((*(void),int,*(*(char)),*(void),*(void))->(int))))
[	O
]	O
=	O
{	O
{	O
"escape"	*(char)
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
(	O
pointer	*(void)
)	O
&	O
zCuvar_escape	*(char)
,	O
NULL	O
}	O
,	O
{	O
"delay"	*(char)
,	O
UUCONF_CMDTABTYPE_BOOLEAN	O
,	O
(	O
pointer	*(void)
)	O
&	O
fCuvar_delay	int
,	O
NULL	O
}	O
,	O
{	O
"eol"	*(char)
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
(	O
pointer	*(void)
)	O
&	O
zCuvar_eol	*(char)
,	O
NULL	O
}	O
,	O
{	O
"binary"	*(char)
,	O
UUCONF_CMDTABTYPE_BOOLEAN	O
,	O
(	O
pointer	*(void)
)	O
&	O
fCuvar_binary	int
,	O
NULL	O
}	O
,	O
{	O
"binary-prefix"	*(char)
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
(	O
pointer	*(void)
)	O
&	O
zCuvar_binary_prefix	*(char)
,	O
NULL	O
}	O
,	O
{	O
"echocheck"	*(char)
,	O
UUCONF_CMDTABTYPE_BOOLEAN	O
,	O
(	O
pointer	*(void)
)	O
&	O
fCuvar_echocheck	int
,	O
NULL	O
}	O
,	O
{	O
"echonl"	*(char)
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
(	O
pointer	*(void)
)	O
&	O
zCuvar_echonl	*(char)
,	O
NULL	O
}	O
,	O
{	O
"timeout"	*(char)
,	O
UUCONF_CMDTABTYPE_INT	O
,	O
(	O
pointer	*(void)
)	O
&	O
cCuvar_timeout	int
,	O
NULL	O
}	O
,	O
{	O
"kill"	*(char)
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
(	O
pointer	*(void)
)	O
&	O
zCuvar_kill	*(char)
,	O
NULL	O
}	O
,	O
{	O
"resend"	*(char)
,	O
UUCONF_CMDTABTYPE_INT	O
,	O
(	O
pointer	*(void)
)	O
&	O
cCuvar_resend	int
,	O
NULL	O
}	O
,	O
{	O
"eofwrite"	*(char)
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
(	O
pointer	*(void)
)	O
&	O
zCuvar_eofwrite	*(char)
,	O
NULL	O
}	O
,	O
{	O
"eofread"	*(char)
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
(	O
pointer	*(void)
)	O
&	O
zCuvar_eofread	*(char)
,	O
NULL	O
}	O
,	O
{	O
"verbose"	*(char)
,	O
UUCONF_CMDTABTYPE_BOOLEAN	O
,	O
(	O
pointer	*(void)
)	O
&	O
fCuvar_verbose	int
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
const	O
char	O
abCuconnected	array(char)
[	O
]	O
=	O
"\a[connected]"	*(char)
;	O
static	O
pointer	*(void)
pCuuuconf	*(void)
;	O
static	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qCuconn	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
;	O
static	O
boolean	int
fCuclose_conn	int
;	O
static	O
struct	O
uuconf_dialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*(*`))))),int,*(void))
*	O
qCudialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
;	O
static	O
boolean	int
fCurestore_terminal	int
;	O
static	O
boolean	int
fCulocalecho	int
;	O
static	O
boolean	int
fCustarted	int
;	O
static	O
boolean	int
fCuconnprinted	int
=	O
FALSE	O
;	O
struct	O
sconninfo	struct(int,int,int,*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(char))
{	O
boolean	int
fmatched	int
;	O
boolean	int
flocked	int
;	O
boolean	int
fdirect	int
;	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
;	O
const	O
char	O
*	O
zline	*(char)
;	O
}	O
;	O
static	O
void	O
ucuusage	()->(void)
P	O
(	O
(	O
void	O
)	O
)	O
;	O
static	O
void	O
ucuhelp	()->(void)
P	O
(	O
(	O
void	O
)	O
)	O
;	O
static	O
void	O
ucuabort	()->(void)
P	O
(	O
(	O
void	O
)	O
)	O
;	O
static	O
void	O
uculog_start	()->(void)
P	O
(	O
(	O
void	O
)	O
)	O
;	O
static	O
void	O
uculog_end	()->(void)
P	O
(	O
(	O
void	O
)	O
)	O
;	O
static	O
int	O
icuport_lock	(*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))),*(void))->(int)
P	O
(	O
(	O
struct	O
uuconf_port	struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct(int,*(*`))))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char)))))
*	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
,	O
pointer	*(void)
pinfo	*(void)
)	O
)	O
;	O
static	O
boolean	int
fcudo_cmd	(*(void),*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int)->(int)
P	O
(	O
(	O
pointer	*(void)
puuconf	*(void)
,	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
int	O
bcmd	char
)	O
)	O
;	O
static	O
boolean	int
fcuset_var	(*(void),*(char))->(int)
P	O
(	O
(	O
pointer	*(void)
puuconf	*(void)
,	O
char	O
*	O
zline	*(char)
)	O
)	O
;	O
static	O
int	O
icuunrecogvar	(*(void),int,*(*(char)),*(void),*(void))->(int)
P	O
(	O
(	O
pointer	*(void)
puuconf	*(void)
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
,	O
pointer	*(void)
pvar	*(void)
,	O
pointer	*(void)
pinfo	*(void)
)	O
)	O
;	O
static	O
int	O
icuunrecogfn	(*(void),int,*(*(char)),*(void),*(void))->(int)
P	O
(	O
(	O
pointer	*(void)
puuconf	*(void)
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
,	O
pointer	*(void)
pvar	*(void)
,	O
pointer	*(void)
pinfo	*(void)
)	O
)	O
;	O
static	O
void	O
uculist_vars	()->(void)
P	O
(	O
(	O
void	O
)	O
)	O
;	O
static	O
void	O
uculist_fns	(*(char))->(void)
P	O
(	O
(	O
const	O
char	O
*	O
zescape	*(char)
)	O
)	O
;	O
static	O
boolean	int
fcudo_subcmd	(*(void),*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char))->(int)
P	O
(	O
(	O
pointer	*(void)
puuconf	*(void)
,	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
char	O
*	O
zline	*(char)
)	O
)	O
;	O
static	O
boolean	int
fcusend_buf	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long)->(int)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
const	O
char	O
*	O
zbuf	*(char)
,	O
size_t	long
cbuf	long
)	O
)	O
;	O
static	O
const	O
struct	O
option	struct(*(char),int,*(int),int)
asCulongopts	array(struct(*(char),int,*(int),int))
[	O
]	O
=	O
{	O
{	O
"phone"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'c'	O
}	O
,	O
{	O
"escape"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'E'	O
}	O
,	O
{	O
"parity"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
2	int
}	O
,	O
{	O
"halfduplex"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
'h'	O
}	O
,	O
{	O
"prompt"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
'n'	O
}	O
,	O
{	O
"line"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'l'	O
}	O
,	O
{	O
"port"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'p'	O
}	O
,	O
{	O
"speed"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
's'	O
}	O
,	O
{	O
"baud"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
's'	O
}	O
,	O
{	O
"mapcr"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
't'	O
}	O
,	O
{	O
"nostop"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
3	int
}	O
,	O
{	O
"system"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'z'	O
}	O
,	O
{	O
"config"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'I'	O
}	O
,	O
{	O
"debug"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'x'	O
}	O
,	O
{	O
"version"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
'v'	O
}	O
,	O
{	O
"help"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
1	int
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
0	int
}	O
}	O
;	O
int	O
main	(int,*(*(char)))->(int)
(	O
argc	int
,	O
argv	*(*(char))
)	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	*(*(char))
;	O
{	O
char	O
*	O
zphone	*(char)
=	O
NULL	O
;	O
boolean	int
feven	int
=	O
FALSE	O
;	O
char	O
*	O
zline	*(char)
=	O
NULL	O
;	O
boolean	int
fprompt	int
=	O
FALSE	O
;	O
boolean	int
fodd	int
=	O
FALSE	O
;	O
const	O
char	O
*	O
zport	*(char)
=	O
NULL	O
;	O
long	O
ibaud	long
=	O
0L	int
;	O
boolean	int
fmapcr	int
=	O
FALSE	O
;	O
const	O
char	O
*	O
zsystem	*(char)
=	O
NULL	O
;	O
enum	O
txonxoffsetting	enum(int,int,int)
txonxoff	enum(int,int,int)
=	O
XONXOFF_ON	int
;	O
const	O
char	O
*	O
zconfig	*(char)
=	O
NULL	O
;	O
int	O
iopt	int
;	O
pointer	*(void)
puuconf	*(void)
;	O
int	O
iuuconf	int
;	O
const	O
char	O
*	O
zlocalname	*(char)
;	O
int	O
i	int
;	O
struct	O
uuconf_system	struct(*(char),*(*(char)),*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),int,int,*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct(int,*(*`))))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))
ssys	struct(*(char),*(*(char)),*(struct(*(char),*(*(char)),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),long,long,*(char),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*`)),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct(*`,int,int,long,int)),int,int,long,int)),*(struct(*(struct(*`,int,int,long,int)),int,int,long,int)),*(struct(*(struct(*`,int,int,long,int)),int,int,long,int)),int,int,*(struct(*(struct(*`,int,int,long,int)),int,int,long,int)),*(struct(*(struct(*`,int,int,long,int)),int,int,long,int)),*(struct(*(struct(*`,int,int,long,int)),int,int,long,int)),*(struct(*(struct(*`,int,int,long,int)),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct(int,*`)))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))
;	O
const	O
struct	O
uuconf_system	struct(*(char),*(*(char)),*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),int,int,*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct(int,*(*`))))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))
*	O
qsys	*(struct)
=	O
NULL	O
;	O
boolean	int
flooped	int
;	O
struct	O
uuconf_port	struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct(int,*(*`))))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char)))))
sport	struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct(int,*`)))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct(*`,struct`,*`,*`,int,int,int,int,struct`,struct`,*`,int,*`))),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char)))))
;	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
;	O
struct	O
sconninfo	struct(int,int,int,*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(char))
sinfo	struct(int,int,int,*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char))
;	O
long	O
ihighbaud	long
;	O
struct	O
uuconf_dialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*(*`))))),int,*(void))
sdialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*`)))),int,*(void))
;	O
struct	O
uuconf_dialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*(*`))))),int,*(void))
*	O
qdialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
;	O
char	O
bcmd	char
;	O
zProgram	*(char)
=	O
argv	*(*(char))
[	O
0	int
]	O
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
argc	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
argv	*(*(char))
[	O
i	int
]	O
[	O
0	int
]	O
==	O
'-'	O
&&	O
isdigit	(int)->(int)
(	O
BUCHAR	O
(	O
argv	*(*(char))
[	O
i	int
]	O
[	O
1	int
]	O
)	O
)	O
)	O
{	O
size_t	long
clen	long
;	O
char	O
*	O
z	*(char)
;	O
clen	long
=	O
strlen	(*(char))->(long)
(	O
argv	*(*(char))
[	O
i	int
]	O
)	O
;	O
z	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
clen	long
+	O
2	int
)	O
;	O
z	*(char)
[	O
0	int
]	O
=	O
'-'	O
;	O
z	*(char)
[	O
1	int
]	O
=	O
's'	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
z	*(char)
+	O
2	int
,	O
argv	*(*(char))
[	O
i	int
]	O
+	O
1	int
,	O
clen	long
)	O
;	O
argv	*(*(char))
[	O
i	int
]	O
=	O
z	*(char)
;	O
}	O
}	O
while	O
(	O
(	O
iopt	int
=	O
getopt_long	(int,*(*(char)),*(char),*(struct(*(char),int,*(int),int)),*(int))->(int)
(	O
argc	int
,	O
argv	*(*(char))
,	O
"a:c:deE:hnI:l:op:s:tvx:z:"	*(char)
,	O
asCulongopts	array(struct(*(char),int,*(int),int))
,	O
(	O
int	O
*	O
)	O
NULL	O
)	O
)	O
!=	O
EOF	O
)	O
{	O
switch	O
(	O
iopt	int
)	O
{	O
case	O
'c'	O
:	O
zphone	*(char)
=	O
optarg	*(char)
;	O
break	O
;	O
case	O
'd'	O
:	O
iDebug	int
=	O
DEBUG_MAX	O
;	O
break	O
;	O
case	O
'e'	O
:	O
feven	int
=	O
TRUE	O
;	O
break	O
;	O
case	O
'E'	O
:	O
zCuvar_escape	*(char)
=	O
optarg	*(char)
;	O
break	O
;	O
case	O
'h'	O
:	O
fCulocalecho	int
=	O
TRUE	O
;	O
break	O
;	O
case	O
'n'	O
:	O
fprompt	int
=	O
TRUE	O
;	O
break	O
;	O
case	O
'l'	O
:	O
zline	*(char)
=	O
optarg	*(char)
;	O
break	O
;	O
case	O
'o'	O
:	O
fodd	int
=	O
TRUE	O
;	O
break	O
;	O
case	O
'p'	O
:	O
case	O
'a'	O
:	O
zport	*(char)
=	O
optarg	*(char)
;	O
break	O
;	O
case	O
's'	O
:	O
ibaud	long
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
optarg	*(char)
,	O
(	O
char	O
*	O
*	O
)	O
NULL	O
,	O
10	int
)	O
;	O
break	O
;	O
case	O
't'	O
:	O
fmapcr	int
=	O
TRUE	O
;	O
break	O
;	O
case	O
'z'	O
:	O
zsystem	*(char)
=	O
optarg	*(char)
;	O
break	O
;	O
case	O
'I'	O
:	O
if	O
(	O
fsysdep_other_config	(*(char))->(int)
(	O
optarg	*(char)
)	O
)	O
zconfig	*(char)
=	O
optarg	*(char)
;	O
break	O
;	O
case	O
'x'	O
:	O
iDebug	int
|=	O
idebug_parse	(*(char))->(int)
(	O
optarg	*(char)
)	O
;	O
break	O
;	O
case	O
'v'	O
:	O
printf	(*(char))->(int)
(	O
"cu (Taylor UUCP) %s\n"	*(char)
,	O
VERSION	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"Copyright (C) 1991, 92, 93, 94, 1995, 2002 Ian Lance Taylor\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"This program is free software; you may redistribute it under the terms of\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"the GNU General Public LIcense.  This program has ABSOLUTELY NO WARRANTY.\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
EXIT_SUCCESS	int
)	O
;	O
case	O
2	int
:	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
optarg	*(char)
,	O
"even"	*(char)
,	O
strlen	(*(char))->(long)
(	O
optarg	*(char)
)	O
)	O
==	O
0	int
)	O
feven	int
=	O
TRUE	O
;	O
else	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
optarg	*(char)
,	O
"odd"	*(char)
,	O
strlen	(*(char))->(long)
(	O
optarg	*(char)
)	O
)	O
==	O
0	int
)	O
fodd	int
=	O
TRUE	O
;	O
else	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
optarg	*(char)
,	O
"none"	*(char)
,	O
strlen	(*(char))->(long)
(	O
optarg	*(char)
)	O
)	O
==	O
0	int
)	O
{	O
feven	int
=	O
TRUE	O
;	O
fodd	int
=	O
TRUE	O
;	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: --parity requires even, odd or none\n"	*(char)
,	O
zProgram	*(char)
)	O
;	O
ucuusage	()->(void)
(	O
)	O
;	O
}	O
break	O
;	O
case	O
3	int
:	O
txonxoff	enum(int,int,int)
=	O
XONXOFF_OFF	int
;	O
break	O
;	O
case	O
1	int
:	O
ucuhelp	()->(void)
(	O
)	O
;	O
exit	(int)->(void)
(	O
EXIT_SUCCESS	int
)	O
;	O
case	O
0	int
:	O
break	O
;	O
default	O
:	O
ucuusage	()->(void)
(	O
)	O
;	O
}	O
}	O
if	O
(	O
optind	int
!=	O
argc	int
)	O
{	O
if	O
(	O
optind	int
!=	O
argc	int
-	O
1	int
||	O
zsystem	*(char)
!=	O
NULL	O
||	O
zphone	*(char)
!=	O
NULL	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: too many arguments\n"	*(char)
,	O
zProgram	*(char)
)	O
;	O
ucuusage	()->(void)
(	O
)	O
;	O
}	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	*(*(char))
[	O
optind	int
]	O
,	O
"dir"	*(char)
)	O
!=	O
0	int
)	O
{	O
if	O
(	O
isdigit	(int)->(int)
(	O
BUCHAR	O
(	O
argv	*(*(char))
[	O
optind	int
]	O
[	O
0	int
]	O
)	O
)	O
)	O
zphone	*(char)
=	O
argv	*(*(char))
[	O
optind	int
]	O
;	O
else	O
zsystem	*(char)
=	O
argv	*(*(char))
[	O
optind	int
]	O
;	O
}	O
}	O
if	O
(	O
zsystem	*(char)
==	O
NULL	O
&&	O
zport	*(char)
==	O
NULL	O
&&	O
zline	*(char)
==	O
NULL	O
&&	O
ibaud	long
==	O
0L	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: must specify system, line, port or speed\n"	*(char)
,	O
zProgram	*(char)
)	O
;	O
ucuusage	()->(void)
(	O
)	O
;	O
}	O
if	O
(	O
fprompt	int
)	O
{	O
size_t	long
cphone	long
;	O
printf	(*(char))->(int)
(	O
"Phone number: "	*(char)
)	O
;	O
(	O
void	O
)	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
zphone	*(char)
=	O
NULL	O
;	O
cphone	long
=	O
0	int
;	O
if	O
(	O
getline	(*(*(char)),*(long),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
&	O
zphone	*(char)
,	O
&	O
cphone	long
,	O
stdin	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
<=	O
0	int
||	O
*	O
zphone	*(char)
==	O
'\0'	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: no phone number entered\n"	*(char)
,	O
zProgram	*(char)
)	O
;	O
exit	(int)->(void)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
}	O
iuuconf	int
=	O
uuconf_init	(*(*(void)),*(char),*(char))->(int)
(	O
&	O
puuconf	*(void)
,	O
"cu"	*(char)
,	O
zconfig	*(char)
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
ulog_uuconf	(enum(int,int,int,int,int,int,int),*(void),int)->(void)
(	O
LOG_FATAL	int
,	O
puuconf	*(void)
,	O
iuuconf	int
)	O
;	O
pCuuuconf	*(void)
=	O
puuconf	*(void)
;	O
{	O
const	O
char	O
*	O
zdebug	*(char)
;	O
iuuconf	int
=	O
uuconf_debuglevel	(*(void),*(*(char)))->(int)
(	O
puuconf	*(void)
,	O
&	O
zdebug	*(char)
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
ulog_uuconf	(enum(int,int,int,int,int,int,int),*(void),int)->(void)
(	O
LOG_FATAL	int
,	O
puuconf	*(void)
,	O
iuuconf	int
)	O
;	O
if	O
(	O
zdebug	*(char)
!=	O
NULL	O
)	O
iDebug	int
|=	O
idebug_parse	(*(char))->(int)
(	O
zdebug	*(char)
)	O
;	O
}	O
usysdep_initialize	(*(void),int)->(void)
(	O
puuconf	*(void)
,	O
INIT_NOCHDIR	O
|	O
INIT_SUID	O
)	O
;	O
iuuconf	int
=	O
uuconf_localname	(*(void),*(*(char)))->(int)
(	O
puuconf	*(void)
,	O
&	O
zlocalname	*(char)
)	O
;	O
if	O
(	O
iuuconf	int
==	O
UUCONF_NOT_FOUND	O
)	O
{	O
zlocalname	*(char)
=	O
zsysdep_localname	()->(*(char))
(	O
)	O
;	O
if	O
(	O
zlocalname	*(char)
==	O
NULL	O
)	O
exit	(int)->(void)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
else	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
ulog_uuconf	(enum(int,int,int,int,int,int,int),*(void),int)->(void)
(	O
LOG_FATAL	int
,	O
puuconf	*(void)
,	O
iuuconf	int
)	O
;	O
ulog_fatal_fn	(*(()->(void)))->(void)
(	O
ucuabort	()->(void)
)	O
;	O
pfLstart	*(()->(void))
=	O
uculog_start	()->(void)
;	O
pfLend	*(()->(void))
=	O
uculog_end	()->(void)
;	O
usysdep_signal	(int)->(void)
(	O
SIGINT	int
)	O
;	O
usysdep_signal	(int)->(void)
(	O
SIGHUP	int
)	O
;	O
usysdep_signal	(int)->(void)
(	O
SIGQUIT	int
)	O
;	O
usysdep_signal	(int)->(void)
(	O
SIGTERM	int
)	O
;	O
usysdep_signal	(int)->(void)
(	O
SIGPIPE	int
)	O
;	O
if	O
(	O
zsystem	*(char)
!=	O
NULL	O
)	O
{	O
iuuconf	int
=	O
uuconf_system_info	(*(void),*(char),*(struct(*(char),*(*(char)),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),long,long,*(char),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*`)),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))))->(int)
(	O
puuconf	*(void)
,	O
zsystem	*(char)
,	O
&	O
ssys	struct(*(char),*(*(char)),*(struct(*(char),*(*(char)),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),long,long,*(char),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*`)),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct(*`,int,int,long,int)),int,int,long,int)),*(struct(*(struct(*`,int,int,long,int)),int,int,long,int)),*(struct(*(struct(*`,int,int,long,int)),int,int,long,int)),int,int,*(struct(*(struct(*`,int,int,long,int)),int,int,long,int)),*(struct(*(struct(*`,int,int,long,int)),int,int,long,int)),*(struct(*(struct(*`,int,int,long,int)),int,int,long,int)),*(struct(*(struct(*`,int,int,long,int)),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct(int,*`)))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_NOT_FOUND	O
)	O
ulog_uuconf	(enum(int,int,int,int,int,int,int),*(void),int)->(void)
(	O
LOG_FATAL	int
,	O
puuconf	*(void)
,	O
iuuconf	int
)	O
;	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_FATAL	int
,	O
"%s: System not found"	*(char)
,	O
zsystem	*(char)
)	O
;	O
}	O
qsys	*(struct)
=	O
&	O
ssys	struct(*(char),*(*(char)),*(struct(*(char),*(*(char)),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),long,long,*(char),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*`)),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct(*`,int,int,long,int)),int,int,long,int)),*(struct(*(struct(*`,int,int,long,int)),int,int,long,int)),*(struct(*(struct(*`,int,int,long,int)),int,int,long,int)),int,int,*(struct(*(struct(*`,int,int,long,int)),int,int,long,int)),*(struct(*(struct(*`,int,int,long,int)),int,int,long,int)),*(struct(*(struct(*`,int,int,long,int)),int,int,long,int)),*(struct(*(struct(*`,int,int,long,int)),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct(int,*`)))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))
;	O
}	O
flooped	int
=	O
FALSE	O
;	O
while	O
(	O
TRUE	O
)	O
{	O
enum	O
tparitysetting	enum(int,int,int,int,int,int)
tparity	enum(int,int,int,int,int,int)
;	O
enum	O
tstripsetting	enum(int,int,int)
tstrip	enum(int,int,int)
;	O
long	O
iusebaud	long
;	O
sinfo	struct(int,int,int,*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char))
.	O
fmatched	int
=	O
FALSE	O
;	O
sinfo	struct(int,int,int,*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char))
.	O
flocked	int
=	O
FALSE	O
;	O
sinfo	struct(int,int,int,*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char))
.	O
fdirect	int
=	O
qsys	*(struct)
==	O
NULL	O
&&	O
zphone	*(char)
==	O
NULL	O
;	O
sinfo	struct(int,int,int,*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char))
.	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
=	O
&	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
;	O
sinfo	struct(int,int,int,*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char))
.	O
zline	*(char)
=	O
zline	*(char)
;	O
if	O
(	O
zport	*(char)
!=	O
NULL	O
||	O
zline	*(char)
!=	O
NULL	O
||	O
ibaud	long
!=	O
0L	int
)	O
{	O
iuuconf	int
=	O
uuconf_find_port	(*(void),*(char),long,long,*((*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(void))->(int)),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))->(int)
(	O
puuconf	*(void)
,	O
zport	*(char)
,	O
ibaud	long
,	O
0L	int
,	O
icuport_lock	(*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))),*(void))->(int)
,	O
(	O
pointer	*(void)
)	O
&	O
sinfo	struct(int,int,int,*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char))
,	O
&	O
sport	struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct(int,*`)))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct(*`,struct`,*`,*`,int,int,int,int,struct`,struct`,*`,int,*`))),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char)))))
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_NOT_FOUND	O
)	O
{	O
if	O
(	O
sinfo	struct(int,int,int,*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char))
.	O
flocked	int
)	O
{	O
(	O
void	O
)	O
fconn_unlock	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
(	O
&	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
)	O
;	O
uconn_free	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(void)
(	O
&	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
)	O
;	O
}	O
ulog_uuconf	(enum(int,int,int,int,int,int,int),*(void),int)->(void)
(	O
LOG_FATAL	int
,	O
puuconf	*(void)
,	O
iuuconf	int
)	O
;	O
}	O
if	O
(	O
zline	*(char)
==	O
NULL	O
||	O
zport	*(char)
!=	O
NULL	O
||	O
zphone	*(char)
!=	O
NULL	O
||	O
qsys	*(struct)
!=	O
NULL	O
)	O
{	O
if	O
(	O
sinfo	struct(int,int,int,*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char))
.	O
fmatched	int
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_FATAL	int
,	O
"All matching ports in use"	*(char)
)	O
;	O
else	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_FATAL	int
,	O
"No matching ports"	*(char)
)	O
;	O
}	O
sport	struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct(int,*`)))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct(*`,struct`,*`,*`,int,int,int,int,struct`,struct`,*`,int,*`))),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char)))))
.	O
uuconf_zname	*(char)
=	O
zline	*(char)
;	O
sport	struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct(int,*`)))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct(*`,struct`,*`,*`,int,int,int,int,struct`,struct`,*`,int,*`))),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char)))))
.	O
uuconf_ttype	enum(int,int,int,int,int,int,int)
=	O
UUCONF_PORTTYPE_DIRECT	int
;	O
sport	struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct(int,*`)))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct(*`,struct`,*`,*`,int,int,int,int,struct`,struct`,*`,int,*`))),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char)))))
.	O
uuconf_zprotocols	*(char)
=	O
NULL	O
;	O
sport	struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct(int,*`)))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct(*`,struct`,*`,*`,int,int,int,int,struct`,struct`,*`,int,*`))),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char)))))
.	O
uuconf_qproto_params	*(struct(int,*(struct(int,*(*`)))))
=	O
NULL	O
;	O
sport	struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct(int,*`)))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct(*`,struct`,*`,*`,int,int,int,int,struct`,struct`,*`,int,*`))),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char)))))
.	O
uuconf_ireliable	int
=	O
0	int
;	O
sport	struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct(int,*`)))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct(*`,struct`,*`,*`,int,int,int,int,struct`,struct`,*`,int,*`))),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char)))))
.	O
uuconf_zlockname	*(char)
=	O
NULL	O
;	O
sport	struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct(int,*`)))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct(*`,struct`,*`,*`,int,int,int,int,struct`,struct`,*`,int,*`))),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char)))))
.	O
uuconf_palloc	*(void)
=	O
NULL	O
;	O
sport	struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct(int,*`)))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct(*`,struct`,*`,*`,int,int,int,int,struct`,struct`,*`,int,*`))),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char)))))
.	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_sdirect	struct(*(char),long,int,int)
.	O
uuconf_zdevice	*(char)
=	O
NULL	O
;	O
sport	struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct(int,*`)))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct(*`,struct`,*`,*`,int,int,int,int,struct`,struct`,*`,int,*`))),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char)))))
.	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_sdirect	struct(*(char),long,int,int)
.	O
uuconf_ibaud	long
=	O
ibaud	long
;	O
if	O
(	O
!	O
fconn_init	(*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))),*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),enum(int,int,int,int,int,int,int))->(int)
(	O
&	O
sport	struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct(int,*`)))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct(*`,struct`,*`,*`,int,int,int,int,struct`,struct`,*`,int,*`))),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char)))))
,	O
&	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
,	O
UUCONF_PORTTYPE_UNKNOWN	int
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
if	O
(	O
!	O
fconn_lock	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int,int)->(int)
(	O
&	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
,	O
FALSE	O
,	O
TRUE	O
)	O
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_FATAL	int
,	O
"%s: Line in use"	*(char)
,	O
zline	*(char)
)	O
;	O
qCuconn	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
=	O
&	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
;	O
if	O
(	O
!	O
fsysdep_port_access	(*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))->(int)
(	O
&	O
sport	struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct(int,*`)))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct(*`,struct`,*`,*`,int,int,int,int,struct`,struct`,*`,int,*`))),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char)))))
)	O
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_FATAL	int
,	O
"%s: Permission denied"	*(char)
,	O
zline	*(char)
)	O
;	O
}	O
iusebaud	long
=	O
ibaud	long
;	O
ihighbaud	long
=	O
0L	int
;	O
}	O
else	O
{	O
for	O
(	O
;	O
qsys	*(struct)
!=	O
NULL	O
;	O
qsys	*(struct)
=	O
qsys	*(struct)
->	O
uuconf_qalternate	*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void)))
)	O
{	O
if	O
(	O
!	O
qsys	*(struct)
->	O
uuconf_fcall	int
)	O
continue	O
;	O
if	O
(	O
qsys	*(struct)
->	O
uuconf_qport	*(struct)
!=	O
NULL	O
)	O
{	O
if	O
(	O
fconn_init	(*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))),*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),enum(int,int,int,int,int,int,int))->(int)
(	O
qsys	*(struct)
->	O
uuconf_qport	*(struct)
,	O
&	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
,	O
UUCONF_PORTTYPE_UNKNOWN	int
)	O
)	O
{	O
if	O
(	O
fconn_lock	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int,int)->(int)
(	O
&	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
,	O
FALSE	O
,	O
FALSE	O
)	O
)	O
{	O
qCuconn	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
=	O
&	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
;	O
break	O
;	O
}	O
uconn_free	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(void)
(	O
&	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
)	O
;	O
}	O
}	O
else	O
{	O
sinfo	struct(int,int,int,*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char))
.	O
fmatched	int
=	O
FALSE	O
;	O
sinfo	struct(int,int,int,*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char))
.	O
flocked	int
=	O
FALSE	O
;	O
sinfo	struct(int,int,int,*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char))
.	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
=	O
&	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
;	O
iuuconf	int
=	O
uuconf_find_port	(*(void),*(char),long,long,*((*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(void))->(int)),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))->(int)
(	O
puuconf	*(void)
,	O
qsys	*(struct)
->	O
uuconf_zport	*(char)
,	O
qsys	*(struct)
->	O
uuconf_ibaud	long
,	O
qsys	*(struct)
->	O
uuconf_ihighbaud	long
,	O
icuport_lock	(*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))),*(void))->(int)
,	O
(	O
pointer	*(void)
)	O
&	O
sinfo	struct(int,int,int,*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char))
,	O
&	O
sport	struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct(int,*`)))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct(*`,struct`,*`,*`,int,int,int,int,struct`,struct`,*`,int,*`))),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char)))))
)	O
;	O
if	O
(	O
iuuconf	int
==	O
UUCONF_SUCCESS	O
)	O
break	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_NOT_FOUND	O
)	O
{	O
if	O
(	O
sinfo	struct(int,int,int,*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char))
.	O
flocked	int
)	O
{	O
(	O
void	O
)	O
fconn_unlock	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
(	O
&	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
)	O
;	O
uconn_free	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(void)
(	O
&	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
)	O
;	O
}	O
ulog_uuconf	(enum(int,int,int,int,int,int,int),*(void),int)->(void)
(	O
LOG_FATAL	int
,	O
puuconf	*(void)
,	O
iuuconf	int
)	O
;	O
}	O
}	O
}	O
if	O
(	O
qsys	*(struct)
==	O
NULL	O
)	O
{	O
const	O
char	O
*	O
zrem	*(char)
;	O
if	O
(	O
flooped	int
)	O
zrem	*(char)
=	O
"remaining "	*(char)
;	O
else	O
zrem	*(char)
=	O
""	*(char)
;	O
if	O
(	O
sinfo	struct(int,int,int,*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char))
.	O
fmatched	int
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_FATAL	int
,	O
"%s: All %smatching ports in use"	*(char)
,	O
zsystem	*(char)
,	O
zrem	*(char)
)	O
;	O
else	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_FATAL	int
,	O
"%s: No %smatching ports"	*(char)
,	O
zsystem	*(char)
,	O
zrem	*(char)
)	O
;	O
}	O
iusebaud	long
=	O
qsys	*(struct)
->	O
uuconf_ibaud	long
;	O
ihighbaud	long
=	O
qsys	*(struct)
->	O
uuconf_ihighbaud	long
;	O
}	O
if	O
(	O
!	O
fconn_open	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),long,long,int,int)->(int)
(	O
&	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
,	O
iusebaud	long
,	O
ihighbaud	long
,	O
FALSE	O
,	O
sinfo	struct(int,int,int,*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char))
.	O
fdirect	int
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
fCuclose_conn	int
=	O
TRUE	O
;	O
if	O
(	O
FGOT_SIGNAL	O
(	O
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
if	O
(	O
fodd	int
&&	O
feven	int
)	O
{	O
tparity	enum(int,int,int,int,int,int)
=	O
PARITYSETTING_NONE	int
;	O
tstrip	enum(int,int,int)
=	O
STRIPSETTING_SEVENBITS	int
;	O
}	O
else	O
if	O
(	O
fodd	int
)	O
{	O
tparity	enum(int,int,int,int,int,int)
=	O
PARITYSETTING_ODD	int
;	O
tstrip	enum(int,int,int)
=	O
STRIPSETTING_SEVENBITS	int
;	O
}	O
else	O
if	O
(	O
feven	int
)	O
{	O
tparity	enum(int,int,int,int,int,int)
=	O
PARITYSETTING_EVEN	int
;	O
tstrip	enum(int,int,int)
=	O
STRIPSETTING_SEVENBITS	int
;	O
}	O
else	O
{	O
tparity	enum(int,int,int,int,int,int)
=	O
PARITYSETTING_DEFAULT	int
;	O
tstrip	enum(int,int,int)
=	O
STRIPSETTING_DEFAULT	int
;	O
}	O
if	O
(	O
!	O
fconn_set	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)
(	O
&	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
,	O
tparity	enum(int,int,int,int,int,int)
,	O
tstrip	enum(int,int,int)
,	O
txonxoff	enum(int,int,int)
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
if	O
(	O
qsys	*(struct)
!=	O
NULL	O
)	O
zphone	*(char)
=	O
qsys	*(struct)
->	O
uuconf_zphone	*(char)
;	O
if	O
(	O
qsys	*(struct)
!=	O
NULL	O
||	O
zphone	*(char)
!=	O
NULL	O
)	O
{	O
enum	O
tdialerfound	enum(int,int,int)
tdialer	enum(int,int,int)
;	O
if	O
(	O
!	O
fconn_dial	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(struct(*(char),*(*(char)),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),long,long,*(char),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*`)),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),*(enum(int,int,int)))->(int)
(	O
&	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
,	O
puuconf	*(void)
,	O
qsys	*(struct)
,	O
zphone	*(char)
,	O
&	O
sdialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*`)))),int,*(void))
,	O
&	O
tdialer	enum(int,int,int)
)	O
)	O
{	O
if	O
(	O
zport	*(char)
!=	O
NULL	O
||	O
zline	*(char)
!=	O
NULL	O
||	O
ibaud	long
!=	O
0L	int
||	O
qsys	*(struct)
==	O
NULL	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
qsys	*(struct)
=	O
qsys	*(struct)
->	O
uuconf_qalternate	*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void)))
;	O
if	O
(	O
qsys	*(struct)
==	O
NULL	O
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_FATAL	int
,	O
"%s: No remaining alternates"	*(char)
,	O
zsystem	*(char)
)	O
;	O
fCuclose_conn	int
=	O
FALSE	O
;	O
(	O
void	O
)	O
fconn_close	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),int)->(int)
(	O
&	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
,	O
pCuuuconf	*(void)
,	O
qCudialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
,	O
FALSE	O
)	O
;	O
qCuconn	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
=	O
NULL	O
;	O
(	O
void	O
)	O
fconn_unlock	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
(	O
&	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
)	O
;	O
uconn_free	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(void)
(	O
&	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
)	O
;	O
flooped	int
=	O
TRUE	O
;	O
continue	O
;	O
}	O
if	O
(	O
tdialer	enum(int,int,int)
==	O
DIALERFOUND_FALSE	int
)	O
qdialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
=	O
NULL	O
;	O
else	O
qdialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
=	O
&	O
sdialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*`)))),int,*(void))
;	O
}	O
else	O
{	O
if	O
(	O
!	O
fsysdep_port_access	(*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))->(int)
(	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
.	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
)	O
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_FATAL	int
,	O
"Access to port denied"	*(char)
)	O
;	O
qdialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
=	O
NULL	O
;	O
if	O
(	O
!	O
fconn_carrier	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int)->(int)
(	O
&	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
,	O
FALSE	O
)	O
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_FATAL	int
,	O
"Can't turn off carrier"	*(char)
)	O
;	O
}	O
break	O
;	O
}	O
qCudialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
=	O
qdialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
;	O
if	O
(	O
FGOT_SIGNAL	O
(	O
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
printf	(*(char))->(int)
(	O
"%s\n"	*(char)
,	O
ZCONNMSG	*(char)
)	O
;	O
fCuconnprinted	int
=	O
TRUE	O
;	O
if	O
(	O
!	O
fsysdep_terminal_raw	(int)->(int)
(	O
fCulocalecho	int
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
fCurestore_terminal	int
=	O
TRUE	O
;	O
if	O
(	O
!	O
fsysdep_cu_init	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
(	O
&	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
fCustarted	int
=	O
TRUE	O
;	O
while	O
(	O
fsysdep_cu	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),*(char))->(int)
(	O
&	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
,	O
&	O
bcmd	char
,	O
zlocalname	*(char)
)	O
)	O
if	O
(	O
!	O
fcudo_cmd	(*(void),*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int)->(int)
(	O
puuconf	*(void)
,	O
&	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
,	O
bcmd	char
)	O
)	O
break	O
;	O
fCustarted	int
=	O
FALSE	O
;	O
if	O
(	O
!	O
fsysdep_cu_finish	()->(int)
(	O
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
fCurestore_terminal	int
=	O
FALSE	O
;	O
(	O
void	O
)	O
fsysdep_terminal_restore	()->(int)
(	O
)	O
;	O
(	O
void	O
)	O
fconn_close	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),int)->(int)
(	O
&	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
,	O
puuconf	*(void)
,	O
qdialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
,	O
TRUE	O
)	O
;	O
(	O
void	O
)	O
fconn_unlock	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
(	O
&	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
)	O
;	O
uconn_free	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(void)
(	O
&	O
sconn	struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))
)	O
;	O
if	O
(	O
fCuconnprinted	int
)	O
printf	(*(char))->(int)
(	O
"\n%s\n"	*(char)
,	O
ZDISMSG	*(char)
)	O
;	O
ulog_close	()->(void)
(	O
)	O
;	O
usysdep_exit	(int)->(void)
(	O
TRUE	O
)	O
;	O
return	O
0	int
;	O
}	O
static	O
void	O
ucuusage	()->(void)
(	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Usage: %s [options] [system or phone-number]\n"	*(char)
,	O
zProgram	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Use %s --help for help\n"	*(char)
,	O
zProgram	*(char)
)	O
;	O
exit	(int)->(void)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
static	O
void	O
ucuhelp	()->(void)
(	O
)	O
{	O
printf	(*(char))->(int)
(	O
"Taylor UUCP %s, copyright (C) 1991, 92, 93, 94, 1995, 2002 Ian Lance Taylor\n"	*(char)
,	O
VERSION	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"Usage: %s [options] [system or phone-number]\n"	*(char)
,	O
zProgram	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
" -a,-p,--port port: Use named port\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
" -l,--line line: Use named device (e.g. tty0)\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
" -s,--speed,--baud speed, -#: Use given speed\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
" -c,--phone phone: Phone number to call\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
" -z,--system system: System to call\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
" -e: Set even parity\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
" -o: Set odd parity\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
" --parity={odd,even}: Set parity\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
" -E,--escape char: Set escape character\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
" -h,--halfduplex: Echo locally\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
" --nostop: Turn off XON/XOFF handling\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
" -t,--mapcr: Map carriage return to carriage return/linefeed\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
" -n,--prompt: Prompt for phone number\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
" -d: Set maximum debugging level\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
" -x,--debug debug: Set debugging type\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
" -I,--config file: Set configuration file to use\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
" -v,--version: Print version and exit\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
" --help: Print help and exit\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"Report bugs to taylor-uucp@gnu.org\n"	*(char)
)	O
;	O
}	O
static	O
void	O
ucuabort	()->(void)
(	O
)	O
{	O
if	O
(	O
fCustarted	int
)	O
{	O
fCustarted	int
=	O
FALSE	O
;	O
(	O
void	O
)	O
fsysdep_cu_finish	()->(int)
(	O
)	O
;	O
}	O
if	O
(	O
fCurestore_terminal	int
)	O
{	O
fCurestore_terminal	int
=	O
FALSE	O
;	O
(	O
void	O
)	O
fsysdep_terminal_restore	()->(int)
(	O
)	O
;	O
}	O
if	O
(	O
qCuconn	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
!=	O
NULL	O
)	O
{	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
;	O
if	O
(	O
fCuclose_conn	int
)	O
{	O
fCuclose_conn	int
=	O
FALSE	O
;	O
(	O
void	O
)	O
fconn_close	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),int)->(int)
(	O
qCuconn	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
pCuuuconf	*(void)
,	O
qCudialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
,	O
FALSE	O
)	O
;	O
}	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
=	O
qCuconn	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
;	O
qCuconn	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
=	O
NULL	O
;	O
(	O
void	O
)	O
fconn_unlock	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
)	O
;	O
uconn_free	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(void)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
)	O
;	O
}	O
ulog_close	()->(void)
(	O
)	O
;	O
if	O
(	O
fCuconnprinted	int
)	O
printf	(*(char))->(int)
(	O
"\n%s\n"	*(char)
,	O
ZDISMSG	*(char)
)	O
;	O
usysdep_exit	(int)->(void)
(	O
FALSE	O
)	O
;	O
}	O
static	O
boolean	int
fCulog_restore	int
;	O
static	O
void	O
uculog_start	()->(void)
(	O
)	O
{	O
if	O
(	O
!	O
fCurestore_terminal	int
)	O
fCulog_restore	int
=	O
FALSE	O
;	O
else	O
{	O
fCulog_restore	int
=	O
TRUE	O
;	O
fCurestore_terminal	int
=	O
FALSE	O
;	O
if	O
(	O
!	O
fsysdep_terminal_restore	()->(int)
(	O
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
}	O
}	O
static	O
void	O
uculog_end	()->(void)
(	O
)	O
{	O
if	O
(	O
fCulog_restore	int
)	O
{	O
if	O
(	O
!	O
fsysdep_terminal_raw	(int)->(int)
(	O
fCulocalecho	int
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
fCurestore_terminal	int
=	O
TRUE	O
;	O
}	O
}	O
static	O
int	O
icuport_lock	(*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))),*(void))->(int)
(	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
,	O
pinfo	*(void)
)	O
struct	O
uuconf_port	struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct(int,*(*`))))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char)))))
*	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
;	O
pointer	*(void)
pinfo	*(void)
;	O
{	O
struct	O
sconninfo	struct(int,int,int,*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(char))
*	O
q	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
=	O
(	O
struct	O
sconninfo	struct(int,int,int,*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(char))
*	O
)	O
pinfo	*(void)
;	O
if	O
(	O
q	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
->	O
zline	*(char)
!=	O
NULL	O
&&	O
!	O
fsysdep_port_is_line	(*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))),*(char))->(int)
(	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
,	O
q	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
->	O
zline	*(char)
)	O
)	O
return	O
UUCONF_NOT_FOUND	O
;	O
q	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
->	O
fmatched	int
=	O
TRUE	O
;	O
if	O
(	O
!	O
fconn_init	(*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))),*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),enum(int,int,int,int,int,int,int))->(int)
(	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
,	O
q	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
->	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
UUCONF_PORTTYPE_UNKNOWN	int
)	O
)	O
return	O
UUCONF_NOT_FOUND	O
;	O
else	O
if	O
(	O
!	O
fconn_lock	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int,int)->(int)
(	O
q	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
->	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
FALSE	O
,	O
q	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
->	O
fdirect	int
)	O
)	O
{	O
uconn_free	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(void)
(	O
q	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
->	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
)	O
;	O
return	O
UUCONF_NOT_FOUND	O
;	O
}	O
else	O
{	O
qCuconn	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
=	O
q	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
->	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
;	O
q	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
->	O
flocked	int
=	O
TRUE	O
;	O
return	O
UUCONF_SUCCESS	O
;	O
}	O
}	O
static	O
boolean	int
fcudo_cmd	(*(void),*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int)->(int)
(	O
puuconf	*(void)
,	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
bcmd	char
)	O
pointer	*(void)
puuconf	*(void)
;	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
;	O
int	O
bcmd	char
;	O
{	O
char	O
*	O
zline	*(char)
;	O
char	O
*	O
z	*(char)
;	O
char	O
abescape	array(char)
[	O
5	int
]	O
;	O
boolean	int
fret	int
;	O
size_t	long
clen	long
;	O
char	O
abbuf	array(char)
[	O
100	int
]	O
;	O
switch	O
(	O
bcmd	char
)	O
{	O
default	O
:	O
zline	*(char)
=	O
NULL	O
;	O
break	O
;	O
case	O
'!'	O
:	O
case	O
'$'	O
:	O
case	O
'|'	O
:	O
case	O
'+'	O
:	O
case	O
'%'	O
:	O
case	O
'c'	O
:	O
case	O
'>'	O
:	O
case	O
'<'	O
:	O
case	O
'p'	O
:	O
case	O
't'	O
:	O
case	O
's'	O
:	O
{	O
zline	*(char)
=	O
zsysdep_terminal_line	(*(char))->(*(char))
(	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
if	O
(	O
zline	*(char)
==	O
NULL	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
zline	*(char)
[	O
strcspn	(*(char),*(char))->(long)
(	O
zline	*(char)
,	O
"\n"	*(char)
)	O
]	O
=	O
'\0'	O
;	O
}	O
break	O
;	O
}	O
switch	O
(	O
bcmd	char
)	O
{	O
default	O
:	O
if	O
(	O
!	O
isprint	(int)->(int)
(	O
*	O
zCuvar_escape	*(char)
)	O
)	O
sprintf	(*(char),*(char))->(int)
(	O
abescape	array(char)
,	O
"\\%03o"	*(char)
,	O
BUCHAR	O
(	O
*	O
zCuvar_escape	*(char)
)	O
)	O
;	O
else	O
{	O
abescape	array(char)
[	O
0	int
]	O
=	O
*	O
zCuvar_escape	*(char)
;	O
abescape	array(char)
[	O
1	int
]	O
=	O
'\0'	O
;	O
}	O
sprintf	(*(char),*(char))->(int)
(	O
abbuf	array(char)
,	O
"[Unrecognized.  Use %s%s to send %s]"	*(char)
,	O
abescape	array(char)
,	O
abescape	array(char)
,	O
abescape	array(char)
)	O
;	O
ucuputs	O
(	O
abbuf	array(char)
)	O
;	O
return	O
TRUE	O
;	O
case	O
'.'	O
:	O
return	O
FALSE	O
;	O
case	O
'!'	O
:	O
case	O
'$'	O
:	O
case	O
'|'	O
:	O
case	O
'+'	O
:	O
if	O
(	O
!	O
fsysdep_cu_copy	(int)->(int)
(	O
FALSE	O
)	O
||	O
!	O
fsysdep_terminal_restore	()->(int)
(	O
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
fCurestore_terminal	int
=	O
FALSE	O
;	O
{	O
enum	O
tshell_cmd	enum(int,int,int,int)
t	enum(int,int,int,int)
;	O
switch	O
(	O
bcmd	char
)	O
{	O
default	O
:	O
case	O
'!'	O
:	O
t	enum(int,int,int,int)
=	O
SHELL_NORMAL	int
;	O
break	O
;	O
case	O
'$'	O
:	O
t	enum(int,int,int,int)
=	O
SHELL_STDOUT_TO_PORT	int
;	O
break	O
;	O
case	O
'|'	O
:	O
t	enum(int,int,int,int)
=	O
SHELL_STDIN_FROM_PORT	int
;	O
break	O
;	O
case	O
'+'	O
:	O
t	enum(int,int,int,int)
=	O
SHELL_STDIO_ON_PORT	int
;	O
break	O
;	O
}	O
(	O
void	O
)	O
fsysdep_shell	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),enum(int,int,int,int))->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zline	*(char)
,	O
t	enum(int,int,int,int)
)	O
;	O
}	O
if	O
(	O
!	O
fsysdep_cu_copy	(int)->(int)
(	O
TRUE	O
)	O
||	O
!	O
fsysdep_terminal_raw	(int)->(int)
(	O
fCulocalecho	int
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
fCurestore_terminal	int
=	O
TRUE	O
;	O
ubuffree	(*(char))->(void)
(	O
zline	*(char)
)	O
;	O
return	O
TRUE	O
;	O
case	O
'%'	O
:	O
fret	int
=	O
fcudo_subcmd	(*(void),*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char))->(int)
(	O
puuconf	*(void)
,	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zline	*(char)
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zline	*(char)
)	O
;	O
return	O
fret	int
;	O
case	O
'#'	O
:	O
if	O
(	O
!	O
fconn_break	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
return	O
TRUE	O
;	O
case	O
'c'	O
:	O
(	O
void	O
)	O
fsysdep_chdir	(*(char))->(int)
(	O
zline	*(char)
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zline	*(char)
)	O
;	O
return	O
TRUE	O
;	O
case	O
'>'	O
:	O
case	O
'<'	O
:	O
case	O
'p'	O
:	O
case	O
't'	O
:	O
clen	long
=	O
strlen	(*(char))->(long)
(	O
zline	*(char)
)	O
;	O
z	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
clen	long
+	O
3	int
)	O
;	O
z	*(char)
[	O
0	int
]	O
=	O
bcmd	char
;	O
z	*(char)
[	O
1	int
]	O
=	O
' '	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
z	*(char)
+	O
2	int
,	O
zline	*(char)
,	O
clen	long
+	O
1	int
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zline	*(char)
)	O
;	O
fret	int
=	O
fcudo_subcmd	(*(void),*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char))->(int)
(	O
puuconf	*(void)
,	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
z	*(char)
)	O
;	O
ubuffree	(*(char))->(void)
(	O
z	*(char)
)	O
;	O
return	O
fret	int
;	O
case	O
'z'	O
:	O
if	O
(	O
!	O
fsysdep_cu_copy	(int)->(int)
(	O
FALSE	O
)	O
||	O
!	O
fsysdep_terminal_restore	()->(int)
(	O
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
fCurestore_terminal	int
=	O
FALSE	O
;	O
if	O
(	O
!	O
fsysdep_suspend	()->(int)
(	O
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
if	O
(	O
!	O
fsysdep_cu_copy	(int)->(int)
(	O
TRUE	O
)	O
||	O
!	O
fsysdep_terminal_raw	(int)->(int)
(	O
fCulocalecho	int
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
fCurestore_terminal	int
=	O
TRUE	O
;	O
return	O
TRUE	O
;	O
case	O
's'	O
:	O
fret	int
=	O
fcuset_var	(*(void),*(char))->(int)
(	O
puuconf	*(void)
,	O
zline	*(char)
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zline	*(char)
)	O
;	O
return	O
fret	int
;	O
case	O
'v'	O
:	O
uculist_vars	()->(void)
(	O
)	O
;	O
return	O
TRUE	O
;	O
case	O
'?'	O
:	O
if	O
(	O
!	O
isprint	(int)->(int)
(	O
*	O
zCuvar_escape	*(char)
)	O
)	O
sprintf	(*(char),*(char))->(int)
(	O
abescape	array(char)
,	O
"\\%03o"	*(char)
,	O
BUCHAR	O
(	O
*	O
zCuvar_escape	*(char)
)	O
)	O
;	O
else	O
{	O
abescape	array(char)
[	O
0	int
]	O
=	O
*	O
zCuvar_escape	*(char)
;	O
abescape	array(char)
[	O
1	int
]	O
=	O
'\0'	O
;	O
}	O
ucuputs	O
(	O
""	*(char)
)	O
;	O
ucuputs	O
(	O
"[Escape sequences]"	*(char)
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
abbuf	array(char)
,	O
"[%s. hangup]                   [%s!CMD run shell]"	*(char)
,	O
abescape	array(char)
,	O
abescape	array(char)
)	O
;	O
ucuputs	O
(	O
abbuf	array(char)
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
abbuf	array(char)
,	O
"[%s$CMD stdout to remote]      [%s|CMD stdin from remote]"	*(char)
,	O
abescape	array(char)
,	O
abescape	array(char)
)	O
;	O
ucuputs	O
(	O
abbuf	array(char)
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
abbuf	array(char)
,	O
"[%s+CMD stdin and stdout to remote]"	*(char)
,	O
abescape	array(char)
)	O
;	O
ucuputs	O
(	O
abbuf	array(char)
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
abbuf	array(char)
,	O
"[%s# send break]               [%scDIR change directory]"	*(char)
,	O
abescape	array(char)
,	O
abescape	array(char)
)	O
;	O
ucuputs	O
(	O
abbuf	array(char)
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
abbuf	array(char)
,	O
"[%s> send file]                [%s< receive file]"	*(char)
,	O
abescape	array(char)
,	O
abescape	array(char)
)	O
;	O
ucuputs	O
(	O
abbuf	array(char)
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
abbuf	array(char)
,	O
"[%spFROM TO send to Unix]      [%stFROM TO receive from Unix]"	*(char)
,	O
abescape	array(char)
,	O
abescape	array(char)
)	O
;	O
ucuputs	O
(	O
abbuf	array(char)
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
abbuf	array(char)
,	O
"[%ssVAR VAL set variable]      [%ssVAR set boolean]"	*(char)
,	O
abescape	array(char)
,	O
abescape	array(char)
)	O
;	O
ucuputs	O
(	O
abbuf	array(char)
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
abbuf	array(char)
,	O
"[%ss!VAR unset boolean]        [%sv list variables]"	*(char)
,	O
abescape	array(char)
,	O
abescape	array(char)
)	O
;	O
ucuputs	O
(	O
abbuf	array(char)
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
abbuf	array(char)
,	O
"[%sz suspend]"	*(char)
,	O
abescape	array(char)
)	O
;	O
ucuputs	O
(	O
abbuf	array(char)
)	O
;	O
uculist_fns	(*(char))->(void)
(	O
abescape	array(char)
)	O
;	O
return	O
TRUE	O
;	O
}	O
}	O
static	O
void	O
uculist_fns	(*(char))->(void)
(	O
zescape	*(char)
)	O
const	O
char	O
*	O
zescape	*(char)
;	O
{	O
char	O
abbuf	array(char)
[	O
100	int
]	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
abbuf	array(char)
,	O
"[%s%%break send break]         [%s%%cd DIR change directory]"	*(char)
,	O
zescape	*(char)
,	O
zescape	*(char)
)	O
;	O
ucuputs	O
(	O
abbuf	array(char)
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
abbuf	array(char)
,	O
"[%s%%put FROM TO send file]    [%s%%take FROM TO receive file]"	*(char)
,	O
zescape	*(char)
,	O
zescape	*(char)
)	O
;	O
ucuputs	O
(	O
abbuf	array(char)
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
abbuf	array(char)
,	O
"[%s%%nostop no XON/XOFF]       [%s%%stop use XON/XOFF]"	*(char)
,	O
zescape	*(char)
,	O
zescape	*(char)
)	O
;	O
ucuputs	O
(	O
abbuf	array(char)
)	O
;	O
}	O
static	O
boolean	int
fcuset_var	(*(void),*(char))->(int)
(	O
puuconf	*(void)
,	O
zline	*(char)
)	O
pointer	*(void)
puuconf	*(void)
;	O
char	O
*	O
zline	*(char)
;	O
{	O
char	O
*	O
zvar	*(char)
,	O
*	O
zval	*(char)
;	O
char	O
*	O
azargs	array(*(char))
[	O
2	int
]	O
;	O
int	O
iuuconf	int
;	O
zvar	*(char)
=	O
strtok	(*(char),*(char))->(*(char))
(	O
zline	*(char)
,	O
"= \t"	*(char)
)	O
;	O
if	O
(	O
zvar	*(char)
==	O
NULL	O
)	O
{	O
ucuputs	O
(	O
abCuconnected	array(char)
)	O
;	O
return	O
TRUE	O
;	O
}	O
zval	*(char)
=	O
strtok	(*(char),*(char))->(*(char))
(	O
(	O
char	O
*	O
)	O
NULL	O
,	O
" \t"	*(char)
)	O
;	O
if	O
(	O
zval	*(char)
==	O
NULL	O
)	O
{	O
azargs	array(*(char))
[	O
0	int
]	O
=	O
zvar	*(char)
;	O
if	O
(	O
azargs	array(*(char))
[	O
0	int
]	O
[	O
0	int
]	O
!=	O
'!'	O
)	O
azargs	array(*(char))
[	O
1	int
]	O
=	O
zbufcpy	(*(char))->(*(char))
(	O
"t"	*(char)
)	O
;	O
else	O
{	O
++	O
azargs	array(*(char))
[	O
0	int
]	O
;	O
azargs	array(*(char))
[	O
1	int
]	O
=	O
zbufcpy	(*(char))->(*(char))
(	O
"f"	*(char)
)	O
;	O
}	O
}	O
else	O
{	O
azargs	array(*(char))
[	O
0	int
]	O
=	O
zvar	*(char)
;	O
azargs	array(*(char))
[	O
1	int
]	O
=	O
zbufcpy	(*(char))->(*(char))
(	O
zval	*(char)
)	O
;	O
}	O
iuuconf	int
=	O
uuconf_cmd_args	(*(void),int,*(*(char)),*(struct(*(char),int,*(void),*((*`,int,*`,*`,*`)->(int)))),*(void),*((*(void),int,*(*(char)),*(void),*(void))->(int)),int,*(void))->(int)
(	O
puuconf	*(void)
,	O
2	int
,	O
azargs	array(*(char))
,	O
asCuvars	array(struct(*(char),int,*(void),*((*(void),int,*(*(char)),*(void),*(void))->(int))))
,	O
(	O
pointer	*(void)
)	O
NULL	O
,	O
icuunrecogvar	(*(void),int,*(*(char)),*(void),*(void))->(int)
,	O
0	int
,	O
(	O
pointer	*(void)
)	O
NULL	O
)	O
;	O
if	O
(	O
(	O
iuuconf	int
&	O
UUCONF_CMDTABRET_KEEP	O
)	O
==	O
0	int
)	O
ubuffree	(*(char))->(void)
(	O
azargs	array(*(char))
[	O
1	int
]	O
)	O
;	O
if	O
(	O
(	O
iuuconf	int
&	O
~	O
UUCONF_CMDTABRET_KEEP	O
)	O
!=	O
UUCONF_SUCCESS	O
)	O
ulog_uuconf	(enum(int,int,int,int,int,int,int),*(void),int)->(void)
(	O
LOG_ERROR	int
,	O
puuconf	*(void)
,	O
iuuconf	int
)	O
;	O
return	O
TRUE	O
;	O
}	O
static	O
int	O
icuunrecogvar	(*(void),int,*(*(char)),*(void),*(void))->(int)
(	O
puuconf	*(void)
,	O
argc	int
,	O
argv	*(*(char))
,	O
pvar	*(void)
,	O
pinfo	*(void)
)	O
pointer	*(void)
puuconf	*(void)
ATTRIBUTE_UNUSED	O
;	O
int	O
argc	int
ATTRIBUTE_UNUSED	O
;	O
char	O
*	O
*	O
argv	*(*(char))
;	O
pointer	*(void)
pvar	*(void)
ATTRIBUTE_UNUSED	O
;	O
pointer	*(void)
pinfo	*(void)
ATTRIBUTE_UNUSED	O
;	O
{	O
char	O
abescape	array(char)
[	O
5	int
]	O
;	O
if	O
(	O
!	O
isprint	(int)->(int)
(	O
*	O
zCuvar_escape	*(char)
)	O
)	O
sprintf	(*(char),*(char))->(int)
(	O
abescape	array(char)
,	O
"\\%03o"	*(char)
,	O
BUCHAR	O
(	O
*	O
zCuvar_escape	*(char)
)	O
)	O
;	O
else	O
{	O
abescape	array(char)
[	O
0	int
]	O
=	O
*	O
zCuvar_escape	*(char)
;	O
abescape	array(char)
[	O
1	int
]	O
=	O
'\0'	O
;	O
}	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"%s: unknown variable (%sv lists variables)"	*(char)
,	O
argv	*(*(char))
[	O
0	int
]	O
,	O
abescape	array(char)
)	O
;	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
}	O
static	O
void	O
uculist_vars	()->(void)
(	O
)	O
{	O
const	O
struct	O
uuconf_cmdtab	struct(*(char),int,*(void),*((*(void),int,*(*(char)),*(void),*(void))->(int)))
*	O
q	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
;	O
char	O
abbuf	array(char)
[	O
100	int
]	O
;	O
ucuputs	O
(	O
""	*(char)
)	O
;	O
for	O
(	O
q	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
=	O
asCuvars	array(struct(*(char),int,*(void),*((*(void),int,*(*(char)),*(void),*(void))->(int))))
;	O
q	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
->	O
uuconf_zcmd	*(char)
!=	O
NULL	O
;	O
q	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
++	O
)	O
{	O
switch	O
(	O
UUCONF_TTYPE_CMDTABTYPE	O
(	O
q	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
->	O
uuconf_itype	int
)	O
)	O
{	O
case	O
UUCONF_TTYPE_CMDTABTYPE	O
(	O
UUCONF_CMDTABTYPE_BOOLEAN	O
)	O
:	O
if	O
(	O
*	O
(	O
boolean	int
*	O
)	O
q	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
->	O
uuconf_pvar	*(void)
)	O
sprintf	(*(char),*(char))->(int)
(	O
abbuf	array(char)
,	O
"%s true"	*(char)
,	O
q	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
->	O
uuconf_zcmd	*(char)
)	O
;	O
else	O
sprintf	(*(char),*(char))->(int)
(	O
abbuf	array(char)
,	O
"%s false"	*(char)
,	O
q	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
->	O
uuconf_zcmd	*(char)
)	O
;	O
break	O
;	O
case	O
UUCONF_TTYPE_CMDTABTYPE	O
(	O
UUCONF_CMDTABTYPE_INT	O
)	O
:	O
sprintf	(*(char),*(char))->(int)
(	O
abbuf	array(char)
,	O
"%s %d"	*(char)
,	O
q	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
->	O
uuconf_zcmd	*(char)
,	O
*	O
(	O
int	O
*	O
)	O
q	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
->	O
uuconf_pvar	*(void)
)	O
;	O
break	O
;	O
case	O
UUCONF_TTYPE_CMDTABTYPE	O
(	O
UUCONF_CMDTABTYPE_LONG	O
)	O
:	O
sprintf	(*(char),*(char))->(int)
(	O
abbuf	array(char)
,	O
"%s %ld"	*(char)
,	O
q	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
->	O
uuconf_zcmd	*(char)
,	O
*	O
(	O
long	O
*	O
)	O
q	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
->	O
uuconf_pvar	*(void)
)	O
;	O
break	O
;	O
case	O
UUCONF_TTYPE_CMDTABTYPE	O
(	O
UUCONF_CMDTABTYPE_STRING	O
)	O
:	O
case	O
UUCONF_TTYPE_CMDTABTYPE	O
(	O
UUCONF_CMDTABTYPE_FULLSTRING	O
)	O
:	O
{	O
const	O
char	O
*	O
z	*(char)
;	O
char	O
abchar	array(char)
[	O
5	int
]	O
;	O
size_t	long
clen	long
;	O
sprintf	(*(char),*(char))->(int)
(	O
abbuf	array(char)
,	O
"%s "	*(char)
,	O
q	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
->	O
uuconf_zcmd	*(char)
)	O
;	O
clen	long
=	O
strlen	(*(char))->(long)
(	O
abbuf	array(char)
)	O
;	O
for	O
(	O
z	*(char)
=	O
*	O
(	O
const	O
char	O
*	O
*	O
)	O
q	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
->	O
uuconf_pvar	*(void)
;	O
*	O
z	*(char)
!=	O
'\0'	O
;	O
z	*(char)
++	O
)	O
{	O
int	O
cchar	int
;	O
if	O
(	O
!	O
isprint	(int)->(int)
(	O
*	O
z	*(char)
)	O
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
abchar	array(char)
,	O
"\\%03o"	*(char)
,	O
BUCHAR	O
(	O
*	O
z	*(char)
)	O
)	O
;	O
cchar	int
=	O
4	int
;	O
}	O
else	O
{	O
abchar	array(char)
[	O
0	int
]	O
=	O
*	O
z	*(char)
;	O
abchar	array(char)
[	O
1	int
]	O
=	O
'\0'	O
;	O
cchar	int
=	O
1	int
;	O
}	O
if	O
(	O
clen	long
+	O
cchar	int
<	O
sizeof	O
(	O
abbuf	array(char)
)	O
)	O
strcat	(*(char),*(char))->(*(char))
(	O
abbuf	array(char)
,	O
abchar	array(char)
)	O
;	O
clen	long
+=	O
cchar	int
;	O
}	O
}	O
break	O
;	O
default	O
:	O
sprintf	(*(char),*(char))->(int)
(	O
abbuf	array(char)
,	O
"%s [unprintable type]"	*(char)
,	O
q	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
->	O
uuconf_zcmd	*(char)
)	O
;	O
break	O
;	O
}	O
ucuputs	O
(	O
abbuf	array(char)
)	O
;	O
}	O
}	O
static	O
char	O
bCutype	char
;	O
static	O
int	O
icubreak	(*(void),int,*(*(char)),*(void),*(void))->(int)
P	O
(	O
(	O
pointer	*(void)
puuconf	*(void)
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
,	O
pointer	*(void)
pvar	*(void)
,	O
pointer	*(void)
pinfo	*(void)
)	O
)	O
;	O
static	O
int	O
icudebug	(*(void),int,*(*(char)),*(void),*(void))->(int)
P	O
(	O
(	O
pointer	*(void)
puuconf	*(void)
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
,	O
pointer	*(void)
pvar	*(void)
,	O
pointer	*(void)
pinfo	*(void)
)	O
)	O
;	O
static	O
int	O
icuchdir	(*(void),int,*(*(char)),*(void),*(void))->(int)
P	O
(	O
(	O
pointer	*(void)
puuconf	*(void)
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
,	O
pointer	*(void)
pvar	*(void)
,	O
pointer	*(void)
pinfo	*(void)
)	O
)	O
;	O
static	O
int	O
icuput	(*(void),int,*(*(char)),*(void),*(void))->(int)
P	O
(	O
(	O
pointer	*(void)
puuconf	*(void)
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
,	O
pointer	*(void)
pvar	*(void)
,	O
pointer	*(void)
pinfo	*(void)
)	O
)	O
;	O
static	O
int	O
icutake	(*(void),int,*(*(char)),*(void),*(void))->(int)
P	O
(	O
(	O
pointer	*(void)
puuconf	*(void)
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
,	O
pointer	*(void)
pvar	*(void)
,	O
pointer	*(void)
pinfo	*(void)
)	O
)	O
;	O
static	O
int	O
icunostop	(*(void),int,*(*(char)),*(void),*(void))->(int)
P	O
(	O
(	O
pointer	*(void)
puuconf	*(void)
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
,	O
pointer	*(void)
pvar	*(void)
,	O
pointer	*(void)
pinfo	*(void)
)	O
)	O
;	O
static	O
const	O
struct	O
uuconf_cmdtab	struct(*(char),int,*(void),*((*(void),int,*(*(char)),*(void),*(void))->(int)))
asCucmds	array(struct(*(char),int,*(void),*((*(void),int,*(*(char)),*(void),*(void))->(int))))
[	O
]	O
=	O
{	O
{	O
"break"	*(char)
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
1	int
,	O
NULL	O
,	O
icubreak	(*(void),int,*(*(char)),*(void),*(void))->(int)
}	O
,	O
{	O
"b"	*(char)
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
1	int
,	O
NULL	O
,	O
icubreak	(*(void),int,*(*(char)),*(void),*(void))->(int)
}	O
,	O
{	O
"cd"	*(char)
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
0	int
,	O
NULL	O
,	O
icuchdir	(*(void),int,*(*(char)),*(void),*(void))->(int)
}	O
,	O
{	O
"d"	*(char)
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
1	int
,	O
NULL	O
,	O
icudebug	(*(void),int,*(*(char)),*(void),*(void))->(int)
}	O
,	O
{	O
"put"	*(char)
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
0	int
,	O
NULL	O
,	O
icuput	(*(void),int,*(*(char)),*(void),*(void))->(int)
}	O
,	O
{	O
"take"	*(char)
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
0	int
,	O
NULL	O
,	O
icutake	(*(void),int,*(*(char)),*(void),*(void))->(int)
}	O
,	O
{	O
"nostop"	*(char)
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
1	int
,	O
NULL	O
,	O
icunostop	(*(void),int,*(*(char)),*(void),*(void))->(int)
}	O
,	O
{	O
"stop"	*(char)
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
1	int
,	O
&	O
bCutype	char
,	O
icunostop	(*(void),int,*(*(char)),*(void),*(void))->(int)
}	O
,	O
{	O
">"	*(char)
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
0	int
,	O
&	O
bCutype	char
,	O
icuput	(*(void),int,*(*(char)),*(void),*(void))->(int)
}	O
,	O
{	O
"<"	*(char)
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
0	int
,	O
&	O
bCutype	char
,	O
icutake	(*(void),int,*(*(char)),*(void),*(void))->(int)
}	O
,	O
{	O
"p"	*(char)
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
0	int
,	O
NULL	O
,	O
icuput	(*(void),int,*(*(char)),*(void),*(void))->(int)
}	O
,	O
{	O
"t"	*(char)
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
0	int
,	O
NULL	O
,	O
icutake	(*(void),int,*(*(char)),*(void),*(void))->(int)
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
boolean	int
fcudo_subcmd	(*(void),*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char))->(int)
(	O
puuconf	*(void)
,	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zline	*(char)
)	O
pointer	*(void)
puuconf	*(void)
;	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
;	O
char	O
*	O
zline	*(char)
;	O
{	O
char	O
*	O
azargs	array(*(char))
[	O
3	int
]	O
;	O
int	O
iarg	int
;	O
int	O
iuuconf	int
;	O
for	O
(	O
iarg	int
=	O
0	int
;	O
iarg	int
<	O
3	int
;	O
iarg	int
++	O
)	O
{	O
azargs	array(*(char))
[	O
iarg	int
]	O
=	O
strtok	(*(char),*(char))->(*(char))
(	O
iarg	int
==	O
0	int
?	O
zline	*(char)
:	O
(	O
char	O
*	O
)	O
NULL	O
,	O
" \t\n"	*(char)
)	O
;	O
if	O
(	O
azargs	array(*(char))
[	O
iarg	int
]	O
==	O
NULL	O
)	O
break	O
;	O
}	O
if	O
(	O
iarg	int
==	O
0	int
)	O
{	O
ucuputs	O
(	O
abCuconnected	array(char)
)	O
;	O
return	O
TRUE	O
;	O
}	O
iuuconf	int
=	O
uuconf_cmd_args	(*(void),int,*(*(char)),*(struct(*(char),int,*(void),*((*`,int,*`,*`,*`)->(int)))),*(void),*((*(void),int,*(*(char)),*(void),*(void))->(int)),int,*(void))->(int)
(	O
puuconf	*(void)
,	O
iarg	int
,	O
azargs	array(*(char))
,	O
asCucmds	array(struct(*(char),int,*(void),*((*(void),int,*(*(char)),*(void),*(void))->(int))))
,	O
(	O
pointer	*(void)
)	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
icuunrecogfn	(*(void),int,*(*(char)),*(void),*(void))->(int)
,	O
0	int
,	O
(	O
pointer	*(void)
)	O
NULL	O
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
ulog_uuconf	(enum(int,int,int,int,int,int,int),*(void),int)->(void)
(	O
LOG_ERROR	int
,	O
puuconf	*(void)
,	O
iuuconf	int
)	O
;	O
return	O
TRUE	O
;	O
}	O
static	O
int	O
icuunrecogfn	(*(void),int,*(*(char)),*(void),*(void))->(int)
(	O
puuconf	*(void)
,	O
argc	int
,	O
argv	*(*(char))
,	O
pvar	*(void)
,	O
pinfo	*(void)
)	O
pointer	*(void)
puuconf	*(void)
ATTRIBUTE_UNUSED	O
;	O
int	O
argc	int
ATTRIBUTE_UNUSED	O
;	O
char	O
*	O
*	O
argv	*(*(char))
;	O
pointer	*(void)
pvar	*(void)
ATTRIBUTE_UNUSED	O
;	O
pointer	*(void)
pinfo	*(void)
ATTRIBUTE_UNUSED	O
;	O
{	O
char	O
abescape	array(char)
[	O
5	int
]	O
;	O
if	O
(	O
!	O
isprint	(int)->(int)
(	O
*	O
zCuvar_escape	*(char)
)	O
)	O
sprintf	(*(char),*(char))->(int)
(	O
abescape	array(char)
,	O
"\\%03o"	*(char)
,	O
BUCHAR	O
(	O
*	O
zCuvar_escape	*(char)
)	O
)	O
;	O
else	O
{	O
abescape	array(char)
[	O
0	int
]	O
=	O
*	O
zCuvar_escape	*(char)
;	O
abescape	array(char)
[	O
1	int
]	O
=	O
'\0'	O
;	O
}	O
if	O
(	O
argv	*(*(char))
[	O
0	int
]	O
[	O
0	int
]	O
==	O
'?'	O
)	O
uculist_fns	(*(char))->(void)
(	O
abescape	array(char)
)	O
;	O
else	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"%s: unknown (%s%%? lists choices)"	*(char)
,	O
argv	*(*(char))
[	O
0	int
]	O
,	O
abescape	array(char)
)	O
;	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
}	O
static	O
int	O
icubreak	(*(void),int,*(*(char)),*(void),*(void))->(int)
(	O
puuconf	*(void)
,	O
argc	int
,	O
argv	*(*(char))
,	O
pvar	*(void)
,	O
pinfo	*(void)
)	O
pointer	*(void)
puuconf	*(void)
ATTRIBUTE_UNUSED	O
;	O
int	O
argc	int
ATTRIBUTE_UNUSED	O
;	O
char	O
*	O
*	O
argv	*(*(char))
ATTRIBUTE_UNUSED	O
;	O
pointer	*(void)
pvar	*(void)
ATTRIBUTE_UNUSED	O
;	O
pointer	*(void)
pinfo	*(void)
;	O
{	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
=	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
)	O
pinfo	*(void)
;	O
if	O
(	O
!	O
fconn_break	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
}	O
static	O
int	O
icuchdir	(*(void),int,*(*(char)),*(void),*(void))->(int)
(	O
puuconf	*(void)
,	O
argc	int
,	O
argv	*(*(char))
,	O
pvar	*(void)
,	O
pinfo	*(void)
)	O
pointer	*(void)
puuconf	*(void)
ATTRIBUTE_UNUSED	O
;	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	*(*(char))
;	O
pointer	*(void)
pvar	*(void)
ATTRIBUTE_UNUSED	O
;	O
pointer	*(void)
pinfo	*(void)
ATTRIBUTE_UNUSED	O
;	O
{	O
const	O
char	O
*	O
zarg	*(char)
;	O
if	O
(	O
argc	int
<=	O
1	int
)	O
zarg	*(char)
=	O
NULL	O
;	O
else	O
zarg	*(char)
=	O
argv	*(*(char))
[	O
1	int
]	O
;	O
(	O
void	O
)	O
fsysdep_chdir	(*(char))->(int)
(	O
zarg	*(char)
)	O
;	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
}	O
static	O
int	O
icudebug	(*(void),int,*(*(char)),*(void),*(void))->(int)
(	O
puuconf	*(void)
,	O
argc	int
,	O
argv	*(*(char))
,	O
pvar	*(void)
,	O
pinfo	*(void)
)	O
pointer	*(void)
puuconf	*(void)
ATTRIBUTE_UNUSED	O
;	O
int	O
argc	int
ATTRIBUTE_UNUSED	O
;	O
char	O
*	O
*	O
argv	*(*(char))
ATTRIBUTE_UNUSED	O
;	O
pointer	*(void)
pvar	*(void)
ATTRIBUTE_UNUSED	O
;	O
pointer	*(void)
pinfo	*(void)
ATTRIBUTE_UNUSED	O
;	O
{	O
if	O
(	O
iDebug	int
!=	O
0	int
)	O
iDebug	int
=	O
0	int
;	O
else	O
iDebug	int
=	O
DEBUG_MAX	O
;	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
}	O
static	O
int	O
icunostop	(*(void),int,*(*(char)),*(void),*(void))->(int)
(	O
puuconf	*(void)
,	O
argc	int
,	O
argv	*(*(char))
,	O
pvar	*(void)
,	O
pinfo	*(void)
)	O
pointer	*(void)
puuconf	*(void)
ATTRIBUTE_UNUSED	O
;	O
int	O
argc	int
ATTRIBUTE_UNUSED	O
;	O
char	O
*	O
*	O
argv	*(*(char))
ATTRIBUTE_UNUSED	O
;	O
pointer	*(void)
pvar	*(void)
;	O
pointer	*(void)
pinfo	*(void)
;	O
{	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
=	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
)	O
pinfo	*(void)
;	O
if	O
(	O
!	O
fconn_set	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
PARITYSETTING_DEFAULT	int
,	O
STRIPSETTING_DEFAULT	int
,	O
pvar	*(void)
==	O
NULL	O
?	O
XONXOFF_OFF	int
:	O
XONXOFF_ON	int
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
}	O
static	O
int	O
icuput	(*(void),int,*(*(char)),*(void),*(void))->(int)
(	O
puuconf	*(void)
,	O
argc	int
,	O
argv	*(*(char))
,	O
pvar	*(void)
,	O
pinfo	*(void)
)	O
pointer	*(void)
puuconf	*(void)
ATTRIBUTE_UNUSED	O
;	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	*(*(char))
;	O
pointer	*(void)
pvar	*(void)
;	O
pointer	*(void)
pinfo	*(void)
;	O
{	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
=	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
)	O
pinfo	*(void)
;	O
char	O
*	O
zfrom	*(char)
;	O
char	O
*	O
zto	*(char)
=	O
NULL	O
;	O
char	O
*	O
zalc	*(char)
;	O
openfile_t	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
int	O
cline	int
;	O
char	O
*	O
zbuf	*(char)
;	O
size_t	long
cbuf	long
;	O
if	O
(	O
argc	int
>	O
1	int
)	O
zfrom	*(char)
=	O
zbufcpy	(*(char))->(*(char))
(	O
argv	*(*(char))
[	O
1	int
]	O
)	O
;	O
else	O
{	O
zfrom	*(char)
=	O
zsysdep_terminal_line	(*(char))->(*(char))
(	O
"File to send: "	*(char)
)	O
;	O
if	O
(	O
zfrom	*(char)
==	O
NULL	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
zfrom	*(char)
[	O
strcspn	(*(char),*(char))->(long)
(	O
zfrom	*(char)
,	O
" \t\n"	*(char)
)	O
]	O
=	O
'\0'	O
;	O
if	O
(	O
*	O
zfrom	*(char)
==	O
'\0'	O
)	O
{	O
ubuffree	(*(char))->(void)
(	O
zfrom	*(char)
)	O
;	O
ucuputs	O
(	O
abCuconnected	array(char)
)	O
;	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
}	O
}	O
if	O
(	O
pvar	*(void)
==	O
NULL	O
)	O
{	O
if	O
(	O
argc	int
>	O
2	int
)	O
zto	*(char)
=	O
zbufcpy	(*(char))->(*(char))
(	O
argv	*(*(char))
[	O
2	int
]	O
)	O
;	O
else	O
{	O
char	O
*	O
zbase	*(char)
;	O
char	O
*	O
zprompt	*(char)
;	O
zbase	*(char)
=	O
zsysdep_base_name	(*(char))->(*(char))
(	O
zfrom	*(char)
)	O
;	O
if	O
(	O
zbase	*(char)
==	O
NULL	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
zprompt	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
sizeof	O
"Remote file name []: "	*(char)
+	O
strlen	(*(char))->(long)
(	O
zbase	*(char)
)	O
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
zprompt	*(char)
,	O
"Remote file name [%s]: "	*(char)
,	O
zbase	*(char)
)	O
;	O
zto	*(char)
=	O
zsysdep_terminal_line	(*(char))->(*(char))
(	O
zprompt	*(char)
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zprompt	*(char)
)	O
;	O
if	O
(	O
zto	*(char)
==	O
NULL	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
zto	*(char)
[	O
strcspn	(*(char),*(char))->(long)
(	O
zto	*(char)
,	O
" \t\n"	*(char)
)	O
]	O
=	O
'\0'	O
;	O
if	O
(	O
*	O
zto	*(char)
!=	O
'\0'	O
)	O
ubuffree	(*(char))->(void)
(	O
zbase	*(char)
)	O
;	O
else	O
{	O
ubuffree	(*(char))->(void)
(	O
zto	*(char)
)	O
;	O
zto	*(char)
=	O
zbase	*(char)
;	O
}	O
}	O
}	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
esysdep_user_fopen	(*(char),int,int)->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
zfrom	*(char)
,	O
TRUE	O
,	O
fCuvar_binary	int
)	O
;	O
if	O
(	O
!	O
ffileisopen	O
(	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
const	O
char	O
*	O
zerrstr	*(char)
;	O
if	O
(	O
pvar	*(void)
==	O
NULL	O
)	O
ubuffree	(*(char))->(void)
(	O
zto	*(char)
)	O
;	O
zerrstr	*(char)
=	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
;	O
zalc	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
strlen	(*(char))->(long)
(	O
zfrom	*(char)
)	O
+	O
sizeof	O
": "	*(char)
+	O
strlen	(*(char))->(long)
(	O
zerrstr	*(char)
)	O
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
zalc	*(char)
,	O
"%s: %s"	*(char)
,	O
zfrom	*(char)
,	O
zerrstr	*(char)
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zfrom	*(char)
)	O
;	O
ucuputs	O
(	O
zalc	*(char)
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zalc	*(char)
)	O
;	O
ucuputs	O
(	O
abCuconnected	array(char)
)	O
;	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
}	O
ubuffree	(*(char))->(void)
(	O
zfrom	*(char)
)	O
;	O
if	O
(	O
!	O
fsysdep_cu_copy	(int)->(int)
(	O
FALSE	O
)	O
||	O
!	O
fsysdep_terminal_signals	(int)->(int)
(	O
TRUE	O
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
if	O
(	O
pvar	*(void)
==	O
NULL	O
)	O
{	O
boolean	int
fret	int
;	O
zalc	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
sizeof	O
"cat > \n"	*(char)
+	O
strlen	(*(char))->(long)
(	O
zto	*(char)
)	O
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
zalc	*(char)
,	O
"cat > %s\n"	*(char)
,	O
zto	*(char)
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zto	*(char)
)	O
;	O
fret	int
=	O
fcusend_buf	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zalc	*(char)
,	O
strlen	(*(char))->(long)
(	O
zalc	*(char)
)	O
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zalc	*(char)
)	O
;	O
if	O
(	O
!	O
fret	int
)	O
{	O
(	O
void	O
)	O
ffileclose	O
(	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
!	O
fsysdep_cu_copy	(int)->(int)
(	O
TRUE	O
)	O
||	O
!	O
fsysdep_terminal_signals	(int)->(int)
(	O
FALSE	O
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
ucuputs	O
(	O
abCuconnected	array(char)
)	O
;	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
}	O
}	O
cline	int
=	O
0	int
;	O
zbuf	*(char)
=	O
NULL	O
;	O
cbuf	long
=	O
0	int
;	O
while	O
(	O
TRUE	O
)	O
{	O
char	O
abbuf	array(char)
[	O
512	int
]	O
;	O
size_t	long
c	long
;	O
if	O
(	O
fCuvar_binary	int
)	O
{	O
if	O
(	O
ffileeof	O
(	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
break	O
;	O
c	long
=	O
cfileread	O
(	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
abbuf	array(char)
,	O
sizeof	O
abbuf	array(char)
)	O
;	O
if	O
(	O
ffileioerror	O
(	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
c	long
)	O
)	O
{	O
ucuputs	O
(	O
"[file read error]"	*(char)
)	O
;	O
break	O
;	O
}	O
if	O
(	O
c	long
==	O
0	int
)	O
break	O
;	O
zbuf	*(char)
=	O
abbuf	array(char)
;	O
}	O
else	O
{	O
if	O
(	O
getline	(*(*(char)),*(long),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
&	O
zbuf	*(char)
,	O
&	O
cbuf	long
,	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
<=	O
0	int
)	O
{	O
xfree	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
zbuf	*(char)
)	O
;	O
break	O
;	O
}	O
c	long
=	O
strlen	(*(char))->(long)
(	O
zbuf	*(char)
)	O
;	O
}	O
if	O
(	O
fCuvar_verbose	int
)	O
{	O
++	O
cline	int
;	O
printf	(*(char))->(int)
(	O
"%d "	*(char)
,	O
cline	int
)	O
;	O
(	O
void	O
)	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
if	O
(	O
!	O
fcusend_buf	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zbuf	*(char)
,	O
c	long
)	O
)	O
{	O
if	O
(	O
!	O
fCuvar_binary	int
)	O
xfree	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
zbuf	*(char)
)	O
;	O
(	O
void	O
)	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
!	O
fsysdep_cu_copy	(int)->(int)
(	O
TRUE	O
)	O
||	O
!	O
fsysdep_terminal_signals	(int)->(int)
(	O
FALSE	O
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
ucuputs	O
(	O
abCuconnected	array(char)
)	O
;	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
}	O
}	O
(	O
void	O
)	O
ffileclose	O
(	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
pvar	*(void)
==	O
NULL	O
)	O
{	O
char	O
beof	char
;	O
beof	char
=	O
'\004'	O
;	O
if	O
(	O
!	O
fconn_write	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
&	O
beof	char
,	O
1	int
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
}	O
else	O
{	O
if	O
(	O
*	O
zCuvar_eofwrite	*(char)
!=	O
'\0'	O
)	O
{	O
if	O
(	O
!	O
fconn_write	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zCuvar_eofwrite	*(char)
,	O
strlen	(*(char))->(long)
(	O
zCuvar_eofwrite	*(char)
)	O
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
}	O
}	O
if	O
(	O
fCuvar_verbose	int
)	O
ucuputs	O
(	O
""	*(char)
)	O
;	O
ucuputs	O
(	O
"[file transfer complete]"	*(char)
)	O
;	O
if	O
(	O
!	O
fsysdep_cu_copy	(int)->(int)
(	O
TRUE	O
)	O
||	O
!	O
fsysdep_terminal_signals	(int)->(int)
(	O
FALSE	O
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
ucuputs	O
(	O
abCuconnected	array(char)
)	O
;	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
}	O
static	O
int	O
icutake	(*(void),int,*(*(char)),*(void),*(void))->(int)
(	O
puuconf	*(void)
,	O
argc	int
,	O
argv	*(*(char))
,	O
pvar	*(void)
,	O
pinfo	*(void)
)	O
pointer	*(void)
puuconf	*(void)
ATTRIBUTE_UNUSED	O
;	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	*(*(char))
;	O
pointer	*(void)
pvar	*(void)
;	O
pointer	*(void)
pinfo	*(void)
;	O
{	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
=	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
)	O
pinfo	*(void)
;	O
const	O
char	O
*	O
zeof	*(char)
;	O
char	O
*	O
zfrom	*(char)
,	O
*	O
zto	*(char)
,	O
*	O
zcmd	*(char)
;	O
char	O
*	O
zalc	*(char)
;	O
openfile_t	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
char	O
bcr	char
;	O
size_t	long
ceoflen	long
;	O
char	O
*	O
zlook	*(char)
=	O
NULL	O
;	O
size_t	long
ceofhave	long
;	O
boolean	int
ferr	int
;	O
if	O
(	O
argc	int
>	O
1	int
)	O
zfrom	*(char)
=	O
zbufcpy	(*(char))->(*(char))
(	O
argv	*(*(char))
[	O
1	int
]	O
)	O
;	O
else	O
{	O
zfrom	*(char)
=	O
zsysdep_terminal_line	(*(char))->(*(char))
(	O
"Remote file to retreive: "	*(char)
)	O
;	O
if	O
(	O
zfrom	*(char)
==	O
NULL	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
zfrom	*(char)
[	O
strcspn	(*(char),*(char))->(long)
(	O
zfrom	*(char)
,	O
" \t\n"	*(char)
)	O
]	O
=	O
'\0'	O
;	O
if	O
(	O
*	O
zfrom	*(char)
==	O
'\0'	O
)	O
{	O
ubuffree	(*(char))->(void)
(	O
zfrom	*(char)
)	O
;	O
ucuputs	O
(	O
abCuconnected	array(char)
)	O
;	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
}	O
}	O
if	O
(	O
argc	int
>	O
2	int
)	O
zto	*(char)
=	O
zbufcpy	(*(char))->(*(char))
(	O
argv	*(*(char))
[	O
2	int
]	O
)	O
;	O
else	O
{	O
char	O
*	O
zbase	*(char)
;	O
char	O
*	O
zprompt	*(char)
;	O
zbase	*(char)
=	O
zsysdep_base_name	(*(char))->(*(char))
(	O
zfrom	*(char)
)	O
;	O
if	O
(	O
zbase	*(char)
==	O
NULL	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
zprompt	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
sizeof	O
"Local file name []: "	*(char)
+	O
strlen	(*(char))->(long)
(	O
zbase	*(char)
)	O
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
zprompt	*(char)
,	O
"Local file name [%s]: "	*(char)
,	O
zbase	*(char)
)	O
;	O
zto	*(char)
=	O
zsysdep_terminal_line	(*(char))->(*(char))
(	O
zprompt	*(char)
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zprompt	*(char)
)	O
;	O
if	O
(	O
zto	*(char)
==	O
NULL	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
zto	*(char)
[	O
strcspn	(*(char),*(char))->(long)
(	O
zto	*(char)
,	O
" \t\n"	*(char)
)	O
]	O
=	O
'\0'	O
;	O
if	O
(	O
*	O
zto	*(char)
!=	O
'\0'	O
)	O
ubuffree	(*(char))->(void)
(	O
zbase	*(char)
)	O
;	O
else	O
{	O
ubuffree	(*(char))->(void)
(	O
zto	*(char)
)	O
;	O
zto	*(char)
=	O
zbase	*(char)
;	O
}	O
}	O
if	O
(	O
pvar	*(void)
!=	O
NULL	O
)	O
{	O
zcmd	*(char)
=	O
zsysdep_terminal_line	(*(char))->(*(char))
(	O
"Remote command to execute: "	*(char)
)	O
;	O
if	O
(	O
zcmd	*(char)
==	O
NULL	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
zcmd	*(char)
[	O
strcspn	(*(char),*(char))->(long)
(	O
zcmd	*(char)
,	O
"\n"	*(char)
)	O
]	O
=	O
'\0'	O
;	O
zeof	*(char)
=	O
zCuvar_eofread	*(char)
;	O
}	O
else	O
{	O
zcmd	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
sizeof	O
"cat ; echo; echo ////cuend////"	*(char)
+	O
strlen	(*(char))->(long)
(	O
zfrom	*(char)
)	O
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
zcmd	*(char)
,	O
"cat %s; echo; echo ////cuend////"	*(char)
,	O
zfrom	*(char)
)	O
;	O
zeof	*(char)
=	O
"\n////cuend////\n"	*(char)
;	O
}	O
ubuffree	(*(char))->(void)
(	O
zfrom	*(char)
)	O
;	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
esysdep_user_fopen	(*(char),int,int)->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
zto	*(char)
,	O
FALSE	O
,	O
fCuvar_binary	int
)	O
;	O
if	O
(	O
!	O
ffileisopen	O
(	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
const	O
char	O
*	O
zerrstr	*(char)
;	O
ubuffree	(*(char))->(void)
(	O
zcmd	*(char)
)	O
;	O
zerrstr	*(char)
=	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
;	O
zalc	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
strlen	(*(char))->(long)
(	O
zto	*(char)
)	O
+	O
sizeof	O
": "	*(char)
+	O
strlen	(*(char))->(long)
(	O
zerrstr	*(char)
)	O
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
zalc	*(char)
,	O
"%s: %s\n"	*(char)
,	O
zto	*(char)
,	O
zerrstr	*(char)
)	O
;	O
ucuputs	O
(	O
zalc	*(char)
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zalc	*(char)
)	O
;	O
ucuputs	O
(	O
abCuconnected	array(char)
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zto	*(char)
)	O
;	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
}	O
if	O
(	O
!	O
fsysdep_cu_copy	(int)->(int)
(	O
FALSE	O
)	O
||	O
!	O
fsysdep_terminal_signals	(int)->(int)
(	O
TRUE	O
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
if	O
(	O
!	O
fconn_write	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zcmd	*(char)
,	O
strlen	(*(char))->(long)
(	O
zcmd	*(char)
)	O
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
bcr	char
=	O
'\r'	O
;	O
if	O
(	O
!	O
fconn_write	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
&	O
bcr	char
,	O
1	int
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zcmd	*(char)
)	O
;	O
iPrecstart	int
=	O
0	int
;	O
iPrecend	int
=	O
0	int
;	O
if	O
(	O
pvar	*(void)
==	O
NULL	O
)	O
{	O
int	O
b	int
;	O
while	O
(	O
(	O
b	int
=	O
breceive_char	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int,int)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
cCuvar_timeout	int
,	O
TRUE	O
)	O
)	O
!=	O
'\n'	O
)	O
{	O
if	O
(	O
b	int
==	O
-	O
2	int
)	O
ucuabort	()->(void)
(	O
)	O
;	O
if	O
(	O
b	int
<	O
0	int
)	O
{	O
ucuputs	O
(	O
"[timed out waiting for newline]"	*(char)
)	O
;	O
ucuputs	O
(	O
abCuconnected	array(char)
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zto	*(char)
)	O
;	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
}	O
}	O
}	O
ceoflen	long
=	O
strlen	(*(char))->(long)
(	O
zeof	*(char)
)	O
;	O
zlook	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
ceoflen	long
)	O
;	O
ceofhave	long
=	O
0	int
;	O
ferr	int
=	O
FALSE	O
;	O
while	O
(	O
TRUE	O
)	O
{	O
int	O
b	int
;	O
if	O
(	O
FGOT_SIGNAL	O
(	O
)	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
ucuputs	O
(	O
"[file receive aborted]"	*(char)
)	O
;	O
afSignal	array(int)
[	O
INDEXSIG_SIGINT	O
]	O
=	O
FALSE	O
;	O
break	O
;	O
}	O
b	int
=	O
breceive_char	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int,int)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
cCuvar_timeout	int
,	O
TRUE	O
)	O
;	O
if	O
(	O
b	int
==	O
-	O
2	int
)	O
ucuabort	()->(void)
(	O
)	O
;	O
if	O
(	O
b	int
<	O
0	int
)	O
{	O
if	O
(	O
ceofhave	long
>	O
0	int
)	O
(	O
void	O
)	O
fwrite	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
zlook	*(char)
,	O
sizeof	O
(	O
char	O
)	O
,	O
ceofhave	long
,	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
ucuputs	O
(	O
"[timed out]"	*(char)
)	O
;	O
break	O
;	O
}	O
if	O
(	O
b	int
==	O
'\r'	O
&&	O
!	O
fCuvar_binary	int
)	O
continue	O
;	O
if	O
(	O
ceoflen	long
==	O
0	int
)	O
{	O
if	O
(	O
cfilewrite	O
(	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
&	O
b	int
,	O
1	int
)	O
!=	O
1	int
)	O
{	O
ferr	int
=	O
TRUE	O
;	O
break	O
;	O
}	O
}	O
else	O
{	O
zlook	*(char)
[	O
ceofhave	long
]	O
=	O
b	int
;	O
++	O
ceofhave	long
;	O
if	O
(	O
ceofhave	long
==	O
ceoflen	long
)	O
{	O
size_t	long
cmove	long
;	O
char	O
*	O
zmove	*(char)
;	O
if	O
(	O
memcmp	(*(void),*(void),long)->(int)
(	O
zeof	*(char)
,	O
zlook	*(char)
,	O
ceoflen	long
)	O
==	O
0	int
)	O
{	O
ucuputs	O
(	O
"[file transfer complete]"	*(char)
)	O
;	O
break	O
;	O
}	O
if	O
(	O
cfilewrite	O
(	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
zlook	*(char)
,	O
1	int
)	O
!=	O
1	int
)	O
{	O
ferr	int
=	O
TRUE	O
;	O
break	O
;	O
}	O
zmove	*(char)
=	O
zlook	*(char)
;	O
for	O
(	O
cmove	long
=	O
ceoflen	long
-	O
1	int
,	O
zmove	*(char)
=	O
zlook	*(char)
;	O
cmove	long
>	O
0	int
;	O
cmove	long
--	O
,	O
zmove	*(char)
++	O
)	O
zmove	*(char)
[	O
0	int
]	O
=	O
zmove	*(char)
[	O
1	int
]	O
;	O
--	O
ceofhave	long
;	O
}	O
}	O
}	O
ubuffree	(*(char))->(void)
(	O
zlook	*(char)
)	O
;	O
if	O
(	O
!	O
fsysdep_sync	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
zto	*(char)
)	O
)	O
{	O
(	O
void	O
)	O
ffileclose	O
(	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
ferr	int
=	O
TRUE	O
;	O
}	O
else	O
{	O
if	O
(	O
!	O
ffileclose	O
(	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
ferr	int
=	O
TRUE	O
;	O
}	O
if	O
(	O
ferr	int
)	O
ucuputs	O
(	O
"[file write error]"	*(char)
)	O
;	O
if	O
(	O
!	O
fsysdep_cu_copy	(int)->(int)
(	O
TRUE	O
)	O
||	O
!	O
fsysdep_terminal_signals	(int)->(int)
(	O
FALSE	O
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
ucuputs	O
(	O
abCuconnected	array(char)
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zto	*(char)
)	O
;	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
}	O
static	O
boolean	int
fcusend_buf	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zbufarg	*(char)
,	O
cbufarg	long
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
;	O
const	O
char	O
*	O
zbufarg	*(char)
;	O
size_t	long
cbufarg	long
;	O
{	O
const	O
char	O
*	O
zbuf	*(char)
;	O
size_t	long
cbuf	long
;	O
int	O
ctries	int
;	O
size_t	long
cbplen	long
;	O
char	O
*	O
zsendbuf	*(char)
;	O
zbuf	*(char)
=	O
zbufarg	*(char)
;	O
cbuf	long
=	O
cbufarg	long
;	O
ctries	int
=	O
0	int
;	O
if	O
(	O
fCuvar_binary	int
)	O
cbplen	long
=	O
strlen	(*(char))->(long)
(	O
zCuvar_binary_prefix	*(char)
)	O
;	O
else	O
cbplen	long
=	O
1	int
;	O
zsendbuf	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
64	int
*	O
(	O
cbplen	long
+	O
1	int
)	O
)	O
;	O
while	O
(	O
cbuf	long
>	O
0	int
)	O
{	O
int	O
csend	long
;	O
char	O
*	O
zput	*(char)
;	O
const	O
char	O
*	O
zget	*(char)
;	O
boolean	int
fnl	int
;	O
int	O
i	int
;	O
if	O
(	O
FGOT_SIGNAL	O
(	O
)	O
)	O
{	O
ubuffree	(*(char))->(void)
(	O
zsendbuf	*(char)
)	O
;	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
ucuputs	O
(	O
"[file send aborted]"	*(char)
)	O
;	O
afSignal	array(int)
[	O
INDEXSIG_SIGINT	O
]	O
=	O
FALSE	O
;	O
return	O
FALSE	O
;	O
}	O
iPrecstart	int
=	O
0	int
;	O
iPrecend	int
=	O
0	int
;	O
if	O
(	O
*	O
zbuf	*(char)
==	O
'\n'	O
)	O
csend	long
=	O
1	int
;	O
else	O
{	O
const	O
char	O
*	O
znl	*(char)
;	O
znl	*(char)
=	O
memchr	(*(void),int,long)->(*(void))
(	O
zbuf	*(char)
,	O
'\n'	O
,	O
cbuf	long
)	O
;	O
if	O
(	O
znl	*(char)
==	O
NULL	O
)	O
csend	long
=	O
cbuf	long
;	O
else	O
csend	long
=	O
znl	*(char)
-	O
zbuf	*(char)
;	O
if	O
(	O
csend	long
>	O
64	int
)	O
csend	long
=	O
64	int
;	O
}	O
zput	*(char)
=	O
zsendbuf	*(char)
;	O
fnl	int
=	O
FALSE	O
;	O
for	O
(	O
i	int
=	O
0	int
,	O
zget	*(char)
=	O
zbuf	*(char)
;	O
i	int
<	O
csend	long
;	O
i	int
++	O
,	O
zget	*(char)
++	O
)	O
{	O
if	O
(	O
isprint	(int)->(int)
(	O
*	O
zget	*(char)
)	O
||	O
*	O
zget	*(char)
==	O
'\t'	O
)	O
*	O
zput	*(char)
++	O
=	O
*	O
zget	*(char)
;	O
else	O
if	O
(	O
*	O
zget	*(char)
==	O
'\n'	O
)	O
{	O
if	O
(	O
fCuvar_binary	int
)	O
*	O
zput	*(char)
++	O
=	O
'\n'	O
;	O
else	O
*	O
zput	*(char)
++	O
=	O
'\r'	O
;	O
fnl	int
=	O
TRUE	O
;	O
}	O
else	O
if	O
(	O
fCuvar_binary	int
)	O
{	O
strcpy	(*(char),*(char))->(*(char))
(	O
zput	*(char)
,	O
zCuvar_binary_prefix	*(char)
)	O
;	O
zput	*(char)
+=	O
cbplen	long
;	O
*	O
zput	*(char)
++	O
=	O
*	O
zget	*(char)
;	O
}	O
}	O
zbuf	*(char)
+=	O
csend	long
;	O
cbuf	long
-=	O
csend	long
;	O
if	O
(	O
zput	*(char)
==	O
zsendbuf	*(char)
)	O
continue	O
;	O
if	O
(	O
!	O
fsend_data	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long,int)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zsendbuf	*(char)
,	O
(	O
size_t	long
)	O
(	O
zput	*(char)
-	O
zsendbuf	*(char)
)	O
,	O
TRUE	O
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
if	O
(	O
(	O
fCuvar_echocheck	int
&&	O
!	O
fCuvar_binary	int
)	O
||	O
(	O
fnl	int
&&	O
*	O
zCuvar_echonl	*(char)
!=	O
'\0'	O
)	O
)	O
{	O
long	O
iend	long
;	O
iend	long
=	O
ixsysdep_time	(*(long))->(long)
(	O
(	O
long	O
*	O
)	O
NULL	O
)	O
+	O
(	O
long	O
)	O
cCuvar_timeout	int
;	O
for	O
(	O
zget	*(char)
=	O
zsendbuf	*(char)
;	O
zget	*(char)
<	O
zput	*(char)
;	O
zget	*(char)
++	O
)	O
{	O
int	O
bread	int
;	O
int	O
bwant	int
;	O
if	O
(	O
fCuvar_binary	int
?	O
*	O
zget	*(char)
==	O
'\n'	O
:	O
*	O
zget	*(char)
==	O
'\r'	O
)	O
{	O
bwant	int
=	O
*	O
zCuvar_echonl	*(char)
;	O
if	O
(	O
bwant	int
==	O
'\0'	O
)	O
continue	O
;	O
}	O
else	O
{	O
if	O
(	O
!	O
fCuvar_echocheck	int
||	O
!	O
isprint	(int)->(int)
(	O
*	O
zget	*(char)
)	O
)	O
continue	O
;	O
bwant	int
=	O
*	O
zget	*(char)
;	O
}	O
do	O
{	O
if	O
(	O
FGOT_SIGNAL	O
(	O
)	O
)	O
{	O
ubuffree	(*(char))->(void)
(	O
zsendbuf	*(char)
)	O
;	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
ucuputs	O
(	O
"[file send aborted]"	*(char)
)	O
;	O
afSignal	array(int)
[	O
INDEXSIG_SIGINT	O
]	O
=	O
FALSE	O
;	O
return	O
FALSE	O
;	O
}	O
bread	int
=	O
breceive_char	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int,int)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
iend	long
-	O
ixsysdep_time	(*(long))->(long)
(	O
(	O
long	O
*	O
)	O
NULL	O
)	O
,	O
TRUE	O
)	O
;	O
if	O
(	O
bread	int
<	O
0	int
)	O
{	O
if	O
(	O
bread	int
==	O
-	O
2	int
)	O
ucuabort	()->(void)
(	O
)	O
;	O
if	O
(	O
!	O
fCuvar_binary	int
&&	O
*	O
zCuvar_kill	*(char)
!=	O
'\0'	O
)	O
{	O
++	O
ctries	int
;	O
if	O
(	O
ctries	int
<	O
cCuvar_resend	int
)	O
{	O
if	O
(	O
fCuvar_verbose	int
)	O
{	O
printf	(*(char))->(int)
(	O
"R "	*(char)
)	O
;	O
(	O
void	O
)	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
if	O
(	O
!	O
fsend_data	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long,int)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zCuvar_kill	*(char)
,	O
1	int
,	O
TRUE	O
)	O
)	O
ucuabort	()->(void)
(	O
)	O
;	O
zbuf	*(char)
=	O
zbufarg	*(char)
;	O
cbuf	long
=	O
cbufarg	long
;	O
break	O
;	O
}	O
}	O
ubuffree	(*(char))->(void)
(	O
zsendbuf	*(char)
)	O
;	O
ucuputs	O
(	O
"[timed out looking for echo]"	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
while	O
(	O
bread	int
!=	O
*	O
zget	*(char)
)	O
;	O
if	O
(	O
bread	int
<	O
0	int
)	O
break	O
;	O
}	O
}	O
}	O
ubuffree	(*(char))->(void)
(	O
zsendbuf	*(char)
)	O
;	O
return	O
TRUE	O
;	O
}	O
