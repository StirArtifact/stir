int	O
board_size	int
=	O
DEFAULT_BOARD_SIZE	O
;	O
Intersection	char
board	*(char)
[	O
BOARDSIZE	O
]	O
;	O
int	O
board_ko_pos	int
;	O
int	O
white_captured	int
;	O
int	O
black_captured	int
;	O
Intersection	char
initial_board	array(char)
[	O
BOARDSIZE	O
]	O
;	O
int	O
initial_board_ko_pos	int
;	O
int	O
initial_white_captured	int
;	O
int	O
initial_black_captured	int
;	O
int	O
move_history_color	array(int)
[	O
MAX_MOVE_HISTORY	int
]	O
;	O
int	O
move_history_pos	array(int)
[	O
MAX_MOVE_HISTORY	int
]	O
;	O
Hash_data	struct(array(long))
move_history_hash	array(struct(array(long)))
[	O
MAX_MOVE_HISTORY	int
]	O
;	O
int	O
move_history_pointer	int
;	O
float	O
komi	float
=	O
0.0	int
;	O
int	O
handicap	int
=	O
0	int
;	O
int	O
movenum	int
;	O
enum	O
suicide_rules	enum(int,int,int)
suicide_rule	enum(int,int,int)
=	O
FORBIDDEN	int
;	O
enum	O
ko_rules	enum(int,int,int,int)
ko_rule	enum(int,int,int,int)
=	O
SIMPLE	int
;	O
signed	O
char	O
shadow	array(char)
[	O
BOARDMAX	O
]	O
;	O
Hash_data	struct(array(long))
board_hash	struct(array(long))
;	O
int	O
stackp	int
;	O
int	O
position_number	int
;	O
struct	O
stats_data	struct(int,int,int,int)
stats	struct(int,int,int,int)
;	O
int	O
count_variations	int
=	O
0	int
;	O
SGFTree	struct(*(struct(*(struct(*`,short,*`)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))),*(struct(*(struct(*`,short,*`)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))
*	O
sgf_dumptree	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(struct`)))))
=	O
NULL	O
;	O
