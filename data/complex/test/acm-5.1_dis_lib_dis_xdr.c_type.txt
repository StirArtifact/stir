bool_t	int
xdr_dis_float_vector	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(float,float,float)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_float_vector	struct(float,float,float)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
x	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
y	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
z	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_angular_vel_vector	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(float,float,float)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_angular_vel_vector	struct(float,float,float)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
x	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
y	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
z	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_linear_acc_vector	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(float,float,float)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_linear_acc_vector	struct(float,float,float)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
x	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
y	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
z	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_linear_vel_vector	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(float,float,float)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_linear_vel_vector	struct(float,float,float)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
x	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
y	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
z	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_entity_coord_vector	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(float,float,float)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_entity_coord_vector	struct(float,float,float)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
x	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
y	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
z	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_entity_type	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,short,char,char,char,char)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_entity_type	struct(char,char,short,char,char,char,char)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
kind	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
domain	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
country	short
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
category	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
subcategory	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
specific	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
extra	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_entity_marking	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,array(char))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_entity_marking	struct(char,array(char))
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
charset	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_vector	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(char),int,int,*((*(struct(enum(int,int,int),*`,*`,*`,*`,int)),*(void))->(int)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
char	O
*	O
)	O
objp	*(struct(float,float,float))
->	O
marking	array(char)
,	O
11	int
,	O
sizeof	O
(	O
byte_u_char	O
)	O
,	O
xdr_byte_u_char	()->(int)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_fixed_datum	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(long,long)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_fixed_datum	struct(long,long)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_u_long	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
datum_id	long
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_long	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
ulong_value	long
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_simulation_addr	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_simulation_addr	struct(short,short)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_u_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
site_id	short
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
application_id	short
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_emitter_system	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(short,char,char)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_emitter_system	struct(short,char,char)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_u_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
name	*(char)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
function	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
id	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_entity_id	struct(struct(short,short),short)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_simulation_addr	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
sim_id	struct(short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
entity_id	short
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_euler_angles	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(float,float,float)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_euler_angles	struct(float,float,float)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
psi	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
theta	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
phi	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_event_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_event_id	struct(struct(short,short),short)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_simulation_addr	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
sim_id	struct(short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
event_id	short
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_fundamental_parameters	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(float,float,float,float,float,float,float,float,float,float)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_fundamental_parameters	struct(float,float,float,float,float,float,float,float,float,float)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
freq	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
freq_range	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
erp	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
prf	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
pulse_width	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
beam_azimuth_center	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
beam_azimuth_sweep	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
beam_elev_center	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
beam_elev_sweep	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
beam_sweep_sync	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_modulation_type	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(short,short,short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_modulation_type	struct(short,short,short,short)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_u_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
spread_spectrum	short
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
major_type	short
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
detail	short
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
system	(*(char))->(int)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_pdu_header	struct(char,char,char,char,struct(int,int),short,short)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
protocol_version	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
exercise_id	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
pdu_type	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
protocol_family	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_timestamp	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
time_stamp	struct(int,int)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
length	short
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
padding	short
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_double_vector	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(double,double,double)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_double_vector	struct(double,double,double)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_double	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
x	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_double	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
y	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_double	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
z	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_world_coordinates	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(double,double,double)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_world_coordinates	struct(double,double,double)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_double	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
x	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_double	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
y	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_double	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
z	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_relative_coordinates	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(float,float,float)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_relative_coordinates	struct(float,float,float)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
x	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
y	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
z	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_antenna_location	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(double,double,double),struct(float,float,float))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_antenna_location	struct(struct(double,double,double),struct(float,float,float))
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_world_coordinates	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(double,double,double)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
ant_location	struct(double,double,double)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_relative_coordinates	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(float,float,float)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
relative	struct(float,float,float)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_beam_antenna_pattern	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(float,float,float),float,float,char,array(char),float,float,float)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_beam_antenna_pattern	struct(struct(float,float,float),float,float,char,array(char),float,float,float)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_euler_angles	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(float,float,float)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
direction	struct(float,float,float)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
azimuth_width	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
elev_width	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
reference_system	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_vector	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(char),int,int,*((*(struct(enum(int,int,int),*`,*`,*`,*`,int)),*(void))->(int)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
char	O
*	O
)	O
objp	*(struct(float,float,float))
->	O
pad	array(char)
,	O
3	int
,	O
sizeof	O
(	O
byte_u_char	O
)	O
,	O
xdr_byte_u_char	()->(int)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
Ez	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
Ex	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
phase	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_spherical_harmonic_antenna_pattern	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,float,char)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_spherical_harmonic_antenna_pattern	struct(char,float,char)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
pattern	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
coefficients	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
ref_system	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_time	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(long,struct(int,int))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_time	struct(long,struct(int,int))
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_u_long	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
hour	long
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_timestamp	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
rel	struct(int,int)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_burst_descriptor	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,short,char,char,char,char),short,short,short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_burst_descriptor	struct(struct(char,char,short,char,char,char,char),short,short,short,short)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_entity_type	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,short,char,char,char,char)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
munition	struct(char,char,short,char,char,char,char)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
warhead	short
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
fuze	short
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
quantity	short
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
rate	short
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_dead_reckoning	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,array(char),struct(float,float,float),struct(float,float,float))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_dead_reckoning	struct(char,array(char),struct(float,float,float),struct(float,float,float))
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
algorithm	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_vector	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(char),int,int,*((*(struct(enum(int,int,int),*`,*`,*`,*`,int)),*(void))->(int)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
char	O
*	O
)	O
objp	*(struct(float,float,float))
->	O
other	array(char)
,	O
15	int
,	O
sizeof	O
(	O
byte_u_char	O
)	O
,	O
xdr_byte_u_char	()->(int)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_linear_acc_vector	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(float,float,float)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
linear_acc	struct(float,float,float)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_angular_vel_vector	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(float,float,float)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
angular_vel	struct(float,float,float)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_capabilities	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(long))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_capabilities	long
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_u_long	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_supply_quantity	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,short,char,char,char,char),float)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_supply_quantity	struct(struct(char,char,short,char,char,char,char),float)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_entity_type	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,short,char,char,char,char)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
entity	struct(char,char,short,char,char,char,char)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
quantity	short
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_entity_appearance	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(long))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_entity_appearance	long
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_u_long	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_entity_state_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union`)))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_entity_state_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short)))))
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
id	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
force_id	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
art_parm_count	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_type	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,short,char,char,char,char)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
type	int
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_type	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,short,char,char,char,char)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
alt_type	struct(char,char,short,char,char,char,char)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_linear_vel_vector	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(float,float,float)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
vel	struct(float,float,float)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_world_coordinates	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(double,double,double)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
pos	struct(double,double,double)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_euler_angles	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(float,float,float)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
orientation	struct(float,float,float)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_appearance	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(long))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
appearance	long
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_dead_reckoning	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,array(char),struct(float,float,float),struct(float,float,float))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
dr_parm	struct(char,array(char),struct(float,float,float),struct(float,float,float))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_marking	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,array(char))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
marking	array(char)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_capabilities	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(long))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
capabilities	long
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_var_array	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
char	O
*	O
*	O
)	O
&	O
objp	*(struct(float,float,float))
->	O
art_parm	*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))
,	O
objp	*(struct(float,float,float))
->	O
art_parm_count	char
,	O
objp	*(struct(float,float,float))
->	O
art_parm_count	char
,	O
sizeof	O
(	O
dis_articulation_parm	struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short)))
)	O
,	O
xdr_dis_articulation_parm	O
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_collision_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),long,struct(float,float,float))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_collision_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),long,struct(float,float,float))
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
id	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
collision_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_event_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
event	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_linear_vel_vector	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(float,float,float)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
vel	struct(float,float,float)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_long	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
mass	long
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_coord_vector	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(float,float,float)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
loc	struct(float,float,float)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_fire_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),float)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_fire_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),float)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
firing_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
target_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
munition_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_event_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
event	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_long	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
fire_mission_index	long
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_world_coordinates	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(double,double,double)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
pos	struct(double,double,double)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_burst_descriptor	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,short,char,char,char,char),short,short,short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
burst	struct(struct(char,char,short,char,char,char,char),short,short,short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_linear_vel_vector	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(float,float,float)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
vel	struct(float,float,float)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
range	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_detonation_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),char,char,short,*(struct(char,char,short,long,union`)))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_detonation_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),char,char,short,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short)))))
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
firing_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
target_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
munition_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_event_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
event	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_linear_vel_vector	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(float,float,float)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
vel	struct(float,float,float)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_world_coordinates	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(double,double,double)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
pos	struct(double,double,double)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_burst_descriptor	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,short,char,char,char,char),short,short,short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
burst	struct(struct(char,char,short,char,char,char,char),short,short,short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_coord_vector	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(float,float,float)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
loc	struct(float,float,float)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
result	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
num_art_parms	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
pad	array(char)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_var_array	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
char	O
*	O
*	O
)	O
&	O
objp	*(struct(float,float,float))
->	O
art_parm	*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))
,	O
objp	*(struct(float,float,float))
->	O
num_art_parms	char
,	O
objp	*(struct(float,float,float))
->	O
num_art_parms	char
,	O
sizeof	O
(	O
dis_articulation_parm	struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short)))
)	O
,	O
xdr_dis_articulation_parm	O
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_service_type	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(char))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_service_type	char
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_repair_type	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(short))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_repair_type	short
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_u_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_repair_result	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(char))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_repair_result	char
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_service_request_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),char,char,short,*(struct(struct`,float)))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_service_request_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),char,char,short,*(struct(struct(char,char,short,char,char,char,char),float)))
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
requestor_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
server_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_service_type	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(char))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
requested_service	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
num_supply_types	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
pad	array(char)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_var_array	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
char	O
*	O
*	O
)	O
&	O
objp	*(struct(float,float,float))
->	O
supplies	*(struct(struct(char,char,short,char,char,char,char),float))
,	O
objp	*(struct(float,float,float))
->	O
num_supply_types	char
,	O
objp	*(struct(float,float,float))
->	O
num_supply_types	char
,	O
sizeof	O
(	O
dis_supply_quantity	struct(struct(char,char,short,char,char,char,char),float)
)	O
,	O
xdr_dis_supply_quantity	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,short,char,char,char,char),float)))->(int)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_resupply_offer_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),char,array(char),*(struct(struct`,float)))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_resupply_offer_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),char,array(char),*(struct(struct(char,char,short,char,char,char,char),float)))
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
receiver_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
supplier_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
num_supply_types	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_vector	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(char),int,int,*((*(struct(enum(int,int,int),*`,*`,*`,*`,int)),*(void))->(int)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
char	O
*	O
)	O
objp	*(struct(float,float,float))
->	O
pad	array(char)
,	O
3	int
,	O
sizeof	O
(	O
byte_u_char	O
)	O
,	O
xdr_byte_u_char	()->(int)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_var_array	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
char	O
*	O
*	O
)	O
&	O
objp	*(struct(float,float,float))
->	O
supplies	*(struct(struct(char,char,short,char,char,char,char),float))
,	O
objp	*(struct(float,float,float))
->	O
num_supply_types	char
,	O
objp	*(struct(float,float,float))
->	O
num_supply_types	char
,	O
sizeof	O
(	O
dis_supply_quantity	struct(struct(char,char,short,char,char,char,char),float)
)	O
,	O
xdr_dis_supply_quantity	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,short,char,char,char,char),float)))->(int)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_resupply_received_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),char,array(char),*(struct(struct`,float)))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_resupply_received_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),char,array(char),*(struct(struct(char,char,short,char,char,char,char),float)))
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
receiver_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
supplier_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
num_supply_types	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_vector	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(char),int,int,*((*(struct(enum(int,int,int),*`,*`,*`,*`,int)),*(void))->(int)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
char	O
*	O
)	O
objp	*(struct(float,float,float))
->	O
pad	array(char)
,	O
3	int
,	O
sizeof	O
(	O
byte_u_char	O
)	O
,	O
xdr_byte_u_char	()->(int)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_var_array	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
char	O
*	O
*	O
)	O
&	O
objp	*(struct(float,float,float))
->	O
supplies	*(struct(struct(char,char,short,char,char,char,char),float))
,	O
objp	*(struct(float,float,float))
->	O
num_supply_types	char
,	O
objp	*(struct(float,float,float))
->	O
num_supply_types	char
,	O
sizeof	O
(	O
dis_supply_quantity	struct(struct(char,char,short,char,char,char,char),float)
)	O
,	O
xdr_dis_supply_quantity	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,short,char,char,char,char),float)))->(int)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_resupply_cancel_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_resupply_cancel_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short))
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
receiver_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
supplier_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_repair_complete_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_repair_complete_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),short,short)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
receiver_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
supplier_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_repair_type	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(short))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
repair	short
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
pad	array(char)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_repair_response_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),char,array(char))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_repair_response_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),char,array(char))
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
receiver_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
supplier_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_repair_result	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(char))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
result	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_vector	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(char),int,int,*((*(struct(enum(int,int,int),*`,*`,*`,*`,int)),*(void))->(int)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
char	O
*	O
)	O
objp	*(struct(float,float,float))
->	O
pad	array(char)
,	O
3	int
,	O
sizeof	O
(	O
byte_u_char	O
)	O
,	O
xdr_byte_u_char	()->(int)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_request_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(long))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_request_id	long
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_u_long	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_create_entity_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_create_entity_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
orig_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
recv_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_request_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(long))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
request_id	long
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_remove_entity_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_remove_entity_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
orig_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
recv_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_request_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(long))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
request_id	long
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_start_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),struct(long,struct(int,int)),long)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_start_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),struct(long,struct(int,int)),long)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
orig_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
recv_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_time	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(long,struct(int,int))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
real_time	struct(long,struct(int,int))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_time	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(long,struct(int,int))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
sim_time	struct(long,struct(int,int))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_request_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(long))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
request_id	long
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_stop_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),char,char,array(char),long)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_stop_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),char,char,array(char),long)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
orig_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
recv_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_time	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(long,struct(int,int))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
real_time	struct(long,struct(int,int))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
reason	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
behavior	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_vector	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(char),int,int,*((*(struct(enum(int,int,int),*`,*`,*`,*`,int)),*(void))->(int)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
char	O
*	O
)	O
objp	*(struct(float,float,float))
->	O
pad	array(char)
,	O
2	int
,	O
sizeof	O
(	O
byte_u_char	O
)	O
,	O
xdr_byte_u_char	()->(int)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_request_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(long))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
request_id	long
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_acknowledge_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),short,short,long)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_acknowledge_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),short,short,long)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
orig_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
recv_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
acknowledge_flag	short
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
resp_flag	short
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_request_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(long))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
request_id	long
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_data_query_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),long,long,long,*(long),*(long))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_data_query_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),long,long,long,*(long),*(long))
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
orig_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
recv_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_time	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(long,struct(int,int))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
interval	struct(long,struct(int,int))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_request_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(long))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
request_id	long
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_long	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
num_fixed_data	long
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_long	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
num_variable_data	long
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_var_array	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
char	O
*	O
*	O
)	O
&	O
objp	*(struct(float,float,float))
->	O
fixed_datum_id	*(long)
,	O
objp	*(struct(float,float,float))
->	O
num_fixed_data	long
,	O
objp	*(struct(float,float,float))
->	O
num_fixed_data	long
,	O
sizeof	O
(	O
byte_u_long	O
)	O
,	O
xdr_byte_u_long	()->(int)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_var_array	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
char	O
*	O
*	O
)	O
&	O
objp	*(struct(float,float,float))
->	O
variable_datum_id	*(long)
,	O
objp	*(struct(float,float,float))
->	O
num_variable_data	long
,	O
objp	*(struct(float,float,float))
->	O
num_variable_data	long
,	O
sizeof	O
(	O
byte_u_long	O
)	O
,	O
xdr_byte_u_long	()->(int)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_datum_spec_record	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(long,long,*(struct(long,long)),*(struct(long,long,union`)))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_datum_spec_record	struct(long,long,*(struct(long,long)),*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char)))))
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_u_long	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
num_fixed_data	long
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_long	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
num_variable_data	long
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_var_array	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
char	O
*	O
*	O
)	O
&	O
objp	*(struct(float,float,float))
->	O
fixed_datum	*(struct(long,long))
,	O
objp	*(struct(float,float,float))
->	O
num_fixed_data	long
,	O
objp	*(struct(float,float,float))
->	O
num_fixed_data	long
,	O
sizeof	O
(	O
dis_fixed_datum	struct(long,long)
)	O
,	O
xdr_dis_fixed_datum	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(long,long)))->(int)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_var_array	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
char	O
*	O
*	O
)	O
&	O
objp	*(struct(float,float,float))
->	O
variable_datum	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
,	O
objp	*(struct(float,float,float))
->	O
num_variable_data	long
,	O
objp	*(struct(float,float,float))
->	O
num_variable_data	long
,	O
sizeof	O
(	O
dis_variable_datum	struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char)))
)	O
,	O
xdr_dis_variable_datum	O
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_set_data_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(long,long,*(struct`),*(struct`)))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_set_data_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(long,long,*(struct(long,long)),*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))))
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
orig_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
recv_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_request_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(long))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
request_id	long
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_datum_spec_record	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(long,long,*(struct(long,long)),*(struct(long,long,union`)))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
datum_info	struct(long,long,*(struct(long,long)),*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char)))))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_data_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(long,long,*(struct`),*(struct`)))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_data_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(long,long,*(struct(long,long)),*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))))
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
orig_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
recv_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_request_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(long))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
request_id	long
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_datum_spec_record	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(long,long,*(struct(long,long)),*(struct(long,long,union`)))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
datum_info	struct(long,long,*(struct(long,long)),*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char)))))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_event_report_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,long,*(struct`),*(struct`)))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_event_report_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,long,*(struct(long,long)),*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))))
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
orig_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
recv_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_event_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
event_type	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_datum_spec_record	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(long,long,*(struct(long,long)),*(struct(long,long,union`)))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
datum_info	struct(long,long,*(struct(long,long)),*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char)))))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_message_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,long,*(struct(long,long,union`)))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_message_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,long,*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char)))))
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
orig_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
recv_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_long	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
pad	array(char)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_long	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
num_variable_data	long
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_var_array	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
char	O
*	O
*	O
)	O
&	O
objp	*(struct(float,float,float))
->	O
variable_datum	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
,	O
objp	*(struct(float,float,float))
->	O
num_variable_data	long
,	O
objp	*(struct(float,float,float))
->	O
num_variable_data	long
,	O
sizeof	O
(	O
dis_variable_datum	struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char)))
)	O
,	O
xdr_dis_variable_datum	O
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_track_info	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(struct(short,short),short),char,char)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_track_info	struct(struct(struct(short,short),short),char,char)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
target	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
emitter_id	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
beam_id	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_beam_info	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,short,struct(float,float,float,float,float,float,float,float,float,float),char,char,char,char,long,*(struct(struct`,char,char)))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_beam_info	struct(char,char,short,struct(float,float,float,float,float,float,float,float,float,float),char,char,char,char,long,*(struct(struct(struct(short,short),short),char,char)))
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
beam_data_length	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
beam_id	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
beam_parm_index	short
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_fundamental_parameters	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(float,float,float,float,float,float,float,float,float,float)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
fundamental	struct(float,float,float,float,float,float,float,float,float,float)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
beam_function	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
num_targets	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
high_density_track_jam	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
pad	array(char)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_long	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
jamming_mode	long
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_var_array	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
char	O
*	O
*	O
)	O
&	O
objp	*(struct(float,float,float))
->	O
tracked_target	*(struct(struct(struct(short,short),short),char,char))
,	O
objp	*(struct(float,float,float))
->	O
num_targets	char
,	O
objp	*(struct(float,float,float))
->	O
num_targets	char
,	O
sizeof	O
(	O
dis_track_info	struct(struct(struct(short,short),short),char,char)
)	O
,	O
xdr_dis_track_info	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(struct(short,short),short),char,char)))->(int)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_em_system_info	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,short,struct(short,char,char),struct(float,float,float),*(struct(char,char,short,struct`,char,char,char,char,long,*`)))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_em_system_info	struct(char,char,short,struct(short,char,char),struct(float,float,float),*(struct(char,char,short,struct(float,float,float,float,float,float,float,float,float,float),char,char,char,char,long,*(struct(struct(struct`,short),char,char)))))
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
sys_data_length	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
num_beams	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
pad	array(char)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_emitter_system	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(short,char,char)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
emitter_system	struct(short,char,char)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_coord_vector	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(float,float,float)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
location	struct(float,float,float)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_var_array	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
char	O
*	O
*	O
)	O
&	O
objp	*(struct(float,float,float))
->	O
beam	*(struct(char,char,short,struct(float,float,float,float,float,float,float,float,float,float),char,char,char,char,long,*(struct(struct(struct`,short),char,char))))
,	O
objp	*(struct(float,float,float))
->	O
num_beams	char
,	O
objp	*(struct(float,float,float))
->	O
num_beams	char
,	O
sizeof	O
(	O
dis_beam_info	struct(char,char,short,struct(float,float,float,float,float,float,float,float,float,float),char,char,char,char,long,*(struct(struct(struct(short,short),short),char,char)))
)	O
,	O
xdr_dis_beam_info	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,short,struct(float,float,float,float,float,float,float,float,float,float),char,char,char,char,long,*(struct(struct`,char,char)))))->(int)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_em_emission_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),char,char,short,*(struct(char,char,short,struct`,struct`,*`)))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_em_emission_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),char,char,short,*(struct(char,char,short,struct(short,char,char),struct(float,float,float),*(struct(char,char,short,struct(float,float,float,float,float,float,float,float,float,float),char,char,char,char,long,*(struct`))))))
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
emitter_id	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_event_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
event	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
state_update	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
num_systems	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
pad	array(char)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_var_array	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
char	O
*	O
*	O
)	O
&	O
objp	*(struct(float,float,float))
->	O
system	(*(char))->(int)
,	O
objp	*(struct(float,float,float))
->	O
num_systems	char
,	O
objp	*(struct(float,float,float))
->	O
num_systems	char
,	O
sizeof	O
(	O
dis_em_system_info	struct(char,char,short,struct(short,char,char),struct(float,float,float),*(struct(char,char,short,struct(float,float,float,float,float,float,float,float,float,float),char,char,char,char,long,*(struct(struct(struct`,short),char,char)))))
)	O
,	O
xdr_dis_em_system_info	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,short,struct(short,char,char),struct(float,float,float),*(struct(char,char,short,struct`,char,char,char,char,long,*`)))))->(int)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_designator_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),short,struct(struct(short,short),short),char,char,float,float,struct(float,float,float),struct(double,double,double))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_designator_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),short,struct(struct(short,short),short),char,char,float,float,struct(float,float,float),struct(double,double,double))
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
designating_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
code_name	short
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
designated_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
pad	array(char)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
code	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
power	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_float	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
wavelength	float
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_coord_vector	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(float,float,float)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
spot_rel	struct(float,float,float)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_world_coordinates	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(double,double,double)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
spot_pos	struct(double,double,double)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_experimental_request_control_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_experimental_request_control_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short))
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
requesting_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
control_target_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_experimental_grant_control_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_experimental_grant_control_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short))
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
granting_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
control_target_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	int
xdr_dis_transfer_control_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,char,char,struct(struct(short,short),short),long)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
objp	*(struct(float,float,float))
)	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
;	O
dis_transfer_control_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,char,char,struct(struct(short,short),short),long)
*	O
objp	*(struct(float,float,float))
;	O
{	O
if	O
(	O
!	O
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
orig_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
recv_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_long	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
request_id	long
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
reliability_service	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
transfer_type	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_entity_id	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(short,short),short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
target_id	struct(struct(short,short),short)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_long	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(float,float,float))
->	O
num_record_sets	long
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
