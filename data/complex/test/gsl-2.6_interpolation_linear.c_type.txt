static	O
int	O
linear_init	(*(void),array(double),array(double),long)->(int)
(	O
void	O
*	O
vstate	*(void)
,	O
const	O
double	O
x_array	array(double)
[	O
]	O
,	O
const	O
double	O
y_array	array(double)
[	O
]	O
,	O
size_t	long
size	long
)	O
{	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
linear_eval	(*(void),array(double),array(double),long,double,*(struct(long,long,long)),*(double))->(int)
(	O
const	O
void	O
*	O
vstate	*(void)
,	O
const	O
double	O
x_array	array(double)
[	O
]	O
,	O
const	O
double	O
y_array	array(double)
[	O
]	O
,	O
size_t	long
size	long
,	O
double	O
x	double
,	O
gsl_interp_accel	struct(long,long,long)
*	O
a	double
,	O
double	O
*	O
y	*(double)
)	O
{	O
double	O
x_lo	double
,	O
x_hi	double
;	O
double	O
y_lo	double
,	O
y_hi	double
;	O
double	O
dx	double
;	O
size_t	long
index	long
;	O
if	O
(	O
a	double
!=	O
0	int
)	O
{	O
index	long
=	O
gsl_interp_accel_find	(*(struct(long,long,long)),array(double),long,double)->(long)
(	O
a	double
,	O
x_array	array(double)
,	O
size	long
,	O
x	double
)	O
;	O
}	O
else	O
{	O
index	long
=	O
gsl_interp_bsearch	(array(double),double,long,long)->(long)
(	O
x_array	array(double)
,	O
x	double
,	O
0	int
,	O
size	long
-	O
1	int
)	O
;	O
}	O
x_lo	double
=	O
x_array	array(double)
[	O
index	long
]	O
;	O
x_hi	double
=	O
x_array	array(double)
[	O
index	long
+	O
1	int
]	O
;	O
y_lo	double
=	O
y_array	array(double)
[	O
index	long
]	O
;	O
y_hi	double
=	O
y_array	array(double)
[	O
index	long
+	O
1	int
]	O
;	O
dx	double
=	O
x_hi	double
-	O
x_lo	double
;	O
if	O
(	O
dx	double
>	O
0.0	int
)	O
{	O
*	O
y	*(double)
=	O
y_lo	double
+	O
(	O
x	double
-	O
x_lo	double
)	O
/	O
dx	double
*	O
(	O
y_hi	double
-	O
y_lo	double
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
{	O
*	O
y	*(double)
=	O
0.0	int
;	O
return	O
GSL_EINVAL	int
;	O
}	O
}	O
static	O
int	O
linear_eval_deriv	(*(void),array(double),array(double),long,double,*(struct(long,long,long)),*(double))->(int)
(	O
const	O
void	O
*	O
vstate	*(void)
,	O
const	O
double	O
x_array	array(double)
[	O
]	O
,	O
const	O
double	O
y_array	array(double)
[	O
]	O
,	O
size_t	long
size	long
,	O
double	O
x	double
,	O
gsl_interp_accel	struct(long,long,long)
*	O
a	double
,	O
double	O
*	O
dydx	*(double)
)	O
{	O
double	O
x_lo	double
,	O
x_hi	double
;	O
double	O
y_lo	double
,	O
y_hi	double
;	O
double	O
dx	double
;	O
double	O
dy	double
;	O
size_t	long
index	long
;	O
if	O
(	O
a	double
!=	O
0	int
)	O
{	O
index	long
=	O
gsl_interp_accel_find	(*(struct(long,long,long)),array(double),long,double)->(long)
(	O
a	double
,	O
x_array	array(double)
,	O
size	long
,	O
x	double
)	O
;	O
}	O
else	O
{	O
index	long
=	O
gsl_interp_bsearch	(array(double),double,long,long)->(long)
(	O
x_array	array(double)
,	O
x	double
,	O
0	int
,	O
size	long
-	O
1	int
)	O
;	O
}	O
x_lo	double
=	O
x_array	array(double)
[	O
index	long
]	O
;	O
x_hi	double
=	O
x_array	array(double)
[	O
index	long
+	O
1	int
]	O
;	O
y_lo	double
=	O
y_array	array(double)
[	O
index	long
]	O
;	O
y_hi	double
=	O
y_array	array(double)
[	O
index	long
+	O
1	int
]	O
;	O
dx	double
=	O
x_hi	double
-	O
x_lo	double
;	O
dy	double
=	O
y_hi	double
-	O
y_lo	double
;	O
if	O
(	O
dx	double
>	O
0.0	int
)	O
{	O
*	O
dydx	*(double)
=	O
dy	double
/	O
dx	double
;	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
{	O
*	O
dydx	*(double)
=	O
0.0	int
;	O
return	O
GSL_EINVAL	int
;	O
}	O
}	O
static	O
int	O
linear_eval_deriv2	(*(void),array(double),array(double),long,double,*(struct(long,long,long)),*(double))->(int)
(	O
const	O
void	O
*	O
vstate	*(void)
,	O
const	O
double	O
x_array	array(double)
[	O
]	O
,	O
const	O
double	O
y_array	array(double)
[	O
]	O
,	O
size_t	long
size	long
,	O
double	O
x	double
,	O
gsl_interp_accel	struct(long,long,long)
*	O
a	double
,	O
double	O
*	O
y_pp	*(double)
)	O
{	O
*	O
y_pp	*(double)
=	O
0.0	int
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
linear_eval_integ	(*(void),array(double),array(double),long,*(struct(long,long,long)),double,double,*(double))->(int)
(	O
const	O
void	O
*	O
vstate	*(void)
,	O
const	O
double	O
x_array	array(double)
[	O
]	O
,	O
const	O
double	O
y_array	array(double)
[	O
]	O
,	O
size_t	long
size	long
,	O
gsl_interp_accel	struct(long,long,long)
*	O
acc	*(struct(long,long,long))
,	O
double	O
a	double
,	O
double	O
b	double
,	O
double	O
*	O
result	*(double)
)	O
{	O
size_t	long
i	long
,	O
index_a	long
,	O
index_b	long
;	O
if	O
(	O
acc	*(struct(long,long,long))
!=	O
0	int
)	O
{	O
index_a	long
=	O
gsl_interp_accel_find	(*(struct(long,long,long)),array(double),long,double)->(long)
(	O
acc	*(struct(long,long,long))
,	O
x_array	array(double)
,	O
size	long
,	O
a	double
)	O
;	O
index_b	long
=	O
gsl_interp_accel_find	(*(struct(long,long,long)),array(double),long,double)->(long)
(	O
acc	*(struct(long,long,long))
,	O
x_array	array(double)
,	O
size	long
,	O
b	double
)	O
;	O
}	O
else	O
{	O
index_a	long
=	O
gsl_interp_bsearch	(array(double),double,long,long)->(long)
(	O
x_array	array(double)
,	O
a	double
,	O
0	int
,	O
size	long
-	O
1	int
)	O
;	O
index_b	long
=	O
gsl_interp_bsearch	(array(double),double,long,long)->(long)
(	O
x_array	array(double)
,	O
b	double
,	O
0	int
,	O
size	long
-	O
1	int
)	O
;	O
}	O
*	O
result	*(double)
=	O
0.0	int
;	O
for	O
(	O
i	long
=	O
index_a	long
;	O
i	long
<=	O
index_b	long
;	O
i	long
++	O
)	O
{	O
const	O
double	O
x_hi	double
=	O
x_array	array(double)
[	O
i	long
+	O
1	int
]	O
;	O
const	O
double	O
x_lo	double
=	O
x_array	array(double)
[	O
i	long
]	O
;	O
const	O
double	O
y_lo	double
=	O
y_array	array(double)
[	O
i	long
]	O
;	O
const	O
double	O
y_hi	double
=	O
y_array	array(double)
[	O
i	long
+	O
1	int
]	O
;	O
const	O
double	O
dx	double
=	O
x_hi	double
-	O
x_lo	double
;	O
if	O
(	O
dx	double
!=	O
0.0	int
)	O
{	O
if	O
(	O
i	long
==	O
index_a	long
||	O
i	long
==	O
index_b	long
)	O
{	O
double	O
x1	double
=	O
(	O
i	long
==	O
index_a	long
)	O
?	O
a	double
:	O
x_lo	double
;	O
double	O
x2	double
=	O
(	O
i	long
==	O
index_b	long
)	O
?	O
b	double
:	O
x_hi	double
;	O
const	O
double	O
D	double
=	O
(	O
y_hi	double
-	O
y_lo	double
)	O
/	O
dx	double
;	O
*	O
result	*(double)
+=	O
(	O
x2	double
-	O
x1	double
)	O
*	O
(	O
y_lo	double
+	O
0.5	int
*	O
D	double
*	O
(	O
(	O
x2	double
-	O
x_lo	double
)	O
+	O
(	O
x1	double
-	O
x_lo	double
)	O
)	O
)	O
;	O
}	O
else	O
{	O
*	O
result	*(double)
+=	O
0.5	int
*	O
dx	double
*	O
(	O
y_lo	double
+	O
y_hi	double
)	O
;	O
}	O
}	O
}	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
const	O
gsl_interp_type	struct(*(char),int,*((long)->(*(void))),*((*(void),array(double),array(double),long)->(int)),*((*(void),array(double),array(double),long,double,*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),long,double,*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),long,double,*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),long,*(struct(long,long,long)),double,double,*(double))->(int)),*((*(void))->(void)))
linear_type	struct(*(char),int,*((long)->(*(void))),*((*(void),array(double),array(double),long)->(int)),*((*(void),array(double),array(double),long,double,*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),long,double,*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),long,double,*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),long,*(struct(long,long,long)),double,double,*(double))->(int)),*((*(void))->(void)))
=	O
{	O
"linear"	*(char)
,	O
2	int
,	O
NULL	O
,	O
&	O
linear_init	(*(void),array(double),array(double),long)->(int)
,	O
&	O
linear_eval	(*(void),array(double),array(double),long,double,*(struct(long,long,long)),*(double))->(int)
,	O
&	O
linear_eval_deriv	(*(void),array(double),array(double),long,double,*(struct(long,long,long)),*(double))->(int)
,	O
&	O
linear_eval_deriv2	(*(void),array(double),array(double),long,double,*(struct(long,long,long)),*(double))->(int)
,	O
&	O
linear_eval_integ	(*(void),array(double),array(double),long,*(struct(long,long,long)),double,double,*(double))->(int)
,	O
NULL	O
,	O
}	O
;	O
const	O
gsl_interp_type	struct(*(char),int,*((long)->(*(void))),*((*(void),array(double),array(double),long)->(int)),*((*(void),array(double),array(double),long,double,*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),long,double,*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),long,double,*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),long,*(struct(long,long,long)),double,double,*(double))->(int)),*((*(void))->(void)))
*	O
gsl_interp_linear	*(struct(*(char),int,*((long)->(*(void))),*((*(void),array(double),array(double),long)->(int)),*((*(void),array(double),array(double),long,double,*(struct`),*(double))->(int)),*((*(void),array(double),array(double),long,double,*(struct`),*(double))->(int)),*((*(void),array(double),array(double),long,double,*(struct`),*(double))->(int)),*((*(void),array(double),array(double),long,*(struct`),double,double,*(double))->(int)),*((*(void))->(void))))
=	O
&	O
linear_type	struct(*(char),int,*((long)->(*(void))),*((*(void),array(double),array(double),long)->(int)),*((*(void),array(double),array(double),long,double,*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),long,double,*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),long,double,*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),long,*(struct(long,long,long)),double,double,*(double))->(int)),*((*(void))->(void)))
;	O
