ESint32	long
_edma_ini_sys_table	(*(char))->(long)
(	O
EPChar	*(char)
EdmaPath	*(char)
)	O
{	O
FILE	struct
*	O
f	*(char)
;	O
EUint16	short
n	short
,	O
i	short
;	O
static	O
EUint32	long
Maqid	long
;	O
char	O
nom	array(char)
[	O
32	int
]	O
;	O
EChar	char
SysFile	array(char)
[	O
256	int
]	O
;	O
strncpy	(*(char),*(char),int)->(*(char))
(	O
SysFile	array(char)
,	O
EdmaPath	*(char)
,	O
256	int
)	O
;	O
strncat	(*(char),*(char),int)->(*(char))
(	O
SysFile	array(char)
,	O
"/etc/sysdat32.cfg"	*(char)
,	O
256	int
)	O
;	O
f	*(char)
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long long,*`,*`,*`,*`,int,int,array(char))),int,int,long,short,char,array(char),*(void),long long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long long,*`,*`,*`,*`,int,int,array(char))),*(void),int,int,array(char))))
(	O
SysFile	array(char)
,	O
"rt"	*(char)
)	O
;	O
if	O
(	O
f	*(char)
==	O
NULL	O
)	O
{	O
edma_print	(*(char))->(long)
(	O
"(ERROR)System File not found"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
fscanf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long long,*`,*`,*`,*`,int,int,array(char))),int,int,long,short,char,array(char),*(void),long long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long long,*`,*`,*`,*`,int,int,array(char))),*(void),int,int,array(char))),*(char))->(int)
(	O
f	*(char)
,	O
"%s"	*(char)
,	O
nom	array(char)
)	O
;	O
n	short
=	O
atol	(*(char))->(long)
(	O
nom	array(char)
)	O
;	O
n	short
--	O
;	O
for	O
(	O
i	short
=	O
0	int
;	O
i	short
<	O
n	short
;	O
i	short
++	O
)	O
{	O
fscanf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long long,*`,*`,*`,*`,int,int,array(char))),int,int,long,short,char,array(char),*(void),long long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long long,*`,*`,*`,*`,int,int,array(char))),*(void),int,int,array(char))),*(char))->(int)
(	O
f	*(char)
,	O
"%s"	*(char)
,	O
nom	array(char)
)	O
;	O
fscanf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long long,*`,*`,*`,*`,int,int,array(char))),int,int,long,short,char,array(char),*(void),long long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long long,*`,*`,*`,*`,int,int,array(char))),*(void),int,int,array(char))),*(char))->(int)
(	O
f	*(char)
,	O
"%ld"	*(char)
,	O
&	O
Maqid	long
)	O
;	O
GVar	*(struct(long,long,long,long,long,long,long,long,long,array(struct(array(char),long)),array(struct(array(char),long)),long,long,array(char),*(struct(long,long,array(char),long,long,long,char,char)),long,long,long,union(struct(int,int,int,int,int,union(struct`,struct`)),array(char),long),array(struct(long,long,array(char))),long,long,long))
->	O
SysMaq	array(struct(array(char),long))
[	O
i	short
]	O
.	O
Id	*(char)
=	O
Maqid	long
;	O
memcpy	(*(void),*(void),int)->(*(void))
(	O
GVar	*(struct(long,long,long,long,long,long,long,long,long,array(struct(array(char),long)),array(struct(array(char),long)),long,long,array(char),*(struct(long,long,array(char),long,long,long,char,char)),long,long,long,union(struct(int,int,int,int,int,union(struct`,struct`)),array(char),long),array(struct(long,long,array(char))),long,long,long))
->	O
SysMaq	array(struct(array(char),long))
[	O
i	short
]	O
.	O
Nombre	array(char)
,	O
nom	array(char)
,	O
strlen	(*(char))->(int)
(	O
nom	array(char)
)	O
)	O
;	O
}	O
GVar	*(struct(long,long,long,long,long,long,long,long,long,array(struct(array(char),long)),array(struct(array(char),long)),long,long,array(char),*(struct(long,long,array(char),long,long,long,char,char)),long,long,long,union(struct(int,int,int,int,int,union(struct`,struct`)),array(char),long),array(struct(long,long,array(char))),long,long,long))
->	O
nMaqNum	long
=	O
n	short
;	O
fscanf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long long,*`,*`,*`,*`,int,int,array(char))),int,int,long,short,char,array(char),*(void),long long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long long,*`,*`,*`,*`,int,int,array(char))),*(void),int,int,array(char))),*(char))->(int)
(	O
f	*(char)
,	O
"%ld"	*(char)
,	O
&	O
GVar	*(struct(long,long,long,long,long,long,long,long,long,array(struct(array(char),long)),array(struct(array(char),long)),long,long,array(char),*(struct(long,long,array(char),long,long,long,char,char)),long,long,long,union(struct(int,int,int,int,int,union(struct`,struct`)),array(char),long),array(struct(long,long,array(char))),long,long,long))
->	O
nSONum	long
)	O
;	O
for	O
(	O
i	short
=	O
0	int
;	O
i	short
<	O
GVar	*(struct(long,long,long,long,long,long,long,long,long,array(struct(array(char),long)),array(struct(array(char),long)),long,long,array(char),*(struct(long,long,array(char),long,long,long,char,char)),long,long,long,union(struct(int,int,int,int,int,union(struct`,struct`)),array(char),long),array(struct(long,long,array(char))),long,long,long))
->	O
nSONum	long
;	O
i	short
++	O
)	O
{	O
fscanf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long long,*`,*`,*`,*`,int,int,array(char))),int,int,long,short,char,array(char),*(void),long long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long long,*`,*`,*`,*`,int,int,array(char))),*(void),int,int,array(char))),*(char))->(int)
(	O
f	*(char)
,	O
"%s"	*(char)
,	O
GVar	*(struct(long,long,long,long,long,long,long,long,long,array(struct(array(char),long)),array(struct(array(char),long)),long,long,array(char),*(struct(long,long,array(char),long,long,long,char,char)),long,long,long,union(struct(int,int,int,int,int,union(struct`,struct`)),array(char),long),array(struct(long,long,array(char))),long,long,long))
->	O
SysSO	array(struct(array(char),long))
[	O
i	short
]	O
.	O
Nombre	array(char)
)	O
;	O
fscanf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long long,*`,*`,*`,*`,int,int,array(char))),int,int,long,short,char,array(char),*(void),long long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long long,*`,*`,*`,*`,int,int,array(char))),*(void),int,int,array(char))),*(char))->(int)
(	O
f	*(char)
,	O
"%ld"	*(char)
,	O
&	O
GVar	*(struct(long,long,long,long,long,long,long,long,long,array(struct(array(char),long)),array(struct(array(char),long)),long,long,array(char),*(struct(long,long,array(char),long,long,long,char,char)),long,long,long,union(struct(int,int,int,int,int,union(struct`,struct`)),array(char),long),array(struct(long,long,array(char))),long,long,long))
->	O
SysSO	array(struct(array(char),long))
[	O
i	short
]	O
.	O
Id	*(char)
)	O
;	O
}	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long long,*`,*`,*`,*`,int,int,array(char))),int,int,long,short,char,array(char),*(void),long long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long long,*`,*`,*`,*`,int,int,array(char))),*(void),int,int,array(char))))->(int)
(	O
f	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
EUint32	long
EDMAPROC	O
edma_get_so_id	(*(char))->(long)
(	O
EPChar	*(char)
name	*(char)
)	O
{	O
EUint32	long
i	short
;	O
for	O
(	O
i	short
=	O
0	int
;	O
i	short
<	O
GVar	*(struct(long,long,long,long,long,long,long,long,long,array(struct(array(char),long)),array(struct(array(char),long)),long,long,array(char),*(struct(long,long,array(char),long,long,long,char,char)),long,long,long,union(struct(int,int,int,int,int,union(struct`,struct`)),array(char),long),array(struct(long,long,array(char))),long,long,long))
->	O
nSONum	long
;	O
i	short
++	O
)	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
GVar	*(struct(long,long,long,long,long,long,long,long,long,array(struct(array(char),long)),array(struct(array(char),long)),long,long,array(char),*(struct(long,long,array(char),long,long,long,char,char)),long,long,long,union(struct(int,int,int,int,int,union(struct`,struct`)),array(char),long),array(struct(long,long,array(char))),long,long,long))
->	O
SysSO	array(struct(array(char),long))
[	O
i	short
]	O
.	O
Nombre	array(char)
,	O
name	*(char)
)	O
==	O
0	int
)	O
break	O
;	O
if	O
(	O
i	short
==	O
GVar	*(struct(long,long,long,long,long,long,long,long,long,array(struct(array(char),long)),array(struct(array(char),long)),long,long,array(char),*(struct(long,long,array(char),long,long,long,char,char)),long,long,long,union(struct(int,int,int,int,int,union(struct`,struct`)),array(char),long),array(struct(long,long,array(char))),long,long,long))
->	O
nSONum	long
)	O
edma_print	(*(char))->(long)
(	O
"(ERROR)Operating System not found"	*(char)
)	O
;	O
return	O
i	short
;	O
}	O
EUint32	long
EDMAPROC	O
edma_get_arch_id	(*(char))->(long)
(	O
EPChar	*(char)
name	*(char)
)	O
{	O
EUint32	long
i	short
;	O
for	O
(	O
i	short
=	O
0	int
;	O
i	short
<	O
GVar	*(struct(long,long,long,long,long,long,long,long,long,array(struct(array(char),long)),array(struct(array(char),long)),long,long,array(char),*(struct(long,long,array(char),long,long,long,char,char)),long,long,long,union(struct(int,int,int,int,int,union(struct`,struct`)),array(char),long),array(struct(long,long,array(char))),long,long,long))
->	O
nMaqNum	long
;	O
i	short
++	O
)	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
GVar	*(struct(long,long,long,long,long,long,long,long,long,array(struct(array(char),long)),array(struct(array(char),long)),long,long,array(char),*(struct(long,long,array(char),long,long,long,char,char)),long,long,long,union(struct(int,int,int,int,int,union(struct`,struct`)),array(char),long),array(struct(long,long,array(char))),long,long,long))
->	O
SysMaq	array(struct(array(char),long))
[	O
i	short
]	O
.	O
Nombre	array(char)
,	O
name	*(char)
)	O
==	O
0	int
)	O
break	O
;	O
if	O
(	O
i	short
==	O
GVar	*(struct(long,long,long,long,long,long,long,long,long,array(struct(array(char),long)),array(struct(array(char),long)),long,long,array(char),*(struct(long,long,array(char),long,long,long,char,char)),long,long,long,union(struct(int,int,int,int,int,union(struct`,struct`)),array(char),long),array(struct(long,long,array(char))),long,long,long))
->	O
nMaqNum	long
)	O
edma_print	(*(char))->(long)
(	O
"(ERROR)Machine not found"	*(char)
)	O
;	O
return	O
i	short
;	O
}	O
EUint32	long
EDMAPROC	O
edma_get_so_name	(long,*(*(char)))->(long)
(	O
EUint32	long
id	long
,	O
EPChar	*(char)
*	O
name	*(char)
)	O
{	O
if	O
(	O
id	long
>=	O
GVar	*(struct(long,long,long,long,long,long,long,long,long,array(struct(array(char),long)),array(struct(array(char),long)),long,long,array(char),*(struct(long,long,array(char),long,long,long,char,char)),long,long,long,union(struct(int,int,int,int,int,union(struct`,struct`)),array(char),long),array(struct(long,long,array(char))),long,long,long))
->	O
nSONum	long
)	O
{	O
edma_print	(*(char))->(long)
(	O
"(ERROR)Operating System not found"	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
*	O
name	*(char)
=	O
GVar	*(struct(long,long,long,long,long,long,long,long,long,array(struct(array(char),long)),array(struct(array(char),long)),long,long,array(char),*(struct(long,long,array(char),long,long,long,char,char)),long,long,long,union(struct(int,int,int,int,int,union(struct`,struct`)),array(char),long),array(struct(long,long,array(char))),long,long,long))
->	O
SysSO	array(struct(array(char),long))
[	O
id	long
]	O
.	O
Nombre	array(char)
;	O
return	O
1	int
;	O
}	O
EUint32	long
EDMAPROC	O
edma_get_arch_name	(long,*(*(char)))->(long)
(	O
EUint32	long
id	long
,	O
EPChar	*(char)
*	O
name	*(char)
)	O
{	O
if	O
(	O
id	long
>=	O
GVar	*(struct(long,long,long,long,long,long,long,long,long,array(struct(array(char),long)),array(struct(array(char),long)),long,long,array(char),*(struct(long,long,array(char),long,long,long,char,char)),long,long,long,union(struct(int,int,int,int,int,union(struct`,struct`)),array(char),long),array(struct(long,long,array(char))),long,long,long))
->	O
nMaqNum	long
)	O
{	O
edma_print	(*(char))->(long)
(	O
"(ERROR)Machine not found"	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
*	O
name	*(char)
=	O
GVar	*(struct(long,long,long,long,long,long,long,long,long,array(struct(array(char),long)),array(struct(array(char),long)),long,long,array(char),*(struct(long,long,array(char),long,long,long,char,char)),long,long,long,union(struct(int,int,int,int,int,union(struct`,struct`)),array(char),long),array(struct(long,long,array(char))),long,long,long))
->	O
SysMaq	array(struct(array(char),long))
[	O
id	long
]	O
.	O
Nombre	array(char)
;	O
return	O
1	int
;	O
}	O
EUint32	long
EDMAPROC	O
edma_get_so_num	()->(long)
(	O
void	O
)	O
{	O
return	O
GVar	*(struct(long,long,long,long,long,long,long,long,long,array(struct(array(char),long)),array(struct(array(char),long)),long,long,array(char),*(struct(long,long,array(char),long,long,long,char,char)),long,long,long,union(struct(int,int,int,int,int,union(struct`,struct`)),array(char),long),array(struct(long,long,array(char))),long,long,long))
->	O
nSONum	long
;	O
}	O
EUint32	long
EDMAPROC	O
edma_get_arch_num	()->(long)
(	O
void	O
)	O
{	O
return	O
GVar	*(struct(long,long,long,long,long,long,long,long,long,array(struct(array(char),long)),array(struct(array(char),long)),long,long,array(char),*(struct(long,long,array(char),long,long,long,char,char)),long,long,long,union(struct(int,int,int,int,int,union(struct`,struct`)),array(char),long),array(struct(long,long,array(char))),long,long,long))
->	O
nMaqNum	long
;	O
}	O
