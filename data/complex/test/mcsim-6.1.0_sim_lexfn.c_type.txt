typedef	O
struct	O
tagINPUTFUNCTIONMAP	O
{	O
PSTR	*(char)
szName	*(char)
;	O
int	O
iIFNType	O
;	O
}	O
IFM	O
,	O
*	O
PIFM	O
;	O
IFM	O
vrgifmMap	O
[	O
]	O
=	O
{	O
{	O
"PerDose"	*(char)
,	O
IFN_PERDOSE	O
}	O
,	O
{	O
"PerExp"	*(char)
,	O
IFN_PEREXP	O
}	O
,	O
{	O
"PerTransit"	*(char)
,	O
IFN_PERTRANS	O
}	O
,	O
{	O
"NDoses"	*(char)
,	O
IFN_NDOSES	O
}	O
,	O
{	O
"Spikes"	*(char)
,	O
IFN_SPIKES	O
}	O
,	O
{	O
"Events"	*(char)
,	O
IFN_EVENTS	O
}	O
,	O
{	O
""	*(char)
,	O
IFN_NULL	O
}	O
}	O
;	O
extern	O
PSTR	*(char)
vrgszLexTypes	O
[	O
]	O
;	O
extern	O
VMMAPSTRCT	O
vrgvmGlo	O
[	O
]	O
;	O
int	O
GetFnType	(*(char))->(int)
(	O
PSTR	*(char)
szName	*(char)
)	O
{	O
PIFM	O
pifm	O
=	O
&	O
vrgifmMap	O
[	O
0	int
]	O
;	O
while	O
(	O
*	O
pifm	O
->	O
szName	*(char)
&&	O
MyStrcmp	O
(	O
szName	*(char)
,	O
pifm	O
->	O
szName	*(char)
)	O
)	O
pifm	O
++	O
;	O
return	O
(	O
pifm	O
->	O
iIFNType	O
)	O
;	O
}	O
void	O
InitIFN	(*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int))))->(void)
(	O
PIFN	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
)	O
{	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
dTStartPeriod	double
=	O
0.0	int
;	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
bOn	int
=	O
FALSE	O
;	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
dMag	double
=	O
0.0	int
;	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
dTper	double
=	O
0.0	int
;	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
dT0	double
=	O
0.0	int
;	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
dTexp	double
=	O
0.0	int
;	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
dDecay	double
=	O
0.0	int
;	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
dVal	double
=	O
0.0	int
;	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
=	O
0	int
;	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
hMag	long
=	O
0	int
;	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
hTper	long
=	O
0	int
;	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
hT0	long
=	O
0	int
;	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
hTexp	long
=	O
0	int
;	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
hDecay	long
=	O
0	int
;	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
=	O
0	int
;	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
iDoseCur	int
=	O
0	int
;	O
}	O
BOOL	int
DefDepParm	(*(char),*(double),*(long))->(int)
(	O
PSTR	*(char)
szLex	*(char)
,	O
PDOUBLE	*(double)
pdValue	*(double)
,	O
HANDLE	long
*	O
phvar	*(long)
)	O
{	O
BOOL	int
bReturn	O
=	O
TRUE	O
;	O
if	O
(	O
IsIdentifier	O
(	O
szLex	*(char)
)	O
)	O
{	O
if	O
(	O
!	O
(	O
*	O
phvar	*(long)
=	O
(	O
HANDLE	long
)	O
GetParmHandle	O
(	O
szLex	*(char)
)	O
)	O
)	O
{	O
bReturn	O
=	O
FALSE	O
;	O
ReportError	O
(	O
NULL	O
,	O
RE_UNDEFINED	O
,	O
szLex	*(char)
,	O
NULL	O
)	O
;	O
}	O
}	O
else	O
{	O
*	O
pdValue	*(double)
=	O
atof	(*(char))->(double)
(	O
szLex	*(char)
)	O
;	O
*	O
phvar	*(long)
=	O
0	int
;	O
}	O
return	O
(	O
bReturn	O
)	O
;	O
}	O
BOOL	int
GetInputArgs	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int))),int)->(int)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
PIFN	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
,	O
int	O
nArgs	O
)	O
{	O
PSTRLEX	array(char)
*	O
rgszLex	O
=	O
malloc	(long)->(*(void))
(	O
nArgs	O
*	O
sizeof	O
(	O
PSTRLEX	array(char)
)	O
)	O
;	O
int	O
*	O
rgiTypes	O
=	O
malloc	(long)->(*(void))
(	O
nArgs	O
*	O
sizeof	O
(	O
int	O
)	O
)	O
;	O
int	O
i	O
;	O
BOOL	int
bReturn	O
=	O
FALSE	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	O
<	O
nArgs	O
;	O
i	O
++	O
)	O
rgiTypes	O
[	O
i	O
]	O
=	O
LX_INTEGER	O
|	O
LX_FLOAT	O
|	O
LX_IDENTIFIER	O
;	O
if	O
(	O
GetFuncArgs	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),int,*(int),*(char))->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
nArgs	O
,	O
rgiTypes	O
,	O
rgszLex	O
[	O
0	int
]	O
)	O
)	O
{	O
bReturn	O
=	O
TRUE	O
;	O
bReturn	O
&=	O
DefDepParm	(*(char),*(double),*(long))->(int)
(	O
rgszLex	O
[	O
0	int
]	O
,	O
&	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
dMag	double
,	O
&	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
hMag	long
)	O
;	O
bReturn	O
&=	O
DefDepParm	(*(char),*(double),*(long))->(int)
(	O
rgszLex	O
[	O
1	int
]	O
,	O
&	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
dTper	double
,	O
&	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
hTper	long
)	O
;	O
bReturn	O
&=	O
DefDepParm	(*(char),*(double),*(long))->(int)
(	O
rgszLex	O
[	O
2	int
]	O
,	O
&	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
dT0	double
,	O
&	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
hT0	long
)	O
;	O
if	O
(	O
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
iType	int
==	O
IFN_PEREXP	O
)	O
||	O
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
iType	int
==	O
IFN_PERTRANS	O
)	O
)	O
bReturn	O
&=	O
DefDepParm	(*(char),*(double),*(long))->(int)
(	O
rgszLex	O
[	O
3	int
]	O
,	O
&	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
dDecay	double
,	O
&	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
hDecay	long
)	O
;	O
else	O
bReturn	O
&=	O
DefDepParm	(*(char),*(double),*(long))->(int)
(	O
rgszLex	O
[	O
3	int
]	O
,	O
&	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
dTexp	double
,	O
&	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
hTexp	long
)	O
;	O
if	O
(	O
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
iType	int
==	O
IFN_PERTRANS	O
)	O
&&	O
(	O
nArgs	O
==	O
5	int
)	O
)	O
bReturn	O
&=	O
DefDepParm	(*(char),*(double),*(long))->(int)
(	O
rgszLex	O
[	O
4	int
]	O
,	O
&	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
dNcpt	double
,	O
&	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
hNcpt	long
)	O
;	O
if	O
(	O
!	O
bReturn	O
)	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_EXPECTED	O
,	O
"input-spec"	*(char)
,	O
NULL	O
)	O
;	O
}	O
free	(*(void))->(void)
(	O
rgiTypes	O
)	O
;	O
free	(*(void))->(void)
(	O
rgszLex	O
)	O
;	O
return	O
(	O
bReturn	O
)	O
;	O
}	O
BOOL	int
GetNNumbers	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(char),int,*(double))->(int)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
PSTR	*(char)
szLex	*(char)
,	O
int	O
nNumbers	int
,	O
PDOUBLE	*(double)
rgd	*(double)
)	O
{	O
BOOL	int
bErr	O
=	O
FALSE	O
;	O
int	O
i	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	O
<	O
nNumbers	int
&&	O
!	O
bErr	O
;	O
i	O
++	O
)	O
{	O
if	O
(	O
i	O
)	O
GetOptPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
szLex	*(char)
,	O
','	O
)	O
;	O
if	O
(	O
!	O
(	O
bErr	O
=	O
ENextLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),array(char),int)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
szLex	*(char)
,	O
LX_NUMBER	O
)	O
)	O
)	O
rgd	*(double)
[	O
i	O
]	O
=	O
atof	(*(char))->(double)
(	O
szLex	*(char)
)	O
;	O
}	O
return	O
bErr	O
;	O
}	O
BOOL	int
GetNDoses	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(char),*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int))))->(int)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
PSTR	*(char)
szLex	*(char)
,	O
PIFN	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
)	O
{	O
PSTRLEX	array(char)
*	O
rgszLex	O
;	O
PSTRLEX	array(char)
szTmp	O
;	O
int	O
*	O
rgiTypes	O
,	O
iType	int
;	O
long	O
i	O
,	O
j	O
,	O
iLB	O
,	O
iUB	O
,	O
iDoseArg	O
;	O
BOOL	int
bOK	O
=	O
TRUE	O
;	O
BOOL	int
bErr	O
=	O
FALSE	O
;	O
HVAR	long
hvar	long
;	O
if	O
(	O
(	O
bErr	O
=	O
EGetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
szLex	*(char)
,	O
CH_LPAREN	O
)	O
)	O
)	O
goto	O
Exit_GetNDoses	O
;	O
if	O
(	O
(	O
bErr	O
=	O
ENextLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),array(char),int)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
szLex	*(char)
,	O
LX_INTEGER	O
)	O
)	O
)	O
goto	O
Exit_GetNDoses	O
;	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
=	O
atoi	(*(char))->(int)
(	O
szLex	*(char)
)	O
;	O
if	O
(	O
(	O
bErr	O
=	O
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
<=	O
0	int
)	O
)	O
)	O
{	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_LEXEXPECTED	O
|	O
RE_FATAL	O
,	O
"positive-integer"	*(char)
,	O
szLex	*(char)
)	O
;	O
goto	O
Exit_GetNDoses	O
;	O
}	O
iDoseArg	O
=	O
2	int
*	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
;	O
if	O
(	O
!	O
(	O
rgiTypes	O
=	O
InitiVector	(long)->(*(int))
(	O
iDoseArg	O
)	O
)	O
)	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_OUTOFMEM	O
|	O
RE_FATAL	O
,	O
"GetNDoses"	*(char)
,	O
NULL	O
)	O
;	O
if	O
(	O
!	O
(	O
rgszLex	O
=	O
(	O
PSTRLEX	array(char)
*	O
)	O
malloc	(long)->(*(void))
(	O
iDoseArg	O
*	O
sizeof	O
(	O
PSTRLEX	array(char)
)	O
)	O
)	O
)	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_OUTOFMEM	O
|	O
RE_FATAL	O
,	O
"GetNDoses"	*(char)
,	O
NULL	O
)	O
;	O
if	O
(	O
!	O
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rgT0s	*(double)
=	O
InitdVector	(long)->(*(double))
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
+	O
1	int
)	O
)	O
||	O
!	O
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rgMags	*(double)
=	O
InitdVector	(long)->(*(double))
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
)	O
)	O
)	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_OUTOFMEM	O
|	O
RE_FATAL	O
,	O
"GetNDoses"	*(char)
,	O
NULL	O
)	O
;	O
if	O
(	O
!	O
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rghT0s	*(long)
=	O
(	O
HANDLE	long
*	O
)	O
malloc	(long)->(*(void))
(	O
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
+	O
1	int
)	O
*	O
sizeof	O
(	O
HANDLE	long
)	O
)	O
)	O
||	O
!	O
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rghMags	*(long)
=	O
(	O
HANDLE	long
*	O
)	O
malloc	(long)->(*(void))
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
*	O
sizeof	O
(	O
HANDLE	long
)	O
)	O
)	O
)	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_OUTOFMEM	O
|	O
RE_FATAL	O
,	O
"GetNDoses"	*(char)
,	O
NULL	O
)	O
;	O
if	O
(	O
!	O
(	O
bOK	O
=	O
GetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
rgszLex	O
[	O
0	int
]	O
,	O
','	O
)	O
)	O
)	O
{	O
*	O
(	O
rgszLex	O
[	O
0	int
]	O
+	O
1	int
)	O
=	O
','	O
;	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_EXPECTED	O
|	O
RE_FATAL	O
,	O
rgszLex	O
[	O
0	int
]	O
,	O
NULL	O
)	O
;	O
}	O
for	O
(	O
i	O
=	O
0	int
;	O
i	O
<	O
(	O
iDoseArg	O
/	O
2	int
)	O
&&	O
bOK	O
;	O
i	O
++	O
)	O
{	O
rgiTypes	O
[	O
i	O
]	O
=	O
LX_INTEGER	O
|	O
LX_FLOAT	O
|	O
LX_IDENTIFIER	O
;	O
NextLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),array(char),*(int))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
szLex	*(char)
,	O
&	O
iType	int
)	O
;	O
if	O
(	O
!	O
(	O
bOK	O
&=	O
(	O
iType	int
&	O
rgiTypes	O
[	O
i	O
]	O
)	O
>	O
0	int
)	O
)	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_LEXEXPECTED	O
|	O
RE_FATAL	O
,	O
vrgszLexTypes	O
[	O
rgiTypes	O
[	O
i	O
]	O
]	O
,	O
szLex	*(char)
)	O
;	O
iLB	O
=	O
iUB	O
=	O
-	O
1	int
;	O
if	O
(	O
GetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
szTmp	O
,	O
'['	O
)	O
)	O
GetArrayBounds	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(long),*(long))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
&	O
iLB	O
,	O
&	O
iUB	O
)	O
;	O
if	O
(	O
iUB	O
==	O
-	O
1	int
)	O
{	O
strcpy	(*(char),*(char))->(*(char))
(	O
rgszLex	O
[	O
i	O
]	O
,	O
szLex	*(char)
)	O
;	O
}	O
else	O
{	O
if	O
(	O
2	int
*	O
(	O
iUB	O
-	O
iLB	O
)	O
!=	O
iDoseArg	O
)	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_TOOMANYPVARS	O
|	O
RE_FATAL	O
,	O
"GetNDoses"	*(char)
,	O
NULL	O
)	O
;	O
for	O
(	O
j	O
=	O
iLB	O
;	O
j	O
<	O
iUB	O
;	O
j	O
++	O
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
szTmp	O
,	O
"%s_%ld"	*(char)
,	O
szLex	*(char)
,	O
j	O
)	O
;	O
if	O
(	O
(	O
bErr	O
=	O
!	O
(	O
hvar	long
=	O
GetVarHandle	(*(char))->(long)
(	O
szTmp	O
)	O
)	O
)	O
)	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_UNDEFINED	O
|	O
RE_FATAL	O
,	O
szTmp	O
,	O
NULL	O
)	O
;	O
else	O
{	O
strcpy	(*(char),*(char))->(*(char))
(	O
rgszLex	O
[	O
i	O
+	O
j	O
-	O
iLB	O
]	O
,	O
szTmp	O
)	O
;	O
}	O
}	O
if	O
(	O
(	O
bErr	O
=	O
!	O
GetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
szTmp	O
,	O
','	O
)	O
)	O
)	O
goto	O
Exit_GetNDoses	O
;	O
break	O
;	O
}	O
}	O
for	O
(	O
i	O
=	O
iDoseArg	O
/	O
2	int
;	O
i	O
<	O
iDoseArg	O
&&	O
bOK	O
;	O
i	O
++	O
)	O
{	O
rgiTypes	O
[	O
i	O
]	O
=	O
LX_INTEGER	O
|	O
LX_FLOAT	O
|	O
LX_IDENTIFIER	O
;	O
NextLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),array(char),*(int))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
szLex	*(char)
,	O
&	O
iType	int
)	O
;	O
if	O
(	O
!	O
(	O
bOK	O
&=	O
(	O
iType	int
&	O
rgiTypes	O
[	O
i	O
]	O
)	O
>	O
0	int
)	O
)	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_LEXEXPECTED	O
|	O
RE_FATAL	O
,	O
vrgszLexTypes	O
[	O
rgiTypes	O
[	O
i	O
]	O
]	O
,	O
szLex	*(char)
)	O
;	O
iLB	O
=	O
iUB	O
=	O
-	O
1	int
;	O
if	O
(	O
GetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
szTmp	O
,	O
'['	O
)	O
)	O
GetArrayBounds	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(long),*(long))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
&	O
iLB	O
,	O
&	O
iUB	O
)	O
;	O
if	O
(	O
iUB	O
==	O
-	O
1	int
)	O
{	O
strcpy	(*(char),*(char))->(*(char))
(	O
rgszLex	O
[	O
i	O
]	O
,	O
szLex	*(char)
)	O
;	O
}	O
else	O
{	O
if	O
(	O
2	int
*	O
(	O
iUB	O
-	O
iLB	O
)	O
!=	O
iDoseArg	O
)	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_TOOMANYPVARS	O
|	O
RE_FATAL	O
,	O
"GetNDoses"	*(char)
,	O
NULL	O
)	O
;	O
for	O
(	O
j	O
=	O
iLB	O
;	O
j	O
<	O
iUB	O
;	O
j	O
++	O
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
szTmp	O
,	O
"%s_%ld"	*(char)
,	O
szLex	*(char)
,	O
j	O
)	O
;	O
if	O
(	O
(	O
bErr	O
=	O
!	O
(	O
hvar	long
=	O
GetVarHandle	(*(char))->(long)
(	O
szTmp	O
)	O
)	O
)	O
)	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_UNDEFINED	O
|	O
RE_FATAL	O
,	O
szTmp	O
,	O
NULL	O
)	O
;	O
else	O
{	O
strcpy	(*(char),*(char))->(*(char))
(	O
rgszLex	O
[	O
i	O
+	O
j	O
-	O
iLB	O
]	O
,	O
szTmp	O
)	O
;	O
}	O
}	O
if	O
(	O
(	O
bErr	O
=	O
EGetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
szTmp	O
,	O
CH_RPAREN	O
)	O
)	O
)	O
goto	O
Exit_GetNDoses	O
;	O
break	O
;	O
}	O
}	O
if	O
(	O
(	O
bErr	O
=	O
(	O
szTmp	O
[	O
0	int
]	O
!=	O
CH_RPAREN	O
)	O
)	O
)	O
goto	O
Exit_GetNDoses	O
;	O
bOK	O
=	O
TRUE	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	O
<	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
;	O
i	O
++	O
)	O
bOK	O
&=	O
DefDepParm	(*(char),*(double),*(long))->(int)
(	O
rgszLex	O
[	O
i	O
]	O
,	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rgMags	*(double)
+	O
i	O
,	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rghMags	*(long)
+	O
i	O
)	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	O
<	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
;	O
i	O
++	O
)	O
bOK	O
&=	O
DefDepParm	(*(char),*(double),*(long))->(int)
(	O
rgszLex	O
[	O
i	O
+	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
]	O
,	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rgT0s	*(double)
+	O
i	O
,	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rghT0s	*(long)
+	O
i	O
)	O
;	O
i	O
=	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
;	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rgT0s	*(double)
[	O
i	O
]	O
=	O
DBL_MAX	O
;	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rghT0s	*(long)
[	O
i	O
]	O
=	O
0	int
;	O
if	O
(	O
!	O
bOK	O
)	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_EXPECTED	O
|	O
RE_FATAL	O
,	O
"input-spec"	*(char)
,	O
NULL	O
)	O
;	O
Exit_GetNDoses	O
:	O
if	O
(	O
bErr	O
)	O
printf	(*(char))->(int)
(	O
"Syntax: NDoses (nInputs, <n Magnitudes>, <n T0's>)\n\n"	*(char)
)	O
;	O
return	O
(	O
!	O
bErr	O
)	O
;	O
}	O
BOOL	int
GetEvents	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(char),*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int))))->(int)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
PSTR	*(char)
szLex	*(char)
,	O
PIFN	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
)	O
{	O
PSTRLEX	array(char)
*	O
rgszLex	O
;	O
int	O
iType	int
,	O
*	O
rgiTypes	O
;	O
int	O
i	O
,	O
iDoseArg	O
;	O
BOOL	int
bOK	O
=	O
TRUE	O
;	O
BOOL	int
bErr	O
=	O
FALSE	O
;	O
if	O
(	O
(	O
bErr	O
=	O
EGetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
szLex	*(char)
,	O
CH_LPAREN	O
)	O
)	O
)	O
goto	O
Exit_GetEvents	O
;	O
NextLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),array(char),*(int))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
szLex	*(char)
,	O
&	O
iType	int
)	O
;	O
if	O
(	O
!	O
(	O
bOK	O
&=	O
(	O
iType	int
&	O
(	O
LX_IDENTIFIER	O
)	O
)	O
>	O
0	int
)	O
)	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_LEXEXPECTED	O
|	O
RE_FATAL	O
,	O
vrgszLexTypes	O
[	O
LX_IDENTIFIER	O
]	O
,	O
szLex	*(char)
)	O
;	O
if	O
(	O
!	O
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
target_state	long
=	O
(	O
HANDLE	long
)	O
GetParmHandle	O
(	O
szLex	*(char)
)	O
)	O
)	O
{	O
ReportError	O
(	O
NULL	O
,	O
RE_UNDEFINED	O
|	O
RE_FATAL	O
,	O
szLex	*(char)
,	O
NULL	O
)	O
;	O
}	O
if	O
(	O
!	O
(	O
bOK	O
=	O
GetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
szLex	*(char)
,	O
','	O
)	O
)	O
)	O
{	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_LEXEXPECTED	O
|	O
RE_FATAL	O
,	O
","	*(char)
,	O
szLex	*(char)
)	O
;	O
}	O
if	O
(	O
(	O
bErr	O
=	O
ENextLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),array(char),int)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
szLex	*(char)
,	O
LX_INTEGER	O
)	O
)	O
)	O
goto	O
Exit_GetEvents	O
;	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
=	O
atoi	(*(char))->(int)
(	O
szLex	*(char)
)	O
;	O
if	O
(	O
(	O
bErr	O
=	O
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
<=	O
0	int
)	O
)	O
)	O
{	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_LEXEXPECTED	O
|	O
RE_FATAL	O
,	O
"positive-integer"	*(char)
,	O
szLex	*(char)
)	O
;	O
goto	O
Exit_GetEvents	O
;	O
}	O
iDoseArg	O
=	O
3	int
*	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
;	O
if	O
(	O
!	O
(	O
rgiTypes	O
=	O
InitiVector	(long)->(*(int))
(	O
iDoseArg	O
)	O
)	O
)	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_OUTOFMEM	O
|	O
RE_FATAL	O
,	O
"GetEvents"	*(char)
,	O
NULL	O
)	O
;	O
if	O
(	O
!	O
(	O
rgszLex	O
=	O
(	O
PSTRLEX	array(char)
*	O
)	O
malloc	(long)->(*(void))
(	O
iDoseArg	O
*	O
sizeof	O
(	O
PSTRLEX	array(char)
)	O
)	O
)	O
)	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_OUTOFMEM	O
|	O
RE_FATAL	O
,	O
"GetEvents"	*(char)
,	O
NULL	O
)	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	O
<	O
iDoseArg	O
&&	O
bOK	O
;	O
i	O
++	O
)	O
{	O
rgiTypes	O
[	O
i	O
]	O
=	O
LX_INTEGER	O
|	O
LX_FLOAT	O
|	O
LX_IDENTIFIER	O
;	O
if	O
(	O
!	O
(	O
bOK	O
=	O
GetOptPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
rgszLex	O
[	O
i	O
]	O
,	O
','	O
)	O
)	O
)	O
{	O
*	O
(	O
rgszLex	O
[	O
i	O
]	O
+	O
1	int
)	O
=	O
','	O
;	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_EXPECTED	O
|	O
RE_FATAL	O
,	O
rgszLex	O
[	O
i	O
]	O
,	O
NULL	O
)	O
;	O
}	O
NextLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),array(char),*(int))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
rgszLex	O
[	O
i	O
]	O
,	O
&	O
iType	int
)	O
;	O
if	O
(	O
!	O
(	O
bOK	O
&=	O
(	O
iType	int
&	O
rgiTypes	O
[	O
i	O
]	O
)	O
>	O
0	int
)	O
)	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_LEXEXPECTED	O
|	O
RE_FATAL	O
,	O
vrgszLexTypes	O
[	O
rgiTypes	O
[	O
i	O
]	O
]	O
,	O
rgszLex	O
[	O
i	O
]	O
)	O
;	O
}	O
if	O
(	O
(	O
bErr	O
=	O
EGetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
szLex	*(char)
,	O
CH_RPAREN	O
)	O
)	O
)	O
goto	O
Exit_GetEvents	O
;	O
if	O
(	O
!	O
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rgT0s	*(double)
=	O
InitdVector	(long)->(*(double))
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
)	O
)	O
||	O
!	O
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rgOper	*(int)
=	O
InitiVector	(long)->(*(int))
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
)	O
)	O
||	O
!	O
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rgMags	*(double)
=	O
InitdVector	(long)->(*(double))
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
)	O
)	O
)	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_OUTOFMEM	O
|	O
RE_FATAL	O
,	O
"GetEvents"	*(char)
,	O
NULL	O
)	O
;	O
if	O
(	O
!	O
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rghT0s	*(long)
=	O
(	O
HANDLE	long
*	O
)	O
malloc	(long)->(*(void))
(	O
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
)	O
*	O
sizeof	O
(	O
HANDLE	long
)	O
)	O
)	O
||	O
!	O
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rghMags	*(long)
=	O
(	O
HANDLE	long
*	O
)	O
malloc	(long)->(*(void))
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
*	O
sizeof	O
(	O
HANDLE	long
)	O
)	O
)	O
)	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_OUTOFMEM	O
|	O
RE_FATAL	O
,	O
"GetEvents"	*(char)
,	O
NULL	O
)	O
;	O
bOK	O
=	O
TRUE	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	O
<	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
;	O
i	O
++	O
)	O
bOK	O
&=	O
DefDepParm	(*(char),*(double),*(long))->(int)
(	O
rgszLex	O
[	O
i	O
]	O
,	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rgT0s	*(double)
+	O
i	O
,	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rghT0s	*(long)
+	O
i	O
)	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	O
<	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
;	O
i	O
++	O
)	O
{	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rgOper	*(int)
[	O
i	O
]	O
=	O
GetKeywordCode	O
(	O
rgszLex	O
[	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
+	O
i	O
]	O
,	O
NULL	O
)	O
;	O
if	O
(	O
!	O
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rgOper	*(int)
[	O
i	O
]	O
)	O
)	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_LEXEXPECTED	O
|	O
RE_FATAL	O
,	O
"Replace, Add or Multiply operation"	*(char)
,	O
rgszLex	O
[	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
+	O
i	O
]	O
)	O
;	O
}	O
for	O
(	O
i	O
=	O
0	int
;	O
i	O
<	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
;	O
i	O
++	O
)	O
bOK	O
&=	O
DefDepParm	(*(char),*(double),*(long))->(int)
(	O
rgszLex	O
[	O
2	int
*	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
+	O
i	O
]	O
,	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rgMags	*(double)
+	O
i	O
,	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rghMags	*(long)
+	O
i	O
)	O
;	O
if	O
(	O
!	O
bOK	O
)	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_EXPECTED	O
|	O
RE_FATAL	O
,	O
"input-spec"	*(char)
,	O
NULL	O
)	O
;	O
Exit_GetEvents	O
:	O
if	O
(	O
bErr	O
)	O
printf	(*(char))->(int)
(	O
"Syntax: Events (State, nEvents, <n Times>, <n Operations>, "	*(char)
"<n Values>)\n\n"	*(char)
)	O
;	O
return	O
(	O
!	O
bErr	O
)	O
;	O
}	O
BOOL	int
GetSpikes	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(char),*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int))))->(int)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
PSTR	*(char)
szLex	*(char)
,	O
PIFN	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
)	O
{	O
PSTRLEX	array(char)
*	O
rgszLex	O
;	O
int	O
*	O
rgiTypes	O
,	O
iType	int
;	O
int	O
i	O
,	O
iDoseArg	O
;	O
BOOL	int
bOK	O
=	O
TRUE	O
;	O
BOOL	int
bErr	O
=	O
FALSE	O
;	O
if	O
(	O
(	O
bErr	O
=	O
EGetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
szLex	*(char)
,	O
CH_LPAREN	O
)	O
)	O
)	O
goto	O
Exit_GetSpikes	O
;	O
if	O
(	O
(	O
bErr	O
=	O
ENextLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),array(char),int)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
szLex	*(char)
,	O
LX_INTEGER	O
)	O
)	O
)	O
goto	O
Exit_GetSpikes	O
;	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
=	O
atoi	(*(char))->(int)
(	O
szLex	*(char)
)	O
;	O
if	O
(	O
(	O
bErr	O
=	O
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
<=	O
0	int
)	O
)	O
)	O
{	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_LEXEXPECTED	O
|	O
RE_FATAL	O
,	O
"positive-integer"	*(char)
,	O
szLex	*(char)
)	O
;	O
goto	O
Exit_GetSpikes	O
;	O
}	O
iDoseArg	O
=	O
2	int
*	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
;	O
if	O
(	O
!	O
(	O
rgiTypes	O
=	O
InitiVector	(long)->(*(int))
(	O
iDoseArg	O
)	O
)	O
)	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_OUTOFMEM	O
|	O
RE_FATAL	O
,	O
"GetSpikes"	*(char)
,	O
NULL	O
)	O
;	O
if	O
(	O
!	O
(	O
rgszLex	O
=	O
(	O
PSTRLEX	array(char)
*	O
)	O
malloc	(long)->(*(void))
(	O
iDoseArg	O
*	O
sizeof	O
(	O
PSTRLEX	array(char)
)	O
)	O
)	O
)	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_OUTOFMEM	O
|	O
RE_FATAL	O
,	O
"GetSpikes"	*(char)
,	O
NULL	O
)	O
;	O
if	O
(	O
!	O
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rgT0s	*(double)
=	O
InitdVector	(long)->(*(double))
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
)	O
)	O
||	O
!	O
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rgMags	*(double)
=	O
InitdVector	(long)->(*(double))
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
)	O
)	O
)	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_OUTOFMEM	O
|	O
RE_FATAL	O
,	O
"GetSpikes"	*(char)
,	O
NULL	O
)	O
;	O
if	O
(	O
!	O
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rghT0s	*(long)
=	O
(	O
HANDLE	long
*	O
)	O
malloc	(long)->(*(void))
(	O
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
)	O
*	O
sizeof	O
(	O
HANDLE	long
)	O
)	O
)	O
||	O
!	O
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rghMags	*(long)
=	O
(	O
HANDLE	long
*	O
)	O
malloc	(long)->(*(void))
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
*	O
sizeof	O
(	O
HANDLE	long
)	O
)	O
)	O
)	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_OUTOFMEM	O
|	O
RE_FATAL	O
,	O
"GetSpikes"	*(char)
,	O
NULL	O
)	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	O
<	O
iDoseArg	O
&&	O
bOK	O
;	O
i	O
++	O
)	O
{	O
rgiTypes	O
[	O
i	O
]	O
=	O
LX_INTEGER	O
|	O
LX_FLOAT	O
|	O
LX_IDENTIFIER	O
;	O
if	O
(	O
!	O
(	O
bOK	O
=	O
GetOptPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
rgszLex	O
[	O
i	O
]	O
,	O
','	O
)	O
)	O
)	O
{	O
*	O
(	O
rgszLex	O
[	O
i	O
]	O
+	O
1	int
)	O
=	O
','	O
;	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_EXPECTED	O
|	O
RE_FATAL	O
,	O
rgszLex	O
[	O
i	O
]	O
,	O
NULL	O
)	O
;	O
break	O
;	O
}	O
NextLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),array(char),*(int))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
rgszLex	O
[	O
i	O
]	O
,	O
&	O
iType	int
)	O
;	O
if	O
(	O
!	O
(	O
bOK	O
&=	O
(	O
iType	int
&	O
rgiTypes	O
[	O
i	O
]	O
)	O
>	O
0	int
)	O
)	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_LEXEXPECTED	O
|	O
RE_FATAL	O
,	O
vrgszLexTypes	O
[	O
rgiTypes	O
[	O
i	O
]	O
]	O
,	O
rgszLex	O
[	O
i	O
]	O
)	O
;	O
}	O
if	O
(	O
(	O
bErr	O
=	O
EGetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
szLex	*(char)
,	O
CH_RPAREN	O
)	O
)	O
)	O
goto	O
Exit_GetSpikes	O
;	O
bOK	O
=	O
TRUE	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	O
<	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
;	O
i	O
++	O
)	O
bOK	O
&=	O
DefDepParm	(*(char),*(double),*(long))->(int)
(	O
rgszLex	O
[	O
i	O
]	O
,	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rgMags	*(double)
+	O
i	O
,	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rghMags	*(long)
+	O
i	O
)	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	O
<	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
;	O
i	O
++	O
)	O
bOK	O
&=	O
DefDepParm	(*(char),*(double),*(long))->(int)
(	O
rgszLex	O
[	O
i	O
+	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
nDoses	int
]	O
,	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rgT0s	*(double)
+	O
i	O
,	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
rghT0s	*(long)
+	O
i	O
)	O
;	O
if	O
(	O
!	O
bOK	O
)	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_EXPECTED	O
|	O
RE_FATAL	O
,	O
"input-spec"	*(char)
,	O
NULL	O
)	O
;	O
Exit_GetSpikes	O
:	O
if	O
(	O
bErr	O
)	O
printf	(*(char))->(int)
(	O
"Syntax: Spikes (nInputs, <n Magnitudes>, <n Times>)\n\n"	*(char)
)	O
;	O
return	O
(	O
!	O
bErr	O
)	O
;	O
}	O
BOOL	int
GetInputFn	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(char),*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int))))->(int)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
PSTR	*(char)
sz	*(char)
,	O
PIFN	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
)	O
{	O
INPUTBUF	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void))
ibDummy	O
;	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
pibDum	O
=	O
&	O
ibDummy	O
;	O
PSTRLEX	array(char)
szLex	*(char)
;	O
int	O
iType	int
;	O
BOOL	int
bReturn	O
=	O
FALSE	O
;	O
if	O
(	O
!	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
||	O
!	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
)	O
return	O
(	O
FALSE	O
)	O
;	O
if	O
(	O
sz	*(char)
)	O
MakeStringBuffer	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
pibDum	O
,	O
sz	*(char)
)	O
;	O
else	O
pibDum	O
=	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
;	O
NextLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),array(char),*(int))->(void)
(	O
pibDum	O
,	O
szLex	*(char)
,	O
&	O
iType	int
)	O
;	O
switch	O
(	O
iType	int
)	O
{	O
default	O
:	O
case	O
LX_NULL	O
:	O
case	O
LX_PUNCT	O
:	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_LEXEXPECTED	O
,	O
"input-spec"	*(char)
,	O
NULL	O
)	O
;	O
break	O
;	O
case	O
LX_FLOAT	O
:	O
case	O
LX_INTEGER	O
:	O
case	O
LX_IDENTIFIER	O
:	O
InitIFN	(*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int))))->(void)
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
)	O
;	O
if	O
(	O
iType	int
==	O
LX_IDENTIFIER	O
)	O
{	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
iType	int
=	O
GetFnType	(*(char))->(int)
(	O
szLex	*(char)
)	O
;	O
switch	O
(	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
iType	int
)	O
{	O
case	O
IFN_NDOSES	O
:	O
bReturn	O
=	O
GetNDoses	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(char),*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int))))->(int)
(	O
pibDum	O
,	O
szLex	*(char)
,	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
)	O
;	O
break	O
;	O
case	O
IFN_SPIKES	O
:	O
bReturn	O
=	O
GetSpikes	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(char),*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int))))->(int)
(	O
pibDum	O
,	O
szLex	*(char)
,	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
)	O
;	O
break	O
;	O
case	O
IFN_EVENTS	O
:	O
bReturn	O
=	O
GetEvents	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(char),*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int))))->(int)
(	O
pibDum	O
,	O
szLex	*(char)
,	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
)	O
;	O
break	O
;	O
default	O
:	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
iType	int
=	O
IFN_NULL	O
;	O
ReportError	O
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),*(char),int,int,int,*(void)))
,	O
RE_LEXEXPECTED	O
,	O
"input-spec"	*(char)
,	O
szLex	*(char)
)	O
;	O
break	O
;	O
case	O
IFN_PERDOSE	O
:	O
case	O
IFN_PEREXP	O
:	O
bReturn	O
=	O
GetInputArgs	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int))),int)->(int)
(	O
pibDum	O
,	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
,	O
4	int
)	O
;	O
break	O
;	O
case	O
IFN_PERTRANS	O
:	O
bReturn	O
=	O
GetInputArgs	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),*(char),int,int,int,*(void))),*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int))),int)->(int)
(	O
pibDum	O
,	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
,	O
5	int
)	O
;	O
break	O
;	O
}	O
}	O
else	O
{	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
iType	int
=	O
IFN_CONSTANT	O
;	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
dMag	double
=	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
dVal	double
=	O
atof	(*(char))->(double)
(	O
szLex	*(char)
)	O
;	O
pifn	*(struct(int,int,double,double,double,double,double,double,double,double,long,long,long,long,long,long,int,int,*(double),*(double),*(long),*(long),long,*(int)))
->	O
bOn	int
=	O
TRUE	O
;	O
bReturn	O
=	O
TRUE	O
;	O
}	O
break	O
;	O
}	O
return	O
(	O
bReturn	O
)	O
;	O
}	O
