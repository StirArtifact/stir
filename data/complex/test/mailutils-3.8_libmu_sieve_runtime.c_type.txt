void	O
_mu_i_sv_instr_locus	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))))->(void)
(	O
mu_sieve_machine_t	*(struct)
mach	*(struct)
)	O
{	O
mu_locus_point_set_file	(*(struct(*(char),int,int)),*(char))->(int)
(	O
&	O
mach	*(struct)
->	O
locus	struct(struct(*(char),int,int),struct(*(char),int,int))
.	O
beg	struct(*(char),int,int)
,	O
mu_i_sv_id_str	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))),long)->(*(char))
(	O
mach	*(struct)
,	O
SIEVE_RT_ARG	O
(	O
mach	*(struct)
,	O
0	int
,	O
pc	long
)	O
)	O
)	O
;	O
mach	*(struct)
->	O
locus	struct(struct(*(char),int,int),struct(*(char),int,int))
.	O
beg	struct(*(char),int,int)
.	O
mu_line	int
=	O
SIEVE_RT_ARG	O
(	O
mach	*(struct)
,	O
1	int
,	O
unum	int
)	O
;	O
mach	*(struct)
->	O
locus	struct(struct(*(char),int,int),struct(*(char),int,int))
.	O
beg	struct(*(char),int,int)
.	O
mu_col	int
=	O
SIEVE_RT_ARG	O
(	O
mach	*(struct)
,	O
2	int
,	O
unum	int
)	O
;	O
mu_locus_point_set_file	(*(struct(*(char),int,int)),*(char))->(int)
(	O
&	O
mach	*(struct)
->	O
locus	struct(struct(*(char),int,int),struct(*(char),int,int))
.	O
end	struct(*(char),int,int)
,	O
mu_i_sv_id_str	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))),long)->(*(char))
(	O
mach	*(struct)
,	O
SIEVE_RT_ARG	O
(	O
mach	*(struct)
,	O
3	int
,	O
pc	long
)	O
)	O
)	O
;	O
mach	*(struct)
->	O
locus	struct(struct(*(char),int,int),struct(*(char),int,int))
.	O
end	struct(*(char),int,int)
.	O
mu_line	int
=	O
SIEVE_RT_ARG	O
(	O
mach	*(struct)
,	O
4	int
,	O
unum	int
)	O
;	O
mach	*(struct)
->	O
locus	struct(struct(*(char),int,int),struct(*(char),int,int))
.	O
end	struct(*(char),int,int)
.	O
mu_col	int
=	O
SIEVE_RT_ARG	O
(	O
mach	*(struct)
,	O
5	int
,	O
unum	int
)	O
;	O
mu_stream_ioctl	(*(struct),int,int,*(void))->(int)
(	O
mach	*(struct)
->	O
errstream	*(struct)
,	O
MU_IOCTL_LOGSTREAM	int
,	O
MU_IOCTL_LOGSTREAM_SET_LOCUS_RANGE	int
,	O
&	O
mach	*(struct)
->	O
locus	struct(struct(*(char),int,int),struct(*(char),int,int))
)	O
;	O
if	O
(	O
INSTR_DEBUG	O
(	O
mach	*(struct)
)	O
)	O
mu_i_sv_debug	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))),long,*(char))->(void)
(	O
mach	*(struct)
,	O
mach	*(struct)
->	O
pc	long
-	O
1	int
,	O
"LOCUS"	*(char)
)	O
;	O
SIEVE_RT_ADJUST	O
(	O
mach	*(struct)
,	O
6	int
)	O
;	O
}	O
static	O
int	O
instr_run	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))),*(char))->(int)
(	O
mu_sieve_machine_t	*(struct)
mach	*(struct)
,	O
char	O
const	O
*	O
what	*(char)
)	O
{	O
int	O
rc	int
=	O
0	int
;	O
mu_sieve_handler_t	*((*(struct))->(int))
han	*((*(struct(struct(struct`,struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(*`),long,long,*(struct`),long,long,*(struct`),long,long,long,*(union`),enum(int,int,int,int,int),long,long,*(struct`),*(char),*(struct`),long,long,*(struct`),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct`),*(struct`),long,*(struct`),int,int,int,struct(struct`,struct`),int,struct(struct`,struct`),*(struct`),*(struct`),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct`),*(char),*(void))))->(int))
=	O
SIEVE_RT_ARG	O
(	O
mach	*(struct)
,	O
0	int
,	O
handler	array(*((*(*(struct(*`,*`,*`,int,int,*`,*`,*`,*`,long,int,int))),*(void),*(void),*(void))->(int)))
)	O
;	O
mach	*(struct)
->	O
argstart	long
=	O
SIEVE_RT_ARG	O
(	O
mach	*(struct)
,	O
1	int
,	O
pc	long
)	O
;	O
mach	*(struct)
->	O
argcount	long
=	O
SIEVE_RT_ARG	O
(	O
mach	*(struct)
,	O
2	int
,	O
pc	long
)	O
;	O
mach	*(struct)
->	O
tagcount	long
=	O
SIEVE_RT_ARG	O
(	O
mach	*(struct)
,	O
3	int
,	O
pc	long
)	O
;	O
mach	*(struct)
->	O
identifier	*(char)
=	O
SIEVE_RT_ARG	O
(	O
mach	*(struct)
,	O
4	int
,	O
string	*(*(char))
)	O
;	O
mach	*(struct)
->	O
comparator	*((*(struct(struct(struct`,struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(*`),long,long,*(struct`),long,long,*(struct`),long,long,long,*(union`),enum(int,int,int,int,int),long,long,*(struct`),*(char),*(struct`),long,long,*(struct`),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct`),*(struct`),long,*(struct`),int,int,int,struct(struct`,struct`),int,struct(struct`,struct`),*(struct`),*(struct`),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct`),*(char),*(void))),*(struct(int,int,*(char),*(char),*(void))),*(char))->(int))
=	O
SIEVE_RT_ARG	O
(	O
mach	*(struct)
,	O
5	int
,	O
comp	array(*((*(struct),*(struct(int,int,*(char),*(char),*(void))),*(char))->(int)))
)	O
;	O
SIEVE_RT_ADJUST	O
(	O
mach	*(struct)
,	O
6	int
)	O
;	O
if	O
(	O
INSTR_DEBUG	O
(	O
mach	*(struct)
)	O
)	O
mu_i_sv_debug_command	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))),long,*(char))->(void)
(	O
mach	*(struct)
,	O
mach	*(struct)
->	O
pc	long
-	O
7	int
,	O
what	*(char)
)	O
;	O
else	O
mu_i_sv_trace	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))),*(char))->(void)
(	O
mach	*(struct)
,	O
what	*(char)
)	O
;	O
if	O
(	O
!	O
INSTR_DISASS	O
(	O
mach	*(struct)
)	O
)	O
rc	int
=	O
han	*((*(struct(struct(struct`,struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(*`),long,long,*(struct`),long,long,*(struct`),long,long,long,*(union`),enum(int,int,int,int,int),long,long,*(struct`),*(char),*(struct`),long,long,*(struct`),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct`),*(struct`),long,*(struct`),int,int,int,struct(struct`,struct`),int,struct(struct`,struct`),*(struct`),*(struct`),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct`),*(char),*(void))))->(int))
(	O
mach	*(struct)
)	O
;	O
mach	*(struct)
->	O
argstart	long
=	O
0	int
;	O
mach	*(struct)
->	O
argcount	long
=	O
0	int
;	O
mach	*(struct)
->	O
tagcount	long
=	O
0	int
;	O
mach	*(struct)
->	O
identifier	*(char)
=	O
NULL	O
;	O
mach	*(struct)
->	O
comparator	*((*(struct(struct(struct`,struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(*`),long,long,*(struct`),long,long,*(struct`),long,long,long,*(union`),enum(int,int,int,int,int),long,long,*(struct`),*(char),*(struct`),long,long,*(struct`),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct`),*(struct`),long,*(struct`),int,int,int,struct(struct`,struct`),int,struct(struct`,struct`),*(struct`),*(struct`),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct`),*(char),*(void))),*(struct(int,int,*(char),*(char),*(void))),*(char))->(int))
=	O
NULL	O
;	O
return	O
rc	int
;	O
}	O
void	O
_mu_i_sv_instr_action	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))))->(void)
(	O
mu_sieve_machine_t	*(struct)
mach	*(struct)
)	O
{	O
mach	*(struct)
->	O
action_count	int
++	O
;	O
instr_run	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))),*(char))->(int)
(	O
mach	*(struct)
,	O
"ACTION"	*(char)
)	O
;	O
}	O
void	O
_mu_i_sv_instr_test	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))))->(void)
(	O
mu_sieve_machine_t	*(struct)
mach	*(struct)
)	O
{	O
mach	*(struct)
->	O
reg	long
=	O
instr_run	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))),*(char))->(int)
(	O
mach	*(struct)
,	O
"TEST"	*(char)
)	O
;	O
}	O
void	O
_mu_i_sv_instr_not	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))))->(void)
(	O
mu_sieve_machine_t	*(struct)
mach	*(struct)
)	O
{	O
if	O
(	O
INSTR_DEBUG	O
(	O
mach	*(struct)
)	O
)	O
mu_i_sv_debug	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))),long,*(char))->(void)
(	O
mach	*(struct)
,	O
mach	*(struct)
->	O
pc	long
-	O
1	int
,	O
"NOT"	*(char)
)	O
;	O
if	O
(	O
INSTR_DISASS	O
(	O
mach	*(struct)
)	O
)	O
return	O
;	O
mach	*(struct)
->	O
reg	long
=	O
!	O
mach	*(struct)
->	O
reg	long
;	O
}	O
void	O
_mu_i_sv_instr_branch	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))))->(void)
(	O
mu_sieve_machine_t	*(struct)
mach	*(struct)
)	O
{	O
long	O
num	long
=	O
SIEVE_RT_ARG	O
(	O
mach	*(struct)
,	O
0	int
,	O
number	long
)	O
;	O
SIEVE_RT_ADJUST	O
(	O
mach	*(struct)
,	O
1	int
)	O
;	O
if	O
(	O
INSTR_DEBUG	O
(	O
mach	*(struct)
)	O
)	O
mu_i_sv_debug	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))),long,*(char))->(void)
(	O
mach	*(struct)
,	O
mach	*(struct)
->	O
pc	long
-	O
2	int
,	O
"BRANCH %lu"	*(char)
,	O
(	O
unsigned	O
long	O
)	O
(	O
mach	*(struct)
->	O
pc	long
+	O
num	long
)	O
)	O
;	O
if	O
(	O
INSTR_DISASS	O
(	O
mach	*(struct)
)	O
)	O
return	O
;	O
mach	*(struct)
->	O
pc	long
+=	O
num	long
;	O
}	O
void	O
_mu_i_sv_instr_brz	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))))->(void)
(	O
mu_sieve_machine_t	*(struct)
mach	*(struct)
)	O
{	O
long	O
num	long
=	O
SIEVE_RT_ARG	O
(	O
mach	*(struct)
,	O
0	int
,	O
number	long
)	O
;	O
SIEVE_RT_ADJUST	O
(	O
mach	*(struct)
,	O
1	int
)	O
;	O
if	O
(	O
INSTR_DEBUG	O
(	O
mach	*(struct)
)	O
)	O
mu_i_sv_debug	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))),long,*(char))->(void)
(	O
mach	*(struct)
,	O
mach	*(struct)
->	O
pc	long
-	O
2	int
,	O
"BRZ %lu"	*(char)
,	O
(	O
unsigned	O
long	O
)	O
(	O
mach	*(struct)
->	O
pc	long
+	O
num	long
)	O
)	O
;	O
if	O
(	O
INSTR_DISASS	O
(	O
mach	*(struct)
)	O
)	O
return	O
;	O
if	O
(	O
!	O
mach	*(struct)
->	O
reg	long
)	O
mach	*(struct)
->	O
pc	long
+=	O
num	long
;	O
}	O
void	O
_mu_i_sv_instr_brnz	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))))->(void)
(	O
mu_sieve_machine_t	*(struct)
mach	*(struct)
)	O
{	O
long	O
num	long
=	O
SIEVE_RT_ARG	O
(	O
mach	*(struct)
,	O
0	int
,	O
number	long
)	O
;	O
SIEVE_RT_ADJUST	O
(	O
mach	*(struct)
,	O
1	int
)	O
;	O
if	O
(	O
INSTR_DEBUG	O
(	O
mach	*(struct)
)	O
)	O
mu_i_sv_debug	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))),long,*(char))->(void)
(	O
mach	*(struct)
,	O
mach	*(struct)
->	O
pc	long
-	O
2	int
,	O
"BRNZ %lu"	*(char)
,	O
(	O
unsigned	O
long	O
)	O
(	O
mach	*(struct)
->	O
pc	long
+	O
num	long
)	O
)	O
;	O
if	O
(	O
INSTR_DISASS	O
(	O
mach	*(struct)
)	O
)	O
return	O
;	O
if	O
(	O
mach	*(struct)
->	O
reg	long
)	O
mach	*(struct)
->	O
pc	long
+=	O
num	long
;	O
}	O
void	O
mu_sieve_abort	(*(struct))->(void)
(	O
mu_sieve_machine_t	*(struct)
mach	*(struct)
)	O
{	O
longjmp	(array(struct(array(long),int,struct(array(long)))),int)->(void)
(	O
mach	*(struct)
->	O
errbuf	array(struct(array(long),int,struct(array(long))))
,	O
MU_ERR_FAILURE	O
)	O
;	O
}	O
void	O
mu_sieve_set_data	(*(struct),*(void))->(void)
(	O
mu_sieve_machine_t	*(struct)
mach	*(struct)
,	O
void	O
*	O
data	*(void)
)	O
{	O
mach	*(struct)
->	O
data	*(void)
=	O
data	*(void)
;	O
}	O
void	O
*	O
mu_sieve_get_data	(*(struct))->(*(void))
(	O
mu_sieve_machine_t	*(struct)
mach	*(struct)
)	O
{	O
return	O
mach	*(struct)
->	O
data	*(void)
;	O
}	O
int	O
mu_sieve_get_locus	(*(struct),*(struct(struct(*(char),int,int),struct(*(char),int,int))))->(int)
(	O
mu_sieve_machine_t	*(struct)
mach	*(struct)
,	O
struct	O
mu_locus_range	struct(struct(*(char),int,int),struct(*(char),int,int))
*	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
)	O
{	O
return	O
mu_locus_range_copy	(*(struct(struct(*(char),int,int),struct(*(char),int,int))),*(struct(struct(*(char),int,int),struct(*(char),int,int))))->(int)
(	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
,	O
&	O
mach	*(struct)
->	O
locus	struct(struct(*(char),int,int),struct(*(char),int,int))
)	O
;	O
}	O
mu_mailbox_t	*(struct)
mu_sieve_get_mailbox	(*(struct))->(*(struct))
(	O
mu_sieve_machine_t	*(struct)
mach	*(struct)
)	O
{	O
return	O
mach	*(struct)
->	O
mailbox	*(char)
;	O
}	O
mu_message_t	*(struct)
mu_sieve_get_message	(*(struct))->(*(struct))
(	O
mu_sieve_machine_t	*(struct)
mach	*(struct)
)	O
{	O
if	O
(	O
!	O
mach	*(struct)
->	O
msg	*(struct)
)	O
mu_mailbox_get_message	(*(struct),long,*(*(struct)))->(int)
(	O
mach	*(struct)
->	O
mailbox	*(char)
,	O
mach	*(struct)
->	O
msgno	long
,	O
&	O
mach	*(struct)
->	O
msg	*(struct)
)	O
;	O
return	O
mach	*(struct)
->	O
msg	*(struct)
;	O
}	O
size_t	long
mu_sieve_get_message_num	(*(struct))->(long)
(	O
mu_sieve_machine_t	*(struct)
mach	*(struct)
)	O
{	O
return	O
mach	*(struct)
->	O
msgno	long
;	O
}	O
const	O
char	O
*	O
mu_sieve_get_identifier	(*(struct))->(*(char))
(	O
mu_sieve_machine_t	*(struct)
mach	*(struct)
)	O
{	O
return	O
mach	*(struct)
->	O
identifier	*(char)
;	O
}	O
void	O
mu_sieve_get_argc	(*(struct),*(long),*(long))->(void)
(	O
mu_sieve_machine_t	*(struct)
mach	*(struct)
,	O
size_t	long
*	O
args	*(long)
,	O
size_t	long
*	O
tags	*(struct(*(char),enum(int,int,int,int,int)))
)	O
{	O
if	O
(	O
args	*(long)
)	O
*	O
args	*(long)
=	O
mach	*(struct)
->	O
argcount	long
;	O
if	O
(	O
tags	*(struct(*(char),enum(int,int,int,int,int)))
)	O
*	O
tags	*(struct(*(char),enum(int,int,int,int,int)))
=	O
mach	*(struct)
->	O
tagcount	long
;	O
}	O
int	O
mu_sieve_is_dry_run	(*(struct))->(int)
(	O
mu_sieve_machine_t	*(struct)
mach	*(struct)
)	O
{	O
return	O
mach	*(struct)
->	O
dry_run	int
;	O
}	O
int	O
mu_sieve_set_dry_run	(*(struct),int)->(int)
(	O
mu_sieve_machine_t	*(struct)
mach	*(struct)
,	O
int	O
val	*(char)
)	O
{	O
if	O
(	O
mach	*(struct)
->	O
state	*(int)
!=	O
mu_sieve_state_compiled	int
)	O
return	O
EINVAL	int
;	O
return	O
mach	*(struct)
->	O
dry_run	int
=	O
val	*(char)
;	O
}	O
int	O
sieve_run	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))))->(int)
(	O
mu_sieve_machine_t	*(struct)
mach	*(struct)
)	O
{	O
int	O
rc	int
;	O
mu_sieve_stream_save	(*(struct))->(void)
(	O
mach	*(struct)
)	O
;	O
rc	int
=	O
setjmp	(array(struct(array(long),int,struct(array(long)))))->(int)
(	O
mach	*(struct)
->	O
errbuf	array(struct(array(long),int,struct(array(long))))
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
mach	*(struct)
->	O
action_count	int
=	O
0	int
;	O
mu_i_sv_init_variables	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))))->(void)
(	O
mach	*(struct)
)	O
;	O
for	O
(	O
mach	*(struct)
->	O
pc	long
=	O
1	int
;	O
mach	*(struct)
->	O
prog	*(char)
[	O
mach	*(struct)
->	O
pc	long
]	O
.	O
handler	array(*((*(*(struct(*`,*`,*`,int,int,*`,*`,*`,*`,long,int,int))),*(void),*(void),*(void))->(int)))
;	O
)	O
(	O
*	O
mach	*(struct)
->	O
prog	*(char)
[	O
mach	*(struct)
->	O
pc	long
++	O
]	O
.	O
instr	*((*(struct))->(void))
)	O
(	O
mach	*(struct)
)	O
;	O
if	O
(	O
mach	*(struct)
->	O
action_count	int
==	O
0	int
)	O
mu_sieve_log_action	(*(struct),*(char),*(char))->(void)
(	O
mach	*(struct)
,	O
"IMPLICIT KEEP"	*(char)
,	O
NULL	O
)	O
;	O
if	O
(	O
INSTR_DEBUG	O
(	O
mach	*(struct)
)	O
)	O
mu_i_sv_debug	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))),long,*(char))->(void)
(	O
mach	*(struct)
,	O
mach	*(struct)
->	O
pc	long
,	O
"STOP"	*(char)
)	O
;	O
}	O
mu_sieve_stream_restore	(*(struct))->(void)
(	O
mach	*(struct)
)	O
;	O
return	O
rc	int
;	O
}	O
int	O
mu_sieve_disass	(*(struct))->(int)
(	O
mu_sieve_machine_t	*(struct)
mach	*(struct)
)	O
{	O
int	O
rc	int
;	O
if	O
(	O
mach	*(struct)
->	O
state	*(int)
!=	O
mu_sieve_state_compiled	int
)	O
return	O
EINVAL	int
;	O
mach	*(struct)
->	O
state	*(int)
=	O
mu_sieve_state_disass	int
;	O
rc	int
=	O
sieve_run	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))))->(int)
(	O
mach	*(struct)
)	O
;	O
mach	*(struct)
->	O
state	*(int)
=	O
mu_sieve_state_compiled	int
;	O
return	O
rc	int
;	O
}	O
static	O
int	O
_sieve_action	(*(struct),long,*(void),*(void))->(int)
(	O
mu_observer_t	*(struct)
obs	*(struct)
,	O
size_t	long
type	int
,	O
void	O
*	O
data	*(void)
,	O
void	O
*	O
action_data	*(void)
)	O
{	O
mu_sieve_machine_t	*(struct)
mach	*(struct)
;	O
if	O
(	O
type	int
!=	O
MU_EVT_MESSAGE_ADD	int
)	O
return	O
0	int
;	O
mach	*(struct)
=	O
mu_observer_get_owner	(*(struct))->(*(void))
(	O
obs	*(struct)
)	O
;	O
mach	*(struct)
->	O
msgno	long
++	O
;	O
mu_mailbox_get_message	(*(struct),long,*(*(struct)))->(int)
(	O
mach	*(struct)
->	O
mailbox	*(char)
,	O
mach	*(struct)
->	O
msgno	long
,	O
&	O
mach	*(struct)
->	O
msg	*(struct)
)	O
;	O
sieve_run	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))))->(int)
(	O
mach	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_sieve_mailbox	(*(struct),*(struct))->(int)
(	O
mu_sieve_machine_t	*(struct)
mach	*(struct)
,	O
mu_mailbox_t	*(struct)
mbox	*(struct)
)	O
{	O
int	O
rc	int
;	O
size_t	long
total	long
;	O
mu_observer_t	*(struct)
observer	*(struct)
;	O
mu_observable_t	*(struct)
observable	*(struct)
;	O
if	O
(	O
!	O
mach	*(struct)
||	O
!	O
mbox	*(struct)
)	O
return	O
EINVAL	int
;	O
if	O
(	O
mach	*(struct)
->	O
state	*(int)
!=	O
mu_sieve_state_compiled	int
)	O
return	O
EINVAL	int
;	O
mach	*(struct)
->	O
state	*(int)
=	O
mu_sieve_state_running	int
;	O
mu_observer_create	(*(*(struct)),*(void))->(int)
(	O
&	O
observer	*(struct)
,	O
mach	*(struct)
)	O
;	O
mu_observer_set_action	(*(struct),*((*(struct),long,*(void),*(void))->(int)),*(void))->(int)
(	O
observer	*(struct)
,	O
_sieve_action	(*(struct),long,*(void),*(void))->(int)
,	O
mach	*(struct)
)	O
;	O
mu_mailbox_get_observable	(*(struct),*(*(struct)))->(int)
(	O
mbox	*(struct)
,	O
&	O
observable	*(struct)
)	O
;	O
mu_observable_attach	(*(struct),long,*(struct))->(int)
(	O
observable	*(struct)
,	O
MU_EVT_MESSAGE_ADD	int
,	O
observer	*(struct)
)	O
;	O
mach	*(struct)
->	O
mailbox	*(char)
=	O
mbox	*(struct)
;	O
mach	*(struct)
->	O
msgno	long
=	O
0	int
;	O
rc	int
=	O
mu_mailbox_scan	(*(struct),long,*(long))->(int)
(	O
mbox	*(struct)
,	O
1	int
,	O
&	O
total	long
)	O
;	O
if	O
(	O
rc	int
)	O
mu_sieve_error	(*(struct),*(char))->(void)
(	O
mach	*(struct)
,	O
_	O
(	O
"mu_mailbox_scan: %s"	*(char)
)	O
,	O
mu_strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
mu_observable_detach	(*(struct),*(struct))->(int)
(	O
observable	*(struct)
,	O
observer	*(struct)
)	O
;	O
mu_observer_destroy	(*(*(struct)),*(void))->(void)
(	O
&	O
observer	*(struct)
,	O
mach	*(struct)
)	O
;	O
mach	*(struct)
->	O
state	*(int)
=	O
mu_sieve_state_compiled	int
;	O
mach	*(struct)
->	O
mailbox	*(char)
=	O
NULL	O
;	O
return	O
rc	int
;	O
}	O
int	O
mu_sieve_message	(*(struct),*(struct))->(int)
(	O
mu_sieve_machine_t	*(struct)
mach	*(struct)
,	O
mu_message_t	*(struct)
msg	*(struct)
)	O
{	O
int	O
rc	int
;	O
if	O
(	O
!	O
mach	*(struct)
||	O
!	O
msg	*(struct)
)	O
return	O
EINVAL	int
;	O
if	O
(	O
mach	*(struct)
->	O
state	*(int)
!=	O
mu_sieve_state_compiled	int
)	O
return	O
EINVAL	int
;	O
mach	*(struct)
->	O
state	*(int)
=	O
mu_sieve_state_running	int
;	O
mach	*(struct)
->	O
msgno	long
=	O
1	int
;	O
mach	*(struct)
->	O
msg	*(struct)
=	O
msg	*(struct)
;	O
mach	*(struct)
->	O
mailbox	*(char)
=	O
NULL	O
;	O
rc	int
=	O
sieve_run	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))))->(int)
(	O
mach	*(struct)
)	O
;	O
mach	*(struct)
->	O
state	*(int)
=	O
mu_sieve_state_compiled	int
;	O
mach	*(struct)
->	O
msg	*(struct)
=	O
NULL	O
;	O
return	O
rc	int
;	O
}	O
