static	O
char	O
info_doc	array(char)
[	O
]	O
=	O
N_	O
(	O
"show Mailutils configuration"	*(char)
)	O
;	O
static	O
char	O
info_args_doc	array(char)
[	O
]	O
=	O
N_	O
(	O
"[capa...]"	*(char)
)	O
;	O
static	O
int	O
verbose	int
;	O
static	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
info_options	array(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct(int,*`,long,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,int,*`,int,int,int,long,*`)),*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`)),*(char))->(void)),*(char)))
[	O
]	O
=	O
{	O
{	O
"verbose"	*(char)
,	O
'v'	O
,	O
NULL	O
,	O
MU_OPTION_DEFAULT	int
,	O
N_	O
(	O
"increase output verbosity"	*(char)
)	O
,	O
mu_c_bool	int
,	O
&	O
verbose	int
}	O
,	O
MU_OPTION_END	O
}	O
;	O
int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
mu_action_getopt	(*(int),*(*(*(char))),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char),*(char))->(void)
(	O
&	O
argc	long
,	O
&	O
argv	*(*(char))
,	O
info_options	array(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct(int,*`,long,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,int,*`,int,int,int,long,*`)),*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`)),*(char))->(void)),*(char)))
,	O
info_doc	array(char)
,	O
info_args_doc	array(char)
)	O
;	O
if	O
(	O
argc	long
==	O
0	int
)	O
mu_format_options	(*(struct),int)->(void)
(	O
mu_strout	*(struct)
,	O
verbose	int
)	O
;	O
else	O
{	O
int	O
i	long
,	O
found	int
=	O
0	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
argc	long
;	O
i	long
++	O
)	O
{	O
const	O
struct	O
mu_conf_option	struct(*(char),*(char))
*	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
=	O
mu_check_option	(*(char))->(*(struct(*(char),*(char))))
(	O
argv	*(*(char))
[	O
i	long
]	O
)	O
;	O
if	O
(	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
)	O
{	O
found	int
++	O
;	O
mu_format_conf_option	(*(struct),*(struct(*(char),*(char))),int)->(void)
(	O
mu_strout	*(struct)
,	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
,	O
verbose	int
)	O
;	O
}	O
}	O
return	O
found	int
==	O
argc	long
?	O
0	int
:	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
