const	O
typeinfo_t	O
iconv_ostream_typeinfo	O
=	O
{	O
"iconv_ostream"	*(char)
}	O
;	O
static	O
const	O
typeinfo_t	O
*	O
const	O
iconv_ostream_superclasses	array(*(int))
[	O
]	O
=	O
{	O
iconv_ostream_SUPERCLASSES	O
}	O
;	O
static	O
void	O
iconv_ostream__write_mem	(int,*(void),int)->(void)
(	O
iconv_ostream_t	O
stream	int
,	O
const	O
void	O
*	O
data	*(void)
,	O
size_t	O
len	int
)	O
{	O
if	O
(	O
len	int
>	O
0	int
)	O
{	O
char	O
inbuffer	array(char)
[	O
BUFFERSIZE	int
]	O
;	O
size_t	O
inbufcount	O
;	O
inbufcount	O
=	O
stream	int
->	O
buflen	O
;	O
if	O
(	O
inbufcount	O
>	O
0	int
)	O
memcpy	O
(	O
inbuffer	array(char)
,	O
stream	int
->	O
buf	O
,	O
inbufcount	O
)	O
;	O
for	O
(	O
;	O
;	O
)	O
{	O
{	O
size_t	O
n	O
=	O
(	O
len	int
<=	O
BUFFERSIZE	int
-	O
inbufcount	O
?	O
len	int
:	O
BUFFERSIZE	int
-	O
inbufcount	O
)	O
;	O
if	O
(	O
n	O
>	O
0	int
)	O
{	O
memcpy	O
(	O
inbuffer	array(char)
+	O
inbufcount	O
,	O
data	*(void)
,	O
n	O
)	O
;	O
data	*(void)
=	O
(	O
char	O
*	O
)	O
data	*(void)
+	O
n	O
;	O
inbufcount	O
+=	O
n	O
;	O
len	int
-=	O
n	O
;	O
}	O
}	O
{	O
char	O
outbuffer	array(char)
[	O
8	int
*	O
BUFFERSIZE	int
]	O
;	O
const	O
char	O
*	O
inptr	*(char)
=	O
inbuffer	array(char)
;	O
size_t	O
insize	O
=	O
inbufcount	O
;	O
char	O
*	O
outptr	*(char)
=	O
outbuffer	array(char)
;	O
size_t	O
outsize	O
=	O
sizeof	O
(	O
outbuffer	array(char)
)	O
;	O
size_t	O
res	O
=	O
iconv	O
(	O
stream	int
->	O
cd	O
,	O
(	O
ICONV_CONST	O
char	O
*	O
*	O
)	O
&	O
inptr	*(char)
,	O
&	O
insize	O
,	O
&	O
outptr	*(char)
,	O
&	O
outsize	O
)	O
;	O
if	O
(	O
res	O
>	O
0	int
)	O
{	O
errno	O
=	O
EILSEQ	O
;	O
res	O
=	O
-	O
1	int
;	O
}	O
if	O
(	O
res	O
==	O
(	O
size_t	O
)	O
(	O
-	O
1	int
)	O
&&	O
errno	O
!=	O
EINVAL	O
)	O
error	()->(int)
(	O
EXIT_FAILURE	O
,	O
0	int
,	O
_	O
(	O
"%s: cannot convert from %s to %s"	*(char)
)	O
,	O
"iconv_ostream"	*(char)
,	O
stream	int
->	O
from_encoding	*(char)
,	O
stream	int
->	O
to_encoding	*(char)
)	O
;	O
if	O
(	O
sizeof	O
(	O
outbuffer	array(char)
)	O
-	O
outsize	O
>	O
0	int
)	O
ostream_write_mem	()->(int)
(	O
stream	int
->	O
destination	int
,	O
outbuffer	array(char)
,	O
sizeof	O
(	O
outbuffer	array(char)
)	O
-	O
outsize	O
)	O
;	O
if	O
(	O
insize	O
>	O
BUFSIZE	O
)	O
error	()->(int)
(	O
EXIT_FAILURE	O
,	O
0	int
,	O
_	O
(	O
"%s: shift sequence too long"	*(char)
)	O
,	O
"iconv_ostream"	*(char)
)	O
;	O
if	O
(	O
len	int
==	O
0	int
)	O
{	O
if	O
(	O
insize	O
>	O
0	int
)	O
memcpy	O
(	O
stream	int
->	O
buf	O
,	O
inptr	*(char)
,	O
insize	O
)	O
;	O
stream	int
->	O
buflen	O
=	O
insize	O
;	O
break	O
;	O
}	O
if	O
(	O
insize	O
>	O
0	int
)	O
memmove	O
(	O
inbuffer	array(char)
,	O
inptr	*(char)
,	O
insize	O
)	O
;	O
inbufcount	O
=	O
insize	O
;	O
}	O
}	O
}	O
}	O
static	O
void	O
iconv_ostream__flush	(int,int)->(void)
(	O
iconv_ostream_t	O
stream	int
,	O
ostream_flush_scope_t	O
scope	int
)	O
{	O
if	O
(	O
scope	int
!=	O
FLUSH_THIS_STREAM	O
)	O
ostream_flush	()->(int)
(	O
stream	int
->	O
destination	int
,	O
scope	int
)	O
;	O
}	O
static	O
void	O
iconv_ostream__free	(int)->(void)
(	O
iconv_ostream_t	O
stream	int
)	O
{	O
{	O
char	O
outbuffer	array(char)
[	O
2048	int
]	O
;	O
char	O
*	O
outptr	*(char)
=	O
outbuffer	array(char)
;	O
size_t	O
outsize	O
=	O
sizeof	O
(	O
outbuffer	array(char)
)	O
;	O
size_t	O
res	O
=	O
iconv	O
(	O
stream	int
->	O
cd	O
,	O
NULL	O
,	O
NULL	O
,	O
&	O
outptr	*(char)
,	O
&	O
outsize	O
)	O
;	O
if	O
(	O
res	O
==	O
(	O
size_t	O
)	O
(	O
-	O
1	int
)	O
)	O
error	()->(int)
(	O
EXIT_FAILURE	O
,	O
0	int
,	O
_	O
(	O
"%s: cannot convert from %s to %s"	*(char)
)	O
,	O
"iconv_ostream"	*(char)
,	O
stream	int
->	O
from_encoding	*(char)
,	O
stream	int
->	O
to_encoding	*(char)
)	O
;	O
if	O
(	O
sizeof	O
(	O
outbuffer	array(char)
)	O
-	O
outsize	O
>	O
0	int
)	O
ostream_write_mem	()->(int)
(	O
stream	int
->	O
destination	int
,	O
outbuffer	array(char)
,	O
sizeof	O
(	O
outbuffer	array(char)
)	O
-	O
outsize	O
)	O
;	O
}	O
iconv_close	()->(int)
(	O
stream	int
->	O
cd	O
)	O
;	O
free	()->(int)
(	O
stream	int
->	O
from_encoding	*(char)
)	O
;	O
free	()->(int)
(	O
stream	int
->	O
to_encoding	*(char)
)	O
;	O
free	()->(int)
(	O
stream	int
)	O
;	O
}	O
iconv_ostream_t	O
iconv_ostream_create	(*(char),*(char),int)->(int)
(	O
const	O
char	O
*	O
from_encoding	*(char)
,	O
const	O
char	O
*	O
to_encoding	*(char)
,	O
ostream_t	O
destination	int
)	O
{	O
iconv_ostream_t	O
stream	int
=	O
XMALLOC	O
(	O
struct	O
iconv_ostream_representation	O
)	O
;	O
stream	int
->	O
base	O
.	O
vtable	*(struct)
=	O
&	O
iconv_ostream_vtable	O
;	O
stream	int
->	O
destination	int
=	O
destination	int
;	O
stream	int
->	O
from_encoding	*(char)
=	O
xstrdup	O
(	O
from_encoding	*(char)
)	O
;	O
stream	int
->	O
to_encoding	*(char)
=	O
xstrdup	O
(	O
to_encoding	*(char)
)	O
;	O
stream	int
->	O
cd	O
=	O
iconv_open	()->(int)
(	O
to_encoding	*(char)
,	O
from_encoding	*(char)
)	O
;	O
if	O
(	O
stream	int
->	O
cd	O
==	O
(	O
iconv_t	O
)	O
(	O
-	O
1	int
)	O
)	O
{	O
if	O
(	O
iconv_open	()->(int)
(	O
"UTF-8"	*(char)
,	O
from_encoding	*(char)
)	O
==	O
(	O
iconv_t	O
)	O
(	O
-	O
1	int
)	O
)	O
error	()->(int)
(	O
EXIT_FAILURE	O
,	O
0	int
,	O
_	O
(	O
"%s does not support conversion from %s"	*(char)
)	O
,	O
"iconv"	*(char)
,	O
from_encoding	*(char)
)	O
;	O
else	O
if	O
(	O
iconv_open	()->(int)
(	O
to_encoding	*(char)
,	O
"UTF-8"	*(char)
)	O
==	O
(	O
iconv_t	O
)	O
(	O
-	O
1	int
)	O
)	O
error	()->(int)
(	O
EXIT_FAILURE	O
,	O
0	int
,	O
_	O
(	O
"%s does not support conversion to %s"	*(char)
)	O
,	O
"iconv"	*(char)
,	O
to_encoding	*(char)
)	O
;	O
else	O
error	()->(int)
(	O
EXIT_FAILURE	O
,	O
0	int
,	O
_	O
(	O
"%s does not support conversion from %s to %s"	*(char)
)	O
,	O
"iconv"	*(char)
,	O
from_encoding	*(char)
,	O
to_encoding	*(char)
)	O
;	O
}	O
stream	int
->	O
buflen	O
=	O
0	int
;	O
return	O
stream	int
;	O
}	O
const	O
struct	O
iconv_ostream_implementation	O
iconv_ostream_vtable	O
=	O
{	O
iconv_ostream_superclasses	array(*(int))
,	O
sizeof	O
(	O
iconv_ostream_superclasses	array(*(int))
)	O
/	O
sizeof	O
(	O
iconv_ostream_superclasses	array(*(int))
[	O
0	int
]	O
)	O
,	O
sizeof	O
(	O
struct	O
iconv_ostream_representation	O
)	O
,	O
iconv_ostream__write_mem	(int,*(void),int)->(void)
,	O
iconv_ostream__flush	(int,int)->(void)
,	O
iconv_ostream__free	(int)->(void)
,	O
}	O
;	O
void	O
iconv_ostream_write_mem	(int,*(void),int)->(void)
(	O
iconv_ostream_t	O
first_arg	int
,	O
const	O
void	O
*	O
data	*(void)
,	O
size_t	O
len	int
)	O
{	O
const	O
struct	O
iconv_ostream_implementation	O
*	O
vtable	*(struct)
=	O
(	O
(	O
struct	O
iconv_ostream_representation_header	O
*	O
)	O
(	O
struct	O
iconv_ostream_representation	O
*	O
)	O
first_arg	int
)	O
->	O
vtable	*(struct)
;	O
vtable	*(struct)
->	O
write_mem	O
(	O
first_arg	int
,	O
data	*(void)
,	O
len	int
)	O
;	O
}	O
void	O
iconv_ostream_flush	(int,int)->(void)
(	O
iconv_ostream_t	O
first_arg	int
,	O
ostream_flush_scope_t	O
scope	int
)	O
{	O
const	O
struct	O
iconv_ostream_implementation	O
*	O
vtable	*(struct)
=	O
(	O
(	O
struct	O
iconv_ostream_representation_header	O
*	O
)	O
(	O
struct	O
iconv_ostream_representation	O
*	O
)	O
first_arg	int
)	O
->	O
vtable	*(struct)
;	O
vtable	*(struct)
->	O
flush	O
(	O
first_arg	int
,	O
scope	int
)	O
;	O
}	O
void	O
iconv_ostream_free	(int)->(void)
(	O
iconv_ostream_t	O
first_arg	int
)	O
{	O
const	O
struct	O
iconv_ostream_implementation	O
*	O
vtable	*(struct)
=	O
(	O
(	O
struct	O
iconv_ostream_representation_header	O
*	O
)	O
(	O
struct	O
iconv_ostream_representation	O
*	O
)	O
first_arg	int
)	O
->	O
vtable	*(struct)
;	O
vtable	*(struct)
->	O
free	()->(int)
(	O
first_arg	int
)	O
;	O
}	O
