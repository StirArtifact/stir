static	O
bool	bool
rec_writer_putc	(*(struct),char)->(bool)
(	O
rec_writer_t	*(struct)
writer	*(struct)
,	O
char	O
c	int
)	O
;	O
static	O
bool	bool
rec_writer_puts	(*(struct),*(char))->(bool)
(	O
rec_writer_t	*(struct)
writer	*(struct)
,	O
const	O
char	O
*	O
s	*(char)
)	O
;	O
struct	O
rec_writer_s	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),*(struct),bool,int,bool,bool,enum(int,int,int,int))
{	O
FILE	struct
*	O
file_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
rec_buf_t	*(struct)
buf_out	*(struct)
;	O
bool	bool
eof	bool
;	O
int	O
line	int
;	O
bool	bool
collapse_p	bool
;	O
bool	bool
skip_comments_p	bool
;	O
enum	O
rec_writer_mode_e	enum(int,int,int,int)
mode	enum(int,int,int,int)
;	O
}	O
;	O
static	O
void	O
rec_writer_new_common	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct),bool,int,bool,bool,enum(int,int,int,int))))->(void)
(	O
rec_writer_t	*(struct)
writer	*(struct)
)	O
{	O
writer	*(struct)
->	O
file_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
NULL	O
;	O
writer	*(struct)
->	O
buf_out	*(struct)
=	O
NULL	O
;	O
writer	*(struct)
->	O
line	int
=	O
1	int
;	O
writer	*(struct)
->	O
eof	bool
=	O
false	int
;	O
writer	*(struct)
->	O
collapse_p	bool
=	O
false	int
;	O
writer	*(struct)
->	O
skip_comments_p	bool
=	O
false	int
;	O
writer	*(struct)
->	O
mode	enum(int,int,int,int)
=	O
REC_WRITER_NORMAL	int
;	O
}	O
rec_writer_t	*(struct)
rec_writer_new	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(struct))
(	O
FILE	struct
*	O
file_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
rec_writer_t	*(struct)
new	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct),bool,int,bool,bool,enum(int,int,int,int)))
;	O
new	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct),bool,int,bool,bool,enum(int,int,int,int)))
=	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
rec_writer_s	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),*(struct),bool,int,bool,bool,enum(int,int,int,int))
)	O
)	O
;	O
if	O
(	O
new	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct),bool,int,bool,bool,enum(int,int,int,int)))
)	O
{	O
rec_writer_new_common	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct),bool,int,bool,bool,enum(int,int,int,int))))->(void)
(	O
new	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct),bool,int,bool,bool,enum(int,int,int,int)))
)	O
;	O
new	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct),bool,int,bool,bool,enum(int,int,int,int)))
->	O
file_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
file_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
}	O
return	O
new	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct),bool,int,bool,bool,enum(int,int,int,int)))
;	O
}	O
rec_writer_t	*(struct)
rec_writer_new_str	(*(*(char)),*(long))->(*(struct))
(	O
char	O
*	O
*	O
str	*(char)
,	O
size_t	long
*	O
str_size	*(long)
)	O
{	O
rec_writer_t	*(struct)
new	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct),bool,int,bool,bool,enum(int,int,int,int)))
;	O
new	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct),bool,int,bool,bool,enum(int,int,int,int)))
=	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
rec_writer_s	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),*(struct),bool,int,bool,bool,enum(int,int,int,int))
)	O
)	O
;	O
if	O
(	O
new	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct),bool,int,bool,bool,enum(int,int,int,int)))
)	O
{	O
rec_writer_new_common	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct),bool,int,bool,bool,enum(int,int,int,int))))->(void)
(	O
new	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct),bool,int,bool,bool,enum(int,int,int,int)))
)	O
;	O
new	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct),bool,int,bool,bool,enum(int,int,int,int)))
->	O
buf_out	*(struct)
=	O
rec_buf_new	(*(*(char)),*(long))->(*(struct))
(	O
str	*(char)
,	O
str_size	*(long)
)	O
;	O
}	O
return	O
new	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct),bool,int,bool,bool,enum(int,int,int,int)))
;	O
}	O
void	O
rec_writer_destroy	(*(struct))->(void)
(	O
rec_writer_t	*(struct)
writer	*(struct)
)	O
{	O
if	O
(	O
writer	*(struct)
)	O
{	O
if	O
(	O
writer	*(struct)
->	O
file_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
writer	*(struct)
->	O
file_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
if	O
(	O
writer	*(struct)
->	O
buf_out	*(struct)
)	O
{	O
rec_buf_close	(*(struct))->(void)
(	O
writer	*(struct)
->	O
buf_out	*(struct)
)	O
;	O
}	O
free	(*(void))->(void)
(	O
writer	*(struct)
)	O
;	O
}	O
}	O
bool	bool
rec_write_comment	(*(struct),*(char))->(bool)
(	O
rec_writer_t	*(struct)
writer	*(struct)
,	O
rec_comment_t	*(char)
comment	*(char)
)	O
{	O
char	O
*	O
line	int
;	O
char	O
*	O
str	*(char)
;	O
char	O
*	O
orig_str	*(char)
;	O
size_t	long
i	long
;	O
if	O
(	O
writer	*(struct)
->	O
mode	enum(int,int,int,int)
==	O
REC_WRITER_SEXP	int
)	O
{	O
if	O
(	O
!	O
rec_writer_puts	(*(struct),*(char))->(bool)
(	O
writer	*(struct)
,	O
"(comment "	*(char)
)	O
)	O
{	O
return	O
false	int
;	O
}	O
if	O
(	O
!	O
rec_writer_putc	(*(struct),char)->(bool)
(	O
writer	*(struct)
,	O
'"'	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
str	*(char)
=	O
rec_comment_text	(*(char))->(*(char))
(	O
comment	*(char)
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
strlen	(*(char))->(long)
(	O
str	*(char)
)	O
;	O
i	long
++	O
)	O
{	O
if	O
(	O
str	*(char)
[	O
i	long
]	O
==	O
'\n'	O
)	O
{	O
if	O
(	O
!	O
rec_writer_puts	(*(struct),*(char))->(bool)
(	O
writer	*(struct)
,	O
"\\n"	*(char)
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
else	O
{	O
if	O
(	O
!	O
rec_writer_putc	(*(struct),char)->(bool)
(	O
writer	*(struct)
,	O
str	*(char)
[	O
i	long
]	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
}	O
if	O
(	O
!	O
rec_writer_puts	(*(struct),*(char))->(bool)
(	O
writer	*(struct)
,	O
"\")"	*(char)
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
else	O
{	O
bool	bool
first	bool
=	O
true	int
;	O
str	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
rec_comment_text	(*(char))->(*(char))
(	O
comment	*(char)
)	O
)	O
;	O
orig_str	*(char)
=	O
str	*(char)
;	O
line	int
=	O
strsep	(*(*(char)),*(char))->(*(char))
(	O
&	O
str	*(char)
,	O
"\n"	*(char)
)	O
;	O
do	O
{	O
if	O
(	O
!	O
first	bool
)	O
{	O
if	O
(	O
!	O
rec_writer_putc	(*(struct),char)->(bool)
(	O
writer	*(struct)
,	O
'\n'	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
if	O
(	O
!	O
rec_writer_putc	(*(struct),char)->(bool)
(	O
writer	*(struct)
,	O
'#'	O
)	O
||	O
!	O
rec_writer_puts	(*(struct),*(char))->(bool)
(	O
writer	*(struct)
,	O
line	int
)	O
)	O
{	O
return	O
false	int
;	O
}	O
first	bool
=	O
false	int
;	O
}	O
while	O
(	O
(	O
line	int
=	O
strsep	(*(*(char)),*(char))->(*(char))
(	O
&	O
str	*(char)
,	O
"\n"	*(char)
)	O
)	O
)	O
;	O
free	(*(void))->(void)
(	O
orig_str	*(char)
)	O
;	O
}	O
return	O
true	int
;	O
}	O
bool	bool
rec_write_field	(*(struct),*(struct))->(bool)
(	O
rec_writer_t	*(struct)
writer	*(struct)
,	O
rec_field_t	*(struct)
field	*(struct)
)	O
{	O
size_t	long
pos	long
;	O
const	O
char	O
*	O
fname	*(char)
;	O
const	O
char	O
*	O
fvalue	*(char)
;	O
enum	O
rec_writer_mode_e	enum(int,int,int,int)
mode	enum(int,int,int,int)
=	O
writer	*(struct)
->	O
mode	enum(int,int,int,int)
;	O
if	O
(	O
mode	enum(int,int,int,int)
==	O
REC_WRITER_SEXP	int
)	O
{	O
if	O
(	O
!	O
rec_writer_puts	(*(struct),*(char))->(bool)
(	O
writer	*(struct)
,	O
"(field "	*(char)
)	O
)	O
{	O
return	O
false	int
;	O
}	O
if	O
(	O
!	O
rec_writer_puts	(*(struct),*(char))->(bool)
(	O
writer	*(struct)
,	O
rec_field_char_location_str	(*(struct))->(*(char))
(	O
field	*(struct)
)	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
if	O
(	O
!	O
rec_writer_putc	(*(struct),char)->(bool)
(	O
writer	*(struct)
,	O
' '	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
if	O
(	O
(	O
mode	enum(int,int,int,int)
!=	O
REC_WRITER_VALUES	int
)	O
&&	O
(	O
mode	enum(int,int,int,int)
!=	O
REC_WRITER_VALUES_ROW	int
)	O
)	O
{	O
fname	*(char)
=	O
rec_field_name	(*(struct))->(*(char))
(	O
field	*(struct)
)	O
;	O
if	O
(	O
!	O
rec_write_field_name	(*(struct),*(char))->(bool)
(	O
writer	*(struct)
,	O
fname	*(char)
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
if	O
(	O
mode	enum(int,int,int,int)
==	O
REC_WRITER_SEXP	int
)	O
{	O
if	O
(	O
!	O
rec_writer_putc	(*(struct),char)->(bool)
(	O
writer	*(struct)
,	O
' '	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
if	O
(	O
!	O
rec_writer_putc	(*(struct),char)->(bool)
(	O
writer	*(struct)
,	O
'"'	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
fvalue	*(char)
=	O
rec_field_value	(*(struct))->(*(char))
(	O
field	*(struct)
)	O
;	O
if	O
(	O
(	O
strlen	(*(char))->(long)
(	O
fvalue	*(char)
)	O
>	O
0	int
)	O
&&	O
(	O
mode	enum(int,int,int,int)
==	O
REC_WRITER_NORMAL	int
)	O
)	O
{	O
if	O
(	O
!	O
rec_writer_putc	(*(struct),char)->(bool)
(	O
writer	*(struct)
,	O
' '	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
for	O
(	O
pos	long
=	O
0	int
;	O
pos	long
<	O
strlen	(*(char))->(long)
(	O
fvalue	*(char)
)	O
;	O
pos	long
++	O
)	O
{	O
if	O
(	O
fvalue	*(char)
[	O
pos	long
]	O
==	O
'\n'	O
)	O
{	O
if	O
(	O
mode	enum(int,int,int,int)
==	O
REC_WRITER_SEXP	int
)	O
{	O
if	O
(	O
!	O
rec_writer_puts	(*(struct),*(char))->(bool)
(	O
writer	*(struct)
,	O
"\\n"	*(char)
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
else	O
if	O
(	O
mode	enum(int,int,int,int)
==	O
REC_WRITER_NORMAL	int
)	O
{	O
if	O
(	O
!	O
rec_writer_puts	(*(struct),*(char))->(bool)
(	O
writer	*(struct)
,	O
"\n+ "	*(char)
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
else	O
{	O
if	O
(	O
!	O
rec_writer_putc	(*(struct),char)->(bool)
(	O
writer	*(struct)
,	O
'\n'	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
}	O
else	O
if	O
(	O
(	O
(	O
fvalue	*(char)
[	O
pos	long
]	O
==	O
'"'	O
)	O
||	O
(	O
fvalue	*(char)
[	O
pos	long
]	O
==	O
'\\'	O
)	O
)	O
&&	O
(	O
mode	enum(int,int,int,int)
==	O
REC_WRITER_SEXP	int
)	O
)	O
{	O
if	O
(	O
(	O
!	O
rec_writer_putc	(*(struct),char)->(bool)
(	O
writer	*(struct)
,	O
'\\'	O
)	O
)	O
||	O
(	O
!	O
rec_writer_putc	(*(struct),char)->(bool)
(	O
writer	*(struct)
,	O
fvalue	*(char)
[	O
pos	long
]	O
)	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
else	O
{	O
if	O
(	O
!	O
rec_writer_putc	(*(struct),char)->(bool)
(	O
writer	*(struct)
,	O
fvalue	*(char)
[	O
pos	long
]	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
}	O
if	O
(	O
mode	enum(int,int,int,int)
==	O
REC_WRITER_SEXP	int
)	O
{	O
if	O
(	O
!	O
rec_writer_putc	(*(struct),char)->(bool)
(	O
writer	*(struct)
,	O
'"'	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
if	O
(	O
mode	enum(int,int,int,int)
==	O
REC_WRITER_SEXP	int
)	O
{	O
if	O
(	O
!	O
rec_writer_puts	(*(struct),*(char))->(bool)
(	O
writer	*(struct)
,	O
")"	*(char)
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
return	O
true	int
;	O
}	O
bool	bool
rec_write_field_name	(*(struct),*(char))->(bool)
(	O
rec_writer_t	*(struct)
writer	*(struct)
,	O
const	O
char	O
*	O
field_name	*(char)
)	O
{	O
enum	O
rec_writer_mode_e	enum(int,int,int,int)
mode	enum(int,int,int,int)
=	O
writer	*(struct)
->	O
mode	enum(int,int,int,int)
;	O
if	O
(	O
mode	enum(int,int,int,int)
==	O
REC_WRITER_SEXP	int
)	O
{	O
if	O
(	O
!	O
rec_writer_putc	(*(struct),char)->(bool)
(	O
writer	*(struct)
,	O
'"'	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
if	O
(	O
!	O
rec_writer_puts	(*(struct),*(char))->(bool)
(	O
writer	*(struct)
,	O
field_name	*(char)
)	O
)	O
{	O
return	O
false	int
;	O
}	O
if	O
(	O
mode	enum(int,int,int,int)
==	O
REC_WRITER_SEXP	int
)	O
{	O
if	O
(	O
!	O
rec_writer_putc	(*(struct),char)->(bool)
(	O
writer	*(struct)
,	O
'"'	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
else	O
{	O
if	O
(	O
!	O
rec_writer_putc	(*(struct),char)->(bool)
(	O
writer	*(struct)
,	O
':'	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
return	O
true	int
;	O
}	O
bool	bool
rec_write_record	(*(struct),*(struct))->(bool)
(	O
rec_writer_t	*(struct)
writer	*(struct)
,	O
rec_record_t	*(struct)
record	*(struct)
)	O
{	O
bool	bool
ret	bool
;	O
rec_mset_iterator_t	struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long))
iter	struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long))
;	O
rec_mset_elem_t	*(struct)
elem	*(struct)
;	O
char	O
*	O
data	*(void)
;	O
size_t	long
num_field	long
,	O
num_elem	long
,	O
num_fields	long
,	O
num_elems	long
;	O
enum	O
rec_writer_mode_e	enum(int,int,int,int)
mode	enum(int,int,int,int)
=	O
writer	*(struct)
->	O
mode	enum(int,int,int,int)
;	O
ret	bool
=	O
true	int
;	O
if	O
(	O
mode	enum(int,int,int,int)
==	O
REC_WRITER_SEXP	int
)	O
{	O
if	O
(	O
!	O
rec_writer_puts	(*(struct),*(char))->(bool)
(	O
writer	*(struct)
,	O
"(record "	*(char)
)	O
)	O
return	O
false	int
;	O
if	O
(	O
!	O
rec_writer_puts	(*(struct),*(char))->(bool)
(	O
writer	*(struct)
,	O
rec_record_char_location_str	(*(struct))->(*(char))
(	O
record	*(struct)
)	O
)	O
)	O
return	O
false	int
;	O
if	O
(	O
!	O
rec_writer_puts	(*(struct),*(char))->(bool)
(	O
writer	*(struct)
,	O
" (\n"	*(char)
)	O
)	O
return	O
false	int
;	O
}	O
num_elems	long
=	O
rec_record_num_elems	(*(struct))->(long)
(	O
record	*(struct)
)	O
;	O
num_fields	long
=	O
rec_record_num_fields	(*(struct))->(long)
(	O
record	*(struct)
)	O
;	O
num_field	long
=	O
0	int
;	O
num_elem	long
=	O
0	int
;	O
iter	struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long))
=	O
rec_mset_iterator	(*(struct))->(struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long)))
(	O
rec_record_mset	(*(struct))->(*(struct))
(	O
record	*(struct)
)	O
)	O
;	O
while	O
(	O
rec_mset_iterator_next	(*(struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long))),int,*(*(void)),*(*(struct)))->(bool)
(	O
&	O
iter	struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long))
,	O
MSET_ANY	int
,	O
(	O
const	O
void	O
*	O
*	O
)	O
&	O
data	*(void)
,	O
&	O
elem	*(struct)
)	O
)	O
{	O
if	O
(	O
rec_mset_elem_type	(*(struct))->(int)
(	O
elem	*(struct)
)	O
==	O
MSET_FIELD	int
)	O
{	O
rec_field_t	*(struct)
field	*(struct)
=	O
(	O
rec_field_t	*(struct)
)	O
data	*(void)
;	O
if	O
(	O
!	O
rec_write_field	(*(struct),*(struct))->(bool)
(	O
writer	*(struct)
,	O
field	*(struct)
)	O
)	O
{	O
ret	bool
=	O
false	int
;	O
break	O
;	O
}	O
if	O
(	O
(	O
mode	enum(int,int,int,int)
==	O
REC_WRITER_VALUES_ROW	int
)	O
&&	O
(	O
num_field	long
!=	O
(	O
num_fields	long
-	O
1	int
)	O
)	O
)	O
{	O
if	O
(	O
mode	enum(int,int,int,int)
==	O
REC_WRITER_VALUES_ROW	int
)	O
{	O
if	O
(	O
!	O
rec_writer_putc	(*(struct),char)->(bool)
(	O
writer	*(struct)
,	O
' '	O
)	O
)	O
return	O
false	int
;	O
}	O
}	O
else	O
if	O
(	O
(	O
writer	*(struct)
->	O
skip_comments_p	bool
&&	O
(	O
num_field	long
!=	O
(	O
num_fields	long
-	O
1	int
)	O
)	O
)	O
||	O
(	O
!	O
writer	*(struct)
->	O
skip_comments_p	bool
&&	O
(	O
num_elem	long
!=	O
(	O
num_elems	long
-	O
1	int
)	O
)	O
)	O
)	O
{	O
if	O
(	O
!	O
rec_writer_putc	(*(struct),char)->(bool)
(	O
writer	*(struct)
,	O
'\n'	O
)	O
)	O
return	O
false	int
;	O
}	O
num_field	long
++	O
;	O
}	O
else	O
if	O
(	O
!	O
writer	*(struct)
->	O
skip_comments_p	bool
)	O
{	O
rec_comment_t	*(char)
comment	*(char)
=	O
(	O
rec_comment_t	*(char)
)	O
data	*(void)
;	O
if	O
(	O
(	O
mode	enum(int,int,int,int)
!=	O
REC_WRITER_VALUES	int
)	O
&&	O
(	O
mode	enum(int,int,int,int)
!=	O
REC_WRITER_VALUES_ROW	int
)	O
)	O
{	O
if	O
(	O
!	O
rec_write_comment	(*(struct),*(char))->(bool)
(	O
writer	*(struct)
,	O
comment	*(char)
)	O
)	O
{	O
ret	bool
=	O
false	int
;	O
break	O
;	O
}	O
if	O
(	O
num_elem	long
!=	O
(	O
num_elems	long
-	O
1	int
)	O
)	O
{	O
if	O
(	O
!	O
rec_writer_putc	(*(struct),char)->(bool)
(	O
writer	*(struct)
,	O
'\n'	O
)	O
)	O
return	O
false	int
;	O
}	O
}	O
}	O
num_elem	long
++	O
;	O
}	O
rec_mset_iterator_free	(*(struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long))))->(void)
(	O
&	O
iter	struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long))
)	O
;	O
if	O
(	O
mode	enum(int,int,int,int)
==	O
REC_WRITER_SEXP	int
)	O
{	O
if	O
(	O
!	O
rec_writer_puts	(*(struct),*(char))->(bool)
(	O
writer	*(struct)
,	O
"))"	*(char)
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
return	O
ret	bool
;	O
}	O
bool	bool
rec_write_rset	(*(struct),*(struct))->(bool)
(	O
rec_writer_t	*(struct)
writer	*(struct)
,	O
rec_rset_t	*(struct)
rset	*(struct)
)	O
{	O
bool	bool
ret	bool
;	O
rec_record_t	*(struct)
descriptor	*(struct)
;	O
bool	bool
wrote_descriptor	bool
;	O
size_t	long
position	long
;	O
size_t	long
descriptor_pos	long
;	O
rec_mset_iterator_t	struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long))
iter	struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long))
;	O
rec_mset_elem_t	*(struct)
elem	*(struct)
;	O
void	O
*	O
data	*(void)
;	O
enum	O
rec_writer_mode_e	enum(int,int,int,int)
mode	enum(int,int,int,int)
=	O
writer	*(struct)
->	O
mode	enum(int,int,int,int)
;	O
ret	bool
=	O
true	int
;	O
wrote_descriptor	bool
=	O
false	int
;	O
position	long
=	O
0	int
;	O
descriptor_pos	long
=	O
rec_rset_descriptor_pos	(*(struct))->(long)
(	O
rset	*(struct)
)	O
;	O
descriptor	*(struct)
=	O
rec_rset_descriptor	(*(struct))->(*(struct))
(	O
rset	*(struct)
)	O
;	O
if	O
(	O
(	O
rec_rset_num_elems	(*(struct))->(long)
(	O
rset	*(struct)
)	O
==	O
0	int
)	O
&&	O
descriptor	*(struct)
)	O
{	O
rec_write_record	(*(struct),*(struct))->(bool)
(	O
writer	*(struct)
,	O
rec_rset_descriptor	(*(struct))->(*(struct))
(	O
rset	*(struct)
)	O
)	O
;	O
rec_writer_putc	(*(struct),char)->(bool)
(	O
writer	*(struct)
,	O
'\n'	O
)	O
;	O
return	O
true	int
;	O
}	O
iter	struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long))
=	O
rec_mset_iterator	(*(struct))->(struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long)))
(	O
rec_rset_mset	(*(struct))->(*(struct))
(	O
rset	*(struct)
)	O
)	O
;	O
while	O
(	O
rec_mset_iterator_next	(*(struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long))),int,*(*(void)),*(*(struct)))->(bool)
(	O
&	O
iter	struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long))
,	O
MSET_ANY	int
,	O
(	O
const	O
void	O
*	O
*	O
)	O
&	O
data	*(void)
,	O
&	O
elem	*(struct)
)	O
)	O
{	O
if	O
(	O
position	long
!=	O
0	int
)	O
{	O
if	O
(	O
!	O
rec_writer_putc	(*(struct),char)->(bool)
(	O
writer	*(struct)
,	O
'\n'	O
)	O
)	O
{	O
ret	bool
=	O
false	int
;	O
}	O
}	O
if	O
(	O
position	long
==	O
descriptor_pos	long
)	O
{	O
if	O
(	O
descriptor	*(struct)
&&	O
(	O
!	O
(	O
wrote_descriptor	bool
=	O
rec_write_record	(*(struct),*(struct))->(bool)
(	O
writer	*(struct)
,	O
rec_rset_descriptor	(*(struct))->(*(struct))
(	O
rset	*(struct)
)	O
)	O
)	O
)	O
)	O
{	O
ret	bool
=	O
false	int
;	O
}	O
else	O
{	O
if	O
(	O
wrote_descriptor	bool
)	O
{	O
if	O
(	O
!	O
rec_writer_puts	(*(struct),*(char))->(bool)
(	O
writer	*(struct)
,	O
"\n\n"	*(char)
)	O
)	O
{	O
ret	bool
=	O
false	int
;	O
}	O
}	O
}	O
}	O
if	O
(	O
rec_mset_elem_type	(*(struct))->(int)
(	O
elem	*(struct)
)	O
==	O
MSET_RECORD	int
)	O
{	O
ret	bool
=	O
rec_write_record	(*(struct),*(struct))->(bool)
(	O
writer	*(struct)
,	O
(	O
rec_record_t	*(struct)
)	O
data	*(void)
)	O
;	O
}	O
else	O
if	O
(	O
!	O
writer	*(struct)
->	O
skip_comments_p	bool
)	O
{	O
ret	bool
=	O
rec_write_comment	(*(struct),*(char))->(bool)
(	O
writer	*(struct)
,	O
(	O
rec_comment_t	*(char)
)	O
data	*(void)
)	O
;	O
}	O
if	O
(	O
!	O
writer	*(struct)
->	O
collapse_p	bool
||	O
(	O
position	long
==	O
(	O
rec_rset_num_elems	(*(struct))->(long)
(	O
rset	*(struct)
)	O
-	O
1	int
)	O
)	O
)	O
{	O
if	O
(	O
!	O
rec_writer_putc	(*(struct),char)->(bool)
(	O
writer	*(struct)
,	O
'\n'	O
)	O
)	O
{	O
ret	bool
=	O
false	int
;	O
}	O
}	O
if	O
(	O
!	O
ret	bool
)	O
{	O
break	O
;	O
}	O
position	long
++	O
;	O
}	O
rec_mset_iterator_free	(*(struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long))))->(void)
(	O
&	O
iter	struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long))
)	O
;	O
if	O
(	O
!	O
wrote_descriptor	bool
&&	O
(	O
descriptor_pos	long
>=	O
rec_rset_num_elems	(*(struct))->(long)
(	O
rset	*(struct)
)	O
)	O
&&	O
rec_rset_descriptor	(*(struct))->(*(struct))
(	O
rset	*(struct)
)	O
)	O
{	O
if	O
(	O
!	O
rec_writer_putc	(*(struct),char)->(bool)
(	O
writer	*(struct)
,	O
'\n'	O
)	O
)	O
{	O
ret	bool
=	O
false	int
;	O
}	O
if	O
(	O
!	O
rec_write_record	(*(struct),*(struct))->(bool)
(	O
writer	*(struct)
,	O
rec_rset_descriptor	(*(struct))->(*(struct))
(	O
rset	*(struct)
)	O
)	O
)	O
{	O
ret	bool
=	O
false	int
;	O
}	O
if	O
(	O
!	O
rec_writer_putc	(*(struct),char)->(bool)
(	O
writer	*(struct)
,	O
'\n'	O
)	O
)	O
{	O
ret	bool
=	O
false	int
;	O
}	O
}	O
return	O
ret	bool
;	O
}	O
bool	bool
rec_write_db	(*(struct),*(struct))->(bool)
(	O
rec_writer_t	*(struct)
writer	*(struct)
,	O
rec_db_t	*(struct)
db	*(struct)
)	O
{	O
bool	bool
ret	bool
;	O
int	O
i	long
;	O
ret	bool
=	O
true	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
rec_db_size	(*(struct))->(long)
(	O
db	*(struct)
)	O
;	O
i	long
++	O
)	O
{	O
rec_rset_t	*(struct)
rset	*(struct)
=	O
rec_db_get_rset	(*(struct),long)->(*(struct))
(	O
db	*(struct)
,	O
i	long
)	O
;	O
if	O
(	O
i	long
!=	O
0	int
)	O
{	O
if	O
(	O
!	O
rec_writer_putc	(*(struct),char)->(bool)
(	O
writer	*(struct)
,	O
'\n'	O
)	O
)	O
{	O
ret	bool
=	O
false	int
;	O
break	O
;	O
}	O
}	O
if	O
(	O
!	O
rec_write_rset	(*(struct),*(struct))->(bool)
(	O
writer	*(struct)
,	O
rset	*(struct)
)	O
)	O
{	O
ret	bool
=	O
false	int
;	O
break	O
;	O
}	O
}	O
return	O
ret	bool
;	O
}	O
char	O
*	O
rec_write_field_str	(*(struct),enum(int,int,int,int))->(*(char))
(	O
rec_field_t	*(struct)
field	*(struct)
,	O
rec_writer_mode_t	enum(int,int,int,int)
mode	enum(int,int,int,int)
)	O
{	O
rec_writer_t	*(struct)
writer	*(struct)
;	O
char	O
*	O
result	*(*(char))
;	O
size_t	long
result_size	long
;	O
result	*(*(char))
=	O
NULL	O
;	O
writer	*(struct)
=	O
rec_writer_new_str	(*(*(char)),*(long))->(*(struct))
(	O
&	O
result	*(*(char))
,	O
&	O
result_size	long
)	O
;	O
if	O
(	O
writer	*(struct)
)	O
{	O
rec_writer_set_mode	(*(struct),enum(int,int,int,int))->(void)
(	O
writer	*(struct)
,	O
mode	enum(int,int,int,int)
)	O
;	O
rec_write_field	(*(struct),*(struct))->(bool)
(	O
writer	*(struct)
,	O
field	*(struct)
)	O
;	O
rec_writer_destroy	(*(struct))->(void)
(	O
writer	*(struct)
)	O
;	O
}	O
return	O
result	*(*(char))
;	O
}	O
char	O
*	O
rec_write_field_name_str	(*(char),enum(int,int,int,int))->(*(char))
(	O
const	O
char	O
*	O
field_name	*(char)
,	O
rec_writer_mode_t	enum(int,int,int,int)
mode	enum(int,int,int,int)
)	O
{	O
rec_writer_t	*(struct)
writer	*(struct)
;	O
char	O
*	O
result	*(*(char))
;	O
size_t	long
result_size	long
;	O
result	*(*(char))
=	O
NULL	O
;	O
writer	*(struct)
=	O
rec_writer_new_str	(*(*(char)),*(long))->(*(struct))
(	O
&	O
result	*(*(char))
,	O
&	O
result_size	long
)	O
;	O
if	O
(	O
writer	*(struct)
)	O
{	O
rec_writer_set_mode	(*(struct),enum(int,int,int,int))->(void)
(	O
writer	*(struct)
,	O
mode	enum(int,int,int,int)
)	O
;	O
rec_write_field_name	(*(struct),*(char))->(bool)
(	O
writer	*(struct)
,	O
field_name	*(char)
)	O
;	O
rec_writer_destroy	(*(struct))->(void)
(	O
writer	*(struct)
)	O
;	O
}	O
return	O
result	*(*(char))
;	O
}	O
char	O
*	O
rec_write_comment_str	(*(char),enum(int,int,int,int))->(*(char))
(	O
rec_comment_t	*(char)
comment	*(char)
,	O
rec_writer_mode_t	enum(int,int,int,int)
mode	enum(int,int,int,int)
)	O
{	O
rec_writer_t	*(struct)
writer	*(struct)
;	O
char	O
*	O
result	*(*(char))
;	O
size_t	long
result_size	long
;	O
result	*(*(char))
=	O
NULL	O
;	O
writer	*(struct)
=	O
rec_writer_new_str	(*(*(char)),*(long))->(*(struct))
(	O
&	O
result	*(*(char))
,	O
&	O
result_size	long
)	O
;	O
if	O
(	O
writer	*(struct)
)	O
{	O
rec_writer_set_mode	(*(struct),enum(int,int,int,int))->(void)
(	O
writer	*(struct)
,	O
mode	enum(int,int,int,int)
)	O
;	O
rec_write_comment	(*(struct),*(char))->(bool)
(	O
writer	*(struct)
,	O
comment	*(char)
)	O
;	O
rec_writer_destroy	(*(struct))->(void)
(	O
writer	*(struct)
)	O
;	O
}	O
return	O
result	*(*(char))
;	O
}	O
bool	bool
rec_write_string	(*(struct),*(char))->(bool)
(	O
rec_writer_t	*(struct)
writer	*(struct)
,	O
const	O
char	O
*	O
str	*(char)
)	O
{	O
return	O
rec_writer_puts	(*(struct),*(char))->(bool)
(	O
writer	*(struct)
,	O
str	*(char)
)	O
;	O
}	O
void	O
rec_writer_set_collapse	(*(struct),bool)->(void)
(	O
rec_writer_t	*(struct)
writer	*(struct)
,	O
bool	bool
value	*(char)
)	O
{	O
writer	*(struct)
->	O
collapse_p	bool
=	O
value	*(char)
;	O
}	O
void	O
rec_writer_set_skip_comments	(*(struct),bool)->(void)
(	O
rec_writer_t	*(struct)
writer	*(struct)
,	O
bool	bool
value	*(char)
)	O
{	O
writer	*(struct)
->	O
skip_comments_p	bool
=	O
value	*(char)
;	O
}	O
void	O
rec_writer_set_mode	(*(struct),enum(int,int,int,int))->(void)
(	O
rec_writer_t	*(struct)
writer	*(struct)
,	O
enum	O
rec_writer_mode_e	enum(int,int,int,int)
mode	enum(int,int,int,int)
)	O
{	O
writer	*(struct)
->	O
mode	enum(int,int,int,int)
=	O
mode	enum(int,int,int,int)
;	O
}	O
static	O
bool	bool
rec_writer_putc	(*(struct),char)->(bool)
(	O
rec_writer_t	*(struct)
writer	*(struct)
,	O
char	O
c	int
)	O
{	O
bool	bool
ret	bool
;	O
ret	bool
=	O
false	int
;	O
if	O
(	O
writer	*(struct)
->	O
file_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
ret	bool
=	O
(	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
c	int
,	O
writer	*(struct)
->	O
file_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
!=	O
EOF	O
)	O
;	O
}	O
if	O
(	O
writer	*(struct)
->	O
buf_out	*(struct)
)	O
{	O
ret	bool
=	O
(	O
rec_buf_putc	(int,*(struct))->(int)
(	O
c	int
,	O
writer	*(struct)
->	O
buf_out	*(struct)
)	O
!=	O
EOF	O
)	O
;	O
}	O
return	O
ret	bool
;	O
}	O
static	O
bool	bool
rec_writer_puts	(*(struct),*(char))->(bool)
(	O
rec_writer_t	*(struct)
writer	*(struct)
,	O
const	O
char	O
*	O
s	*(char)
)	O
{	O
bool	bool
ret	bool
;	O
ret	bool
=	O
false	int
;	O
if	O
(	O
writer	*(struct)
->	O
file_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
ret	bool
=	O
(	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
s	*(char)
,	O
writer	*(struct)
->	O
file_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
!=	O
EOF	O
)	O
;	O
}	O
if	O
(	O
writer	*(struct)
->	O
buf_out	*(struct)
)	O
{	O
ret	bool
=	O
(	O
rec_buf_puts	(*(char),*(struct))->(int)
(	O
s	*(char)
,	O
writer	*(struct)
->	O
buf_out	*(struct)
)	O
!=	O
EOF	O
)	O
;	O
}	O
return	O
ret	bool
;	O
}	O
