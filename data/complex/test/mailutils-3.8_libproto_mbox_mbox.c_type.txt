static	O
int	O
mbox_is_updated	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
)	O
;	O
static	O
int	O
mbox_expunge0	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),int)->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
int	O
remove_deleted	int
)	O
;	O
static	O
void	O
mbox_destroy	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(void)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
)	O
{	O
if	O
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
)	O
{	O
size_t	long
i	long
;	O
mbox_data_t	*(struct)
mud	*(struct)
=	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
;	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_TRACE1	int
,	O
(	O
"mbox_destroy (%s)"	*(char)
,	O
mud	*(struct)
->	O
name	*(char)
)	O
)	O
;	O
mu_monitor_wrlock	(*(struct(*(void),*(void),int,int)))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
monitor	*(struct(*(void),*(void),int,int))
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
mud	*(struct)
->	O
umessages_count	long
;	O
i	long
++	O
)	O
{	O
mbox_message_t	*(struct)
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
=	O
mud	*(struct)
->	O
umessages	*(*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))
[	O
i	long
]	O
;	O
if	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
{	O
mu_message_destroy	(*(*(struct)),*(void))->(void)
(	O
&	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
message	*(struct)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
;	O
free	(*(void))->(void)
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
;	O
}	O
}	O
if	O
(	O
mud	*(struct)
->	O
umessages	*(*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))
)	O
free	(*(void))->(void)
(	O
mud	*(struct)
->	O
umessages	*(*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))
)	O
;	O
if	O
(	O
mud	*(struct)
->	O
name	*(char)
)	O
free	(*(void))->(void)
(	O
mud	*(struct)
->	O
name	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
mud	*(struct)
)	O
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
=	O
NULL	O
;	O
mu_monitor_unlock	(*(struct(*(void),*(void),int,int)))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
monitor	*(struct(*(void),*(void),int,int))
)	O
;	O
}	O
}	O
static	O
int	O
mbox_open	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),int)->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
int	O
flags	int
)	O
{	O
mbox_data_t	*(struct)
mud	*(struct)
=	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
;	O
int	O
status	int
=	O
0	int
;	O
if	O
(	O
mud	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
flags	int
=	O
flags	int
;	O
if	O
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
==	O
NULL	O
)	O
{	O
status	int
=	O
(	O
flags	int
&	O
MU_STREAM_CREAT	int
)	O
||	O
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
flags	int
&	O
MU_STREAM_APPEND	int
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
status	int
=	O
mu_mapfile_stream_create	(*(*(struct)),*(char),int)->(int)
(	O
&	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
mud	*(struct)
->	O
name	*(char)
,	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
flags	int
)	O
;	O
}	O
if	O
(	O
status	int
)	O
status	int
=	O
mu_file_stream_create	(*(*(struct)),*(char),int)->(int)
(	O
&	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
mud	*(struct)
->	O
name	*(char)
,	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
flags	int
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
}	O
mu_stream_set_buffer	(*(struct),enum(int,int,int),long)->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
mu_buffer_full	int
,	O
0	int
)	O
;	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_TRACE1	int
,	O
(	O
"mbox_open (%s, 0x%x)"	*(char)
,	O
mud	*(struct)
->	O
name	*(char)
,	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
flags	int
)	O
)	O
;	O
if	O
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
locker	*(struct)
==	O
NULL	O
&&	O
(	O
flags	int
&	O
(	O
MU_STREAM_WRITE	int
|	O
MU_STREAM_APPEND	int
|	O
MU_STREAM_CREAT	int
)	O
)	O
)	O
status	int
=	O
mu_locker_create	(*(*(struct)),*(char),int)->(int)
(	O
&	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
locker	*(struct)
,	O
mud	*(struct)
->	O
name	*(char)
,	O
0	int
)	O
;	O
return	O
status	int
;	O
}	O
static	O
int	O
mbox_close	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
)	O
{	O
mbox_data_t	*(struct)
mud	*(struct)
=	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
;	O
size_t	long
i	long
;	O
if	O
(	O
mud	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_TRACE1	int
,	O
(	O
"mbox_close (%s)"	*(char)
,	O
mud	*(struct)
->	O
name	*(char)
)	O
)	O
;	O
mu_locker_unlock	(*(struct))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
locker	*(struct)
)	O
;	O
mu_monitor_wrlock	(*(struct(*(void),*(void),int,int)))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
monitor	*(struct(*(void),*(void),int,int))
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
mud	*(struct)
->	O
umessages_count	long
;	O
i	long
++	O
)	O
{	O
mbox_message_t	*(struct)
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
=	O
mud	*(struct)
->	O
umessages	*(*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))
[	O
i	long
]	O
;	O
if	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
{	O
mu_message_destroy	(*(*(struct)),*(void))->(void)
(	O
&	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
message	*(struct)
)	O
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
;	O
free	(*(void))->(void)
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
;	O
}	O
}	O
if	O
(	O
mud	*(struct)
->	O
umessages	*(*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))
)	O
free	(*(void))->(void)
(	O
mud	*(struct)
->	O
umessages	*(*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))
)	O
;	O
mud	*(struct)
->	O
umessages	*(*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))
=	O
NULL	O
;	O
mud	*(struct)
->	O
messages_count	long
=	O
mud	*(struct)
->	O
umessages_count	long
=	O
0	int
;	O
mud	*(struct)
->	O
size	*(long)
=	O
0	int
;	O
mud	*(struct)
->	O
uidvalidity	long
=	O
0	int
;	O
mud	*(struct)
->	O
uidnext	long
=	O
0	int
;	O
mu_monitor_unlock	(*(struct(*(void),*(void),int,int)))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
monitor	*(struct(*(void),*(void),int,int))
)	O
;	O
return	O
mu_stream_close	(*(struct))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
)	O
;	O
}	O
static	O
int	O
mbox_remove	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
)	O
{	O
mbox_data_t	*(struct)
mud	*(struct)
=	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
;	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_TRACE1	int
,	O
(	O
"mbox_remove (%s)"	*(char)
,	O
mud	*(struct)
->	O
name	*(char)
)	O
)	O
;	O
return	O
unlink	(*(char))->(int)
(	O
mud	*(struct)
->	O
name	*(char)
)	O
==	O
0	int
?	O
0	int
:	O
errno	O
;	O
}	O
static	O
int	O
mbox_scan	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(long))->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
size_t	long
msgno	long
,	O
size_t	long
*	O
pcount	*(long)
)	O
{	O
size_t	long
i	long
;	O
mbox_data_t	*(struct)
mud	*(struct)
=	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
;	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_TRACE1	int
,	O
(	O
"mbox_scan (%s)"	*(char)
,	O
mud	*(struct)
->	O
name	*(char)
)	O
)	O
;	O
if	O
(	O
!	O
mbox_is_updated	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
)	O
)	O
return	O
mbox_scan0	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(long),int)->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
msgno	long
,	O
pcount	*(long)
,	O
1	int
)	O
;	O
if	O
(	O
msgno	long
>	O
0	int
)	O
msgno	long
--	O
;	O
for	O
(	O
i	long
=	O
msgno	long
;	O
i	long
<	O
mud	*(struct)
->	O
messages_count	long
;	O
i	long
++	O
)	O
{	O
size_t	long
tmp	long
=	O
i	long
;	O
if	O
(	O
mu_observable_notify	(*(struct),int,*(void))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
observable	*(struct)
,	O
MU_EVT_MESSAGE_ADD	int
,	O
&	O
tmp	long
)	O
!=	O
0	int
)	O
break	O
;	O
if	O
(	O
(	O
(	O
i	long
+	O
1	int
)	O
%	O
50	int
)	O
==	O
0	int
)	O
mu_observable_notify	(*(struct),int,*(void))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
observable	*(struct)
,	O
MU_EVT_MAILBOX_PROGRESS	int
,	O
NULL	O
)	O
;	O
}	O
*	O
pcount	*(long)
=	O
mud	*(struct)
->	O
messages_count	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
mbox_is_updated	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
)	O
{	O
mu_off_t	long
size	*(long)
=	O
0	int
;	O
mbox_data_t	*(struct)
mud	*(struct)
=	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
;	O
if	O
(	O
mu_stream_size	(*(struct),*(long))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
&	O
size	*(long)
)	O
!=	O
0	int
)	O
return	O
1	int
;	O
if	O
(	O
size	*(long)
<	O
mud	*(struct)
->	O
size	*(long)
)	O
{	O
mu_observable_notify	(*(struct),int,*(void))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
observable	*(struct)
,	O
MU_EVT_MAILBOX_CORRUPT	int
,	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
)	O
;	O
mu_diag_output	(int,*(char))->(void)
(	O
MU_DIAG_EMERG	O
,	O
_	O
(	O
"mailbox corrupted, shrank in size"	*(char)
)	O
)	O
;	O
return	O
0	int
;	O
}	O
return	O
(	O
mud	*(struct)
->	O
size	*(long)
==	O
size	*(long)
)	O
;	O
}	O
static	O
int	O
mbox_expunge	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
)	O
{	O
return	O
mbox_expunge0	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),int)->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
1	int
)	O
;	O
}	O
static	O
int	O
mbox_sync	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
)	O
{	O
return	O
mbox_expunge0	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),int)->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
0	int
)	O
;	O
}	O
static	O
int	O
mbox_message_uid	(*(struct),*(long))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
size_t	long
*	O
puid	*(long)
)	O
{	O
mbox_message_t	*(struct)
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
if	O
(	O
puid	*(long)
)	O
*	O
puid	*(long)
=	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
uid	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
mbox_message_qid	(*(struct),*(*(char)))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
mu_message_qid_t	*(char)
*	O
pqid	*(*(char))
)	O
{	O
mbox_message_t	*(struct)
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
return	O
mu_asprintf	(*(*(char)),*(char))->(int)
(	O
pqid	*(*(char))
,	O
"%lu"	*(char)
,	O
(	O
unsigned	O
long	O
)	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
envel_from	long
)	O
;	O
}	O
static	O
int	O
_msg_stream_setup	(*(struct),*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
mbox_message_t	*(struct)
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
{	O
mu_stream_t	*(struct)
stream	*(struct)
;	O
int	O
status	int
;	O
status	int
=	O
mu_streamref_create_abridged	(*(*(struct)),*(struct),long,long)->(int)
(	O
&	O
stream	*(struct)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
mud	*(struct)
->	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
envel_from_end	long
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
body_end	long
-	O
1	int
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
status	int
=	O
mu_message_set_stream	(*(struct),*(struct),*(void))->(int)
(	O
msg	*(struct)
,	O
stream	*(struct)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
;	O
return	O
status	int
;	O
}	O
static	O
int	O
mbox_body_size	(*(struct),*(long))->(int)
(	O
mu_body_t	*(struct)
body	*(struct)
,	O
size_t	long
*	O
psize	*(long)
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
=	O
mu_body_get_owner	(*(struct))->(*(void))
(	O
body	*(struct)
)	O
;	O
mbox_message_t	*(struct)
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
if	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
psize	*(long)
)	O
*	O
psize	*(long)
=	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
body_end	long
-	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
body	*(struct)
;	O
return	O
0	int
;	O
}	O
static	O
int	O
mbox_body_lines	(*(struct),*(long))->(int)
(	O
mu_body_t	*(struct)
body	*(struct)
,	O
size_t	long
*	O
plines	*(long)
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
=	O
mu_body_get_owner	(*(struct))->(*(void))
(	O
body	*(struct)
)	O
;	O
mbox_message_t	*(struct)
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
if	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
plines	*(long)
)	O
*	O
plines	*(long)
=	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
body_lines	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_msg_body_setup	(*(struct),*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
mbox_message_t	*(struct)
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
{	O
mu_body_t	*(struct)
body	*(struct)
;	O
mu_stream_t	*(struct)
stream	*(struct)
;	O
int	O
status	int
;	O
status	int
=	O
mu_body_create	(*(*(struct)),*(void))->(int)
(	O
&	O
body	*(struct)
,	O
msg	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
mu_streamref_create_abridged	(*(*(struct)),*(struct),long,long)->(int)
(	O
&	O
stream	*(struct)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
mud	*(struct)
->	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
body	*(struct)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
body_end	long
-	O
1	int
)	O
;	O
if	O
(	O
status	int
)	O
mu_body_destroy	(*(*(struct)),*(void))->(void)
(	O
&	O
body	*(struct)
,	O
msg	*(struct)
)	O
;	O
else	O
{	O
mu_body_set_stream	(*(struct),*(struct),*(void))->(int)
(	O
body	*(struct)
,	O
stream	*(struct)
,	O
msg	*(struct)
)	O
;	O
mu_body_set_size	(*(struct),*((*(struct),*(long))->(int)),*(void))->(int)
(	O
body	*(struct)
,	O
mbox_body_size	(*(struct),*(long))->(int)
,	O
msg	*(struct)
)	O
;	O
mu_body_set_lines	(*(struct),*((*(struct),*(long))->(int)),*(void))->(int)
(	O
body	*(struct)
,	O
mbox_body_lines	(*(struct),*(long))->(int)
,	O
msg	*(struct)
)	O
;	O
mu_body_clear_modified	(*(struct))->(int)
(	O
body	*(struct)
)	O
;	O
mu_message_set_body	(*(struct),*(struct),*(void))->(int)
(	O
msg	*(struct)
,	O
body	*(struct)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
;	O
}	O
return	O
status	int
;	O
}	O
static	O
int	O
mbox_envelope_date	(*(struct),*(char),long,*(long))->(int)
(	O
mu_envelope_t	*(struct)
envelope	*(struct)
,	O
char	O
*	O
buf	*(char)
,	O
size_t	long
len	long
,	O
size_t	long
*	O
pnwrite	*(long)
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
=	O
mu_envelope_get_owner	(*(struct))->(*(void))
(	O
envelope	*(struct)
)	O
;	O
mbox_message_t	*(struct)
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
size_t	long
n	*(long)
=	O
0	int
;	O
int	O
status	int
;	O
char	O
buffer	*(char)
[	O
512	int
]	O
;	O
char	O
*	O
s	*(char)
;	O
if	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
status	int
=	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
mud	*(struct)
->	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
envel_from	long
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
mu_stream_readline	(*(struct),*(char),long,*(long))->(int)
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
mud	*(struct)
->	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
buffer	*(char)
,	O
sizeof	O
(	O
buffer	*(char)
)	O
,	O
&	O
n	*(long)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
mu_rtrim_class	(*(char),int)->(long)
(	O
buffer	*(char)
,	O
MU_CTYPE_ENDLN	int
)	O
;	O
if	O
(	O
n	*(long)
>	O
5	int
&&	O
(	O
s	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
buffer	*(char)
+	O
5	int
,	O
' '	O
)	O
)	O
!=	O
NULL	O
)	O
{	O
if	O
(	O
buf	*(char)
&&	O
len	long
>	O
0	int
)	O
{	O
len	long
--	O
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
buf	*(char)
,	O
s	*(char)
+	O
1	int
,	O
len	long
)	O
[	O
len	long
]	O
=	O
'\0'	O
;	O
len	long
=	O
strlen	(*(char))->(long)
(	O
buf	*(char)
)	O
;	O
}	O
else	O
len	long
=	O
strlen	(*(char))->(long)
(	O
s	*(char)
+	O
1	int
)	O
;	O
}	O
else	O
len	long
=	O
0	int
;	O
if	O
(	O
pnwrite	*(long)
)	O
*	O
pnwrite	*(long)
=	O
len	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
mbox_envelope_sender	(*(struct),*(char),long,*(long))->(int)
(	O
mu_envelope_t	*(struct)
envelope	*(struct)
,	O
char	O
*	O
buf	*(char)
,	O
size_t	long
len	long
,	O
size_t	long
*	O
pnwrite	*(long)
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
=	O
mu_envelope_get_owner	(*(struct))->(*(void))
(	O
envelope	*(struct)
)	O
;	O
mbox_message_t	*(struct)
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
size_t	long
n	*(long)
=	O
0	int
;	O
int	O
status	int
;	O
char	O
buffer	*(char)
[	O
512	int
]	O
;	O
char	O
*	O
s	*(char)
;	O
if	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
status	int
=	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
mud	*(struct)
->	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
envel_from	long
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
mu_stream_readline	(*(struct),*(char),long,*(long))->(int)
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
mud	*(struct)
->	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
buffer	*(char)
,	O
sizeof	O
(	O
buffer	*(char)
)	O
,	O
&	O
n	*(long)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
if	O
(	O
n	*(long)
>	O
5	int
&&	O
(	O
s	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
buffer	*(char)
+	O
5	int
,	O
' '	O
)	O
)	O
!=	O
NULL	O
)	O
{	O
*	O
s	*(char)
=	O
'\0'	O
;	O
if	O
(	O
buf	*(char)
&&	O
len	long
>	O
0	int
)	O
{	O
len	long
--	O
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
buf	*(char)
,	O
buffer	*(char)
+	O
5	int
,	O
len	long
)	O
[	O
len	long
]	O
=	O
'\0'	O
;	O
len	long
=	O
strlen	(*(char))->(long)
(	O
buf	*(char)
)	O
;	O
}	O
else	O
len	long
=	O
strlen	(*(char))->(long)
(	O
buffer	*(char)
+	O
5	int
)	O
;	O
}	O
else	O
len	long
=	O
0	int
;	O
if	O
(	O
pnwrite	*(long)
)	O
*	O
pnwrite	*(long)
=	O
len	long
;	O
return	O
0	int
;	O
}	O
int	O
_msg_envelope_setup	(*(struct),*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
mbox_message_t	*(struct)
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
{	O
mu_envelope_t	*(struct)
envelope	*(struct)
;	O
int	O
status	int
=	O
mu_envelope_create	(*(*(struct)),*(void))->(int)
(	O
&	O
envelope	*(struct)
,	O
msg	*(struct)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
mu_envelope_set_sender	(*(struct),*((*(struct),*(char),long,*(long))->(int)),*(void))->(int)
(	O
envelope	*(struct)
,	O
mbox_envelope_sender	(*(struct),*(char),long,*(long))->(int)
,	O
msg	*(struct)
)	O
;	O
mu_envelope_set_date	(*(struct),*((*(struct),*(char),long,*(long))->(int)),*(void))->(int)
(	O
envelope	*(struct)
,	O
mbox_envelope_date	(*(struct),*(char),long,*(long))->(int)
,	O
msg	*(struct)
)	O
;	O
mu_message_set_envelope	(*(struct),*(struct),*(void))->(int)
(	O
msg	*(struct)
,	O
envelope	*(struct)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
;	O
}	O
return	O
status	int
;	O
}	O
static	O
int	O
mbox_get_attr_flags	(*(struct),*(int))->(int)
(	O
mu_attribute_t	*(struct)
attr	*(struct)
,	O
int	O
*	O
pflags	*(int)
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
=	O
mu_attribute_get_owner	(*(struct))->(*(void))
(	O
attr	*(struct)
)	O
;	O
mbox_message_t	*(struct)
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
if	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
pflags	*(int)
)	O
*	O
pflags	*(int)
=	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
attr_flags	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
mbox_set_attr_flags	(*(struct),int)->(int)
(	O
mu_attribute_t	*(struct)
attr	*(struct)
,	O
int	O
flags	int
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
=	O
mu_attribute_get_owner	(*(struct))->(*(void))
(	O
attr	*(struct)
)	O
;	O
mbox_message_t	*(struct)
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
if	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
attr_flags	int
|=	O
flags	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
mbox_unset_attr_flags	(*(struct),int)->(int)
(	O
mu_attribute_t	*(struct)
attr	*(struct)
,	O
int	O
flags	int
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
=	O
mu_attribute_get_owner	(*(struct))->(*(void))
(	O
attr	*(struct)
)	O
;	O
mbox_message_t	*(struct)
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
if	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
attr_flags	int
&=	O
~	O
flags	int
;	O
return	O
0	int
;	O
}	O
int	O
_msg_attribute_setup	(*(struct),*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
mbox_message_t	*(struct)
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
{	O
mu_attribute_t	*(struct)
attribute	*(struct)
;	O
int	O
status	int
=	O
mu_attribute_create	(*(*(struct)),*(void))->(int)
(	O
&	O
attribute	*(struct)
,	O
msg	*(struct)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
mu_attribute_set_get_flags	(*(struct),*((*(struct),*(int))->(int)),*(void))->(int)
(	O
attribute	*(struct)
,	O
mbox_get_attr_flags	(*(struct),*(int))->(int)
,	O
msg	*(struct)
)	O
;	O
mu_attribute_set_set_flags	(*(struct),*((*(struct),int)->(int)),*(void))->(int)
(	O
attribute	*(struct)
,	O
mbox_set_attr_flags	(*(struct),int)->(int)
,	O
msg	*(struct)
)	O
;	O
mu_attribute_set_unset_flags	(*(struct),*((*(struct),int)->(int)),*(void))->(int)
(	O
attribute	*(struct)
,	O
mbox_unset_attr_flags	(*(struct),int)->(int)
,	O
msg	*(struct)
)	O
;	O
mu_message_set_attribute	(*(struct),*(struct),*(void))->(int)
(	O
msg	*(struct)
,	O
attribute	*(struct)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
;	O
}	O
return	O
status	int
;	O
}	O
static	O
int	O
_msg_setup	(*(struct),*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
mbox_message_t	*(struct)
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
{	O
int	O
status	int
;	O
status	int
=	O
_msg_stream_setup	(*(struct),*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))->(int)
(	O
msg	*(struct)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
_msg_attribute_setup	(*(struct),*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))->(int)
(	O
msg	*(struct)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
_msg_body_setup	(*(struct),*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))->(int)
(	O
msg	*(struct)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
return	O
_msg_envelope_setup	(*(struct),*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))->(int)
(	O
msg	*(struct)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
;	O
}	O
static	O
int	O
new_message	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))),*(*(struct)))->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
mbox_message_t	*(struct)
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
,	O
mu_message_t	*(struct)
*	O
pmsg	*(*(struct))
)	O
{	O
int	O
status	int
;	O
mu_message_t	*(struct)
msg	*(struct)
;	O
status	int
=	O
mu_message_create	(*(*(struct)),*(void))->(int)
(	O
&	O
msg	*(struct)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
return	O
status	int
;	O
status	int
=	O
_msg_setup	(*(struct),*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))->(int)
(	O
msg	*(struct)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
;	O
if	O
(	O
status	int
)	O
{	O
mu_message_destroy	(*(*(struct)),*(void))->(void)
(	O
&	O
msg	*(struct)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
;	O
return	O
status	int
;	O
}	O
mu_message_set_uid	(*(struct),*((*(struct),*(long))->(int)),*(void))->(int)
(	O
msg	*(struct)
,	O
mbox_message_uid	(*(struct),*(long))->(int)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
;	O
mu_message_set_qid	(*(struct),*((*(struct),*(*(char)))->(int)),*(void))->(int)
(	O
msg	*(struct)
,	O
mbox_message_qid	(*(struct),*(*(char)))->(int)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
;	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
message	*(struct)
=	O
msg	*(struct)
;	O
mu_message_set_mailbox	(*(struct),*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(void))->(int)
(	O
msg	*(struct)
,	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
;	O
mu_message_clear_modified	(*(struct))->(int)
(	O
msg	*(struct)
)	O
;	O
*	O
pmsg	*(*(struct))
=	O
msg	*(struct)
;	O
return	O
0	int
;	O
}	O
static	O
int	O
mbox_get_message	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(*(struct)))->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
size_t	long
msgno	long
,	O
mu_message_t	*(struct)
*	O
pmsg	*(*(struct))
)	O
{	O
int	O
status	int
;	O
mbox_data_t	*(struct)
mud	*(struct)
=	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
;	O
mbox_message_t	*(struct)
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
;	O
if	O
(	O
pmsg	*(*(struct))
==	O
NULL	O
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
if	O
(	O
mud	*(struct)
==	O
NULL	O
||	O
msgno	long
<	O
1	int
)	O
return	O
EINVAL	int
;	O
if	O
(	O
mud	*(struct)
->	O
messages_count	long
==	O
0	int
)	O
{	O
status	int
=	O
mbox_scan0	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(long),int)->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
1	int
,	O
NULL	O
,	O
0	int
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
return	O
status	int
;	O
}	O
if	O
(	O
!	O
(	O
mud	*(struct)
->	O
messages_count	long
>	O
0	int
&&	O
msgno	long
>	O
0	int
&&	O
msgno	long
<=	O
mud	*(struct)
->	O
messages_count	long
)	O
)	O
return	O
MU_ERR_NOENT	O
;	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
=	O
mud	*(struct)
->	O
umessages	*(*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))
[	O
msgno	long
-	O
1	int
]	O
;	O
if	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
message	*(struct)
)	O
{	O
if	O
(	O
pmsg	*(*(struct))
)	O
*	O
pmsg	*(*(struct))
=	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
message	*(struct)
;	O
return	O
0	int
;	O
}	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_TRACE1	int
,	O
(	O
"mbox_get_message (%s, %lu)"	*(char)
,	O
mud	*(struct)
->	O
name	*(char)
,	O
(	O
unsigned	O
long	O
)	O
msgno	long
)	O
)	O
;	O
return	O
new_message	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))),*(*(struct)))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
,	O
pmsg	*(*(struct))
)	O
;	O
}	O
static	O
int	O
qid2off	(*(char),*(long))->(int)
(	O
mu_message_qid_t	*(char)
qid	*(char)
,	O
mu_off_t	long
*	O
pret	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))
)	O
{	O
mu_off_t	long
ret	*(*(struct))
=	O
0	int
;	O
for	O
(	O
;	O
*	O
qid	*(char)
;	O
qid	*(char)
++	O
)	O
{	O
if	O
(	O
!	O
(	O
'0'	O
<=	O
*	O
qid	*(char)
&&	O
*	O
qid	*(char)
<=	O
'9'	O
)	O
)	O
return	O
1	int
;	O
ret	*(*(struct))
=	O
ret	*(*(struct))
*	O
10	int
+	O
*	O
qid	*(char)
-	O
'0'	O
;	O
}	O
*	O
pret	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))
=	O
ret	*(*(struct))
;	O
return	O
0	int
;	O
}	O
static	O
int	O
mbox_quick_get_message	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(char),*(*(struct)))->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
mu_message_qid_t	*(char)
qid	*(char)
,	O
mu_message_t	*(struct)
*	O
pmsg	*(*(struct))
)	O
{	O
int	O
status	int
;	O
mbox_data_t	*(struct)
mud	*(struct)
=	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
;	O
mbox_message_t	*(struct)
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
;	O
mu_off_t	long
offset	long
;	O
if	O
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
==	O
NULL	O
||	O
qid2off	(*(char),*(long))->(int)
(	O
qid	*(char)
,	O
&	O
offset	long
)	O
||	O
!	O
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
flags	int
&	O
MU_STREAM_QACCESS	int
)	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
mud	*(struct)
->	O
messages_count	long
==	O
0	int
)	O
{	O
status	int
=	O
mbox_scan1	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,int)->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
offset	long
,	O
0	int
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
return	O
status	int
;	O
if	O
(	O
mud	*(struct)
->	O
messages_count	long
==	O
0	int
)	O
return	O
MU_ERR_NOENT	O
;	O
}	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
=	O
mud	*(struct)
->	O
umessages	*(*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))
[	O
0	int
]	O
;	O
if	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
message	*(struct)
)	O
{	O
char	O
*	O
vqid	*(char)
;	O
status	int
=	O
mu_message_get_qid	(*(struct),*(*(char)))->(int)
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
message	*(struct)
,	O
&	O
vqid	*(char)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
strcmp	(*(char),*(char))->(int)
(	O
qid	*(char)
,	O
vqid	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
vqid	*(char)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
MU_ERR_EXISTS	O
;	O
if	O
(	O
pmsg	*(*(struct))
)	O
*	O
pmsg	*(*(struct))
=	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
message	*(struct)
;	O
return	O
0	int
;	O
}	O
return	O
new_message	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))),*(*(struct)))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
,	O
pmsg	*(*(struct))
)	O
;	O
}	O
static	O
int	O
mbox_get_size	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
mu_off_t	long
*	O
psize	*(long)
)	O
{	O
mu_off_t	long
size	*(long)
;	O
int	O
status	int
;	O
status	int
=	O
mu_stream_size	(*(struct),*(long))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
&	O
size	*(long)
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
return	O
status	int
;	O
if	O
(	O
psize	*(long)
)	O
*	O
psize	*(long)
=	O
size	*(long)
;	O
return	O
0	int
;	O
}	O
static	O
int	O
mbox_messages_count	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
size_t	long
*	O
pcount	*(long)
)	O
{	O
mbox_data_t	*(struct)
mud	*(struct)
=	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
;	O
if	O
(	O
mud	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
!	O
mbox_is_updated	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
)	O
)	O
return	O
mbox_scan0	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(long),int)->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
mud	*(struct)
->	O
messages_count	long
,	O
pcount	*(long)
,	O
0	int
)	O
;	O
if	O
(	O
pcount	*(long)
)	O
*	O
pcount	*(long)
=	O
mud	*(struct)
->	O
messages_count	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
mbox_messages_recent	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
size_t	long
*	O
pcount	*(long)
)	O
{	O
mbox_data_t	*(struct)
mud	*(struct)
=	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
;	O
mbox_message_t	*(struct)
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
;	O
size_t	long
j	long
,	O
recent	long
;	O
if	O
(	O
mud	*(struct)
->	O
messages_count	long
==	O
0	int
)	O
{	O
int	O
status	int
=	O
mbox_scan0	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(long),int)->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
1	int
,	O
NULL	O
,	O
0	int
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
return	O
status	int
;	O
}	O
for	O
(	O
recent	long
=	O
j	long
=	O
0	int
;	O
j	long
<	O
mud	*(struct)
->	O
messages_count	long
;	O
j	long
++	O
)	O
{	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
=	O
mud	*(struct)
->	O
umessages	*(*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))
[	O
j	long
]	O
;	O
if	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
&&	O
MU_ATTRIBUTE_IS_UNSEEN	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
attr_flags	int
)	O
)	O
recent	long
++	O
;	O
}	O
*	O
pcount	*(long)
=	O
recent	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
mbox_message_unseen	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
size_t	long
*	O
pmsgno	*(long)
)	O
{	O
mbox_data_t	*(struct)
mud	*(struct)
=	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
;	O
mbox_message_t	*(struct)
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
;	O
size_t	long
j	long
,	O
unseen	long
;	O
if	O
(	O
mud	*(struct)
->	O
messages_count	long
==	O
0	int
)	O
{	O
int	O
status	int
=	O
mbox_scan0	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(long),int)->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
1	int
,	O
NULL	O
,	O
0	int
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
return	O
status	int
;	O
}	O
for	O
(	O
unseen	long
=	O
j	long
=	O
0	int
;	O
j	long
<	O
mud	*(struct)
->	O
messages_count	long
;	O
j	long
++	O
)	O
{	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
=	O
mud	*(struct)
->	O
umessages	*(*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))
[	O
j	long
]	O
;	O
if	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
&&	O
MU_ATTRIBUTE_IS_UNREAD	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
attr_flags	int
)	O
)	O
{	O
unseen	long
=	O
j	long
+	O
1	int
;	O
break	O
;	O
}	O
}	O
*	O
pmsgno	*(long)
=	O
unseen	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
mbox_uidvalidity	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
unsigned	O
long	O
*	O
puidvalidity	*(long)
)	O
{	O
mbox_data_t	*(struct)
mud	*(struct)
=	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
;	O
int	O
status	int
=	O
mbox_messages_count	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
NULL	O
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
return	O
status	int
;	O
if	O
(	O
mud	*(struct)
->	O
messages_count	long
==	O
0	int
)	O
{	O
status	int
=	O
mbox_scan0	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(long),int)->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
1	int
,	O
NULL	O
,	O
0	int
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
return	O
status	int
;	O
}	O
if	O
(	O
puidvalidity	*(long)
)	O
*	O
puidvalidity	*(long)
=	O
mud	*(struct)
->	O
uidvalidity	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
mbox_uidnext	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
size_t	long
*	O
puidnext	*(long)
)	O
{	O
mbox_data_t	*(struct)
mud	*(struct)
=	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
;	O
int	O
status	int
=	O
mbox_messages_count	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
NULL	O
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
return	O
status	int
;	O
if	O
(	O
mud	*(struct)
->	O
messages_count	long
==	O
0	int
)	O
{	O
status	int
=	O
mbox_scan0	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(long),int)->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
1	int
,	O
NULL	O
,	O
0	int
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
return	O
status	int
;	O
}	O
if	O
(	O
puidnext	*(long)
)	O
*	O
puidnext	*(long)
=	O
mud	*(struct)
->	O
uidnext	long
;	O
return	O
0	int
;	O
}	O
void	O
mbox_cleanup	(*(void))->(void)
(	O
void	O
*	O
arg	*(char)
)	O
{	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
=	O
arg	*(char)
;	O
mu_monitor_unlock	(*(struct(*(void),*(void),int,int)))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
monitor	*(struct(*(void),*(void),int,int))
)	O
;	O
mu_locker_unlock	(*(struct))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
locker	*(struct)
)	O
;	O
}	O
int	O
restore_sender	(*(struct),*(*(char)))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
char	O
*	O
*	O
pret	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))
)	O
{	O
mu_header_t	*(struct)
hdr	*(struct)
;	O
const	O
char	O
*	O
s	*(char)
=	O
NULL	O
;	O
char	O
*	O
from	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))
=	O
NULL	O
;	O
if	O
(	O
mu_message_get_header	(*(struct),*(*(struct)))->(int)
(	O
msg	*(struct)
,	O
&	O
hdr	*(struct)
)	O
==	O
0	int
)	O
mu_header_sget_value	O
(	O
hdr	*(struct)
,	O
MU_HEADER_FROM	*(char)
,	O
&	O
s	*(char)
)	O
;	O
if	O
(	O
s	*(char)
)	O
{	O
int	O
status	int
;	O
mu_address_t	*(struct)
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
status	int
=	O
mu_address_create	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))),*(char))->(int)
(	O
&	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
s	*(char)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
mu_address_aget_email	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),long,*(*(char)))->(int)
(	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
1	int
,	O
&	O
from	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))
)	O
;	O
mu_address_destroy	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))->(void)
(	O
&	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
;	O
}	O
if	O
(	O
!	O
from	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))
)	O
{	O
from	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))
=	O
strdup	(*(char))->(*(char))
(	O
PACKAGE	*(char)
)	O
;	O
if	O
(	O
!	O
from	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))
)	O
return	O
ENOMEM	int
;	O
}	O
*	O
pret	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))
=	O
from	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))
;	O
return	O
0	int
;	O
}	O
int	O
restore_date	(*(struct),*(*(char)))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
char	O
*	O
*	O
pret	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))
)	O
{	O
mu_header_t	*(struct)
hdr	*(struct)
;	O
const	O
char	O
*	O
s	*(char)
=	O
NULL	O
;	O
char	O
*	O
date	struct(int,int,int,int,int,int,int,int,int,long,*(char))
=	O
NULL	O
;	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
;	O
struct	O
mu_timezone	struct(int,*(char))
tz	*(struct(int,*(char)))
;	O
if	O
(	O
mu_message_get_header	(*(struct),*(*(struct)))->(int)
(	O
msg	*(struct)
,	O
&	O
hdr	*(struct)
)	O
==	O
0	int
)	O
{	O
int	O
rc	int
=	O
mu_header_sget_value	O
(	O
hdr	*(struct)
,	O
MU_HEADER_DATE	*(char)
,	O
&	O
s	*(char)
)	O
;	O
if	O
(	O
rc	int
&&	O
rc	int
!=	O
MU_ERR_NOENT	O
)	O
return	O
rc	int
;	O
}	O
if	O
(	O
s	*(char)
&&	O
mu_scan_datetime	(*(char),*(char),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))),*(*(char)))->(int)
(	O
s	*(char)
,	O
MU_DATETIME_SCAN_RFC822	*(char)
,	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
&	O
tz	*(struct(int,*(char)))
,	O
NULL	O
)	O
==	O
0	int
)	O
{	O
char	O
datebuf	array(char)
[	O
MU_DATETIME_FROM_LENGTH	int
+	O
1	int
]	O
;	O
mu_strftime	(*(char),long,*(char),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))->(long)
(	O
datebuf	array(char)
,	O
sizeof	O
datebuf	array(char)
,	O
MU_DATETIME_FROM	*(char)
,	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
)	O
;	O
date	struct(int,int,int,int,int,int,int,int,int,long,*(char))
=	O
strdup	(*(char))->(*(char))
(	O
datebuf	array(char)
)	O
;	O
}	O
else	O
{	O
time_t	long
t	long
;	O
time	struct(long,long)
(	O
&	O
t	long
)	O
;	O
date	struct(int,int,int,int,int,int,int,int,int,long,*(char))
=	O
strdup	(*(char))->(*(char))
(	O
ctime	(*(long))->(*(char))
(	O
&	O
t	long
)	O
)	O
;	O
}	O
if	O
(	O
!	O
date	struct(int,int,int,int,int,int,int,int,int,long,*(char))
)	O
return	O
ENOMEM	int
;	O
*	O
pret	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))
=	O
date	struct(int,int,int,int,int,int,int,int,int,long,*(char))
;	O
return	O
0	int
;	O
}	O
static	O
int	O
write_array	(*(struct),int,*(*(char)))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
int	O
count	*(long)
,	O
const	O
char	O
*	O
*	O
array	*(*(char))
)	O
{	O
int	O
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
count	*(long)
;	O
i	long
++	O
)	O
{	O
int	O
status	int
=	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
stream	*(struct)
,	O
array	*(*(char))
[	O
i	long
]	O
,	O
strlen	(*(char))->(long)
(	O
array	*(*(char))
[	O
i	long
]	O
)	O
,	O
NULL	O
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
}	O
return	O
0	int
;	O
}	O
static	O
int	O
msg_envelope_to_stream	(*(struct),*(struct))->(int)
(	O
mu_stream_t	*(struct)
out	*(struct)
,	O
mu_message_t	*(struct)
msg	*(struct)
)	O
{	O
mu_envelope_t	*(struct)
env	*(struct)
;	O
int	O
status	int
;	O
char	O
*	O
sender	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
=	O
NULL	O
;	O
char	O
*	O
datestr	*(char)
=	O
NULL	O
;	O
const	O
char	O
*	O
envarr	array(*(char))
[	O
5	int
]	O
;	O
status	int
=	O
mu_message_get_envelope	(*(struct),*(*(struct)))->(int)
(	O
msg	*(struct)
,	O
&	O
env	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
mu_envelope_aget_sender	(*(struct),*(*(char)))->(int)
(	O
env	*(struct)
,	O
&	O
sender	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
;	O
switch	O
(	O
status	int
)	O
{	O
case	O
0	int
:	O
break	O
;	O
case	O
MU_ERR_NOENT	O
:	O
status	int
=	O
restore_sender	(*(struct),*(*(char)))->(int)
(	O
msg	*(struct)
,	O
&	O
sender	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
break	O
;	O
default	O
:	O
return	O
status	int
;	O
}	O
status	int
=	O
mu_envelope_aget_date	(*(struct),*(*(char)))->(int)
(	O
env	*(struct)
,	O
&	O
datestr	*(char)
)	O
;	O
switch	O
(	O
status	int
)	O
{	O
case	O
0	int
:	O
break	O
;	O
case	O
MU_ERR_NOENT	O
:	O
status	int
=	O
restore_date	(*(struct),*(*(char)))->(int)
(	O
msg	*(struct)
,	O
&	O
datestr	*(char)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
break	O
;	O
free	(*(void))->(void)
(	O
sender	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
;	O
default	O
:	O
return	O
status	int
;	O
}	O
mu_rtrim_class	(*(char),int)->(long)
(	O
datestr	*(char)
,	O
MU_CTYPE_ENDLN	int
)	O
;	O
envarr	array(*(char))
[	O
0	int
]	O
=	O
"From "	*(char)
;	O
envarr	array(*(char))
[	O
1	int
]	O
=	O
sender	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
envarr	array(*(char))
[	O
2	int
]	O
=	O
" "	*(char)
;	O
envarr	array(*(char))
[	O
3	int
]	O
=	O
datestr	*(char)
;	O
envarr	array(*(char))
[	O
4	int
]	O
=	O
"\n"	*(char)
;	O
status	int
=	O
write_array	(*(struct),int,*(*(char)))->(int)
(	O
out	*(struct)
,	O
5	int
,	O
envarr	array(*(char))
)	O
;	O
free	(*(void))->(void)
(	O
sender	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
;	O
free	(*(void))->(void)
(	O
datestr	*(char)
)	O
;	O
return	O
status	int
;	O
}	O
static	O
int	O
msg_header_to_stream	(*(struct),*(struct))->(int)
(	O
mu_stream_t	*(struct)
ostr	*(struct)
,	O
mu_message_t	*(struct)
msg	*(struct)
)	O
{	O
int	O
status	int
;	O
mu_header_t	*(struct)
header	*(struct)
;	O
mu_iterator_t	*(struct)
itr	*(struct)
;	O
const	O
char	O
*	O
harr	array(*(char))
[	O
4	int
]	O
;	O
status	int
=	O
mu_message_get_header	(*(struct),*(*(struct)))->(int)
(	O
msg	*(struct)
,	O
&	O
header	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
mu_header_get_iterator	(*(struct),*(*(struct)))->(int)
(	O
header	*(struct)
,	O
&	O
itr	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
harr	array(*(char))
[	O
1	int
]	O
=	O
": "	*(char)
;	O
harr	array(*(char))
[	O
3	int
]	O
=	O
"\n"	*(char)
;	O
for	O
(	O
mu_iterator_first	(*(struct))->(int)
(	O
itr	*(struct)
)	O
;	O
status	int
==	O
0	int
&&	O
!	O
mu_iterator_is_done	(*(struct))->(int)
(	O
itr	*(struct)
)	O
;	O
mu_iterator_next	(*(struct))->(int)
(	O
itr	*(struct)
)	O
)	O
{	O
mu_iterator_current_kv	(*(struct),*(*(void)),*(*(void)))->(int)
(	O
itr	*(struct)
,	O
(	O
const	O
void	O
*	O
*	O
)	O
&	O
harr	array(*(char))
[	O
0	int
]	O
,	O
(	O
void	O
*	O
*	O
)	O
&	O
harr	array(*(char))
[	O
2	int
]	O
)	O
;	O
if	O
(	O
mu_c_strcasecmp	(*(char),*(char))->(int)
(	O
harr	array(*(char))
[	O
0	int
]	O
,	O
MU_HEADER_STATUS	*(char)
)	O
==	O
0	int
||	O
mu_c_strcasecmp	(*(char),*(char))->(int)
(	O
harr	array(*(char))
[	O
0	int
]	O
,	O
MU_HEADER_X_IMAPBASE	*(char)
)	O
==	O
0	int
||	O
mu_c_strcasecmp	(*(char),*(char))->(int)
(	O
harr	array(*(char))
[	O
0	int
]	O
,	O
MU_HEADER_X_UID	*(char)
)	O
==	O
0	int
)	O
continue	O
;	O
status	int
=	O
write_array	(*(struct),int,*(*(char)))->(int)
(	O
ostr	*(struct)
,	O
4	int
,	O
harr	array(*(char))
)	O
;	O
}	O
mu_iterator_destroy	(*(*(struct)))->(void)
(	O
&	O
itr	*(struct)
)	O
;	O
return	O
status	int
;	O
}	O
static	O
int	O
msg_attr_to_stream	(*(struct),*(struct))->(int)
(	O
mu_stream_t	*(struct)
ostr	*(struct)
,	O
mu_message_t	*(struct)
msg	*(struct)
)	O
{	O
mu_attribute_t	*(struct)
attr	*(struct)
;	O
char	O
abuf	array(char)
[	O
MU_STATUS_BUF_SIZE	O
+	O
1	int
]	O
;	O
const	O
char	O
*	O
harr	array(*(char))
[	O
4	int
]	O
;	O
int	O
status	int
;	O
status	int
=	O
mu_message_get_attribute	(*(struct),*(*(struct)))->(int)
(	O
msg	*(struct)
,	O
&	O
attr	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
mu_attribute_to_string	(*(struct),*(char),long,*(long))->(int)
(	O
attr	*(struct)
,	O
abuf	array(char)
,	O
sizeof	O
(	O
abuf	array(char)
)	O
,	O
NULL	O
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
harr	array(*(char))
[	O
0	int
]	O
=	O
MU_HEADER_STATUS	*(char)
;	O
harr	array(*(char))
[	O
1	int
]	O
=	O
": "	*(char)
;	O
harr	array(*(char))
[	O
2	int
]	O
=	O
abuf	array(char)
;	O
harr	array(*(char))
[	O
3	int
]	O
=	O
"\n"	*(char)
;	O
return	O
write_array	(*(struct),int,*(*(char)))->(int)
(	O
ostr	*(struct)
,	O
4	int
,	O
harr	array(*(char))
)	O
;	O
}	O
static	O
int	O
uid_to_stream	(*(struct),*(struct),*(struct(*(*(struct`)),long,long,long,long,long,*(char),*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),int)->(int)
(	O
mu_stream_t	*(struct)
ostr	*(struct)
,	O
mu_message_t	*(struct)
msg	*(struct)
,	O
mbox_data_t	*(struct)
mud	*(struct)
,	O
int	O
flags	int
)	O
{	O
size_t	long
uid	int
=	O
0	int
;	O
if	O
(	O
flags	int
&	O
MBOX_EXPUNGE	int
)	O
{	O
int	O
status	int
=	O
mu_message_get_uid	(*(struct),*(long))->(int)
(	O
msg	*(struct)
,	O
&	O
uid	int
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
}	O
else	O
uid	int
=	O
mud	*(struct)
->	O
uidnext	long
++	O
;	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
ostr	*(struct)
,	O
"%s: %u\n"	*(char)
,	O
MU_HEADER_X_UID	*(char)
,	O
(	O
unsigned	O
)	O
uid	int
)	O
;	O
if	O
(	O
mu_stream_err	(*(struct))->(int)
(	O
ostr	*(struct)
)	O
)	O
return	O
mu_stream_last_error	(*(struct))->(int)
(	O
ostr	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
append_message_to_stream	(*(struct),*(struct),*(struct(*(*(struct`)),long,long,long,long,long,*(char),*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),int)->(int)
(	O
mu_stream_t	*(struct)
ostr	*(struct)
,	O
mu_message_t	*(struct)
msg	*(struct)
,	O
mbox_data_t	*(struct)
mud	*(struct)
,	O
int	O
flags	int
)	O
{	O
int	O
status	int
;	O
mu_stream_t	*(struct)
istr	*(struct)
,	O
flt	*((*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)))),*(void))->(int))
;	O
status	int
=	O
msg_envelope_to_stream	(*(struct),*(struct))->(int)
(	O
ostr	*(struct)
,	O
msg	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
if	O
(	O
flags	int
&	O
MBOX_EXPUNGE	int
)	O
{	O
mu_body_t	*(struct)
body	*(struct)
;	O
status	int
=	O
msg_header_to_stream	(*(struct),*(struct))->(int)
(	O
ostr	*(struct)
,	O
msg	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
if	O
(	O
flags	int
&	O
MBOX_FIRSTMSG	int
)	O
{	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
ostr	*(struct)
,	O
"%s: %lu %u\n"	*(char)
,	O
MU_HEADER_X_IMAPBASE	*(char)
,	O
(	O
unsigned	O
long	O
)	O
mud	*(struct)
->	O
uidvalidity	long
,	O
(	O
unsigned	O
)	O
mud	*(struct)
->	O
uidnext	long
)	O
;	O
if	O
(	O
mu_stream_err	(*(struct))->(int)
(	O
ostr	*(struct)
)	O
)	O
return	O
mu_stream_last_error	(*(struct))->(int)
(	O
ostr	*(struct)
)	O
;	O
}	O
status	int
=	O
msg_attr_to_stream	(*(struct),*(struct))->(int)
(	O
ostr	*(struct)
,	O
msg	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
uid_to_stream	(*(struct),*(struct),*(struct(*(*(struct`)),long,long,long,long,long,*(char),*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),int)->(int)
(	O
ostr	*(struct)
,	O
msg	*(struct)
,	O
mud	*(struct)
,	O
flags	int
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
ostr	*(struct)
,	O
"\n"	*(char)
,	O
1	int
,	O
NULL	O
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
mu_message_get_body	(*(struct),*(*(struct)))->(int)
(	O
msg	*(struct)
,	O
&	O
body	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
mu_body_get_streamref	(*(struct),*(*(struct)))->(int)
(	O
body	*(struct)
,	O
&	O
istr	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
}	O
else	O
{	O
status	int
=	O
mu_message_get_streamref	(*(struct),*(*(struct)))->(int)
(	O
msg	*(struct)
,	O
&	O
istr	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
}	O
status	int
=	O
mu_filter_create	(*(*(struct)),*(struct),*(char),int,int)->(int)
(	O
&	O
flt	*((*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)))),*(void))->(int))
,	O
istr	*(struct)
,	O
"FROM"	*(char)
,	O
MU_FILTER_ENCODE	int
,	O
MU_STREAM_READ	int
)	O
;	O
mu_stream_unref	(*(struct))->(void)
(	O
istr	*(struct)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
status	int
=	O
mu_stream_copy	(*(struct),*(struct),long,*(long))->(int)
(	O
ostr	*(struct)
,	O
flt	*((*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)))),*(void))->(int))
,	O
0	int
,	O
NULL	O
)	O
;	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
flt	*((*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)))),*(void))->(int))
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
status	int
=	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
ostr	*(struct)
,	O
"\n"	*(char)
,	O
1	int
,	O
NULL	O
)	O
;	O
}	O
return	O
status	int
;	O
}	O
static	O
int	O
mbox_append_message	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct))->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
mu_message_t	*(struct)
msg	*(struct)
)	O
{	O
int	O
status	int
=	O
0	int
;	O
mbox_data_t	*(struct)
mud	*(struct)
=	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
;	O
mu_off_t	long
size	*(long)
;	O
if	O
(	O
msg	*(struct)
==	O
NULL	O
||	O
mud	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_TRACE1	int
,	O
(	O
"mbox_append_message (%s)"	*(char)
,	O
mud	*(struct)
->	O
name	*(char)
)	O
)	O
;	O
if	O
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
locker	*(struct)
&&	O
(	O
status	int
=	O
mu_locker_lock	(*(struct))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
locker	*(struct)
)	O
)	O
!=	O
0	int
)	O
{	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_TRACE1	int
,	O
(	O
"mbox_append_message: %s"	*(char)
,	O
mu_strerror	(int)->(*(char))
(	O
status	int
)	O
)	O
)	O
;	O
return	O
status	int
;	O
}	O
status	int
=	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
0	int
,	O
MU_SEEK_END	int
,	O
&	O
size	*(long)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
append_message_to_stream	(*(struct),*(struct),*(struct(*(*(struct`)),long,long,long,long,long,*(char),*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),int)->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
msg	*(struct)
,	O
mud	*(struct)
,	O
0	int
)	O
;	O
if	O
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
locker	*(struct)
)	O
mu_locker_unlock	(*(struct))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
locker	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
{	O
int	O
rc	int
=	O
mu_stream_truncate	(*(struct),long)->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
size	*(long)
)	O
;	O
if	O
(	O
rc	int
)	O
mu_error	(*(char))->(int)
(	O
_	O
(	O
"cannot truncate stream after failed append: %s"	*(char)
)	O
,	O
mu_stream_strerror	(*(struct),int)->(*(char))
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
rc	int
)	O
)	O
;	O
return	O
status	int
;	O
}	O
if	O
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
observable	*(struct)
)	O
{	O
char	O
*	O
buf	*(char)
=	O
NULL	O
;	O
mu_asprintf	(*(*(char)),*(char))->(int)
(	O
&	O
buf	*(char)
,	O
"%lu"	*(char)
,	O
(	O
unsigned	O
long	O
)	O
size	*(long)
)	O
;	O
mu_observable_notify	(*(struct),int,*(void))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
observable	*(struct)
,	O
MU_EVT_MAILBOX_MESSAGE_APPEND	int
,	O
buf	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
buf	*(char)
)	O
;	O
}	O
return	O
0	int
;	O
}	O
static	O
void	O
mbox_reset	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(void)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
)	O
{	O
mbox_data_t	*(struct)
mud	*(struct)
=	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
;	O
size_t	long
i	long
;	O
mu_monitor_wrlock	(*(struct(*(void),*(void),int,int)))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
monitor	*(struct(*(void),*(void),int,int))
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
mud	*(struct)
->	O
messages_count	long
;	O
i	long
++	O
)	O
{	O
mbox_message_t	*(struct)
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
=	O
mud	*(struct)
->	O
umessages	*(*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))
[	O
i	long
]	O
;	O
mu_message_destroy	(*(*(struct)),*(void))->(void)
(	O
&	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
message	*(struct)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
,	O
0	int
,	O
sizeof	O
(	O
*	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
)	O
;	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
envel_from	long
=	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
envel_from_end	long
=	O
0	int
;	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
body	*(struct)
=	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
body_end	long
=	O
0	int
;	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
header_lines	long
=	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
body_lines	long
=	O
0	int
;	O
}	O
mu_monitor_unlock	(*(struct(*(void),*(void),int,int)))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
monitor	*(struct(*(void),*(void),int,int))
)	O
;	O
mbox_scan0	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(long),int)->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
1	int
,	O
NULL	O
,	O
0	int
)	O
;	O
}	O
static	O
int	O
mbox_expunge_unlocked	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,int,*(struct))->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
size_t	long
dirty	long
,	O
int	O
remove_deleted	int
,	O
mu_stream_t	*(struct)
tempstr	*(struct)
)	O
{	O
mbox_data_t	*(struct)
mud	*(struct)
=	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
;	O
int	O
status	int
;	O
size_t	long
i	long
;	O
size_t	long
save_imapbase	long
=	O
0	int
;	O
mu_off_t	long
start_off	long
;	O
mu_off_t	long
size	*(long)
;	O
size_t	long
expcount	long
=	O
0	int
;	O
start_off	long
=	O
mud	*(struct)
->	O
umessages	*(*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))
[	O
dirty	long
]	O
->	O
envel_from	long
;	O
for	O
(	O
i	long
=	O
dirty	long
;	O
i	long
<	O
mud	*(struct)
->	O
messages_count	long
;	O
i	long
++	O
)	O
{	O
mbox_message_t	*(struct)
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
=	O
mud	*(struct)
->	O
umessages	*(*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))
[	O
i	long
]	O
;	O
if	O
(	O
remove_deleted	int
&&	O
ATTRIBUTE_IS_DELETED	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
attr_flags	int
)	O
)	O
{	O
size_t	long
expevt	array(long)
[	O
2	int
]	O
=	O
{	O
i	long
+	O
1	int
,	O
expcount	long
}	O
;	O
mu_observable_notify	(*(struct),int,*(void))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
observable	*(struct)
,	O
MU_EVT_MAILBOX_MESSAGE_EXPUNGE	int
,	O
expevt	array(long)
)	O
;	O
expcount	long
++	O
;	O
mu_message_destroy	(*(*(struct)),*(void))->(void)
(	O
&	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
message	*(struct)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
;	O
if	O
(	O
i	long
==	O
save_imapbase	long
)	O
{	O
save_imapbase	long
=	O
i	long
+	O
1	int
;	O
if	O
(	O
save_imapbase	long
<	O
mud	*(struct)
->	O
messages_count	long
)	O
mud	*(struct)
->	O
umessages	*(*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))
[	O
save_imapbase	long
]	O
->	O
attr_flags	int
|=	O
MU_ATTRIBUTE_MODIFIED	int
;	O
}	O
continue	O
;	O
}	O
if	O
(	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
attr_flags	int
&	O
MU_ATTRIBUTE_MODIFIED	int
)	O
||	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
message	*(struct)
&&	O
mu_message_is_modified	(*(struct))->(int)
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
message	*(struct)
)	O
)	O
)	O
{	O
int	O
flags	int
=	O
MBOX_EXPUNGE	int
|	O
(	O
(	O
i	long
==	O
save_imapbase	long
)	O
?	O
MBOX_FIRSTMSG	int
:	O
0	int
)	O
;	O
if	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
message	*(struct)
==	O
0	int
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
;	O
status	int
=	O
mbox_get_message	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(*(struct)))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
i	long
+	O
1	int
,	O
&	O
msg	*(struct)
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
{	O
mu_error	(*(char))->(int)
(	O
_	O
(	O
"%s:%d: error expunging: %s"	*(char)
)	O
,	O
__FILE__	O
,	O
__LINE__	O
,	O
mu_strerror	(int)->(*(char))
(	O
status	int
)	O
)	O
;	O
return	O
status	int
;	O
}	O
}	O
status	int
=	O
append_message_to_stream	(*(struct),*(struct),*(struct(*(*(struct`)),long,long,long,long,long,*(char),*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),int)->(int)
(	O
tempstr	*(struct)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
message	*(struct)
,	O
mud	*(struct)
,	O
flags	int
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
{	O
mu_error	(*(char))->(int)
(	O
_	O
(	O
"%s:%d: error expunging: %s"	*(char)
)	O
,	O
__FILE__	O
,	O
__LINE__	O
,	O
mu_strerror	(int)->(*(char))
(	O
status	int
)	O
)	O
;	O
return	O
status	int
;	O
}	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
attr_flags	int
&=	O
~	O
MU_ATTRIBUTE_MODIFIED	int
;	O
mu_message_clear_modified	(*(struct))->(int)
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
message	*(struct)
)	O
;	O
}	O
else	O
{	O
status	int
=	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
envel_from	long
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
if	O
(	O
status	int
)	O
{	O
mu_error	(*(char))->(int)
(	O
_	O
(	O
"%s:%d: seek error: %s"	*(char)
)	O
,	O
__FILE__	O
,	O
__LINE__	O
,	O
mu_stream_strerror	(*(struct),int)->(*(char))
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
status	int
)	O
)	O
;	O
return	O
status	int
;	O
}	O
status	int
=	O
mu_stream_copy	(*(struct),*(struct),long,*(long))->(int)
(	O
tempstr	*(struct)
,	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
body_end	long
-	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
envel_from	long
,	O
NULL	O
)	O
;	O
if	O
(	O
status	int
)	O
{	O
mu_error	(*(char))->(int)
(	O
_	O
(	O
"%s:%d: error copying: %s"	*(char)
)	O
,	O
__FILE__	O
,	O
__LINE__	O
,	O
mu_strerror	(int)->(*(char))
(	O
status	int
)	O
)	O
;	O
return	O
status	int
;	O
}	O
}	O
}	O
if	O
(	O
mu_stream_size	(*(struct),*(long))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
&	O
size	*(long)
)	O
==	O
0	int
)	O
{	O
if	O
(	O
size	*(long)
>	O
mud	*(struct)
->	O
size	*(long)
)	O
{	O
mu_off_t	long
len	long
=	O
size	*(long)
-	O
mud	*(struct)
->	O
size	*(long)
;	O
status	int
=	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
mud	*(struct)
->	O
size	*(long)
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
if	O
(	O
status	int
)	O
{	O
mu_error	(*(char))->(int)
(	O
_	O
(	O
"%s:%d: seek error: %s"	*(char)
)	O
,	O
__FILE__	O
,	O
__LINE__	O
,	O
mu_stream_strerror	(*(struct),int)->(*(char))
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
status	int
)	O
)	O
;	O
return	O
status	int
;	O
}	O
status	int
=	O
mu_stream_copy	(*(struct),*(struct),long,*(long))->(int)
(	O
tempstr	*(struct)
,	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
len	long
,	O
NULL	O
)	O
;	O
if	O
(	O
status	int
)	O
{	O
mu_error	(*(char))->(int)
(	O
_	O
(	O
"%s:%d: error writing to temporary stream: %s"	*(char)
)	O
,	O
__FILE__	O
,	O
__LINE__	O
,	O
mu_strerror	(int)->(*(char))
(	O
status	int
)	O
)	O
;	O
return	O
status	int
;	O
}	O
}	O
else	O
if	O
(	O
size	*(long)
<	O
mud	*(struct)
->	O
size	*(long)
)	O
{	O
mu_observable_notify	(*(struct),int,*(void))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
observable	*(struct)
,	O
MU_EVT_MAILBOX_CORRUPT	int
,	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
)	O
;	O
mu_error	(*(char))->(int)
(	O
_	O
(	O
"%s:%d: mailbox shrunk while expunging"	*(char)
)	O
,	O
__FILE__	O
,	O
__LINE__	O
)	O
;	O
return	O
MU_ERR_FAILURE	O
;	O
}	O
}	O
status	int
=	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
start_off	long
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
if	O
(	O
status	int
)	O
{	O
mu_error	(*(char))->(int)
(	O
_	O
(	O
"%s:%d: seek error: %s"	*(char)
)	O
,	O
__FILE__	O
,	O
__LINE__	O
,	O
mu_stream_strerror	(*(struct),int)->(*(char))
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
status	int
)	O
)	O
;	O
return	O
status	int
;	O
}	O
status	int
=	O
mu_stream_size	(*(struct),*(long))->(int)
(	O
tempstr	*(struct)
,	O
&	O
size	*(long)
)	O
;	O
if	O
(	O
status	int
)	O
{	O
mu_error	(*(char))->(int)
(	O
_	O
(	O
"%s:%d: cannot get size of the temp stream: %s"	*(char)
)	O
,	O
__FILE__	O
,	O
__LINE__	O
,	O
mu_stream_strerror	(*(struct),int)->(*(char))
(	O
tempstr	*(struct)
,	O
status	int
)	O
)	O
;	O
return	O
status	int
;	O
}	O
status	int
=	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
tempstr	*(struct)
,	O
0	int
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
if	O
(	O
status	int
)	O
{	O
mu_error	(*(char))->(int)
(	O
_	O
(	O
"%s:%d: seek error: %s"	*(char)
)	O
,	O
__FILE__	O
,	O
__LINE__	O
,	O
mu_stream_strerror	(*(struct),int)->(*(char))
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
status	int
)	O
)	O
;	O
return	O
status	int
;	O
}	O
status	int
=	O
mu_stream_copy	(*(struct),*(struct),long,*(long))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
tempstr	*(struct)
,	O
size	*(long)
,	O
NULL	O
)	O
;	O
if	O
(	O
status	int
)	O
{	O
mu_error	(*(char))->(int)
(	O
_	O
(	O
"%s:%d: copying from the temporary stream: %s"	*(char)
)	O
,	O
__FILE__	O
,	O
__LINE__	O
,	O
mu_strerror	(int)->(*(char))
(	O
status	int
)	O
)	O
;	O
return	O
status	int
;	O
}	O
status	int
=	O
mu_stream_truncate	(*(struct),long)->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
start_off	long
+	O
size	*(long)
)	O
;	O
if	O
(	O
status	int
)	O
{	O
mu_error	(*(char))->(int)
(	O
_	O
(	O
"%s:%d: error truncating stream: %s"	*(char)
)	O
,	O
__FILE__	O
,	O
__LINE__	O
,	O
mu_strerror	(int)->(*(char))
(	O
status	int
)	O
)	O
;	O
}	O
return	O
status	int
;	O
}	O
static	O
int	O
mbox_expunge0	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),int)->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
int	O
remove_deleted	int
)	O
{	O
mbox_data_t	*(struct)
mud	*(struct)
=	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
;	O
size_t	long
dirty	long
;	O
int	O
status	int
;	O
mu_stream_t	*(struct)
tempstr	*(struct)
;	O
if	O
(	O
mud	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_TRACE1	int
,	O
(	O
"mbox_expunge (%s)"	*(char)
,	O
mud	*(struct)
->	O
name	*(char)
)	O
)	O
;	O
if	O
(	O
mud	*(struct)
->	O
messages_count	long
==	O
0	int
)	O
{	O
int	O
status	int
;	O
if	O
(	O
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
flags	int
&	O
MU_STREAM_APPEND	int
)	O
&&	O
!	O
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
flags	int
&	O
MU_STREAM_READ	int
)	O
)	O
return	O
mu_stream_flush	(*(struct))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
)	O
;	O
status	int
=	O
mbox_scan0	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(long),int)->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
1	int
,	O
NULL	O
,	O
0	int
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
return	O
status	int
;	O
if	O
(	O
mud	*(struct)
->	O
messages_count	long
==	O
0	int
)	O
return	O
0	int
;	O
}	O
for	O
(	O
dirty	long
=	O
0	int
;	O
dirty	long
<	O
mud	*(struct)
->	O
messages_count	long
;	O
dirty	long
++	O
)	O
{	O
mbox_message_t	*(struct)
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
=	O
mud	*(struct)
->	O
umessages	*(*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))
[	O
dirty	long
]	O
;	O
if	O
(	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
attr_flags	int
&	O
MU_ATTRIBUTE_MODIFIED	int
)	O
||	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
attr_flags	int
&	O
MU_ATTRIBUTE_DELETED	int
)	O
||	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
message	*(struct)
&&	O
mu_message_is_modified	(*(struct))->(int)
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
message	*(struct)
)	O
)	O
)	O
break	O
;	O
}	O
if	O
(	O
dirty	long
==	O
mud	*(struct)
->	O
messages_count	long
)	O
return	O
0	int
;	O
if	O
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
flags	int
&	O
MU_STREAM_APPEND	int
)	O
return	O
mu_stream_flush	(*(struct))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
)	O
;	O
if	O
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
locker	*(struct)
&&	O
(	O
status	int
=	O
mu_locker_lock	(*(struct))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
locker	*(struct)
)	O
)	O
!=	O
0	int
)	O
return	O
status	int
;	O
status	int
=	O
mu_temp_file_stream_create	(*(*(struct)),*(struct(*(char),*(char))),int)->(int)
(	O
&	O
tempstr	*(struct)
,	O
NULL	O
,	O
0	int
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
sigset_t	struct(array(long))
signalset	struct(array(long))
;	O
int	O
state	*(int)
;	O
pthread_setcancelstate	(int,*(int))->(int)
(	O
PTHREAD_CANCEL_DISABLE	int
,	O
&	O
state	*(int)
)	O
;	O
sigemptyset	(*(struct(array(long))))->(int)
(	O
&	O
signalset	struct(array(long))
)	O
;	O
sigaddset	(*(struct(array(long))),int)->(int)
(	O
&	O
signalset	struct(array(long))
,	O
SIGTERM	int
)	O
;	O
sigaddset	(*(struct(array(long))),int)->(int)
(	O
&	O
signalset	struct(array(long))
,	O
SIGHUP	int
)	O
;	O
sigaddset	(*(struct(array(long))),int)->(int)
(	O
&	O
signalset	struct(array(long))
,	O
SIGTSTP	int
)	O
;	O
sigaddset	(*(struct(array(long))),int)->(int)
(	O
&	O
signalset	struct(array(long))
,	O
SIGINT	int
)	O
;	O
sigaddset	(*(struct(array(long))),int)->(int)
(	O
&	O
signalset	struct(array(long))
,	O
SIGWINCH	int
)	O
;	O
sigprocmask	(int,*(struct(array(long))),*(struct(array(long))))->(int)
(	O
SIG_BLOCK	int
,	O
&	O
signalset	struct(array(long))
,	O
0	int
)	O
;	O
status	int
=	O
mbox_expunge_unlocked	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,int,*(struct))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
dirty	long
,	O
remove_deleted	int
,	O
tempstr	*(struct)
)	O
;	O
pthread_setcancelstate	(int,*(int))->(int)
(	O
state	*(int)
,	O
&	O
state	*(int)
)	O
;	O
sigprocmask	(int,*(struct(array(long))),*(struct(array(long))))->(int)
(	O
SIG_UNBLOCK	int
,	O
&	O
signalset	struct(array(long))
,	O
0	int
)	O
;	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
tempstr	*(struct)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
mbox_reset	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(void)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
)	O
;	O
}	O
if	O
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
locker	*(struct)
)	O
mu_locker_unlock	(*(struct))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
locker	*(struct)
)	O
;	O
return	O
status	int
;	O
}	O
static	O
int	O
mbox_get_atime	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
time_t	long
*	O
return_time	*(long)
)	O
{	O
mbox_data_t	*(struct)
mud	*(struct)
=	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
;	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
st	*(struct(long,long,long))
;	O
if	O
(	O
mud	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
(	O
mud	*(struct)
->	O
name	*(char)
,	O
&	O
st	*(struct(long,long,long))
)	O
)	O
return	O
errno	O
;	O
*	O
return_time	*(long)
=	O
st	*(struct(long,long,long))
.	O
st_atime	O
;	O
return	O
0	int
;	O
}	O
int	O
_mailbox_mbox_init	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
)	O
{	O
int	O
status	int
;	O
mbox_data_t	*(struct)
mud	*(struct)
;	O
if	O
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
mud	*(struct)
=	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
=	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
*	O
mud	*(struct)
)	O
)	O
;	O
if	O
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
mud	*(struct)
->	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
=	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
;	O
status	int
=	O
mu_url_aget_path	(*(struct),*(*(char)))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
url	*(struct)
,	O
&	O
mud	*(struct)
->	O
name	*(char)
)	O
;	O
if	O
(	O
status	int
)	O
{	O
free	(*(void))->(void)
(	O
mud	*(struct)
)	O
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
=	O
NULL	O
;	O
return	O
status	int
;	O
}	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_destroy	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(void))
=	O
mbox_destroy	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(void)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_open	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),int)->(int))
=	O
mbox_open	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),int)->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_close	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int))
=	O
mbox_close	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_remove	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int))
=	O
mbox_remove	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_get_message	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(*(struct)))->(int))
=	O
mbox_get_message	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(*(struct)))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_append_message	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct))->(int))
=	O
mbox_append_message	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_messages_count	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int))
=	O
mbox_messages_count	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_messages_recent	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int))
=	O
mbox_messages_recent	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_message_unseen	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int))
=	O
mbox_message_unseen	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_expunge	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int))
=	O
mbox_expunge	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_sync	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int))
=	O
mbox_sync	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_uidvalidity	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int))
=	O
mbox_uidvalidity	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_uidnext	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int))
=	O
mbox_uidnext	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_quick_get_message	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(char),*(*(struct)))->(int))
=	O
mbox_quick_get_message	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(char),*(*(struct)))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_scan	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(long))->(int))
=	O
mbox_scan	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(long))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_is_updated	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int))
=	O
mbox_is_updated	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_get_size	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int))
=	O
mbox_get_size	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_get_atime	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int))
=	O
mbox_get_atime	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
;	O
{	O
mu_property_t	*(struct)
property	*(struct)
=	O
NULL	O
;	O
mu_mailbox_get_property	(*(struct),*(*(struct)))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
&	O
property	*(struct)
)	O
;	O
mu_property_set_value	(*(struct),*(char),*(char),int)->(int)
(	O
property	*(struct)
,	O
"TYPE"	*(char)
,	O
"MBOX"	*(char)
,	O
1	int
)	O
;	O
}	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_TRACE1	int
,	O
(	O
"mbox_init (%s)"	*(char)
,	O
mud	*(struct)
->	O
name	*(char)
)	O
)	O
;	O
return	O
0	int
;	O
}	O
