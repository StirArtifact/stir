bfd_boolean	int
_bfd_x86_elf_mkobject	O
(	O
bfd	struct
*	O
abfd	*(struct)
)	O
{	O
return	O
bfd_elf_allocate_object	O
(	O
abfd	*(struct)
,	O
sizeof	O
(	O
struct	O
elf_x86_obj_tdata	O
)	O
,	O
get_elf_backend_data	O
(	O
abfd	*(struct)
)	O
->	O
target_id	O
)	O
;	O
}	O
void	O
_bfd_x86_elf_set_tls_module_base	O
(	O
struct	O
bfd_link_info	O
*	O
info	*(void)
)	O
{	O
struct	O
elf_x86_link_hash_table	O
*	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
;	O
struct	O
bfd_link_hash_entry	O
*	O
base	int
;	O
const	O
struct	O
elf_backend_data	O
*	O
bed	O
;	O
if	O
(	O
!	O
bfd_link_executable	O
(	O
info	*(void)
)	O
)	O
return	O
;	O
bed	O
=	O
get_elf_backend_data	O
(	O
info	*(void)
->	O
output_bfd	*(struct)
)	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
=	O
elf_x86_hash_table	O
(	O
info	*(void)
,	O
bed	O
->	O
target_id	O
)	O
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
==	O
NULL	O
)	O
return	O
;	O
base	int
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
tls_module_base	O
;	O
if	O
(	O
base	int
==	O
NULL	O
)	O
return	O
;	O
base	int
->	O
u	union(long,*(struct))
.	O
def	O
.	O
value	long
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
tls_size	O
;	O
}	O
bfd_vma	long
_bfd_x86_elf_dtpoff_base	O
(	O
struct	O
bfd_link_info	O
*	O
info	*(void)
)	O
{	O
if	O
(	O
elf_hash_table	O
(	O
info	*(void)
)	O
->	O
tls_sec	O
==	O
NULL	O
)	O
return	O
0	int
;	O
return	O
elf_hash_table	O
(	O
info	*(void)
)	O
->	O
tls_sec	O
->	O
vma	long
;	O
}	O
static	O
bfd_boolean	int
elf_x86_allocate_dynrelocs	O
(	O
struct	O
elf_link_hash_entry	O
*	O
h	O
,	O
void	O
*	O
inf	O
)	O
{	O
struct	O
bfd_link_info	O
*	O
info	*(void)
;	O
struct	O
elf_x86_link_hash_table	O
*	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
;	O
struct	O
elf_x86_link_hash_entry	O
*	O
eh	O
;	O
struct	O
elf_dyn_relocs	O
*	O
p	*(void)
;	O
unsigned	O
int	O
plt_entry_size	O
;	O
bfd_boolean	int
resolved_to_zero	O
;	O
const	O
struct	O
elf_backend_data	O
*	O
bed	O
;	O
if	O
(	O
h	O
->	O
root	O
.	O
type	enum(int,int,int,int)
==	O
bfd_link_hash_indirect	O
)	O
return	O
TRUE	int
;	O
eh	O
=	O
(	O
struct	O
elf_x86_link_hash_entry	O
*	O
)	O
h	O
;	O
info	*(void)
=	O
(	O
struct	O
bfd_link_info	O
*	O
)	O
inf	O
;	O
bed	O
=	O
get_elf_backend_data	O
(	O
info	*(void)
->	O
output_bfd	*(struct)
)	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
=	O
elf_x86_hash_table	O
(	O
info	*(void)
,	O
bed	O
->	O
target_id	O
)	O
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
==	O
NULL	O
)	O
return	O
FALSE	O
;	O
plt_entry_size	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
plt_entry_size	O
;	O
resolved_to_zero	O
=	O
UNDEFINED_WEAK_RESOLVED_TO_ZERO	O
(	O
info	*(void)
,	O
eh	O
)	O
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got	O
!=	O
NULL	O
&&	O
h	O
->	O
type	enum(int,int,int,int)
!=	O
STT_GNU_IFUNC	O
&&	O
!	O
h	O
->	O
pointer_equality_needed	O
&&	O
h	O
->	O
plt	O
.	O
refcount	O
>	O
0	int
&&	O
h	O
->	O
got	O
.	O
refcount	O
>	O
0	int
)	O
{	O
h	O
->	O
plt	O
.	O
offset	long
=	O
(	O
bfd_vma	long
)	O
-	O
1	int
;	O
eh	O
->	O
plt_got	O
.	O
refcount	O
=	O
1	int
;	O
}	O
if	O
(	O
h	O
->	O
type	enum(int,int,int,int)
==	O
STT_GNU_IFUNC	O
&&	O
h	O
->	O
def_regular	O
)	O
{	O
if	O
(	O
_bfd_elf_allocate_ifunc_dyn_relocs	O
(	O
info	*(void)
,	O
h	O
,	O
&	O
eh	O
->	O
dyn_relocs	O
,	O
&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
readonly_dynrelocs_against_ifunc	O
,	O
plt_entry_size	O
,	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
has_plt0	O
*	O
plt_entry_size	O
)	O
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
got_entry_size	O
,	O
TRUE	int
)	O
)	O
{	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
s	*(void)
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second	O
;	O
if	O
(	O
h	O
->	O
plt	O
.	O
offset	long
!=	O
(	O
bfd_vma	long
)	O
-	O
1	int
&&	O
s	*(void)
!=	O
NULL	O
)	O
{	O
eh	O
->	O
plt_second	O
.	O
offset	long
=	O
s	*(void)
->	O
size	long
;	O
s	*(void)
->	O
size	long
+=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
non_lazy_plt	O
->	O
plt_entry_size	O
;	O
}	O
return	O
TRUE	int
;	O
}	O
else	O
return	O
FALSE	O
;	O
}	O
else	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
dynamic_sections_created	O
&&	O
(	O
h	O
->	O
plt	O
.	O
refcount	O
>	O
0	int
||	O
eh	O
->	O
plt_got	O
.	O
refcount	O
>	O
0	int
)	O
)	O
{	O
bfd_boolean	int
use_plt_got	O
=	O
eh	O
->	O
plt_got	O
.	O
refcount	O
>	O
0	int
;	O
if	O
(	O
h	O
->	O
dynindx	O
==	O
-	O
1	int
&&	O
!	O
h	O
->	O
forced_local	O
&&	O
!	O
resolved_to_zero	O
&&	O
h	O
->	O
root	O
.	O
type	enum(int,int,int,int)
==	O
bfd_link_hash_undefweak	O
)	O
{	O
if	O
(	O
!	O
bfd_elf_link_record_dynamic_symbol	O
(	O
info	*(void)
,	O
h	O
)	O
)	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
bfd_link_pic	O
(	O
info	*(void)
)	O
||	O
WILL_CALL_FINISH_DYNAMIC_SYMBOL	O
(	O
1	int
,	O
0	int
,	O
h	O
)	O
)	O
{	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
s	*(void)
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
splt	O
;	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
second_s	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second	O
;	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
got_s	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got	O
;	O
bfd_boolean	int
use_plt	O
;	O
if	O
(	O
s	*(void)
->	O
size	long
==	O
0	int
)	O
s	*(void)
->	O
size	long
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
has_plt0	O
*	O
plt_entry_size	O
;	O
if	O
(	O
use_plt_got	O
)	O
eh	O
->	O
plt_got	O
.	O
offset	long
=	O
got_s	O
->	O
size	long
;	O
else	O
{	O
h	O
->	O
plt	O
.	O
offset	long
=	O
s	*(void)
->	O
size	long
;	O
if	O
(	O
second_s	O
)	O
eh	O
->	O
plt_second	O
.	O
offset	long
=	O
second_s	O
->	O
size	long
;	O
}	O
if	O
(	O
h	O
->	O
def_regular	O
)	O
use_plt	O
=	O
FALSE	O
;	O
else	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
pcrel_plt	O
)	O
use_plt	O
=	O
!	O
bfd_link_dll	O
(	O
info	*(void)
)	O
;	O
else	O
use_plt	O
=	O
bfd_link_pde	O
(	O
info	*(void)
)	O
;	O
if	O
(	O
use_plt	O
)	O
{	O
if	O
(	O
use_plt_got	O
)	O
{	O
h	O
->	O
root	O
.	O
u	union(long,*(struct))
.	O
def	O
.	O
section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
=	O
got_s	O
;	O
h	O
->	O
root	O
.	O
u	union(long,*(struct))
.	O
def	O
.	O
value	long
=	O
eh	O
->	O
plt_got	O
.	O
offset	long
;	O
}	O
else	O
{	O
if	O
(	O
second_s	O
)	O
{	O
h	O
->	O
root	O
.	O
u	union(long,*(struct))
.	O
def	O
.	O
section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
=	O
second_s	O
;	O
h	O
->	O
root	O
.	O
u	union(long,*(struct))
.	O
def	O
.	O
value	long
=	O
eh	O
->	O
plt_second	O
.	O
offset	long
;	O
}	O
else	O
{	O
h	O
->	O
root	O
.	O
u	union(long,*(struct))
.	O
def	O
.	O
section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
=	O
s	*(void)
;	O
h	O
->	O
root	O
.	O
u	union(long,*(struct))
.	O
def	O
.	O
value	long
=	O
h	O
->	O
plt	O
.	O
offset	long
;	O
}	O
}	O
}	O
if	O
(	O
use_plt_got	O
)	O
got_s	O
->	O
size	long
+=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
non_lazy_plt	O
->	O
plt_entry_size	O
;	O
else	O
{	O
s	*(void)
->	O
size	long
+=	O
plt_entry_size	O
;	O
if	O
(	O
second_s	O
)	O
second_s	O
->	O
size	long
+=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
non_lazy_plt	O
->	O
plt_entry_size	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgotplt	O
->	O
size	long
+=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
got_entry_size	O
;	O
if	O
(	O
!	O
resolved_to_zero	O
)	O
{	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
srelplt	O
->	O
size	long
+=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
sizeof_reloc	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
srelplt	O
->	O
reloc_count	int
++	O
;	O
}	O
}	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
target_os	O
==	O
is_vxworks	O
&&	O
!	O
bfd_link_pic	O
(	O
info	*(void)
)	O
)	O
{	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
srelplt2	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
srelplt2	O
;	O
if	O
(	O
h	O
->	O
plt	O
.	O
offset	long
==	O
plt_entry_size	O
)	O
srelplt2	O
->	O
size	long
+=	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
sizeof_reloc	O
*	O
2	int
)	O
;	O
srelplt2	O
->	O
size	long
+=	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
sizeof_reloc	O
*	O
2	int
)	O
;	O
}	O
}	O
else	O
{	O
eh	O
->	O
plt_got	O
.	O
offset	long
=	O
(	O
bfd_vma	long
)	O
-	O
1	int
;	O
h	O
->	O
plt	O
.	O
offset	long
=	O
(	O
bfd_vma	long
)	O
-	O
1	int
;	O
h	O
->	O
needs_plt	O
=	O
0	int
;	O
}	O
}	O
else	O
{	O
eh	O
->	O
plt_got	O
.	O
offset	long
=	O
(	O
bfd_vma	long
)	O
-	O
1	int
;	O
h	O
->	O
plt	O
.	O
offset	long
=	O
(	O
bfd_vma	long
)	O
-	O
1	int
;	O
h	O
->	O
needs_plt	O
=	O
0	int
;	O
}	O
eh	O
->	O
tlsdesc_got	O
=	O
(	O
bfd_vma	long
)	O
-	O
1	int
;	O
if	O
(	O
h	O
->	O
got	O
.	O
refcount	O
>	O
0	int
&&	O
bfd_link_executable	O
(	O
info	*(void)
)	O
&&	O
h	O
->	O
dynindx	O
==	O
-	O
1	int
&&	O
(	O
elf_x86_hash_entry	O
(	O
h	O
)	O
->	O
tls_type	O
&	O
GOT_TLS_IE	O
)	O
)	O
h	O
->	O
got	O
.	O
offset	long
=	O
(	O
bfd_vma	long
)	O
-	O
1	int
;	O
else	O
if	O
(	O
h	O
->	O
got	O
.	O
refcount	O
>	O
0	int
)	O
{	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
s	*(void)
;	O
bfd_boolean	int
dyn	O
;	O
int	O
tls_type	O
=	O
elf_x86_hash_entry	O
(	O
h	O
)	O
->	O
tls_type	O
;	O
if	O
(	O
h	O
->	O
dynindx	O
==	O
-	O
1	int
&&	O
!	O
h	O
->	O
forced_local	O
&&	O
!	O
resolved_to_zero	O
&&	O
h	O
->	O
root	O
.	O
type	enum(int,int,int,int)
==	O
bfd_link_hash_undefweak	O
)	O
{	O
if	O
(	O
!	O
bfd_elf_link_record_dynamic_symbol	O
(	O
info	*(void)
,	O
h	O
)	O
)	O
return	O
FALSE	O
;	O
}	O
s	*(void)
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgot	O
;	O
if	O
(	O
GOT_TLS_GDESC_P	O
(	O
tls_type	O
)	O
)	O
{	O
eh	O
->	O
tlsdesc_got	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgotplt	O
->	O
size	long
-	O
elf_x86_compute_jump_table_size	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
)	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgotplt	O
->	O
size	long
+=	O
2	int
*	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
got_entry_size	O
;	O
h	O
->	O
got	O
.	O
offset	long
=	O
(	O
bfd_vma	long
)	O
-	O
2	int
;	O
}	O
if	O
(	O
!	O
GOT_TLS_GDESC_P	O
(	O
tls_type	O
)	O
||	O
GOT_TLS_GD_P	O
(	O
tls_type	O
)	O
)	O
{	O
h	O
->	O
got	O
.	O
offset	long
=	O
s	*(void)
->	O
size	long
;	O
s	*(void)
->	O
size	long
+=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
got_entry_size	O
;	O
if	O
(	O
GOT_TLS_GD_P	O
(	O
tls_type	O
)	O
||	O
tls_type	O
==	O
GOT_TLS_IE_BOTH	O
)	O
s	*(void)
->	O
size	long
+=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
got_entry_size	O
;	O
}	O
dyn	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
dynamic_sections_created	O
;	O
if	O
(	O
tls_type	O
==	O
GOT_TLS_IE_BOTH	O
)	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
srelgot	O
->	O
size	long
+=	O
2	int
*	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
sizeof_reloc	O
;	O
else	O
if	O
(	O
(	O
GOT_TLS_GD_P	O
(	O
tls_type	O
)	O
&&	O
h	O
->	O
dynindx	O
==	O
-	O
1	int
)	O
||	O
(	O
tls_type	O
&	O
GOT_TLS_IE	O
)	O
)	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
srelgot	O
->	O
size	long
+=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
sizeof_reloc	O
;	O
else	O
if	O
(	O
GOT_TLS_GD_P	O
(	O
tls_type	O
)	O
)	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
srelgot	O
->	O
size	long
+=	O
2	int
*	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
sizeof_reloc	O
;	O
else	O
if	O
(	O
!	O
GOT_TLS_GDESC_P	O
(	O
tls_type	O
)	O
&&	O
(	O
(	O
ELF_ST_VISIBILITY	O
(	O
h	O
->	O
other	O
)	O
==	O
STV_DEFAULT	O
&&	O
!	O
resolved_to_zero	O
)	O
||	O
h	O
->	O
root	O
.	O
type	enum(int,int,int,int)
!=	O
bfd_link_hash_undefweak	O
)	O
&&	O
(	O
bfd_link_pic	O
(	O
info	*(void)
)	O
||	O
WILL_CALL_FINISH_DYNAMIC_SYMBOL	O
(	O
dyn	O
,	O
0	int
,	O
h	O
)	O
)	O
)	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
srelgot	O
->	O
size	long
+=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
sizeof_reloc	O
;	O
if	O
(	O
GOT_TLS_GDESC_P	O
(	O
tls_type	O
)	O
)	O
{	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
srelplt	O
->	O
size	long
+=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
sizeof_reloc	O
;	O
if	O
(	O
bed	O
->	O
target_id	O
==	O
X86_64_ELF_DATA	O
)	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
tlsdesc_plt	O
=	O
(	O
bfd_vma	long
)	O
-	O
1	int
;	O
}	O
}	O
else	O
h	O
->	O
got	O
.	O
offset	long
=	O
(	O
bfd_vma	long
)	O
-	O
1	int
;	O
if	O
(	O
eh	O
->	O
dyn_relocs	O
==	O
NULL	O
)	O
return	O
TRUE	int
;	O
if	O
(	O
bfd_link_pic	O
(	O
info	*(void)
)	O
)	O
{	O
if	O
(	O
SYMBOL_CALLS_LOCAL	O
(	O
info	*(void)
,	O
h	O
)	O
)	O
{	O
struct	O
elf_dyn_relocs	O
*	O
*	O
pp	O
;	O
for	O
(	O
pp	O
=	O
&	O
eh	O
->	O
dyn_relocs	O
;	O
(	O
p	*(void)
=	O
*	O
pp	O
)	O
!=	O
NULL	O
;	O
)	O
{	O
p	*(void)
->	O
count	int
-=	O
p	*(void)
->	O
pc_count	O
;	O
p	*(void)
->	O
pc_count	O
=	O
0	int
;	O
if	O
(	O
p	*(void)
->	O
count	int
==	O
0	int
)	O
*	O
pp	O
=	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
;	O
else	O
pp	O
=	O
&	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
;	O
}	O
}	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
target_os	O
==	O
is_vxworks	O
)	O
{	O
struct	O
elf_dyn_relocs	O
*	O
*	O
pp	O
;	O
for	O
(	O
pp	O
=	O
&	O
eh	O
->	O
dyn_relocs	O
;	O
(	O
p	*(void)
=	O
*	O
pp	O
)	O
!=	O
NULL	O
;	O
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
p	*(void)
->	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
name	*(char)
,	O
".tls_vars"	*(char)
)	O
==	O
0	int
)	O
*	O
pp	O
=	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
;	O
else	O
pp	O
=	O
&	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
;	O
}	O
}	O
if	O
(	O
eh	O
->	O
dyn_relocs	O
!=	O
NULL	O
)	O
{	O
if	O
(	O
h	O
->	O
root	O
.	O
type	enum(int,int,int,int)
==	O
bfd_link_hash_undefweak	O
)	O
{	O
if	O
(	O
ELF_ST_VISIBILITY	O
(	O
h	O
->	O
other	O
)	O
!=	O
STV_DEFAULT	O
||	O
resolved_to_zero	O
)	O
{	O
if	O
(	O
bed	O
->	O
target_id	O
==	O
I386_ELF_DATA	O
&&	O
h	O
->	O
non_got_ref	O
)	O
{	O
struct	O
elf_dyn_relocs	O
*	O
*	O
pp	O
;	O
for	O
(	O
pp	O
=	O
&	O
eh	O
->	O
dyn_relocs	O
;	O
(	O
p	*(void)
=	O
*	O
pp	O
)	O
!=	O
NULL	O
;	O
)	O
if	O
(	O
p	*(void)
->	O
pc_count	O
==	O
0	int
)	O
*	O
pp	O
=	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
;	O
else	O
{	O
p	*(void)
->	O
count	int
=	O
p	*(void)
->	O
pc_count	O
;	O
pp	O
=	O
&	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
;	O
}	O
if	O
(	O
eh	O
->	O
dyn_relocs	O
!=	O
NULL	O
&&	O
!	O
bfd_elf_link_record_dynamic_symbol	O
(	O
info	*(void)
,	O
h	O
)	O
)	O
return	O
FALSE	O
;	O
}	O
else	O
eh	O
->	O
dyn_relocs	O
=	O
NULL	O
;	O
}	O
else	O
if	O
(	O
h	O
->	O
dynindx	O
==	O
-	O
1	int
&&	O
!	O
h	O
->	O
forced_local	O
&&	O
!	O
bfd_elf_link_record_dynamic_symbol	O
(	O
info	*(void)
,	O
h	O
)	O
)	O
return	O
FALSE	O
;	O
}	O
else	O
if	O
(	O
bfd_link_executable	O
(	O
info	*(void)
)	O
&&	O
(	O
h	O
->	O
needs_copy	O
||	O
eh	O
->	O
needs_copy	O
)	O
&&	O
h	O
->	O
def_dynamic	O
&&	O
!	O
h	O
->	O
def_regular	O
)	O
{	O
struct	O
elf_dyn_relocs	O
*	O
*	O
pp	O
;	O
for	O
(	O
pp	O
=	O
&	O
eh	O
->	O
dyn_relocs	O
;	O
(	O
p	*(void)
=	O
*	O
pp	O
)	O
!=	O
NULL	O
;	O
)	O
{	O
if	O
(	O
p	*(void)
->	O
pc_count	O
!=	O
0	int
)	O
*	O
pp	O
=	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
;	O
else	O
pp	O
=	O
&	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
;	O
}	O
}	O
}	O
}	O
else	O
if	O
(	O
ELIMINATE_COPY_RELOCS	O
)	O
{	O
if	O
(	O
(	O
!	O
h	O
->	O
non_got_ref	O
||	O
(	O
h	O
->	O
root	O
.	O
type	enum(int,int,int,int)
==	O
bfd_link_hash_undefweak	O
&&	O
!	O
resolved_to_zero	O
)	O
)	O
&&	O
(	O
(	O
h	O
->	O
def_dynamic	O
&&	O
!	O
h	O
->	O
def_regular	O
)	O
||	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
dynamic_sections_created	O
&&	O
(	O
h	O
->	O
root	O
.	O
type	enum(int,int,int,int)
==	O
bfd_link_hash_undefweak	O
||	O
h	O
->	O
root	O
.	O
type	enum(int,int,int,int)
==	O
bfd_link_hash_undefined	O
)	O
)	O
)	O
)	O
{	O
if	O
(	O
h	O
->	O
dynindx	O
==	O
-	O
1	int
&&	O
!	O
h	O
->	O
forced_local	O
&&	O
!	O
resolved_to_zero	O
&&	O
h	O
->	O
root	O
.	O
type	enum(int,int,int,int)
==	O
bfd_link_hash_undefweak	O
&&	O
!	O
bfd_elf_link_record_dynamic_symbol	O
(	O
info	*(void)
,	O
h	O
)	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
h	O
->	O
dynindx	O
!=	O
-	O
1	int
)	O
goto	O
keep	O
;	O
}	O
eh	O
->	O
dyn_relocs	O
=	O
NULL	O
;	O
keep	O
:	O
;	O
}	O
for	O
(	O
p	*(void)
=	O
eh	O
->	O
dyn_relocs	O
;	O
p	*(void)
!=	O
NULL	O
;	O
p	*(void)
=	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
)	O
{	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
sreloc	O
;	O
sreloc	O
=	O
elf_section_data	O
(	O
p	*(void)
->	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
)	O
->	O
sreloc	O
;	O
BFD_ASSERT	O
(	O
sreloc	O
!=	O
NULL	O
)	O
;	O
sreloc	O
->	O
size	long
+=	O
p	*(void)
->	O
count	int
*	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
sizeof_reloc	O
;	O
}	O
return	O
TRUE	int
;	O
}	O
static	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
readonly_dynrelocs	O
(	O
struct	O
elf_link_hash_entry	O
*	O
h	O
)	O
{	O
struct	O
elf_dyn_relocs	O
*	O
p	*(void)
;	O
for	O
(	O
p	*(void)
=	O
elf_x86_hash_entry	O
(	O
h	O
)	O
->	O
dyn_relocs	O
;	O
p	*(void)
!=	O
NULL	O
;	O
p	*(void)
=	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
)	O
{	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
s	*(void)
=	O
p	*(void)
->	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
;	O
if	O
(	O
s	*(void)
!=	O
NULL	O
&&	O
(	O
s	*(void)
->	O
flags	int
&	O
SEC_READONLY	O
)	O
!=	O
0	int
)	O
return	O
p	*(void)
->	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
;	O
}	O
return	O
NULL	O
;	O
}	O
static	O
bfd_boolean	int
maybe_set_textrel	O
(	O
struct	O
elf_link_hash_entry	O
*	O
h	O
,	O
void	O
*	O
inf	O
)	O
{	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
;	O
if	O
(	O
h	O
->	O
root	O
.	O
type	enum(int,int,int,int)
==	O
bfd_link_hash_indirect	O
)	O
return	O
TRUE	int
;	O
if	O
(	O
h	O
->	O
forced_local	O
&&	O
h	O
->	O
type	enum(int,int,int,int)
==	O
STT_GNU_IFUNC	O
)	O
return	O
TRUE	int
;	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
=	O
readonly_dynrelocs	O
(	O
h	O
)	O
;	O
if	O
(	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
!=	O
NULL	O
)	O
{	O
struct	O
bfd_link_info	O
*	O
info	*(void)
=	O
(	O
struct	O
bfd_link_info	O
*	O
)	O
inf	O
;	O
info	*(void)
->	O
flags	int
|=	O
DF_TEXTREL	O
;	O
info	*(void)
->	O
callbacks	O
->	O
minfo	O
(	O
_	O
(	O
"%pB: dynamic relocation against `%pT' "	*(char)
"in read-only section `%pA'\n"	*(char)
)	O
,	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
owner	*(struct)
,	O
h	O
->	O
root	O
.	O
root	O
.	O
string	*(char)
,	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
)	O
;	O
if	O
(	O
(	O
info	*(void)
->	O
warn_shared_textrel	O
&&	O
bfd_link_pic	O
(	O
info	*(void)
)	O
)	O
||	O
info	*(void)
->	O
error_textrel	O
)	O
info	*(void)
->	O
callbacks	O
->	O
einfo	O
(	O
_	O
(	O
"%P: %pB: warning: relocation against `%s' "	*(char)
"in read-only section `%pA'\n"	*(char)
)	O
,	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
owner	*(struct)
,	O
h	O
->	O
root	O
.	O
root	O
.	O
string	*(char)
,	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
)	O
;	O
return	O
FALSE	O
;	O
}	O
return	O
TRUE	int
;	O
}	O
static	O
bfd_boolean	int
elf_x86_allocate_local_dynreloc	O
(	O
void	O
*	O
*	O
slot	O
,	O
void	O
*	O
inf	O
)	O
{	O
struct	O
elf_link_hash_entry	O
*	O
h	O
=	O
(	O
struct	O
elf_link_hash_entry	O
*	O
)	O
*	O
slot	O
;	O
if	O
(	O
h	O
->	O
type	enum(int,int,int,int)
!=	O
STT_GNU_IFUNC	O
||	O
!	O
h	O
->	O
def_regular	O
||	O
!	O
h	O
->	O
ref_regular	O
||	O
!	O
h	O
->	O
forced_local	O
||	O
h	O
->	O
root	O
.	O
type	enum(int,int,int,int)
!=	O
bfd_link_hash_defined	O
)	O
abort	()->(void)
(	O
)	O
;	O
return	O
elf_x86_allocate_dynrelocs	O
(	O
h	O
,	O
inf	O
)	O
;	O
}	O
struct	O
elf_link_hash_entry	O
*	O
_bfd_elf_x86_get_local_sym_hash	O
(	O
struct	O
elf_x86_link_hash_table	O
*	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
,	O
bfd	struct
*	O
abfd	*(struct)
,	O
const	O
Elf_Internal_Rela	O
*	O
rel	*(*(struct(*(*(struct`)),long,long,*(struct(int,int,int,int,int,enum(int,int,int,int),int,int,int,int,long,long,*`,*`)))))
,	O
bfd_boolean	int
create	int
)	O
{	O
struct	O
elf_x86_link_hash_entry	O
e	O
,	O
*	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
;	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
=	O
abfd	*(struct)
->	O
sections	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct(*(*`),long,long,*(struct`))),*(*(struct(*`,long,long,*`))),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct(struct(*`,long,long,*`),*(struct`))),*(struct(*(char),*(struct`),*(void),*(struct`),*(struct`),*(struct`),long,long,int,enum(int,int,int,int,int),enum(int,int,int,int),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int,int),int,int,*(struct`),long,long,struct(*`,*`,*`,int,int,int,int),*(struct`),*(struct`),int,int,long,*(*`),int,int,*(struct`),*(void),*(struct`),*(struct`),*(struct`),*(struct`),union(*`,*`),union(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`),*(void),*(void),*(struct`))),*(struct(*(struct`),*(char),long,int,*(struct`),union(*`,long))),*(*(struct(*`,*`,long,int,*`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
;	O
hashval_t	int
h	O
=	O
ELF_LOCAL_SYMBOL_HASH	O
(	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
id	int
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
r_sym	O
(	O
rel	*(*(struct(*(*(struct`)),long,long,*(struct(int,int,int,int,int,enum(int,int,int,int),int,int,int,int,long,long,*`,*`)))))
->	O
r_info	O
)	O
)	O
;	O
void	O
*	O
*	O
slot	O
;	O
e	O
.	O
elf	O
.	O
indx	O
=	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
id	int
;	O
e	O
.	O
elf	O
.	O
dynstr_index	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
r_sym	O
(	O
rel	*(*(struct(*(*(struct`)),long,long,*(struct(int,int,int,int,int,enum(int,int,int,int),int,int,int,int,long,long,*`,*`)))))
->	O
r_info	O
)	O
;	O
slot	O
=	O
htab_find_slot_with_hash	(*(struct(*((*`)->(int)),*((*`,*`)->(int)),*((*`)->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*`)),*((*`)->(void)),*(void),*((*`,long,long)->(*`)),*((*`,*`)->(void)),int)),*(void),int,enum(int,int))->(*(*(void)))
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
loc_hash_table	O
,	O
&	O
e	O
,	O
h	O
,	O
create	int
?	O
INSERT	int
:	O
NO_INSERT	int
)	O
;	O
if	O
(	O
!	O
slot	O
)	O
return	O
NULL	O
;	O
if	O
(	O
*	O
slot	O
)	O
{	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
=	O
(	O
struct	O
elf_x86_link_hash_entry	O
*	O
)	O
*	O
slot	O
;	O
return	O
&	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
elf	O
;	O
}	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
=	O
(	O
struct	O
elf_x86_link_hash_entry	O
*	O
)	O
objalloc_alloc	O
(	O
(	O
struct	O
objalloc	O
*	O
)	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
loc_hash_memory	O
,	O
sizeof	O
(	O
struct	O
elf_x86_link_hash_entry	O
)	O
)	O
;	O
if	O
(	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
)	O
{	O
memset	(*(void),int,long)->(*(void))
(	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
,	O
0	int
,	O
sizeof	O
(	O
*	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
)	O
)	O
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
elf	O
.	O
indx	O
=	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
id	int
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
elf	O
.	O
dynstr_index	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
r_sym	O
(	O
rel	*(*(struct(*(*(struct`)),long,long,*(struct(int,int,int,int,int,enum(int,int,int,int),int,int,int,int,long,long,*`,*`)))))
->	O
r_info	O
)	O
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
elf	O
.	O
dynindx	O
=	O
-	O
1	int
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
plt_got	O
.	O
offset	long
=	O
(	O
bfd_vma	long
)	O
-	O
1	int
;	O
*	O
slot	O
=	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
;	O
}	O
return	O
&	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
elf	O
;	O
}	O
struct	O
bfd_hash_entry	struct(*(struct(*(struct(*(struct`),*(char),long)),*(char),long)),*(char),long)
*	O
_bfd_x86_elf_link_hash_newfunc	O
(	O
struct	O
bfd_hash_entry	struct(*(struct(*(struct(*(struct`),*(char),long)),*(char),long)),*(char),long)
*	O
entry	O
,	O
struct	O
bfd_hash_table	struct(*(*(struct(*(struct(*`,*`,long)),*(char),long))),*((*(struct(*(struct`),*(char),long)),*(struct(*(*`),*((*`,*`,*`)->(*`)),*(void),int,int,int,int)),*(char))->(*(struct(*(struct`),*(char),long)))),*(void),int,int,int,int)
*	O
table	*(*(struct(*(struct(*`,*`,long)),*(char),long)))
,	O
const	O
char	O
*	O
string	*(char)
)	O
{	O
if	O
(	O
entry	O
==	O
NULL	O
)	O
{	O
entry	O
=	O
(	O
struct	O
bfd_hash_entry	struct(*(struct(*(struct(*(struct`),*(char),long)),*(char),long)),*(char),long)
*	O
)	O
bfd_hash_allocate	(*(struct(*(*(struct`)),*((*`,*`,*`)->(*`)),*(void),int,int,int,int)),int)->(*(void))
(	O
table	*(*(struct(*(struct(*`,*`,long)),*(char),long)))
,	O
sizeof	O
(	O
struct	O
elf_x86_link_hash_entry	O
)	O
)	O
;	O
if	O
(	O
entry	O
==	O
NULL	O
)	O
return	O
entry	O
;	O
}	O
entry	O
=	O
_bfd_link_hash_newfunc	O
(	O
entry	O
,	O
table	*(*(struct(*(struct(*`,*`,long)),*(char),long)))
,	O
string	*(char)
)	O
;	O
if	O
(	O
entry	O
!=	O
NULL	O
)	O
{	O
struct	O
elf_x86_link_hash_entry	O
*	O
eh	O
=	O
(	O
struct	O
elf_x86_link_hash_entry	O
*	O
)	O
entry	O
;	O
struct	O
elf_link_hash_table	O
*	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
=	O
(	O
struct	O
elf_link_hash_table	O
*	O
)	O
table	*(*(struct(*(struct(*`,*`,long)),*(char),long)))
;	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
eh	O
->	O
elf	O
.	O
size	long
,	O
0	int
,	O
(	O
sizeof	O
(	O
struct	O
elf_x86_link_hash_entry	O
)	O
-	O
offsetof	O
(	O
struct	O
elf_link_hash_entry	O
,	O
size	long
)	O
)	O
)	O
;	O
eh	O
->	O
elf	O
.	O
indx	O
=	O
-	O
1	int
;	O
eh	O
->	O
elf	O
.	O
dynindx	O
=	O
-	O
1	int
;	O
eh	O
->	O
elf	O
.	O
got	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
init_got_refcount	O
;	O
eh	O
->	O
elf	O
.	O
plt	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
init_plt_refcount	O
;	O
eh	O
->	O
elf	O
.	O
non_elf	O
=	O
1	int
;	O
eh	O
->	O
plt_second	O
.	O
offset	long
=	O
(	O
bfd_vma	long
)	O
-	O
1	int
;	O
eh	O
->	O
plt_got	O
.	O
offset	long
=	O
(	O
bfd_vma	long
)	O
-	O
1	int
;	O
eh	O
->	O
tlsdesc_got	O
=	O
(	O
bfd_vma	long
)	O
-	O
1	int
;	O
eh	O
->	O
zero_undefweak	O
=	O
1	int
;	O
}	O
return	O
entry	O
;	O
}	O
hashval_t	int
_bfd_x86_elf_local_htab_hash	O
(	O
const	O
void	O
*	O
ptr	*(*(char))
)	O
{	O
struct	O
elf_link_hash_entry	O
*	O
h	O
=	O
(	O
struct	O
elf_link_hash_entry	O
*	O
)	O
ptr	*(*(char))
;	O
return	O
ELF_LOCAL_SYMBOL_HASH	O
(	O
h	O
->	O
indx	O
,	O
h	O
->	O
dynstr_index	O
)	O
;	O
}	O
int	O
_bfd_x86_elf_local_htab_eq	O
(	O
const	O
void	O
*	O
ptr1	O
,	O
const	O
void	O
*	O
ptr2	O
)	O
{	O
struct	O
elf_link_hash_entry	O
*	O
h1	O
=	O
(	O
struct	O
elf_link_hash_entry	O
*	O
)	O
ptr1	O
;	O
struct	O
elf_link_hash_entry	O
*	O
h2	O
=	O
(	O
struct	O
elf_link_hash_entry	O
*	O
)	O
ptr2	O
;	O
return	O
h1	O
->	O
indx	O
==	O
h2	O
->	O
indx	O
&&	O
h1	O
->	O
dynstr_index	O
==	O
h2	O
->	O
dynstr_index	O
;	O
}	O
static	O
void	O
elf_x86_link_hash_table_free	O
(	O
bfd	struct
*	O
obfd	*(struct)
)	O
{	O
struct	O
elf_x86_link_hash_table	O
*	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
=	O
(	O
struct	O
elf_x86_link_hash_table	O
*	O
)	O
obfd	*(struct)
->	O
link	(*(char),*(char))->(int)
.	O
hash	long
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
loc_hash_table	O
)	O
htab_delete	(*(struct(*((*`)->(int)),*((*`,*`)->(int)),*((*`)->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*`)),*((*`)->(void)),*(void),*((*`,long,long)->(*`)),*((*`,*`)->(void)),int)))->(void)
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
loc_hash_table	O
)	O
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
loc_hash_memory	O
)	O
objalloc_free	O
(	O
(	O
struct	O
objalloc	O
*	O
)	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
loc_hash_memory	O
)	O
;	O
_bfd_elf_link_hash_table_free	O
(	O
obfd	*(struct)
)	O
;	O
}	O
static	O
bfd_boolean	int
elf_i386_is_reloc_section	O
(	O
const	O
char	O
*	O
secname	O
)	O
{	O
return	O
CONST_STRNEQ	O
(	O
secname	O
,	O
".rel"	*(char)
)	O
;	O
}	O
static	O
bfd_boolean	int
elf_x86_64_is_reloc_section	O
(	O
const	O
char	O
*	O
secname	O
)	O
{	O
return	O
CONST_STRNEQ	O
(	O
secname	O
,	O
".rela"	*(char)
)	O
;	O
}	O
struct	O
bfd_link_hash_table	O
*	O
_bfd_x86_elf_link_hash_table_create	O
(	O
bfd	struct
*	O
abfd	*(struct)
)	O
{	O
struct	O
elf_x86_link_hash_table	O
*	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
;	O
const	O
struct	O
elf_backend_data	O
*	O
bed	O
;	O
bfd_size_type	long
amt	O
=	O
sizeof	O
(	O
struct	O
elf_x86_link_hash_table	O
)	O
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
=	O
(	O
struct	O
elf_x86_link_hash_table	O
*	O
)	O
bfd_zmalloc	O
(	O
amt	O
)	O
;	O
if	O
(	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
bed	O
=	O
get_elf_backend_data	O
(	O
abfd	*(struct)
)	O
;	O
if	O
(	O
!	O
_bfd_elf_link_hash_table_init	O
(	O
&	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
elf	O
,	O
abfd	*(struct)
,	O
_bfd_x86_elf_link_hash_newfunc	O
,	O
sizeof	O
(	O
struct	O
elf_x86_link_hash_entry	O
)	O
,	O
bed	O
->	O
target_id	O
)	O
)	O
{	O
free	(*(void))->(void)
(	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
)	O
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
bed	O
->	O
target_id	O
==	O
X86_64_ELF_DATA	O
)	O
{	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
is_reloc_section	O
=	O
elf_x86_64_is_reloc_section	O
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
dt_reloc	O
=	O
DT_RELA	O
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
dt_reloc_sz	O
=	O
DT_RELASZ	O
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
dt_reloc_ent	O
=	O
DT_RELAENT	O
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
got_entry_size	O
=	O
8	int
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
pcrel_plt	O
=	O
TRUE	int
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
tls_get_addr	O
=	O
"__tls_get_addr"	*(char)
;	O
}	O
if	O
(	O
ABI_64_P	O
(	O
abfd	*(struct)
)	O
)	O
{	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
sizeof_reloc	O
=	O
sizeof	O
(	O
Elf64_External_Rela	O
)	O
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
pointer_r_type	O
=	O
R_X86_64_64	O
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
dynamic_interpreter	O
=	O
ELF64_DYNAMIC_INTERPRETER	O
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
dynamic_interpreter_size	O
=	O
sizeof	O
ELF64_DYNAMIC_INTERPRETER	O
;	O
}	O
else	O
{	O
if	O
(	O
bed	O
->	O
target_id	O
==	O
X86_64_ELF_DATA	O
)	O
{	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
sizeof_reloc	O
=	O
sizeof	O
(	O
Elf32_External_Rela	O
)	O
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
pointer_r_type	O
=	O
R_X86_64_32	O
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
dynamic_interpreter	O
=	O
ELFX32_DYNAMIC_INTERPRETER	O
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
dynamic_interpreter_size	O
=	O
sizeof	O
ELFX32_DYNAMIC_INTERPRETER	O
;	O
}	O
else	O
{	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
is_reloc_section	O
=	O
elf_i386_is_reloc_section	O
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
dt_reloc	O
=	O
DT_REL	O
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
dt_reloc_sz	O
=	O
DT_RELSZ	O
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
dt_reloc_ent	O
=	O
DT_RELENT	O
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
sizeof_reloc	O
=	O
sizeof	O
(	O
Elf32_External_Rel	O
)	O
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
got_entry_size	O
=	O
4	int
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
pcrel_plt	O
=	O
FALSE	O
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
pointer_r_type	O
=	O
R_386_32	O
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
dynamic_interpreter	O
=	O
ELF32_DYNAMIC_INTERPRETER	O
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
dynamic_interpreter_size	O
=	O
sizeof	O
ELF32_DYNAMIC_INTERPRETER	O
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
tls_get_addr	O
=	O
"___tls_get_addr"	*(char)
;	O
}	O
}	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
target_id	O
=	O
bed	O
->	O
target_id	O
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
target_os	O
=	O
get_elf_x86_backend_data	O
(	O
abfd	*(struct)
)	O
->	O
target_os	O
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
loc_hash_table	O
=	O
htab_try_create	(long,*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)))->(*(struct(*((*`)->(int)),*((*`,*`)->(int)),*((*`)->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*`)),*((*`)->(void)),*(void),*((*`,long,long)->(*`)),*((*`,*`)->(void)),int)))
(	O
1024	int
,	O
_bfd_x86_elf_local_htab_hash	O
,	O
_bfd_x86_elf_local_htab_eq	O
,	O
NULL	O
)	O
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
loc_hash_memory	O
=	O
objalloc_create	O
(	O
)	O
;	O
if	O
(	O
!	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
loc_hash_table	O
||	O
!	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
loc_hash_memory	O
)	O
{	O
elf_x86_link_hash_table_free	O
(	O
abfd	*(struct)
)	O
;	O
return	O
NULL	O
;	O
}	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
elf	O
.	O
root	O
.	O
hash_table_free	O
=	O
elf_x86_link_hash_table_free	O
;	O
return	O
&	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
elf	O
.	O
root	O
;	O
}	O
int	O
_bfd_x86_elf_compare_relocs	O
(	O
const	O
void	O
*	O
ap	O
,	O
const	O
void	O
*	O
bp	O
)	O
{	O
const	O
arelent	struct(*(*(struct)),long,long,*(struct))
*	O
a	*(char)
=	O
*	O
(	O
const	O
arelent	struct(*(*(struct)),long,long,*(struct))
*	O
*	O
)	O
ap	O
;	O
const	O
arelent	struct(*(*(struct)),long,long,*(struct))
*	O
b	*(char)
=	O
*	O
(	O
const	O
arelent	struct(*(*(struct)),long,long,*(struct))
*	O
*	O
)	O
bp	O
;	O
if	O
(	O
a	*(char)
->	O
address	long
>	O
b	*(char)
->	O
address	long
)	O
return	O
1	int
;	O
else	O
if	O
(	O
a	*(char)
->	O
address	long
<	O
b	*(char)
->	O
address	long
)	O
return	O
-	O
1	int
;	O
else	O
return	O
0	int
;	O
}	O
static	O
void	O
elf_x86_linker_defined	O
(	O
struct	O
bfd_link_info	O
*	O
info	*(void)
,	O
const	O
char	O
*	O
name	*(char)
)	O
{	O
struct	O
elf_link_hash_entry	O
*	O
h	O
;	O
h	O
=	O
elf_link_hash_lookup	O
(	O
elf_hash_table	O
(	O
info	*(void)
)	O
,	O
name	*(char)
,	O
FALSE	O
,	O
FALSE	O
,	O
FALSE	O
)	O
;	O
if	O
(	O
h	O
==	O
NULL	O
)	O
return	O
;	O
while	O
(	O
h	O
->	O
root	O
.	O
type	enum(int,int,int,int)
==	O
bfd_link_hash_indirect	O
)	O
h	O
=	O
(	O
struct	O
elf_link_hash_entry	O
*	O
)	O
h	O
->	O
root	O
.	O
u	union(long,*(struct))
.	O
i	*(struct)
.	O
link	(*(char),*(char))->(int)
;	O
if	O
(	O
h	O
->	O
root	O
.	O
type	enum(int,int,int,int)
==	O
bfd_link_hash_new	O
||	O
h	O
->	O
root	O
.	O
type	enum(int,int,int,int)
==	O
bfd_link_hash_undefined	O
||	O
h	O
->	O
root	O
.	O
type	enum(int,int,int,int)
==	O
bfd_link_hash_undefweak	O
||	O
h	O
->	O
root	O
.	O
type	enum(int,int,int,int)
==	O
bfd_link_hash_common	O
||	O
(	O
!	O
h	O
->	O
def_regular	O
&&	O
h	O
->	O
def_dynamic	O
)	O
)	O
{	O
elf_x86_hash_entry	O
(	O
h	O
)	O
->	O
local_ref	O
=	O
2	int
;	O
elf_x86_hash_entry	O
(	O
h	O
)	O
->	O
linker_def	O
=	O
1	int
;	O
}	O
}	O
static	O
void	O
elf_x86_hide_linker_defined	O
(	O
struct	O
bfd_link_info	O
*	O
info	*(void)
,	O
const	O
char	O
*	O
name	*(char)
)	O
{	O
struct	O
elf_link_hash_entry	O
*	O
h	O
;	O
h	O
=	O
elf_link_hash_lookup	O
(	O
elf_hash_table	O
(	O
info	*(void)
)	O
,	O
name	*(char)
,	O
FALSE	O
,	O
FALSE	O
,	O
FALSE	O
)	O
;	O
if	O
(	O
h	O
==	O
NULL	O
)	O
return	O
;	O
while	O
(	O
h	O
->	O
root	O
.	O
type	enum(int,int,int,int)
==	O
bfd_link_hash_indirect	O
)	O
h	O
=	O
(	O
struct	O
elf_link_hash_entry	O
*	O
)	O
h	O
->	O
root	O
.	O
u	union(long,*(struct))
.	O
i	*(struct)
.	O
link	(*(char),*(char))->(int)
;	O
if	O
(	O
ELF_ST_VISIBILITY	O
(	O
h	O
->	O
other	O
)	O
==	O
STV_INTERNAL	O
||	O
ELF_ST_VISIBILITY	O
(	O
h	O
->	O
other	O
)	O
==	O
STV_HIDDEN	O
)	O
_bfd_elf_link_hash_hide_symbol	O
(	O
info	*(void)
,	O
h	O
,	O
TRUE	int
)	O
;	O
}	O
bfd_boolean	int
_bfd_x86_elf_link_check_relocs	O
(	O
bfd	struct
*	O
abfd	*(struct)
,	O
struct	O
bfd_link_info	O
*	O
info	*(void)
)	O
{	O
if	O
(	O
!	O
bfd_link_relocatable	O
(	O
info	*(void)
)	O
)	O
{	O
struct	O
elf_x86_link_hash_table	O
*	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
;	O
const	O
struct	O
elf_backend_data	O
*	O
bed	O
=	O
get_elf_backend_data	O
(	O
abfd	*(struct)
)	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
=	O
elf_x86_hash_table	O
(	O
info	*(void)
,	O
bed	O
->	O
target_id	O
)	O
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
)	O
{	O
struct	O
elf_link_hash_entry	O
*	O
h	O
;	O
h	O
=	O
elf_link_hash_lookup	O
(	O
elf_hash_table	O
(	O
info	*(void)
)	O
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
tls_get_addr	O
,	O
FALSE	O
,	O
FALSE	O
,	O
FALSE	O
)	O
;	O
if	O
(	O
h	O
!=	O
NULL	O
)	O
{	O
elf_x86_hash_entry	O
(	O
h	O
)	O
->	O
tls_get_addr	O
=	O
1	int
;	O
while	O
(	O
h	O
->	O
root	O
.	O
type	enum(int,int,int,int)
==	O
bfd_link_hash_indirect	O
)	O
{	O
h	O
=	O
(	O
struct	O
elf_link_hash_entry	O
*	O
)	O
h	O
->	O
root	O
.	O
u	union(long,*(struct))
.	O
i	*(struct)
.	O
link	(*(char),*(char))->(int)
;	O
elf_x86_hash_entry	O
(	O
h	O
)	O
->	O
tls_get_addr	O
=	O
1	int
;	O
}	O
}	O
elf_x86_linker_defined	O
(	O
info	*(void)
,	O
"__ehdr_start"	*(char)
)	O
;	O
if	O
(	O
bfd_link_executable	O
(	O
info	*(void)
)	O
)	O
{	O
elf_x86_linker_defined	O
(	O
info	*(void)
,	O
"__bss_start"	*(char)
)	O
;	O
elf_x86_linker_defined	O
(	O
info	*(void)
,	O
"_end"	*(char)
)	O
;	O
elf_x86_linker_defined	O
(	O
info	*(void)
,	O
"_edata"	*(char)
)	O
;	O
}	O
else	O
{	O
elf_x86_hide_linker_defined	O
(	O
info	*(void)
,	O
"__bss_start"	*(char)
)	O
;	O
elf_x86_hide_linker_defined	O
(	O
info	*(void)
,	O
"_end"	*(char)
)	O
;	O
elf_x86_hide_linker_defined	O
(	O
info	*(void)
,	O
"_edata"	*(char)
)	O
;	O
}	O
}	O
}	O
return	O
_bfd_elf_link_check_relocs	O
(	O
abfd	*(struct)
,	O
info	*(void)
)	O
;	O
}	O
bfd_boolean	int
_bfd_x86_elf_size_dynamic_sections	O
(	O
bfd	struct
*	O
output_bfd	*(struct)
,	O
struct	O
bfd_link_info	O
*	O
info	*(void)
)	O
{	O
struct	O
elf_x86_link_hash_table	O
*	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
;	O
bfd	struct
*	O
dynobj	O
;	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
s	*(void)
;	O
bfd_boolean	int
relocs	O
;	O
bfd	struct
*	O
ibfd	*(struct)
;	O
const	O
struct	O
elf_backend_data	O
*	O
bed	O
=	O
get_elf_backend_data	O
(	O
output_bfd	*(struct)
)	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
=	O
elf_x86_hash_table	O
(	O
info	*(void)
,	O
bed	O
->	O
target_id	O
)	O
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
==	O
NULL	O
)	O
return	O
FALSE	O
;	O
dynobj	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
dynobj	O
;	O
if	O
(	O
dynobj	O
==	O
NULL	O
)	O
abort	()->(void)
(	O
)	O
;	O
for	O
(	O
ibfd	*(struct)
=	O
info	*(void)
->	O
input_bfds	O
;	O
ibfd	*(struct)
!=	O
NULL	O
;	O
ibfd	*(struct)
=	O
ibfd	*(struct)
->	O
link	(*(char),*(char))->(int)
.	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
)	O
{	O
bfd_signed_vma	long
*	O
local_got	O
;	O
bfd_signed_vma	long
*	O
end_local_got	O
;	O
char	O
*	O
local_tls_type	O
;	O
bfd_vma	long
*	O
local_tlsdesc_gotent	O
;	O
bfd_size_type	long
locsymcount	O
;	O
Elf_Internal_Shdr	O
*	O
symtab_hdr	O
;	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
srel	O
;	O
if	O
(	O
!	O
is_x86_elf	O
(	O
ibfd	*(struct)
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
)	O
)	O
continue	O
;	O
for	O
(	O
s	*(void)
=	O
ibfd	*(struct)
->	O
sections	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct(*(*`),long,long,*(struct`))),*(*(struct(*`,long,long,*`))),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct(struct(*`,long,long,*`),*(struct`))),*(struct(*(char),*(struct`),*(void),*(struct`),*(struct`),*(struct`),long,long,int,enum(int,int,int,int,int),enum(int,int,int,int),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int,int),int,int,*(struct`),long,long,struct(*`,*`,*`,int,int,int,int),*(struct`),*(struct`),int,int,long,*(*`),int,int,*(struct`),*(void),*(struct`),*(struct`),*(struct`),*(struct`),union(*`,*`),union(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`),*(void),*(void),*(struct`))),*(struct(*(struct`),*(char),long,int,*(struct`),union(*`,long))),*(*(struct(*`,*`,long,int,*`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
;	O
s	*(void)
!=	O
NULL	O
;	O
s	*(void)
=	O
s	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
)	O
{	O
struct	O
elf_dyn_relocs	O
*	O
p	*(void)
;	O
for	O
(	O
p	*(void)
=	O
(	O
(	O
struct	O
elf_dyn_relocs	O
*	O
)	O
elf_section_data	O
(	O
s	*(void)
)	O
->	O
local_dynrel	O
)	O
;	O
p	*(void)
!=	O
NULL	O
;	O
p	*(void)
=	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
)	O
{	O
if	O
(	O
!	O
bfd_is_abs_section	(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))))->(int)
(	O
p	*(void)
->	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
)	O
&&	O
bfd_is_abs_section	(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))))->(int)
(	O
p	*(void)
->	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
)	O
)	O
{	O
}	O
else	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
target_os	O
==	O
is_vxworks	O
&&	O
strcmp	(*(char),*(char))->(int)
(	O
p	*(void)
->	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
name	*(char)
,	O
".tls_vars"	*(char)
)	O
==	O
0	int
)	O
{	O
}	O
else	O
if	O
(	O
p	*(void)
->	O
count	int
!=	O
0	int
)	O
{	O
srel	O
=	O
elf_section_data	O
(	O
p	*(void)
->	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
)	O
->	O
sreloc	O
;	O
srel	O
->	O
size	long
+=	O
p	*(void)
->	O
count	int
*	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
sizeof_reloc	O
;	O
if	O
(	O
(	O
p	*(void)
->	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
flags	int
&	O
SEC_READONLY	O
)	O
!=	O
0	int
&&	O
(	O
info	*(void)
->	O
flags	int
&	O
DF_TEXTREL	O
)	O
==	O
0	int
)	O
{	O
info	*(void)
->	O
flags	int
|=	O
DF_TEXTREL	O
;	O
if	O
(	O
(	O
info	*(void)
->	O
warn_shared_textrel	O
&&	O
bfd_link_pic	O
(	O
info	*(void)
)	O
)	O
||	O
info	*(void)
->	O
error_textrel	O
)	O
info	*(void)
->	O
callbacks	O
->	O
einfo	O
(	O
_	O
(	O
"%P: %pB: warning: relocation "	*(char)
"in read-only section `%pA'\n"	*(char)
)	O
,	O
p	*(void)
->	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
owner	*(struct)
,	O
p	*(void)
->	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
)	O
;	O
}	O
}	O
}	O
}	O
local_got	O
=	O
elf_local_got_refcounts	O
(	O
ibfd	*(struct)
)	O
;	O
if	O
(	O
!	O
local_got	O
)	O
continue	O
;	O
symtab_hdr	O
=	O
&	O
elf_symtab_hdr	O
(	O
ibfd	*(struct)
)	O
;	O
locsymcount	O
=	O
symtab_hdr	O
->	O
sh_info	O
;	O
end_local_got	O
=	O
local_got	O
+	O
locsymcount	O
;	O
local_tls_type	O
=	O
elf_x86_local_got_tls_type	O
(	O
ibfd	*(struct)
)	O
;	O
local_tlsdesc_gotent	O
=	O
elf_x86_local_tlsdesc_gotent	O
(	O
ibfd	*(struct)
)	O
;	O
s	*(void)
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgot	O
;	O
srel	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
srelgot	O
;	O
for	O
(	O
;	O
local_got	O
<	O
end_local_got	O
;	O
++	O
local_got	O
,	O
++	O
local_tls_type	O
,	O
++	O
local_tlsdesc_gotent	O
)	O
{	O
*	O
local_tlsdesc_gotent	O
=	O
(	O
bfd_vma	long
)	O
-	O
1	int
;	O
if	O
(	O
*	O
local_got	O
>	O
0	int
)	O
{	O
if	O
(	O
GOT_TLS_GDESC_P	O
(	O
*	O
local_tls_type	O
)	O
)	O
{	O
*	O
local_tlsdesc_gotent	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgotplt	O
->	O
size	long
-	O
elf_x86_compute_jump_table_size	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
)	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgotplt	O
->	O
size	long
+=	O
2	int
*	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
got_entry_size	O
;	O
*	O
local_got	O
=	O
(	O
bfd_vma	long
)	O
-	O
2	int
;	O
}	O
if	O
(	O
!	O
GOT_TLS_GDESC_P	O
(	O
*	O
local_tls_type	O
)	O
||	O
GOT_TLS_GD_P	O
(	O
*	O
local_tls_type	O
)	O
)	O
{	O
*	O
local_got	O
=	O
s	*(void)
->	O
size	long
;	O
s	*(void)
->	O
size	long
+=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
got_entry_size	O
;	O
if	O
(	O
GOT_TLS_GD_P	O
(	O
*	O
local_tls_type	O
)	O
||	O
*	O
local_tls_type	O
==	O
GOT_TLS_IE_BOTH	O
)	O
s	*(void)
->	O
size	long
+=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
got_entry_size	O
;	O
}	O
if	O
(	O
bfd_link_pic	O
(	O
info	*(void)
)	O
||	O
GOT_TLS_GD_ANY_P	O
(	O
*	O
local_tls_type	O
)	O
||	O
(	O
*	O
local_tls_type	O
&	O
GOT_TLS_IE	O
)	O
)	O
{	O
if	O
(	O
*	O
local_tls_type	O
==	O
GOT_TLS_IE_BOTH	O
)	O
srel	O
->	O
size	long
+=	O
2	int
*	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
sizeof_reloc	O
;	O
else	O
if	O
(	O
GOT_TLS_GD_P	O
(	O
*	O
local_tls_type	O
)	O
||	O
!	O
GOT_TLS_GDESC_P	O
(	O
*	O
local_tls_type	O
)	O
)	O
srel	O
->	O
size	long
+=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
sizeof_reloc	O
;	O
if	O
(	O
GOT_TLS_GDESC_P	O
(	O
*	O
local_tls_type	O
)	O
)	O
{	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
srelplt	O
->	O
size	long
+=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
sizeof_reloc	O
;	O
if	O
(	O
bed	O
->	O
target_id	O
==	O
X86_64_ELF_DATA	O
)	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
tlsdesc_plt	O
=	O
(	O
bfd_vma	long
)	O
-	O
1	int
;	O
}	O
}	O
}	O
else	O
*	O
local_got	O
=	O
(	O
bfd_vma	long
)	O
-	O
1	int
;	O
}	O
}	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
tls_ld_or_ldm_got	O
.	O
refcount	O
>	O
0	int
)	O
{	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
tls_ld_or_ldm_got	O
.	O
offset	long
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgot	O
->	O
size	long
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgot	O
->	O
size	long
+=	O
2	int
*	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
got_entry_size	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
srelgot	O
->	O
size	long
+=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
sizeof_reloc	O
;	O
}	O
else	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
tls_ld_or_ldm_got	O
.	O
offset	long
=	O
-	O
1	int
;	O
elf_link_hash_traverse	O
(	O
&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
,	O
elf_x86_allocate_dynrelocs	O
,	O
info	*(void)
)	O
;	O
htab_traverse	(*(struct(*((*`)->(int)),*((*`,*`)->(int)),*((*`)->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*`)),*((*`)->(void)),*(void),*((*`,long,long)->(*`)),*((*`,*`)->(void)),int)),*((*(*(void)),*(void))->(int)),*(void))->(void)
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
loc_hash_table	O
,	O
elf_x86_allocate_local_dynreloc	O
,	O
info	*(void)
)	O
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
srelplt	O
)	O
{	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
next_tls_desc_index	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
srelplt	O
->	O
reloc_count	int
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
sgotplt_jump_table_size	O
=	O
elf_x86_compute_jump_table_size	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
)	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
next_irelative_index	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
srelplt	O
->	O
reloc_count	int
-	O
1	int
;	O
}	O
else	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
irelplt	O
)	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
next_irelative_index	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
irelplt	O
->	O
reloc_count	int
-	O
1	int
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
tlsdesc_plt	O
)	O
{	O
if	O
(	O
(	O
info	*(void)
->	O
flags	int
&	O
DF_BIND_NOW	O
)	O
)	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
tlsdesc_plt	O
=	O
0	int
;	O
else	O
{	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
tlsdesc_got	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgot	O
->	O
size	long
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgot	O
->	O
size	long
+=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
got_entry_size	O
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
splt	O
->	O
size	long
==	O
0	int
)	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
splt	O
->	O
size	long
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
plt_entry_size	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
tlsdesc_plt	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
splt	O
->	O
size	long
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
splt	O
->	O
size	long
+=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
plt_entry_size	O
;	O
}	O
}	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgotplt	O
)	O
{	O
if	O
(	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
hgot	O
==	O
NULL	O
||	O
!	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
got_referenced	O
)	O
&&	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgotplt	O
->	O
size	long
==	O
bed	O
->	O
got_header_size	O
)	O
&&	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
splt	O
==	O
NULL	O
||	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
splt	O
->	O
size	long
==	O
0	int
)	O
&&	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgot	O
==	O
NULL	O
||	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgot	O
->	O
size	long
==	O
0	int
)	O
&&	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
iplt	O
==	O
NULL	O
||	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
iplt	O
->	O
size	long
==	O
0	int
)	O
&&	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
igotplt	O
==	O
NULL	O
||	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
igotplt	O
->	O
size	long
==	O
0	int
)	O
)	O
{	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgotplt	O
->	O
size	long
=	O
0	int
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
hgot	O
!=	O
NULL	O
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
target_os	O
!=	O
is_solaris	O
)	O
{	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
hgot	O
->	O
root	O
.	O
type	enum(int,int,int,int)
=	O
bfd_link_hash_undefined	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
hgot	O
->	O
root	O
.	O
u	union(long,*(struct))
.	O
undef	O
.	O
abfd	*(struct)
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
hgot	O
->	O
root	O
.	O
u	union(long,*(struct))
.	O
def	O
.	O
section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
owner	*(struct)
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
hgot	O
->	O
root	O
.	O
linker_def	O
=	O
0	int
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
hgot	O
->	O
ref_regular	O
=	O
0	int
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
hgot	O
->	O
def_regular	O
=	O
0	int
;	O
}	O
}	O
}	O
if	O
(	O
_bfd_elf_eh_frame_present	O
(	O
info	*(void)
)	O
)	O
{	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_eh_frame	O
!=	O
NULL	O
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
splt	O
!=	O
NULL	O
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
splt	O
->	O
size	long
!=	O
0	int
&&	O
!	O
bfd_is_abs_section	(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))))->(int)
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
splt	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
)	O
)	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_eh_frame	O
->	O
size	long
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
eh_frame_plt_size	O
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got_eh_frame	O
!=	O
NULL	O
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got	O
!=	O
NULL	O
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got	O
->	O
size	long
!=	O
0	int
&&	O
!	O
bfd_is_abs_section	(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))))->(int)
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
)	O
)	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got_eh_frame	O
->	O
size	long
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
non_lazy_plt	O
->	O
eh_frame_plt_size	O
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second_eh_frame	O
!=	O
NULL	O
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second	O
!=	O
NULL	O
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second	O
->	O
size	long
!=	O
0	int
&&	O
!	O
bfd_is_abs_section	(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))))->(int)
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
)	O
)	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second_eh_frame	O
->	O
size	long
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
non_lazy_plt	O
->	O
eh_frame_plt_size	O
;	O
}	O
relocs	O
=	O
FALSE	O
;	O
for	O
(	O
s	*(void)
=	O
dynobj	O
->	O
sections	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct(*(*`),long,long,*(struct`))),*(*(struct(*`,long,long,*`))),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct(struct(*`,long,long,*`),*(struct`))),*(struct(*(char),*(struct`),*(void),*(struct`),*(struct`),*(struct`),long,long,int,enum(int,int,int,int,int),enum(int,int,int,int),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int,int),int,int,*(struct`),long,long,struct(*`,*`,*`,int,int,int,int),*(struct`),*(struct`),int,int,long,*(*`),int,int,*(struct`),*(void),*(struct`),*(struct`),*(struct`),*(struct`),union(*`,*`),union(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`),*(void),*(void),*(struct`))),*(struct(*(struct`),*(char),long,int,*(struct`),union(*`,long))),*(*(struct(*`,*`,long,int,*`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
;	O
s	*(void)
!=	O
NULL	O
;	O
s	*(void)
=	O
s	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
)	O
{	O
bfd_boolean	int
strip_section	O
=	O
TRUE	int
;	O
if	O
(	O
(	O
s	*(void)
->	O
flags	int
&	O
SEC_LINKER_CREATED	O
)	O
==	O
0	int
)	O
continue	O
;	O
if	O
(	O
s	*(void)
==	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
splt	O
||	O
s	*(void)
==	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgot	O
)	O
{	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
hplt	O
!=	O
NULL	O
)	O
strip_section	O
=	O
FALSE	O
;	O
}	O
else	O
if	O
(	O
s	*(void)
==	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgotplt	O
||	O
s	*(void)
==	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
iplt	O
||	O
s	*(void)
==	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
igotplt	O
||	O
s	*(void)
==	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second	O
||	O
s	*(void)
==	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got	O
||	O
s	*(void)
==	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_eh_frame	O
||	O
s	*(void)
==	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got_eh_frame	O
||	O
s	*(void)
==	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second_eh_frame	O
||	O
s	*(void)
==	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sdynbss	O
||	O
s	*(void)
==	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sdynrelro	O
)	O
{	O
}	O
else	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
is_reloc_section	O
(	O
bfd_section_name	(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))))->(*(char))
(	O
s	*(void)
)	O
)	O
)	O
{	O
if	O
(	O
s	*(void)
->	O
size	long
!=	O
0	int
&&	O
s	*(void)
!=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
srelplt	O
&&	O
s	*(void)
!=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
srelplt2	O
)	O
relocs	O
=	O
TRUE	int
;	O
if	O
(	O
s	*(void)
!=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
srelplt	O
)	O
s	*(void)
->	O
reloc_count	int
=	O
0	int
;	O
}	O
else	O
{	O
continue	O
;	O
}	O
if	O
(	O
s	*(void)
->	O
size	long
==	O
0	int
)	O
{	O
if	O
(	O
strip_section	O
)	O
s	*(void)
->	O
flags	int
|=	O
SEC_EXCLUDE	O
;	O
continue	O
;	O
}	O
if	O
(	O
(	O
s	*(void)
->	O
flags	int
&	O
SEC_HAS_CONTENTS	O
)	O
==	O
0	int
)	O
continue	O
;	O
if	O
(	O
s	*(void)
==	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
iplt	O
)	O
bfd_set_section_alignment	(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int)->(int)
(	O
s	*(void)
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
iplt_alignment	O
)	O
;	O
s	*(void)
->	O
contents	*(char)
=	O
(	O
unsigned	O
char	O
*	O
)	O
bfd_zalloc	(*(struct),long)->(*(void))
(	O
dynobj	O
,	O
s	*(void)
->	O
size	long
)	O
;	O
if	O
(	O
s	*(void)
->	O
contents	*(char)
==	O
NULL	O
)	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_eh_frame	O
!=	O
NULL	O
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_eh_frame	O
->	O
contents	*(char)
!=	O
NULL	O
)	O
{	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_eh_frame	O
->	O
contents	*(char)
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
eh_frame_plt	O
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_eh_frame	O
->	O
size	long
)	O
;	O
bfd_put_32	O
(	O
dynobj	O
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
splt	O
->	O
size	long
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_eh_frame	O
->	O
contents	*(char)
+	O
PLT_FDE_LEN_OFFSET	O
)	O
;	O
}	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got_eh_frame	O
!=	O
NULL	O
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got_eh_frame	O
->	O
contents	*(char)
!=	O
NULL	O
)	O
{	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got_eh_frame	O
->	O
contents	*(char)
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
non_lazy_plt	O
->	O
eh_frame_plt	O
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got_eh_frame	O
->	O
size	long
)	O
;	O
bfd_put_32	O
(	O
dynobj	O
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got	O
->	O
size	long
,	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got_eh_frame	O
->	O
contents	*(char)
+	O
PLT_FDE_LEN_OFFSET	O
)	O
)	O
;	O
}	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second_eh_frame	O
!=	O
NULL	O
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second_eh_frame	O
->	O
contents	*(char)
!=	O
NULL	O
)	O
{	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second_eh_frame	O
->	O
contents	*(char)
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
non_lazy_plt	O
->	O
eh_frame_plt	O
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second_eh_frame	O
->	O
size	long
)	O
;	O
bfd_put_32	O
(	O
dynobj	O
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second	O
->	O
size	long
,	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second_eh_frame	O
->	O
contents	*(char)
+	O
PLT_FDE_LEN_OFFSET	O
)	O
)	O
;	O
}	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
dynamic_sections_created	O
)	O
{	O
if	O
(	O
bfd_link_executable	O
(	O
info	*(void)
)	O
)	O
{	O
if	O
(	O
!	O
add_dynamic_entry	O
(	O
DT_DEBUG	O
,	O
0	int
)	O
)	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
splt	O
->	O
size	long
!=	O
0	int
)	O
{	O
if	O
(	O
!	O
add_dynamic_entry	O
(	O
DT_PLTGOT	O
,	O
0	int
)	O
)	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
srelplt	O
->	O
size	long
!=	O
0	int
)	O
{	O
if	O
(	O
!	O
add_dynamic_entry	O
(	O
DT_PLTRELSZ	O
,	O
0	int
)	O
||	O
!	O
add_dynamic_entry	O
(	O
DT_PLTREL	O
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
dt_reloc	O
)	O
||	O
!	O
add_dynamic_entry	O
(	O
DT_JMPREL	O
,	O
0	int
)	O
)	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
tlsdesc_plt	O
&&	O
(	O
!	O
add_dynamic_entry	O
(	O
DT_TLSDESC_PLT	O
,	O
0	int
)	O
||	O
!	O
add_dynamic_entry	O
(	O
DT_TLSDESC_GOT	O
,	O
0	int
)	O
)	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
relocs	O
)	O
{	O
if	O
(	O
!	O
add_dynamic_entry	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
dt_reloc	O
,	O
0	int
)	O
||	O
!	O
add_dynamic_entry	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
dt_reloc_sz	O
,	O
0	int
)	O
||	O
!	O
add_dynamic_entry	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
dt_reloc_ent	O
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
sizeof_reloc	O
)	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
(	O
info	*(void)
->	O
flags	int
&	O
DF_TEXTREL	O
)	O
==	O
0	int
)	O
elf_link_hash_traverse	O
(	O
&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
,	O
maybe_set_textrel	O
,	O
info	*(void)
)	O
;	O
if	O
(	O
(	O
info	*(void)
->	O
flags	int
&	O
DF_TEXTREL	O
)	O
!=	O
0	int
)	O
{	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
readonly_dynrelocs_against_ifunc	O
)	O
{	O
info	*(void)
->	O
callbacks	O
->	O
einfo	O
(	O
_	O
(	O
"%P%X: read-only segment has dynamic IFUNC relocations;"	*(char)
" recompile with %s\n"	*(char)
)	O
,	O
bfd_link_dll	O
(	O
info	*(void)
)	O
?	O
"-fPIC"	*(char)
:	O
"-fPIE"	*(char)
)	O
;	O
bfd_set_error	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))->(void)
(	O
bfd_error_bad_value	int
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
!	O
add_dynamic_entry	O
(	O
DT_TEXTREL	O
,	O
0	int
)	O
)	O
return	O
FALSE	O
;	O
}	O
}	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
target_os	O
==	O
is_vxworks	O
&&	O
!	O
elf_vxworks_add_dynamic_entries	O
(	O
output_bfd	*(struct)
,	O
info	*(void)
)	O
)	O
return	O
FALSE	O
;	O
}	O
return	O
TRUE	int
;	O
}	O
struct	O
elf_x86_link_hash_table	O
*	O
_bfd_x86_elf_finish_dynamic_sections	O
(	O
bfd	struct
*	O
output_bfd	*(struct)
,	O
struct	O
bfd_link_info	O
*	O
info	*(void)
)	O
{	O
struct	O
elf_x86_link_hash_table	O
*	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
;	O
const	O
struct	O
elf_backend_data	O
*	O
bed	O
;	O
bfd	struct
*	O
dynobj	O
;	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
sdyn	O
;	O
bfd_byte	char
*	O
dyncon	O
,	O
*	O
dynconend	O
;	O
bfd_size_type	long
sizeof_dyn	O
;	O
bed	O
=	O
get_elf_backend_data	O
(	O
output_bfd	*(struct)
)	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
=	O
elf_x86_hash_table	O
(	O
info	*(void)
,	O
bed	O
->	O
target_id	O
)	O
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
==	O
NULL	O
)	O
return	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
;	O
dynobj	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
dynobj	O
;	O
sdyn	O
=	O
bfd_get_linker_section	(*(struct),*(char))->(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))))
(	O
dynobj	O
,	O
".dynamic"	*(char)
)	O
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgotplt	O
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgotplt	O
->	O
size	long
>	O
0	int
)	O
{	O
bfd_vma	long
dynamic_addr	O
;	O
if	O
(	O
bfd_is_abs_section	(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))))->(int)
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgotplt	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
)	O
)	O
{	O
_bfd_error_handler	(*(char))->(void)
(	O
_	O
(	O
"discarded output section: `%pA'"	*(char)
)	O
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgotplt	O
)	O
;	O
return	O
NULL	O
;	O
}	O
elf_section_data	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgotplt	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
)	O
->	O
this_hdr	O
.	O
sh_entsize	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
got_entry_size	O
;	O
dynamic_addr	O
=	O
(	O
sdyn	O
==	O
NULL	O
?	O
(	O
bfd_vma	long
)	O
0	int
:	O
sdyn	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
vma	long
+	O
sdyn	O
->	O
output_offset	long
)	O
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
got_entry_size	O
==	O
8	int
)	O
{	O
bfd_put_64	O
(	O
output_bfd	*(struct)
,	O
dynamic_addr	O
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgotplt	O
->	O
contents	*(char)
)	O
;	O
bfd_put_64	O
(	O
output_bfd	*(struct)
,	O
(	O
bfd_vma	long
)	O
0	int
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgotplt	O
->	O
contents	*(char)
+	O
8	int
)	O
;	O
bfd_put_64	O
(	O
output_bfd	*(struct)
,	O
(	O
bfd_vma	long
)	O
0	int
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgotplt	O
->	O
contents	*(char)
+	O
8	int
*	O
2	int
)	O
;	O
}	O
else	O
{	O
bfd_put_32	O
(	O
output_bfd	*(struct)
,	O
dynamic_addr	O
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgotplt	O
->	O
contents	*(char)
)	O
;	O
bfd_put_32	O
(	O
output_bfd	*(struct)
,	O
0	int
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgotplt	O
->	O
contents	*(char)
+	O
4	int
)	O
;	O
bfd_put_32	O
(	O
output_bfd	*(struct)
,	O
0	int
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgotplt	O
->	O
contents	*(char)
+	O
4	int
*	O
2	int
)	O
;	O
}	O
}	O
if	O
(	O
!	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
dynamic_sections_created	O
)	O
return	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
;	O
if	O
(	O
sdyn	O
==	O
NULL	O
||	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgot	O
==	O
NULL	O
)	O
abort	()->(void)
(	O
)	O
;	O
sizeof_dyn	O
=	O
bed	O
->	O
s	*(void)
->	O
sizeof_dyn	O
;	O
dyncon	O
=	O
sdyn	O
->	O
contents	*(char)
;	O
dynconend	O
=	O
sdyn	O
->	O
contents	*(char)
+	O
sdyn	O
->	O
size	long
;	O
for	O
(	O
;	O
dyncon	O
<	O
dynconend	O
;	O
dyncon	O
+=	O
sizeof_dyn	O
)	O
{	O
Elf_Internal_Dyn	O
dyn	O
;	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
s	*(void)
;	O
(	O
*	O
bed	O
->	O
s	*(void)
->	O
swap_dyn_in	O
)	O
(	O
dynobj	O
,	O
dyncon	O
,	O
&	O
dyn	O
)	O
;	O
switch	O
(	O
dyn	O
.	O
d_tag	O
)	O
{	O
default	O
:	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
target_os	O
==	O
is_vxworks	O
&&	O
elf_vxworks_finish_dynamic_entry	O
(	O
output_bfd	*(struct)
,	O
&	O
dyn	O
)	O
)	O
break	O
;	O
continue	O
;	O
case	O
DT_PLTGOT	O
:	O
s	*(void)
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgotplt	O
;	O
dyn	O
.	O
d_un	O
.	O
d_ptr	O
=	O
s	*(void)
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
vma	long
+	O
s	*(void)
->	O
output_offset	long
;	O
break	O
;	O
case	O
DT_JMPREL	O
:	O
dyn	O
.	O
d_un	O
.	O
d_ptr	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
srelplt	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
vma	long
;	O
break	O
;	O
case	O
DT_PLTRELSZ	O
:	O
s	*(void)
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
srelplt	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
;	O
dyn	O
.	O
d_un	O
.	O
d_val	O
=	O
s	*(void)
->	O
size	long
;	O
break	O
;	O
case	O
DT_TLSDESC_PLT	O
:	O
s	*(void)
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
splt	O
;	O
dyn	O
.	O
d_un	O
.	O
d_ptr	O
=	O
s	*(void)
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
vma	long
+	O
s	*(void)
->	O
output_offset	long
+	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
tlsdesc_plt	O
;	O
break	O
;	O
case	O
DT_TLSDESC_GOT	O
:	O
s	*(void)
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgot	O
;	O
dyn	O
.	O
d_un	O
.	O
d_ptr	O
=	O
s	*(void)
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
vma	long
+	O
s	*(void)
->	O
output_offset	long
+	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
tlsdesc_got	O
;	O
break	O
;	O
}	O
(	O
*	O
bed	O
->	O
s	*(void)
->	O
swap_dyn_out	O
)	O
(	O
output_bfd	*(struct)
,	O
&	O
dyn	O
,	O
dyncon	O
)	O
;	O
}	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got	O
!=	O
NULL	O
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got	O
->	O
size	long
>	O
0	int
)	O
elf_section_data	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
)	O
->	O
this_hdr	O
.	O
sh_entsize	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
non_lazy_plt	O
->	O
plt_entry_size	O
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second	O
!=	O
NULL	O
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second	O
->	O
size	long
>	O
0	int
)	O
elf_section_data	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
)	O
->	O
this_hdr	O
.	O
sh_entsize	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
non_lazy_plt	O
->	O
plt_entry_size	O
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_eh_frame	O
!=	O
NULL	O
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_eh_frame	O
->	O
contents	*(char)
!=	O
NULL	O
)	O
{	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
splt	O
!=	O
NULL	O
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
splt	O
->	O
size	long
!=	O
0	int
&&	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
splt	O
->	O
flags	int
&	O
SEC_EXCLUDE	O
)	O
==	O
0	int
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
splt	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
!=	O
NULL	O
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_eh_frame	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
!=	O
NULL	O
)	O
{	O
bfd_vma	long
plt_start	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
splt	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
vma	long
;	O
bfd_vma	long
eh_frame_start	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_eh_frame	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
vma	long
+	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_eh_frame	O
->	O
output_offset	long
+	O
PLT_FDE_START_OFFSET	O
;	O
bfd_put_signed_32	O
(	O
dynobj	O
,	O
plt_start	O
-	O
eh_frame_start	O
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_eh_frame	O
->	O
contents	*(char)
+	O
PLT_FDE_START_OFFSET	O
)	O
;	O
}	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_eh_frame	O
->	O
sec_info_type	int
==	O
SEC_INFO_TYPE_EH_FRAME	O
)	O
{	O
if	O
(	O
!	O
_bfd_elf_write_section_eh_frame	O
(	O
output_bfd	*(struct)
,	O
info	*(void)
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_eh_frame	O
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_eh_frame	O
->	O
contents	*(char)
)	O
)	O
return	O
NULL	O
;	O
}	O
}	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got_eh_frame	O
!=	O
NULL	O
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got_eh_frame	O
->	O
contents	*(char)
!=	O
NULL	O
)	O
{	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got	O
!=	O
NULL	O
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got	O
->	O
size	long
!=	O
0	int
&&	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got	O
->	O
flags	int
&	O
SEC_EXCLUDE	O
)	O
==	O
0	int
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
!=	O
NULL	O
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got_eh_frame	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
!=	O
NULL	O
)	O
{	O
bfd_vma	long
plt_start	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
vma	long
;	O
bfd_vma	long
eh_frame_start	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got_eh_frame	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
vma	long
+	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got_eh_frame	O
->	O
output_offset	long
+	O
PLT_FDE_START_OFFSET	O
;	O
bfd_put_signed_32	O
(	O
dynobj	O
,	O
plt_start	O
-	O
eh_frame_start	O
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got_eh_frame	O
->	O
contents	*(char)
+	O
PLT_FDE_START_OFFSET	O
)	O
;	O
}	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got_eh_frame	O
->	O
sec_info_type	int
==	O
SEC_INFO_TYPE_EH_FRAME	O
)	O
{	O
if	O
(	O
!	O
_bfd_elf_write_section_eh_frame	O
(	O
output_bfd	*(struct)
,	O
info	*(void)
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got_eh_frame	O
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got_eh_frame	O
->	O
contents	*(char)
)	O
)	O
return	O
NULL	O
;	O
}	O
}	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second_eh_frame	O
!=	O
NULL	O
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second_eh_frame	O
->	O
contents	*(char)
!=	O
NULL	O
)	O
{	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second	O
!=	O
NULL	O
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second	O
->	O
size	long
!=	O
0	int
&&	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second	O
->	O
flags	int
&	O
SEC_EXCLUDE	O
)	O
==	O
0	int
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
!=	O
NULL	O
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second_eh_frame	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
!=	O
NULL	O
)	O
{	O
bfd_vma	long
plt_start	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
vma	long
;	O
bfd_vma	long
eh_frame_start	O
=	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second_eh_frame	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
vma	long
+	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second_eh_frame	O
->	O
output_offset	long
+	O
PLT_FDE_START_OFFSET	O
)	O
;	O
bfd_put_signed_32	O
(	O
dynobj	O
,	O
plt_start	O
-	O
eh_frame_start	O
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second_eh_frame	O
->	O
contents	*(char)
+	O
PLT_FDE_START_OFFSET	O
)	O
;	O
}	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second_eh_frame	O
->	O
sec_info_type	int
==	O
SEC_INFO_TYPE_EH_FRAME	O
)	O
{	O
if	O
(	O
!	O
_bfd_elf_write_section_eh_frame	O
(	O
output_bfd	*(struct)
,	O
info	*(void)
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second_eh_frame	O
,	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second_eh_frame	O
->	O
contents	*(char)
)	O
)	O
return	O
NULL	O
;	O
}	O
}	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgot	O
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgot	O
->	O
size	long
>	O
0	int
)	O
elf_section_data	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgot	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
)	O
->	O
this_hdr	O
.	O
sh_entsize	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
got_entry_size	O
;	O
return	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
;	O
}	O
bfd_boolean	int
_bfd_x86_elf_always_size_sections	O
(	O
bfd	struct
*	O
output_bfd	*(struct)
,	O
struct	O
bfd_link_info	O
*	O
info	*(void)
)	O
{	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
tls_sec	O
=	O
elf_hash_table	O
(	O
info	*(void)
)	O
->	O
tls_sec	O
;	O
if	O
(	O
tls_sec	O
)	O
{	O
struct	O
elf_link_hash_entry	O
*	O
tlsbase	O
;	O
tlsbase	O
=	O
elf_link_hash_lookup	O
(	O
elf_hash_table	O
(	O
info	*(void)
)	O
,	O
"_TLS_MODULE_BASE_"	*(char)
,	O
FALSE	O
,	O
FALSE	O
,	O
FALSE	O
)	O
;	O
if	O
(	O
tlsbase	O
&&	O
tlsbase	O
->	O
type	enum(int,int,int,int)
==	O
STT_TLS	O
)	O
{	O
struct	O
elf_x86_link_hash_table	O
*	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
;	O
struct	O
bfd_link_hash_entry	O
*	O
bh	O
=	O
NULL	O
;	O
const	O
struct	O
elf_backend_data	O
*	O
bed	O
=	O
get_elf_backend_data	O
(	O
output_bfd	*(struct)
)	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
=	O
elf_x86_hash_table	O
(	O
info	*(void)
,	O
bed	O
->	O
target_id	O
)	O
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
==	O
NULL	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
!	O
(	O
_bfd_generic_link_add_one_symbol	O
(	O
info	*(void)
,	O
output_bfd	*(struct)
,	O
"_TLS_MODULE_BASE_"	*(char)
,	O
BSF_LOCAL	O
,	O
tls_sec	O
,	O
0	int
,	O
NULL	O
,	O
FALSE	O
,	O
bed	O
->	O
collect	O
,	O
&	O
bh	O
)	O
)	O
)	O
return	O
FALSE	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
tls_module_base	O
=	O
bh	O
;	O
tlsbase	O
=	O
(	O
struct	O
elf_link_hash_entry	O
*	O
)	O
bh	O
;	O
tlsbase	O
->	O
def_regular	O
=	O
1	int
;	O
tlsbase	O
->	O
other	O
=	O
STV_HIDDEN	O
;	O
tlsbase	O
->	O
root	O
.	O
linker_def	O
=	O
1	int
;	O
(	O
*	O
bed	O
->	O
elf_backend_hide_symbol	O
)	O
(	O
info	*(void)
,	O
tlsbase	O
,	O
TRUE	int
)	O
;	O
}	O
}	O
return	O
TRUE	int
;	O
}	O
void	O
_bfd_x86_elf_merge_symbol_attribute	O
(	O
struct	O
elf_link_hash_entry	O
*	O
h	O
,	O
const	O
Elf_Internal_Sym	O
*	O
isym	*(struct(*(struct),*(char),long,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),union(*(void),long)))
,	O
bfd_boolean	int
definition	O
,	O
bfd_boolean	int
dynamic	O
ATTRIBUTE_UNUSED	O
)	O
{	O
if	O
(	O
definition	O
)	O
{	O
struct	O
elf_x86_link_hash_entry	O
*	O
eh	O
=	O
(	O
struct	O
elf_x86_link_hash_entry	O
*	O
)	O
h	O
;	O
eh	O
->	O
def_protected	O
=	O
(	O
ELF_ST_VISIBILITY	O
(	O
isym	*(struct(*(struct),*(char),long,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),union(*(void),long)))
->	O
st_other	O
)	O
==	O
STV_PROTECTED	O
)	O
;	O
}	O
}	O
void	O
_bfd_x86_elf_copy_indirect_symbol	O
(	O
struct	O
bfd_link_info	O
*	O
info	*(void)
,	O
struct	O
elf_link_hash_entry	O
*	O
dir	*(char)
,	O
struct	O
elf_link_hash_entry	O
*	O
ind	O
)	O
{	O
struct	O
elf_x86_link_hash_entry	O
*	O
edir	O
,	O
*	O
eind	O
;	O
edir	O
=	O
(	O
struct	O
elf_x86_link_hash_entry	O
*	O
)	O
dir	*(char)
;	O
eind	O
=	O
(	O
struct	O
elf_x86_link_hash_entry	O
*	O
)	O
ind	O
;	O
if	O
(	O
eind	O
->	O
dyn_relocs	O
!=	O
NULL	O
)	O
{	O
if	O
(	O
edir	O
->	O
dyn_relocs	O
!=	O
NULL	O
)	O
{	O
struct	O
elf_dyn_relocs	O
*	O
*	O
pp	O
;	O
struct	O
elf_dyn_relocs	O
*	O
p	*(void)
;	O
for	O
(	O
pp	O
=	O
&	O
eind	O
->	O
dyn_relocs	O
;	O
(	O
p	*(void)
=	O
*	O
pp	O
)	O
!=	O
NULL	O
;	O
)	O
{	O
struct	O
elf_dyn_relocs	O
*	O
q	O
;	O
for	O
(	O
q	O
=	O
edir	O
->	O
dyn_relocs	O
;	O
q	O
!=	O
NULL	O
;	O
q	O
=	O
q	O
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
)	O
if	O
(	O
q	O
->	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
==	O
p	*(void)
->	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
)	O
{	O
q	O
->	O
pc_count	O
+=	O
p	*(void)
->	O
pc_count	O
;	O
q	O
->	O
count	int
+=	O
p	*(void)
->	O
count	int
;	O
*	O
pp	O
=	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
;	O
break	O
;	O
}	O
if	O
(	O
q	O
==	O
NULL	O
)	O
pp	O
=	O
&	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
;	O
}	O
*	O
pp	O
=	O
edir	O
->	O
dyn_relocs	O
;	O
}	O
edir	O
->	O
dyn_relocs	O
=	O
eind	O
->	O
dyn_relocs	O
;	O
eind	O
->	O
dyn_relocs	O
=	O
NULL	O
;	O
}	O
if	O
(	O
ind	O
->	O
root	O
.	O
type	enum(int,int,int,int)
==	O
bfd_link_hash_indirect	O
&&	O
dir	*(char)
->	O
got	O
.	O
refcount	O
<=	O
0	int
)	O
{	O
edir	O
->	O
tls_type	O
=	O
eind	O
->	O
tls_type	O
;	O
eind	O
->	O
tls_type	O
=	O
GOT_UNKNOWN	O
;	O
}	O
edir	O
->	O
gotoff_ref	O
|=	O
eind	O
->	O
gotoff_ref	O
;	O
edir	O
->	O
zero_undefweak	O
|=	O
eind	O
->	O
zero_undefweak	O
;	O
if	O
(	O
ELIMINATE_COPY_RELOCS	O
&&	O
ind	O
->	O
root	O
.	O
type	enum(int,int,int,int)
!=	O
bfd_link_hash_indirect	O
&&	O
dir	*(char)
->	O
dynamic_adjusted	O
)	O
{	O
if	O
(	O
dir	*(char)
->	O
versioned	O
!=	O
versioned_hidden	O
)	O
dir	*(char)
->	O
ref_dynamic	O
|=	O
ind	O
->	O
ref_dynamic	O
;	O
dir	*(char)
->	O
ref_regular	O
|=	O
ind	O
->	O
ref_regular	O
;	O
dir	*(char)
->	O
ref_regular_nonweak	O
|=	O
ind	O
->	O
ref_regular_nonweak	O
;	O
dir	*(char)
->	O
needs_plt	O
|=	O
ind	O
->	O
needs_plt	O
;	O
dir	*(char)
->	O
pointer_equality_needed	O
|=	O
ind	O
->	O
pointer_equality_needed	O
;	O
}	O
else	O
_bfd_elf_link_hash_copy_indirect	O
(	O
info	*(void)
,	O
dir	*(char)
,	O
ind	O
)	O
;	O
}	O
bfd_boolean	int
_bfd_x86_elf_fixup_symbol	O
(	O
struct	O
bfd_link_info	O
*	O
info	*(void)
,	O
struct	O
elf_link_hash_entry	O
*	O
h	O
)	O
{	O
if	O
(	O
h	O
->	O
dynindx	O
!=	O
-	O
1	int
&&	O
UNDEFINED_WEAK_RESOLVED_TO_ZERO	O
(	O
info	*(void)
,	O
elf_x86_hash_entry	O
(	O
h	O
)	O
)	O
)	O
{	O
h	O
->	O
dynindx	O
=	O
-	O
1	int
;	O
_bfd_elf_strtab_delref	O
(	O
elf_hash_table	O
(	O
info	*(void)
)	O
->	O
dynstr	O
,	O
h	O
->	O
dynstr_index	O
)	O
;	O
}	O
return	O
TRUE	int
;	O
}	O
void	O
_bfd_x86_elf_link_fixup_ifunc_symbol	O
(	O
struct	O
bfd_link_info	O
*	O
info	*(void)
,	O
struct	O
elf_x86_link_hash_table	O
*	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
,	O
struct	O
elf_link_hash_entry	O
*	O
h	O
,	O
Elf_Internal_Sym	O
*	O
sym	*(struct)
)	O
{	O
if	O
(	O
bfd_link_pde	O
(	O
info	*(void)
)	O
&&	O
h	O
->	O
def_regular	O
&&	O
h	O
->	O
dynindx	O
!=	O
-	O
1	int
&&	O
h	O
->	O
plt	O
.	O
offset	long
!=	O
(	O
bfd_vma	long
)	O
-	O
1	int
&&	O
h	O
->	O
type	enum(int,int,int,int)
==	O
STT_GNU_IFUNC	O
&&	O
h	O
->	O
pointer_equality_needed	O
)	O
{	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
plt_s	O
;	O
bfd_vma	long
plt_offset	O
;	O
bfd	struct
*	O
output_bfd	*(struct)
=	O
info	*(void)
->	O
output_bfd	*(struct)
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second	O
)	O
{	O
struct	O
elf_x86_link_hash_entry	O
*	O
eh	O
=	O
(	O
struct	O
elf_x86_link_hash_entry	O
*	O
)	O
h	O
;	O
plt_s	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second	O
;	O
plt_offset	O
=	O
eh	O
->	O
plt_second	O
.	O
offset	long
;	O
}	O
else	O
{	O
plt_s	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
splt	O
;	O
plt_offset	O
=	O
h	O
->	O
plt	O
.	O
offset	long
;	O
}	O
sym	*(struct)
->	O
st_size	long
=	O
0	int
;	O
sym	*(struct)
->	O
st_info	O
=	O
ELF_ST_INFO	O
(	O
ELF_ST_BIND	O
(	O
sym	*(struct)
->	O
st_info	O
)	O
,	O
STT_FUNC	O
)	O
;	O
sym	*(struct)
->	O
st_shndx	O
=	O
_bfd_elf_section_from_bfd_section	O
(	O
output_bfd	*(struct)
,	O
plt_s	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
)	O
;	O
sym	*(struct)
->	O
st_value	O
=	O
(	O
plt_s	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
vma	long
+	O
plt_s	O
->	O
output_offset	long
+	O
plt_offset	O
)	O
;	O
}	O
}	O
bfd_boolean	int
_bfd_x86_elf_hash_symbol	O
(	O
struct	O
elf_link_hash_entry	O
*	O
h	O
)	O
{	O
if	O
(	O
h	O
->	O
plt	O
.	O
offset	long
!=	O
(	O
bfd_vma	long
)	O
-	O
1	int
&&	O
!	O
h	O
->	O
def_regular	O
&&	O
!	O
h	O
->	O
pointer_equality_needed	O
)	O
return	O
FALSE	O
;	O
return	O
_bfd_elf_hash_symbol	O
(	O
h	O
)	O
;	O
}	O
bfd_boolean	int
_bfd_x86_elf_adjust_dynamic_symbol	O
(	O
struct	O
bfd_link_info	O
*	O
info	*(void)
,	O
struct	O
elf_link_hash_entry	O
*	O
h	O
)	O
{	O
struct	O
elf_x86_link_hash_table	O
*	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
;	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
s	*(void)
,	O
*	O
srel	O
;	O
struct	O
elf_x86_link_hash_entry	O
*	O
eh	O
;	O
struct	O
elf_dyn_relocs	O
*	O
p	*(void)
;	O
const	O
struct	O
elf_backend_data	O
*	O
bed	O
=	O
get_elf_backend_data	O
(	O
info	*(void)
->	O
output_bfd	*(struct)
)	O
;	O
if	O
(	O
h	O
->	O
type	enum(int,int,int,int)
==	O
STT_GNU_IFUNC	O
)	O
{	O
if	O
(	O
h	O
->	O
ref_regular	O
&&	O
SYMBOL_CALLS_LOCAL	O
(	O
info	*(void)
,	O
h	O
)	O
)	O
{	O
bfd_size_type	long
pc_count	O
=	O
0	int
,	O
count	int
=	O
0	int
;	O
struct	O
elf_dyn_relocs	O
*	O
*	O
pp	O
;	O
eh	O
=	O
(	O
struct	O
elf_x86_link_hash_entry	O
*	O
)	O
h	O
;	O
for	O
(	O
pp	O
=	O
&	O
eh	O
->	O
dyn_relocs	O
;	O
(	O
p	*(void)
=	O
*	O
pp	O
)	O
!=	O
NULL	O
;	O
)	O
{	O
pc_count	O
+=	O
p	*(void)
->	O
pc_count	O
;	O
p	*(void)
->	O
count	int
-=	O
p	*(void)
->	O
pc_count	O
;	O
p	*(void)
->	O
pc_count	O
=	O
0	int
;	O
count	int
+=	O
p	*(void)
->	O
count	int
;	O
if	O
(	O
p	*(void)
->	O
count	int
==	O
0	int
)	O
*	O
pp	O
=	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
;	O
else	O
pp	O
=	O
&	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
;	O
}	O
if	O
(	O
pc_count	O
||	O
count	int
)	O
{	O
h	O
->	O
non_got_ref	O
=	O
1	int
;	O
if	O
(	O
pc_count	O
)	O
{	O
h	O
->	O
needs_plt	O
=	O
1	int
;	O
if	O
(	O
h	O
->	O
plt	O
.	O
refcount	O
<=	O
0	int
)	O
h	O
->	O
plt	O
.	O
refcount	O
=	O
1	int
;	O
else	O
h	O
->	O
plt	O
.	O
refcount	O
+=	O
1	int
;	O
}	O
}	O
}	O
if	O
(	O
h	O
->	O
plt	O
.	O
refcount	O
<=	O
0	int
)	O
{	O
h	O
->	O
plt	O
.	O
offset	long
=	O
(	O
bfd_vma	long
)	O
-	O
1	int
;	O
h	O
->	O
needs_plt	O
=	O
0	int
;	O
}	O
return	O
TRUE	int
;	O
}	O
if	O
(	O
h	O
->	O
type	enum(int,int,int,int)
==	O
STT_FUNC	O
||	O
h	O
->	O
needs_plt	O
)	O
{	O
if	O
(	O
h	O
->	O
plt	O
.	O
refcount	O
<=	O
0	int
||	O
SYMBOL_CALLS_LOCAL	O
(	O
info	*(void)
,	O
h	O
)	O
||	O
(	O
ELF_ST_VISIBILITY	O
(	O
h	O
->	O
other	O
)	O
!=	O
STV_DEFAULT	O
&&	O
h	O
->	O
root	O
.	O
type	enum(int,int,int,int)
==	O
bfd_link_hash_undefweak	O
)	O
)	O
{	O
h	O
->	O
plt	O
.	O
offset	long
=	O
(	O
bfd_vma	long
)	O
-	O
1	int
;	O
h	O
->	O
needs_plt	O
=	O
0	int
;	O
}	O
return	O
TRUE	int
;	O
}	O
else	O
h	O
->	O
plt	O
.	O
offset	long
=	O
(	O
bfd_vma	long
)	O
-	O
1	int
;	O
eh	O
=	O
(	O
struct	O
elf_x86_link_hash_entry	O
*	O
)	O
h	O
;	O
if	O
(	O
h	O
->	O
is_weakalias	O
)	O
{	O
struct	O
elf_link_hash_entry	O
*	O
def	O
=	O
weakdef	O
(	O
h	O
)	O
;	O
BFD_ASSERT	O
(	O
def	O
->	O
root	O
.	O
type	enum(int,int,int,int)
==	O
bfd_link_hash_defined	O
)	O
;	O
h	O
->	O
root	O
.	O
u	union(long,*(struct))
.	O
def	O
.	O
section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
=	O
def	O
->	O
root	O
.	O
u	union(long,*(struct))
.	O
def	O
.	O
section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
;	O
h	O
->	O
root	O
.	O
u	union(long,*(struct))
.	O
def	O
.	O
value	long
=	O
def	O
->	O
root	O
.	O
u	union(long,*(struct))
.	O
def	O
.	O
value	long
;	O
if	O
(	O
ELIMINATE_COPY_RELOCS	O
||	O
info	*(void)
->	O
nocopyreloc	O
||	O
SYMBOL_NO_COPYRELOC	O
(	O
info	*(void)
,	O
eh	O
)	O
)	O
{	O
h	O
->	O
non_got_ref	O
=	O
def	O
->	O
non_got_ref	O
;	O
eh	O
->	O
needs_copy	O
=	O
def	O
->	O
needs_copy	O
;	O
}	O
return	O
TRUE	int
;	O
}	O
if	O
(	O
!	O
bfd_link_executable	O
(	O
info	*(void)
)	O
)	O
return	O
TRUE	int
;	O
if	O
(	O
!	O
h	O
->	O
non_got_ref	O
&&	O
!	O
eh	O
->	O
gotoff_ref	O
)	O
return	O
TRUE	int
;	O
if	O
(	O
info	*(void)
->	O
nocopyreloc	O
||	O
SYMBOL_NO_COPYRELOC	O
(	O
info	*(void)
,	O
eh	O
)	O
)	O
{	O
h	O
->	O
non_got_ref	O
=	O
0	int
;	O
return	O
TRUE	int
;	O
}	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
=	O
elf_x86_hash_table	O
(	O
info	*(void)
,	O
bed	O
->	O
target_id	O
)	O
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
==	O
NULL	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
ELIMINATE_COPY_RELOCS	O
&&	O
(	O
bed	O
->	O
target_id	O
==	O
X86_64_ELF_DATA	O
||	O
(	O
!	O
eh	O
->	O
gotoff_ref	O
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
target_os	O
!=	O
is_vxworks	O
)	O
)	O
)	O
{	O
if	O
(	O
!	O
readonly_dynrelocs	O
(	O
h	O
)	O
)	O
{	O
h	O
->	O
non_got_ref	O
=	O
0	int
;	O
return	O
TRUE	int
;	O
}	O
}	O
if	O
(	O
(	O
h	O
->	O
root	O
.	O
u	union(long,*(struct))
.	O
def	O
.	O
section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
flags	int
&	O
SEC_READONLY	O
)	O
!=	O
0	int
)	O
{	O
s	*(void)
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sdynrelro	O
;	O
srel	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sreldynrelro	O
;	O
}	O
else	O
{	O
s	*(void)
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sdynbss	O
;	O
srel	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
srelbss	O
;	O
}	O
if	O
(	O
(	O
h	O
->	O
root	O
.	O
u	union(long,*(struct))
.	O
def	O
.	O
section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
flags	int
&	O
SEC_ALLOC	O
)	O
!=	O
0	int
&&	O
h	O
->	O
size	long
!=	O
0	int
)	O
{	O
srel	O
->	O
size	long
+=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
sizeof_reloc	O
;	O
h	O
->	O
needs_copy	O
=	O
1	int
;	O
}	O
return	O
_bfd_elf_adjust_dynamic_copy	O
(	O
info	*(void)
,	O
h	O
,	O
s	*(void)
)	O
;	O
}	O
void	O
_bfd_x86_elf_hide_symbol	O
(	O
struct	O
bfd_link_info	O
*	O
info	*(void)
,	O
struct	O
elf_link_hash_entry	O
*	O
h	O
,	O
bfd_boolean	int
force_local	O
)	O
{	O
if	O
(	O
h	O
->	O
root	O
.	O
type	enum(int,int,int,int)
==	O
bfd_link_hash_undefweak	O
&&	O
info	*(void)
->	O
nointerp	O
&&	O
bfd_link_pie	O
(	O
info	*(void)
)	O
)	O
{	O
struct	O
elf_x86_link_hash_entry	O
*	O
eh	O
=	O
elf_x86_hash_entry	O
(	O
h	O
)	O
;	O
if	O
(	O
h	O
->	O
plt	O
.	O
refcount	O
>	O
0	int
||	O
eh	O
->	O
plt_got	O
.	O
refcount	O
>	O
0	int
)	O
return	O
;	O
}	O
_bfd_elf_link_hash_hide_symbol	O
(	O
info	*(void)
,	O
h	O
,	O
force_local	O
)	O
;	O
}	O
bfd_boolean	int
_bfd_x86_elf_link_symbol_references_local	O
(	O
struct	O
bfd_link_info	O
*	O
info	*(void)
,	O
struct	O
elf_link_hash_entry	O
*	O
h	O
)	O
{	O
struct	O
elf_x86_link_hash_entry	O
*	O
eh	O
=	O
elf_x86_hash_entry	O
(	O
h	O
)	O
;	O
struct	O
elf_x86_link_hash_table	O
*	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
=	O
(	O
struct	O
elf_x86_link_hash_table	O
*	O
)	O
info	*(void)
->	O
hash	long
;	O
if	O
(	O
eh	O
->	O
local_ref	O
>	O
1	int
)	O
return	O
TRUE	int
;	O
if	O
(	O
eh	O
->	O
local_ref	O
==	O
1	int
)	O
return	O
FALSE	O
;	O
if	O
(	O
SYMBOL_REFERENCES_LOCAL	O
(	O
info	*(void)
,	O
h	O
)	O
||	O
(	O
h	O
->	O
root	O
.	O
type	enum(int,int,int,int)
==	O
bfd_link_hash_undefweak	O
&&	O
(	O
ELF_ST_VISIBILITY	O
(	O
h	O
->	O
other	O
)	O
!=	O
STV_DEFAULT	O
||	O
(	O
bfd_link_executable	O
(	O
info	*(void)
)	O
&&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
interp	O
==	O
NULL	O
)	O
||	O
info	*(void)
->	O
dynamic_undefined_weak	O
==	O
0	int
)	O
)	O
||	O
(	O
(	O
h	O
->	O
def_regular	O
||	O
ELF_COMMON_DEF_P	O
(	O
h	O
)	O
)	O
&&	O
info	*(void)
->	O
version_info	O
!=	O
NULL	O
&&	O
_bfd_elf_link_hide_sym_by_version	O
(	O
info	*(void)
,	O
h	O
)	O
)	O
)	O
{	O
eh	O
->	O
local_ref	O
=	O
2	int
;	O
return	O
TRUE	int
;	O
}	O
eh	O
->	O
local_ref	O
=	O
1	int
;	O
return	O
FALSE	O
;	O
}	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
_bfd_x86_elf_gc_mark_hook	O
(	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
,	O
struct	O
bfd_link_info	O
*	O
info	*(void)
,	O
Elf_Internal_Rela	O
*	O
rel	*(*(struct(*(*(struct`)),long,long,*(struct(int,int,int,int,int,enum(int,int,int,int),int,int,int,int,long,long,*`,*`)))))
,	O
struct	O
elf_link_hash_entry	O
*	O
h	O
,	O
Elf_Internal_Sym	O
*	O
sym	*(struct)
)	O
{	O
if	O
(	O
(	O
(	O
unsigned	O
int	O
)	O
R_X86_64_GNU_VTINHERIT	O
!=	O
(	O
unsigned	O
int	O
)	O
R_386_GNU_VTINHERIT	O
)	O
||	O
(	O
(	O
unsigned	O
int	O
)	O
R_X86_64_GNU_VTENTRY	O
!=	O
(	O
unsigned	O
int	O
)	O
R_386_GNU_VTENTRY	O
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
if	O
(	O
h	O
!=	O
NULL	O
)	O
switch	O
(	O
ELF32_R_TYPE	O
(	O
rel	*(*(struct(*(*(struct`)),long,long,*(struct(int,int,int,int,int,enum(int,int,int,int),int,int,int,int,long,long,*`,*`)))))
->	O
r_info	O
)	O
)	O
{	O
case	O
R_X86_64_GNU_VTINHERIT	O
:	O
case	O
R_X86_64_GNU_VTENTRY	O
:	O
return	O
NULL	O
;	O
}	O
return	O
_bfd_elf_gc_mark_hook	O
(	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
,	O
info	*(void)
,	O
rel	*(*(struct(*(*(struct`)),long,long,*(struct(int,int,int,int,int,enum(int,int,int,int),int,int,int,int,long,long,*`,*`)))))
,	O
h	O
,	O
sym	*(struct)
)	O
;	O
}	O
static	O
bfd_vma	long
elf_i386_get_plt_got_vma	O
(	O
struct	O
elf_x86_plt	O
*	O
plt_p	O
ATTRIBUTE_UNUSED	O
,	O
bfd_vma	long
off	O
,	O
bfd_vma	long
offset	long
ATTRIBUTE_UNUSED	O
,	O
bfd_vma	long
got_addr	O
)	O
{	O
return	O
got_addr	O
+	O
off	O
;	O
}	O
static	O
bfd_vma	long
elf_x86_64_get_plt_got_vma	O
(	O
struct	O
elf_x86_plt	O
*	O
plt_p	O
,	O
bfd_vma	long
off	O
,	O
bfd_vma	long
offset	long
,	O
bfd_vma	long
got_addr	O
ATTRIBUTE_UNUSED	O
)	O
{	O
return	O
plt_p	O
->	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
vma	long
+	O
offset	long
+	O
off	O
+	O
plt_p	O
->	O
plt_got_insn_size	O
;	O
}	O
static	O
bfd_boolean	int
elf_i386_valid_plt_reloc_p	O
(	O
unsigned	O
int	O
type	enum(int,int,int,int)
)	O
{	O
return	O
(	O
type	enum(int,int,int,int)
==	O
R_386_JUMP_SLOT	O
||	O
type	enum(int,int,int,int)
==	O
R_386_GLOB_DAT	O
||	O
type	enum(int,int,int,int)
==	O
R_386_IRELATIVE	O
)	O
;	O
}	O
static	O
bfd_boolean	int
elf_x86_64_valid_plt_reloc_p	O
(	O
unsigned	O
int	O
type	enum(int,int,int,int)
)	O
{	O
return	O
(	O
type	enum(int,int,int,int)
==	O
R_X86_64_JUMP_SLOT	O
||	O
type	enum(int,int,int,int)
==	O
R_X86_64_GLOB_DAT	O
||	O
type	enum(int,int,int,int)
==	O
R_X86_64_IRELATIVE	O
)	O
;	O
}	O
long	O
_bfd_x86_elf_get_synthetic_symtab	O
(	O
bfd	struct
*	O
abfd	*(struct)
,	O
long	O
count	int
,	O
long	O
relsize	O
,	O
bfd_vma	long
got_addr	O
,	O
struct	O
elf_x86_plt	O
plts	O
[	O
]	O
,	O
asymbol	struct(*(struct),*(char),long,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct(*`,long,long,*`)),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct(struct`,*`)),*(struct),*(struct(*`,*`,long,int,*`,union`)),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),union(*(void),long))
*	O
*	O
dynsyms	O
,	O
asymbol	struct(*(struct),*(char),long,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct(*`,long,long,*`)),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct(struct`,*`)),*(struct),*(struct(*`,*`,long,int,*`,union`)),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),union(*(void),long))
*	O
*	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
)	O
{	O
long	O
size	long
,	O
i	*(struct)
,	O
n	long
,	O
len	long
;	O
int	O
j	O
;	O
unsigned	O
int	O
plt_got_offset	O
,	O
plt_entry_size	O
;	O
asymbol	struct(*(struct),*(char),long,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct(*`,long,long,*`)),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct(struct`,*`)),*(struct),*(struct(*`,*`,long,int,*`,union`)),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),union(*(void),long))
*	O
s	*(void)
;	O
bfd_byte	char
*	O
plt_contents	O
;	O
long	O
dynrelcount	O
;	O
arelent	struct(*(*(struct)),long,long,*(struct))
*	O
*	O
dynrelbuf	O
,	O
*	O
p	*(void)
;	O
char	O
*	O
names	O
;	O
const	O
struct	O
elf_backend_data	O
*	O
bed	O
;	O
bfd_vma	long
(	O
*	O
get_plt_got_vma	O
)	O
(	O
struct	O
elf_x86_plt	O
*	O
,	O
bfd_vma	long
,	O
bfd_vma	long
,	O
bfd_vma	long
)	O
;	O
bfd_boolean	int
(	O
*	O
valid_plt_reloc_p	O
)	O
(	O
unsigned	O
int	O
)	O
;	O
dynrelbuf	O
=	O
NULL	O
;	O
if	O
(	O
count	int
==	O
0	int
)	O
goto	O
bad_return	O
;	O
dynrelbuf	O
=	O
(	O
arelent	struct(*(*(struct)),long,long,*(struct))
*	O
*	O
)	O
bfd_malloc	O
(	O
relsize	O
)	O
;	O
if	O
(	O
dynrelbuf	O
==	O
NULL	O
)	O
goto	O
bad_return	O
;	O
dynrelcount	O
=	O
bfd_canonicalize_dynamic_reloc	O
(	O
abfd	*(struct)
,	O
dynrelbuf	O
,	O
dynsyms	O
)	O
;	O
if	O
(	O
dynrelcount	O
<=	O
0	int
)	O
goto	O
bad_return	O
;	O
qsort	(*(void),long,long,*((*(void),*(void))->(int)))->(void)
(	O
dynrelbuf	O
,	O
dynrelcount	O
,	O
sizeof	O
(	O
arelent	struct(*(*(struct)),long,long,*(struct))
*	O
)	O
,	O
_bfd_x86_elf_compare_relocs	O
)	O
;	O
size	long
=	O
count	int
*	O
sizeof	O
(	O
asymbol	struct(*(struct),*(char),long,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct(*`,long,long,*`)),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct(struct`,*`)),*(struct),*(struct(*`,*`,long,int,*`,union`)),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),union(*(void),long))
)	O
;	O
n	long
=	O
0	int
;	O
for	O
(	O
i	*(struct)
=	O
0	int
;	O
i	*(struct)
<	O
dynrelcount	O
;	O
i	*(struct)
++	O
)	O
{	O
p	*(void)
=	O
dynrelbuf	O
[	O
i	*(struct)
]	O
;	O
size	long
+=	O
strlen	(*(char))->(long)
(	O
(	O
*	O
p	*(void)
->	O
sym_ptr_ptr	*(*(struct))
)	O
->	O
name	*(char)
)	O
+	O
sizeof	O
(	O
"@plt"	*(char)
)	O
;	O
if	O
(	O
p	*(void)
->	O
addend	long
!=	O
0	int
)	O
size	long
+=	O
sizeof	O
(	O
"+0x"	*(char)
)	O
-	O
1	int
+	O
8	int
+	O
8	int
*	O
ABI_64_P	O
(	O
abfd	*(struct)
)	O
;	O
}	O
s	*(void)
=	O
*	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
=	O
(	O
asymbol	struct(*(struct),*(char),long,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct(*`,long,long,*`)),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct(struct`,*`)),*(struct),*(struct(*`,*`,long,int,*`,union`)),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),union(*(void),long))
*	O
)	O
bfd_zmalloc	O
(	O
size	long
)	O
;	O
if	O
(	O
s	*(void)
==	O
NULL	O
)	O
goto	O
bad_return	O
;	O
bed	O
=	O
get_elf_backend_data	O
(	O
abfd	*(struct)
)	O
;	O
if	O
(	O
bed	O
->	O
target_id	O
==	O
X86_64_ELF_DATA	O
)	O
{	O
get_plt_got_vma	O
=	O
elf_x86_64_get_plt_got_vma	O
;	O
valid_plt_reloc_p	O
=	O
elf_x86_64_valid_plt_reloc_p	O
;	O
}	O
else	O
{	O
get_plt_got_vma	O
=	O
elf_i386_get_plt_got_vma	O
;	O
valid_plt_reloc_p	O
=	O
elf_i386_valid_plt_reloc_p	O
;	O
if	O
(	O
got_addr	O
)	O
{	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
=	O
bfd_get_section_by_name	(*(struct),*(char))->(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))))
(	O
abfd	*(struct)
,	O
".got.plt"	*(char)
)	O
;	O
if	O
(	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
!=	O
NULL	O
)	O
got_addr	O
=	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
vma	long
;	O
else	O
{	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
=	O
bfd_get_section_by_name	(*(struct),*(char))->(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))))
(	O
abfd	*(struct)
,	O
".got"	*(char)
)	O
;	O
if	O
(	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
!=	O
NULL	O
)	O
got_addr	O
=	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
vma	long
;	O
}	O
if	O
(	O
got_addr	O
==	O
(	O
bfd_vma	long
)	O
-	O
1	int
)	O
goto	O
bad_return	O
;	O
}	O
}	O
names	O
=	O
(	O
char	O
*	O
)	O
(	O
s	*(void)
+	O
count	int
)	O
;	O
size	long
=	O
0	int
;	O
n	long
=	O
0	int
;	O
for	O
(	O
j	O
=	O
0	int
;	O
plts	O
[	O
j	O
]	O
.	O
name	*(char)
!=	O
NULL	O
;	O
j	O
++	O
)	O
if	O
(	O
(	O
plt_contents	O
=	O
plts	O
[	O
j	O
]	O
.	O
contents	*(char)
)	O
!=	O
NULL	O
)	O
{	O
long	O
k	O
;	O
bfd_vma	long
offset	long
;	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
plt	O
;	O
struct	O
elf_x86_plt	O
*	O
plt_p	O
=	O
&	O
plts	O
[	O
j	O
]	O
;	O
plt_got_offset	O
=	O
plt_p	O
->	O
plt_got_offset	O
;	O
plt_entry_size	O
=	O
plt_p	O
->	O
plt_entry_size	O
;	O
plt	O
=	O
plt_p	O
->	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
;	O
if	O
(	O
(	O
plt_p	O
->	O
type	enum(int,int,int,int)
&	O
plt_lazy	O
)	O
)	O
{	O
k	O
=	O
1	int
;	O
offset	long
=	O
plt_entry_size	O
;	O
}	O
else	O
{	O
k	O
=	O
0	int
;	O
offset	long
=	O
0	int
;	O
}	O
for	O
(	O
;	O
k	O
<	O
plt_p	O
->	O
count	int
;	O
k	O
++	O
)	O
{	O
int	O
off	O
;	O
bfd_vma	long
got_vma	O
;	O
long	O
min	O
,	O
max	O
,	O
mid	O
;	O
off	O
=	O
H_GET_32	O
(	O
abfd	*(struct)
,	O
(	O
plt_contents	O
+	O
offset	long
+	O
plt_got_offset	O
)	O
)	O
;	O
got_vma	O
=	O
get_plt_got_vma	O
(	O
plt_p	O
,	O
off	O
,	O
offset	long
,	O
got_addr	O
)	O
;	O
p	*(void)
=	O
dynrelbuf	O
[	O
0	int
]	O
;	O
min	O
=	O
0	int
;	O
max	O
=	O
dynrelcount	O
;	O
while	O
(	O
(	O
min	O
+	O
1	int
)	O
<	O
max	O
)	O
{	O
arelent	struct(*(*(struct)),long,long,*(struct))
*	O
r	O
;	O
mid	O
=	O
(	O
min	O
+	O
max	O
)	O
/	O
2	int
;	O
r	O
=	O
dynrelbuf	O
[	O
mid	O
]	O
;	O
if	O
(	O
got_vma	O
>	O
r	O
->	O
address	long
)	O
min	O
=	O
mid	O
;	O
else	O
if	O
(	O
got_vma	O
<	O
r	O
->	O
address	long
)	O
max	O
=	O
mid	O
;	O
else	O
{	O
p	*(void)
=	O
r	O
;	O
break	O
;	O
}	O
}	O
if	O
(	O
got_vma	O
==	O
p	*(void)
->	O
address	long
&&	O
p	*(void)
->	O
howto	*(struct)
!=	O
NULL	O
&&	O
valid_plt_reloc_p	O
(	O
p	*(void)
->	O
howto	*(struct)
->	O
type	enum(int,int,int,int)
)	O
)	O
{	O
*	O
s	*(void)
=	O
*	O
*	O
p	*(void)
->	O
sym_ptr_ptr	*(*(struct))
;	O
if	O
(	O
(	O
s	*(void)
->	O
flags	int
&	O
BSF_LOCAL	O
)	O
==	O
0	int
)	O
s	*(void)
->	O
flags	int
|=	O
BSF_GLOBAL	O
;	O
s	*(void)
->	O
flags	int
|=	O
BSF_SYNTHETIC	O
;	O
s	*(void)
->	O
flags	int
&=	O
~	O
BSF_SECTION_SYM	O
;	O
s	*(void)
->	O
section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
=	O
plt	O
;	O
s	*(void)
->	O
the_bfd	*(struct)
=	O
plt	O
->	O
owner	*(struct)
;	O
s	*(void)
->	O
value	long
=	O
offset	long
;	O
s	*(void)
->	O
udata	union(*(void),long)
.	O
p	*(void)
=	O
NULL	O
;	O
s	*(void)
->	O
name	*(char)
=	O
names	O
;	O
len	long
=	O
strlen	(*(char))->(long)
(	O
(	O
*	O
p	*(void)
->	O
sym_ptr_ptr	*(*(struct))
)	O
->	O
name	*(char)
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
names	O
,	O
(	O
*	O
p	*(void)
->	O
sym_ptr_ptr	*(*(struct))
)	O
->	O
name	*(char)
,	O
len	long
)	O
;	O
names	O
+=	O
len	long
;	O
if	O
(	O
p	*(void)
->	O
addend	long
!=	O
0	int
)	O
{	O
char	O
buf	*(void)
[	O
30	int
]	O
,	O
*	O
a	*(char)
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
names	O
,	O
"+0x"	*(char)
,	O
sizeof	O
(	O
"+0x"	*(char)
)	O
-	O
1	int
)	O
;	O
names	O
+=	O
sizeof	O
(	O
"+0x"	*(char)
)	O
-	O
1	int
;	O
bfd_sprintf_vma	(*(struct),*(char),long)->(void)
(	O
abfd	*(struct)
,	O
buf	*(void)
,	O
p	*(void)
->	O
addend	long
)	O
;	O
for	O
(	O
a	*(char)
=	O
buf	*(void)
;	O
*	O
a	*(char)
==	O
'0'	O
;	O
++	O
a	*(char)
)	O
;	O
size	long
=	O
strlen	(*(char))->(long)
(	O
a	*(char)
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
names	O
,	O
a	*(char)
,	O
size	long
)	O
;	O
names	O
+=	O
size	long
;	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
names	O
,	O
"@plt"	*(char)
,	O
sizeof	O
(	O
"@plt"	*(char)
)	O
)	O
;	O
names	O
+=	O
sizeof	O
(	O
"@plt"	*(char)
)	O
;	O
n	long
++	O
;	O
s	*(void)
++	O
;	O
p	*(void)
->	O
howto	*(struct)
=	O
NULL	O
;	O
}	O
offset	long
+=	O
plt_entry_size	O
;	O
}	O
}	O
if	O
(	O
n	long
==	O
0	int
)	O
{	O
bad_return	O
:	O
count	int
=	O
-	O
1	int
;	O
}	O
else	O
count	int
=	O
n	long
;	O
for	O
(	O
j	O
=	O
0	int
;	O
plts	O
[	O
j	O
]	O
.	O
name	*(char)
!=	O
NULL	O
;	O
j	O
++	O
)	O
if	O
(	O
plts	O
[	O
j	O
]	O
.	O
contents	*(char)
!=	O
NULL	O
)	O
free	(*(void))->(void)
(	O
plts	O
[	O
j	O
]	O
.	O
contents	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
dynrelbuf	O
)	O
;	O
return	O
count	int
;	O
}	O
enum	O
elf_property_kind	O
_bfd_x86_elf_parse_gnu_properties	O
(	O
bfd	struct
*	O
abfd	*(struct)
,	O
unsigned	O
int	O
type	enum(int,int,int,int)
,	O
bfd_byte	char
*	O
ptr	*(*(char))
,	O
unsigned	O
int	O
datasz	O
)	O
{	O
elf_property	O
*	O
prop	O
;	O
if	O
(	O
type	enum(int,int,int,int)
==	O
GNU_PROPERTY_X86_COMPAT_ISA_1_USED	O
||	O
type	enum(int,int,int,int)
==	O
GNU_PROPERTY_X86_COMPAT_ISA_1_NEEDED	O
||	O
(	O
type	enum(int,int,int,int)
>=	O
GNU_PROPERTY_X86_UINT32_AND_LO	O
&&	O
type	enum(int,int,int,int)
<=	O
GNU_PROPERTY_X86_UINT32_AND_HI	O
)	O
||	O
(	O
type	enum(int,int,int,int)
>=	O
GNU_PROPERTY_X86_UINT32_OR_LO	O
&&	O
type	enum(int,int,int,int)
<=	O
GNU_PROPERTY_X86_UINT32_OR_HI	O
)	O
||	O
(	O
type	enum(int,int,int,int)
>=	O
GNU_PROPERTY_X86_UINT32_OR_AND_LO	O
&&	O
type	enum(int,int,int,int)
<=	O
GNU_PROPERTY_X86_UINT32_OR_AND_HI	O
)	O
)	O
{	O
if	O
(	O
datasz	O
!=	O
4	int
)	O
{	O
_bfd_error_handler	(*(char))->(void)
(	O
_	O
(	O
"error: %pB: <corrupt x86 property (0x%x) size: 0x%x>"	*(char)
)	O
,	O
abfd	*(struct)
,	O
type	enum(int,int,int,int)
,	O
datasz	O
)	O
;	O
return	O
property_corrupt	O
;	O
}	O
prop	O
=	O
_bfd_elf_get_property	O
(	O
abfd	*(struct)
,	O
type	enum(int,int,int,int)
,	O
datasz	O
)	O
;	O
prop	O
->	O
u	union(long,*(struct))
.	O
number	O
|=	O
bfd_h_get_32	O
(	O
abfd	*(struct)
,	O
ptr	*(*(char))
)	O
;	O
prop	O
->	O
pr_kind	O
=	O
property_number	O
;	O
return	O
property_number	O
;	O
}	O
return	O
property_ignored	O
;	O
}	O
bfd_boolean	int
_bfd_x86_elf_merge_gnu_properties	O
(	O
struct	O
bfd_link_info	O
*	O
info	*(void)
,	O
bfd	struct
*	O
abfd	*(struct)
ATTRIBUTE_UNUSED	O
,	O
bfd	struct
*	O
bbfd	*(struct)
ATTRIBUTE_UNUSED	O
,	O
elf_property	O
*	O
aprop	O
,	O
elf_property	O
*	O
bprop	O
)	O
{	O
unsigned	O
int	O
number	O
,	O
features	O
;	O
bfd_boolean	int
updated	O
=	O
FALSE	O
;	O
unsigned	O
int	O
pr_type	O
=	O
aprop	O
!=	O
NULL	O
?	O
aprop	O
->	O
pr_type	O
:	O
bprop	O
->	O
pr_type	O
;	O
if	O
(	O
pr_type	O
==	O
GNU_PROPERTY_X86_COMPAT_ISA_1_USED	O
||	O
(	O
pr_type	O
>=	O
GNU_PROPERTY_X86_UINT32_OR_AND_LO	O
&&	O
pr_type	O
<=	O
GNU_PROPERTY_X86_UINT32_OR_AND_HI	O
)	O
)	O
{	O
if	O
(	O
aprop	O
==	O
NULL	O
||	O
bprop	O
==	O
NULL	O
)	O
{	O
if	O
(	O
aprop	O
!=	O
NULL	O
)	O
{	O
aprop	O
->	O
pr_kind	O
=	O
property_remove	O
;	O
updated	O
=	O
TRUE	int
;	O
}	O
}	O
else	O
{	O
number	O
=	O
aprop	O
->	O
u	union(long,*(struct))
.	O
number	O
;	O
aprop	O
->	O
u	union(long,*(struct))
.	O
number	O
=	O
number	O
|	O
bprop	O
->	O
u	union(long,*(struct))
.	O
number	O
;	O
updated	O
=	O
number	O
!=	O
(	O
unsigned	O
int	O
)	O
aprop	O
->	O
u	union(long,*(struct))
.	O
number	O
;	O
}	O
return	O
updated	O
;	O
}	O
else	O
if	O
(	O
pr_type	O
==	O
GNU_PROPERTY_X86_COMPAT_ISA_1_NEEDED	O
||	O
(	O
pr_type	O
>=	O
GNU_PROPERTY_X86_UINT32_OR_LO	O
&&	O
pr_type	O
<=	O
GNU_PROPERTY_X86_UINT32_OR_HI	O
)	O
)	O
{	O
if	O
(	O
aprop	O
!=	O
NULL	O
&&	O
bprop	O
!=	O
NULL	O
)	O
{	O
number	O
=	O
aprop	O
->	O
u	union(long,*(struct))
.	O
number	O
;	O
aprop	O
->	O
u	union(long,*(struct))
.	O
number	O
=	O
number	O
|	O
bprop	O
->	O
u	union(long,*(struct))
.	O
number	O
;	O
if	O
(	O
aprop	O
->	O
u	union(long,*(struct))
.	O
number	O
==	O
0	int
)	O
{	O
aprop	O
->	O
pr_kind	O
=	O
property_remove	O
;	O
updated	O
=	O
TRUE	int
;	O
}	O
else	O
updated	O
=	O
number	O
!=	O
(	O
unsigned	O
int	O
)	O
aprop	O
->	O
u	union(long,*(struct))
.	O
number	O
;	O
}	O
else	O
{	O
if	O
(	O
aprop	O
!=	O
NULL	O
)	O
{	O
if	O
(	O
aprop	O
->	O
u	union(long,*(struct))
.	O
number	O
==	O
0	int
)	O
{	O
aprop	O
->	O
pr_kind	O
=	O
property_remove	O
;	O
updated	O
=	O
TRUE	int
;	O
}	O
}	O
else	O
{	O
updated	O
=	O
bprop	O
->	O
u	union(long,*(struct))
.	O
number	O
!=	O
0	int
;	O
}	O
}	O
return	O
updated	O
;	O
}	O
else	O
if	O
(	O
pr_type	O
>=	O
GNU_PROPERTY_X86_UINT32_AND_LO	O
&&	O
pr_type	O
<=	O
GNU_PROPERTY_X86_UINT32_AND_HI	O
)	O
{	O
const	O
struct	O
elf_backend_data	O
*	O
bed	O
=	O
get_elf_backend_data	O
(	O
info	*(void)
->	O
output_bfd	*(struct)
)	O
;	O
struct	O
elf_x86_link_hash_table	O
*	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
=	O
elf_x86_hash_table	O
(	O
info	*(void)
,	O
bed	O
->	O
target_id	O
)	O
;	O
if	O
(	O
!	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
)	O
abort	()->(void)
(	O
)	O
;	O
if	O
(	O
aprop	O
!=	O
NULL	O
&&	O
bprop	O
!=	O
NULL	O
)	O
{	O
features	O
=	O
0	int
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
params	O
->	O
ibt	O
)	O
features	O
=	O
GNU_PROPERTY_X86_FEATURE_1_IBT	O
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
params	O
->	O
shstk	O
)	O
features	O
|=	O
GNU_PROPERTY_X86_FEATURE_1_SHSTK	O
;	O
number	O
=	O
aprop	O
->	O
u	union(long,*(struct))
.	O
number	O
;	O
aprop	O
->	O
u	union(long,*(struct))
.	O
number	O
=	O
(	O
number	O
&	O
bprop	O
->	O
u	union(long,*(struct))
.	O
number	O
)	O
|	O
features	O
;	O
updated	O
=	O
number	O
!=	O
(	O
unsigned	O
int	O
)	O
aprop	O
->	O
u	union(long,*(struct))
.	O
number	O
;	O
if	O
(	O
aprop	O
->	O
u	union(long,*(struct))
.	O
number	O
==	O
0	int
)	O
aprop	O
->	O
pr_kind	O
=	O
property_remove	O
;	O
}	O
else	O
{	O
features	O
=	O
0	int
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
params	O
->	O
ibt	O
)	O
features	O
=	O
GNU_PROPERTY_X86_FEATURE_1_IBT	O
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
params	O
->	O
shstk	O
)	O
features	O
|=	O
GNU_PROPERTY_X86_FEATURE_1_SHSTK	O
;	O
if	O
(	O
features	O
)	O
{	O
if	O
(	O
aprop	O
!=	O
NULL	O
)	O
{	O
updated	O
=	O
features	O
!=	O
(	O
unsigned	O
int	O
)	O
aprop	O
->	O
u	union(long,*(struct))
.	O
number	O
;	O
aprop	O
->	O
u	union(long,*(struct))
.	O
number	O
=	O
features	O
;	O
}	O
else	O
{	O
updated	O
=	O
TRUE	int
;	O
bprop	O
->	O
u	union(long,*(struct))
.	O
number	O
=	O
features	O
;	O
}	O
}	O
else	O
if	O
(	O
aprop	O
!=	O
NULL	O
)	O
{	O
aprop	O
->	O
pr_kind	O
=	O
property_remove	O
;	O
updated	O
=	O
TRUE	int
;	O
}	O
}	O
return	O
updated	O
;	O
}	O
else	O
{	O
abort	()->(void)
(	O
)	O
;	O
}	O
return	O
updated	O
;	O
}	O
bfd	struct
*	O
_bfd_x86_elf_link_setup_gnu_properties	O
(	O
struct	O
bfd_link_info	O
*	O
info	*(void)
,	O
struct	O
elf_x86_init_table	O
*	O
init_table	O
)	O
{	O
bfd_boolean	int
normal_target	O
;	O
bfd_boolean	int
lazy_plt	O
;	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
,	O
*	O
pltsec	O
;	O
bfd	struct
*	O
dynobj	O
;	O
bfd_boolean	int
use_ibt_plt	O
;	O
unsigned	O
int	O
plt_alignment	O
,	O
features	O
;	O
struct	O
elf_x86_link_hash_table	O
*	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
;	O
bfd	struct
*	O
pbfd	O
;	O
bfd	struct
*	O
ebfd	O
=	O
NULL	O
;	O
elf_property	O
*	O
prop	O
;	O
const	O
struct	O
elf_backend_data	O
*	O
bed	O
;	O
unsigned	O
int	O
class_align	O
=	O
ABI_64_P	O
(	O
info	*(void)
->	O
output_bfd	*(struct)
)	O
?	O
3	int
:	O
2	int
;	O
unsigned	O
int	O
got_align	O
;	O
for	O
(	O
pbfd	O
=	O
info	*(void)
->	O
input_bfds	O
;	O
pbfd	O
!=	O
NULL	O
;	O
pbfd	O
=	O
pbfd	O
->	O
link	(*(char),*(char))->(int)
.	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
)	O
if	O
(	O
bfd_get_flavour	O
(	O
pbfd	O
)	O
==	O
bfd_target_elf_flavour	int
&&	O
bfd_count_sections	(*(struct(*(char),*(struct),*(void),*(struct),*(struct(*`,*`,*`,*`,*`,*`,long,long,int,enum(int,int,int,int,int),enum(int,int,int,int),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int,int),int,int,*`,long,long,struct`,*`,*`,int,int,long,*`,int,int,*`,*`,*`,*`,*`,*`,union`,union`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,long,long,int,enum(int,int,int,int,int),enum(int,int,int,int),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int,int),int,int,*`,long,long,struct`,*`,*`,int,int,long,*`,int,int,*`,*`,*`,*`,*`,*`,union`,union`,*`,*`,*`)),long,long,int,enum(int,int,int,int,int),enum(int,int,int,int),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int,int),int,int,*(struct(*`,*`,*`,*`,*`,*`,long,long,int,enum(int,int,int,int,int),enum(int,int,int,int),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int,int),int,int,*`,long,long,struct`,*`,*`,int,int,long,*`,int,int,*`,*`,*`,*`,*`,*`,union`,union`,*`,*`,*`)),long,long,struct(*(*`),*((*`,*`,*`)->(*`)),*(void),int,int,int,int),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,long,*(*(struct`)),int,int,*(struct(int,int,int,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,*`,*`,int,int,*`,*`,*`,*`,int)),*(void),*(struct(*`,*`,*`,*`,*`,*`,long,long,int,enum(int,int,int,int,int),enum(int,int,int,int),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int,int),int,int,*`,long,long,struct`,*`,*`,int,int,long,*`,int,int,*`,*`,*`,*`,*`,*`,union`,union`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,long,long,int,enum(int,int,int,int,int),enum(int,int,int,int),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int,int),int,int,*`,long,long,struct`,*`,*`,int,int,long,*`,int,int,*`,*`,*`,*`,*`,*`,union`,union`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,long,long,int,enum(int,int,int,int,int),enum(int,int,int,int),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int,int),int,int,*`,long,long,struct`,*`,*`,int,int,long,*`,int,int,*`,*`,*`,*`,*`,*`,union`,union`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,long,long,int,enum(int,int,int,int,int),enum(int,int,int,int),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int,int),int,int,*`,long,long,struct`,*`,*`,int,int,long,*`,int,int,*`,*`,*`,*`,*`,*`,union`,union`,*`,*`,*`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(void)),*(void),*(void),*(struct(long,array(char))))))->(int)
(	O
pbfd	O
)	O
!=	O
0	int
)	O
{	O
ebfd	O
=	O
pbfd	O
;	O
if	O
(	O
elf_properties	O
(	O
pbfd	O
)	O
!=	O
NULL	O
)	O
break	O
;	O
}	O
bed	O
=	O
get_elf_backend_data	O
(	O
info	*(void)
->	O
output_bfd	*(struct)
)	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
=	O
elf_x86_hash_table	O
(	O
info	*(void)
,	O
bed	O
->	O
target_id	O
)	O
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
==	O
NULL	O
)	O
return	O
pbfd	O
;	O
features	O
=	O
0	int
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
params	O
->	O
ibt	O
)	O
{	O
features	O
=	O
GNU_PROPERTY_X86_FEATURE_1_IBT	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
params	O
->	O
cet_report	O
&=	O
~	O
cet_report_ibt	O
;	O
}	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
params	O
->	O
shstk	O
)	O
{	O
features	O
|=	O
GNU_PROPERTY_X86_FEATURE_1_SHSTK	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
params	O
->	O
cet_report	O
&=	O
~	O
cet_report_shstk	O
;	O
}	O
if	O
(	O
!	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
params	O
->	O
cet_report	O
&	O
(	O
cet_report_ibt	O
|	O
cet_report_shstk	O
)	O
)	O
)	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
params	O
->	O
cet_report	O
=	O
cet_report_none	O
;	O
if	O
(	O
ebfd	O
!=	O
NULL	O
)	O
{	O
prop	O
=	O
NULL	O
;	O
if	O
(	O
features	O
)	O
{	O
prop	O
=	O
_bfd_elf_get_property	O
(	O
ebfd	O
,	O
GNU_PROPERTY_X86_FEATURE_1_AND	O
,	O
4	int
)	O
;	O
prop	O
->	O
u	union(long,*(struct))
.	O
number	O
|=	O
features	O
;	O
prop	O
->	O
pr_kind	O
=	O
property_number	O
;	O
}	O
if	O
(	O
prop	O
!=	O
NULL	O
&&	O
pbfd	O
==	O
NULL	O
)	O
{	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
=	O
bfd_make_section_with_flags	(*(struct),*(char),int)->(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))))
(	O
ebfd	O
,	O
NOTE_GNU_PROPERTY_SECTION_NAME	O
,	O
(	O
SEC_ALLOC	O
|	O
SEC_LOAD	O
|	O
SEC_IN_MEMORY	O
|	O
SEC_READONLY	O
|	O
SEC_HAS_CONTENTS	O
|	O
SEC_DATA	O
)	O
)	O
;	O
if	O
(	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
==	O
NULL	O
)	O
info	*(void)
->	O
callbacks	O
->	O
einfo	O
(	O
_	O
(	O
"%F%P: failed to create GNU property section\n"	*(char)
)	O
)	O
;	O
if	O
(	O
!	O
bfd_set_section_alignment	(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int)->(int)
(	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
,	O
class_align	O
)	O
)	O
{	O
error_alignment	O
:	O
info	*(void)
->	O
callbacks	O
->	O
einfo	O
(	O
_	O
(	O
"%F%pA: failed to align section\n"	*(char)
)	O
,	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
)	O
;	O
}	O
elf_section_type	O
(	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
)	O
=	O
SHT_NOTE	O
;	O
}	O
}	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
params	O
->	O
cet_report	O
)	O
{	O
bfd	struct
*	O
abfd	*(struct)
;	O
const	O
char	O
*	O
msg	O
;	O
elf_property_list	O
*	O
p	*(void)
;	O
bfd_boolean	int
missing_ibt	O
,	O
missing_shstk	O
;	O
bfd_boolean	int
check_ibt	O
=	O
!	O
!	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
params	O
->	O
cet_report	O
&	O
cet_report_ibt	O
)	O
;	O
bfd_boolean	int
check_shstk	O
=	O
!	O
!	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
params	O
->	O
cet_report	O
&	O
cet_report_shstk	O
)	O
;	O
if	O
(	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
params	O
->	O
cet_report	O
&	O
cet_report_warning	O
)	O
)	O
msg	O
=	O
_	O
(	O
"%P: %pB: warning: missing %s\n"	*(char)
)	O
;	O
else	O
msg	O
=	O
_	O
(	O
"%X%P: %pB: error: missing %s\n"	*(char)
)	O
;	O
for	O
(	O
abfd	*(struct)
=	O
info	*(void)
->	O
input_bfds	O
;	O
abfd	*(struct)
!=	O
NULL	O
;	O
abfd	*(struct)
=	O
abfd	*(struct)
->	O
link	(*(char),*(char))->(int)
.	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
)	O
if	O
(	O
!	O
(	O
abfd	*(struct)
->	O
flags	int
&	O
(	O
DYNAMIC	O
|	O
BFD_PLUGIN	O
|	O
BFD_LINKER_CREATED	O
)	O
)	O
&&	O
bfd_get_flavour	O
(	O
abfd	*(struct)
)	O
==	O
bfd_target_elf_flavour	int
)	O
{	O
for	O
(	O
p	*(void)
=	O
elf_properties	O
(	O
abfd	*(struct)
)	O
;	O
p	*(void)
;	O
p	*(void)
=	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
)	O
if	O
(	O
p	*(void)
->	O
property	O
.	O
pr_type	O
==	O
GNU_PROPERTY_X86_FEATURE_1_AND	O
)	O
break	O
;	O
missing_ibt	O
=	O
check_ibt	O
;	O
missing_shstk	O
=	O
check_shstk	O
;	O
if	O
(	O
p	*(void)
)	O
{	O
missing_ibt	O
&=	O
!	O
(	O
p	*(void)
->	O
property	O
.	O
u	union(long,*(struct))
.	O
number	O
&	O
GNU_PROPERTY_X86_FEATURE_1_IBT	O
)	O
;	O
missing_shstk	O
&=	O
!	O
(	O
p	*(void)
->	O
property	O
.	O
u	union(long,*(struct))
.	O
number	O
&	O
GNU_PROPERTY_X86_FEATURE_1_SHSTK	O
)	O
;	O
}	O
if	O
(	O
missing_ibt	O
||	O
missing_shstk	O
)	O
{	O
const	O
char	O
*	O
missing	O
;	O
if	O
(	O
missing_ibt	O
&&	O
missing_shstk	O
)	O
missing	O
=	O
_	O
(	O
"IBT and SHSTK properties"	*(char)
)	O
;	O
else	O
if	O
(	O
missing_ibt	O
)	O
missing	O
=	O
_	O
(	O
"IBT property"	*(char)
)	O
;	O
else	O
missing	O
=	O
_	O
(	O
"SHSTK property"	*(char)
)	O
;	O
info	*(void)
->	O
callbacks	O
->	O
einfo	O
(	O
msg	O
,	O
abfd	*(struct)
,	O
missing	O
)	O
;	O
}	O
}	O
}	O
pbfd	O
=	O
_bfd_elf_link_setup_gnu_properties	O
(	O
info	*(void)
)	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
r_info	O
=	O
init_table	O
->	O
r_info	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
r_sym	O
=	O
init_table	O
->	O
r_sym	O
;	O
if	O
(	O
bfd_link_relocatable	O
(	O
info	*(void)
)	O
)	O
return	O
pbfd	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt0_pad_byte	O
=	O
init_table	O
->	O
plt0_pad_byte	O
;	O
use_ibt_plt	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
params	O
->	O
ibtplt	O
||	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
params	O
->	O
ibt	O
;	O
if	O
(	O
!	O
use_ibt_plt	O
&&	O
pbfd	O
!=	O
NULL	O
)	O
{	O
elf_property_list	O
*	O
p	*(void)
;	O
for	O
(	O
p	*(void)
=	O
elf_properties	O
(	O
pbfd	O
)	O
;	O
p	*(void)
;	O
p	*(void)
=	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
)	O
{	O
if	O
(	O
GNU_PROPERTY_X86_FEATURE_1_AND	O
==	O
p	*(void)
->	O
property	O
.	O
pr_type	O
)	O
{	O
use_ibt_plt	O
=	O
!	O
!	O
(	O
p	*(void)
->	O
property	O
.	O
u	union(long,*(struct))
.	O
number	O
&	O
GNU_PROPERTY_X86_FEATURE_1_IBT	O
)	O
;	O
break	O
;	O
}	O
else	O
if	O
(	O
GNU_PROPERTY_X86_FEATURE_1_AND	O
<	O
p	*(void)
->	O
property	O
.	O
pr_type	O
)	O
break	O
;	O
}	O
}	O
dynobj	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
dynobj	O
;	O
if	O
(	O
dynobj	O
==	O
NULL	O
)	O
{	O
if	O
(	O
pbfd	O
!=	O
NULL	O
)	O
{	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
dynobj	O
=	O
pbfd	O
;	O
dynobj	O
=	O
pbfd	O
;	O
}	O
else	O
{	O
bfd	struct
*	O
abfd	*(struct)
;	O
for	O
(	O
abfd	*(struct)
=	O
info	*(void)
->	O
input_bfds	O
;	O
abfd	*(struct)
!=	O
NULL	O
;	O
abfd	*(struct)
=	O
abfd	*(struct)
->	O
link	(*(char),*(char))->(int)
.	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
)	O
if	O
(	O
bfd_get_flavour	O
(	O
abfd	*(struct)
)	O
==	O
bfd_target_elf_flavour	int
&&	O
(	O
abfd	*(struct)
->	O
flags	int
&	O
(	O
DYNAMIC	O
|	O
BFD_LINKER_CREATED	O
|	O
BFD_PLUGIN	O
)	O
)	O
==	O
0	int
&&	O
bed	O
->	O
relocs_compatible	O
(	O
abfd	*(struct)
->	O
xvec	*(struct)
,	O
info	*(void)
->	O
output_bfd	*(struct)
->	O
xvec	*(struct)
)	O
)	O
{	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
dynobj	O
=	O
abfd	*(struct)
;	O
dynobj	O
=	O
abfd	*(struct)
;	O
break	O
;	O
}	O
}	O
}	O
if	O
(	O
dynobj	O
==	O
NULL	O
)	O
return	O
pbfd	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
has_plt0	O
=	O
1	int
;	O
normal_target	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
target_os	O
==	O
is_normal	O
;	O
if	O
(	O
normal_target	O
)	O
{	O
if	O
(	O
use_ibt_plt	O
)	O
{	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
lazy_plt	O
=	O
init_table	O
->	O
lazy_ibt_plt	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
non_lazy_plt	O
=	O
init_table	O
->	O
non_lazy_ibt_plt	O
;	O
}	O
else	O
{	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
lazy_plt	O
=	O
init_table	O
->	O
lazy_plt	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
non_lazy_plt	O
=	O
init_table	O
->	O
non_lazy_plt	O
;	O
}	O
}	O
else	O
{	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
lazy_plt	O
=	O
init_table	O
->	O
lazy_plt	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
non_lazy_plt	O
=	O
NULL	O
;	O
}	O
pltsec	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
splt	O
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
non_lazy_plt	O
!=	O
NULL	O
&&	O
(	O
!	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
has_plt0	O
||	O
pltsec	O
==	O
NULL	O
)	O
)	O
{	O
lazy_plt	O
=	O
FALSE	O
;	O
if	O
(	O
bfd_link_pic	O
(	O
info	*(void)
)	O
)	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
plt_entry	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
non_lazy_plt	O
->	O
pic_plt_entry	O
;	O
else	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
plt_entry	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
non_lazy_plt	O
->	O
plt_entry	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
plt_entry_size	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
non_lazy_plt	O
->	O
plt_entry_size	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
plt_got_offset	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
non_lazy_plt	O
->	O
plt_got_offset	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
plt_got_insn_size	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
non_lazy_plt	O
->	O
plt_got_insn_size	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
eh_frame_plt_size	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
non_lazy_plt	O
->	O
eh_frame_plt_size	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
eh_frame_plt	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
non_lazy_plt	O
->	O
eh_frame_plt	O
;	O
}	O
else	O
{	O
lazy_plt	O
=	O
TRUE	int
;	O
if	O
(	O
bfd_link_pic	O
(	O
info	*(void)
)	O
)	O
{	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
plt0_entry	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
lazy_plt	O
->	O
pic_plt0_entry	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
plt_entry	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
lazy_plt	O
->	O
pic_plt_entry	O
;	O
}	O
else	O
{	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
plt0_entry	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
lazy_plt	O
->	O
plt0_entry	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
plt_entry	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
lazy_plt	O
->	O
plt_entry	O
;	O
}	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
plt_entry_size	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
lazy_plt	O
->	O
plt_entry_size	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
plt_got_offset	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
lazy_plt	O
->	O
plt_got_offset	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
plt_got_insn_size	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
lazy_plt	O
->	O
plt_got_insn_size	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
eh_frame_plt_size	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
lazy_plt	O
->	O
eh_frame_plt_size	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
eh_frame_plt	O
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
lazy_plt	O
->	O
eh_frame_plt	O
;	O
}	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
target_os	O
==	O
is_vxworks	O
&&	O
!	O
elf_vxworks_create_dynamic_sections	O
(	O
dynobj	O
,	O
info	*(void)
,	O
&	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
srelplt2	O
)	O
)	O
{	O
info	*(void)
->	O
callbacks	O
->	O
einfo	O
(	O
_	O
(	O
"%F%P: failed to create VxWorks dynamic sections\n"	*(char)
)	O
)	O
;	O
return	O
pbfd	O
;	O
}	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgot	O
==	O
NULL	O
&&	O
!	O
_bfd_elf_create_got_section	O
(	O
dynobj	O
,	O
info	*(void)
)	O
)	O
info	*(void)
->	O
callbacks	O
->	O
einfo	O
(	O
_	O
(	O
"%F%P: failed to create GOT sections\n"	*(char)
)	O
)	O
;	O
got_align	O
=	O
(	O
bed	O
->	O
target_id	O
==	O
X86_64_ELF_DATA	O
)	O
?	O
3	int
:	O
2	int
;	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgot	O
;	O
if	O
(	O
!	O
bfd_set_section_alignment	(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int)->(int)
(	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
,	O
got_align	O
)	O
)	O
goto	O
error_alignment	O
;	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
sgotplt	O
;	O
if	O
(	O
!	O
bfd_set_section_alignment	(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int)->(int)
(	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
,	O
got_align	O
)	O
)	O
goto	O
error_alignment	O
;	O
if	O
(	O
!	O
_bfd_elf_create_ifunc_sections	O
(	O
dynobj	O
,	O
info	*(void)
)	O
)	O
info	*(void)
->	O
callbacks	O
->	O
einfo	O
(	O
_	O
(	O
"%F%P: failed to create ifunc sections\n"	*(char)
)	O
)	O
;	O
plt_alignment	O
=	O
bfd_log2	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
plt_entry_size	O
)	O
;	O
if	O
(	O
pltsec	O
!=	O
NULL	O
)	O
{	O
if	O
(	O
bfd_link_executable	O
(	O
info	*(void)
)	O
&&	O
!	O
info	*(void)
->	O
nointerp	O
)	O
{	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
s	*(void)
=	O
bfd_get_linker_section	(*(struct),*(char))->(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))))
(	O
dynobj	O
,	O
".interp"	*(char)
)	O
;	O
if	O
(	O
s	*(void)
==	O
NULL	O
)	O
abort	()->(void)
(	O
)	O
;	O
s	*(void)
->	O
size	long
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
dynamic_interpreter_size	O
;	O
s	*(void)
->	O
contents	*(char)
=	O
(	O
unsigned	O
char	O
*	O
)	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
dynamic_interpreter	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
interp	O
=	O
s	*(void)
;	O
}	O
if	O
(	O
normal_target	O
)	O
{	O
flagword	int
pltflags	O
=	O
(	O
bed	O
->	O
dynamic_sec_flags	O
|	O
SEC_ALLOC	O
|	O
SEC_CODE	O
|	O
SEC_LOAD	O
|	O
SEC_READONLY	O
)	O
;	O
unsigned	O
int	O
non_lazy_plt_alignment	O
=	O
bfd_log2	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
non_lazy_plt	O
->	O
plt_entry_size	O
)	O
;	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
=	O
pltsec	O
;	O
if	O
(	O
!	O
bfd_set_section_alignment	(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int)->(int)
(	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
,	O
plt_alignment	O
)	O
)	O
goto	O
error_alignment	O
;	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
=	O
bfd_make_section_anyway_with_flags	(*(struct),*(char),int)->(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))))
(	O
dynobj	O
,	O
".plt.got"	*(char)
,	O
pltflags	O
)	O
;	O
if	O
(	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
==	O
NULL	O
)	O
info	*(void)
->	O
callbacks	O
->	O
einfo	O
(	O
_	O
(	O
"%F%P: failed to create GOT PLT section\n"	*(char)
)	O
)	O
;	O
if	O
(	O
!	O
bfd_set_section_alignment	(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int)->(int)
(	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
,	O
non_lazy_plt_alignment	O
)	O
)	O
goto	O
error_alignment	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got	O
=	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
;	O
if	O
(	O
lazy_plt	O
)	O
{	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
=	O
NULL	O
;	O
if	O
(	O
use_ibt_plt	O
)	O
{	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
=	O
bfd_make_section_anyway_with_flags	(*(struct),*(char),int)->(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))))
(	O
dynobj	O
,	O
".plt.sec"	*(char)
,	O
pltflags	O
)	O
;	O
if	O
(	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
==	O
NULL	O
)	O
info	*(void)
->	O
callbacks	O
->	O
einfo	O
(	O
_	O
(	O
"%F%P: failed to create IBT-enabled PLT section\n"	*(char)
)	O
)	O
;	O
if	O
(	O
!	O
bfd_set_section_alignment	(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int)->(int)
(	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
,	O
plt_alignment	O
)	O
)	O
goto	O
error_alignment	O
;	O
}	O
else	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
params	O
->	O
bndplt	O
&&	O
ABI_64_P	O
(	O
dynobj	O
)	O
)	O
{	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
=	O
bfd_make_section_anyway_with_flags	(*(struct),*(char),int)->(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))))
(	O
dynobj	O
,	O
".plt.sec"	*(char)
,	O
pltflags	O
)	O
;	O
if	O
(	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
==	O
NULL	O
)	O
info	*(void)
->	O
callbacks	O
->	O
einfo	O
(	O
_	O
(	O
"%F%P: failed to create BND PLT section\n"	*(char)
)	O
)	O
;	O
if	O
(	O
!	O
bfd_set_section_alignment	(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int)->(int)
(	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
,	O
non_lazy_plt_alignment	O
)	O
)	O
goto	O
error_alignment	O
;	O
}	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second	O
=	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
;	O
}	O
}	O
if	O
(	O
!	O
info	*(void)
->	O
no_ld_generated_unwind_info	O
)	O
{	O
flagword	int
flags	int
=	O
(	O
SEC_ALLOC	O
|	O
SEC_LOAD	O
|	O
SEC_READONLY	O
|	O
SEC_HAS_CONTENTS	O
|	O
SEC_IN_MEMORY	O
|	O
SEC_LINKER_CREATED	O
)	O
;	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
=	O
bfd_make_section_anyway_with_flags	(*(struct),*(char),int)->(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))))
(	O
dynobj	O
,	O
".eh_frame"	*(char)
,	O
flags	int
)	O
;	O
if	O
(	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
==	O
NULL	O
)	O
info	*(void)
->	O
callbacks	O
->	O
einfo	O
(	O
_	O
(	O
"%F%P: failed to create PLT .eh_frame section\n"	*(char)
)	O
)	O
;	O
if	O
(	O
!	O
bfd_set_section_alignment	(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int)->(int)
(	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
,	O
class_align	O
)	O
)	O
goto	O
error_alignment	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_eh_frame	O
=	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got	O
!=	O
NULL	O
)	O
{	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
=	O
bfd_make_section_anyway_with_flags	(*(struct),*(char),int)->(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))))
(	O
dynobj	O
,	O
".eh_frame"	*(char)
,	O
flags	int
)	O
;	O
if	O
(	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
==	O
NULL	O
)	O
info	*(void)
->	O
callbacks	O
->	O
einfo	O
(	O
_	O
(	O
"%F%P: failed to create GOT PLT .eh_frame section\n"	*(char)
)	O
)	O
;	O
if	O
(	O
!	O
bfd_set_section_alignment	(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int)->(int)
(	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
,	O
class_align	O
)	O
)	O
goto	O
error_alignment	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_got_eh_frame	O
=	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
;	O
}	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second	O
!=	O
NULL	O
)	O
{	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
=	O
bfd_make_section_anyway_with_flags	(*(struct),*(char),int)->(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))))
(	O
dynobj	O
,	O
".eh_frame"	*(char)
,	O
flags	int
)	O
;	O
if	O
(	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
==	O
NULL	O
)	O
info	*(void)
->	O
callbacks	O
->	O
einfo	O
(	O
_	O
(	O
"%F%P: failed to create the second PLT .eh_frame section\n"	*(char)
)	O
)	O
;	O
if	O
(	O
!	O
bfd_set_section_alignment	(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int)->(int)
(	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
,	O
class_align	O
)	O
)	O
goto	O
error_alignment	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt_second_eh_frame	O
=	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
;	O
}	O
}	O
}	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
=	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
elf	O
.	O
iplt	O
;	O
if	O
(	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
!=	O
NULL	O
)	O
{	O
if	O
(	O
!	O
bfd_set_section_alignment	(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int)->(int)
(	O
sec	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
,	O
0	int
)	O
)	O
goto	O
error_alignment	O
;	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
plt	O
.	O
iplt_alignment	O
=	O
(	O
normal_target	O
?	O
plt_alignment	O
:	O
bed	O
->	O
plt_alignment	O
)	O
;	O
}	O
return	O
pbfd	O
;	O
}	O
void	O
_bfd_x86_elf_link_fixup_gnu_properties	O
(	O
struct	O
bfd_link_info	O
*	O
info	*(void)
ATTRIBUTE_UNUSED	O
,	O
elf_property_list	O
*	O
*	O
listp	O
)	O
{	O
elf_property_list	O
*	O
p	*(void)
;	O
for	O
(	O
p	*(void)
=	O
*	O
listp	O
;	O
p	*(void)
;	O
p	*(void)
=	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
)	O
{	O
unsigned	O
int	O
type	enum(int,int,int,int)
=	O
p	*(void)
->	O
property	O
.	O
pr_type	O
;	O
if	O
(	O
type	enum(int,int,int,int)
==	O
GNU_PROPERTY_X86_COMPAT_ISA_1_USED	O
||	O
type	enum(int,int,int,int)
==	O
GNU_PROPERTY_X86_COMPAT_ISA_1_NEEDED	O
||	O
(	O
type	enum(int,int,int,int)
>=	O
GNU_PROPERTY_X86_UINT32_AND_LO	O
&&	O
type	enum(int,int,int,int)
<=	O
GNU_PROPERTY_X86_UINT32_AND_HI	O
)	O
||	O
(	O
type	enum(int,int,int,int)
>=	O
GNU_PROPERTY_X86_UINT32_OR_LO	O
&&	O
type	enum(int,int,int,int)
<=	O
GNU_PROPERTY_X86_UINT32_OR_HI	O
)	O
||	O
(	O
type	enum(int,int,int,int)
>=	O
GNU_PROPERTY_X86_UINT32_OR_AND_LO	O
&&	O
type	enum(int,int,int,int)
<=	O
GNU_PROPERTY_X86_UINT32_OR_AND_HI	O
)	O
)	O
{	O
if	O
(	O
p	*(void)
->	O
property	O
.	O
u	union(long,*(struct))
.	O
number	O
==	O
0	int
&&	O
(	O
type	enum(int,int,int,int)
==	O
GNU_PROPERTY_X86_COMPAT_ISA_1_NEEDED	O
||	O
(	O
type	enum(int,int,int,int)
>=	O
GNU_PROPERTY_X86_UINT32_AND_LO	O
&&	O
type	enum(int,int,int,int)
<=	O
GNU_PROPERTY_X86_UINT32_AND_HI	O
)	O
||	O
(	O
type	enum(int,int,int,int)
>=	O
GNU_PROPERTY_X86_UINT32_OR_LO	O
&&	O
type	enum(int,int,int,int)
<=	O
GNU_PROPERTY_X86_UINT32_OR_HI	O
)	O
)	O
)	O
{	O
*	O
listp	O
=	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
;	O
continue	O
;	O
}	O
listp	O
=	O
&	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
;	O
}	O
else	O
if	O
(	O
type	enum(int,int,int,int)
>	O
GNU_PROPERTY_HIPROC	O
)	O
{	O
break	O
;	O
}	O
}	O
}	O
void	O
_bfd_elf_linker_x86_set_options	O
(	O
struct	O
bfd_link_info	O
*	O
info	*(void)
,	O
struct	O
elf_linker_x86_params	O
*	O
params	O
)	O
{	O
const	O
struct	O
elf_backend_data	O
*	O
bed	O
=	O
get_elf_backend_data	O
(	O
info	*(void)
->	O
output_bfd	*(struct)
)	O
;	O
struct	O
elf_x86_link_hash_table	O
*	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
=	O
elf_x86_hash_table	O
(	O
info	*(void)
,	O
bed	O
->	O
target_id	O
)	O
;	O
if	O
(	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
!=	O
NULL	O
)	O
htab	struct(*((*(void))->(int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(*(void)),long,long,long,int,int,*((long,long)->(*(void))),*((*(void))->(void)),*(void),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(void)),int)
->	O
params	O
=	O
params	O
;	O
}	O
