gsl_multiset	struct(long,long,*(long))
*	O
gsl_multiset_alloc	(long,long)->(*(struct(long,long,*(long))))
(	O
const	O
size_t	long
n	long
,	O
const	O
size_t	long
k	long
)	O
{	O
gsl_multiset	struct(long,long,*(long))
*	O
c	*(struct(long,long,*(long)))
;	O
if	O
(	O
n	long
==	O
0	int
)	O
{	O
GSL_ERROR_VAL	O
(	O
"multiset parameter n must be positive integer"	*(char)
,	O
GSL_EDOM	int
,	O
0	int
)	O
;	O
}	O
c	*(struct(long,long,*(long)))
=	O
(	O
gsl_multiset	struct(long,long,*(long))
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
gsl_multiset	struct(long,long,*(long))
)	O
)	O
;	O
if	O
(	O
c	*(struct(long,long,*(long)))
==	O
0	int
)	O
{	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for multiset struct"	*(char)
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
if	O
(	O
k	long
>	O
0	int
)	O
{	O
c	*(struct(long,long,*(long)))
->	O
data	*(long)
=	O
(	O
size_t	long
*	O
)	O
malloc	(long)->(*(void))
(	O
k	long
*	O
sizeof	O
(	O
size_t	long
)	O
)	O
;	O
if	O
(	O
c	*(struct(long,long,*(long)))
->	O
data	*(long)
==	O
0	int
)	O
{	O
free	(*(void))->(void)
(	O
c	*(struct(long,long,*(long)))
)	O
;	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for multiset data"	*(char)
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
}	O
else	O
{	O
c	*(struct(long,long,*(long)))
->	O
data	*(long)
=	O
0	int
;	O
}	O
c	*(struct(long,long,*(long)))
->	O
n	long
=	O
n	long
;	O
c	*(struct(long,long,*(long)))
->	O
k	long
=	O
k	long
;	O
return	O
c	*(struct(long,long,*(long)))
;	O
}	O
gsl_multiset	struct(long,long,*(long))
*	O
gsl_multiset_calloc	(long,long)->(*(struct(long,long,*(long))))
(	O
const	O
size_t	long
n	long
,	O
const	O
size_t	long
k	long
)	O
{	O
size_t	long
i	long
;	O
gsl_multiset	struct(long,long,*(long))
*	O
c	*(struct(long,long,*(long)))
=	O
gsl_multiset_alloc	(long,long)->(*(struct(long,long,*(long))))
(	O
n	long
,	O
k	long
)	O
;	O
if	O
(	O
c	*(struct(long,long,*(long)))
==	O
0	int
)	O
return	O
0	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
k	long
;	O
i	long
++	O
)	O
{	O
c	*(struct(long,long,*(long)))
->	O
data	*(long)
[	O
i	long
]	O
=	O
0	int
;	O
}	O
return	O
c	*(struct(long,long,*(long)))
;	O
}	O
void	O
gsl_multiset_init_first	(*(struct(long,long,*(long))))->(void)
(	O
gsl_multiset	struct(long,long,*(long))
*	O
c	*(struct(long,long,*(long)))
)	O
{	O
const	O
size_t	long
k	long
=	O
c	*(struct(long,long,*(long)))
->	O
k	long
;	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
k	long
;	O
i	long
++	O
)	O
{	O
c	*(struct(long,long,*(long)))
->	O
data	*(long)
[	O
i	long
]	O
=	O
0	int
;	O
}	O
}	O
void	O
gsl_multiset_init_last	(*(struct(long,long,*(long))))->(void)
(	O
gsl_multiset	struct(long,long,*(long))
*	O
c	*(struct(long,long,*(long)))
)	O
{	O
const	O
size_t	long
k	long
=	O
c	*(struct(long,long,*(long)))
->	O
k	long
;	O
size_t	long
i	long
;	O
size_t	long
n	long
=	O
c	*(struct(long,long,*(long)))
->	O
n	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
k	long
;	O
i	long
++	O
)	O
{	O
c	*(struct(long,long,*(long)))
->	O
data	*(long)
[	O
i	long
]	O
=	O
n	long
-	O
1	int
;	O
}	O
}	O
void	O
gsl_multiset_free	(*(struct(long,long,*(long))))->(void)
(	O
gsl_multiset	struct(long,long,*(long))
*	O
c	*(struct(long,long,*(long)))
)	O
{	O
RETURN_IF_NULL	O
(	O
c	*(struct(long,long,*(long)))
)	O
;	O
if	O
(	O
c	*(struct(long,long,*(long)))
->	O
k	long
>	O
0	int
)	O
free	(*(void))->(void)
(	O
c	*(struct(long,long,*(long)))
->	O
data	*(long)
)	O
;	O
free	(*(void))->(void)
(	O
c	*(struct(long,long,*(long)))
)	O
;	O
}	O
