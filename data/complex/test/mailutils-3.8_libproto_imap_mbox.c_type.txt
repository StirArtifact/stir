static	O
int	O
_imap_mbx_scan	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(long))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
size_t	long
msgno	long
,	O
size_t	long
*	O
pcount	*(long)
)	O
;	O
static	O
int	O
_imap_mbx_is_updated	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
)	O
;	O
static	O
inline	O
size_t	long
_imap_msg_no	(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))->(long)
(	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
{	O
return	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
msgno	long
;	O
}	O
static	O
int	O
_imap_fetch_with_callback	(*(struct(int,enum(int,int,int),int,*(char),long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*(int),*(char),*(struct),*(struct),*(char),int,struct(int,int,int,long,long,long,long,long),array(struct(*((*(void),int,long,*(void))->(void)),*(void))))),*(struct),*(char),*((*(void),int,long,*(void))->(void)),*(void))->(int)
(	O
mu_imap_t	*(struct)
imap	*(struct)
,	O
mu_msgset_t	*(struct)
msgset	*(struct)
,	O
char	O
*	O
items	*(char)
,	O
mu_imap_callback_t	*((*(void),int,long,*(void))->(void))
cb	*((*(void),int,long,*(void))->(void))
,	O
void	O
*	O
data	*(void)
)	O
{	O
int	O
rc	int
;	O
mu_imap_register_callback_function	(*(struct),int,*((*(void),int,long,*(void))->(void)),*(void))->(void)
(	O
imap	*(struct)
,	O
MU_IMAP_CB_FETCH	int
,	O
cb	*((*(void),int,long,*(void))->(void))
,	O
data	*(void)
)	O
;	O
rc	int
=	O
mu_imap_fetch	(*(struct),int,*(struct),*(char))->(int)
(	O
imap	*(struct)
,	O
0	int
,	O
msgset	*(struct)
,	O
items	*(char)
)	O
;	O
mu_imap_register_callback_function	(*(struct),int,*((*(void),int,long,*(void))->(void)),*(void))->(void)
(	O
imap	*(struct)
,	O
MU_IMAP_CB_FETCH	int
,	O
NULL	O
,	O
NULL	O
)	O
;	O
return	O
rc	int
;	O
}	O
static	O
void	O
_imap_msg_free	(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))->(void)
(	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
msg	*(struct)
)	O
{	O
mu_message_imapenvelope_free	(*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char))))->(void)
(	O
msg	*(struct)
->	O
env	*(struct)
)	O
;	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
msg	*(struct)
->	O
header_stream	*(struct)
)	O
;	O
mu_message_destroy	(*(*(struct)),*(void))->(void)
(	O
&	O
msg	*(struct)
->	O
message	*(struct)
,	O
msg	*(struct)
)	O
;	O
free	(*(void))->(void)
(	O
msg	*(struct)
)	O
;	O
}	O
struct	O
save_closure	struct(*(struct),long,*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`))))))
{	O
mu_stream_t	*(struct)
save_stream	*(struct)
;	O
size_t	long
size	long
;	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
;	O
}	O
;	O
static	O
int	O
_save_message_parser	(*(void),*(void))->(int)
(	O
void	O
*	O
item	*(void)
,	O
void	O
*	O
data	*(void)
)	O
{	O
union	O
mu_imap_fetch_response	union(int,struct(int,*(long),long,*(char),*(struct),*(char)),struct(int,*(struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*`,*`,long),struct(*`))))),struct(int,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char)))),struct(int,int),struct(int,struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char))),struct(int,long),struct(int,long))
*	O
resp	*(struct)
=	O
item	*(void)
;	O
struct	O
save_closure	struct(*(struct),long,*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`))))))
*	O
clos	*(struct(*(struct),long,*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct`),*(struct`),*(struct`),*(struct`)))))
=	O
data	*(void)
;	O
if	O
(	O
resp	*(struct)
->	O
type	int
==	O
MU_IMAP_FETCH_BODY	int
)	O
{	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
=	O
clos	*(struct(*(struct),long,*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
;	O
struct	O
_mu_imap_mailbox	struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`))))),long,long,*(struct),int,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))))
*	O
imbx	*(struct)
=	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
imbx	*(struct)
;	O
int	O
rc	int
;	O
mu_stream_t	*(struct)
istr	*(struct)
,	O
flt	*((*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)))),*(void))->(int))
;	O
mu_off_t	long
size	long
;	O
rc	int
=	O
mu_static_memory_stream_create	(*(*(struct)),*(void),long)->(int)
(	O
&	O
istr	*(struct)
,	O
resp	*(struct)
->	O
body	*(struct)
.	O
text	struct(long)
,	O
strlen	(*(char))->(long)
(	O
resp	*(struct)
->	O
body	*(struct)
.	O
text	struct(long)
)	O
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_ERROR	int
,	O
(	O
_	O
(	O
"mu_static_memory_stream_create: %s"	*(char)
)	O
,	O
mu_strerror	(int)->(*(char))
(	O
rc	int
)	O
)	O
)	O
;	O
imbx	*(struct)
->	O
last_error	int
=	O
rc	int
;	O
return	O
0	int
;	O
}	O
rc	int
=	O
mu_filter_create	(*(*(struct)),*(struct),*(char),int,int)->(int)
(	O
&	O
flt	*((*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)))),*(void))->(int))
,	O
istr	*(struct)
,	O
"CRLF"	*(char)
,	O
MU_FILTER_DECODE	int
,	O
MU_STREAM_READ	int
)	O
;	O
mu_stream_unref	(*(struct))->(void)
(	O
istr	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_ERROR	int
,	O
(	O
_	O
(	O
"mu_filter_create: %s"	*(char)
)	O
,	O
mu_strerror	(int)->(*(char))
(	O
rc	int
)	O
)	O
)	O
;	O
imbx	*(struct)
->	O
last_error	int
=	O
rc	int
;	O
return	O
0	int
;	O
}	O
rc	int
=	O
mu_stream_copy	(*(struct),*(struct),long,*(long))->(int)
(	O
clos	*(struct(*(struct),long,*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
save_stream	*(struct)
,	O
flt	*((*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)))),*(void))->(int))
,	O
0	int
,	O
&	O
size	long
)	O
;	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
flt	*((*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)))),*(void))->(int))
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_ERROR	int
,	O
(	O
_	O
(	O
"copying to cache failed: %s"	*(char)
)	O
,	O
mu_strerror	(int)->(*(char))
(	O
rc	int
)	O
)	O
)	O
;	O
imbx	*(struct)
->	O
last_error	int
=	O
rc	int
;	O
return	O
0	int
;	O
}	O
clos	*(struct(*(struct),long,*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct`),*(struct`),*(struct`),*(struct`)))))
->	O
size	long
=	O
size	long
;	O
}	O
else	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_TRACE0	int
,	O
(	O
_	O
(	O
"fetch returned a not requested item %d"	*(char)
)	O
,	O
resp	*(struct)
->	O
type	int
)	O
)	O
;	O
return	O
0	int
;	O
}	O
static	O
void	O
_save_message_callback	(*(void),int,long,*(void))->(void)
(	O
void	O
*	O
data	*(void)
,	O
int	O
code	int
,	O
size_t	long
sdat	long
,	O
void	O
*	O
pdat	*(void)
)	O
{	O
mu_list_t	*(struct)
list	*(struct)
=	O
pdat	*(void)
;	O
mu_list_foreach	(*(struct),*((*(void),*(void))->(int)),*(void))->(int)
(	O
list	*(struct)
,	O
_save_message_parser	(*(void),*(void))->(int)
,	O
data	*(void)
)	O
;	O
}	O
static	O
int	O
__imap_msg_get_stream	(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))),long,*(*(struct)))->(int)
(	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
,	O
size_t	long
msgno	long
,	O
mu_stream_t	*(struct)
*	O
pstr	*(*(char))
)	O
{	O
int	O
rc	int
;	O
struct	O
_mu_imap_mailbox	struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`))))),long,long,*(struct),int,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))))
*	O
imbx	*(struct)
=	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
imbx	*(struct)
;	O
mu_folder_t	*(struct)
folder	*(struct)
=	O
imbx	*(struct)
->	O
mbox	*(struct)
->	O
folder	*(struct)
;	O
mu_imap_t	*(struct)
imap	*(struct)
=	O
folder	*(struct)
->	O
data	*(void)
;	O
if	O
(	O
!	O
(	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
flags	int
&	O
_MU_IMAP_MSG_CACHED	int
)	O
)	O
{	O
mu_msgset_t	*(struct)
msgset	*(struct)
;	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_TRACE1	int
,	O
(	O
_	O
(	O
"caching message %lu"	*(char)
)	O
,	O
(	O
unsigned	O
long	O
)	O
msgno	long
)	O
)	O
;	O
if	O
(	O
!	O
imbx	*(struct)
->	O
cache	*(struct)
)	O
{	O
rc	int
=	O
mu_temp_file_stream_create	(*(*(struct)),*(struct),int)->(int)
(	O
&	O
imbx	*(struct)
->	O
cache	*(struct)
,	O
NULL	O
,	O
0	int
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
mu_stream_set_buffer	(*(struct),enum(int,int,int),long)->(int)
(	O
imbx	*(struct)
->	O
cache	*(struct)
,	O
mu_buffer_full	int
,	O
8192	int
)	O
;	O
}	O
rc	int
=	O
mu_stream_size	(*(struct),*(long))->(int)
(	O
imbx	*(struct)
->	O
cache	*(struct)
,	O
&	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
offset	long
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
mu_msgset_create	(*(*(struct)),*(struct),int)->(int)
(	O
&	O
msgset	*(struct)
,	O
NULL	O
,	O
MU_MSGSET_NUM	int
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
struct	O
save_closure	struct(*(struct),long,*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`))))))
clos	*(struct(*(struct),long,*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct`),*(struct`),*(struct`),*(struct`)))))
;	O
clos	*(struct(*(struct),long,*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct`),*(struct`),*(struct`),*(struct`)))))
.	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
=	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
;	O
clos	*(struct(*(struct),long,*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct`),*(struct`),*(struct`),*(struct`)))))
.	O
save_stream	*(struct)
=	O
imbx	*(struct)
->	O
cache	*(struct)
;	O
clos	*(struct(*(struct),long,*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct`),*(struct`),*(struct`),*(struct`)))))
.	O
size	long
=	O
0	int
;	O
rc	int
=	O
mu_msgset_add_range	(*(struct),long,long,int)->(int)
(	O
msgset	*(struct)
,	O
msgno	long
,	O
msgno	long
,	O
MU_MSGSET_NUM	int
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
_imap_mbx_clrerr	O
(	O
imbx	*(struct)
)	O
;	O
rc	int
=	O
_imap_fetch_with_callback	(*(struct(int,enum(int,int,int),int,*(char),long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*(int),*(char),*(struct),*(struct),*(char),int,struct(int,int,int,long,long,long,long,long),array(struct(*((*(void),int,long,*(void))->(void)),*(void))))),*(struct),*(char),*((*(void),int,long,*(void))->(void)),*(void))->(int)
(	O
imap	*(struct)
,	O
msgset	*(struct)
,	O
"BODY[]"	*(char)
,	O
_save_message_callback	(*(void),int,long,*(void))->(void)
,	O
&	O
clos	*(struct(*(struct),long,*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct`),*(struct`),*(struct`),*(struct`)))))
)	O
;	O
}	O
mu_msgset_free	(*(struct))->(void)
(	O
msgset	*(struct)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
&&	O
!	O
_imap_mbx_errno	O
(	O
imbx	*(struct)
)	O
)	O
{	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_TRACE1	int
,	O
(	O
_	O
(	O
"cached message %lu: offset=%lu, size=%lu"	*(char)
)	O
,	O
(	O
unsigned	O
long	O
)	O
msgno	long
,	O
(	O
unsigned	O
long	O
)	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
offset	long
,	O
(	O
unsigned	O
long	O
)	O
clos	*(struct(*(struct),long,*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct`),*(struct`),*(struct`),*(struct`)))))
.	O
size	long
)	O
)	O
;	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
message_size	long
=	O
clos	*(struct(*(struct),long,*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct`),*(struct`),*(struct`),*(struct`)))))
.	O
size	long
;	O
}	O
}	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
flags	int
|=	O
_MU_IMAP_MSG_CACHED	int
;	O
}	O
return	O
mu_streamref_create_abridged	(*(*(struct)),*(struct),long,long)->(int)
(	O
pstr	*(*(char))
,	O
imbx	*(struct)
->	O
cache	*(struct)
,	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
offset	long
,	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
offset	long
+	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
message_size	long
-	O
1	int
)	O
;	O
}	O
static	O
int	O
_imap_msg_scan	(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))->(int)
(	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
{	O
int	O
rc	int
;	O
mu_stream_t	*(struct)
stream	*(struct)
;	O
struct	O
mu_message_scan	struct(int,long,long,long,long,long,long,int,long)
scan	struct(int,long,long,long,long,long,long,int,long)
;	O
size_t	long
msgno	long
=	O
_imap_msg_no	(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))->(long)
(	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
;	O
if	O
(	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
flags	int
&	O
_MU_IMAP_MSG_SCANNED	int
)	O
return	O
0	int
;	O
rc	int
=	O
__imap_msg_get_stream	(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))),long,*(*(struct)))->(int)
(	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
,	O
msgno	long
,	O
&	O
stream	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
scan	struct(int,long,long,long,long,long,long,int,long)
.	O
flags	int
=	O
MU_SCAN_SEEK	int
|	O
MU_SCAN_SIZE	int
;	O
scan	struct(int,long,long,long,long,long,long,int,long)
.	O
message_start	long
=	O
0	int
;	O
scan	struct(int,long,long,long,long,long,long,int,long)
.	O
message_size	long
=	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
message_size	long
;	O
rc	int
=	O
mu_stream_scan_message	(*(struct),*(struct(int,long,long,long,long,long,long,int,long)))->(int)
(	O
stream	*(struct)
,	O
&	O
scan	struct(int,long,long,long,long,long,long,int,long)
)	O
;	O
mu_stream_unref	(*(struct))->(void)
(	O
stream	*(struct)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
body_start	long
=	O
scan	struct(int,long,long,long,long,long,long,int,long)
.	O
body_start	long
;	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
body_end	long
=	O
scan	struct(int,long,long,long,long,long,long,int,long)
.	O
body_end	long
;	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
header_lines	long
=	O
scan	struct(int,long,long,long,long,long,long,int,long)
.	O
header_lines	long
;	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
body_lines	long
=	O
scan	struct(int,long,long,long,long,long,long,int,long)
.	O
body_lines	long
;	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
message_lines	long
=	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
header_lines	long
+	O
1	int
+	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
body_lines	long
;	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
flags	int
|=	O
_MU_IMAP_MSG_SCANNED	int
;	O
}	O
return	O
rc	int
;	O
}	O
static	O
int	O
_imap_env_date	(*(struct),*(char),long,*(long))->(int)
(	O
mu_envelope_t	*(struct)
env	*(struct)
,	O
char	O
*	O
buf	*(void)
,	O
size_t	long
len	long
,	O
size_t	long
*	O
pnwrite	*(long)
)	O
{	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
=	O
mu_envelope_get_owner	(*(struct))->(*(void))
(	O
env	*(struct)
)	O
;	O
mu_stream_t	*(struct)
str	*(struct)
;	O
int	O
rc	int
;	O
if	O
(	O
!	O
buf	*(void)
)	O
rc	int
=	O
mu_nullstream_create	(*(*(struct)),int)->(int)
(	O
&	O
str	*(struct)
,	O
MU_STREAM_WRITE	int
)	O
;	O
else	O
rc	int
=	O
mu_fixed_memory_stream_create	(*(*(struct)),*(void),long,int)->(int)
(	O
&	O
str	*(struct)
,	O
buf	*(void)
,	O
len	long
,	O
MU_STREAM_WRITE	int
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
mu_stream_stat_buffer	array(long)
statbuf	array(long)
;	O
mu_stream_set_stat	(*(struct),int,array(long))->(int)
(	O
str	*(struct)
,	O
MU_STREAM_STAT_MASK	O
(	O
MU_STREAM_STAT_OUT	int
)	O
,	O
statbuf	array(long)
)	O
;	O
rc	int
=	O
mu_c_streamftime	(*(struct),*(char),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))))->(int)
(	O
str	*(struct)
,	O
MU_DATETIME_FROM	*(char)
,	O
&	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
env	*(struct)
->	O
date	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
&	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
env	*(struct)
->	O
tz	*(struct(int,*(char)))
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
rc	int
=	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
str	*(struct)
,	O
""	*(char)
,	O
1	int
,	O
NULL	O
)	O
;	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
str	*(struct)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
&&	O
pnwrite	*(long)
)	O
*	O
pnwrite	*(long)
=	O
statbuf	array(long)
[	O
MU_STREAM_STAT_OUT	int
]	O
-	O
1	int
;	O
}	O
return	O
rc	int
;	O
}	O
static	O
int	O
_imap_env_sender	(*(struct),*(char),long,*(long))->(int)
(	O
mu_envelope_t	*(struct)
env	*(struct)
,	O
char	O
*	O
buf	*(void)
,	O
size_t	long
len	long
,	O
size_t	long
*	O
pnwrite	*(long)
)	O
{	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
=	O
mu_envelope_get_owner	(*(struct))->(*(void))
(	O
env	*(struct)
)	O
;	O
mu_address_t	*(struct)
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
=	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
env	*(struct)
->	O
sender	*(struct)
?	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
env	*(struct)
->	O
sender	*(struct)
:	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
env	*(struct)
->	O
from	*(struct)
;	O
if	O
(	O
!	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
return	O
MU_ERR_NOENT	O
;	O
return	O
mu_address_get_email	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),long,*(char),long,*(long))->(int)
(	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
1	int
,	O
buf	*(void)
,	O
len	long
,	O
pnwrite	*(long)
)	O
;	O
}	O
static	O
int	O
_imap_msg_env_setup	(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))),*(struct))->(int)
(	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
,	O
mu_message_t	*(struct)
message	*(struct)
)	O
{	O
mu_envelope_t	*(struct)
env	*(struct)
;	O
int	O
rc	int
=	O
mu_envelope_create	(*(*(struct)),*(void))->(int)
(	O
&	O
env	*(struct)
,	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
mu_envelope_set_sender	(*(struct),*((*(struct),*(char),long,*(long))->(int)),*(void))->(int)
(	O
env	*(struct)
,	O
_imap_env_sender	(*(struct),*(char),long,*(long))->(int)
,	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
;	O
mu_envelope_set_date	(*(struct),*((*(struct),*(char),long,*(long))->(int)),*(void))->(int)
(	O
env	*(struct)
,	O
_imap_env_date	(*(struct),*(char),long,*(long))->(int)
,	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
;	O
rc	int
=	O
mu_message_set_envelope	(*(struct),*(struct),*(void))->(int)
(	O
message	*(struct)
,	O
env	*(struct)
,	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
;	O
}	O
return	O
rc	int
;	O
}	O
static	O
int	O
_imap_attr_get_flags	(*(struct),*(int))->(int)
(	O
mu_attribute_t	*(struct)
attr	*(struct)
,	O
int	O
*	O
pflags	*(int)
)	O
{	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
=	O
mu_attribute_get_owner	(*(struct))->(*(void))
(	O
attr	*(struct)
)	O
;	O
if	O
(	O
!	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
return	O
EINVAL	int
;	O
if	O
(	O
pflags	*(int)
)	O
*	O
pflags	*(int)
=	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
attr_flags	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_imap_attr_set_flags	(*(struct),int)->(int)
(	O
mu_attribute_t	*(struct)
attr	*(struct)
,	O
int	O
flags	int
)	O
{	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
=	O
mu_attribute_get_owner	(*(struct))->(*(void))
(	O
attr	*(struct)
)	O
;	O
if	O
(	O
!	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
return	O
EINVAL	int
;	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
attr_flags	int
|=	O
flags	int
;	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
flags	int
|=	O
_MU_IMAP_MSG_ATTRCHG	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_imap_attr_clr_flags	(*(struct),int)->(int)
(	O
mu_attribute_t	*(struct)
attr	*(struct)
,	O
int	O
flags	int
)	O
{	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
=	O
mu_attribute_get_owner	(*(struct))->(*(void))
(	O
attr	*(struct)
)	O
;	O
if	O
(	O
!	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
return	O
EINVAL	int
;	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
attr_flags	int
&=	O
~	O
flags	int
;	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
flags	int
|=	O
_MU_IMAP_MSG_ATTRCHG	int
;	O
return	O
0	int
;	O
}	O
int	O
_imap_msg_attr_setup	(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))),*(struct))->(int)
(	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
,	O
mu_message_t	*(struct)
message	*(struct)
)	O
{	O
mu_attribute_t	*(struct)
attribute	*(struct)
;	O
int	O
rc	int
=	O
mu_attribute_create	(*(*(struct)),*(void))->(int)
(	O
&	O
attribute	*(struct)
,	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
mu_attribute_set_get_flags	(*(struct),*((*(struct),*(int))->(int)),*(void))->(int)
(	O
attribute	*(struct)
,	O
_imap_attr_get_flags	(*(struct),*(int))->(int)
,	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
;	O
mu_attribute_set_set_flags	(*(struct),*((*(struct),int)->(int)),*(void))->(int)
(	O
attribute	*(struct)
,	O
_imap_attr_set_flags	(*(struct),int)->(int)
,	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
;	O
mu_attribute_set_unset_flags	(*(struct),*((*(struct),int)->(int)),*(void))->(int)
(	O
attribute	*(struct)
,	O
_imap_attr_clr_flags	(*(struct),int)->(int)
,	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
;	O
rc	int
=	O
mu_message_set_attribute	(*(struct),*(struct),*(void))->(int)
(	O
message	*(struct)
,	O
attribute	*(struct)
,	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
;	O
}	O
return	O
rc	int
;	O
}	O
static	O
int	O
_imap_hdr_fill	(*(void),*(*(char)),*(long))->(int)
(	O
void	O
*	O
data	*(void)
,	O
char	O
*	O
*	O
pbuf	*(*(char))
,	O
size_t	long
*	O
plen	*(long)
)	O
{	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
=	O
data	*(void)
;	O
mu_stream_t	*(struct)
str	*(struct)
=	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
header_stream	*(struct)
;	O
char	O
*	O
buf	*(void)
;	O
mu_off_t	long
size	long
;	O
int	O
rc	int
=	O
0	int
;	O
mu_stream_size	(*(struct),*(long))->(int)
(	O
str	*(struct)
,	O
&	O
size	long
)	O
;	O
buf	*(void)
=	O
malloc	(long)->(*(void))
(	O
size	long
+	O
1	int
)	O
;	O
if	O
(	O
!	O
buf	*(void)
)	O
rc	int
=	O
ENOMEM	int
;	O
else	O
{	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
str	*(struct)
,	O
0	int
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
rc	int
=	O
mu_stream_read	(*(struct),*(void),long,*(long))->(int)
(	O
str	*(struct)
,	O
buf	*(void)
,	O
size	long
,	O
NULL	O
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
*	O
pbuf	*(*(char))
=	O
buf	*(void)
;	O
*	O
plen	*(long)
=	O
size	long
;	O
}	O
else	O
{	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_ERROR	int
,	O
(	O
"mu_stream_read: %s"	*(char)
,	O
mu_strerror	(int)->(*(char))
(	O
rc	int
)	O
)	O
)	O
;	O
free	(*(void))->(void)
(	O
buf	*(void)
)	O
;	O
}	O
}	O
return	O
rc	int
;	O
}	O
static	O
int	O
_imap_msg_header_setup	(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))),*(struct))->(int)
(	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
,	O
mu_message_t	*(struct)
message	*(struct)
)	O
{	O
int	O
rc	int
;	O
mu_header_t	*(struct)
header	*(struct)
=	O
NULL	O
;	O
rc	int
=	O
mu_header_create	(*(*(struct)),*(char),long)->(int)
(	O
&	O
header	*(struct)
,	O
NULL	O
,	O
0	int
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
mu_header_set_fill	(*(struct),*((*(void),*(*(char)),*(long))->(int)),*(void))->(int)
(	O
header	*(struct)
,	O
_imap_hdr_fill	(*(void),*(*(char)),*(long))->(int)
,	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
;	O
return	O
mu_message_set_header	(*(struct),*(struct),*(void))->(int)
(	O
message	*(struct)
,	O
header	*(struct)
,	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
;	O
}	O
static	O
int	O
_imap_body_get_stream	(*(struct),*(*(struct)))->(int)
(	O
mu_body_t	*(struct)
body	*(struct)
,	O
mu_stream_t	*(struct)
*	O
pstr	*(*(char))
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
=	O
mu_body_get_owner	(*(struct))->(*(void))
(	O
body	*(struct)
)	O
;	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
struct	O
_mu_imap_mailbox	struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`))))),long,long,*(struct),int,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))))
*	O
imbx	*(struct)
=	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
imbx	*(struct)
;	O
int	O
rc	int
;	O
rc	int
=	O
_imap_msg_scan	(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))->(int)
(	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
return	O
mu_streamref_create_abridged	(*(*(struct)),*(struct),long,long)->(int)
(	O
pstr	*(*(char))
,	O
imbx	*(struct)
->	O
cache	*(struct)
,	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
offset	long
+	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
body_start	long
,	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
offset	long
+	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
body_end	long
-	O
1	int
)	O
;	O
}	O
static	O
int	O
_imap_body_size	(*(struct),*(long))->(int)
(	O
mu_body_t	*(struct)
body	*(struct)
,	O
size_t	long
*	O
psize	*(long)
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
=	O
mu_body_get_owner	(*(struct))->(*(void))
(	O
body	*(struct)
)	O
;	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
int	O
rc	int
;	O
rc	int
=	O
_imap_msg_scan	(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))->(int)
(	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
*	O
psize	*(long)
=	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
body_end	long
-	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
body_start	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_imap_body_lines	(*(struct),*(long))->(int)
(	O
mu_body_t	*(struct)
body	*(struct)
,	O
size_t	long
*	O
psize	*(long)
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
=	O
mu_body_get_owner	(*(struct))->(*(void))
(	O
body	*(struct)
)	O
;	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
int	O
rc	int
;	O
rc	int
=	O
_imap_msg_scan	(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))->(int)
(	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
*	O
psize	*(long)
=	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
body_lines	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_imap_mbx_body_setup	(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))),*(struct))->(int)
(	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
,	O
mu_message_t	*(struct)
message	*(struct)
)	O
{	O
int	O
rc	int
;	O
mu_body_t	*(struct)
body	*(struct)
;	O
rc	int
=	O
mu_body_create	(*(*(struct)),*(void))->(int)
(	O
&	O
body	*(struct)
,	O
message	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
mu_body_set_get_stream	(*(struct),*((*(struct),*(*(struct`)))->(int)),*(void))->(int)
(	O
body	*(struct)
,	O
_imap_body_get_stream	(*(struct),*(*(struct)))->(int)
,	O
message	*(struct)
)	O
;	O
mu_body_set_size	(*(struct),*((*(struct),*(long))->(int)),*(void))->(int)
(	O
body	*(struct)
,	O
_imap_body_size	(*(struct),*(long))->(int)
,	O
message	*(struct)
)	O
;	O
mu_body_set_lines	(*(struct),*((*(struct),*(long))->(int)),*(void))->(int)
(	O
body	*(struct)
,	O
_imap_body_lines	(*(struct),*(long))->(int)
,	O
message	*(struct)
)	O
;	O
return	O
mu_message_set_body	(*(struct),*(struct),*(void))->(int)
(	O
message	*(struct)
,	O
body	*(struct)
,	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
;	O
}	O
static	O
int	O
_imap_msg_get_stream	(*(struct),*(*(struct)))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
mu_stream_t	*(struct)
*	O
pstr	*(*(char))
)	O
{	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
return	O
__imap_msg_get_stream	(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))),long,*(*(struct)))->(int)
(	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
,	O
_imap_msg_no	(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))->(long)
(	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
,	O
pstr	*(*(char))
)	O
;	O
}	O
static	O
int	O
_imap_msg_size	(*(struct),*(long))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
size_t	long
*	O
psize	*(long)
)	O
{	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
*	O
psize	*(long)
=	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
message_size	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_imap_msg_lines	(*(struct),*(long),int)->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
size_t	long
*	O
plines	*(long)
,	O
int	O
quick	int
)	O
{	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
struct	O
_mu_imap_mailbox	struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`))))),long,long,*(struct),int,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))))
*	O
imbx	*(struct)
=	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
imbx	*(struct)
;	O
mu_mailbox_t	*(struct)
mbox	*(struct)
=	O
imbx	*(struct)
->	O
mbox	*(struct)
;	O
if	O
(	O
!	O
(	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
flags	int
&	O
_MU_IMAP_MSG_LINES	int
)	O
)	O
{	O
int	O
rc	int
;	O
if	O
(	O
quick	int
&&	O
!	O
(	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
flags	int
&	O
_MU_IMAP_MSG_CACHED	int
)	O
)	O
return	O
MU_ERR_INFO_UNAVAILABLE	O
;	O
if	O
(	O
!	O
_imap_mbx_uptodate	O
(	O
imbx	*(struct)
)	O
)	O
_imap_mbx_scan	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(long))->(int)
(	O
mbox	*(struct)
,	O
1	int
,	O
NULL	O
)	O
;	O
rc	int
=	O
_imap_msg_scan	(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))->(int)
(	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
}	O
*	O
plines	*(long)
=	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
message_lines	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_copy_imapenvelope	(*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char))),*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char))))->(int)
(	O
struct	O
mu_imapenvelope	struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char))
*	O
env	*(struct)
,	O
struct	O
mu_imapenvelope	struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char))
const	O
*	O
src	*(struct)
)	O
{	O
env	*(struct)
->	O
date	struct(int,int,int,int,int,int,int,int,int,long,*(char))
=	O
src	*(struct)
->	O
date	struct(int,int,int,int,int,int,int,int,int,long,*(char))
;	O
env	*(struct)
->	O
tz	*(struct(int,*(char)))
=	O
src	*(struct)
->	O
tz	*(struct(int,*(char)))
;	O
if	O
(	O
src	*(struct)
->	O
subject	*(char)
&&	O
(	O
env	*(struct)
->	O
subject	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
src	*(struct)
->	O
subject	*(char)
)	O
)	O
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
if	O
(	O
src	*(struct)
->	O
from	*(struct)
&&	O
(	O
env	*(struct)
->	O
from	*(struct)
=	O
mu_address_dup	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))->(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))
(	O
src	*(struct)
->	O
from	*(struct)
)	O
)	O
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
if	O
(	O
src	*(struct)
->	O
sender	*(struct)
&&	O
(	O
env	*(struct)
->	O
sender	*(struct)
=	O
mu_address_dup	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))->(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))
(	O
src	*(struct)
->	O
sender	*(struct)
)	O
)	O
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
if	O
(	O
src	*(struct)
->	O
reply_to	*(struct)
&&	O
(	O
env	*(struct)
->	O
reply_to	*(struct)
=	O
mu_address_dup	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))->(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))
(	O
src	*(struct)
->	O
reply_to	*(struct)
)	O
)	O
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
if	O
(	O
src	*(struct)
->	O
to	*(struct)
&&	O
(	O
env	*(struct)
->	O
to	*(struct)
=	O
mu_address_dup	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))->(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))
(	O
src	*(struct)
->	O
to	*(struct)
)	O
)	O
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
if	O
(	O
src	*(struct)
->	O
cc	*(struct)
&&	O
(	O
env	*(struct)
->	O
cc	*(struct)
=	O
mu_address_dup	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))->(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))
(	O
src	*(struct)
->	O
cc	*(struct)
)	O
)	O
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
if	O
(	O
src	*(struct)
->	O
bcc	*(struct)
&&	O
(	O
env	*(struct)
->	O
bcc	*(struct)
=	O
mu_address_dup	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))->(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))
(	O
src	*(struct)
->	O
bcc	*(struct)
)	O
)	O
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
if	O
(	O
src	*(struct)
->	O
in_reply_to	*(char)
&&	O
(	O
env	*(struct)
->	O
in_reply_to	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
src	*(struct)
->	O
in_reply_to	*(char)
)	O
)	O
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
if	O
(	O
src	*(struct)
->	O
message_id	*(char)
&&	O
(	O
env	*(struct)
->	O
message_id	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
src	*(struct)
->	O
message_id	*(char)
)	O
)	O
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_imap_msg_imapenvelope	(*(struct),*(*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char)))))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
struct	O
mu_imapenvelope	struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char))
*	O
*	O
penv	*(*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char))))
)	O
{	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
int	O
rc	int
=	O
0	int
;	O
struct	O
mu_imapenvelope	struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char))
*	O
env	*(struct)
=	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
*	O
env	*(struct)
)	O
)	O
;	O
if	O
(	O
!	O
env	*(struct)
)	O
return	O
ENOMEM	int
;	O
rc	int
=	O
_copy_imapenvelope	(*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char))),*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char))))->(int)
(	O
env	*(struct)
,	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
env	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
mu_message_imapenvelope_free	(*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char))))->(void)
(	O
env	*(struct)
)	O
;	O
else	O
*	O
penv	*(*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char))))
=	O
env	*(struct)
;	O
return	O
rc	int
;	O
}	O
static	O
int	O
fetch_bodystructure_parser	(*(void),*(void))->(int)
(	O
void	O
*	O
item	*(void)
,	O
void	O
*	O
data	*(void)
)	O
{	O
union	O
mu_imap_fetch_response	union(int,struct(int,*(long),long,*(char),*(struct),*(char)),struct(int,*(struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*`,*`,long),struct(*`))))),struct(int,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char)))),struct(int,int),struct(int,struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char))),struct(int,long),struct(int,long))
*	O
resp	*(struct)
=	O
item	*(void)
;	O
struct	O
mu_bodystructure	struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct(enum(int,int,int,int),*(char),*(char),*(struct`),*(char),*(char),*(char),long,*(char),*(char),*(struct`),*(char),*(char),union(struct`,struct`,struct`))),long),struct(*(struct))))
*	O
*	O
pbs	*(*(struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*`,*`,long),struct(*`)))))
=	O
data	*(void)
;	O
if	O
(	O
resp	*(struct)
->	O
type	int
==	O
MU_IMAP_FETCH_BODYSTRUCTURE	int
)	O
{	O
*	O
pbs	*(*(struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*`,*`,long),struct(*`)))))
=	O
resp	*(struct)
->	O
bodystructure	struct(int,*(struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*`,*`,long),struct(*`)))))
.	O
bs	*(struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*(struct`),*(struct`),long),struct(*(struct`)))))
;	O
resp	*(struct)
->	O
bodystructure	struct(int,*(struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*`,*`,long),struct(*`)))))
.	O
bs	*(struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*(struct`),*(struct`),long),struct(*(struct`)))))
=	O
NULL	O
;	O
}	O
else	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_TRACE0	int
,	O
(	O
_	O
(	O
"fetch returned a not requested item %d"	*(char)
)	O
,	O
resp	*(struct)
->	O
type	int
)	O
)	O
;	O
return	O
0	int
;	O
}	O
static	O
void	O
_imap_bodystructure_callback	(*(void),int,long,*(void))->(void)
(	O
void	O
*	O
data	*(void)
,	O
int	O
code	int
,	O
size_t	long
sdat	long
,	O
void	O
*	O
pdat	*(void)
)	O
{	O
mu_list_t	*(struct)
list	*(struct)
=	O
pdat	*(void)
;	O
mu_list_foreach	(*(struct),*((*(void),*(void))->(int)),*(void))->(int)
(	O
list	*(struct)
,	O
fetch_bodystructure_parser	(*(void),*(void))->(int)
,	O
data	*(void)
)	O
;	O
}	O
static	O
int	O
_imap_msg_bodystructure	(*(struct),*(*(struct(enum(int,int,int,int),*(char),*(char),*(struct`),*(char),*(char),*(char),long,*(char),*(char),*(struct`),*(char),*(char),union(struct`,struct`,struct`)))))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
struct	O
mu_bodystructure	struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct(enum(int,int,int,int),*(char),*(char),*(struct`),*(char),*(char),*(char),long,*(char),*(char),*(struct`),*(char),*(char),union(struct`,struct`,struct`))),long),struct(*(struct))))
*	O
*	O
pbs	*(*(struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*`,*`,long),struct(*`)))))
)	O
{	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
struct	O
_mu_imap_mailbox	struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`))))),long,long,*(struct),int,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))))
*	O
imbx	*(struct)
=	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
imbx	*(struct)
;	O
mu_imap_t	*(struct)
imap	*(struct)
=	O
imbx	*(struct)
->	O
mbox	*(struct)
->	O
folder	*(struct)
->	O
data	*(void)
;	O
int	O
rc	int
;	O
mu_msgset_t	*(struct)
msgset	*(struct)
;	O
rc	int
=	O
mu_msgset_create	(*(*(struct)),*(struct),int)->(int)
(	O
&	O
msgset	*(struct)
,	O
NULL	O
,	O
MU_MSGSET_NUM	int
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
size_t	long
msgno	long
=	O
_imap_msg_no	(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))->(long)
(	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
;	O
rc	int
=	O
mu_msgset_add_range	(*(struct),long,long,int)->(int)
(	O
msgset	*(struct)
,	O
msgno	long
,	O
msgno	long
,	O
MU_MSGSET_NUM	int
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
rc	int
=	O
_imap_fetch_with_callback	(*(struct(int,enum(int,int,int),int,*(char),long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*(int),*(char),*(struct),*(struct),*(char),int,struct(int,int,int,long,long,long,long,long),array(struct(*((*(void),int,long,*(void))->(void)),*(void))))),*(struct),*(char),*((*(void),int,long,*(void))->(void)),*(void))->(int)
(	O
imap	*(struct)
,	O
msgset	*(struct)
,	O
"BODYSTRUCTURE"	*(char)
,	O
_imap_bodystructure_callback	(*(void),int,long,*(void))->(void)
,	O
pbs	*(*(struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*`,*`,long),struct(*`)))))
)	O
;	O
mu_msgset_free	(*(struct))->(void)
(	O
msgset	*(struct)
)	O
;	O
}	O
return	O
rc	int
;	O
}	O
static	O
int	O
_imap_mbx_get_message	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(*(struct)))->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
size_t	long
msgno	long
,	O
mu_message_t	*(struct)
*	O
pmsg	*(*(struct))
)	O
{	O
struct	O
_mu_imap_mailbox	struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`))))),long,long,*(struct),int,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))))
*	O
imbx	*(struct)
=	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
;	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
;	O
int	O
rc	int
;	O
if	O
(	O
!	O
_imap_mbx_uptodate	O
(	O
imbx	*(struct)
)	O
)	O
_imap_mbx_scan	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(long))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
1	int
,	O
NULL	O
)	O
;	O
if	O
(	O
msgno	long
>	O
imbx	*(struct)
->	O
msgs_cnt	long
)	O
return	O
MU_ERR_NOENT	O
;	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
=	O
imbx	*(struct)
->	O
msgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
[	O
msgno	long
-	O
1	int
]	O
;	O
if	O
(	O
!	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
message	*(struct)
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
;	O
rc	int
=	O
mu_message_create	(*(*(struct)),*(void))->(int)
(	O
&	O
msg	*(struct)
,	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
mu_message_set_get_stream	(*(struct),*((*(struct),*(*(struct`)))->(int)),*(void))->(int)
(	O
msg	*(struct)
,	O
_imap_msg_get_stream	(*(struct),*(*(struct)))->(int)
,	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
;	O
mu_message_set_size	(*(struct),*((*(struct),*(long))->(int)),*(void))->(int)
(	O
msg	*(struct)
,	O
_imap_msg_size	(*(struct),*(long))->(int)
,	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
;	O
mu_message_set_lines	(*(struct),*((*(struct),*(long),int)->(int)),*(void))->(int)
(	O
msg	*(struct)
,	O
_imap_msg_lines	(*(struct),*(long),int)->(int)
,	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
;	O
mu_message_set_imapenvelope	(*(struct),*((*(struct),*(*(struct`)))->(int)),*(void))->(int)
(	O
msg	*(struct)
,	O
_imap_msg_imapenvelope	(*(struct),*(*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char)))))->(int)
,	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
;	O
mu_message_set_bodystructure	(*(struct),*((*(struct),*(*(struct`)))->(int)),*(void))->(int)
(	O
msg	*(struct)
,	O
_imap_msg_bodystructure	(*(struct),*(*(struct(enum(int,int,int,int),*(char),*(char),*(struct`),*(char),*(char),*(char),long,*(char),*(char),*(struct`),*(char),*(char),union(struct`,struct`,struct`)))))->(int)
,	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
;	O
do	O
{	O
rc	int
=	O
_imap_msg_env_setup	(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))),*(struct))->(int)
(	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
,	O
msg	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
break	O
;	O
rc	int
=	O
_imap_msg_attr_setup	(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))),*(struct))->(int)
(	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
,	O
msg	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
break	O
;	O
rc	int
=	O
_imap_msg_header_setup	(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))),*(struct))->(int)
(	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
,	O
msg	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
break	O
;	O
rc	int
=	O
_imap_mbx_body_setup	(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))),*(struct))->(int)
(	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
,	O
msg	*(struct)
)	O
;	O
}	O
while	O
(	O
0	int
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_message_destroy	(*(*(struct)),*(void))->(void)
(	O
&	O
msg	*(struct)
,	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
;	O
return	O
rc	int
;	O
}	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
message	*(struct)
=	O
msg	*(struct)
;	O
}	O
*	O
pmsg	*(*(struct))
=	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
message	*(struct)
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_imap_realloc_messages	(*(struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct`)),long,long,*(struct),int,*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),long)->(int)
(	O
struct	O
_mu_imap_mailbox	struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`))))),long,long,*(struct),int,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))))
*	O
imbx	*(struct)
,	O
size_t	long
count	long
)	O
{	O
if	O
(	O
count	long
>	O
imbx	*(struct)
->	O
msgs_max	long
)	O
{	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
*	O
newmsgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
=	O
realloc	(*(void),long)->(*(void))
(	O
imbx	*(struct)
->	O
msgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
,	O
count	long
*	O
sizeof	O
(	O
*	O
newmsgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
)	O
)	O
;	O
if	O
(	O
!	O
newmsgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
)	O
return	O
ENOMEM	int
;	O
memset	(*(void),int,long)->(*(void))
(	O
newmsgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
+	O
imbx	*(struct)
->	O
msgs_max	long
,	O
0	int
,	O
sizeof	O
(	O
*	O
newmsgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
)	O
*	O
(	O
count	long
-	O
imbx	*(struct)
->	O
msgs_max	long
)	O
)	O
;	O
imbx	*(struct)
->	O
msgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
=	O
newmsgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
;	O
imbx	*(struct)
->	O
msgs_max	long
=	O
count	long
;	O
}	O
return	O
0	int
;	O
}	O
static	O
void	O
_imap_mbx_destroy	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(void)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
)	O
{	O
size_t	long
i	long
;	O
struct	O
_mu_imap_mailbox	struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`))))),long,long,*(struct),int,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))))
*	O
imbx	*(struct)
=	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
;	O
if	O
(	O
!	O
imbx	*(struct)
)	O
return	O
;	O
if	O
(	O
imbx	*(struct)
->	O
msgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
)	O
{	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
imbx	*(struct)
->	O
msgs_cnt	long
;	O
i	long
++	O
)	O
_imap_msg_free	(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))->(void)
(	O
imbx	*(struct)
->	O
msgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
[	O
i	long
]	O
)	O
;	O
free	(*(void))->(void)
(	O
imbx	*(struct)
->	O
msgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
)	O
;	O
}	O
mu_stream_unref	(*(struct))->(void)
(	O
imbx	*(struct)
->	O
cache	*(struct)
)	O
;	O
free	(*(void))->(void)
(	O
imbx	*(struct)
)	O
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
=	O
NULL	O
;	O
}	O
static	O
void	O
_imap_update_callback	(*(void),int,long,*(void))->(void)
(	O
void	O
*	O
data	*(void)
,	O
int	O
code	int
,	O
size_t	long
sdat	long
,	O
void	O
*	O
pdat	*(void)
)	O
{	O
struct	O
_mu_imap_mailbox	struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`))))),long,long,*(struct),int,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))))
*	O
imbx	*(struct)
=	O
data	*(void)
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
imbx	*(struct)
->	O
stats	struct(int,int,int,long,long,long,long,long)
,	O
pdat	*(void)
,	O
sizeof	O
(	O
imbx	*(struct)
->	O
stats	struct(int,int,int,long,long,long,long,long)
)	O
)	O
;	O
imbx	*(struct)
->	O
flags	int
&=	O
~	O
_MU_IMAP_MBX_UPTODATE	int
;	O
}	O
static	O
void	O
_imap_expunge_callback	(*(void),int,long,*(void))->(void)
(	O
void	O
*	O
data	*(void)
,	O
int	O
code	int
,	O
size_t	long
msgno	long
,	O
void	O
*	O
pdat	*(void)
)	O
{	O
struct	O
_mu_imap_mailbox	struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`))))),long,long,*(struct),int,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))))
*	O
imbx	*(struct)
=	O
data	*(void)
;	O
size_t	long
n	long
;	O
if	O
(	O
msgno	long
>	O
imbx	*(struct)
->	O
msgs_cnt	long
)	O
{	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_ERROR	int
,	O
(	O
"_imap_expunge_callback called with invalid message number: %lu"	*(char)
,	O
(	O
unsigned	O
long	O
)	O
msgno	long
)	O
)	O
;	O
return	O
;	O
}	O
_imap_msg_free	(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))->(void)
(	O
imbx	*(struct)
->	O
msgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
[	O
msgno	long
-	O
1	int
]	O
)	O
;	O
n	long
=	O
imbx	*(struct)
->	O
msgs_cnt	long
-	O
msgno	long
;	O
if	O
(	O
n	long
)	O
{	O
size_t	long
i	long
;	O
memmove	(*(void),*(void),long)->(*(void))
(	O
imbx	*(struct)
->	O
msgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
+	O
msgno	long
-	O
1	int
,	O
imbx	*(struct)
->	O
msgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
+	O
msgno	long
,	O
n	long
*	O
sizeof	O
(	O
imbx	*(struct)
->	O
msgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
[	O
0	int
]	O
)	O
)	O
;	O
for	O
(	O
i	long
=	O
msgno	long
-	O
1	int
;	O
i	long
<	O
imbx	*(struct)
->	O
msgs_cnt	long
;	O
i	long
++	O
)	O
imbx	*(struct)
->	O
msgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
[	O
i	long
]	O
->	O
msgno	long
=	O
i	long
+	O
1	int
;	O
}	O
imbx	*(struct)
->	O
msgs_cnt	long
--	O
;	O
}	O
static	O
int	O
_imap_mbx_open	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),int)->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
int	O
flags	int
)	O
{	O
struct	O
_mu_imap_mailbox	struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`))))),long,long,*(struct),int,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))))
*	O
imbx	*(struct)
=	O
mbox	*(struct)
->	O
data	*(void)
;	O
mu_folder_t	*(struct)
folder	*(struct)
=	O
mbox	*(struct)
->	O
folder	*(struct)
;	O
int	O
rc	int
;	O
const	O
char	O
*	O
mbox_name	*(char)
;	O
mu_url_t	*(struct)
url	*(struct)
;	O
mu_imap_t	*(struct)
imap	*(struct)
;	O
mbox	*(struct)
->	O
flags	int
=	O
flags	int
;	O
rc	int
=	O
mu_mailbox_get_url	(*(struct),*(*(struct)))->(int)
(	O
mbox	*(struct)
,	O
&	O
url	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_TRACE1	int
,	O
(	O
_	O
(	O
"opening mailbox %s"	*(char)
)	O
,	O
mu_url_to_string	(*(struct))->(*(char))
(	O
url	*(struct)
)	O
)	O
)	O
;	O
rc	int
=	O
mu_url_sget_path	(*(struct),*(*(char)))->(int)
(	O
url	*(struct)
,	O
&	O
mbox_name	*(char)
)	O
;	O
if	O
(	O
rc	int
==	O
MU_ERR_NOENT	O
)	O
mbox_name	*(char)
=	O
"INBOX"	*(char)
;	O
else	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
mu_folder_open	(*(struct),int)->(int)
(	O
folder	*(struct)
,	O
flags	int
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
imap	*(struct)
=	O
folder	*(struct)
->	O
data	*(void)
;	O
mu_imap_register_callback_function	(*(struct),int,*((*(void),int,long,*(void))->(void)),*(void))->(void)
(	O
imap	*(struct)
,	O
MU_IMAP_CB_RECENT_COUNT	int
,	O
_imap_update_callback	(*(void),int,long,*(void))->(void)
,	O
imbx	*(struct)
)	O
;	O
mu_imap_register_callback_function	(*(struct),int,*((*(void),int,long,*(void))->(void)),*(void))->(void)
(	O
imap	*(struct)
,	O
MU_IMAP_CB_MESSAGE_COUNT	int
,	O
_imap_update_callback	(*(void),int,long,*(void))->(void)
,	O
imbx	*(struct)
)	O
;	O
mu_imap_register_callback_function	(*(struct),int,*((*(void),int,long,*(void))->(void)),*(void))->(void)
(	O
imap	*(struct)
,	O
MU_IMAP_CB_EXPUNGE	int
,	O
_imap_expunge_callback	(*(void),int,long,*(void))->(void)
,	O
imbx	*(struct)
)	O
;	O
rc	int
=	O
mu_imap_select	(*(struct),*(char),int,*(struct(int,int,int,long,long,long,long,long)))->(int)
(	O
imap	*(struct)
,	O
mbox_name	*(char)
,	O
flags	int
&	O
(	O
MU_STREAM_WRITE	int
|	O
MU_STREAM_APPEND	int
)	O
,	O
&	O
imbx	*(struct)
->	O
stats	struct(int,int,int,long,long,long,long,long)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
if	O
(	O
imbx	*(struct)
->	O
stats	struct(int,int,int,long,long,long,long,long)
.	O
flags	int
&	O
MU_IMAP_STAT_MESSAGE_COUNT	int
)	O
rc	int
=	O
_imap_realloc_messages	(*(struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct`)),long,long,*(struct),int,*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),long)->(int)
(	O
imbx	*(struct)
,	O
imbx	*(struct)
->	O
stats	struct(int,int,int,long,long,long,long,long)
.	O
message_count	long
)	O
;	O
_imap_mbx_scan	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(long))->(int)
(	O
mbox	*(struct)
,	O
1	int
,	O
NULL	O
)	O
;	O
return	O
rc	int
;	O
}	O
static	O
int	O
_imap_mbx_close	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
)	O
{	O
int	O
rc	int
;	O
mu_folder_t	*(struct)
folder	*(struct)
=	O
mbox	*(struct)
->	O
folder	*(struct)
;	O
mu_imap_t	*(struct)
imap	*(struct)
=	O
folder	*(struct)
->	O
data	*(void)
;	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_TRACE1	int
,	O
(	O
_	O
(	O
"closing mailbox %s"	*(char)
)	O
,	O
mu_url_to_string	(*(struct))->(*(char))
(	O
mbox	*(struct)
->	O
url	*(struct)
)	O
)	O
)	O
;	O
if	O
(	O
mu_imap_capability_test	(*(struct),*(char),*(*(char)))->(int)
(	O
imap	*(struct)
,	O
"UNSELECT"	*(char)
,	O
NULL	O
)	O
==	O
0	int
)	O
rc	int
=	O
mu_imap_unselect	(*(struct))->(int)
(	O
imap	*(struct)
)	O
;	O
else	O
rc	int
=	O
mu_imap_close	(*(struct))->(int)
(	O
imap	*(struct)
)	O
;	O
return	O
rc	int
;	O
}	O
static	O
int	O
_imap_messages_count	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
size_t	long
*	O
pcount	*(long)
)	O
{	O
struct	O
_mu_imap_mailbox	struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`))))),long,long,*(struct),int,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))))
*	O
imbx	*(struct)
=	O
mbox	*(struct)
->	O
data	*(void)
;	O
if	O
(	O
imbx	*(struct)
->	O
stats	struct(int,int,int,long,long,long,long,long)
.	O
flags	int
&	O
MU_IMAP_STAT_MESSAGE_COUNT	int
)	O
*	O
pcount	*(long)
=	O
imbx	*(struct)
->	O
stats	struct(int,int,int,long,long,long,long,long)
.	O
message_count	long
;	O
else	O
return	O
MU_ERR_INFO_UNAVAILABLE	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_imap_messages_recent	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
size_t	long
*	O
pcount	*(long)
)	O
{	O
struct	O
_mu_imap_mailbox	struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`))))),long,long,*(struct),int,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))))
*	O
imbx	*(struct)
=	O
mbox	*(struct)
->	O
data	*(void)
;	O
if	O
(	O
imbx	*(struct)
->	O
stats	struct(int,int,int,long,long,long,long,long)
.	O
flags	int
&	O
MU_IMAP_STAT_RECENT_COUNT	int
)	O
*	O
pcount	*(long)
=	O
imbx	*(struct)
->	O
stats	struct(int,int,int,long,long,long,long,long)
.	O
recent_count	long
;	O
else	O
{	O
int	O
rc	int
;	O
mu_folder_t	*(struct)
folder	*(struct)
=	O
mbox	*(struct)
->	O
folder	*(struct)
;	O
mu_imap_t	*(struct)
imap	*(struct)
=	O
folder	*(struct)
->	O
data	*(void)
;	O
mu_msgset_t	*(struct)
msgset	*(struct)
;	O
rc	int
=	O
mu_imap_search	(*(struct),int,*(char),*(*(struct)))->(int)
(	O
imap	*(struct)
,	O
0	int
,	O
"RECENT"	*(char)
,	O
&	O
msgset	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
mu_msgset_count	(*(struct),*(long))->(int)
(	O
msgset	*(struct)
,	O
pcount	*(long)
)	O
;	O
mu_msgset_free	(*(struct))->(void)
(	O
msgset	*(struct)
)	O
;	O
return	O
rc	int
;	O
}	O
return	O
0	int
;	O
}	O
static	O
int	O
_imap_uidnext	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
size_t	long
*	O
pn	*(int)
)	O
{	O
struct	O
_mu_imap_mailbox	struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`))))),long,long,*(struct),int,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))))
*	O
imbx	*(struct)
=	O
mbox	*(struct)
->	O
data	*(void)
;	O
if	O
(	O
imbx	*(struct)
->	O
stats	struct(int,int,int,long,long,long,long,long)
.	O
flags	int
&	O
MU_IMAP_STAT_UIDNEXT	int
)	O
*	O
pn	*(int)
=	O
imbx	*(struct)
->	O
stats	struct(int,int,int,long,long,long,long,long)
.	O
uidnext	long
;	O
else	O
return	O
MU_ERR_INFO_UNAVAILABLE	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_imap_message_unseen	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
size_t	long
*	O
pn	*(int)
)	O
{	O
struct	O
_mu_imap_mailbox	struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`))))),long,long,*(struct),int,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))))
*	O
imbx	*(struct)
=	O
mbox	*(struct)
->	O
data	*(void)
;	O
if	O
(	O
imbx	*(struct)
->	O
stats	struct(int,int,int,long,long,long,long,long)
.	O
flags	int
&	O
MU_IMAP_STAT_FIRST_UNSEEN	int
)	O
*	O
pn	*(int)
=	O
imbx	*(struct)
->	O
stats	struct(int,int,int,long,long,long,long,long)
.	O
first_unseen	long
;	O
else	O
{	O
int	O
rc	int
;	O
mu_folder_t	*(struct)
folder	*(struct)
=	O
mbox	*(struct)
->	O
folder	*(struct)
;	O
mu_imap_t	*(struct)
imap	*(struct)
=	O
folder	*(struct)
->	O
data	*(void)
;	O
mu_msgset_t	*(struct)
msgset	*(struct)
;	O
mu_list_t	*(struct)
list	*(struct)
;	O
rc	int
=	O
mu_imap_search	(*(struct),int,*(char),*(*(struct)))->(int)
(	O
imap	*(struct)
,	O
0	int
,	O
"UNSEEN"	*(char)
,	O
&	O
msgset	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
if	O
(	O
mu_msgset_is_empty	(*(struct))->(int)
(	O
msgset	*(struct)
)	O
)	O
{	O
mu_msgset_free	(*(struct))->(void)
(	O
msgset	*(struct)
)	O
;	O
return	O
MU_ERR_NOENT	O
;	O
}	O
rc	int
=	O
mu_msgset_get_list	(*(struct),*(*(struct)))->(int)
(	O
msgset	*(struct)
,	O
&	O
list	*(struct)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
struct	O
mu_msgrange	struct(long,long)
*	O
r	*(struct(long,long))
;	O
rc	int
=	O
mu_list_head	(*(struct),*(*(void)))->(int)
(	O
list	*(struct)
,	O
(	O
void	O
*	O
*	O
)	O
&	O
r	*(struct(long,long))
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
*	O
pn	*(int)
=	O
r	*(struct(long,long))
->	O
msg_beg	long
;	O
}	O
mu_msgset_free	(*(struct))->(void)
(	O
msgset	*(struct)
)	O
;	O
return	O
rc	int
;	O
}	O
return	O
0	int
;	O
}	O
static	O
int	O
_imap_uidvalidity	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
unsigned	O
long	O
*	O
pn	*(int)
)	O
{	O
struct	O
_mu_imap_mailbox	struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`))))),long,long,*(struct),int,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))))
*	O
imbx	*(struct)
=	O
mbox	*(struct)
->	O
data	*(void)
;	O
if	O
(	O
imbx	*(struct)
->	O
stats	struct(int,int,int,long,long,long,long,long)
.	O
flags	int
&	O
MU_IMAP_STAT_UIDVALIDITY	int
)	O
*	O
pn	*(int)
=	O
imbx	*(struct)
->	O
stats	struct(int,int,int,long,long,long,long,long)
.	O
uidvalidity	long
;	O
else	O
return	O
MU_ERR_INFO_UNAVAILABLE	O
;	O
return	O
0	int
;	O
}	O
struct	O
attr_tab	struct(long,long,int)
{	O
size_t	long
start	long
;	O
size_t	long
end	long
;	O
int	O
attr_flags	int
;	O
}	O
;	O
static	O
int	O
attr_tab_cmp	(*(void),*(void))->(int)
(	O
void	O
const	O
*	O
a	*(struct(*(char),int,int))
,	O
void	O
const	O
*	O
b	*(struct(*(char),int,int))
)	O
{	O
struct	O
attr_tab	struct(long,long,int)
const	O
*	O
ta	*(struct(long,long,int))
=	O
a	*(struct(*(char),int,int))
;	O
struct	O
attr_tab	struct(long,long,int)
const	O
*	O
tb	*(struct(long,long,int))
=	O
b	*(struct(*(char),int,int))
;	O
if	O
(	O
ta	*(struct(long,long,int))
->	O
attr_flags	int
<	O
tb	*(struct(long,long,int))
->	O
attr_flags	int
)	O
return	O
-	O
1	int
;	O
else	O
if	O
(	O
ta	*(struct(long,long,int))
->	O
attr_flags	int
>	O
tb	*(struct(long,long,int))
->	O
attr_flags	int
)	O
return	O
1	int
;	O
if	O
(	O
ta	*(struct(long,long,int))
->	O
start	long
<	O
tb	*(struct(long,long,int))
->	O
start	long
)	O
return	O
-	O
1	int
;	O
else	O
if	O
(	O
ta	*(struct(long,long,int))
->	O
start	long
>	O
tb	*(struct(long,long,int))
->	O
start	long
)	O
return	O
1	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
aggregate_attributes	(*(struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct`)),long,long,*(struct),int,*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),*(*(struct(long,long,int))),*(long))->(int)
(	O
struct	O
_mu_imap_mailbox	struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`))))),long,long,*(struct),int,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))))
*	O
imbx	*(struct)
,	O
struct	O
attr_tab	struct(long,long,int)
*	O
*	O
ptab	*(*(struct(long,long,int)))
,	O
size_t	long
*	O
pcnt	*(long)
)	O
{	O
size_t	long
i	long
,	O
j	long
;	O
size_t	long
count	long
;	O
struct	O
attr_tab	struct(long,long,int)
*	O
tab	*(struct(long,long,int))
;	O
count	long
=	O
0	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
imbx	*(struct)
->	O
msgs_cnt	long
;	O
i	long
++	O
)	O
{	O
if	O
(	O
imbx	*(struct)
->	O
msgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
[	O
i	long
]	O
->	O
flags	int
&	O
_MU_IMAP_MSG_ATTRCHG	int
)	O
count	long
++	O
;	O
}	O
if	O
(	O
count	long
==	O
0	int
)	O
{	O
*	O
ptab	*(*(struct(long,long,int)))
=	O
NULL	O
;	O
*	O
pcnt	*(long)
=	O
0	int
;	O
return	O
0	int
;	O
}	O
tab	*(struct(long,long,int))
=	O
calloc	(long,long)->(*(void))
(	O
count	long
,	O
sizeof	O
(	O
*	O
tab	*(struct(long,long,int))
)	O
)	O
;	O
if	O
(	O
!	O
tab	*(struct(long,long,int))
)	O
return	O
ENOMEM	int
;	O
for	O
(	O
i	long
=	O
j	long
=	O
0	int
;	O
i	long
<	O
imbx	*(struct)
->	O
msgs_cnt	long
;	O
i	long
++	O
)	O
{	O
if	O
(	O
imbx	*(struct)
->	O
msgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
[	O
i	long
]	O
->	O
flags	int
&	O
_MU_IMAP_MSG_ATTRCHG	int
)	O
{	O
tab	*(struct(long,long,int))
[	O
j	long
]	O
.	O
start	long
=	O
tab	*(struct(long,long,int))
[	O
j	long
]	O
.	O
end	long
=	O
i	long
;	O
tab	*(struct(long,long,int))
[	O
j	long
]	O
.	O
attr_flags	int
=	O
imbx	*(struct)
->	O
msgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
[	O
i	long
]	O
->	O
attr_flags	int
;	O
j	long
++	O
;	O
}	O
}	O
qsort	(*(void),long,long,*((*(void),*(void))->(int)))->(void)
(	O
tab	*(struct(long,long,int))
,	O
count	long
,	O
sizeof	O
(	O
tab	*(struct(long,long,int))
[	O
0	int
]	O
)	O
,	O
attr_tab_cmp	(*(void),*(void))->(int)
)	O
;	O
for	O
(	O
i	long
=	O
j	long
=	O
0	int
;	O
i	long
<	O
count	long
;	O
i	long
++	O
)	O
{	O
if	O
(	O
i	long
==	O
j	long
)	O
continue	O
;	O
else	O
if	O
(	O
(	O
tab	*(struct(long,long,int))
[	O
i	long
]	O
.	O
attr_flags	int
==	O
tab	*(struct(long,long,int))
[	O
j	long
]	O
.	O
attr_flags	int
)	O
&&	O
(	O
tab	*(struct(long,long,int))
[	O
i	long
]	O
.	O
start	long
==	O
tab	*(struct(long,long,int))
[	O
j	long
]	O
.	O
end	long
+	O
1	int
)	O
)	O
tab	*(struct(long,long,int))
[	O
j	long
]	O
.	O
end	long
++	O
;	O
else	O
tab	*(struct(long,long,int))
[	O
++	O
j	long
]	O
=	O
tab	*(struct(long,long,int))
[	O
i	long
]	O
;	O
}	O
*	O
ptab	*(*(struct(long,long,int)))
=	O
tab	*(struct(long,long,int))
;	O
*	O
pcnt	*(long)
=	O
j	long
+	O
1	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_imap_mbx_gensync	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(int))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
int	O
*	O
pdel	*(int)
)	O
{	O
struct	O
_mu_imap_mailbox	struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`))))),long,long,*(struct),int,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))))
*	O
imbx	*(struct)
=	O
mbox	*(struct)
->	O
data	*(void)
;	O
mu_folder_t	*(struct)
folder	*(struct)
=	O
mbox	*(struct)
->	O
folder	*(struct)
;	O
mu_imap_t	*(struct)
imap	*(struct)
=	O
folder	*(struct)
->	O
data	*(void)
;	O
size_t	long
i	long
,	O
j	long
;	O
mu_msgset_t	*(struct)
msgset	*(struct)
;	O
int	O
rc	int
;	O
int	O
delflg	int
=	O
0	int
;	O
struct	O
attr_tab	struct(long,long,int)
*	O
tab	*(struct(long,long,int))
;	O
size_t	long
count	long
;	O
rc	int
=	O
mu_msgset_create	(*(*(struct)),*(struct),int)->(int)
(	O
&	O
msgset	*(struct)
,	O
NULL	O
,	O
MU_MSGSET_NUM	int
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
aggregate_attributes	(*(struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct`)),long,long,*(struct),int,*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),*(*(struct(long,long,int))),*(long))->(int)
(	O
imbx	*(struct)
,	O
&	O
tab	*(struct(long,long,int))
,	O
&	O
count	long
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
imbx	*(struct)
->	O
msgs_cnt	long
;	O
i	long
++	O
)	O
{	O
if	O
(	O
imbx	*(struct)
->	O
msgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
[	O
i	long
]	O
->	O
flags	int
&	O
_MU_IMAP_MSG_ATTRCHG	int
)	O
{	O
mu_msgset_clear	(*(struct))->(int)
(	O
msgset	*(struct)
)	O
;	O
mu_msgset_add_range	(*(struct),long,long,int)->(int)
(	O
msgset	*(struct)
,	O
i	long
+	O
1	int
,	O
i	long
+	O
1	int
,	O
MU_MSGSET_NUM	int
)	O
;	O
if	O
(	O
rc	int
)	O
break	O
;	O
rc	int
=	O
mu_imap_store_flags	(*(struct),int,*(struct),int,int)->(int)
(	O
imap	*(struct)
,	O
0	int
,	O
msgset	*(struct)
,	O
MU_IMAP_STORE_SET	int
|	O
MU_IMAP_STORE_SILENT	int
,	O
imbx	*(struct)
->	O
msgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
[	O
i	long
]	O
->	O
attr_flags	int
)	O
;	O
delflg	int
|=	O
imbx	*(struct)
->	O
msgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
[	O
i	long
]	O
->	O
attr_flags	int
&	O
MU_ATTRIBUTE_DELETED	int
;	O
if	O
(	O
rc	int
)	O
break	O
;	O
}	O
}	O
}	O
else	O
{	O
for	O
(	O
i	long
=	O
j	long
=	O
0	int
;	O
i	long
<	O
count	long
;	O
i	long
++	O
)	O
{	O
if	O
(	O
j	long
<	O
i	long
)	O
{	O
if	O
(	O
tab	*(struct(long,long,int))
[	O
j	long
]	O
.	O
attr_flags	int
!=	O
tab	*(struct(long,long,int))
[	O
i	long
]	O
.	O
attr_flags	int
)	O
{	O
rc	int
=	O
mu_imap_store_flags	(*(struct),int,*(struct),int,int)->(int)
(	O
imap	*(struct)
,	O
0	int
,	O
msgset	*(struct)
,	O
MU_IMAP_STORE_SET	int
|	O
MU_IMAP_STORE_SILENT	int
,	O
tab	*(struct(long,long,int))
[	O
j	long
]	O
.	O
attr_flags	int
)	O
;	O
delflg	int
|=	O
tab	*(struct(long,long,int))
[	O
j	long
]	O
.	O
attr_flags	int
&	O
MU_ATTRIBUTE_DELETED	int
;	O
if	O
(	O
rc	int
)	O
break	O
;	O
mu_msgset_clear	(*(struct))->(int)
(	O
msgset	*(struct)
)	O
;	O
j	long
=	O
i	long
;	O
}	O
}	O
if	O
(	O
tab	*(struct(long,long,int))
[	O
i	long
]	O
.	O
end	long
==	O
tab	*(struct(long,long,int))
[	O
i	long
]	O
.	O
start	long
)	O
rc	int
=	O
mu_msgset_add_range	(*(struct),long,long,int)->(int)
(	O
msgset	*(struct)
,	O
tab	*(struct(long,long,int))
[	O
i	long
]	O
.	O
start	long
+	O
1	int
,	O
tab	*(struct(long,long,int))
[	O
i	long
]	O
.	O
start	long
+	O
1	int
,	O
MU_MSGSET_NUM	int
)	O
;	O
else	O
rc	int
=	O
mu_msgset_add_range	(*(struct),long,long,int)->(int)
(	O
msgset	*(struct)
,	O
tab	*(struct(long,long,int))
[	O
i	long
]	O
.	O
start	long
+	O
1	int
,	O
tab	*(struct(long,long,int))
[	O
i	long
]	O
.	O
end	long
+	O
1	int
,	O
MU_MSGSET_NUM	int
)	O
;	O
if	O
(	O
rc	int
)	O
break	O
;	O
}	O
if	O
(	O
rc	int
==	O
0	int
&&	O
j	long
<	O
i	long
)	O
{	O
rc	int
=	O
mu_imap_store_flags	(*(struct),int,*(struct),int,int)->(int)
(	O
imap	*(struct)
,	O
0	int
,	O
msgset	*(struct)
,	O
MU_IMAP_STORE_SET	int
|	O
MU_IMAP_STORE_SILENT	int
,	O
tab	*(struct(long,long,int))
[	O
j	long
]	O
.	O
attr_flags	int
)	O
;	O
delflg	int
|=	O
tab	*(struct(long,long,int))
[	O
j	long
]	O
.	O
attr_flags	int
&	O
MU_ATTRIBUTE_DELETED	int
;	O
}	O
free	(*(void))->(void)
(	O
tab	*(struct(long,long,int))
)	O
;	O
}	O
mu_msgset_free	(*(struct))->(void)
(	O
msgset	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
if	O
(	O
pdel	*(int)
)	O
*	O
pdel	*(int)
=	O
delflg	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_imap_mbx_expunge	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
)	O
{	O
int	O
rc	int
,	O
del	int
=	O
0	int
;	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_TRACE1	int
,	O
(	O
_	O
(	O
"expunging mailbox %s"	*(char)
)	O
,	O
mu_url_to_string	(*(struct))->(*(char))
(	O
mbox	*(struct)
->	O
url	*(struct)
)	O
)	O
)	O
;	O
rc	int
=	O
_imap_mbx_gensync	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(int))->(int)
(	O
mbox	*(struct)
,	O
&	O
del	int
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
&&	O
del	int
)	O
{	O
mu_folder_t	*(struct)
folder	*(struct)
=	O
mbox	*(struct)
->	O
folder	*(struct)
;	O
mu_imap_t	*(struct)
imap	*(struct)
=	O
folder	*(struct)
->	O
data	*(void)
;	O
rc	int
=	O
mu_imap_expunge	(*(struct))->(int)
(	O
imap	*(struct)
)	O
;	O
}	O
return	O
rc	int
;	O
}	O
static	O
int	O
_imap_mbx_sync	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
)	O
{	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_TRACE1	int
,	O
(	O
_	O
(	O
"synchronizing mailbox %s"	*(char)
)	O
,	O
mu_url_to_string	(*(struct))->(*(char))
(	O
mbox	*(struct)
->	O
url	*(struct)
)	O
)	O
)	O
;	O
return	O
_imap_mbx_gensync	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(int))->(int)
(	O
mbox	*(struct)
,	O
NULL	O
)	O
;	O
}	O
static	O
int	O
_imap_mbx_append_message	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
mu_message_t	*(struct)
msg	*(struct)
)	O
{	O
int	O
rc	int
;	O
mu_folder_t	*(struct)
folder	*(struct)
=	O
mbox	*(struct)
->	O
folder	*(struct)
;	O
mu_imap_t	*(struct)
imap	*(struct)
=	O
folder	*(struct)
->	O
data	*(void)
;	O
mu_url_t	*(struct)
url	*(struct)
;	O
const	O
char	O
*	O
mbox_name	*(char)
;	O
rc	int
=	O
mu_mailbox_get_url	(*(struct),*(*(struct)))->(int)
(	O
mbox	*(struct)
,	O
&	O
url	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
mu_url_sget_path	(*(struct),*(*(char)))->(int)
(	O
url	*(struct)
,	O
&	O
mbox_name	*(char)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
return	O
mu_imap_append_message	(*(struct),*(char),int,*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))),*(struct))->(int)
(	O
imap	*(struct)
,	O
mbox_name	*(char)
,	O
0	int
,	O
NULL	O
,	O
NULL	O
,	O
msg	*(struct)
)	O
;	O
}	O
static	O
int	O
_compute_lines	(*(struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*`,*`,long),struct(*`)))),*(long))->(int)
(	O
struct	O
mu_bodystructure	struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct(enum(int,int,int,int),*(char),*(char),*(struct`),*(char),*(char),*(char),long,*(char),*(char),*(struct`),*(char),*(char),union(struct`,struct`,struct`))),long),struct(*(struct))))
*	O
bs	*(struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*(struct`),*(struct`),long),struct(*(struct`)))))
,	O
size_t	long
*	O
pcount	*(long)
)	O
;	O
static	O
int	O
sum_lines	(*(void),*(void))->(int)
(	O
void	O
*	O
item	*(void)
,	O
void	O
*	O
data	*(void)
)	O
{	O
struct	O
mu_bodystructure	struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct(enum(int,int,int,int),*(char),*(char),*(struct`),*(char),*(char),*(char),long,*(char),*(char),*(struct`),*(char),*(char),union(struct`,struct`,struct`))),long),struct(*(struct))))
*	O
bs	*(struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*(struct`),*(struct`),long),struct(*(struct`)))))
=	O
item	*(void)
;	O
size_t	long
*	O
pn	*(int)
=	O
data	*(void)
;	O
size_t	long
n	long
;	O
int	O
rc	int
;	O
rc	int
=	O
_compute_lines	(*(struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*`,*`,long),struct(*`)))),*(long))->(int)
(	O
bs	*(struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*(struct`),*(struct`),long),struct(*(struct`)))))
,	O
&	O
n	long
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
*	O
pn	*(int)
+=	O
n	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_compute_lines	(*(struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*`,*`,long),struct(*`)))),*(long))->(int)
(	O
struct	O
mu_bodystructure	struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct(enum(int,int,int,int),*(char),*(char),*(struct`),*(char),*(char),*(char),long,*(char),*(char),*(struct`),*(char),*(char),union(struct`,struct`,struct`))),long),struct(*(struct))))
*	O
bs	*(struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*(struct`),*(struct`),long),struct(*(struct`)))))
,	O
size_t	long
*	O
pcount	*(long)
)	O
{	O
switch	O
(	O
bs	*(struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*(struct`),*(struct`),long),struct(*(struct`)))))
->	O
body_message_type	enum(int,int,int,int)
)	O
{	O
case	O
mu_message_other	int
:	O
break	O
;	O
case	O
mu_message_text	int
:	O
*	O
pcount	*(long)
=	O
bs	*(struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*(struct`),*(struct`),long),struct(*(struct`)))))
->	O
v	union(struct(long),struct(*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct(enum(int,int,int,int),*(char),*(char),*(struct`),*(char),*(char),*(char),long,*(char),*(char),*(struct`),*(char),*(char),union(struct`,struct`,struct`))),long),struct(*(struct)))
.	O
text	struct(long)
.	O
body_lines	long
;	O
return	O
0	int
;	O
case	O
mu_message_rfc822	int
:	O
*	O
pcount	*(long)
=	O
bs	*(struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*(struct`),*(struct`),long),struct(*(struct`)))))
->	O
v	union(struct(long),struct(*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct(enum(int,int,int,int),*(char),*(char),*(struct`),*(char),*(char),*(char),long,*(char),*(char),*(struct`),*(char),*(char),union(struct`,struct`,struct`))),long),struct(*(struct)))
.	O
rfc822	struct(*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char))),*(struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char))),long)
.	O
body_lines	long
;	O
return	O
0	int
;	O
case	O
mu_message_multipart	int
:	O
*	O
pcount	*(long)
=	O
0	int
;	O
return	O
mu_list_foreach	(*(struct),*((*(void),*(void))->(int)),*(void))->(int)
(	O
bs	*(struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*(struct`),*(struct`),long),struct(*(struct`)))))
->	O
v	union(struct(long),struct(*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct(enum(int,int,int,int),*(char),*(char),*(struct`),*(char),*(char),*(char),long,*(char),*(char),*(struct`),*(char),*(char),union(struct`,struct`,struct`))),long),struct(*(struct)))
.	O
multipart	struct(*(struct))
.	O
body_parts	*(struct)
,	O
sum_lines	(*(void),*(void))->(int)
,	O
pcount	*(long)
)	O
;	O
}	O
return	O
MU_ERR_USER0	O
;	O
}	O
static	O
int	O
fetch_response_parser	(*(void),*(void))->(int)
(	O
void	O
*	O
item	*(void)
,	O
void	O
*	O
data	*(void)
)	O
{	O
union	O
mu_imap_fetch_response	union(int,struct(int,*(long),long,*(char),*(struct),*(char)),struct(int,*(struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*`,*`,long),struct(*`))))),struct(int,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char)))),struct(int,int),struct(int,struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char))),struct(int,long),struct(int,long))
*	O
resp	*(struct)
=	O
item	*(void)
;	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
=	O
data	*(void)
;	O
switch	O
(	O
resp	*(struct)
->	O
type	int
)	O
{	O
case	O
MU_IMAP_FETCH_UID	int
:	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
uid	long
=	O
resp	*(struct)
->	O
uid	long
.	O
uid	long
;	O
break	O
;	O
case	O
MU_IMAP_FETCH_FLAGS	int
:	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
attr_flags	int
=	O
resp	*(struct)
->	O
flags	int
.	O
flags	int
;	O
break	O
;	O
case	O
MU_IMAP_FETCH_ENVELOPE	int
:	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
env	*(struct)
=	O
resp	*(struct)
->	O
envelope	*(struct)
.	O
imapenvelope	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char)))
;	O
resp	*(struct)
->	O
envelope	*(struct)
.	O
imapenvelope	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char)))
=	O
NULL	O
;	O
break	O
;	O
case	O
MU_IMAP_FETCH_RFC822_SIZE	int
:	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
message_size	long
=	O
resp	*(struct)
->	O
rfc822_size	struct(int,long)
.	O
size	long
;	O
break	O
;	O
case	O
MU_IMAP_FETCH_BODYSTRUCTURE	int
:	O
{	O
size_t	long
n	long
;	O
if	O
(	O
_compute_lines	(*(struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*`,*`,long),struct(*`)))),*(long))->(int)
(	O
resp	*(struct)
->	O
bodystructure	struct(int,*(struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*`,*`,long),struct(*`)))))
.	O
bs	*(struct(enum(int,int,int,int),*(char),*(char),*(struct),*(char),*(char),*(char),long,*(char),*(char),*(struct),*(char),*(char),union(struct(long),struct(*(struct`),*(struct`),long),struct(*(struct`)))))
,	O
&	O
n	long
)	O
==	O
0	int
)	O
{	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
message_lines	long
=	O
n	long
;	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
flags	int
|=	O
_MU_IMAP_MSG_LINES	int
;	O
}	O
}	O
break	O
;	O
case	O
MU_IMAP_FETCH_BODY	int
:	O
{	O
int	O
rc	int
;	O
struct	O
save_closure	struct(*(struct),long,*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`))))))
clos	*(struct(*(struct),long,*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct`),*(struct`),*(struct`),*(struct`)))))
;	O
clos	*(struct(*(struct),long,*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct`),*(struct`),*(struct`),*(struct`)))))
.	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
=	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
;	O
rc	int
=	O
mu_memory_stream_create	(*(*(struct)),int)->(int)
(	O
&	O
clos	*(struct(*(struct),long,*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct`),*(struct`),*(struct`),*(struct`)))))
.	O
save_stream	*(struct)
,	O
MU_STREAM_RDWR	O
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
rc	int
=	O
_save_message_parser	(*(void),*(void))->(int)
(	O
resp	*(struct)
,	O
&	O
clos	*(struct(*(struct),long,*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct`),*(struct`),*(struct`),*(struct`)))))
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
header_stream	*(struct)
=	O
clos	*(struct(*(struct),long,*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct`),*(struct`),*(struct`),*(struct`)))))
.	O
save_stream	*(struct)
;	O
else	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
clos	*(struct(*(struct),long,*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct`),*(struct`),*(struct`),*(struct`)))))
.	O
save_stream	*(struct)
)	O
;	O
}	O
else	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_ERROR	int
,	O
(	O
"mu_static_memory_stream_create: %s"	*(char)
,	O
mu_strerror	(int)->(*(char))
(	O
rc	int
)	O
)	O
)	O
;	O
}	O
break	O
;	O
default	O
:	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_TRACE0	int
,	O
(	O
_	O
(	O
"fetch returned a not requested item %d"	*(char)
)	O
,	O
resp	*(struct)
->	O
type	int
)	O
)	O
;	O
break	O
;	O
}	O
return	O
0	int
;	O
}	O
static	O
void	O
_imap_fetch_callback	(*(void),int,long,*(void))->(void)
(	O
void	O
*	O
data	*(void)
,	O
int	O
code	int
,	O
size_t	long
sdat	long
,	O
void	O
*	O
pdat	*(void)
)	O
{	O
struct	O
_mu_imap_mailbox	struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`))))),long,long,*(struct),int,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))))
*	O
imbx	*(struct)
=	O
data	*(void)
;	O
mu_mailbox_t	*(struct)
mbox	*(struct)
=	O
imbx	*(struct)
->	O
mbox	*(struct)
;	O
mu_list_t	*(struct)
list	*(struct)
=	O
pdat	*(void)
;	O
int	O
rc	int
;	O
struct	O
_mu_imap_message	struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),struct(int,*(char)),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(char),*(char))),*(struct),*(struct),*(struct))
*	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
;	O
rc	int
=	O
_imap_realloc_messages	(*(struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct`)),long,long,*(struct),int,*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),long)->(int)
(	O
imbx	*(struct)
,	O
sdat	long
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_ERROR	int
,	O
(	O
_	O
(	O
"cannot reallocate array of messages: %s"	*(char)
)	O
,	O
mu_strerror	(int)->(*(char))
(	O
rc	int
)	O
)	O
)	O
;	O
imbx	*(struct)
->	O
last_error	int
=	O
rc	int
;	O
return	O
;	O
}	O
if	O
(	O
imbx	*(struct)
->	O
msgs_cnt	long
<	O
sdat	long
)	O
imbx	*(struct)
->	O
msgs_cnt	long
=	O
sdat	long
;	O
if	O
(	O
!	O
imbx	*(struct)
->	O
msgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
[	O
sdat	long
-	O
1	int
]	O
)	O
{	O
imbx	*(struct)
->	O
msgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
[	O
sdat	long
-	O
1	int
]	O
=	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
imbx	*(struct)
->	O
msgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
[	O
sdat	long
-	O
1	int
]	O
[	O
0	int
]	O
)	O
)	O
;	O
if	O
(	O
!	O
imbx	*(struct)
->	O
msgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
[	O
sdat	long
-	O
1	int
]	O
)	O
{	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_ERROR	int
,	O
(	O
_	O
(	O
"cannot allocate imap message: %s"	*(char)
)	O
,	O
mu_strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
)	O
;	O
imbx	*(struct)
->	O
last_error	int
=	O
errno	O
;	O
return	O
;	O
}	O
imbx	*(struct)
->	O
msgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
[	O
sdat	long
-	O
1	int
]	O
->	O
msgno	long
=	O
sdat	long
;	O
}	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
=	O
imbx	*(struct)
->	O
msgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
[	O
sdat	long
-	O
1	int
]	O
;	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
->	O
imbx	*(struct)
=	O
imbx	*(struct)
;	O
mu_list_foreach	(*(struct),*((*(void),*(void))->(int)),*(void))->(int)
(	O
list	*(struct)
,	O
fetch_response_parser	(*(void),*(void))->(int)
,	O
imsg	*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct),*(struct),*(struct(int,struct(int,int,int,long,long,long,long,long),*(*`),long,long,*(struct`),int,*(struct`)))))
)	O
;	O
if	O
(	O
mbox	*(struct)
->	O
observable	*(struct)
)	O
{	O
if	O
(	O
(	O
(	O
sdat	long
+	O
1	int
)	O
%	O
10	int
)	O
==	O
0	int
)	O
mu_observable_notify	(*(struct),int,*(void))->(int)
(	O
imbx	*(struct)
->	O
mbox	*(struct)
->	O
observable	*(struct)
,	O
MU_EVT_MAILBOX_PROGRESS	int
,	O
NULL	O
)	O
;	O
}	O
}	O
static	O
int	O
_imap_mbx_scan	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(long))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
size_t	long
msgno	long
,	O
size_t	long
*	O
pcount	*(long)
)	O
{	O
struct	O
_mu_imap_mailbox	struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`))))),long,long,*(struct),int,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))))
*	O
imbx	*(struct)
=	O
mbox	*(struct)
->	O
data	*(void)
;	O
mu_folder_t	*(struct)
folder	*(struct)
=	O
mbox	*(struct)
->	O
folder	*(struct)
;	O
mu_imap_t	*(struct)
imap	*(struct)
=	O
folder	*(struct)
->	O
data	*(void)
;	O
mu_msgset_t	*(struct)
msgset	*(struct)
;	O
int	O
rc	int
;	O
static	O
char	O
_imap_scan_items	array(char)
[	O
]	O
=	O
"(UID FLAGS ENVELOPE RFC822.SIZE BODY BODY.PEEK[HEADER])"	*(char)
;	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_TRACE1	int
,	O
(	O
_	O
(	O
"scanning mailbox %s"	*(char)
)	O
,	O
mu_url_to_string	(*(struct))->(*(char))
(	O
mbox	*(struct)
->	O
url	*(struct)
)	O
)	O
)	O
;	O
if	O
(	O
imbx	*(struct)
->	O
stats	struct(int,int,int,long,long,long,long,long)
.	O
message_count	long
>	O
0	int
)	O
{	O
rc	int
=	O
mu_msgset_create	(*(*(struct)),*(struct),int)->(int)
(	O
&	O
msgset	*(struct)
,	O
NULL	O
,	O
MU_MSGSET_NUM	int
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
mu_msgset_add_range	(*(struct),long,long,int)->(int)
(	O
msgset	*(struct)
,	O
msgno	long
,	O
MU_MSGNO_LAST	int
,	O
MU_MSGSET_NUM	int
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_msgset_free	(*(struct))->(void)
(	O
msgset	*(struct)
)	O
;	O
return	O
rc	int
;	O
}	O
_imap_mbx_clrerr	O
(	O
imbx	*(struct)
)	O
;	O
rc	int
=	O
_imap_fetch_with_callback	(*(struct(int,enum(int,int,int),int,*(char),long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*(int),*(char),*(struct),*(struct),*(char),int,struct(int,int,int,long,long,long,long,long),array(struct(*((*(void),int,long,*(void))->(void)),*(void))))),*(struct),*(char),*((*(void),int,long,*(void))->(void)),*(void))->(int)
(	O
imap	*(struct)
,	O
msgset	*(struct)
,	O
_imap_scan_items	array(char)
,	O
_imap_fetch_callback	(*(void),int,long,*(void))->(void)
,	O
imbx	*(struct)
)	O
;	O
mu_msgset_free	(*(struct))->(void)
(	O
msgset	*(struct)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
rc	int
=	O
_imap_mbx_errno	O
(	O
imbx	*(struct)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
size_t	long
i	long
;	O
mu_off_t	long
total	long
=	O
0	int
;	O
imbx	*(struct)
->	O
flags	int
|=	O
_MU_IMAP_MBX_UPTODATE	int
;	O
for	O
(	O
i	long
=	O
1	int
;	O
i	long
<=	O
imbx	*(struct)
->	O
msgs_cnt	long
;	O
i	long
++	O
)	O
{	O
total	long
+=	O
imbx	*(struct)
->	O
msgs	*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`)))))
[	O
i	long
-	O
1	int
]	O
->	O
message_size	long
;	O
if	O
(	O
mbox	*(struct)
->	O
observable	*(struct)
)	O
mu_observable_notify	(*(struct),int,*(void))->(int)
(	O
mbox	*(struct)
->	O
observable	*(struct)
,	O
MU_EVT_MESSAGE_ADD	int
,	O
&	O
i	long
)	O
;	O
}	O
if	O
(	O
pcount	*(long)
)	O
*	O
pcount	*(long)
=	O
imbx	*(struct)
->	O
msgs_cnt	long
;	O
}	O
}	O
else	O
{	O
rc	int
=	O
0	int
;	O
imbx	*(struct)
->	O
flags	int
|=	O
_MU_IMAP_MBX_UPTODATE	int
;	O
if	O
(	O
pcount	*(long)
)	O
*	O
pcount	*(long)
=	O
0	int
;	O
}	O
return	O
rc	int
;	O
}	O
static	O
int	O
_imap_mbx_is_updated	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
)	O
{	O
struct	O
_mu_imap_mailbox	struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`))))),long,long,*(struct),int,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))))
*	O
imbx	*(struct)
=	O
mbox	*(struct)
->	O
data	*(void)
;	O
mu_folder_t	*(struct)
folder	*(struct)
=	O
mbox	*(struct)
->	O
folder	*(struct)
;	O
mu_imap_t	*(struct)
imap	*(struct)
=	O
folder	*(struct)
->	O
data	*(void)
;	O
int	O
rc	int
;	O
rc	int
=	O
mu_imap_noop	(*(struct))->(int)
(	O
imap	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_ERROR	int
,	O
(	O
_	O
(	O
"mu_imap_noop: %s"	*(char)
)	O
,	O
mu_strerror	(int)->(*(char))
(	O
rc	int
)	O
)	O
)	O
;	O
imbx	*(struct)
->	O
last_error	int
=	O
rc	int
;	O
}	O
return	O
_imap_mbx_uptodate	O
(	O
imbx	*(struct)
)	O
;	O
}	O
static	O
int	O
_imap_copy_to_mailbox	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct),*(char),int)->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
mu_msgset_t	*(struct)
msgset	*(struct)
,	O
const	O
char	O
*	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
int	O
flags	int
)	O
{	O
struct	O
_mu_imap_mailbox	struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`))))),long,long,*(struct),int,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))))
*	O
imbx	*(struct)
=	O
mbox	*(struct)
->	O
data	*(void)
;	O
mu_folder_t	*(struct)
folder	*(struct)
=	O
mbox	*(struct)
->	O
folder	*(struct)
;	O
mu_imap_t	*(struct)
imap	*(struct)
=	O
folder	*(struct)
->	O
data	*(void)
;	O
int	O
rc	int
;	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_TRACE1	int
,	O
(	O
_	O
(	O
"copying messages to mailbox %s"	*(char)
)	O
,	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
)	O
)	O
;	O
_imap_mbx_clrerr	O
(	O
imbx	*(struct)
)	O
;	O
rc	int
=	O
mu_imap_copy	(*(struct),int,*(struct),*(char))->(int)
(	O
imap	*(struct)
,	O
flags	int
&	O
MU_MAILBOX_COPY_UID	int
,	O
msgset	*(struct)
,	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_ERROR	int
,	O
(	O
_	O
(	O
"mu_imap_copy: %s"	*(char)
)	O
,	O
mu_strerror	(int)->(*(char))
(	O
rc	int
)	O
)	O
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
if	O
(	O
mu_imap_response_code	(*(struct))->(int)
(	O
imap	*(struct)
)	O
==	O
MU_IMAP_RESPONSE_TRYCREATE	int
)	O
{	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_TRACE1	int
,	O
(	O
_	O
(	O
"creating mailbox %s"	*(char)
)	O
,	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
)	O
)	O
;	O
rc	int
=	O
mu_imap_mailbox_create	(*(struct),*(char))->(int)
(	O
imap	*(struct)
,	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
rc	int
=	O
mu_imap_copy	(*(struct),int,*(struct),*(char))->(int)
(	O
imap	*(struct)
,	O
flags	int
&	O
MU_MAILBOX_COPY_UID	int
,	O
msgset	*(struct)
,	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
)	O
;	O
}	O
}	O
imbx	*(struct)
->	O
last_error	int
=	O
rc	int
;	O
}	O
return	O
rc	int
;	O
}	O
int	O
_mu_imap_mailbox_init	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
)	O
{	O
struct	O
_mu_imap_mailbox	struct(int,struct(int,int,int,long,long,long,long,long),*(*(struct(int,long,long,int,long,long,long,long,long,long,long,*(struct(struct`,struct`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),*(struct(int,struct`,*`,long,long,*`,int,*`))))),long,long,*(struct),int,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))))
*	O
mbx	*(struct)
=	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
*	O
mbx	*(struct)
)	O
)	O
;	O
if	O
(	O
!	O
mbx	*(struct)
)	O
return	O
ENOMEM	int
;	O
mbx	*(struct)
->	O
mbox	*(struct)
=	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
=	O
mbx	*(struct)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_destroy	*((*(struct),*(void))->(int))
=	O
_imap_mbx_destroy	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(void)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_open	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),int)->(int))
=	O
_imap_mbx_open	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),int)->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_close	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))))->(int))
=	O
_imap_mbx_close	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_expunge	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int))
=	O
_imap_mbx_expunge	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_messages_count	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int))
=	O
_imap_messages_count	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_messages_recent	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int))
=	O
_imap_messages_recent	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_message_unseen	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int))
=	O
_imap_message_unseen	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_uidvalidity	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int))
=	O
_imap_uidvalidity	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_uidnext	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int))
=	O
_imap_uidnext	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_scan	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(long))->(int))
=	O
_imap_mbx_scan	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(long))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_is_updated	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int))
=	O
_imap_mbx_is_updated	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_get_message	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(*(struct)))->(int))
=	O
_imap_mbx_get_message	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(*(struct)))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_sync	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int))
=	O
_imap_mbx_sync	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_append_message	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct))->(int))
=	O
_imap_mbx_append_message	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct))->(int)
;	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
_copy	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct),*(char),int)->(int))
=	O
_imap_copy_to_mailbox	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct),*(char),int)->(int)
;	O
return	O
0	int
;	O
}	O
