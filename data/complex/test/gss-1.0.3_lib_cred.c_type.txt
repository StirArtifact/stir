OM_uint32	int
gss_acquire_cred	(*(int),*(struct),int,*(struct(long,*(struct(int,*`)))),int,*(*(struct)),*(*(struct(long,*(struct`)))),*(int))->(int)
(	O
OM_uint32	int
*	O
minor_status	*(int)
,	O
const	O
gss_name_t	*(struct)
desired_name	*(struct)
,	O
OM_uint32	int
time_req	int
,	O
const	O
gss_OID_set	*(struct(long,*(struct(int,*(void)))))
desired_mechs	*(struct(long,*(struct(int,*(void)))))
,	O
gss_cred_usage_t	int
cred_usage	int
,	O
gss_cred_id_t	*(struct)
*	O
output_cred_handle	*(*(struct))
,	O
gss_OID_set	*(struct(long,*(struct(int,*(void)))))
*	O
actual_mechs	*(*(struct(long,*(struct(int,*`)))))
,	O
OM_uint32	int
*	O
time_rec	*(int)
)	O
{	O
_gss_mech_api_t	*(struct(*(struct(int,*(void))),*(char),*(char),*(char),array(*(struct(int,*(void)))),*((*(int),*(struct`),*(*`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(*`),*(struct`),*(int),*(int))->(int)),*((*(int),*(struct`),*(struct`),*(*`))->(int)),*((*(int),*(struct`),*(struct`))->(int)),*((*(int),*(struct`),int,int,*(struct`),*(int),*(struct`))->(int)),*((*(int),*(struct`),*(struct`),*(struct`),*(int),*(int))->(int)),*((*(int),*(struct`),int,*(struct`),*(struct`))->(int)),*((*(int),*(struct`),*(struct`),*(struct`),*(int))->(int)),*((*(int),int,int,*(struct`),*(int),*(struct`))->(int)),*((*(int),*(struct`),int,*(struct`),int,*(*`),*(*`),*(int))->(int)),*((*(int),*(*`))->(int)),*((*(int),*(*`),*(struct`),*(struct`),*(struct`),*(*`),*(*`),*(struct`),*(int),*(int),*(*`))->(int)),*((*(int),*(*`),*(struct`))->(int)),*((*(int),*(struct`),*(int))->(int)),*((*(int),*(struct`),*(*`),*(int),*(int),*(*`))->(int)),*((*(int),*(struct`),*(struct`),*(*`),*(int),*(int),*(int))->(int))))
mech	*(struct(int,*(void)))
=	O
NULL	O
;	O
OM_uint32	int
maj_stat	int
;	O
if	O
(	O
!	O
output_cred_handle	*(*(struct))
)	O
return	O
GSS_S_NO_CRED	O
|	O
GSS_S_CALL_INACCESSIBLE_WRITE	O
;	O
if	O
(	O
desired_mechs	*(struct(long,*(struct(int,*(void)))))
!=	O
GSS_C_NO_OID_SET	O
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
mech	*(struct(int,*(void)))
==	O
NULL	O
&&	O
i	long
<	O
desired_mechs	*(struct(long,*(struct(int,*(void)))))
->	O
count	long
;	O
i	long
++	O
)	O
mech	*(struct(int,*(void)))
=	O
_gss_find_mech	(*(struct(int,*(void))))->(*(struct(*(struct(int,*`)),*(char),*(char),*(char),array(*(struct(int,*(void)))),*((*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`,int,int,*`,*`,*`)->(int)),*((*`,*`,int,*`,int,*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`,*`)->(int)))))
(	O
(	O
&	O
desired_mechs	*(struct(long,*(struct(int,*(void)))))
->	O
elements	*(void)
)	O
[	O
i	long
]	O
)	O
;	O
}	O
else	O
mech	*(struct(int,*(void)))
=	O
_gss_find_mech	(*(struct(int,*(void))))->(*(struct(*(struct(int,*`)),*(char),*(char),*(char),array(*(struct(int,*(void)))),*((*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`,int,int,*`,*`,*`)->(int)),*((*`,*`,int,*`,int,*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`,*`)->(int)))))
(	O
GSS_C_NO_OID	O
)	O
;	O
if	O
(	O
mech	*(struct(int,*(void)))
==	O
NULL	O
)	O
{	O
if	O
(	O
minor_status	*(int)
)	O
*	O
minor_status	*(int)
=	O
0	int
;	O
return	O
GSS_S_BAD_MECH	O
;	O
}	O
*	O
output_cred_handle	*(*(struct))
=	O
calloc	(long,long)->(*(void))
(	O
sizeof	O
(	O
*	O
*	O
output_cred_handle	*(*(struct))
)	O
,	O
1	int
)	O
;	O
if	O
(	O
!	O
*	O
output_cred_handle	*(*(struct))
)	O
{	O
if	O
(	O
minor_status	*(int)
)	O
*	O
minor_status	*(int)
=	O
ENOMEM	int
;	O
return	O
GSS_S_FAILURE	O
;	O
}	O
(	O
*	O
output_cred_handle	*(*(struct))
)	O
->	O
mech	*(struct(int,*(void)))
=	O
mech	*(struct(int,*(void)))
->	O
mech	*(struct(int,*(void)))
;	O
maj_stat	int
=	O
mech	*(struct(int,*(void)))
->	O
acquire_cred	*((*(int),*(struct(long,*(char),*(struct`))),int,*(struct(long,*(struct`))),int,*(*(struct(*`))),*(*(struct(long,*`))),*(int))->(int))
(	O
minor_status	*(int)
,	O
desired_name	*(struct)
,	O
time_req	int
,	O
desired_mechs	*(struct(long,*(struct(int,*(void)))))
,	O
cred_usage	int
,	O
output_cred_handle	*(*(struct))
,	O
actual_mechs	*(*(struct(long,*(struct(int,*`)))))
,	O
time_rec	*(int)
)	O
;	O
if	O
(	O
GSS_ERROR	O
(	O
maj_stat	int
)	O
)	O
{	O
free	(*(void))->(void)
(	O
*	O
output_cred_handle	*(*(struct))
)	O
;	O
*	O
output_cred_handle	*(*(struct))
=	O
GSS_C_NO_CREDENTIAL	O
;	O
return	O
maj_stat	int
;	O
}	O
return	O
GSS_S_COMPLETE	int
;	O
}	O
OM_uint32	int
gss_add_cred	(*(int),*(struct),*(struct),*(struct(int,*(void))),int,int,int,*(*(struct)),*(*(struct(long,*(struct`)))),*(int),*(int))->(int)
(	O
OM_uint32	int
*	O
minor_status	*(int)
,	O
const	O
gss_cred_id_t	*(struct)
input_cred_handle	*(struct)
,	O
const	O
gss_name_t	*(struct)
desired_name	*(struct)
,	O
const	O
gss_OID	*(struct(int,*(void)))
desired_mech	*(struct(int,*(void)))
,	O
gss_cred_usage_t	int
cred_usage	int
,	O
OM_uint32	int
initiator_time_req	int
,	O
OM_uint32	int
acceptor_time_req	int
,	O
gss_cred_id_t	*(struct)
*	O
output_cred_handle	*(*(struct))
,	O
gss_OID_set	*(struct(long,*(struct(int,*(void)))))
*	O
actual_mechs	*(*(struct(long,*(struct(int,*`)))))
,	O
OM_uint32	int
*	O
initiator_time_rec	*(int)
,	O
OM_uint32	int
*	O
acceptor_time_rec	*(int)
)	O
{	O
return	O
GSS_S_UNAVAILABLE	O
;	O
}	O
OM_uint32	int
gss_inquire_cred	(*(int),*(struct),*(*(struct)),*(int),*(int),*(*(struct(long,*(struct`)))))->(int)
(	O
OM_uint32	int
*	O
minor_status	*(int)
,	O
const	O
gss_cred_id_t	*(struct)
cred_handle	*(*(struct))
,	O
gss_name_t	*(struct)
*	O
name	*(*(struct))
,	O
OM_uint32	int
*	O
lifetime	*(int)
,	O
gss_cred_usage_t	int
*	O
cred_usage	int
,	O
gss_OID_set	*(struct(long,*(struct(int,*(void)))))
*	O
mechanisms	*(*(struct(long,*(struct(int,*`)))))
)	O
{	O
gss_cred_id_t	*(struct)
credh	*(struct(*(struct(int,*(void)))))
=	O
cred_handle	*(*(struct))
;	O
_gss_mech_api_t	*(struct(*(struct(int,*(void))),*(char),*(char),*(char),array(*(struct(int,*(void)))),*((*(int),*(struct`),*(*`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(*`),*(struct`),*(int),*(int))->(int)),*((*(int),*(struct`),*(struct`),*(*`))->(int)),*((*(int),*(struct`),*(struct`))->(int)),*((*(int),*(struct`),int,int,*(struct`),*(int),*(struct`))->(int)),*((*(int),*(struct`),*(struct`),*(struct`),*(int),*(int))->(int)),*((*(int),*(struct`),int,*(struct`),*(struct`))->(int)),*((*(int),*(struct`),*(struct`),*(struct`),*(int))->(int)),*((*(int),int,int,*(struct`),*(int),*(struct`))->(int)),*((*(int),*(struct`),int,*(struct`),int,*(*`),*(*`),*(int))->(int)),*((*(int),*(*`))->(int)),*((*(int),*(*`),*(struct`),*(struct`),*(struct`),*(*`),*(*`),*(struct`),*(int),*(int),*(*`))->(int)),*((*(int),*(*`),*(struct`))->(int)),*((*(int),*(struct`),*(int))->(int)),*((*(int),*(struct`),*(*`),*(int),*(int),*(*`))->(int)),*((*(int),*(struct`),*(struct`),*(*`),*(int),*(int),*(int))->(int))))
mech	*(struct(int,*(void)))
;	O
OM_uint32	int
maj_stat	int
;	O
if	O
(	O
cred_handle	*(*(struct))
==	O
GSS_C_NO_CREDENTIAL	O
)	O
{	O
maj_stat	int
=	O
gss_acquire_cred	(*(int),*(struct),int,*(struct(long,*(struct(int,*`)))),int,*(*(struct)),*(*(struct(long,*(struct`)))),*(int))->(int)
(	O
minor_status	*(int)
,	O
GSS_C_NO_NAME	O
,	O
GSS_C_INDEFINITE	int
,	O
GSS_C_NO_OID_SET	O
,	O
GSS_C_INITIATE	int
,	O
&	O
credh	*(struct(*(struct(int,*(void)))))
,	O
NULL	O
,	O
NULL	O
)	O
;	O
if	O
(	O
GSS_ERROR	O
(	O
maj_stat	int
)	O
)	O
return	O
maj_stat	int
;	O
}	O
mech	*(struct(int,*(void)))
=	O
_gss_find_mech	(*(struct(int,*(void))))->(*(struct(*(struct(int,*`)),*(char),*(char),*(char),array(*(struct(int,*(void)))),*((*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`,int,int,*`,*`,*`)->(int)),*((*`,*`,int,*`,int,*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`,*`)->(int)))))
(	O
credh	*(struct(*(struct(int,*(void)))))
->	O
mech	*(struct(int,*(void)))
)	O
;	O
if	O
(	O
mech	*(struct(int,*(void)))
==	O
NULL	O
)	O
{	O
if	O
(	O
minor_status	*(int)
)	O
*	O
minor_status	*(int)
=	O
0	int
;	O
return	O
GSS_S_BAD_MECH	O
;	O
}	O
maj_stat	int
=	O
mech	*(struct(int,*(void)))
->	O
inquire_cred	*((*(int),*(struct(*(struct`))),*(*(struct(long,*`,*`))),*(int),*(int),*(*(struct(long,*`))))->(int))
(	O
minor_status	*(int)
,	O
credh	*(struct(*(struct(int,*(void)))))
,	O
name	*(*(struct))
,	O
lifetime	*(int)
,	O
cred_usage	int
,	O
mechanisms	*(*(struct(long,*(struct(int,*`)))))
)	O
;	O
if	O
(	O
cred_handle	*(*(struct))
==	O
GSS_C_NO_CREDENTIAL	O
)	O
gss_release_cred	(*(int),*(*(struct)))->(int)
(	O
NULL	O
,	O
&	O
credh	*(struct(*(struct(int,*(void)))))
)	O
;	O
return	O
maj_stat	int
;	O
}	O
OM_uint32	int
gss_inquire_cred_by_mech	(*(int),*(struct),*(struct(int,*(void))),*(*(struct)),*(int),*(int),*(int))->(int)
(	O
OM_uint32	int
*	O
minor_status	*(int)
,	O
const	O
gss_cred_id_t	*(struct)
cred_handle	*(*(struct))
,	O
const	O
gss_OID	*(struct(int,*(void)))
mech_type	*(struct(int,*(void)))
,	O
gss_name_t	*(struct)
*	O
name	*(*(struct))
,	O
OM_uint32	int
*	O
initiator_lifetime	*(int)
,	O
OM_uint32	int
*	O
acceptor_lifetime	*(int)
,	O
gss_cred_usage_t	int
*	O
cred_usage	int
)	O
{	O
_gss_mech_api_t	*(struct(*(struct(int,*(void))),*(char),*(char),*(char),array(*(struct(int,*(void)))),*((*(int),*(struct`),*(*`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(*`),*(struct`),*(int),*(int))->(int)),*((*(int),*(struct`),*(struct`),*(*`))->(int)),*((*(int),*(struct`),*(struct`))->(int)),*((*(int),*(struct`),int,int,*(struct`),*(int),*(struct`))->(int)),*((*(int),*(struct`),*(struct`),*(struct`),*(int),*(int))->(int)),*((*(int),*(struct`),int,*(struct`),*(struct`))->(int)),*((*(int),*(struct`),*(struct`),*(struct`),*(int))->(int)),*((*(int),int,int,*(struct`),*(int),*(struct`))->(int)),*((*(int),*(struct`),int,*(struct`),int,*(*`),*(*`),*(int))->(int)),*((*(int),*(*`))->(int)),*((*(int),*(*`),*(struct`),*(struct`),*(struct`),*(*`),*(*`),*(struct`),*(int),*(int),*(*`))->(int)),*((*(int),*(*`),*(struct`))->(int)),*((*(int),*(struct`),*(int))->(int)),*((*(int),*(struct`),*(*`),*(int),*(int),*(*`))->(int)),*((*(int),*(struct`),*(struct`),*(*`),*(int),*(int),*(int))->(int))))
mech	*(struct(int,*(void)))
;	O
gss_cred_id_t	*(struct)
credh	*(struct(*(struct(int,*(void)))))
=	O
cred_handle	*(*(struct))
;	O
OM_uint32	int
maj_stat	int
;	O
if	O
(	O
mech_type	*(struct(int,*(void)))
==	O
GSS_C_NO_OID	O
)	O
{	O
if	O
(	O
minor_status	*(int)
)	O
*	O
minor_status	*(int)
=	O
0	int
;	O
return	O
GSS_S_BAD_MECH	O
;	O
}	O
mech	*(struct(int,*(void)))
=	O
_gss_find_mech	(*(struct(int,*(void))))->(*(struct(*(struct(int,*`)),*(char),*(char),*(char),array(*(struct(int,*(void)))),*((*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`,int,int,*`,*`,*`)->(int)),*((*`,*`,int,*`,int,*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`,*`)->(int)))))
(	O
mech_type	*(struct(int,*(void)))
)	O
;	O
if	O
(	O
mech	*(struct(int,*(void)))
==	O
NULL	O
)	O
{	O
if	O
(	O
minor_status	*(int)
)	O
*	O
minor_status	*(int)
=	O
0	int
;	O
return	O
GSS_S_BAD_MECH	O
;	O
}	O
if	O
(	O
cred_handle	*(*(struct))
==	O
GSS_C_NO_CREDENTIAL	O
)	O
{	O
maj_stat	int
=	O
gss_acquire_cred	(*(int),*(struct),int,*(struct(long,*(struct(int,*`)))),int,*(*(struct)),*(*(struct(long,*(struct`)))),*(int))->(int)
(	O
minor_status	*(int)
,	O
GSS_C_NO_NAME	O
,	O
GSS_C_INDEFINITE	int
,	O
GSS_C_NO_OID_SET	O
,	O
GSS_C_INITIATE	int
,	O
&	O
credh	*(struct(*(struct(int,*(void)))))
,	O
NULL	O
,	O
NULL	O
)	O
;	O
if	O
(	O
GSS_ERROR	O
(	O
maj_stat	int
)	O
)	O
return	O
maj_stat	int
;	O
}	O
maj_stat	int
=	O
mech	*(struct(int,*(void)))
->	O
inquire_cred_by_mech	*((*(int),*(struct(*(struct`))),*(struct(int,*(void))),*(*(struct(long,*`,*`))),*(int),*(int),*(int))->(int))
(	O
minor_status	*(int)
,	O
credh	*(struct(*(struct(int,*(void)))))
,	O
mech_type	*(struct(int,*(void)))
,	O
name	*(*(struct))
,	O
initiator_lifetime	*(int)
,	O
acceptor_lifetime	*(int)
,	O
cred_usage	int
)	O
;	O
if	O
(	O
cred_handle	*(*(struct))
==	O
GSS_C_NO_CREDENTIAL	O
)	O
gss_release_cred	(*(int),*(*(struct)))->(int)
(	O
NULL	O
,	O
&	O
credh	*(struct(*(struct(int,*(void)))))
)	O
;	O
return	O
maj_stat	int
;	O
}	O
OM_uint32	int
gss_release_cred	(*(int),*(*(struct)))->(int)
(	O
OM_uint32	int
*	O
minor_status	*(int)
,	O
gss_cred_id_t	*(struct)
*	O
cred_handle	*(*(struct))
)	O
{	O
_gss_mech_api_t	*(struct(*(struct(int,*(void))),*(char),*(char),*(char),array(*(struct(int,*(void)))),*((*(int),*(struct`),*(*`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(*`),*(struct`),*(int),*(int))->(int)),*((*(int),*(struct`),*(struct`),*(*`))->(int)),*((*(int),*(struct`),*(struct`))->(int)),*((*(int),*(struct`),int,int,*(struct`),*(int),*(struct`))->(int)),*((*(int),*(struct`),*(struct`),*(struct`),*(int),*(int))->(int)),*((*(int),*(struct`),int,*(struct`),*(struct`))->(int)),*((*(int),*(struct`),*(struct`),*(struct`),*(int))->(int)),*((*(int),int,int,*(struct`),*(int),*(struct`))->(int)),*((*(int),*(struct`),int,*(struct`),int,*(*`),*(*`),*(int))->(int)),*((*(int),*(*`))->(int)),*((*(int),*(*`),*(struct`),*(struct`),*(struct`),*(*`),*(*`),*(struct`),*(int),*(int),*(*`))->(int)),*((*(int),*(*`),*(struct`))->(int)),*((*(int),*(struct`),*(int))->(int)),*((*(int),*(struct`),*(*`),*(int),*(int),*(*`))->(int)),*((*(int),*(struct`),*(struct`),*(*`),*(int),*(int),*(int))->(int))))
mech	*(struct(int,*(void)))
;	O
OM_uint32	int
maj_stat	int
;	O
if	O
(	O
!	O
cred_handle	*(*(struct))
)	O
{	O
if	O
(	O
minor_status	*(int)
)	O
*	O
minor_status	*(int)
=	O
0	int
;	O
return	O
GSS_S_NO_CRED	O
|	O
GSS_S_CALL_INACCESSIBLE_READ	O
;	O
}	O
if	O
(	O
*	O
cred_handle	*(*(struct))
==	O
GSS_C_NO_CREDENTIAL	O
)	O
{	O
if	O
(	O
minor_status	*(int)
)	O
*	O
minor_status	*(int)
=	O
0	int
;	O
return	O
GSS_S_COMPLETE	int
;	O
}	O
mech	*(struct(int,*(void)))
=	O
_gss_find_mech	(*(struct(int,*(void))))->(*(struct(*(struct(int,*`)),*(char),*(char),*(char),array(*(struct(int,*(void)))),*((*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`,int,int,*`,*`,*`)->(int)),*((*`,*`,int,*`,int,*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`,*`)->(int)))))
(	O
(	O
*	O
cred_handle	*(*(struct))
)	O
->	O
mech	*(struct(int,*(void)))
)	O
;	O
if	O
(	O
mech	*(struct(int,*(void)))
==	O
NULL	O
)	O
{	O
if	O
(	O
minor_status	*(int)
)	O
*	O
minor_status	*(int)
=	O
0	int
;	O
return	O
GSS_S_DEFECTIVE_CREDENTIAL	O
;	O
}	O
maj_stat	int
=	O
mech	*(struct(int,*(void)))
->	O
release_cred	*((*(int),*(*(struct(*`))))->(int))
(	O
minor_status	*(int)
,	O
cred_handle	*(*(struct))
)	O
;	O
free	(*(void))->(void)
(	O
*	O
cred_handle	*(*(struct))
)	O
;	O
*	O
cred_handle	*(*(struct))
=	O
GSS_C_NO_CREDENTIAL	O
;	O
if	O
(	O
GSS_ERROR	O
(	O
maj_stat	int
)	O
)	O
return	O
maj_stat	int
;	O
return	O
GSS_S_COMPLETE	int
;	O
}	O
