void	O
addext	(*(char),*(char),char)->(void)
(	O
char	O
*	O
filename	*(char)
,	O
char	O
const	O
*	O
ext	*(char)
,	O
char	O
e	char
)	O
{	O
char	O
*	O
s	*(char)
=	O
basename	(*(char))->(*(char))
(	O
filename	*(char)
)	O
;	O
size_t	long
slen	long
=	O
strlen	(*(char))->(long)
(	O
s	*(char)
)	O
,	O
extlen	long
=	O
strlen	(*(char))->(long)
(	O
ext	*(char)
)	O
;	O
long	O
slen_max	long
=	O
-	O
1	int
;	O
if	O
(	O
slen	long
+	O
extlen	long
<=	O
_POSIX_NAME_MAX	int
&&	O
!	O
HAVE_DOS_FILE_NAMES	int
)	O
slen_max	long
=	O
_POSIX_NAME_MAX	int
;	O
else	O
if	O
(	O
s	*(char)
==	O
filename	*(char)
)	O
slen_max	long
=	O
pathconf	(*(char),int)->(long)
(	O
"."	*(char)
,	O
_PC_NAME_MAX	int
)	O
;	O
else	O
{	O
char	O
c	char
=	O
*	O
s	*(char)
;	O
*	O
s	*(char)
=	O
0	int
;	O
slen_max	long
=	O
pathconf	(*(char),int)->(long)
(	O
filename	*(char)
,	O
_PC_NAME_MAX	int
)	O
;	O
*	O
s	*(char)
=	O
c	char
;	O
}	O
if	O
(	O
slen_max	long
<	O
0	int
)	O
slen_max	long
=	O
HAVE_LONG_FILE_NAMES	int
?	O
255	int
:	O
14	int
;	O
if	O
(	O
HAVE_DOS_FILE_NAMES	int
&&	O
slen_max	long
<=	O
12	int
)	O
{	O
char	O
*	O
dot	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
s	*(char)
,	O
'.'	O
)	O
;	O
if	O
(	O
dot	*(char)
)	O
{	O
slen	long
-=	O
dot	*(char)
+	O
1	int
-	O
s	*(char)
;	O
s	*(char)
=	O
dot	*(char)
+	O
1	int
;	O
slen_max	long
=	O
3	int
;	O
}	O
else	O
slen_max	long
=	O
8	int
;	O
extlen	long
=	O
9	int
;	O
}	O
if	O
(	O
slen	long
+	O
extlen	long
<=	O
slen_max	long
)	O
strcpy	(*(char),*(char))->(*(char))
(	O
s	*(char)
+	O
slen	long
,	O
ext	*(char)
)	O
;	O
else	O
{	O
if	O
(	O
slen_max	long
<=	O
slen	long
)	O
slen	long
=	O
slen_max	long
-	O
1	int
;	O
s	*(char)
[	O
slen	long
]	O
=	O
e	char
;	O
s	*(char)
[	O
slen	long
+	O
1	int
]	O
=	O
0	int
;	O
}	O
}	O
