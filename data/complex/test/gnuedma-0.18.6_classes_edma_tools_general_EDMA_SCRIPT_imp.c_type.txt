typedef	O
struct	O
{	O
EPChar	*(char)
script_code	*(char)
;	O
OBJID	int
interpreter	int
;	O
EDMAT_BUFFER	struct(long,long,*(void))
private	struct(long,long,*(void))
;	O
}	O
DtEDMA_SCRIPT	struct(*(char),int,struct(long,long,*(void)))
;	O
ESint32	int
EDMAPROC	O
EDMA_SCRIPTset_scriptZrS32	(int,*(char))->(int)
(	O
OBJID	int
IdObj	int
,	O
EPChar	*(char)
script_name	*(char)
)	O
{	O
DtEDMA_SCRIPT	struct(*(char),int,struct(long,long,*(void)))
*	O
m	*(struct(*(char),int,struct(long,long,*(void))))
;	O
m	*(struct(*(char),int,struct(long,long,*(void))))
=	O
(	O
DtEDMA_SCRIPT	struct(*(char),int,struct(long,long,*(void)))
*	O
)	O
edma_get_data_ref	(int)->(*(void))
(	O
IdObj	int
)	O
;	O
if	O
(	O
strstr	(*(char),*(char))->(*(char))
(	O
script_name	*(char)
,	O
".py"	*(char)
)	O
)	O
{	O
edma_met3	(int,*(char))->(int)
(	O
IdObj	int
,	O
"ANNA_PYTHON_INTERP@INTERPRETER<Initialize"	*(char)
)	O
;	O
edma_met3	(int,*(char))->(int)
(	O
IdObj	int
,	O
"Run_Script"	*(char)
,	O
script_name	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
EDMA_SCRIPTupdate_objectOOrS32	(int,int,int)->(int)
(	O
OBJID	int
IdObj	int
,	O
OBJID	int
newid	int
,	O
OBJID	int
oldid	int
)	O
{	O
DtEDMA_SCRIPT	struct(*(char),int,struct(long,long,*(void)))
*	O
m	*(struct(*(char),int,struct(long,long,*(void))))
;	O
EChar	char
cmd	array(char)
[	O
1024	int
]	O
;	O
m	*(struct(*(char),int,struct(long,long,*(void))))
=	O
(	O
DtEDMA_SCRIPT	struct(*(char),int,struct(long,long,*(void)))
*	O
)	O
edma_get_data_ref	(int)->(*(void))
(	O
IdObj	int
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
cmd	array(char)
,	O
"update (%ld,%ld);"	*(char)
,	O
newid	int
,	O
oldid	int
)	O
;	O
edma_met3	(int,*(char))->(int)
(	O
IdObj	int
,	O
"Run_SimpleString"	*(char)
,	O
cmd	array(char)
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
EDMA_SCRIPTrunrS32	(int)->(int)
(	O
OBJID	int
IdObj	int
)	O
{	O
DtEDMA_SCRIPT	struct(*(char),int,struct(long,long,*(void)))
*	O
m	*(struct(*(char),int,struct(long,long,*(void))))
;	O
m	*(struct(*(char),int,struct(long,long,*(void))))
=	O
(	O
DtEDMA_SCRIPT	struct(*(char),int,struct(long,long,*(void)))
*	O
)	O
edma_get_data_ref	(int)->(*(void))
(	O
IdObj	int
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
EDMA_SCRIPTborn	(int)->(int)
(	O
OBJID	int
IdObj	int
)	O
{	O
DtEDMA_SCRIPT	struct(*(char),int,struct(long,long,*(void)))
*	O
m	*(struct(*(char),int,struct(long,long,*(void))))
;	O
m	*(struct(*(char),int,struct(long,long,*(void))))
=	O
(	O
DtEDMA_SCRIPT	struct(*(char),int,struct(long,long,*(void)))
*	O
)	O
edma_get_data_ref	(int)->(*(void))
(	O
IdObj	int
)	O
;	O
m	*(struct(*(char),int,struct(long,long,*(void))))
->	O
script_code	*(char)
=	O
NULL	O
;	O
m	*(struct(*(char),int,struct(long,long,*(void))))
->	O
interpreter	int
=	O
-	O
1	int
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
EDMA_SCRIPTrip	(int)->(int)
(	O
OBJID	int
IdObj	int
)	O
{	O
DtEDMA_SCRIPT	struct(*(char),int,struct(long,long,*(void)))
*	O
m	*(struct(*(char),int,struct(long,long,*(void))))
;	O
m	*(struct(*(char),int,struct(long,long,*(void))))
=	O
(	O
DtEDMA_SCRIPT	struct(*(char),int,struct(long,long,*(void)))
*	O
)	O
edma_get_data_ref	(int)->(*(void))
(	O
IdObj	int
)	O
;	O
edma_printf_obj	(int,*(char))->(long)
(	O
IdObj	int
,	O
"Ddestroying Object..."	*(char)
)	O
;	O
edma_met3	(int,*(char))->(int)
(	O
IdObj	int
,	O
"Finalize"	*(char)
)	O
;	O
if	O
(	O
m	*(struct(*(char),int,struct(long,long,*(void))))
->	O
interpreter	int
!=	O
-	O
1	int
)	O
edma_free_obj	(int)->(long)
(	O
m	*(struct(*(char),int,struct(long,long,*(void))))
->	O
interpreter	int
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMA_SCRIPT_class_factory	()->(int)
(	O
)	O
{	O
CLASSID	int
cid	int
;	O
cid	int
=	O
edma_idf_get_free_class_id	(int)->(int)
(	O
EDMA_LOCAL_CLASS	int
)	O
;	O
edma_idf_set_class_name	(int,*(char))->(int)
(	O
cid	int
,	O
"EDMA_SCRIPT"	*(char)
)	O
;	O
edma_idf_set_class_namespace	(int,*(char))->(int)
(	O
cid	int
,	O
"system"	*(char)
)	O
;	O
edma_idf_set_class_version	(int,int,int)->(int)
(	O
cid	int
,	O
0	int
,	O
0	int
)	O
;	O
edma_add_local_class_property	(int,*(char),long,int,long)->(int)
(	O
cid	int
,	O
"script_code"	*(char)
,	O
DT_EZSTRING	int
,	O
E_L	int
,	O
0	int
)	O
;	O
edma_add_local_class_property	(int,*(char),long,int,long)->(int)
(	O
cid	int
,	O
"interpreter"	*(char)
,	O
DT_EOBJECT	int
,	O
E_L	int
,	O
0	int
)	O
;	O
edma_add_local_class_property	(int,*(char),long,int,long)->(int)
(	O
cid	int
,	O
"private"	*(char)
,	O
DT_EBUFFER	int
,	O
E_L	int
,	O
0	int
)	O
;	O
edma_add_local_class_method	(int,*(char),*(char),*(()->(void)),int,int,int)->(int)
(	O
cid	int
,	O
"set_script"	*(char)
,	O
"ZrS32"	*(char)
,	O
(	O
PPROC	*(()->(void))
)	O
EDMA_SCRIPTset_scriptZrS32	(int,*(char))->(int)
,	O
1	int
,	O
0	int
,	O
0	int
)	O
;	O
edma_add_local_class_method	(int,*(char),*(char),*(()->(void)),int,int,int)->(int)
(	O
cid	int
,	O
"update_object"	*(char)
,	O
"OOrS32"	*(char)
,	O
(	O
PPROC	*(()->(void))
)	O
EDMA_SCRIPTupdate_objectOOrS32	(int,int,int)->(int)
,	O
1	int
,	O
0	int
,	O
0	int
)	O
;	O
edma_add_local_class_method	(int,*(char),*(char),*(()->(void)),int,int,int)->(int)
(	O
cid	int
,	O
"run"	*(char)
,	O
"rS32"	*(char)
,	O
(	O
PPROC	*(()->(void))
)	O
EDMA_SCRIPTrunrS32	(int)->(int)
,	O
1	int
,	O
0	int
,	O
0	int
)	O
;	O
edma_add_local_class_method	(int,*(char),*(char),*(()->(void)),int,int,int)->(int)
(	O
cid	int
,	O
"born"	*(char)
,	O
""	*(char)
,	O
(	O
PPROC	*(()->(void))
)	O
EDMA_SCRIPTborn	(int)->(int)
,	O
0	int
,	O
0	int
,	O
0	int
)	O
;	O
edma_add_local_class_method	(int,*(char),*(char),*(()->(void)),int,int,int)->(int)
(	O
cid	int
,	O
"rip"	*(char)
,	O
""	*(char)
,	O
(	O
PPROC	*(()->(void))
)	O
EDMA_SCRIPTrip	(int)->(int)
,	O
0	int
,	O
0	int
,	O
0	int
)	O
;	O
edma_idf_set_class_id	(int)->(int)
(	O
cid	int
)	O
;	O
return	O
0	int
;	O
}	O
