void	O
netfs_node_norefs	(*(struct))->(void)
(	O
struct	O
node	*(struct)
*	O
node	*(struct)
)	O
{	O
if	O
(	O
node	*(struct)
->	O
nn	O
->	O
name	*(char)
)	O
node	*(struct)
->	O
nn	O
->	O
name	*(char)
->	O
node	*(struct)
=	O
0	int
;	O
if	O
(	O
node	*(struct)
->	O
nn	O
->	O
trans_len	long
>	O
0	int
)	O
free	()->(int)
(	O
node	*(struct)
->	O
nn	O
->	O
trans	*(char)
)	O
;	O
free	()->(int)
(	O
node	*(struct)
->	O
nn	O
)	O
;	O
free	()->(int)
(	O
node	*(struct)
)	O
;	O
}	O
error_t	O
netfs_attempt_create_file	(*(struct),*(struct),*(char),int,*(*(struct)))->(int)
(	O
struct	O
iouser	O
*	O
user	*(struct)
,	O
struct	O
node	*(struct)
*	O
dir	*(struct)
,	O
char	O
*	O
name	*(char)
,	O
mode_t	int
mode	int
,	O
struct	O
node	*(struct)
*	O
*	O
node	*(struct)
)	O
{	O
*	O
node	*(struct)
=	O
0	int
;	O
pthread_mutex_unlock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
dir	*(struct)
->	O
lock	O
)	O
;	O
return	O
EOPNOTSUPP	O
;	O
}	O
error_t	O
netfs_check_open_permissions	(*(struct),*(struct),int,int)->(int)
(	O
struct	O
iouser	O
*	O
user	*(struct)
,	O
struct	O
node	*(struct)
*	O
node	*(struct)
,	O
int	O
flags	int
,	O
int	O
newnode	int
)	O
{	O
error_t	O
err	O
=	O
0	int
;	O
if	O
(	O
flags	int
&	O
O_READ	O
)	O
err	O
=	O
fshelp_access	()->(int)
(	O
&	O
node	*(struct)
->	O
nn_stat	O
,	O
S_IREAD	O
,	O
user	*(struct)
)	O
;	O
if	O
(	O
!	O
err	O
&&	O
(	O
flags	int
&	O
O_WRITE	O
)	O
)	O
err	O
=	O
fshelp_access	()->(int)
(	O
&	O
node	*(struct)
->	O
nn_stat	O
,	O
S_IWRITE	O
,	O
user	*(struct)
)	O
;	O
if	O
(	O
!	O
err	O
&&	O
(	O
flags	int
&	O
O_EXEC	O
)	O
)	O
err	O
=	O
fshelp_access	()->(int)
(	O
&	O
node	*(struct)
->	O
nn_stat	O
,	O
S_IEXEC	O
,	O
user	*(struct)
)	O
;	O
return	O
err	O
;	O
}	O
error_t	O
netfs_attempt_utimes	(*(struct),*(struct),*(struct(long,long)),*(struct(long,long)))->(int)
(	O
struct	O
iouser	O
*	O
cred	*(struct)
,	O
struct	O
node	*(struct)
*	O
node	*(struct)
,	O
struct	O
timespec	struct(long,long)
*	O
atime	*(struct(long,long))
,	O
struct	O
timespec	struct(long,long)
*	O
mtime	*(struct(long,long))
)	O
{	O
error_t	O
err	O
=	O
fshelp_isowner	O
(	O
&	O
node	*(struct)
->	O
nn_stat	O
,	O
cred	*(struct)
)	O
;	O
int	O
flags	int
=	O
TOUCH_CTIME	O
;	O
if	O
(	O
!	O
err	O
)	O
{	O
if	O
(	O
mtime	*(struct(long,long))
)	O
node	*(struct)
->	O
nn_stat	O
.	O
st_mtim	struct(long,long)
=	O
*	O
mtime	*(struct(long,long))
;	O
else	O
flags	int
|=	O
TOUCH_MTIME	O
;	O
if	O
(	O
atime	*(struct(long,long))
)	O
node	*(struct)
->	O
nn_stat	O
.	O
st_atim	struct(long,long)
=	O
*	O
atime	*(struct(long,long))
;	O
else	O
flags	int
|=	O
TOUCH_ATIME	O
;	O
fshelp_touch	()->(int)
(	O
&	O
node	*(struct)
->	O
nn_stat	O
,	O
flags	int
,	O
usermux_maptime	*(struct)
)	O
;	O
}	O
return	O
err	O
;	O
}	O
error_t	O
netfs_report_access	(*(struct),*(struct),*(int))->(int)
(	O
struct	O
iouser	O
*	O
cred	*(struct)
,	O
struct	O
node	*(struct)
*	O
node	*(struct)
,	O
int	O
*	O
types	*(int)
)	O
{	O
*	O
types	*(int)
=	O
0	int
;	O
if	O
(	O
fshelp_access	()->(int)
(	O
&	O
node	*(struct)
->	O
nn_stat	O
,	O
S_IREAD	O
,	O
cred	*(struct)
)	O
==	O
0	int
)	O
*	O
types	*(int)
|=	O
O_READ	O
;	O
if	O
(	O
fshelp_access	()->(int)
(	O
&	O
node	*(struct)
->	O
nn_stat	O
,	O
S_IWRITE	O
,	O
cred	*(struct)
)	O
==	O
0	int
)	O
*	O
types	*(int)
|=	O
O_WRITE	O
;	O
if	O
(	O
fshelp_access	()->(int)
(	O
&	O
node	*(struct)
->	O
nn_stat	O
,	O
S_IEXEC	O
,	O
cred	*(struct)
)	O
==	O
0	int
)	O
*	O
types	*(int)
|=	O
O_EXEC	O
;	O
return	O
0	int
;	O
}	O
error_t	O
netfs_validate_stat	(*(struct),*(struct))->(int)
(	O
struct	O
node	*(struct)
*	O
node	*(struct)
,	O
struct	O
iouser	O
*	O
cred	*(struct)
)	O
{	O
return	O
0	int
;	O
}	O
error_t	O
netfs_attempt_sync	(*(struct),*(struct),int)->(int)
(	O
struct	O
iouser	O
*	O
cred	*(struct)
,	O
struct	O
node	*(struct)
*	O
node	*(struct)
,	O
int	O
wait	int
)	O
{	O
return	O
0	int
;	O
}	O
