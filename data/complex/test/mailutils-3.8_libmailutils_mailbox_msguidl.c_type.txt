int	O
mu_message_get_uidl	(*(struct),*(char),long,*(long))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
char	O
*	O
buffer	*(char)
,	O
size_t	long
buflen	long
,	O
size_t	long
*	O
pwriten	*(long)
)	O
{	O
mu_header_t	*(struct)
header	*(struct)
=	O
NULL	O
;	O
size_t	long
n	int
=	O
0	int
;	O
int	O
status	int
;	O
if	O
(	O
msg	*(struct)
==	O
NULL	O
||	O
buffer	*(char)
==	O
NULL	O
||	O
buflen	long
==	O
0	int
)	O
return	O
EINVAL	int
;	O
buffer	*(char)
[	O
0	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
msg	*(struct)
->	O
_get_uidl	*((*(struct),*(char),long,*(long))->(int))
)	O
{	O
status	int
=	O
msg	*(struct)
->	O
_get_uidl	*((*(struct),*(char),long,*(long))->(int))
(	O
msg	*(struct)
,	O
buffer	*(char)
,	O
buflen	long
,	O
pwriten	*(long)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
return	O
status	int
;	O
}	O
mu_message_get_header	(*(struct),*(*(struct)))->(int)
(	O
msg	*(struct)
,	O
&	O
header	*(struct)
)	O
;	O
status	int
=	O
mu_header_get_value_unfold	O
(	O
header	*(struct)
,	O
"X-UIDL"	*(char)
,	O
buffer	*(char)
,	O
buflen	long
,	O
&	O
n	int
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
||	O
n	int
==	O
0	int
)	O
{	O
size_t	long
uid	long
=	O
0	int
;	O
struct	O
mu_md5_ctx	struct(int,int,int,int,array(int),int,array(int))
md5context	struct(int,int,int,int,array(int),int,array(int))
;	O
mu_stream_t	*(struct)
stream	*(struct)
=	O
NULL	O
;	O
char	O
buf	*(struct)
[	O
1024	int
]	O
;	O
unsigned	O
char	O
md5digest	array(char)
[	O
16	int
]	O
;	O
char	O
*	O
tmp	*(char)
;	O
n	int
=	O
0	int
;	O
mu_message_get_uid	(*(struct),*(long))->(int)
(	O
msg	*(struct)
,	O
&	O
uid	long
)	O
;	O
mu_message_get_streamref	(*(struct),*(*(struct)))->(int)
(	O
msg	*(struct)
,	O
&	O
stream	*(struct)
)	O
;	O
mu_md5_init_ctx	(*(struct(int,int,int,int,array(int),int,array(int))))->(void)
(	O
&	O
md5context	struct(int,int,int,int,array(int),int,array(int))
)	O
;	O
status	int
=	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
stream	*(struct)
,	O
0	int
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
while	O
(	O
mu_stream_read	(*(struct),*(void),long,*(long))->(int)
(	O
stream	*(struct)
,	O
buf	*(struct)
,	O
sizeof	O
(	O
buf	*(struct)
)	O
,	O
&	O
n	int
)	O
==	O
0	int
&&	O
n	int
>	O
0	int
)	O
mu_md5_process_bytes	(*(void),long,*(struct(int,int,int,int,array(int),int,array(int))))->(void)
(	O
buf	*(struct)
,	O
n	int
,	O
&	O
md5context	struct(int,int,int,int,array(int),int,array(int))
)	O
;	O
mu_md5_finish_ctx	(*(struct(int,int,int,int,array(int),int,array(int))),*(void))->(*(void))
(	O
&	O
md5context	struct(int,int,int,int,array(int),int,array(int))
,	O
md5digest	array(char)
)	O
;	O
tmp	*(char)
=	O
buf	*(struct)
;	O
for	O
(	O
n	int
=	O
0	int
;	O
n	int
<	O
16	int
;	O
n	int
++	O
,	O
tmp	*(char)
+=	O
2	int
)	O
sprintf	(*(char),*(char))->(int)
(	O
tmp	*(char)
,	O
"%02x"	*(char)
,	O
md5digest	array(char)
[	O
n	int
]	O
)	O
;	O
*	O
tmp	*(char)
=	O
'\0'	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
buf	*(struct)
+	O
32	int
,	O
70	int
,	O
".%lu.%lu"	*(char)
,	O
(	O
unsigned	O
long	O
)	O
time	struct(long,long)
(	O
NULL	O
)	O
,	O
(	O
unsigned	O
long	O
)	O
uid	long
)	O
;	O
mu_header_set_value	(*(struct),*(char),*(char),int)->(int)
(	O
header	*(struct)
,	O
"X-UIDL"	*(char)
,	O
buf	*(struct)
,	O
1	int
)	O
;	O
buflen	long
--	O
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
buffer	*(char)
,	O
buf	*(struct)
,	O
buflen	long
)	O
[	O
buflen	long
]	O
=	O
'\0'	O
;	O
}	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
stream	*(struct)
)	O
;	O
}	O
return	O
status	int
;	O
}	O
int	O
mu_message_set_uidl	(*(struct),*((*(struct),*(char),long,*(long))->(int)),*(void))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
int	O
(	O
*	O
_get_uidl	*((*(struct),*(char),long,*(long))->(int))
)	O
(	O
mu_message_t	*(struct)
,	O
char	O
*	O
,	O
size_t	long
,	O
size_t	long
*	O
)	O
,	O
void	O
*	O
owner	*(void)
)	O
{	O
if	O
(	O
msg	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
msg	*(struct)
->	O
owner	*(void)
!=	O
owner	*(void)
)	O
return	O
EACCES	int
;	O
msg	*(struct)
->	O
_get_uidl	*((*(struct),*(char),long,*(long))->(int))
=	O
_get_uidl	*((*(struct),*(char),long,*(long))->(int))
;	O
return	O
0	int
;	O
}	O
