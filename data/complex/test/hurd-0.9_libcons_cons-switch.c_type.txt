error_t	int
cons_switch	(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)),int,int,*(*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))->(int)
(	O
vcons_t	*(struct)
vcons	*(struct)
,	O
int	O
id	int
,	O
int	O
delta	int
,	O
vcons_t	*(struct)
*	O
r_vcons	*(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)))
)	O
{	O
error_t	int
err	int
=	O
0	int
;	O
cons_t	*(struct)
cons	*(struct)
=	O
vcons	*(struct)
->	O
cons	*(struct)
;	O
vcons_list_t	*(struct)
vcons_entry	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))
=	O
NULL	O
;	O
if	O
(	O
!	O
id	int
&&	O
!	O
delta	int
)	O
return	O
0	int
;	O
pthread_mutex_lock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
cons	*(struct)
->	O
lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
if	O
(	O
id	int
)	O
{	O
vcons_entry	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))
=	O
cons	*(struct)
->	O
vcons_list	struct(*(struct),*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct))),*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct))),int,*(struct))
;	O
while	O
(	O
vcons_entry	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))
&&	O
vcons_entry	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))
->	O
id	int
!=	O
id	int
)	O
vcons_entry	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))
=	O
vcons_entry	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))
->	O
next	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct)))
;	O
}	O
else	O
if	O
(	O
delta	int
>	O
0	int
)	O
{	O
vcons_entry	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))
=	O
vcons	*(struct)
->	O
vcons_entry	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))
;	O
while	O
(	O
delta	int
--	O
>	O
0	int
)	O
{	O
vcons_entry	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))
=	O
vcons_entry	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))
->	O
next	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct)))
;	O
if	O
(	O
!	O
vcons_entry	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))
)	O
vcons_entry	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))
=	O
cons	*(struct)
->	O
vcons_list	struct(*(struct),*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct))),*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct))),int,*(struct))
;	O
}	O
}	O
else	O
{	O
assert	O
(	O
delta	int
<	O
0	int
)	O
;	O
vcons_entry	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))
=	O
vcons	*(struct)
->	O
vcons_entry	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))
;	O
while	O
(	O
delta	int
++	O
<	O
0	int
)	O
{	O
vcons_entry	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))
=	O
vcons_entry	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))
->	O
prev	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct)))
;	O
if	O
(	O
!	O
vcons_entry	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))
)	O
vcons_entry	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))
=	O
cons	*(struct)
->	O
vcons_last	*(struct(*(struct(union(struct`,array(char),long),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int)),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))
;	O
}	O
}	O
if	O
(	O
!	O
vcons_entry	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))
)	O
{	O
pthread_mutex_unlock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
cons	*(struct)
->	O
lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
return	O
ESRCH	int
;	O
}	O
if	O
(	O
vcons_entry	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))
->	O
vcons	*(struct)
)	O
{	O
*	O
r_vcons	*(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)))
=	O
vcons_entry	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))
->	O
vcons	*(struct)
;	O
pthread_mutex_lock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
vcons_entry	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))
->	O
vcons	*(struct)
->	O
lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
}	O
else	O
{	O
err	int
=	O
cons_vcons_open	(*(struct(union(struct(int,int,int,int,int,short,short,struct`),array(char),long),*(struct(*`,*`,*`,int,*`)),*(struct(*`,*`,*`,int,*`)),*(struct),*(struct),*(struct),int,int)),*(struct(*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),*(struct(*`,*`,*`,int,*`)),int,*(struct(struct`,*`,*`,int,union`,int,*`,long,struct`,int)))),*(*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))->(int)
(	O
cons	*(struct)
,	O
vcons_entry	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))
,	O
r_vcons	*(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)))
)	O
;	O
if	O
(	O
!	O
err	int
)	O
vcons_entry	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`))),int,*(struct(struct(struct`,*`),*(struct`),*(struct`),int,union(struct`,array(char),long),int,*(struct`),long,struct(int,struct`,struct`,struct`,struct`),int))))
->	O
vcons	*(struct)
=	O
*	O
r_vcons	*(*(struct(struct(struct,*(struct`)),*(struct(union`,*`,*`,*`,*`,*`,int,int)),*(struct(*`,*`,*`,int,*`)),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long),int,*(struct),long,struct(int,struct(int,int,int),struct(int,int,int,int,int,*`),struct(int,int),struct(int,int,*`)),int)))
;	O
}	O
pthread_mutex_unlock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
cons	*(struct)
->	O
lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
return	O
err	int
;	O
}	O
