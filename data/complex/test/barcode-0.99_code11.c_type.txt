static	O
char	O
alphabet	array(char)
[	O
]	O
=	O
"0123456789-"	*(char)
;	O
static	O
char	O
*	O
codeset	array(*(char))
[	O
]	O
=	O
{	O
"111121"	*(char)
,	O
"211121"	*(char)
,	O
"121121"	*(char)
,	O
"221111"	*(char)
,	O
"112121"	*(char)
,	O
"212111"	*(char)
,	O
"122111"	*(char)
,	O
"111221"	*(char)
,	O
"211211"	*(char)
,	O
"211111"	*(char)
,	O
"112111"	*(char)
,	O
"112211"	*(char)
}	O
;	O
int	O
Barcode_11_verify	(*(char))->(int)
(	O
unsigned	O
char	O
*	O
text	*(char)
)	O
{	O
int	O
i	int
;	O
char	O
*	O
chr	*(char)
=	O
NULL	O
;	O
if	O
(	O
text	*(char)
[	O
0	int
]	O
==	O
'\0'	O
)	O
return	O
-	O
1	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
text	*(char)
[	O
i	int
]	O
;	O
i	int
++	O
)	O
if	O
(	O
(	O
chr	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
alphabet	array(char)
,	O
text	*(char)
[	O
i	int
]	O
)	O
)	O
==	O
NULL	O
)	O
return	O
-	O
1	int
;	O
return	O
0	int
;	O
}	O
int	O
Barcode_11_encode	(*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int)))->(int)
(	O
struct	O
Barcode_Item	struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int)
*	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
)	O
{	O
static	O
char	O
*	O
text	*(char)
;	O
static	O
char	O
*	O
partial	*(char)
;	O
static	O
char	O
*	O
textinfo	*(char)
;	O
char	O
*	O
c	*(char)
=	O
NULL	O
,	O
*	O
textptr	*(char)
=	O
NULL	O
;	O
int	O
i	int
,	O
code	int
,	O
textpos	int
,	O
len	int
=	O
0	int
;	O
int	O
weight	int
=	O
0	int
;	O
int	O
c_checksum	int
=	O
0	int
,	O
k_checksum	int
=	O
0	int
;	O
if	O
(	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
->	O
partial	*(char)
)	O
free	(*(void))->(void)
(	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
->	O
partial	*(char)
)	O
;	O
if	O
(	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
->	O
textinfo	*(char)
)	O
free	(*(void))->(void)
(	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
->	O
textinfo	*(char)
)	O
;	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
->	O
partial	*(char)
=	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
->	O
textinfo	*(char)
=	O
NULL	O
;	O
if	O
(	O
(	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
->	O
encoding	*(char)
==	O
NULL	O
)	O
)	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
->	O
encoding	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
"code 11"	*(char)
)	O
;	O
if	O
(	O
(	O
text	*(char)
=	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
->	O
ascii	*(char)
)	O
==	O
NULL	O
)	O
{	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
->	O
error	int
=	O
EINVAL	int
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
(	O
len	int
=	O
strlen	(*(char))->(long)
(	O
text	*(char)
)	O
)	O
==	O
0	int
)	O
{	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
->	O
error	int
=	O
EINVAL	int
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
(	O
partial	*(char)
=	O
(	O
char	O
*	O
)	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
(	O
len	int
>=	O
10	int
)	O
?	O
(	O
(	O
len	int
+	O
4	int
)	O
*	O
7	int
)	O
+	O
1	int
:	O
(	O
(	O
len	int
+	O
3	int
)	O
*	O
7	int
)	O
+	O
1	int
)	O
)	O
==	O
NULL	O
)	O
{	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
->	O
error	int
=	O
errno	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
(	O
textinfo	*(char)
=	O
(	O
char	O
*	O
)	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
10	int
*	O
(	O
len	int
+	O
2	int
)	O
)	O
)	O
==	O
NULL	O
)	O
{	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
->	O
error	int
=	O
errno	O
;	O
free	(*(void))->(void)
(	O
partial	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
strcpy	(*(char),*(char))->(*(char))
(	O
partial	*(char)
,	O
"0"	*(char)
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
partial	*(char)
,	O
codeset	array(*(char))
[	O
START_STOP	int
]	O
)	O
;	O
textptr	*(char)
=	O
textinfo	*(char)
;	O
textpos	int
=	O
7	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
text	*(char)
[	O
i	int
]	O
;	O
i	int
++	O
)	O
{	O
if	O
(	O
(	O
c	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
alphabet	array(char)
,	O
text	*(char)
[	O
i	int
]	O
)	O
)	O
==	O
NULL	O
)	O
{	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
->	O
error	int
=	O
EINVAL	int
;	O
free	(*(void))->(void)
(	O
partial	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
textinfo	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
code	int
=	O
c	*(char)
-	O
alphabet	array(char)
;	O
strcat	(*(char),*(char))->(*(char))
(	O
partial	*(char)
,	O
codeset	array(*(char))
[	O
code	int
]	O
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
textptr	*(char)
,	O
"%i:7:%c "	*(char)
,	O
textpos	int
,	O
text	*(char)
[	O
i	int
]	O
)	O
;	O
textpos	int
+=	O
7	int
;	O
textptr	*(char)
+=	O
strlen	(*(char))->(long)
(	O
textptr	*(char)
)	O
;	O
}	O
if	O
(	O
(	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
->	O
flags	int
&	O
BARCODE_NO_CHECKSUM	int
)	O
==	O
0	int
)	O
{	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<=	O
len	int
;	O
i	int
++	O
)	O
{	O
weight	int
=	O
(	O
(	O
i	int
-	O
1	int
)	O
%	O
10	int
)	O
+	O
1	int
;	O
if	O
(	O
text	*(char)
[	O
len	int
-	O
i	int
]	O
==	O
HYPHEN	int
)	O
c_checksum	int
+=	O
(	O
10	int
*	O
weight	int
)	O
;	O
else	O
c_checksum	int
+=	O
(	O
(	O
text	*(char)
[	O
len	int
-	O
i	int
]	O
-	O
48	int
)	O
*	O
weight	int
)	O
;	O
}	O
strcat	(*(char),*(char))->(*(char))
(	O
partial	*(char)
,	O
codeset	array(*(char))
[	O
c_checksum	int
%	O
11	int
]	O
)	O
;	O
if	O
(	O
len	int
>=	O
10	int
)	O
{	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<=	O
len	int
;	O
i	int
++	O
)	O
{	O
weight	int
=	O
(	O
(	O
i	int
-	O
1	int
)	O
%	O
9	int
)	O
+	O
(	O
i	int
<	O
9	int
?	O
2	int
:	O
1	int
)	O
;	O
if	O
(	O
text	*(char)
[	O
len	int
-	O
i	int
]	O
==	O
HYPHEN	int
)	O
k_checksum	int
+=	O
(	O
10	int
*	O
weight	int
)	O
;	O
else	O
k_checksum	int
+=	O
(	O
(	O
text	*(char)
[	O
len	int
-	O
i	int
]	O
-	O
48	int
)	O
*	O
weight	int
)	O
;	O
}	O
k_checksum	int
+=	O
(	O
c_checksum	int
%	O
11	int
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
partial	*(char)
,	O
codeset	array(*(char))
[	O
k_checksum	int
%	O
9	int
]	O
)	O
;	O
}	O
}	O
strcat	(*(char),*(char))->(*(char))
(	O
partial	*(char)
,	O
codeset	array(*(char))
[	O
START_STOP	int
]	O
)	O
;	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
->	O
partial	*(char)
=	O
partial	*(char)
;	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
->	O
textinfo	*(char)
=	O
textinfo	*(char)
;	O
return	O
0	int
;	O
}	O
