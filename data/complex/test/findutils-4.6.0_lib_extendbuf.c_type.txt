static	O
size_t	long
decide_size	(long,long)->(long)
(	O
size_t	long
current	long
,	O
size_t	long
wanted	long
)	O
{	O
size_t	long
newsize	long
;	O
if	O
(	O
0	int
==	O
current	long
)	O
newsize	long
=	O
SIZE_DEFAULT	int
;	O
else	O
newsize	long
=	O
current	long
;	O
while	O
(	O
newsize	long
<	O
wanted	long
)	O
{	O
if	O
(	O
2	int
*	O
newsize	long
<	O
newsize	long
)	O
return	O
wanted	long
;	O
newsize	long
*=	O
2	int
;	O
}	O
return	O
newsize	long
;	O
}	O
void	O
*	O
extendbuf	(*(void),long,*(long))->(*(void))
(	O
void	O
*	O
existing	*(void)
,	O
size_t	long
wanted	long
,	O
size_t	long
*	O
allocated	*(long)
)	O
{	O
int	O
saved_errno	int
;	O
size_t	long
newsize	long
;	O
void	O
*	O
result	*(void)
;	O
saved_errno	int
=	O
errno	O
;	O
assert	O
(	O
wanted	long
>	O
0u	int
)	O
;	O
newsize	long
=	O
decide_size	(long,long)->(long)
(	O
*	O
allocated	*(long)
,	O
wanted	long
)	O
;	O
if	O
(	O
(	O
*	O
allocated	*(long)
)	O
==	O
0	int
)	O
{	O
assert	O
(	O
NULL	O
==	O
existing	*(void)
)	O
;	O
(	O
*	O
allocated	*(long)
)	O
=	O
newsize	long
;	O
result	*(void)
=	O
malloc	(long)->(*(void))
(	O
newsize	long
)	O
;	O
}	O
else	O
{	O
if	O
(	O
newsize	long
!=	O
(	O
*	O
allocated	*(long)
)	O
)	O
{	O
(	O
*	O
allocated	*(long)
)	O
=	O
newsize	long
;	O
result	*(void)
=	O
realloc	(*(void),long)->(*(void))
(	O
existing	*(void)
,	O
newsize	long
)	O
;	O
if	O
(	O
NULL	O
==	O
result	*(void)
)	O
{	O
saved_errno	int
=	O
errno	O
;	O
}	O
}	O
else	O
{	O
result	*(void)
=	O
existing	*(void)
;	O
}	O
}	O
if	O
(	O
result	*(void)
)	O
{	O
errno	O
=	O
saved_errno	int
;	O
}	O
return	O
result	*(void)
;	O
}	O
void	O
*	O
xextendbuf	(*(void),long,*(long))->(*(void))
(	O
void	O
*	O
existing	*(void)
,	O
size_t	long
wanted	long
,	O
size_t	long
*	O
allocated	*(long)
)	O
{	O
void	O
*	O
p	*(void)
=	O
extendbuf	(*(void),long,*(long))->(*(void))
(	O
existing	*(void)
,	O
wanted	long
,	O
allocated	*(long)
)	O
;	O
if	O
(	O
NULL	O
==	O
p	*(void)
)	O
{	O
free	(*(void))->(void)
(	O
existing	*(void)
)	O
;	O
xalloc_die	()->(void)
(	O
)	O
;	O
}	O
return	O
p	*(void)
;	O
}	O
