char	O
*	O
base_name	*(char)
=	O
RUSH_DB	O
;	O
struct	O
rush_wtmp	struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))
*	O
wtmp	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
=	O
NULL	O
;	O
int	O
display_header	O
=	O
1	int
;	O
char	O
*	O
format	O
;	O
void	O
xalloc_die	()->(void)
(	O
)	O
{	O
error	O
(	O
1	int
,	O
0	int
,	O
_	O
(	O
"not enough memory"	*(char)
)	O
)	O
;	O
abort	()->(void)
(	O
)	O
;	O
}	O
char	O
*	O
default_format	O
=	O
"(user 10 Login) "	*(char)
"(rule 8 Rule) "	*(char)
"(start-time 0 Start) "	*(char)
"(duration 10 Time) "	*(char)
"(pid 10 PID) "	*(char)
"(command 28 Command)"	*(char)
;	O
int	O
main	O
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
int	O
status	int
;	O
rushdb_format_t	*(struct)
form	*(struct)
;	O
rush_set_program_name	(*(char))->(void)
(	O
argv	*(*(char))
[	O
0	int
]	O
)	O
;	O
rush_i18n_init	()->(void)
(	O
)	O
;	O
format	O
=	O
getenv	(*(char))->(*(char))
(	O
"RUSHWHO_FORMAT"	*(char)
)	O
;	O
if	O
(	O
!	O
format	O
)	O
format	O
=	O
default_format	O
;	O
get_options	O
(	O
argc	int
,	O
argv	*(*(char))
)	O
;	O
argc	int
-=	O
optind	int
;	O
argv	*(*(char))
+=	O
optind	int
;	O
if	O
(	O
argc	int
)	O
error	O
(	O
1	int
,	O
0	int
,	O
_	O
(	O
"extra arguments"	*(char)
)	O
)	O
;	O
if	O
(	O
format	O
[	O
0	int
]	O
==	O
'@'	O
)	O
format	O
=	O
rush_read_format	(*(char))->(*(char))
(	O
format	O
+	O
1	int
)	O
;	O
form	*(struct)
=	O
rushdb_compile_format	(*(char))->(*(struct))
(	O
format	O
)	O
;	O
if	O
(	O
!	O
form	*(struct)
)	O
error	O
(	O
1	int
,	O
0	int
,	O
_	O
(	O
"invalid format: %s"	*(char)
)	O
,	O
rushdb_error_string	*(char)
)	O
;	O
switch	O
(	O
rushdb_open	(*(char),int)->(enum(int,int,int))
(	O
base_name	*(char)
,	O
0	int
)	O
)	O
{	O
case	O
rushdb_result_ok	int
:	O
break	O
;	O
case	O
rushdb_result_eof	int
:	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
case	O
rushdb_result_fail	int
:	O
error	O
(	O
1	int
,	O
errno	O
,	O
_	O
(	O
"cannot open database file %s"	*(char)
)	O
,	O
base_name	*(char)
)	O
;	O
}	O
if	O
(	O
display_header	O
)	O
rushdb_print_header	(*(struct))->(void)
(	O
form	*(struct)
)	O
;	O
while	O
(	O
rush_utmp_read	(int,*(int),*(*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))))->(enum(int,int,int))
(	O
RUSH_STATUS_MAP_BIT	O
(	O
RUSH_STATUS_INUSE	O
)	O
,	O
&	O
status	int
,	O
&	O
wtmp	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
)	O
==	O
rushdb_result_ok	int
)	O
{	O
rushdb_print	(*(struct),*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))),int)->(int)
(	O
form	*(struct)
,	O
wtmp	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
,	O
1	int
)	O
;	O
free	(*(void))->(void)
(	O
wtmp	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
)	O
;	O
}	O
rushdb_close	()->(int)
(	O
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
