extern	O
Sworld	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
;	O
extern	O
Suser	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
;	O
extern	O
struct	O
s_altitude_map	struct(char,*(char),int)
altitude_map	array(struct(char,*(char),int))
[	O
]	O
;	O
extern	O
struct	O
s_desig_map	struct(char,*(char),int,int,int,int)
desig_map	array(struct(char,*(char),int,int,int,int))
[	O
]	O
;	O
extern	O
int	O
(	O
*	O
wrapx	*((int,int)->(int))
)	O
(	O
)	O
,	O
(	O
*	O
wrapy	*((int,int)->(int))
)	O
(	O
)	O
;	O
void	O
wrap	(*(struct(int,int)))->(void)
(	O
Pt	struct(int,int)
*	O
pp	*(struct(int,int))
)	O
{	O
pp	*(struct(int,int))
->	O
x	int
=	O
(	O
*	O
wrapx	*((int,int)->(int))
)	O
(	O
pp	*(struct(int,int))
->	O
x	int
,	O
pp	*(struct(int,int))
->	O
y	int
)	O
;	O
pp	*(struct(int,int))
->	O
y	int
=	O
(	O
*	O
wrapy	*((int,int)->(int))
)	O
(	O
pp	*(struct(int,int))
->	O
x	int
,	O
pp	*(struct(int,int))
->	O
y	int
)	O
;	O
}	O
int	O
torus_wrapx	(int,int)->(int)
(	O
int	O
x	int
,	O
int	O
y	int
)	O
{	O
if	O
(	O
x	int
>=	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
xmax	int
)	O
{	O
return	O
x	int
%	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
xmax	int
;	O
}	O
while	O
(	O
x	int
<	O
0	int
)	O
{	O
x	int
+=	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
xmax	int
;	O
}	O
return	O
x	int
;	O
}	O
int	O
torus_wrapy	(int,int)->(int)
(	O
int	O
x	int
,	O
int	O
y	int
)	O
{	O
if	O
(	O
y	int
>=	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
ymax	int
)	O
{	O
return	O
y	int
%	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
ymax	int
;	O
}	O
while	O
(	O
y	int
<	O
0	int
)	O
{	O
y	int
+=	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
ymax	int
;	O
}	O
return	O
y	int
;	O
}	O
int	O
latitude	(int,int)->(int)
(	O
int	O
x	int
,	O
int	O
y	int
)	O
{	O
float	O
angle	float
;	O
switch	O
(	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
geo	struct(int,int,double,double,double)
.	O
topology	int
)	O
{	O
case	O
TORUS	int
:	O
angle	float
=	O
torus_latitude	(int)->(int)
(	O
y	int
)	O
;	O
break	O
;	O
}	O
return	O
angle	float
;	O
}	O
int	O
torus_latitude	(int)->(int)
(	O
int	O
y	int
)	O
{	O
float	O
eq_dist	float
,	O
angle	float
;	O
eq_dist	float
=	O
y	int
-	O
(	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
ymax	int
/	O
2.0	int
)	O
;	O
angle	float
=	O
90.0	int
*	O
(	O
eq_dist	float
/	O
(	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
ymax	int
/	O
2.0	int
)	O
)	O
;	O
return	O
angle	float
;	O
}	O
int	O
map_alt	(int)->(int)
(	O
int	O
altitude	short
)	O
{	O
altitude	short
-=	O
altitude_map	array(struct(char,*(char),int))
[	O
0	int
]	O
.	O
value	int
;	O
return	O
altitude	short
;	O
}	O
int	O
xrel	(int,int,struct(int,int))->(int)
(	O
int	O
x	int
,	O
int	O
y	int
,	O
Pt	struct(int,int)
cap	struct(int,int)
)	O
{	O
x	int
=	O
xdist	(int,int,int,int)->(int)
(	O
x	int
,	O
y	int
,	O
cap	struct(int,int)
.	O
x	int
,	O
cap	struct(int,int)
.	O
y	int
)	O
;	O
return	O
(	O
x	int
)	O
;	O
}	O
int	O
yrel	(int,int,struct(int,int))->(int)
(	O
x	int
,	O
y	int
,	O
cap	struct(int,int)
)	O
int	O
x	int
,	O
y	int
;	O
Pt	struct(int,int)
cap	struct(int,int)
;	O
{	O
y	int
=	O
ydist	(int,int,int,int)->(int)
(	O
x	int
,	O
y	int
,	O
cap	struct(int,int)
.	O
x	int
,	O
cap	struct(int,int)
.	O
y	int
)	O
;	O
return	O
(	O
y	int
)	O
;	O
}	O
int	O
xdist	(int,int,int,int)->(int)
(	O
int	O
x	int
,	O
int	O
y	int
,	O
int	O
x1	int
,	O
int	O
y1	int
)	O
{	O
switch	O
(	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
geo	struct(int,int,double,double,double)
.	O
topology	int
)	O
{	O
case	O
TORUS	int
:	O
x	int
=	O
x	int
-	O
x1	int
;	O
if	O
(	O
x	int
<=	O
(	O
0	int
-	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
xmax	int
/	O
2	int
)	O
)	O
{	O
x	int
+=	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
xmax	int
;	O
}	O
if	O
(	O
x	int
>	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
xmax	int
/	O
2	int
)	O
{	O
x	int
=	O
x	int
-	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
xmax	int
;	O
}	O
return	O
x	int
;	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
return	O
x	int
;	O
}	O
int	O
ydist	(int,int,int,int)->(int)
(	O
x	int
,	O
y	int
,	O
x1	int
,	O
y1	int
)	O
int	O
x	int
,	O
y	int
,	O
x1	int
,	O
y1	int
;	O
{	O
switch	O
(	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
geo	struct(int,int,double,double,double)
.	O
topology	int
)	O
{	O
case	O
TORUS	int
:	O
y	int
=	O
y	int
-	O
y1	int
;	O
if	O
(	O
y	int
<=	O
(	O
0	int
-	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
ymax	int
/	O
2	int
)	O
)	O
{	O
y	int
+=	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
ymax	int
;	O
}	O
if	O
(	O
y	int
>	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
ymax	int
/	O
2	int
)	O
{	O
y	int
=	O
y	int
-	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
ymax	int
;	O
}	O
return	O
y	int
;	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
return	O
y	int
;	O
}	O
int	O
sect_desire	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),int,int)->(int)
(	O
Snation	struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))),*(struct(struct(int,int),*(struct(struct`,*`)))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct(int,int,*`)))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int)))
*	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
,	O
int	O
x	int
,	O
int	O
y	int
)	O
{	O
int	O
terrain_d	int
,	O
climate_d	int
,	O
altitude_d	int
,	O
total_d	int
;	O
terrain_d	int
=	O
abs	(int)->(int)
(	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
x	int
]	O
[	O
y	int
]	O
.	O
terrain	short
-	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
race	struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int)
.	O
pref_terrain	int
)	O
;	O
climate_d	int
=	O
abs	(int)->(int)
(	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
x	int
]	O
[	O
y	int
]	O
.	O
climate	short
-	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
race	struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int)
.	O
pref_climate	int
)	O
;	O
altitude_d	int
=	O
abs	(int)->(int)
(	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
x	int
]	O
[	O
y	int
]	O
.	O
altitude	short
-	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
race	struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int)
.	O
pref_alt	int
)	O
;	O
total_d	int
=	O
dom_max_int	(int,int)->(int)
(	O
0	int
,	O
230	int
-	O
(	O
terrain_d	int
*	O
terrain_d	int
)	O
*	O
10	int
)	O
;	O
total_d	int
+=	O
dom_max_int	(int,int)->(int)
(	O
0	int
,	O
250	int
-	O
(	O
climate_d	int
*	O
climate_d	int
)	O
*	O
10	int
)	O
;	O
total_d	int
+=	O
dom_max_int	(int,int)->(int)
(	O
0	int
,	O
250	int
-	O
(	O
altitude_d	int
*	O
altitude_d	int
)	O
*	O
20	int
)	O
;	O
if	O
(	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
id	short
==	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
x	int
]	O
[	O
y	int
]	O
.	O
owner	int
)	O
{	O
switch	O
(	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
x	int
]	O
[	O
y	int
]	O
.	O
designation	short
)	O
{	O
case	O
D_FARM	int
:	O
total_d	int
+=	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
x	int
]	O
[	O
y	int
]	O
.	O
soil	short
*	O
9	int
;	O
break	O
;	O
case	O
D_METAL_MINE	int
:	O
total_d	int
+=	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
x	int
]	O
[	O
y	int
]	O
.	O
metal	int
*	O
11	int
;	O
break	O
;	O
case	O
D_JEWEL_MINE	int
:	O
total_d	int
+=	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
x	int
]	O
[	O
y	int
]	O
.	O
jewels	int
*	O
13	int
;	O
break	O
;	O
default	O
:	O
{	O
total_d	int
+=	O
37	int
;	O
total_d	int
+=	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
x	int
]	O
[	O
y	int
]	O
.	O
soil	short
;	O
total_d	int
+=	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
x	int
]	O
[	O
y	int
]	O
.	O
metal	int
;	O
total_d	int
+=	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
x	int
]	O
[	O
y	int
]	O
.	O
jewels	int
;	O
}	O
}	O
}	O
else	O
{	O
total_d	int
+=	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
x	int
]	O
[	O
y	int
]	O
.	O
soil	short
*	O
7	int
;	O
total_d	int
+=	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
x	int
]	O
[	O
y	int
]	O
.	O
metal	int
*	O
9	int
;	O
total_d	int
+=	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
x	int
]	O
[	O
y	int
]	O
.	O
jewels	int
*	O
11	int
;	O
}	O
return	O
total_d	int
;	O
}	O
int	O
are_patrols	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))),*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))->(int)
(	O
Snation	struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))),*(struct(struct(int,int),*(struct(struct`,*`)))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct(int,int,*`)))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int)))
*	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
,	O
Sarmy	struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))))
*	O
moving_ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
,	O
Ssector	struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct(int,int,*`)))))
*	O
sp	int
)	O
{	O
int	O
found	int
=	O
0	int
,	O
done	int
=	O
0	int
,	O
x	int
,	O
y	int
;	O
Sarmy	struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))))
*	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
,	O
*	O
get_army	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),int)->(*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))))
(	O
)	O
;	O
struct	O
armyid	struct(int,int,*(struct(int,int,*(struct(int,int,*(struct`))))))
*	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
;	O
if	O
(	O
moving_ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
&&	O
is_underground	O
(	O
moving_ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
)	O
)	O
{	O
return	O
0	int
;	O
}	O
for	O
(	O
x	int
=	O
sp	int
->	O
loc	struct(int,int)
.	O
x	int
-	O
1	int
;	O
(	O
(	O
x	int
<=	O
sp	int
->	O
loc	struct(int,int)
.	O
x	int
+	O
1	int
)	O
&&	O
(	O
done	int
==	O
0	int
)	O
)	O
;	O
x	int
++	O
)	O
{	O
for	O
(	O
y	int
=	O
sp	int
->	O
loc	struct(int,int)
.	O
y	int
-	O
1	int
;	O
(	O
(	O
y	int
<=	O
sp	int
->	O
loc	struct(int,int)
.	O
y	int
+	O
1	int
)	O
&&	O
(	O
done	int
==	O
0	int
)	O
)	O
;	O
y	int
++	O
)	O
{	O
done	int
=	O
0	int
;	O
if	O
(	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
cn_flag	int
||	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
visible_sectors	*(*(int))
[	O
(	O
*	O
wrapx	*((int,int)->(int))
)	O
(	O
x	int
,	O
y	int
)	O
]	O
[	O
(	O
*	O
wrapy	*((int,int)->(int))
)	O
(	O
x	int
,	O
y	int
)	O
]	O
&	O
SEE_ARMIES	int
)	O
{	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
=	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
(	O
*	O
wrapx	*((int,int)->(int))
)	O
(	O
x	int
,	O
y	int
)	O
]	O
[	O
(	O
*	O
wrapy	*((int,int)->(int))
)	O
(	O
x	int
,	O
y	int
)	O
]	O
.	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
;	O
while	O
(	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
!=	O
NULL	O
)	O
{	O
if	O
(	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
->	O
owner	int
==	O
sp	int
->	O
owner	int
)	O
{	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
=	O
get_army	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),int)->(*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))))
(	O
&	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
nations	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
[	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
->	O
owner	int
]	O
,	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
->	O
id	short
)	O
;	O
if	O
(	O
(	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
->	O
status	int
==	O
A_PATROL	int
||	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
->	O
status	int
==	O
A_INTERCEPT	int
)	O
&&	O
(	O
!	O
(	O
moving_ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
&&	O
is_flight	O
(	O
moving_ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
)	O
)	O
||	O
is_missiles	O
(	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
)	O
)	O
&&	O
(	O
moving_ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
&&	O
(	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
->	O
owner	int
!=	O
moving_ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
->	O
owner	int
)	O
)	O
&&	O
(	O
get_diplo_status	(*(*(struct(int,int,int))),int,int)->(int)
(	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
diplo_matrix	*(*(struct(int,int,int)))
,	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
->	O
owner	int
,	O
moving_ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
->	O
owner	int
)	O
!=	O
TREATY	int
)	O
)	O
{	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
=	O
NULL	O
;	O
found	int
=	O
1	int
;	O
done	int
=	O
1	int
;	O
}	O
else	O
{	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
=	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
->	O
next	*(struct(int,int,*(struct(int,int,*(struct`)))))
;	O
}	O
}	O
else	O
{	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
=	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
->	O
next	*(struct(int,int,*(struct(int,int,*(struct`)))))
;	O
}	O
}	O
}	O
}	O
}	O
return	O
found	int
;	O
}	O
int	O
sect_is_patrolled	(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))),int)->(int)
(	O
Ssector	struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct(int,int,*`)))))
*	O
sp	int
,	O
int	O
flag	int
)	O
{	O
int	O
found	int
=	O
0	int
,	O
done	int
=	O
0	int
,	O
x	int
,	O
y	int
;	O
Sarmy	struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))))
*	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
,	O
*	O
get_army	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),int)->(*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))))
(	O
)	O
;	O
struct	O
armyid	struct(int,int,*(struct(int,int,*(struct(int,int,*(struct`))))))
*	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
;	O
for	O
(	O
x	int
=	O
sp	int
->	O
loc	struct(int,int)
.	O
x	int
-	O
1	int
;	O
(	O
(	O
x	int
<=	O
sp	int
->	O
loc	struct(int,int)
.	O
x	int
+	O
1	int
)	O
&&	O
(	O
done	int
==	O
0	int
)	O
)	O
;	O
x	int
++	O
)	O
{	O
for	O
(	O
y	int
=	O
sp	int
->	O
loc	struct(int,int)
.	O
y	int
-	O
1	int
;	O
(	O
(	O
y	int
<=	O
sp	int
->	O
loc	struct(int,int)
.	O
y	int
+	O
1	int
)	O
&&	O
(	O
done	int
==	O
0	int
)	O
)	O
;	O
y	int
++	O
)	O
{	O
done	int
=	O
0	int
;	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
=	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
(	O
*	O
wrapx	*((int,int)->(int))
)	O
(	O
x	int
,	O
y	int
)	O
]	O
[	O
(	O
*	O
wrapy	*((int,int)->(int))
)	O
(	O
x	int
,	O
y	int
)	O
]	O
.	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
;	O
while	O
(	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
!=	O
NULL	O
)	O
{	O
if	O
(	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
->	O
owner	int
==	O
sp	int
->	O
owner	int
)	O
{	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
=	O
get_army	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),int)->(*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))))
(	O
&	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
nations	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
[	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
->	O
owner	int
]	O
,	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
->	O
id	short
)	O
;	O
if	O
(	O
(	O
(	O
flag	int
==	O
H_PATROL	int
||	O
flag	int
==	O
H_P_OR_I	int
)	O
&&	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
->	O
status	int
==	O
A_PATROL	int
)	O
||	O
(	O
(	O
flag	int
==	O
H_INTERCEPT	int
||	O
flag	int
==	O
H_P_OR_I	int
)	O
&&	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
->	O
status	int
==	O
A_INTERCEPT	int
)	O
)	O
{	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
=	O
NULL	O
;	O
found	int
=	O
1	int
;	O
done	int
=	O
1	int
;	O
}	O
else	O
{	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
=	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
->	O
next	*(struct(int,int,*(struct(int,int,*(struct`)))))
;	O
}	O
}	O
else	O
{	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
=	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
->	O
next	*(struct(int,int,*(struct(int,int,*(struct`)))))
;	O
}	O
}	O
}	O
}	O
return	O
found	int
;	O
}	O
void	O
init_wrap	()->(void)
(	O
)	O
{	O
int	O
torus_wrapx	(int,int)->(int)
(	O
)	O
,	O
torus_wrapy	(int,int)->(int)
(	O
)	O
;	O
switch	O
(	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
geo	struct(int,int,double,double,double)
.	O
topology	int
)	O
{	O
case	O
TORUS	int
:	O
wrapx	*((int,int)->(int))
=	O
torus_wrapx	(int,int)->(int)
;	O
wrapy	*((int,int)->(int))
=	O
torus_wrapy	(int,int)->(int)
;	O
break	O
;	O
default	O
:	O
printf	(*(char))->(int)
(	O
"What world is this???\n"	*(char)
)	O
;	O
wrapx	*((int,int)->(int))
=	O
torus_wrapx	(int,int)->(int)
;	O
wrapy	*((int,int)->(int))
=	O
torus_wrapy	(int,int)->(int)
;	O
break	O
;	O
}	O
}	O
int	O
is_coastal_sect	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))))->(int)
(	O
Snation	struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))),*(struct(struct(int,int),*(struct(struct`,*`)))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct(int,int,*`)))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int)))
*	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
,	O
Ssector	struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct(int,int,*`)))))
*	O
sp	int
,	O
Sarmy	struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))))
*	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
)	O
{	O
int	O
land	int
,	O
i	int
,	O
j	int
,	O
x	int
,	O
y	int
;	O
if	O
(	O
is_land	O
(	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
)	O
&&	O
is_water	O
(	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
)	O
)	O
{	O
return	O
0	int
;	O
}	O
if	O
(	O
is_land	O
(	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
)	O
)	O
{	O
land	int
=	O
1	int
;	O
}	O
else	O
if	O
(	O
is_water	O
(	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
)	O
)	O
{	O
land	int
=	O
0	int
;	O
}	O
else	O
{	O
return	O
0	int
;	O
}	O
if	O
(	O
land	int
&&	O
sp	int
->	O
altitude	short
<	O
SEA_LEVEL	int
)	O
{	O
for	O
(	O
i	int
=	O
sp	int
->	O
loc	struct(int,int)
.	O
x	int
-	O
1	int
;	O
i	int
<=	O
sp	int
->	O
loc	struct(int,int)
.	O
x	int
+	O
1	int
;	O
++	O
i	int
)	O
{	O
for	O
(	O
j	int
=	O
sp	int
->	O
loc	struct(int,int)
.	O
y	int
-	O
1	int
;	O
j	int
<=	O
sp	int
->	O
loc	struct(int,int)
.	O
y	int
+	O
1	int
;	O
++	O
j	int
)	O
{	O
x	int
=	O
wrapx	*((int,int)->(int))
(	O
i	int
,	O
j	int
)	O
;	O
y	int
=	O
wrapy	*((int,int)->(int))
(	O
i	int
,	O
j	int
)	O
;	O
if	O
(	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
x	int
]	O
[	O
y	int
]	O
.	O
altitude	short
>=	O
SEA_LEVEL	int
)	O
{	O
return	O
1	int
;	O
}	O
}	O
}	O
return	O
0	int
;	O
}	O
if	O
(	O
!	O
land	int
&&	O
sp	int
->	O
altitude	short
>=	O
SEA_LEVEL	int
)	O
{	O
for	O
(	O
i	int
=	O
sp	int
->	O
loc	struct(int,int)
.	O
x	int
-	O
1	int
;	O
i	int
<=	O
sp	int
->	O
loc	struct(int,int)
.	O
x	int
+	O
1	int
;	O
++	O
i	int
)	O
{	O
for	O
(	O
j	int
=	O
sp	int
->	O
loc	struct(int,int)
.	O
y	int
-	O
1	int
;	O
j	int
<=	O
sp	int
->	O
loc	struct(int,int)
.	O
y	int
+	O
1	int
;	O
++	O
j	int
)	O
{	O
x	int
=	O
wrapx	*((int,int)->(int))
(	O
i	int
,	O
j	int
)	O
;	O
y	int
=	O
wrapy	*((int,int)->(int))
(	O
i	int
,	O
j	int
)	O
;	O
if	O
(	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
x	int
]	O
[	O
y	int
]	O
.	O
altitude	short
<	O
SEA_LEVEL	int
)	O
{	O
return	O
1	int
;	O
}	O
}	O
}	O
return	O
0	int
;	O
}	O
return	O
0	int
;	O
}	O
int	O
is_active_ntn	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))->(int)
(	O
Snation	struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))),*(struct(struct(int,int),*(struct(struct`,*`)))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct(int,int,*`)))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int)))
*	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
)	O
{	O
if	O
(	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
id	short
==	O
0	int
)	O
{	O
return	O
1	int
;	O
}	O
if	O
(	O
!	O
(	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
capital	struct(int,int)
.	O
x	int
==	O
-	O
1	int
&&	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
capital	struct(int,int)
.	O
y	int
==	O
-	O
1	int
)	O
)	O
{	O
return	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
