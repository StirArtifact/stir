static	O
char	O
rcsid	array(char)
[	O
]	O
=	O
"$Id: rpc_hout.c,v 1.1.1.1 2005/10/28 14:46:46 k0ro Exp $"	*(char)
;	O
static	O
void	O
pconstdef	()->(void)
(	O
)	O
,	O
pstructdef	()->(void)
(	O
)	O
,	O
puniondef	()->(void)
(	O
)	O
,	O
pdefine	()->(void)
(	O
)	O
,	O
pprogramdef	()->(void)
(	O
)	O
,	O
penumdef	()->(void)
(	O
)	O
,	O
ptypedef	()->(void)
(	O
)	O
,	O
pdeclaration	()->(void)
(	O
)	O
;	O
static	O
int	O
undefined2	()->(int)
(	O
)	O
;	O
extern	O
void	O
pprocdef	()->(void)
(	O
)	O
;	O
void	O
print_datadef	()->(void)
(	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
)	O
definition	struct(*(char),enum(int,int,int,int,int,int),union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`))))))
*	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
;	O
{	O
if	O
(	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def_kind	enum(int,int,int,int,int,int)
!=	O
DEF_CONST	int
)	O
{	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
}	O
switch	O
(	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def_kind	enum(int,int,int,int,int,int)
)	O
{	O
case	O
DEF_STRUCT	int
:	O
pstructdef	()->(void)
(	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
)	O
;	O
break	O
;	O
case	O
DEF_UNION	int
:	O
puniondef	()->(void)
(	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
)	O
;	O
break	O
;	O
case	O
DEF_ENUM	int
:	O
penumdef	()->(void)
(	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
)	O
;	O
break	O
;	O
case	O
DEF_TYPEDEF	int
:	O
ptypedef	()->(void)
(	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
)	O
;	O
break	O
;	O
case	O
DEF_PROGRAM	int
:	O
pprogramdef	()->(void)
(	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
)	O
;	O
break	O
;	O
case	O
DEF_CONST	int
:	O
pconstdef	()->(void)
(	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
)	O
;	O
break	O
;	O
}	O
if	O
(	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def_kind	enum(int,int,int,int,int,int)
!=	O
DEF_PROGRAM	int
&&	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def_kind	enum(int,int,int,int,int,int)
!=	O
DEF_CONST	int
)	O
{	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"bool_t xdr_%s (XDR *, %s *);\n"	*(char)
,	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def_name	*(char)
,	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def_name	*(char)
)	O
;	O
}	O
if	O
(	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def_kind	enum(int,int,int,int,int,int)
!=	O
DEF_CONST	int
)	O
{	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
}	O
}	O
static	O
void	O
pconstdef	()->(void)
(	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
)	O
definition	struct(*(char),enum(int,int,int,int,int,int),union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`))))))
*	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
;	O
{	O
pdefine	()->(void)
(	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def_name	*(char)
,	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
.	O
co	*(char)
)	O
;	O
}	O
static	O
void	O
pstructdef	()->(void)
(	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
)	O
definition	struct(*(char),enum(int,int,int,int,int,int),union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`))))))
*	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
;	O
{	O
decl_list	struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))))))
*	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
;	O
char	O
*	O
name	*(char)
=	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def_name	*(char)
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"struct %s {\n"	*(char)
,	O
name	*(char)
)	O
;	O
for	O
(	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
=	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
.	O
st	struct(*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct`,*`)))),int,array(char))
.	O
decls	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
;	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
!=	O
NULL	O
;	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
=	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
->	O
next	*(struct(*(char),*(struct(*(char),*(struct`)))))
)	O
{	O
pdeclaration	()->(void)
(	O
name	*(char)
,	O
&	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
->	O
decl	struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char))
,	O
1	int
)	O
;	O
}	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"};\n"	*(char)
)	O
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"typedef struct %s %s;\n"	*(char)
,	O
name	*(char)
,	O
name	*(char)
)	O
;	O
}	O
static	O
void	O
puniondef	()->(void)
(	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
)	O
definition	struct(*(char),enum(int,int,int,int,int,int),union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`))))))
*	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
;	O
{	O
case_list	struct(*(char),struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))))))
*	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
;	O
char	O
*	O
name	*(char)
=	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def_name	*(char)
;	O
declaration	struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char))
*	O
decl	struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char))
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"struct %s {\n"	*(char)
,	O
name	*(char)
)	O
;	O
decl	struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char))
=	O
&	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
.	O
un	struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*`,struct`,*`)))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char))))
.	O
enum_decl	struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char))
;	O
if	O
(	O
streq	()->(int)
(	O
decl	struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char))
->	O
type	*(char)
,	O
"bool"	*(char)
)	O
)	O
{	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\tbool_t %s;\n"	*(char)
,	O
decl	struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char))
->	O
name	*(char)
)	O
;	O
}	O
else	O
{	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\t%s %s;\n"	*(char)
,	O
decl	struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char))
->	O
type	*(char)
,	O
decl	struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char))
->	O
name	*(char)
)	O
;	O
}	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\tunion {\n"	*(char)
)	O
;	O
for	O
(	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
=	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
.	O
un	struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*`,struct`,*`)))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char))))
.	O
cases	*(struct(*(char),struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
;	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
!=	O
NULL	O
;	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
=	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
->	O
next	*(struct(*(char),*(struct(*(char),*(struct`)))))
)	O
{	O
pdeclaration	()->(void)
(	O
name	*(char)
,	O
&	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
->	O
case_decl	struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char))
,	O
2	int
)	O
;	O
}	O
decl	struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char))
=	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
.	O
un	struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*`,struct`,*`)))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char))))
.	O
default_decl	*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))
;	O
if	O
(	O
decl	struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char))
&&	O
!	O
streq	()->(int)
(	O
decl	struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char))
->	O
type	*(char)
,	O
"void"	*(char)
)	O
)	O
{	O
pdeclaration	()->(void)
(	O
name	*(char)
,	O
decl	struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char))
,	O
2	int
)	O
;	O
}	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\t} %s_u;\n"	*(char)
,	O
name	*(char)
)	O
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"};\n"	*(char)
)	O
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"typedef struct %s %s;\n"	*(char)
,	O
name	*(char)
,	O
name	*(char)
)	O
;	O
}	O
static	O
void	O
pdefine	()->(void)
(	O
name	*(char)
,	O
num	*(char)
)	O
char	O
*	O
name	*(char)
;	O
char	O
*	O
num	*(char)
;	O
{	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"#define %s %s\n"	*(char)
,	O
name	*(char)
,	O
num	*(char)
)	O
;	O
}	O
static	O
void	O
puldefine	(*(char),*(char))->(void)
(	O
name	*(char)
,	O
num	*(char)
)	O
char	O
*	O
name	*(char)
;	O
char	O
*	O
num	*(char)
;	O
{	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"#define %s ((u_long)%s)\n"	*(char)
,	O
name	*(char)
,	O
num	*(char)
)	O
;	O
}	O
static	O
int	O
define_printed	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`)))),*(struct(*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))->(int)
(	O
stop	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
start	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
)	O
proc_list	struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))))))
*	O
stop	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
version_list	struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))))),*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`))))))
*	O
start	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
;	O
{	O
version_list	struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))))),*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`))))))
*	O
vers	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
;	O
proc_list	struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))))))
*	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
for	O
(	O
vers	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
=	O
start	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
;	O
vers	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
!=	O
NULL	O
;	O
vers	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
=	O
vers	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),*(struct(*(char),*(struct`)))))
)	O
{	O
for	O
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
=	O
vers	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
procs	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
!=	O
NULL	O
;	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
=	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
next	*(struct(*(char),*(struct(*(char),*(struct`)))))
)	O
{	O
if	O
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
==	O
stop	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
{	O
return	O
(	O
0	int
)	O
;	O
}	O
else	O
if	O
(	O
streq	()->(int)
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
proc_name	*(char)
,	O
stop	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
proc_name	*(char)
)	O
)	O
{	O
return	O
(	O
1	int
)	O
;	O
}	O
}	O
}	O
abort	()->(void)
(	O
)	O
;	O
}	O
static	O
void	O
pprogramdef	()->(void)
(	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
)	O
definition	struct(*(char),enum(int,int,int,int,int,int),union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`))))))
*	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
;	O
{	O
version_list	struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))))),*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`))))))
*	O
vers	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
;	O
proc_list	struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))))))
*	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
puldefine	(*(char),*(char))->(void)
(	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def_name	*(char)
,	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
.	O
pr	struct(*(char),*(struct(*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))
.	O
prog_num	*(char)
)	O
;	O
for	O
(	O
vers	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
=	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
.	O
pr	struct(*(char),*(struct(*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))
.	O
versions	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
;	O
vers	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
!=	O
NULL	O
;	O
vers	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
=	O
vers	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),*(struct(*(char),*(struct`)))))
)	O
{	O
puldefine	(*(char),*(char))->(void)
(	O
vers	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
vers_name	*(char)
,	O
vers	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
vers_num	*(char)
)	O
;	O
for	O
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
=	O
vers	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
procs	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
!=	O
NULL	O
;	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
=	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
next	*(struct(*(char),*(struct(*(char),*(struct`)))))
)	O
{	O
if	O
(	O
!	O
define_printed	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`)))),*(struct(*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))->(int)
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
.	O
pr	struct(*(char),*(struct(*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))
.	O
versions	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
)	O
)	O
{	O
puldefine	(*(char),*(char))->(void)
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
proc_name	*(char)
,	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
proc_num	*(char)
)	O
;	O
}	O
pprocdef	()->(void)
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
vers	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
)	O
;	O
}	O
}	O
}	O
void	O
pprocdef	()->(void)
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
vp	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
)	O
proc_list	struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))))))
*	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
version_list	struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))))),*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`))))))
*	O
vp	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
;	O
{	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"extern "	*(char)
)	O
;	O
if	O
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
res_prefix	*(char)
)	O
{	O
if	O
(	O
streq	()->(int)
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
res_prefix	*(char)
,	O
"enum"	*(char)
)	O
)	O
{	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"enum "	*(char)
)	O
;	O
}	O
else	O
{	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"struct "	*(char)
)	O
;	O
}	O
}	O
if	O
(	O
streq	()->(int)
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
res_type	*(char)
,	O
"bool"	*(char)
)	O
)	O
{	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"bool_t *"	*(char)
)	O
;	O
}	O
else	O
if	O
(	O
streq	()->(int)
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
res_type	*(char)
,	O
"string"	*(char)
)	O
)	O
{	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"char **"	*(char)
)	O
;	O
}	O
else	O
{	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s *"	*(char)
,	O
fixtype	()->(*(char))
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
res_type	*(char)
)	O
)	O
;	O
}	O
pvname	()->(void)
(	O
proc	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
->	O
proc_name	*(char)
,	O
vp	*(struct(*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
vers_num	*(char)
)	O
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"();\n"	*(char)
)	O
;	O
}	O
static	O
void	O
penumdef	()->(void)
(	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
)	O
definition	struct(*(char),enum(int,int,int,int,int,int),union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`))))))
*	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
;	O
{	O
char	O
*	O
name	*(char)
=	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def_name	*(char)
;	O
enumval_list	struct(*(char),*(char),*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`))))))
*	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
;	O
char	O
*	O
last	*(char)
=	O
NULL	O
;	O
int	O
count	int
=	O
0	int
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"enum %s {\n"	*(char)
,	O
name	*(char)
)	O
;	O
for	O
(	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
=	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
.	O
en	struct(*(struct(*(char),*(char),*(struct(*`,*`,*`)))))
.	O
vals	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`)))))
;	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
!=	O
NULL	O
;	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
=	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
->	O
next	*(struct(*(char),*(struct(*(char),*(struct`)))))
)	O
{	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\t%s"	*(char)
,	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
->	O
name	*(char)
)	O
;	O
if	O
(	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
->	O
assignment	*(char)
)	O
{	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
" = %s"	*(char)
,	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
->	O
assignment	*(char)
)	O
;	O
last	*(char)
=	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
->	O
assignment	*(char)
;	O
count	int
=	O
1	int
;	O
}	O
else	O
{	O
if	O
(	O
last	*(char)
==	O
NULL	O
)	O
{	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
" = %d"	*(char)
,	O
count	int
++	O
)	O
;	O
}	O
else	O
{	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
" = %s + %d"	*(char)
,	O
last	*(char)
,	O
count	int
++	O
)	O
;	O
}	O
}	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
",\n"	*(char)
)	O
;	O
}	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"};\n"	*(char)
)	O
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"typedef enum %s %s;\n"	*(char)
,	O
name	*(char)
,	O
name	*(char)
)	O
;	O
}	O
static	O
void	O
ptypedef	()->(void)
(	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
)	O
definition	struct(*(char),enum(int,int,int,int,int,int),union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`))))))
*	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
;	O
{	O
char	O
*	O
name	*(char)
=	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def_name	*(char)
;	O
char	O
*	O
old	*(char)
=	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
.	O
ty	struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char))
.	O
old_type	*(char)
;	O
char	O
prefix	*(char)
[	O
8	int
]	O
;	O
relation	enum(int,int,int,int,int)
rel	enum(int,int,int,int,int)
=	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
.	O
ty	struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char))
.	O
rel	enum(int,int,int,int,int)
;	O
if	O
(	O
strncmp	O
(	O
old	*(char)
,	O
"byte_"	*(char)
,	O
5	int
)	O
==	O
0	int
)	O
{	O
old	*(char)
+=	O
5	int
;	O
}	O
if	O
(	O
!	O
streq	()->(int)
(	O
name	*(char)
,	O
old	*(char)
)	O
)	O
{	O
if	O
(	O
streq	()->(int)
(	O
old	*(char)
,	O
"string"	*(char)
)	O
)	O
{	O
old	*(char)
=	O
"char"	*(char)
;	O
rel	enum(int,int,int,int,int)
=	O
REL_POINTER	int
;	O
}	O
else	O
if	O
(	O
streq	()->(int)
(	O
old	*(char)
,	O
"opaque"	*(char)
)	O
)	O
{	O
old	*(char)
=	O
"char"	*(char)
;	O
}	O
else	O
if	O
(	O
streq	()->(int)
(	O
old	*(char)
,	O
"bool"	*(char)
)	O
)	O
{	O
old	*(char)
=	O
"bool_t"	*(char)
;	O
}	O
if	O
(	O
undefined2	()->(int)
(	O
old	*(char)
,	O
name	*(char)
)	O
&&	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
.	O
ty	struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char))
.	O
old_prefix	*(char)
)	O
{	O
s_print	O
(	O
prefix	*(char)
,	O
"%s "	*(char)
,	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
.	O
ty	struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char))
.	O
old_prefix	*(char)
)	O
;	O
}	O
else	O
{	O
prefix	*(char)
[	O
0	int
]	O
=	O
0	int
;	O
}	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"typedef "	*(char)
)	O
;	O
switch	O
(	O
rel	enum(int,int,int,int,int)
)	O
{	O
case	O
REL_ARRAY	int
:	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"struct {\n"	*(char)
)	O
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\tu_int %s_len;\n"	*(char)
,	O
name	*(char)
)	O
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\t%s%s *%s_val;\n"	*(char)
,	O
prefix	*(char)
,	O
old	*(char)
,	O
name	*(char)
)	O
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"} %s"	*(char)
,	O
name	*(char)
)	O
;	O
break	O
;	O
case	O
REL_ARRAY2	int
:	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s *%s\n"	*(char)
,	O
prefix	*(char)
,	O
name	*(char)
)	O
;	O
break	O
;	O
case	O
REL_POINTER	int
:	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s%s *%s"	*(char)
,	O
prefix	*(char)
,	O
old	*(char)
,	O
name	*(char)
)	O
;	O
break	O
;	O
case	O
REL_VECTOR	int
:	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s%s %s[%s]"	*(char)
,	O
prefix	*(char)
,	O
old	*(char)
,	O
name	*(char)
,	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
.	O
ty	struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char))
.	O
array_max	*(char)
)	O
;	O
break	O
;	O
case	O
REL_ALIAS	int
:	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s%s %s"	*(char)
,	O
prefix	*(char)
,	O
old	*(char)
,	O
name	*(char)
)	O
;	O
break	O
;	O
}	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
";\n"	*(char)
)	O
;	O
}	O
}	O
static	O
void	O
pdeclaration	()->(void)
(	O
name	*(char)
,	O
dec	*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))
,	O
tab	int
)	O
char	O
*	O
name	*(char)
;	O
declaration	struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char))
*	O
dec	*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))
;	O
int	O
tab	int
;	O
{	O
char	O
buf	array(char)
[	O
8	int
]	O
;	O
char	O
*	O
prefix	*(char)
;	O
char	O
*	O
type	*(char)
;	O
if	O
(	O
streq	()->(int)
(	O
dec	*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))
->	O
type	*(char)
,	O
"void"	*(char)
)	O
)	O
{	O
return	O
;	O
}	O
tabify	()->(void)
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
tab	int
)	O
;	O
if	O
(	O
streq	()->(int)
(	O
dec	*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))
->	O
type	*(char)
,	O
name	*(char)
)	O
&&	O
!	O
dec	*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))
->	O
prefix	*(char)
)	O
{	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"struct "	*(char)
)	O
;	O
}	O
if	O
(	O
streq	()->(int)
(	O
dec	*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))
->	O
type	*(char)
,	O
"string"	*(char)
)	O
)	O
{	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"char *%s"	*(char)
,	O
dec	*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))
->	O
name	*(char)
)	O
;	O
}	O
else	O
{	O
prefix	*(char)
=	O
""	*(char)
;	O
if	O
(	O
streq	()->(int)
(	O
dec	*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))
->	O
type	*(char)
,	O
"bool"	*(char)
)	O
)	O
{	O
type	*(char)
=	O
"bool_t"	*(char)
;	O
}	O
else	O
if	O
(	O
streq	()->(int)
(	O
dec	*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))
->	O
type	*(char)
,	O
"opaque"	*(char)
)	O
)	O
{	O
type	*(char)
=	O
"char"	*(char)
;	O
}	O
else	O
{	O
if	O
(	O
dec	*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))
->	O
prefix	*(char)
)	O
{	O
s_print	O
(	O
buf	array(char)
,	O
"%s "	*(char)
,	O
dec	*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))
->	O
prefix	*(char)
)	O
;	O
prefix	*(char)
=	O
buf	array(char)
;	O
}	O
if	O
(	O
strncmp	O
(	O
dec	*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))
->	O
type	*(char)
,	O
"byte_"	*(char)
,	O
5	int
)	O
==	O
0	int
)	O
{	O
type	*(char)
=	O
dec	*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))
->	O
type	*(char)
+	O
5	int
;	O
}	O
else	O
{	O
type	*(char)
=	O
dec	*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))
->	O
type	*(char)
;	O
}	O
}	O
switch	O
(	O
dec	*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))
->	O
rel	enum(int,int,int,int,int)
)	O
{	O
case	O
REL_ALIAS	int
:	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s%s %s"	*(char)
,	O
prefix	*(char)
,	O
type	*(char)
,	O
dec	*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))
->	O
name	*(char)
)	O
;	O
break	O
;	O
case	O
REL_VECTOR	int
:	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s%s %s[%s]"	*(char)
,	O
prefix	*(char)
,	O
type	*(char)
,	O
dec	*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))
->	O
name	*(char)
,	O
dec	*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))
->	O
array_max	*(char)
)	O
;	O
break	O
;	O
case	O
REL_POINTER	int
:	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s%s *%s"	*(char)
,	O
prefix	*(char)
,	O
type	*(char)
,	O
dec	*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))
->	O
name	*(char)
)	O
;	O
break	O
;	O
case	O
REL_ARRAY	int
:	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"struct {\n"	*(char)
)	O
;	O
tabify	()->(void)
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
tab	int
)	O
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\tu_int %s_len;\n"	*(char)
,	O
dec	*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))
->	O
name	*(char)
)	O
;	O
tabify	()->(void)
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
tab	int
)	O
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\t%s%s *%s_val;\n"	*(char)
,	O
prefix	*(char)
,	O
type	*(char)
,	O
dec	*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))
->	O
name	*(char)
)	O
;	O
tabify	()->(void)
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
tab	int
)	O
;	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"} %s"	*(char)
,	O
dec	*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))
->	O
name	*(char)
)	O
;	O
break	O
;	O
case	O
REL_ARRAY2	int
:	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s%s *%s"	*(char)
,	O
prefix	*(char)
,	O
type	*(char)
,	O
dec	*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))
->	O
name	*(char)
)	O
;	O
break	O
;	O
}	O
}	O
f_print	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
";\n"	*(char)
)	O
;	O
}	O
static	O
int	O
undefined2	()->(int)
(	O
type	*(char)
,	O
stop	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
char	O
*	O
type	*(char)
;	O
char	O
*	O
stop	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
{	O
list	struct(*(char),*(struct(*(char),*(struct(*(char),*(struct`))))))
*	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
;	O
definition	struct(*(char),enum(int,int,int,int,int,int),union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`))))))
*	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
;	O
for	O
(	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
=	O
defined	*(struct(*(char),*(struct(*(char),*(struct`)))))
;	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
!=	O
NULL	O
;	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
=	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
->	O
next	*(struct(*(char),*(struct(*(char),*(struct`)))))
)	O
{	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
=	O
(	O
definition	struct(*(char),enum(int,int,int,int,int,int),union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`))))))
*	O
)	O
l	*(struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`)))))
->	O
val	*(char)
;	O
if	O
(	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def_kind	enum(int,int,int,int,int,int)
!=	O
DEF_PROGRAM	int
)	O
{	O
if	O
(	O
streq	()->(int)
(	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def_name	*(char)
,	O
stop	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
)	O
{	O
return	O
(	O
1	int
)	O
;	O
}	O
else	O
if	O
(	O
streq	()->(int)
(	O
def	union(*(char),struct(*(struct(struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),int,array(char)),struct(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)),*(struct(*(char),struct(*`,*`,int,array(char),*`,enum(int,int,int,int,int),*`),*(struct`))),*(struct(*(char),*(char),int,array(char),*(char),enum(int,int,int,int,int),*(char)))),struct(*(struct(*(char),*(char),*(struct`)))),struct(*(char),*(char),int,array(char),enum(int,int,int,int,int),*(char)),struct(*(char),*(struct(*(char),*(char),*(struct`),*(struct`)))))
->	O
def_name	*(char)
,	O
type	*(char)
)	O
)	O
{	O
return	O
(	O
0	int
)	O
;	O
}	O
}	O
}	O
return	O
(	O
1	int
)	O
;	O
}	O
