const	O
char	O
protg_rcsid	array(char)
[	O
]	O
=	O
"$Id: protg.c,v 1.71 2002/03/05 19:10:41 ian Rel $"	*(char)
;	O
static	O
int	O
iGsendseq	int
;	O
static	O
int	O
iGremote_ack	int
;	O
static	O
int	O
iGretransmit_seq	int
;	O
static	O
int	O
iGrecseq	int
;	O
static	O
int	O
iGlocal_ack	int
;	O
static	O
int	O
iGrequest_winsize	int
=	O
IWINDOW	O
;	O
static	O
int	O
iGrequest_packsize	int
=	O
IPACKSIZE	O
;	O
static	O
int	O
iGremote_winsize	int
;	O
static	O
int	O
iGforced_remote_winsize	int
=	O
IREMOTE_WINDOW	O
;	O
static	O
int	O
iGremote_segsize	int
;	O
static	O
size_t	long
iGremote_packsize	long
;	O
static	O
int	O
iGforced_remote_packsize	int
=	O
IREMOTE_PACKSIZE	O
;	O
static	O
int	O
iGpacket_control	int
;	O
static	O
int	O
cGstartup_retries	int
=	O
CSTARTUP_RETRIES	O
;	O
static	O
int	O
cGexchange_init_retries	int
=	O
CEXCHANGE_INIT_RETRIES	O
;	O
static	O
int	O
cGexchange_init_timeout	int
=	O
CEXCHANGE_INIT_TIMEOUT	O
;	O
static	O
int	O
cGtimeout	int
=	O
CTIMEOUT	O
;	O
static	O
int	O
cGretries	int
=	O
CRETRIES	O
;	O
static	O
int	O
cGgarbage_data	int
=	O
CGARBAGE	O
;	O
static	O
int	O
cGmax_errors	int
=	O
CERRORS	O
;	O
static	O
int	O
cGerror_decay	int
=	O
CERROR_DECAY	O
;	O
static	O
boolean	int
fGshort_packets	int
=	O
TRUE	O
;	O
struct	O
uuconf_cmdtab	struct(*(char),int,*(void),*((*(void),int,*(*(char)),*(void),*(void))->(int)))
asGproto_params	array(struct(*(char),int,*(void),*((*(void),int,*(*(char)),*(void),*(void))->(int))))
[	O
]	O
=	O
{	O
{	O
"window"	*(char)
,	O
UUCONF_CMDTABTYPE_INT	O
,	O
(	O
pointer	*(void)
)	O
&	O
iGrequest_winsize	int
,	O
NULL	O
}	O
,	O
{	O
"packet-size"	*(char)
,	O
UUCONF_CMDTABTYPE_INT	O
,	O
(	O
pointer	*(void)
)	O
&	O
iGrequest_packsize	int
,	O
NULL	O
}	O
,	O
{	O
"startup-retries"	*(char)
,	O
UUCONF_CMDTABTYPE_INT	O
,	O
(	O
pointer	*(void)
)	O
&	O
cGstartup_retries	int
,	O
NULL	O
}	O
,	O
{	O
"init-timeout"	*(char)
,	O
UUCONF_CMDTABTYPE_INT	O
,	O
(	O
pointer	*(void)
)	O
&	O
cGexchange_init_timeout	int
,	O
NULL	O
}	O
,	O
{	O
"init-retries"	*(char)
,	O
UUCONF_CMDTABTYPE_INT	O
,	O
(	O
pointer	*(void)
)	O
&	O
cGexchange_init_retries	int
,	O
NULL	O
}	O
,	O
{	O
"timeout"	*(char)
,	O
UUCONF_CMDTABTYPE_INT	O
,	O
(	O
pointer	*(void)
)	O
&	O
cGtimeout	int
,	O
NULL	O
}	O
,	O
{	O
"retries"	*(char)
,	O
UUCONF_CMDTABTYPE_INT	O
,	O
(	O
pointer	*(void)
)	O
&	O
cGretries	int
,	O
NULL	O
}	O
,	O
{	O
"garbage"	*(char)
,	O
UUCONF_CMDTABTYPE_INT	O
,	O
(	O
pointer	*(void)
)	O
&	O
cGgarbage_data	int
,	O
NULL	O
}	O
,	O
{	O
"errors"	*(char)
,	O
UUCONF_CMDTABTYPE_INT	O
,	O
(	O
pointer	*(void)
)	O
&	O
cGmax_errors	int
,	O
NULL	O
}	O
,	O
{	O
"error-decay"	*(char)
,	O
UUCONF_CMDTABTYPE_INT	O
,	O
(	O
pointer	*(void)
)	O
&	O
cGerror_decay	int
,	O
NULL	O
}	O
,	O
{	O
"remote-window"	*(char)
,	O
UUCONF_CMDTABTYPE_INT	O
,	O
(	O
pointer	*(void)
)	O
&	O
iGforced_remote_winsize	int
,	O
NULL	O
}	O
,	O
{	O
"remote-packet-size"	*(char)
,	O
UUCONF_CMDTABTYPE_INT	O
,	O
(	O
pointer	*(void)
)	O
&	O
iGforced_remote_packsize	int
,	O
NULL	O
}	O
,	O
{	O
"short-packets"	*(char)
,	O
UUCONF_CMDTABTYPE_BOOLEAN	O
,	O
(	O
pointer	*(void)
)	O
&	O
fGshort_packets	int
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
long	O
cGsent_packets	long
;	O
static	O
long	O
cGresent_packets	long
;	O
static	O
long	O
cGdelayed_packets	long
;	O
static	O
long	O
cGrec_packets	long
;	O
static	O
long	O
cGbad_hdr	long
;	O
static	O
long	O
cGbad_checksum	long
;	O
static	O
long	O
cGbad_order	long
;	O
static	O
long	O
cGremote_rejects	long
;	O
static	O
long	O
cGremote_duprrs	long
;	O
static	O
long	O
cGerror_level	long
;	O
static	O
int	O
cGexpect_bad_order	int
;	O
static	O
const	O
char	O
*	O
const	O
azGcontrol	array(*(char))
[	O
]	O
=	O
{	O
"?0?"	*(char)
,	O
"CLOSE"	*(char)
,	O
"RJ"	*(char)
,	O
"SRJ"	*(char)
,	O
"RR"	*(char)
,	O
"INITC"	*(char)
,	O
"INITB"	*(char)
,	O
"INITA"	*(char)
}	O
;	O
static	O
boolean	int
fgexchange_init	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int,int,*(int))->(int)
P	O
(	O
(	O
struct	O
sdaemon	struct(*(void),*(char),int,*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)
*	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
int	O
ictl	int
,	O
int	O
ival	int
,	O
int	O
*	O
piset	*(int)
)	O
)	O
;	O
static	O
boolean	int
fgsend_control	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int,int)->(int)
P	O
(	O
(	O
struct	O
sdaemon	struct(*(void),*(char),int,*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)
*	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
int	O
ictl	int
,	O
int	O
ival	int
)	O
)	O
;	O
static	O
char	O
*	O
zgadjust_ack	(int)->(*(char))
P	O
(	O
(	O
int	O
iseq	int
)	O
)	O
;	O
static	O
boolean	int
fgwait_for_packet	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int,int,int)->(int)
P	O
(	O
(	O
struct	O
sdaemon	struct(*(void),*(char),int,*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)
*	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
boolean	int
freturncontrol	int
,	O
int	O
ctimeout	int
,	O
int	O
cretries	int
)	O
)	O
;	O
static	O
boolean	int
fgsend_acks	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)))->(int)
P	O
(	O
(	O
struct	O
sdaemon	struct(*(void),*(char),int,*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)
*	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
)	O
)	O
;	O
static	O
boolean	int
fggot_ack	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int)->(int)
P	O
(	O
(	O
struct	O
sdaemon	struct(*(void),*(char),int,*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)
*	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
int	O
iack	int
)	O
)	O
;	O
static	O
boolean	int
fgprocess_data	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int,int,*(int),*(long),*(int))->(int)
P	O
(	O
(	O
struct	O
sdaemon	struct(*(void),*(char),int,*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)
*	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
boolean	int
fdoacks	int
,	O
boolean	int
freturncontrol	int
,	O
boolean	int
*	O
pfexit	*(int)
,	O
size_t	long
*	O
pcneed	*(long)
,	O
boolean	int
*	O
pffound	*(int)
)	O
)	O
;	O
static	O
boolean	int
fginit_sendbuffers	(int)->(int)
P	O
(	O
(	O
boolean	int
fallocate	int
)	O
)	O
;	O
static	O
boolean	int
fgcheck_errors	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)))->(int)
P	O
(	O
(	O
struct	O
sdaemon	struct(*(void),*(char),int,*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)
*	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
)	O
)	O
;	O
static	O
int	O
igchecksum	(*(char),long)->(int)
P	O
(	O
(	O
const	O
char	O
*	O
zdata	*(char)
,	O
size_t	long
clen	long
)	O
)	O
;	O
static	O
int	O
igchecksum2	(*(char),long,*(char),long)->(int)
P	O
(	O
(	O
const	O
char	O
*	O
zfirst	*(char)
,	O
size_t	long
cfirst	long
,	O
const	O
char	O
*	O
zsecond	*(char)
,	O
size_t	long
csecond	long
)	O
)	O
;	O
boolean	int
fgstart	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),*(*(char)))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
pzlog	*(*(char))
)	O
struct	O
sdaemon	struct(*(void),*(char),int,*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)
*	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
;	O
char	O
*	O
*	O
pzlog	*(*(char))
;	O
{	O
int	O
iseg	int
;	O
int	O
i	int
;	O
boolean	int
fgota	int
,	O
fgotb	int
;	O
*	O
pzlog	*(*(char))
=	O
NULL	O
;	O
if	O
(	O
!	O
fconn_set	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
->	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
PARITYSETTING_NONE	int
,	O
STRIPSETTING_EIGHTBITS	int
,	O
XONXOFF_OFF	int
)	O
)	O
return	O
FALSE	O
;	O
iGsendseq	int
=	O
1	int
;	O
iGremote_ack	int
=	O
0	int
;	O
iGretransmit_seq	int
=	O
-	O
1	int
;	O
iGrecseq	int
=	O
0	int
;	O
iGlocal_ack	int
=	O
0	int
;	O
cGsent_packets	long
=	O
0	int
;	O
cGresent_packets	long
=	O
0	int
;	O
cGdelayed_packets	long
=	O
0	int
;	O
cGrec_packets	long
=	O
0	int
;	O
cGbad_hdr	long
=	O
0	int
;	O
cGbad_checksum	long
=	O
0	int
;	O
cGbad_order	long
=	O
0	int
;	O
cGremote_rejects	long
=	O
0	int
;	O
cGremote_duprrs	long
=	O
0	int
;	O
cGerror_level	long
=	O
0	int
;	O
cGexpect_bad_order	int
=	O
0	int
;	O
i	int
=	O
iGrequest_packsize	int
;	O
iseg	int
=	O
-	O
1	int
;	O
while	O
(	O
i	int
>	O
0	int
)	O
{	O
++	O
iseg	int
;	O
i	int
>>=	O
1	int
;	O
}	O
iseg	int
-=	O
5	int
;	O
if	O
(	O
iseg	int
<	O
0	int
||	O
iseg	int
>	O
7	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Illegal packet size %d for '%c' protocol"	*(char)
,	O
iGrequest_packsize	int
,	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
->	O
qproto	*(struct)
->	O
bname	char
)	O
;	O
iseg	int
=	O
1	int
;	O
}	O
if	O
(	O
iGrequest_winsize	int
<=	O
0	int
||	O
iGrequest_winsize	int
>	O
7	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Illegal window size %d for '%c' protocol"	*(char)
,	O
iGrequest_winsize	int
,	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
->	O
qproto	*(struct)
->	O
bname	char
)	O
;	O
iGrequest_winsize	int
=	O
IWINDOW	O
;	O
}	O
fgota	int
=	O
FALSE	O
;	O
fgotb	int
=	O
FALSE	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
cGstartup_retries	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
fgota	int
)	O
{	O
if	O
(	O
!	O
fgsend_control	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
INITA	O
,	O
iGrequest_winsize	int
)	O
)	O
return	O
FALSE	O
;	O
}	O
else	O
{	O
if	O
(	O
!	O
fgexchange_init	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int,int,*(int))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
INITA	O
,	O
iGrequest_winsize	int
,	O
&	O
iGremote_winsize	int
)	O
)	O
continue	O
;	O
}	O
fgota	int
=	O
TRUE	O
;	O
if	O
(	O
fgotb	int
)	O
{	O
if	O
(	O
!	O
fgsend_control	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
INITB	O
,	O
iseg	int
)	O
)	O
return	O
FALSE	O
;	O
}	O
else	O
{	O
if	O
(	O
!	O
fgexchange_init	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int,int,*(int))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
INITB	O
,	O
iseg	int
,	O
&	O
iGremote_segsize	int
)	O
)	O
continue	O
;	O
}	O
fgotb	int
=	O
TRUE	O
;	O
if	O
(	O
!	O
fgexchange_init	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int,int,*(int))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
INITC	O
,	O
iGrequest_winsize	int
,	O
&	O
iGremote_winsize	int
)	O
)	O
continue	O
;	O
iGremote_packsize	long
=	O
1	int
<<	O
(	O
iGremote_segsize	int
+	O
5	int
)	O
;	O
if	O
(	O
iGforced_remote_winsize	int
>	O
0	int
&&	O
iGforced_remote_winsize	int
<=	O
CMAXWINDOW	O
)	O
iGremote_winsize	int
=	O
iGforced_remote_winsize	int
;	O
if	O
(	O
iGforced_remote_packsize	int
>=	O
32	int
&&	O
iGforced_remote_packsize	int
<=	O
4096	int
)	O
{	O
i	int
=	O
iGforced_remote_packsize	int
;	O
iseg	int
=	O
-	O
1	int
;	O
while	O
(	O
i	int
>	O
0	int
)	O
{	O
++	O
iseg	int
;	O
i	int
>>=	O
1	int
;	O
}	O
iGremote_packsize	long
=	O
1	int
<<	O
iseg	int
;	O
iGremote_segsize	int
=	O
iseg	int
-	O
5	int
;	O
}	O
if	O
(	O
!	O
fginit_sendbuffers	(int)->(int)
(	O
TRUE	O
)	O
)	O
return	O
FALSE	O
;	O
*	O
pzlog	*(*(char))
=	O
zbufalc	(long)->(*(char))
(	O
sizeof	O
"protocol '' sending packet/window / receiving /"	*(char)
+	O
64	int
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
*	O
pzlog	*(*(char))
,	O
"protocol '%c' sending packet/window %d/%d receiving %d/%d"	*(char)
,	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
->	O
qproto	*(struct)
->	O
bname	char
,	O
(	O
int	O
)	O
iGremote_packsize	long
,	O
(	O
int	O
)	O
iGremote_winsize	int
,	O
(	O
int	O
)	O
iGrequest_packsize	int
,	O
(	O
int	O
)	O
iGrequest_winsize	int
)	O
;	O
return	O
TRUE	O
;	O
}	O
DEBUG_MESSAGE0	O
(	O
DEBUG_PROTO	O
|	O
DEBUG_ABNORMAL	O
,	O
"fgstart: Protocol startup failed"	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
boolean	int
fbiggstart	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),*(*(char)))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
pzlog	*(*(char))
)	O
struct	O
sdaemon	struct(*(void),*(char),int,*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)
*	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
;	O
char	O
*	O
*	O
pzlog	*(*(char))
;	O
{	O
fGshort_packets	int
=	O
FALSE	O
;	O
return	O
fgstart	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),*(*(char)))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
pzlog	*(*(char))
)	O
;	O
}	O
boolean	int
fvstart	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),*(*(char)))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
pzlog	*(*(char))
)	O
struct	O
sdaemon	struct(*(void),*(char),int,*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)
*	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
;	O
char	O
*	O
*	O
pzlog	*(*(char))
;	O
{	O
if	O
(	O
iGrequest_packsize	int
==	O
IPACKSIZE	O
)	O
iGrequest_packsize	int
=	O
1024	int
;	O
return	O
fgstart	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),*(*(char)))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
pzlog	*(*(char))
)	O
;	O
}	O
static	O
boolean	int
fgexchange_init	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int,int,*(int))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
ictl	int
,	O
ival	int
,	O
piset	*(int)
)	O
struct	O
sdaemon	struct(*(void),*(char),int,*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)
*	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
;	O
int	O
ictl	int
;	O
int	O
ival	int
;	O
int	O
*	O
piset	*(int)
;	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
cGexchange_init_retries	int
;	O
i	int
++	O
)	O
{	O
long	O
itime	long
;	O
int	O
ctimeout	int
;	O
if	O
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
->	O
fcaller	int
||	O
i	int
>	O
0	int
)	O
{	O
if	O
(	O
!	O
fgsend_control	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
ictl	int
,	O
ival	int
)	O
)	O
return	O
FALSE	O
;	O
}	O
itime	long
=	O
ixsysdep_time	(*(long))->(long)
(	O
(	O
long	O
*	O
)	O
NULL	O
)	O
;	O
ctimeout	int
=	O
cGexchange_init_timeout	int
;	O
do	O
{	O
long	O
inewtime	long
;	O
if	O
(	O
!	O
fgwait_for_packet	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int,int,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
TRUE	O
,	O
ctimeout	int
,	O
0	int
)	O
)	O
break	O
;	O
if	O
(	O
CONTROL_TT	O
(	O
iGpacket_control	int
)	O
==	O
CONTROL	O
)	O
{	O
if	O
(	O
CONTROL_XXX	O
(	O
iGpacket_control	int
)	O
==	O
ictl	int
)	O
{	O
*	O
piset	*(int)
=	O
CONTROL_YYY	O
(	O
iGpacket_control	int
)	O
;	O
if	O
(	O
!	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
->	O
fcaller	int
&&	O
i	int
==	O
0	int
)	O
{	O
if	O
(	O
!	O
fgsend_control	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
ictl	int
,	O
ival	int
)	O
)	O
return	O
FALSE	O
;	O
}	O
return	O
TRUE	O
;	O
}	O
if	O
(	O
CONTROL_XXX	O
(	O
iGpacket_control	int
)	O
<	O
ictl	int
&&	O
ictl	int
!=	O
INITA	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
CONTROL_XXX	O
(	O
iGpacket_control	int
)	O
==	O
INITA	O
&&	O
ictl	int
==	O
INITC	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
CONTROL_XXX	O
(	O
iGpacket_control	int
)	O
==	O
INITB	O
&&	O
ictl	int
==	O
INITC	O
)	O
iGremote_segsize	int
=	O
CONTROL_YYY	O
(	O
iGpacket_control	int
)	O
;	O
}	O
inewtime	long
=	O
ixsysdep_time	(*(long))->(long)
(	O
(	O
long	O
*	O
)	O
NULL	O
)	O
;	O
ctimeout	int
-=	O
inewtime	long
-	O
itime	long
;	O
}	O
while	O
(	O
ctimeout	int
>	O
0	int
)	O
;	O
}	O
return	O
FALSE	O
;	O
}	O
boolean	int
fgshutdown	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
)	O
struct	O
sdaemon	struct(*(void),*(char),int,*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)
*	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
;	O
{	O
(	O
void	O
)	O
fgsend_control	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
CLOSE	O
,	O
0	int
)	O
;	O
(	O
void	O
)	O
fgsend_control	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
CLOSE	O
,	O
0	int
)	O
;	O
(	O
void	O
)	O
fginit_sendbuffers	(int)->(int)
(	O
FALSE	O
)	O
;	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_NORMAL	int
,	O
"Protocol '%c' packets: sent %ld, resent %ld, received %ld"	*(char)
,	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
->	O
qproto	*(struct)
->	O
bname	char
,	O
cGsent_packets	long
,	O
cGresent_packets	long
-	O
cGdelayed_packets	long
,	O
cGrec_packets	long
)	O
;	O
if	O
(	O
cGbad_hdr	long
!=	O
0	int
||	O
cGbad_checksum	long
!=	O
0	int
||	O
cGbad_order	long
!=	O
0	int
||	O
cGremote_rejects	long
!=	O
0	int
||	O
cGremote_duprrs	long
!=	O
0	int
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_NORMAL	int
,	O
"Errors: header %ld, checksum %ld, order %ld, remote rejects %ld"	*(char)
,	O
cGbad_hdr	long
,	O
cGbad_checksum	long
,	O
cGbad_order	long
,	O
cGremote_duprrs	long
+	O
cGremote_rejects	long
)	O
;	O
iGrequest_winsize	int
=	O
IWINDOW	O
;	O
iGrequest_packsize	int
=	O
IPACKSIZE	O
;	O
cGstartup_retries	int
=	O
CSTARTUP_RETRIES	O
;	O
cGexchange_init_timeout	int
=	O
CEXCHANGE_INIT_TIMEOUT	O
;	O
cGexchange_init_retries	int
=	O
CEXCHANGE_INIT_RETRIES	O
;	O
cGtimeout	int
=	O
CTIMEOUT	O
;	O
cGretries	int
=	O
CRETRIES	O
;	O
cGgarbage_data	int
=	O
CGARBAGE	O
;	O
cGmax_errors	int
=	O
CERRORS	O
;	O
cGerror_decay	int
=	O
CERROR_DECAY	O
;	O
iGforced_remote_winsize	int
=	O
IREMOTE_WINDOW	O
;	O
iGforced_remote_packsize	int
=	O
IREMOTE_PACKSIZE	O
;	O
fGshort_packets	int
=	O
TRUE	O
;	O
return	O
TRUE	O
;	O
}	O
boolean	int
fgsendcmd	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),*(char),int,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
z	*(char)
,	O
ilocal	int
,	O
iremote	int
)	O
struct	O
sdaemon	struct(*(void),*(char),int,*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)
*	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
;	O
const	O
char	O
*	O
z	*(char)
;	O
int	O
ilocal	int
ATTRIBUTE_UNUSED	O
;	O
int	O
iremote	int
ATTRIBUTE_UNUSED	O
;	O
{	O
size_t	long
clen	long
;	O
boolean	int
fagain	int
;	O
DEBUG_MESSAGE1	O
(	O
DEBUG_UUCP_PROTO	O
,	O
"fgsendcmd: Sending command \"%s\""	*(char)
,	O
z	*(char)
)	O
;	O
clen	long
=	O
strlen	(*(char))->(long)
(	O
z	*(char)
)	O
;	O
do	O
{	O
char	O
*	O
zpacket	*(char)
;	O
size_t	long
cdummy	long
;	O
zpacket	*(char)
=	O
zggetspace	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),*(long))->(*(char))
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
&	O
cdummy	long
)	O
;	O
if	O
(	O
clen	long
<	O
iGremote_packsize	long
)	O
{	O
size_t	long
csize	long
;	O
if	O
(	O
iGremote_packsize	long
<=	O
64	int
||	O
!	O
fGshort_packets	int
)	O
csize	long
=	O
iGremote_packsize	long
;	O
else	O
{	O
csize	long
=	O
32	int
;	O
while	O
(	O
csize	long
<=	O
clen	long
)	O
csize	long
<<=	O
1	int
;	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
zpacket	*(char)
,	O
z	*(char)
,	O
clen	long
)	O
;	O
if	O
(	O
csize	long
>	O
clen	long
)	O
bzero	(*(void),long)->(void)
(	O
zpacket	*(char)
+	O
clen	long
,	O
csize	long
-	O
clen	long
)	O
;	O
fagain	int
=	O
FALSE	O
;	O
if	O
(	O
!	O
fgsenddata	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),*(char),long,int,int,long)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
zpacket	*(char)
,	O
csize	long
,	O
0	int
,	O
0	int
,	O
(	O
long	O
)	O
0	int
)	O
)	O
return	O
FALSE	O
;	O
}	O
else	O
{	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
zpacket	*(char)
,	O
z	*(char)
,	O
iGremote_packsize	long
)	O
;	O
z	*(char)
+=	O
iGremote_packsize	long
;	O
clen	long
-=	O
iGremote_packsize	long
;	O
fagain	int
=	O
TRUE	O
;	O
if	O
(	O
!	O
fgsenddata	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),*(char),long,int,int,long)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
zpacket	*(char)
,	O
iGremote_packsize	long
,	O
0	int
,	O
0	int
,	O
(	O
long	O
)	O
0	int
)	O
)	O
return	O
FALSE	O
;	O
}	O
}	O
while	O
(	O
fagain	int
)	O
;	O
return	O
TRUE	O
;	O
}	O
static	O
char	O
*	O
azGsendbuffers	array(*(char))
[	O
CSENDBUFFERS	O
]	O
;	O
static	O
boolean	int
fginit_sendbuffers	(int)->(int)
(	O
fallocate	int
)	O
boolean	int
fallocate	int
;	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
CSENDBUFFERS	O
;	O
i	int
++	O
)	O
{	O
xfree	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
azGsendbuffers	array(*(char))
[	O
i	int
]	O
)	O
;	O
if	O
(	O
fallocate	int
)	O
{	O
azGsendbuffers	array(*(char))
[	O
i	int
]	O
=	O
(	O
char	O
*	O
)	O
malloc	(long)->(*(void))
(	O
CFRAMELEN	O
+	O
2	int
+	O
iGremote_packsize	long
)	O
;	O
if	O
(	O
azGsendbuffers	array(*(char))
[	O
i	int
]	O
==	O
NULL	O
)	O
return	O
FALSE	O
;	O
bzero	(*(void),long)->(void)
(	O
azGsendbuffers	array(*(char))
[	O
i	int
]	O
,	O
CFRAMELEN	O
+	O
2	int
+	O
iGremote_packsize	long
)	O
;	O
}	O
else	O
azGsendbuffers	array(*(char))
[	O
i	int
]	O
=	O
NULL	O
;	O
}	O
return	O
TRUE	O
;	O
}	O
char	O
*	O
zggetspace	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),*(long))->(*(char))
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
pclen	*(long)
)	O
struct	O
sdaemon	struct(*(void),*(char),int,*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)
*	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
ATTRIBUTE_UNUSED	O
;	O
size_t	long
*	O
pclen	*(long)
;	O
{	O
*	O
pclen	*(long)
=	O
iGremote_packsize	long
;	O
return	O
azGsendbuffers	array(*(char))
[	O
iGsendseq	int
]	O
+	O
CFRAMELEN	O
+	O
2	int
;	O
}	O
boolean	int
fgsenddata	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),*(char),long,int,int,long)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
zdata	*(char)
,	O
cdata	long
,	O
ilocal	int
,	O
iremote	int
,	O
ipos	long
)	O
struct	O
sdaemon	struct(*(void),*(char),int,*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)
*	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
;	O
char	O
*	O
zdata	*(char)
;	O
size_t	long
cdata	long
;	O
int	O
ilocal	int
ATTRIBUTE_UNUSED	O
;	O
int	O
iremote	int
ATTRIBUTE_UNUSED	O
;	O
long	O
ipos	long
ATTRIBUTE_UNUSED	O
;	O
{	O
char	O
*	O
z	*(char)
;	O
int	O
itt	int
,	O
iseg	int
;	O
size_t	long
csize	long
;	O
int	O
iclr1	int
,	O
iclr2	int
;	O
unsigned	O
short	O
icheck	short
;	O
itt	int
=	O
DATA	O
;	O
csize	long
=	O
iGremote_packsize	long
;	O
iseg	int
=	O
iGremote_segsize	int
+	O
1	int
;	O
if	O
(	O
cdata	long
>	O
csize	long
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_FATAL	int
,	O
"fgsend_packet: Packet size too large"	*(char)
)	O
;	O
iclr1	int
=	O
-	O
1	int
;	O
iclr2	int
=	O
-	O
2	int
;	O
if	O
(	O
cdata	long
<	O
csize	long
)	O
{	O
if	O
(	O
iGremote_packsize	long
>	O
64	int
&&	O
fGshort_packets	int
)	O
{	O
iseg	int
=	O
1	int
;	O
csize	long
=	O
32	int
;	O
while	O
(	O
csize	long
<	O
cdata	long
)	O
{	O
csize	long
<<=	O
1	int
;	O
++	O
iseg	int
;	O
}	O
}	O
if	O
(	O
csize	long
!=	O
cdata	long
)	O
{	O
size_t	long
cshort	long
;	O
iclr2	int
=	O
0	int
;	O
itt	int
=	O
SHORTDATA	O
;	O
cshort	long
=	O
csize	long
-	O
cdata	long
;	O
if	O
(	O
cshort	long
<=	O
127	int
)	O
{	O
--	O
zdata	*(char)
;	O
zdata	*(char)
[	O
0	int
]	O
=	O
(	O
char	O
)	O
cshort	long
;	O
zdata	*(char)
[	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
cshort	long
>	O
1	int
)	O
bzero	(*(void),long)->(void)
(	O
zdata	*(char)
+	O
cdata	long
+	O
1	int
,	O
cshort	long
-	O
1	int
)	O
;	O
}	O
else	O
{	O
zdata	*(char)
-=	O
2	int
;	O
zdata	*(char)
[	O
0	int
]	O
=	O
(	O
char	O
)	O
(	O
0x80	int
|	O
(	O
cshort	long
&	O
0x7f	int
)	O
)	O
;	O
zdata	*(char)
[	O
1	int
]	O
=	O
(	O
char	O
)	O
(	O
cshort	long
>>	O
7	int
)	O
;	O
bzero	(*(void),long)->(void)
(	O
zdata	*(char)
+	O
cdata	long
+	O
2	int
,	O
cshort	long
-	O
2	int
)	O
;	O
iclr1	int
=	O
0	int
;	O
}	O
}	O
}	O
z	*(char)
=	O
zdata	*(char)
-	O
CFRAMELEN	O
;	O
z	*(char)
[	O
iclr1	int
]	O
=	O
'\0'	O
;	O
z	*(char)
[	O
iclr2	int
]	O
=	O
'\0'	O
;	O
z	*(char)
[	O
IFRAME_DLE	O
]	O
=	O
DLE	O
;	O
z	*(char)
[	O
IFRAME_K	O
]	O
=	O
(	O
char	O
)	O
iseg	int
;	O
icheck	short
=	O
(	O
unsigned	O
short	O
)	O
igchecksum	(*(char),long)->(int)
(	O
zdata	*(char)
,	O
csize	long
)	O
;	O
while	O
(	O
iGsendseq	int
==	O
iGremote_ack	int
||	O
CSEQDIFF	O
(	O
iGsendseq	int
,	O
iGremote_ack	int
)	O
>	O
iGremote_winsize	int
)	O
{	O
if	O
(	O
!	O
fgwait_for_packet	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int,int,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
TRUE	O
,	O
cGtimeout	int
,	O
cGretries	int
)	O
)	O
return	O
FALSE	O
;	O
}	O
while	O
(	O
CSEQDIFF	O
(	O
iGrecseq	int
,	O
iGlocal_ack	int
)	O
>	O
1	int
)	O
{	O
iGlocal_ack	int
=	O
INEXTSEQ	O
(	O
iGlocal_ack	int
)	O
;	O
if	O
(	O
!	O
fgsend_control	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
RR	O
,	O
iGlocal_ack	int
)	O
)	O
return	O
FALSE	O
;	O
}	O
iGlocal_ack	int
=	O
iGrecseq	int
;	O
z	*(char)
[	O
IFRAME_CONTROL	O
]	O
=	O
(	O
char	O
)	O
(	O
(	O
itt	int
<<	O
6	int
)	O
|	O
(	O
iGsendseq	int
<<	O
3	int
)	O
|	O
iGrecseq	int
)	O
;	O
iGsendseq	int
=	O
INEXTSEQ	O
(	O
iGsendseq	int
)	O
;	O
icheck	short
=	O
(	O
(	O
unsigned	O
short	O
)	O
(	O
(	O
0xaaaa	int
-	O
(	O
icheck	short
^	O
(	O
z	*(char)
[	O
IFRAME_CONTROL	O
]	O
&	O
0xff	int
)	O
)	O
)	O
&	O
0xffff	int
)	O
)	O
;	O
z	*(char)
[	O
IFRAME_CHECKLOW	O
]	O
=	O
(	O
char	O
)	O
(	O
icheck	short
&	O
0xff	int
)	O
;	O
z	*(char)
[	O
IFRAME_CHECKHIGH	O
]	O
=	O
(	O
char	O
)	O
(	O
icheck	short
>>	O
8	int
)	O
;	O
z	*(char)
[	O
IFRAME_XOR	O
]	O
=	O
(	O
char	O
)	O
(	O
z	*(char)
[	O
IFRAME_K	O
]	O
^	O
z	*(char)
[	O
IFRAME_CHECKLOW	O
]	O
^	O
z	*(char)
[	O
IFRAME_CHECKHIGH	O
]	O
^	O
z	*(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
;	O
++	O
cGsent_packets	long
;	O
if	O
(	O
iGretransmit_seq	int
!=	O
-	O
1	int
)	O
{	O
++	O
cGdelayed_packets	long
;	O
return	O
TRUE	O
;	O
}	O
DEBUG_MESSAGE2	O
(	O
DEBUG_PROTO	O
,	O
"fgsenddata: Sending packet %d (%d bytes)"	*(char)
,	O
CONTROL_XXX	O
(	O
z	*(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
,	O
cdata	long
)	O
;	O
return	O
fsend_data	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
->	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
z	*(char)
,	O
CFRAMELEN	O
+	O
csize	long
,	O
TRUE	O
)	O
;	O
}	O
static	O
char	O
*	O
zgadjust_ack	(int)->(*(char))
(	O
iseq	int
)	O
int	O
iseq	int
;	O
{	O
register	O
char	O
*	O
z	*(char)
;	O
unsigned	O
short	O
icheck	short
;	O
z	*(char)
=	O
azGsendbuffers	array(*(char))
[	O
iseq	int
]	O
;	O
if	O
(	O
*	O
z	*(char)
==	O
'\0'	O
)	O
++	O
z	*(char)
;	O
if	O
(	O
*	O
z	*(char)
==	O
'\0'	O
)	O
++	O
z	*(char)
;	O
if	O
(	O
CONTROL_YYY	O
(	O
z	*(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
==	O
iGrecseq	int
)	O
return	O
z	*(char)
;	O
icheck	short
=	O
(	O
unsigned	O
short	O
)	O
(	O
(	O
(	O
z	*(char)
[	O
IFRAME_CHECKHIGH	O
]	O
&	O
0xff	int
)	O
<<	O
8	int
)	O
|	O
(	O
z	*(char)
[	O
IFRAME_CHECKLOW	O
]	O
&	O
0xff	int
)	O
)	O
;	O
icheck	short
=	O
(	O
(	O
unsigned	O
short	O
)	O
(	O
(	O
(	O
0xaaaa	int
-	O
icheck	short
)	O
^	O
(	O
z	*(char)
[	O
IFRAME_CONTROL	O
]	O
&	O
0xff	int
)	O
)	O
&	O
0xffff	int
)	O
)	O
;	O
z	*(char)
[	O
IFRAME_CONTROL	O
]	O
=	O
(	O
char	O
)	O
(	O
(	O
z	*(char)
[	O
IFRAME_CONTROL	O
]	O
&	O
~	O
07	int
)	O
|	O
iGrecseq	int
)	O
;	O
icheck	short
=	O
(	O
(	O
unsigned	O
short	O
)	O
(	O
(	O
0xaaaa	int
-	O
(	O
icheck	short
^	O
(	O
z	*(char)
[	O
IFRAME_CONTROL	O
]	O
&	O
0xff	int
)	O
)	O
)	O
&	O
0xffff	int
)	O
)	O
;	O
z	*(char)
[	O
IFRAME_CHECKLOW	O
]	O
=	O
(	O
char	O
)	O
(	O
icheck	short
&	O
0xff	int
)	O
;	O
z	*(char)
[	O
IFRAME_CHECKHIGH	O
]	O
=	O
(	O
char	O
)	O
(	O
icheck	short
>>	O
8	int
)	O
;	O
z	*(char)
[	O
IFRAME_XOR	O
]	O
=	O
(	O
char	O
)	O
(	O
z	*(char)
[	O
IFRAME_K	O
]	O
^	O
z	*(char)
[	O
IFRAME_CHECKLOW	O
]	O
^	O
z	*(char)
[	O
IFRAME_CHECKHIGH	O
]	O
^	O
z	*(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
;	O
return	O
z	*(char)
;	O
}	O
static	O
boolean	int
fgsend_control	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
ixxx	int
,	O
iyyy	int
)	O
struct	O
sdaemon	struct(*(void),*(char),int,*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)
*	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
;	O
int	O
ixxx	int
;	O
int	O
iyyy	int
;	O
{	O
char	O
ab	array(char)
[	O
CFRAMELEN	O
]	O
;	O
int	O
ictl	int
;	O
unsigned	O
short	O
icheck	short
;	O
if	O
(	O
FDEBUGGING	O
(	O
DEBUG_PROTO	O
)	O
||	O
(	O
FDEBUGGING	O
(	O
DEBUG_ABNORMAL	O
)	O
&&	O
ixxx	int
!=	O
RR	O
)	O
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_DEBUG	int
,	O
"fgsend_control: Sending control %s %d"	*(char)
,	O
azGcontrol	array(*(char))
[	O
ixxx	int
]	O
,	O
iyyy	int
)	O
;	O
ab	array(char)
[	O
IFRAME_DLE	O
]	O
=	O
DLE	O
;	O
ab	array(char)
[	O
IFRAME_K	O
]	O
=	O
KCONTROL	O
;	O
ictl	int
=	O
(	O
CONTROL	O
<<	O
6	int
)	O
|	O
(	O
ixxx	int
<<	O
3	int
)	O
|	O
iyyy	int
;	O
icheck	short
=	O
(	O
unsigned	O
short	O
)	O
(	O
0xaaaa	int
-	O
ictl	int
)	O
;	O
ab	array(char)
[	O
IFRAME_CHECKLOW	O
]	O
=	O
(	O
char	O
)	O
(	O
icheck	short
&	O
0xff	int
)	O
;	O
ab	array(char)
[	O
IFRAME_CHECKHIGH	O
]	O
=	O
(	O
char	O
)	O
(	O
icheck	short
>>	O
8	int
)	O
;	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
=	O
(	O
char	O
)	O
ictl	int
;	O
ab	array(char)
[	O
IFRAME_XOR	O
]	O
=	O
(	O
char	O
)	O
(	O
ab	array(char)
[	O
IFRAME_K	O
]	O
^	O
ab	array(char)
[	O
IFRAME_CHECKLOW	O
]	O
^	O
ab	array(char)
[	O
IFRAME_CHECKHIGH	O
]	O
^	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
;	O
return	O
fsend_data	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
->	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
ab	array(char)
,	O
(	O
size_t	long
)	O
CFRAMELEN	O
,	O
TRUE	O
)	O
;	O
}	O
boolean	int
fgwait	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
)	O
struct	O
sdaemon	struct(*(void),*(char),int,*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)
*	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
;	O
{	O
return	O
fgwait_for_packet	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int,int,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
FALSE	O
,	O
cGtimeout	int
,	O
cGretries	int
)	O
;	O
}	O
static	O
boolean	int
fgwait_for_packet	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int,int,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
freturncontrol	int
,	O
ctimeout	int
,	O
cretries	int
)	O
struct	O
sdaemon	struct(*(void),*(char),int,*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)
*	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
;	O
boolean	int
freturncontrol	int
;	O
int	O
ctimeout	int
;	O
int	O
cretries	int
;	O
{	O
int	O
ctimeouts	int
;	O
int	O
cgarbage	int
;	O
int	O
cshort	long
;	O
ctimeouts	int
=	O
0	int
;	O
cgarbage	int
=	O
0	int
;	O
cshort	long
=	O
0	int
;	O
while	O
(	O
TRUE	O
)	O
{	O
boolean	int
fexit	int
;	O
size_t	long
cneed	long
;	O
boolean	int
ffound	int
;	O
size_t	long
crec	long
;	O
if	O
(	O
!	O
fgprocess_data	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int,int,*(int),*(long),*(int))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
TRUE	O
,	O
freturncontrol	int
,	O
&	O
fexit	int
,	O
&	O
cneed	long
,	O
&	O
ffound	int
)	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
fexit	int
)	O
return	O
TRUE	O
;	O
DEBUG_MESSAGE1	O
(	O
DEBUG_PROTO	O
,	O
"fgwait_for_packet: Need %lu bytes"	*(char)
,	O
(	O
unsigned	O
long	O
)	O
cneed	long
)	O
;	O
if	O
(	O
ffound	int
)	O
{	O
ctimeouts	int
=	O
0	int
;	O
cgarbage	int
=	O
0	int
;	O
}	O
else	O
{	O
if	O
(	O
cgarbage	int
>	O
cGgarbage_data	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Too much unrecognized data"	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
if	O
(	O
!	O
freceive_data	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),long,*(long),int,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
->	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
cneed	long
,	O
&	O
crec	long
,	O
ctimeout	int
,	O
TRUE	O
)	O
)	O
return	O
FALSE	O
;	O
cgarbage	int
+=	O
crec	long
;	O
if	O
(	O
crec	long
!=	O
0	int
)	O
{	O
if	O
(	O
crec	long
>=	O
cneed	long
)	O
cshort	long
=	O
0	int
;	O
else	O
{	O
++	O
cshort	long
;	O
if	O
(	O
cshort	long
>	O
1	int
)	O
{	O
iPrecstart	int
=	O
(	O
iPrecstart	int
+	O
1	int
)	O
%	O
CRECBUFLEN	O
;	O
cshort	long
=	O
0	int
;	O
}	O
}	O
}	O
else	O
{	O
++	O
ctimeouts	int
;	O
if	O
(	O
ctimeouts	int
>	O
cretries	int
)	O
{	O
if	O
(	O
cretries	int
>	O
0	int
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Timed out waiting for packet"	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
INEXTSEQ	O
(	O
iGremote_ack	int
)	O
!=	O
iGsendseq	int
)	O
{	O
int	O
inext	int
;	O
char	O
*	O
zsend	*(char)
;	O
inext	int
=	O
INEXTSEQ	O
(	O
iGremote_ack	int
)	O
;	O
DEBUG_MESSAGE1	O
(	O
DEBUG_PROTO	O
|	O
DEBUG_ABNORMAL	O
,	O
"fgwait_for_packet: Resending packet %d"	*(char)
,	O
inext	int
)	O
;	O
++	O
cGresent_packets	long
;	O
zsend	*(char)
=	O
zgadjust_ack	(int)->(*(char))
(	O
inext	int
)	O
;	O
if	O
(	O
!	O
fsend_data	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
->	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zsend	*(char)
,	O
CFRAMELEN	O
+	O
CPACKLEN	O
(	O
zsend	*(char)
)	O
,	O
TRUE	O
)	O
)	O
return	O
FALSE	O
;	O
iGretransmit_seq	int
=	O
inext	int
;	O
}	O
else	O
{	O
if	O
(	O
iGlocal_ack	int
!=	O
iGrecseq	int
)	O
{	O
if	O
(	O
!	O
fgsend_acks	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
)	O
)	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
!	O
fgsend_control	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
RJ	O
,	O
iGrecseq	int
)	O
)	O
return	O
FALSE	O
;	O
}	O
}	O
}	O
}	O
static	O
boolean	int
fgsend_acks	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
)	O
struct	O
sdaemon	struct(*(void),*(char),int,*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)
*	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
;	O
{	O
while	O
(	O
iGlocal_ack	int
!=	O
iGrecseq	int
)	O
{	O
iGlocal_ack	int
=	O
INEXTSEQ	O
(	O
iGlocal_ack	int
)	O
;	O
if	O
(	O
!	O
fgsend_control	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
RR	O
,	O
iGlocal_ack	int
)	O
)	O
return	O
FALSE	O
;	O
}	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
fggot_ack	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
iack	int
)	O
struct	O
sdaemon	struct(*(void),*(char),int,*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)
*	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
;	O
int	O
iack	int
;	O
{	O
int	O
inext	int
;	O
char	O
*	O
zsend	*(char)
;	O
if	O
(	O
cGerror_level	long
>	O
0	int
&&	O
iGretransmit_seq	int
==	O
-	O
1	int
&&	O
cGsent_packets	long
%	O
cGerror_decay	int
==	O
0	int
)	O
--	O
cGerror_level	long
;	O
cGexpect_bad_order	int
=	O
0	int
;	O
if	O
(	O
iack	int
<	O
iGremote_ack	int
)	O
uwindow_acked	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int)->(void)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
FALSE	O
)	O
;	O
iGremote_ack	int
=	O
iack	int
;	O
if	O
(	O
iGretransmit_seq	int
==	O
-	O
1	int
)	O
return	O
TRUE	O
;	O
inext	int
=	O
INEXTSEQ	O
(	O
iGretransmit_seq	int
)	O
;	O
if	O
(	O
inext	int
==	O
iGsendseq	int
)	O
iGretransmit_seq	int
=	O
-	O
1	int
;	O
else	O
{	O
DEBUG_MESSAGE1	O
(	O
DEBUG_PROTO	O
,	O
"fggot_ack: Sending packet %d"	*(char)
,	O
inext	int
)	O
;	O
++	O
cGresent_packets	long
;	O
zsend	*(char)
=	O
zgadjust_ack	(int)->(*(char))
(	O
inext	int
)	O
;	O
if	O
(	O
!	O
fsend_data	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
->	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zsend	*(char)
,	O
CFRAMELEN	O
+	O
CPACKLEN	O
(	O
zsend	*(char)
)	O
,	O
TRUE	O
)	O
)	O
return	O
FALSE	O
;	O
inext	int
=	O
INEXTSEQ	O
(	O
inext	int
)	O
;	O
if	O
(	O
inext	int
==	O
iGsendseq	int
)	O
iGretransmit_seq	int
=	O
-	O
1	int
;	O
else	O
{	O
DEBUG_MESSAGE1	O
(	O
DEBUG_PROTO	O
,	O
"fggot_ack: Sending packet %d"	*(char)
,	O
inext	int
)	O
;	O
++	O
cGresent_packets	long
;	O
zsend	*(char)
=	O
zgadjust_ack	(int)->(*(char))
(	O
inext	int
)	O
;	O
if	O
(	O
!	O
fsend_data	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
->	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zsend	*(char)
,	O
CFRAMELEN	O
+	O
CPACKLEN	O
(	O
zsend	*(char)
)	O
,	O
TRUE	O
)	O
)	O
return	O
FALSE	O
;	O
iGretransmit_seq	int
=	O
inext	int
;	O
}	O
}	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
fgcheck_errors	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
)	O
struct	O
sdaemon	struct(*(void),*(char),int,*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)
*	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
;	O
{	O
if	O
(	O
cGerror_level	long
>	O
cGmax_errors	int
&&	O
cGmax_errors	int
>=	O
0	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Too many '%c' protocol errors"	*(char)
,	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
->	O
qproto	*(struct)
->	O
bname	char
)	O
;	O
return	O
FALSE	O
;	O
}	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
fgprocess_data	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int,int,*(int),*(long),*(int))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
fdoacks	int
,	O
freturncontrol	int
,	O
pfexit	*(int)
,	O
pcneed	*(long)
,	O
pffound	*(int)
)	O
struct	O
sdaemon	struct(*(void),*(char),int,*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)
*	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
;	O
boolean	int
fdoacks	int
;	O
boolean	int
freturncontrol	int
;	O
boolean	int
*	O
pfexit	*(int)
;	O
size_t	long
*	O
pcneed	*(long)
;	O
boolean	int
*	O
pffound	*(int)
;	O
{	O
*	O
pfexit	*(int)
=	O
FALSE	O
;	O
if	O
(	O
pffound	*(int)
!=	O
NULL	O
)	O
*	O
pffound	*(int)
=	O
FALSE	O
;	O
while	O
(	O
iPrecstart	int
!=	O
iPrecend	int
)	O
{	O
char	O
ab	array(char)
[	O
CFRAMELEN	O
]	O
;	O
int	O
i	int
,	O
iget	int
,	O
cwant	int
;	O
unsigned	O
short	O
ihdrcheck	short
,	O
idatcheck	short
;	O
const	O
char	O
*	O
zfirst	*(char)
,	O
*	O
zsecond	*(char)
;	O
int	O
cfirst	long
,	O
csecond	long
;	O
boolean	int
fduprr	int
;	O
if	O
(	O
abPrecbuf	array(char)
[	O
iPrecstart	int
]	O
!=	O
DLE	O
)	O
{	O
char	O
*	O
zdle	*(char)
;	O
cfirst	long
=	O
iPrecend	int
-	O
iPrecstart	int
;	O
if	O
(	O
cfirst	long
<	O
0	int
)	O
cfirst	long
=	O
CRECBUFLEN	O
-	O
iPrecstart	int
;	O
zdle	*(char)
=	O
memchr	(*(void),int,long)->(*(void))
(	O
abPrecbuf	array(char)
+	O
iPrecstart	int
,	O
DLE	O
,	O
(	O
size_t	long
)	O
cfirst	long
)	O
;	O
if	O
(	O
zdle	*(char)
==	O
NULL	O
)	O
{	O
iPrecstart	int
=	O
(	O
iPrecstart	int
+	O
cfirst	long
)	O
%	O
CRECBUFLEN	O
;	O
continue	O
;	O
}	O
iPrecstart	int
+=	O
zdle	*(char)
-	O
(	O
abPrecbuf	array(char)
+	O
iPrecstart	int
)	O
;	O
}	O
for	O
(	O
i	int
=	O
0	int
,	O
iget	int
=	O
iPrecstart	int
;	O
i	int
<	O
CFRAMELEN	O
&&	O
iget	int
!=	O
iPrecend	int
;	O
i	int
++	O
,	O
iget	int
=	O
(	O
iget	int
+	O
1	int
)	O
%	O
CRECBUFLEN	O
)	O
ab	array(char)
[	O
i	int
]	O
=	O
abPrecbuf	array(char)
[	O
iget	int
]	O
;	O
if	O
(	O
i	int
<	O
CFRAMELEN	O
)	O
{	O
if	O
(	O
pcneed	*(long)
!=	O
NULL	O
)	O
*	O
pcneed	*(long)
=	O
CFRAMELEN	O
-	O
i	int
;	O
return	O
TRUE	O
;	O
}	O
if	O
(	O
ab	array(char)
[	O
IFRAME_DLE	O
]	O
!=	O
DLE	O
||	O
ab	array(char)
[	O
IFRAME_K	O
]	O
<	O
1	int
||	O
ab	array(char)
[	O
IFRAME_K	O
]	O
>	O
9	int
||	O
ab	array(char)
[	O
IFRAME_XOR	O
]	O
!=	O
(	O
ab	array(char)
[	O
IFRAME_K	O
]	O
^	O
ab	array(char)
[	O
IFRAME_CHECKLOW	O
]	O
^	O
ab	array(char)
[	O
IFRAME_CHECKHIGH	O
]	O
^	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
||	O
CONTROL_TT	O
(	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
==	O
ALTCHAN	O
)	O
{	O
++	O
cGbad_hdr	long
;	O
++	O
cGerror_level	long
;	O
DEBUG_MESSAGE4	O
(	O
DEBUG_PROTO	O
|	O
DEBUG_ABNORMAL	O
,	O
"fgprocess_data: Bad header: K %d TT %d XOR byte %d calc %d"	*(char)
,	O
ab	array(char)
[	O
IFRAME_K	O
]	O
&	O
0xff	int
,	O
CONTROL_TT	O
(	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
,	O
ab	array(char)
[	O
IFRAME_XOR	O
]	O
&	O
0xff	int
,	O
(	O
ab	array(char)
[	O
IFRAME_K	O
]	O
^	O
ab	array(char)
[	O
IFRAME_CHECKLOW	O
]	O
^	O
ab	array(char)
[	O
IFRAME_CHECKHIGH	O
]	O
^	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
&	O
0xff	int
)	O
;	O
if	O
(	O
!	O
fgcheck_errors	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
)	O
)	O
return	O
FALSE	O
;	O
iPrecstart	int
=	O
(	O
iPrecstart	int
+	O
1	int
)	O
%	O
CRECBUFLEN	O
;	O
continue	O
;	O
}	O
zfirst	*(char)
=	O
abPrecbuf	array(char)
+	O
iPrecstart	int
+	O
CFRAMELEN	O
;	O
cfirst	long
=	O
0	int
;	O
zsecond	*(char)
=	O
NULL	O
;	O
csecond	long
=	O
0	int
;	O
if	O
(	O
ab	array(char)
[	O
IFRAME_K	O
]	O
==	O
KCONTROL	O
)	O
{	O
if	O
(	O
CONTROL_TT	O
(	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
!=	O
CONTROL	O
)	O
{	O
++	O
cGbad_hdr	long
;	O
++	O
cGerror_level	long
;	O
DEBUG_MESSAGE0	O
(	O
DEBUG_PROTO	O
|	O
DEBUG_ABNORMAL	O
,	O
"fgprocess_data: Bad header: control packet with data"	*(char)
)	O
;	O
if	O
(	O
!	O
fgcheck_errors	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
)	O
)	O
return	O
FALSE	O
;	O
iPrecstart	int
=	O
(	O
iPrecstart	int
+	O
1	int
)	O
%	O
CRECBUFLEN	O
;	O
continue	O
;	O
}	O
idatcheck	short
=	O
(	O
unsigned	O
short	O
)	O
(	O
0xaaaa	int
-	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
;	O
cwant	int
=	O
0	int
;	O
}	O
else	O
{	O
int	O
cinbuf	int
;	O
unsigned	O
short	O
icheck	short
;	O
if	O
(	O
CONTROL_TT	O
(	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
==	O
CONTROL	O
)	O
{	O
++	O
cGbad_hdr	long
;	O
++	O
cGerror_level	long
;	O
DEBUG_MESSAGE0	O
(	O
DEBUG_PROTO	O
|	O
DEBUG_ABNORMAL	O
,	O
"fgprocess_data: Bad header: data packet is type CONTROL"	*(char)
)	O
;	O
if	O
(	O
!	O
fgcheck_errors	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
)	O
)	O
return	O
FALSE	O
;	O
iPrecstart	int
=	O
(	O
iPrecstart	int
+	O
1	int
)	O
%	O
CRECBUFLEN	O
;	O
continue	O
;	O
}	O
cinbuf	int
=	O
iPrecend	int
-	O
iPrecstart	int
;	O
if	O
(	O
cinbuf	int
<	O
0	int
)	O
cinbuf	int
+=	O
CRECBUFLEN	O
;	O
cinbuf	int
-=	O
CFRAMELEN	O
;	O
cwant	int
=	O
(	O
int	O
)	O
CPACKLEN	O
(	O
ab	array(char)
)	O
;	O
if	O
(	O
cinbuf	int
<	O
cwant	int
)	O
{	O
if	O
(	O
pcneed	*(long)
!=	O
NULL	O
)	O
*	O
pcneed	*(long)
=	O
cwant	int
-	O
cinbuf	int
;	O
return	O
TRUE	O
;	O
}	O
if	O
(	O
iPrecend	int
>=	O
iPrecstart	int
)	O
cfirst	long
=	O
cwant	int
;	O
else	O
{	O
cfirst	long
=	O
CRECBUFLEN	O
-	O
(	O
iPrecstart	int
+	O
CFRAMELEN	O
)	O
;	O
if	O
(	O
cfirst	long
>=	O
cwant	int
)	O
cfirst	long
=	O
cwant	int
;	O
else	O
if	O
(	O
cfirst	long
>	O
0	int
)	O
{	O
zsecond	*(char)
=	O
abPrecbuf	array(char)
;	O
csecond	long
=	O
cwant	int
-	O
cfirst	long
;	O
}	O
else	O
{	O
zfirst	*(char)
=	O
abPrecbuf	array(char)
-	O
cfirst	long
;	O
cfirst	long
=	O
cwant	int
;	O
}	O
}	O
if	O
(	O
csecond	long
==	O
0	int
)	O
icheck	short
=	O
(	O
unsigned	O
short	O
)	O
igchecksum	(*(char),long)->(int)
(	O
zfirst	*(char)
,	O
(	O
size_t	long
)	O
cfirst	long
)	O
;	O
else	O
icheck	short
=	O
(	O
unsigned	O
short	O
)	O
igchecksum2	(*(char),long,*(char),long)->(int)
(	O
zfirst	*(char)
,	O
(	O
size_t	long
)	O
cfirst	long
,	O
zsecond	*(char)
,	O
(	O
size_t	long
)	O
csecond	long
)	O
;	O
idatcheck	short
=	O
(	O
(	O
unsigned	O
short	O
)	O
(	O
(	O
(	O
0xaaaa	int
-	O
(	O
icheck	short
^	O
(	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
&	O
0xff	int
)	O
)	O
)	O
&	O
0xffff	int
)	O
)	O
)	O
;	O
}	O
ihdrcheck	short
=	O
(	O
unsigned	O
short	O
)	O
(	O
(	O
(	O
ab	array(char)
[	O
IFRAME_CHECKHIGH	O
]	O
&	O
0xff	int
)	O
<<	O
8	int
)	O
|	O
(	O
ab	array(char)
[	O
IFRAME_CHECKLOW	O
]	O
&	O
0xff	int
)	O
)	O
;	O
if	O
(	O
ihdrcheck	short
!=	O
idatcheck	short
)	O
{	O
DEBUG_MESSAGE2	O
(	O
DEBUG_PROTO	O
|	O
DEBUG_ABNORMAL	O
,	O
"fgprocess_data: Bad checksum: header 0x%x, data 0x%x"	*(char)
,	O
ihdrcheck	short
,	O
idatcheck	short
)	O
;	O
++	O
cGbad_checksum	long
;	O
++	O
cGerror_level	long
;	O
if	O
(	O
!	O
fgcheck_errors	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
)	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
CONTROL_TT	O
(	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
!=	O
CONTROL	O
)	O
{	O
if	O
(	O
iGrecseq	int
!=	O
iGlocal_ack	int
)	O
{	O
if	O
(	O
!	O
fgsend_acks	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
)	O
)	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
CONTROL_XXX	O
(	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
==	O
INEXTSEQ	O
(	O
iGrecseq	int
)	O
)	O
{	O
if	O
(	O
!	O
fgsend_control	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
RJ	O
,	O
iGrecseq	int
)	O
)	O
return	O
FALSE	O
;	O
cGexpect_bad_order	int
+=	O
iGrequest_winsize	int
-	O
1	int
;	O
}	O
}	O
iPrecstart	int
=	O
(	O
iPrecstart	int
+	O
1	int
)	O
%	O
CRECBUFLEN	O
;	O
continue	O
;	O
}	O
iPrecstart	int
=	O
(	O
iPrecstart	int
+	O
cwant	int
+	O
CFRAMELEN	O
)	O
%	O
CRECBUFLEN	O
;	O
iGpacket_control	int
=	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
&	O
0xff	int
;	O
fduprr	int
=	O
FALSE	O
;	O
if	O
(	O
cGremote_rejects	long
==	O
0	int
&&	O
CONTROL_TT	O
(	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
==	O
CONTROL	O
&&	O
CONTROL_XXX	O
(	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
==	O
RR	O
&&	O
iGremote_ack	int
==	O
CONTROL_YYY	O
(	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
&&	O
INEXTSEQ	O
(	O
iGremote_ack	int
)	O
!=	O
iGsendseq	int
&&	O
iGretransmit_seq	int
==	O
-	O
1	int
)	O
{	O
DEBUG_MESSAGE0	O
(	O
DEBUG_PROTO	O
|	O
DEBUG_ABNORMAL	O
,	O
"fgprocess_data: Treating duplicate RR as RJ"	*(char)
)	O
;	O
fduprr	int
=	O
TRUE	O
;	O
}	O
if	O
(	O
(	O
CONTROL_TT	O
(	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
!=	O
CONTROL	O
&&	O
CONTROL_XXX	O
(	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
==	O
INEXTSEQ	O
(	O
iGrecseq	int
)	O
)	O
||	O
(	O
CONTROL_XXX	O
(	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
==	O
RR	O
&&	O
!	O
fduprr	int
)	O
)	O
{	O
if	O
(	O
!	O
fggot_ack	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
CONTROL_YYY	O
(	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
)	O
)	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
CONTROL_TT	O
(	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
!=	O
CONTROL	O
)	O
{	O
if	O
(	O
CONTROL_XXX	O
(	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
!=	O
INEXTSEQ	O
(	O
iGrecseq	int
)	O
)	O
{	O
DEBUG_MESSAGE2	O
(	O
DEBUG_PROTO	O
|	O
DEBUG_ABNORMAL	O
,	O
"fgprocess_data: Got packet %d; expected %d"	*(char)
,	O
CONTROL_XXX	O
(	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
,	O
INEXTSEQ	O
(	O
iGrecseq	int
)	O
)	O
;	O
if	O
(	O
cGexpect_bad_order	int
>	O
0	int
)	O
--	O
cGexpect_bad_order	int
;	O
else	O
{	O
++	O
cGbad_order	long
;	O
++	O
cGerror_level	long
;	O
if	O
(	O
!	O
fgcheck_errors	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
)	O
)	O
return	O
FALSE	O
;	O
}	O
continue	O
;	O
}	O
++	O
cGrec_packets	long
;	O
if	O
(	O
cGerror_level	long
>	O
0	int
&&	O
cGrec_packets	long
%	O
cGerror_decay	int
==	O
0	int
)	O
--	O
cGerror_level	long
;	O
cGexpect_bad_order	int
=	O
0	int
;	O
iGrecseq	int
=	O
INEXTSEQ	O
(	O
iGrecseq	int
)	O
;	O
DEBUG_MESSAGE1	O
(	O
DEBUG_PROTO	O
,	O
"fgprocess_data: Got packet %d"	*(char)
,	O
iGrecseq	int
)	O
;	O
if	O
(	O
pffound	*(int)
!=	O
NULL	O
)	O
*	O
pffound	*(int)
=	O
TRUE	O
;	O
if	O
(	O
fdoacks	int
)	O
{	O
if	O
(	O
!	O
fgsend_acks	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
)	O
)	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
CONTROL_TT	O
(	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
==	O
SHORTDATA	O
)	O
{	O
int	O
cshort	long
,	O
cmove	int
;	O
if	O
(	O
(	O
zfirst	*(char)
[	O
0	int
]	O
&	O
0x80	int
)	O
==	O
0	int
)	O
{	O
cshort	long
=	O
zfirst	*(char)
[	O
0	int
]	O
&	O
0xff	int
;	O
cmove	int
=	O
1	int
;	O
}	O
else	O
{	O
int	O
cbyte2	int
;	O
if	O
(	O
cfirst	long
>	O
1	int
)	O
cbyte2	int
=	O
zfirst	*(char)
[	O
1	int
]	O
&	O
0xff	int
;	O
else	O
cbyte2	int
=	O
zsecond	*(char)
[	O
0	int
]	O
&	O
0xff	int
;	O
cshort	long
=	O
(	O
zfirst	*(char)
[	O
0	int
]	O
&	O
0x7f	int
)	O
+	O
(	O
cbyte2	int
<<	O
7	int
)	O
;	O
cmove	int
=	O
2	int
;	O
}	O
DEBUG_MESSAGE1	O
(	O
DEBUG_PROTO	O
,	O
"fgprocess_data: Packet short by %d"	*(char)
,	O
cshort	long
)	O
;	O
if	O
(	O
cfirst	long
>	O
cmove	int
)	O
{	O
zfirst	*(char)
+=	O
cmove	int
;	O
cfirst	long
-=	O
cmove	int
;	O
}	O
else	O
{	O
zfirst	*(char)
=	O
zsecond	*(char)
+	O
(	O
cmove	int
-	O
cfirst	long
)	O
;	O
cfirst	long
=	O
csecond	long
-	O
(	O
cmove	int
-	O
cfirst	long
)	O
;	O
csecond	long
=	O
0	int
;	O
}	O
cshort	long
-=	O
cmove	int
;	O
if	O
(	O
csecond	long
>=	O
cshort	long
)	O
csecond	long
-=	O
cshort	long
;	O
else	O
{	O
cfirst	long
-=	O
cshort	long
-	O
csecond	long
;	O
csecond	long
=	O
0	int
;	O
}	O
if	O
(	O
cfirst	long
<	O
0	int
)	O
cfirst	long
=	O
0	int
;	O
}	O
if	O
(	O
!	O
fgot_data	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),*(char),long,*(char),long,int,int,long,int,*(int))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
zfirst	*(char)
,	O
(	O
size_t	long
)	O
cfirst	long
,	O
zsecond	*(char)
,	O
(	O
size_t	long
)	O
csecond	long
,	O
-	O
1	int
,	O
-	O
1	int
,	O
(	O
long	O
)	O
-	O
1	int
,	O
INEXTSEQ	O
(	O
iGremote_ack	int
)	O
==	O
iGsendseq	int
,	O
pfexit	*(int)
)	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
*	O
pfexit	*(int)
)	O
return	O
TRUE	O
;	O
if	O
(	O
freturncontrol	int
)	O
{	O
*	O
pfexit	*(int)
=	O
TRUE	O
;	O
return	O
TRUE	O
;	O
}	O
continue	O
;	O
}	O
if	O
(	O
FDEBUGGING	O
(	O
DEBUG_PROTO	O
)	O
||	O
(	O
FDEBUGGING	O
(	O
DEBUG_ABNORMAL	O
)	O
&&	O
CONTROL_XXX	O
(	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
!=	O
RR	O
)	O
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_DEBUG	int
,	O
"fgprocess_data: Got control %s %d"	*(char)
,	O
azGcontrol	array(*(char))
[	O
CONTROL_XXX	O
(	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
]	O
,	O
CONTROL_YYY	O
(	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
)	O
;	O
switch	O
(	O
CONTROL_XXX	O
(	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
)	O
{	O
case	O
CLOSE	O
:	O
if	O
(	O
fLog_sighup	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Received unexpected CLOSE packet"	*(char)
)	O
;	O
(	O
void	O
)	O
fgsend_control	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),int,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
CLOSE	O
,	O
0	int
)	O
;	O
}	O
return	O
FALSE	O
;	O
case	O
RR	O
:	O
if	O
(	O
!	O
fduprr	int
)	O
break	O
;	O
case	O
RJ	O
:	O
iGremote_ack	int
=	O
CONTROL_YYY	O
(	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
;	O
iGretransmit_seq	int
=	O
INEXTSEQ	O
(	O
iGremote_ack	int
)	O
;	O
if	O
(	O
iGretransmit_seq	int
==	O
iGsendseq	int
)	O
iGretransmit_seq	int
=	O
-	O
1	int
;	O
else	O
{	O
char	O
*	O
zpack	*(char)
;	O
DEBUG_MESSAGE2	O
(	O
DEBUG_PROTO	O
|	O
DEBUG_ABNORMAL	O
,	O
"fgprocess_data: Remote reject: next %d resending %d"	*(char)
,	O
iGsendseq	int
,	O
iGretransmit_seq	int
)	O
;	O
++	O
cGresent_packets	long
;	O
if	O
(	O
fduprr	int
)	O
++	O
cGremote_duprrs	long
;	O
else	O
++	O
cGremote_rejects	long
;	O
++	O
cGerror_level	long
;	O
if	O
(	O
!	O
fgcheck_errors	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
)	O
)	O
return	O
FALSE	O
;	O
zpack	*(char)
=	O
zgadjust_ack	(int)->(*(char))
(	O
iGretransmit_seq	int
)	O
;	O
if	O
(	O
!	O
fsend_data	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
->	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zpack	*(char)
,	O
CFRAMELEN	O
+	O
CPACKLEN	O
(	O
zpack	*(char)
)	O
,	O
TRUE	O
)	O
)	O
return	O
FALSE	O
;	O
}	O
break	O
;	O
case	O
SRJ	O
:	O
DEBUG_MESSAGE1	O
(	O
DEBUG_PROTO	O
|	O
DEBUG_ABNORMAL	O
,	O
"fgprocess_data: Selective reject of %d"	*(char)
,	O
CONTROL_YYY	O
(	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
)	O
;	O
{	O
char	O
*	O
zpack	*(char)
;	O
++	O
cGresent_packets	long
;	O
++	O
cGremote_rejects	long
;	O
++	O
cGerror_level	long
;	O
zpack	*(char)
=	O
zgadjust_ack	(int)->(*(char))
(	O
CONTROL_YYY	O
(	O
ab	array(char)
[	O
IFRAME_CONTROL	O
]	O
)	O
)	O
;	O
if	O
(	O
!	O
fsend_data	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
->	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zpack	*(char)
,	O
CFRAMELEN	O
+	O
CPACKLEN	O
(	O
zpack	*(char)
)	O
,	O
TRUE	O
)	O
)	O
return	O
FALSE	O
;	O
}	O
break	O
;	O
case	O
INITC	O
:	O
case	O
INITB	O
:	O
case	O
INITA	O
:	O
break	O
;	O
}	O
if	O
(	O
freturncontrol	int
)	O
{	O
*	O
pfexit	*(int)
=	O
TRUE	O
;	O
return	O
TRUE	O
;	O
}	O
}	O
if	O
(	O
pcneed	*(long)
!=	O
NULL	O
)	O
*	O
pcneed	*(long)
=	O
CFRAMELEN	O
;	O
return	O
TRUE	O
;	O
}	O
static	O
int	O
igchecksum	(*(char),long)->(int)
(	O
z	*(char)
,	O
c	long
)	O
register	O
const	O
char	O
*	O
z	*(char)
;	O
register	O
size_t	long
c	long
;	O
{	O
register	O
unsigned	O
long	O
ichk1	long
,	O
ichk2	long
;	O
ichk1	long
=	O
0xffff	int
;	O
ichk2	long
=	O
0	int
;	O
do	O
{	O
register	O
unsigned	O
int	O
b	int
;	O
ITERATION	O
;	O
ITERATION	O
;	O
ITERATION	O
;	O
ITERATION	O
;	O
}	O
while	O
(	O
c	long
>	O
0	int
)	O
;	O
return	O
ichk1	long
&	O
0xffff	int
;	O
}	O
static	O
int	O
igchecksum2	(*(char),long,*(char),long)->(int)
(	O
zfirst	*(char)
,	O
cfirst	long
,	O
zsecond	*(char)
,	O
csecond	long
)	O
const	O
char	O
*	O
zfirst	*(char)
;	O
size_t	long
cfirst	long
;	O
const	O
char	O
*	O
zsecond	*(char)
;	O
size_t	long
csecond	long
;	O
{	O
register	O
unsigned	O
long	O
ichk1	long
,	O
ichk2	long
;	O
register	O
const	O
char	O
*	O
z	*(char)
;	O
register	O
size_t	long
c	long
;	O
z	*(char)
=	O
zfirst	*(char)
;	O
c	long
=	O
cfirst	long
+	O
csecond	long
;	O
ichk1	long
=	O
0xffff	int
;	O
ichk2	long
=	O
0	int
;	O
do	O
{	O
register	O
unsigned	O
int	O
b	int
;	O
ITERATION	O
;	O
--	O
cfirst	long
;	O
if	O
(	O
cfirst	long
==	O
0	int
)	O
z	*(char)
=	O
zsecond	*(char)
;	O
}	O
while	O
(	O
c	long
>	O
0	int
)	O
;	O
return	O
ichk1	long
&	O
0xffff	int
;	O
}	O
