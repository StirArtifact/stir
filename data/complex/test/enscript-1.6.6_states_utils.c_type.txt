static	O
RE_TRANSLATE_TYPE	O
case_insensitive_translate	*(char)
=	O
NULL	O
;	O
List	struct(*(struct(*(struct(*`,*`)),*(void))),*(struct(*(struct(*`,*`)),*(void))))
*	O
list	()->(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))
(	O
)	O
{	O
return	O
(	O
List	struct(*(struct(*(struct(*`,*`)),*(void))),*(struct(*(struct(*`,*`)),*(void))))
*	O
)	O
xcalloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
List	struct(*(struct(*(struct(*`,*`)),*(void))),*(struct(*(struct(*`,*`)),*(void))))
)	O
)	O
;	O
}	O
void	O
list_prepend	(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))),*(void))->(void)
(	O
list	()->(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))
,	O
data	*(void)
)	O
List	struct(*(struct(*(struct(*`,*`)),*(void))),*(struct(*(struct(*`,*`)),*(void))))
*	O
list	()->(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))
;	O
void	O
*	O
data	*(void)
;	O
{	O
ListItem	struct(*(struct(*(struct(*`,*`)),*(void))),*(void))
*	O
item	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
item	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
(	O
ListItem	struct(*(struct(*(struct(*`,*`)),*(void))),*(void))
*	O
)	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
item	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
)	O
;	O
item	*(struct(*(struct(*(struct`),*(void))),*(void)))
->	O
data	*(void)
=	O
data	*(void)
;	O
item	*(struct(*(struct(*(struct`),*(void))),*(void)))
->	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
list	()->(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))
->	O
head	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
list	()->(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))
->	O
head	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
item	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
if	O
(	O
list	()->(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))
->	O
tail	*(struct(*(struct(*(struct`),*(void))),*(void)))
==	O
NULL	O
)	O
list	()->(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))
->	O
tail	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
item	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
}	O
void	O
list_append	(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))),*(void))->(void)
(	O
list	()->(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))
,	O
data	*(void)
)	O
List	struct(*(struct(*(struct(*`,*`)),*(void))),*(struct(*(struct(*`,*`)),*(void))))
*	O
list	()->(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))
;	O
void	O
*	O
data	*(void)
;	O
{	O
ListItem	struct(*(struct(*(struct(*`,*`)),*(void))),*(void))
*	O
item	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
item	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
(	O
ListItem	struct(*(struct(*(struct(*`,*`)),*(void))),*(void))
*	O
)	O
xcalloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
*	O
item	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
)	O
;	O
item	*(struct(*(struct(*(struct`),*(void))),*(void)))
->	O
data	*(void)
=	O
data	*(void)
;	O
if	O
(	O
list	()->(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))
->	O
tail	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
list	()->(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))
->	O
tail	*(struct(*(struct(*(struct`),*(void))),*(void)))
->	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
item	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
else	O
list	()->(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))
->	O
head	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
item	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
list	()->(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))
->	O
tail	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
item	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
}	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
node_alloc	(enum(int,int,int,int,int,int,int))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
type	enum(int,int,int,int,int,int,int)
)	O
NodeType	enum(int,int,int,int,int,int,int)
type	enum(int,int,int,int,int,int,int)
;	O
{	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
n	long
;	O
n	long
=	O
(	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
)	O
xcalloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
*	O
n	long
)	O
)	O
;	O
n	long
->	O
type	enum(int,int,int,int,int,int,int)
=	O
type	enum(int,int,int,int,int,int,int)
;	O
n	long
->	O
refcount	int
=	O
1	int
;	O
n	long
->	O
linenum	int
=	O
linenum	int
;	O
n	long
->	O
filename	*(char)
=	O
yyin_name	*(char)
;	O
if	O
(	O
type	enum(int,int,int,int,int,int,int)
==	O
nREGEXP	int
)	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
re	struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int)))
.	O
compiled	struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)
.	O
fastmap	*(char)
=	O
xmalloc	(long)->(*(void))
(	O
256	int
)	O
;	O
return	O
n	long
;	O
}	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
node_copy	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
n	long
)	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
n	long
;	O
{	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
;	O
int	O
i	int
;	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
=	O
node_alloc	(enum(int,int,int,int,int,int,int))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
n	long
->	O
type	enum(int,int,int,int,int,int,int)
)	O
;	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
linenum	int
=	O
n	long
->	O
linenum	int
;	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
filename	*(char)
=	O
n	long
->	O
filename	*(char)
;	O
switch	O
(	O
n	long
->	O
type	enum(int,int,int,int,int,int,int)
)	O
{	O
case	O
nVOID	int
:	O
break	O
;	O
case	O
nSTRING	int
:	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
len	int
=	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
len	int
;	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
data	*(void)
=	O
(	O
char	O
*	O
)	O
xmalloc	(long)->(*(void))
(	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
len	int
+	O
1	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
data	*(void)
,	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
data	*(void)
,	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
len	int
)	O
;	O
break	O
;	O
case	O
nREGEXP	int
:	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
re	struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int)))
.	O
data	*(void)
=	O
xstrdup	(*(char))->(*(char))
(	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
re	struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int)))
.	O
data	*(void)
)	O
;	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
re	struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int)))
.	O
len	int
=	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
re	struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int)))
.	O
len	int
;	O
break	O
;	O
case	O
nINTEGER	int
:	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
=	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
;	O
break	O
;	O
case	O
nREAL	int
:	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
real	double
=	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
real	double
;	O
break	O
;	O
case	O
nSYMBOL	int
:	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
=	O
xstrdup	(*(char))->(*(char))
(	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
)	O
;	O
break	O
;	O
case	O
nARRAY	int
:	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
.	O
len	int
=	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
.	O
len	int
;	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
.	O
allocated	long
=	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
.	O
len	int
+	O
1	int
;	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
=	O
(	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
*	O
)	O
xcalloc	(long,long)->(*(void))
(	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
.	O
allocated	long
,	O
sizeof	O
(	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
)	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
.	O
len	int
;	O
i	int
++	O
)	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
[	O
i	int
]	O
=	O
node_copy	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
[	O
i	int
]	O
)	O
;	O
break	O
;	O
}	O
return	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
;	O
}	O
void	O
node_reference	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
node	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
)	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
node	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
;	O
{	O
node	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
refcount	int
++	O
;	O
}	O
void	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
node	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
)	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
node	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
;	O
{	O
unsigned	O
int	O
i	int
;	O
if	O
(	O
node	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
==	O
NULL	O
)	O
return	O
;	O
if	O
(	O
--	O
node	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
refcount	int
>	O
0	int
)	O
return	O
;	O
switch	O
(	O
node	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
type	enum(int,int,int,int,int,int,int)
)	O
{	O
case	O
nVOID	int
:	O
return	O
;	O
break	O
;	O
case	O
nSTRING	int
:	O
xfree	(*(void))->(void)
(	O
node	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
data	*(void)
)	O
;	O
break	O
;	O
case	O
nREGEXP	int
:	O
free	(*(void))->(void)
(	O
node	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
re	struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int)))
.	O
data	*(void)
)	O
;	O
xfree	(*(void))->(void)
(	O
node	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
re	struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int)))
.	O
compiled	struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)
.	O
fastmap	*(char)
)	O
;	O
break	O
;	O
case	O
nINTEGER	int
:	O
case	O
nREAL	int
:	O
case	O
nSYMBOL	int
:	O
break	O
;	O
case	O
nARRAY	int
:	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
node	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
.	O
len	int
;	O
i	int
++	O
)	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
node	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
[	O
i	int
]	O
)	O
;	O
xfree	(*(void))->(void)
(	O
node	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
)	O
;	O
break	O
;	O
}	O
xfree	(*(void))->(void)
(	O
node	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
)	O
;	O
}	O
void	O
enter_system_variable	(*(char),*(char))->(void)
(	O
name	*(char)
,	O
value	*(char)
)	O
char	O
*	O
name	*(char)
;	O
char	O
*	O
value	*(char)
;	O
{	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
n	long
,	O
*	O
old_val	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
;	O
n	long
=	O
node_alloc	(enum(int,int,int,int,int,int,int))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
nSTRING	int
)	O
;	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
len	int
=	O
strlen	(*(char))->(long)
(	O
value	*(char)
)	O
;	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
data	*(void)
=	O
xstrdup	(*(char))->(*(char))
(	O
value	*(char)
)	O
;	O
if	O
(	O
!	O
strhash_put	(*(struct),*(char),int,*(void),*(*(void)))->(int)
(	O
ns_vars	*(struct)
,	O
name	*(char)
,	O
strlen	(*(char))->(long)
(	O
name	*(char)
)	O
,	O
n	long
,	O
(	O
void	O
*	O
*	O
)	O
&	O
old_val	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s: out of memory\n"	*(char)
)	O
,	O
program	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
old_val	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
)	O
;	O
}	O
void	O
compile_regexp	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
re	struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int)))
)	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
re	struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int)))
;	O
{	O
const	O
char	O
*	O
msg	*(char)
;	O
if	O
(	O
case_insensitive_translate	*(char)
==	O
NULL	O
)	O
{	O
int	O
i	int
;	O
case_insensitive_translate	*(char)
=	O
xmalloc	(long)->(*(void))
(	O
256	int
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
256	int
;	O
i	int
++	O
)	O
if	O
(	O
isupper	(int)->(int)
(	O
i	int
)	O
)	O
case_insensitive_translate	*(char)
[	O
i	int
]	O
=	O
tolower	(int)->(int)
(	O
i	int
)	O
;	O
else	O
case_insensitive_translate	*(char)
[	O
i	int
]	O
=	O
i	int
;	O
}	O
if	O
(	O
re	struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
re	struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int)))
.	O
flags	int
&	O
fRE_CASE_INSENSITIVE	int
)	O
re	struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
re	struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int)))
.	O
compiled	struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)
.	O
translate	*(char)
=	O
case_insensitive_translate	*(char)
;	O
msg	*(char)
=	O
re_compile_pattern	(*(char),long,*(struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)))->(*(char))
(	O
re	struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
re	struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int)))
.	O
data	*(void)
,	O
re	struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
re	struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int)))
.	O
len	int
,	O
&	O
re	struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
re	struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int)))
.	O
compiled	struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)
)	O
;	O
if	O
(	O
msg	*(char)
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s:%d: couldn't compile regular expression \"%s\": %s\n"	*(char)
)	O
,	O
re	struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int)))
->	O
filename	*(char)
,	O
re	struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int)))
->	O
linenum	int
,	O
re	struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
re	struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int)))
.	O
data	*(void)
,	O
msg	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
re_compile_fastmap	(*(struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)))->(int)
(	O
&	O
re	struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
re	struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int)))
.	O
compiled	struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)
)	O
;	O
}	O
Stmt	struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*`,*`,struct`,struct`,struct`,struct`,struct`,struct`))),struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(*`,*`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int),int,*`,union`))),*(struct(*(struct`),*(struct`)))))
*	O
mk_stmt	(enum(int,int,int,int,int,int,int),*(void),*(void),*(void),*(void))->(*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`,*`),*(struct`)))))
(	O
type	enum(int,int,int,int,int,int,int)
,	O
arg1	*(void)
,	O
arg2	*(void)
,	O
arg3	*(void)
,	O
arg4	*(void)
)	O
StmtType	enum(int,int,int,int,int,int,int)
type	enum(int,int,int,int,int,int,int)
;	O
void	O
*	O
arg1	*(void)
;	O
void	O
*	O
arg2	*(void)
;	O
void	O
*	O
arg3	*(void)
;	O
void	O
*	O
arg4	*(void)
;	O
{	O
Stmt	struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*`,*`,struct`,struct`,struct`,struct`,struct`,struct`))),struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(*`,*`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int),int,*`,union`))),*(struct(*(struct`),*(struct`)))))
*	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
;	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
=	O
(	O
Stmt	struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*`,*`,struct`,struct`,struct`,struct`,struct`,struct`))),struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(*`,*`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int),int,*`,union`))),*(struct(*(struct`),*(struct`)))))
*	O
)	O
xcalloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
*	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
)	O
)	O
;	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
type	enum(int,int,int,int,int,int,int)
=	O
type	enum(int,int,int,int,int,int,int)
;	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
linenum	int
=	O
linenum	int
;	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
filename	*(char)
=	O
yyin_name	*(char)
;	O
switch	O
(	O
type	enum(int,int,int,int,int,int,int)
)	O
{	O
case	O
sEXPR	int
:	O
case	O
sRETURN	int
:	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
=	O
arg1	*(void)
;	O
break	O
;	O
case	O
sDEFSUB	int
:	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
defsub	struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(*(void),*(void))))
.	O
name	*(char)
=	O
arg1	*(void)
;	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
defsub	struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(*(void),*(void))))
.	O
closure	*(struct(*(void),*(void)))
=	O
arg2	*(void)
;	O
break	O
;	O
case	O
sBLOCK	int
:	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
block	*(struct(*(struct(*(struct`),*(void))),*(struct(*(struct`),*(void)))))
=	O
arg1	*(void)
;	O
break	O
;	O
case	O
sIF	int
:	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
stmt_if	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))))
.	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
=	O
arg1	*(void)
;	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
stmt_if	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))))
.	O
then_stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char)))
=	O
arg2	*(void)
;	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
stmt_if	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))))
.	O
else_stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char)))
=	O
arg3	*(void)
;	O
break	O
;	O
case	O
sWHILE	int
:	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
stmt_while	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))))
.	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
=	O
arg1	*(void)
;	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
stmt_while	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))))
.	O
body	*(struct(enum(int,int,int,int,int,int,int),int,*(char)))
=	O
arg2	*(void)
;	O
break	O
;	O
case	O
sFOR	int
:	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
stmt_for	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))))
.	O
init	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)))))
=	O
arg1	*(void)
;	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
stmt_for	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))))
.	O
cond	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
=	O
arg2	*(void)
;	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
stmt_for	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))))
.	O
incr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)))))
=	O
arg3	*(void)
;	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
stmt_for	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))))
.	O
body	*(struct(enum(int,int,int,int,int,int,int),int,*(char)))
=	O
arg4	*(void)
;	O
break	O
;	O
}	O
return	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
;	O
}	O
Expr	struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*`,*`,struct`,struct`,struct`,struct`,struct`,struct`))),struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(*`,*`))),struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)))))
*	O
mk_expr	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*(void),*(void))->(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))))
(	O
type	enum(int,int,int,int,int,int,int)
,	O
arg1	*(void)
,	O
arg2	*(void)
,	O
arg3	*(void)
)	O
ExprType	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
type	enum(int,int,int,int,int,int,int)
;	O
void	O
*	O
arg1	*(void)
;	O
void	O
*	O
arg2	*(void)
;	O
void	O
*	O
arg3	*(void)
;	O
{	O
Expr	struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*`,*`,struct`,struct`,struct`,struct`,struct`,struct`))),struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(*`,*`))),struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)))))
*	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
;	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
=	O
(	O
Expr	struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*`,*`,struct`,struct`,struct`,struct`,struct`,struct`))),struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(*`,*`))),struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)))))
*	O
)	O
xcalloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
*	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
)	O
)	O
;	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
type	enum(int,int,int,int,int,int,int)
=	O
type	enum(int,int,int,int,int,int,int)
;	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
=	O
linenum	int
;	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
=	O
yyin_name	*(char)
;	O
switch	O
(	O
type	enum(int,int,int,int,int,int,int)
)	O
{	O
case	O
eSTRING	int
:	O
case	O
eREGEXP	int
:	O
case	O
eINTEGER	int
:	O
case	O
eREAL	int
:	O
case	O
eSYMBOL	int
:	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
node	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
=	O
arg1	*(void)
;	O
break	O
;	O
case	O
eNOT	int
:	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
not	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
=	O
arg1	*(void)
;	O
break	O
;	O
case	O
eFCALL	int
:	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
fcall	struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))
.	O
name	*(char)
=	O
arg1	*(void)
;	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
fcall	struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))
.	O
args	*(struct(*(struct(*(struct`),*(void))),*(struct(*(struct`),*(void)))))
=	O
arg2	*(void)
;	O
break	O
;	O
case	O
eASSIGN	int
:	O
case	O
eADDASSIGN	int
:	O
case	O
eSUBASSIGN	int
:	O
case	O
eMULASSIGN	int
:	O
case	O
eDIVASSIGN	int
:	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
assign	struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
sym	*(char)
=	O
arg1	*(void)
;	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
assign	struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
=	O
arg2	*(void)
;	O
break	O
;	O
case	O
ePOSTFIXADD	int
:	O
case	O
ePOSTFIXSUB	int
:	O
case	O
ePREFIXADD	int
:	O
case	O
ePREFIXSUB	int
:	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
node	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
=	O
arg1	*(void)
;	O
break	O
;	O
case	O
eARRAYASSIGN	int
:	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
arrayassign	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
expr1	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
=	O
arg1	*(void)
;	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
arrayassign	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
expr2	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
=	O
arg2	*(void)
;	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
arrayassign	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
expr3	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
=	O
arg3	*(void)
;	O
break	O
;	O
case	O
eARRAYREF	int
:	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
arrayref	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
expr1	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
=	O
arg1	*(void)
;	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
arrayref	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
expr2	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
=	O
arg2	*(void)
;	O
break	O
;	O
case	O
eQUESTCOLON	int
:	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
questcolon	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
cond	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
=	O
arg1	*(void)
;	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
questcolon	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
expr1	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
=	O
arg2	*(void)
;	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
questcolon	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
expr2	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
=	O
arg3	*(void)
;	O
break	O
;	O
case	O
eMULT	int
:	O
case	O
eDIV	int
:	O
case	O
ePLUS	int
:	O
case	O
eMINUS	int
:	O
case	O
eLT	int
:	O
case	O
eGT	int
:	O
case	O
eEQ	int
:	O
case	O
eNE	int
:	O
case	O
eGE	int
:	O
case	O
eLE	int
:	O
case	O
eAND	int
:	O
case	O
eOR	int
:	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
op	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
left	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
=	O
arg1	*(void)
;	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
op	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
right	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
=	O
arg2	*(void)
;	O
break	O
;	O
}	O
return	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
;	O
}	O
Cons	struct(*(void),*(void))
*	O
cons	(*(void),*(void))->(*(struct(*(void),*(void))))
(	O
car	*(void)
,	O
cdr	*(void)
)	O
void	O
*	O
car	*(void)
;	O
void	O
*	O
cdr	*(void)
;	O
{	O
Cons	struct(*(void),*(void))
*	O
c	*(struct(*(void),*(void)))
;	O
c	*(struct(*(void),*(void)))
=	O
(	O
Cons	struct(*(void),*(void))
*	O
)	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
c	*(struct(*(void),*(void)))
)	O
)	O
;	O
c	*(struct(*(void),*(void)))
->	O
car	*(void)
=	O
car	*(void)
;	O
c	*(struct(*(void),*(void)))
->	O
cdr	*(void)
=	O
cdr	*(void)
;	O
return	O
c	*(struct(*(void),*(void)))
;	O
}	O
void	O
define_state	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))->(void)
(	O
sym	*(char)
,	O
super	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
,	O
rules	*(struct(*(struct(*(struct`),*(void))),*(struct(*(struct`),*(void)))))
)	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
sym	*(char)
;	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
super	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
List	struct(*(struct(*(struct(*`,*`)),*(void))),*(struct(*(struct(*`,*`)),*(void))))
*	O
rules	*(struct(*(struct(*(struct`),*(void))),*(struct(*(struct`),*(void)))))
;	O
{	O
void	O
*	O
old_state	*(void)
;	O
char	O
msg	*(char)
[	O
512	int
]	O
;	O
State	struct(*(char),*(char),*(struct(*(char),*(char),*(struct(*`,*`,*`,*`)),*(struct(*`,*`)))),*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))
*	O
state	*(int)
;	O
state	*(int)
=	O
(	O
State	struct(*(char),*(char),*(struct(*(char),*(char),*(struct(*`,*`,*`,*`)),*(struct(*`,*`)))),*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))
*	O
)	O
xcalloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
*	O
state	*(int)
)	O
)	O
;	O
state	*(int)
->	O
name	*(char)
=	O
xstrdup	(*(char))->(*(char))
(	O
sym	*(char)
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
)	O
;	O
state	*(int)
->	O
rules	*(struct(*(struct(*(struct`),*(void))),*(struct(*(struct`),*(void)))))
=	O
rules	*(struct(*(struct(*(struct`),*(void))),*(struct(*(struct`),*(void)))))
;	O
if	O
(	O
super	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
)	O
state	*(int)
->	O
super_name	*(char)
=	O
xstrdup	(*(char))->(*(char))
(	O
super	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
)	O
;	O
if	O
(	O
!	O
strhash_put	(*(struct),*(char),int,*(void),*(*(void)))->(int)
(	O
ns_states	*(struct)
,	O
sym	*(char)
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
,	O
strlen	(*(char))->(long)
(	O
sym	*(char)
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
)	O
,	O
state	*(int)
,	O
&	O
old_state	*(void)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s: ouf of memory"	*(char)
)	O
,	O
program	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
if	O
(	O
old_state	*(void)
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
msg	*(char)
,	O
_	O
(	O
"warning: redefining state `%s'"	*(char)
)	O
,	O
sym	*(char)
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
)	O
;	O
yyerror	(*(char))->(void)
(	O
msg	*(char)
)	O
;	O
}	O
}	O
static	O
void	O
define_sub	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(*(void),*(void))),*(char),int)->(void)
(	O
sym	*(char)
,	O
args_body	*(struct(*(void),*(void)))
,	O
filename	*(char)
,	O
linenum	int
)	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
sym	*(char)
;	O
Cons	struct(*(void),*(void))
*	O
args_body	*(struct(*(void),*(void)))
;	O
char	O
*	O
filename	*(char)
;	O
unsigned	O
int	O
linenum	int
;	O
{	O
void	O
*	O
old_data	*(void)
;	O
if	O
(	O
!	O
strhash_put	(*(struct),*(char),int,*(void),*(*(void)))->(int)
(	O
ns_subs	*(struct)
,	O
sym	*(char)
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
,	O
strlen	(*(char))->(long)
(	O
sym	*(char)
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
)	O
,	O
args_body	*(struct(*(void),*(void)))
,	O
&	O
old_data	*(void)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s: ouf of memory"	*(char)
)	O
,	O
program	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
if	O
(	O
old_data	*(void)
&&	O
warning_level	enum(int,int)
>=	O
WARN_ALL	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s:%d: warning: redefining subroutine `%s'\n"	*(char)
)	O
,	O
filename	*(char)
,	O
linenum	int
,	O
sym	*(char)
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
)	O
;	O
}	O
extern	O
unsigned	O
int	O
current_linenum	int
;	O
static	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
lookup_var	(*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(struct),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(char),int)->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
,	O
ns	*(struct)
,	O
sym	*(char)
,	O
filename	*(char)
,	O
linenum	int
)	O
Environment	struct(*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
*	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
;	O
StringHashPtr	*(struct)
ns	*(struct)
;	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
sym	*(char)
;	O
char	O
*	O
filename	*(char)
;	O
unsigned	O
int	O
linenum	int
;	O
{	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
n	long
;	O
Environment	struct(*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
*	O
e	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
;	O
if	O
(	O
sym	*(char)
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
[	O
0	int
]	O
==	O
'$'	O
&&	O
sym	*(char)
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
[	O
1	int
]	O
&&	O
sym	*(char)
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
[	O
2	int
]	O
==	O
'\0'	O
)	O
{	O
if	O
(	O
sym	*(char)
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
[	O
1	int
]	O
>=	O
'0'	O
&&	O
sym	*(char)
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
[	O
1	int
]	O
<=	O
'9'	O
)	O
{	O
int	O
i	int
;	O
int	O
len	int
;	O
i	int
=	O
sym	*(char)
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
[	O
1	int
]	O
-	O
'0'	O
;	O
n	long
=	O
node_alloc	(enum(int,int,int,int,int,int,int))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
nSTRING	int
)	O
;	O
if	O
(	O
current_match	*(struct(int,*(int),*(int)))
==	O
NULL	O
||	O
current_match	*(struct(int,*(int),*(int)))
->	O
start	*(int)
[	O
i	int
]	O
<	O
0	int
||	O
current_match_buf	*(char)
==	O
NULL	O
)	O
{	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
data	*(void)
=	O
(	O
char	O
*	O
)	O
xmalloc	(long)->(*(void))
(	O
1	int
)	O
;	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
len	int
=	O
0	int
;	O
}	O
else	O
{	O
len	int
=	O
current_match	*(struct(int,*(int),*(int)))
->	O
end	*(int)
[	O
i	int
]	O
-	O
current_match	*(struct(int,*(int),*(int)))
->	O
start	*(int)
[	O
i	int
]	O
;	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
data	*(void)
=	O
(	O
char	O
*	O
)	O
xmalloc	(long)->(*(void))
(	O
len	int
+	O
1	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
data	*(void)
,	O
current_match_buf	*(char)
+	O
current_match	*(struct(int,*(int),*(int)))
->	O
start	*(int)
[	O
i	int
]	O
,	O
len	int
)	O
;	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
len	int
=	O
len	int
;	O
}	O
n	long
->	O
refcount	int
=	O
0	int
;	O
return	O
n	long
;	O
}	O
if	O
(	O
sym	*(char)
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
[	O
1	int
]	O
==	O
'`'	O
||	O
sym	*(char)
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
[	O
1	int
]	O
==	O
'B'	O
)	O
{	O
n	long
=	O
node_alloc	(enum(int,int,int,int,int,int,int))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
nSTRING	int
)	O
;	O
if	O
(	O
current_match	*(struct(int,*(int),*(int)))
==	O
NULL	O
||	O
current_match	*(struct(int,*(int),*(int)))
->	O
start	*(int)
[	O
0	int
]	O
<	O
0	int
||	O
current_match_buf	*(char)
==	O
NULL	O
)	O
{	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
data	*(void)
=	O
(	O
char	O
*	O
)	O
xmalloc	(long)->(*(void))
(	O
1	int
)	O
;	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
len	int
=	O
0	int
;	O
}	O
else	O
{	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
len	int
=	O
current_match	*(struct(int,*(int),*(int)))
->	O
start	*(int)
[	O
0	int
]	O
;	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
data	*(void)
=	O
(	O
char	O
*	O
)	O
xmalloc	(long)->(*(void))
(	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
len	int
+	O
1	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
data	*(void)
,	O
current_match_buf	*(char)
,	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
len	int
)	O
;	O
}	O
n	long
->	O
refcount	int
=	O
0	int
;	O
return	O
n	long
;	O
}	O
if	O
(	O
sym	*(char)
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
[	O
1	int
]	O
==	O
'.'	O
)	O
{	O
n	long
=	O
node_alloc	(enum(int,int,int,int,int,int,int))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
nINTEGER	int
)	O
;	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
=	O
current_linenum	int
;	O
n	long
->	O
refcount	int
=	O
0	int
;	O
return	O
n	long
;	O
}	O
}	O
for	O
(	O
e	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
=	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
;	O
e	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
;	O
e	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
=	O
e	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
e	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
->	O
name	*(char)
,	O
sym	*(char)
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
)	O
==	O
0	int
)	O
return	O
e	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
->	O
val	array(int)
;	O
if	O
(	O
strhash_get	(*(struct),*(char),int,*(*(void)))->(int)
(	O
ns	*(struct)
,	O
sym	*(char)
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
,	O
strlen	(*(char))->(long)
(	O
sym	*(char)
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
)	O
,	O
(	O
void	O
*	O
*	O
)	O
&	O
n	long
)	O
)	O
return	O
n	long
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s:%d: error: undefined variable `%s'\n"	*(char)
)	O
,	O
filename	*(char)
,	O
linenum	int
,	O
sym	*(char)
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
return	O
NULL	O
;	O
}	O
static	O
void	O
set_var	(*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(struct),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(char),int)->(void)
(	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
,	O
ns	*(struct)
,	O
sym	*(char)
,	O
val	array(int)
,	O
filename	*(char)
,	O
linenum	int
)	O
Environment	struct(*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
*	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
;	O
StringHashPtr	*(struct)
ns	*(struct)
;	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
sym	*(char)
;	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
val	array(int)
;	O
char	O
*	O
filename	*(char)
;	O
unsigned	O
int	O
linenum	int
;	O
{	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
n	long
;	O
Environment	struct(*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
*	O
e	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
;	O
for	O
(	O
e	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
=	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
;	O
e	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
;	O
e	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
=	O
e	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
e	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
->	O
name	*(char)
,	O
sym	*(char)
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
)	O
==	O
0	int
)	O
{	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
e	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
->	O
val	array(int)
)	O
;	O
e	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
->	O
val	array(int)
=	O
val	array(int)
;	O
return	O
;	O
}	O
if	O
(	O
strhash_put	(*(struct),*(char),int,*(void),*(*(void)))->(int)
(	O
ns	*(struct)
,	O
sym	*(char)
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
,	O
strlen	(*(char))->(long)
(	O
sym	*(char)
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
)	O
,	O
val	array(int)
,	O
(	O
void	O
*	O
*	O
)	O
&	O
n	long
)	O
)	O
{	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
n	long
)	O
;	O
return	O
;	O
}	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s:%d: error: couldn't set variable `%s'\n"	*(char)
)	O
,	O
filename	*(char)
,	O
linenum	int
,	O
sym	*(char)
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
static	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
calculate_binary	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),int,*(char),int)->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
,	O
r	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
,	O
type	enum(int,int,int,int,int,int,int)
,	O
filename	*(char)
,	O
linenum	int
)	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
;	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
r	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
;	O
ExprType	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
type	enum(int,int,int,int,int,int,int)
;	O
char	O
*	O
filename	*(char)
;	O
unsigned	O
int	O
linenum	int
;	O
{	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
n	long
=	O
NULL	O
;	O
switch	O
(	O
type	enum(int,int,int,int,int,int,int)
)	O
{	O
case	O
eMULT	int
:	O
case	O
eDIV	int
:	O
case	O
ePLUS	int
:	O
case	O
eMINUS	int
:	O
case	O
eLT	int
:	O
case	O
eGT	int
:	O
case	O
eEQ	int
:	O
case	O
eNE	int
:	O
case	O
eGE	int
:	O
case	O
eLE	int
:	O
if	O
(	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
type	enum(int,int,int,int,int,int,int)
==	O
r	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
type	enum(int,int,int,int,int,int,int)
&&	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
type	enum(int,int,int,int,int,int,int)
==	O
nINTEGER	int
)	O
{	O
n	long
=	O
node_alloc	(enum(int,int,int,int,int,int,int))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
nINTEGER	int
)	O
;	O
switch	O
(	O
type	enum(int,int,int,int,int,int,int)
)	O
{	O
case	O
eMULT	int
:	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
=	O
(	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
*	O
r	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
)	O
;	O
break	O
;	O
case	O
eDIV	int
:	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
=	O
(	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
/	O
r	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
)	O
;	O
break	O
;	O
case	O
ePLUS	int
:	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
=	O
(	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
+	O
r	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
)	O
;	O
break	O
;	O
case	O
eMINUS	int
:	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
=	O
(	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
-	O
r	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
)	O
;	O
break	O
;	O
case	O
eLT	int
:	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
=	O
(	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
<	O
r	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
)	O
;	O
break	O
;	O
case	O
eGT	int
:	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
=	O
(	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
>	O
r	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
)	O
;	O
break	O
;	O
case	O
eEQ	int
:	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
=	O
(	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
==	O
r	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
)	O
;	O
break	O
;	O
case	O
eNE	int
:	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
=	O
(	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
!=	O
r	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
)	O
;	O
break	O
;	O
case	O
eGE	int
:	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
=	O
(	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
>=	O
r	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
)	O
;	O
break	O
;	O
case	O
eLE	int
:	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
=	O
(	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
<=	O
r	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
)	O
;	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
}	O
else	O
if	O
(	O
(	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
type	enum(int,int,int,int,int,int,int)
==	O
nINTEGER	int
||	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
type	enum(int,int,int,int,int,int,int)
==	O
nREAL	int
)	O
&&	O
(	O
r	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
type	enum(int,int,int,int,int,int,int)
==	O
nINTEGER	int
||	O
r	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
type	enum(int,int,int,int,int,int,int)
==	O
nREAL	int
)	O
)	O
{	O
double	O
dl	double
,	O
dr	double
;	O
if	O
(	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
type	enum(int,int,int,int,int,int,int)
==	O
nINTEGER	int
)	O
dl	double
=	O
(	O
double	O
)	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
;	O
else	O
dl	double
=	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
real	double
;	O
if	O
(	O
r	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
type	enum(int,int,int,int,int,int,int)
==	O
nINTEGER	int
)	O
dr	double
=	O
(	O
double	O
)	O
r	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
;	O
else	O
dr	double
=	O
r	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
real	double
;	O
n	long
=	O
node_alloc	(enum(int,int,int,int,int,int,int))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
nREAL	int
)	O
;	O
switch	O
(	O
type	enum(int,int,int,int,int,int,int)
)	O
{	O
case	O
eMULT	int
:	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
real	double
=	O
(	O
dl	double
*	O
dr	double
)	O
;	O
break	O
;	O
case	O
eDIV	int
:	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
real	double
=	O
(	O
dl	double
/	O
dr	double
)	O
;	O
break	O
;	O
case	O
ePLUS	int
:	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
real	double
=	O
(	O
dl	double
+	O
dr	double
)	O
;	O
break	O
;	O
case	O
eMINUS	int
:	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
real	double
=	O
(	O
dl	double
-	O
dr	double
)	O
;	O
break	O
;	O
case	O
eLT	int
:	O
n	long
->	O
type	enum(int,int,int,int,int,int,int)
=	O
nINTEGER	int
;	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
=	O
(	O
dl	double
<	O
dr	double
)	O
;	O
break	O
;	O
case	O
eGT	int
:	O
n	long
->	O
type	enum(int,int,int,int,int,int,int)
=	O
nINTEGER	int
;	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
=	O
(	O
dl	double
>	O
dr	double
)	O
;	O
break	O
;	O
case	O
eEQ	int
:	O
n	long
->	O
type	enum(int,int,int,int,int,int,int)
=	O
nINTEGER	int
;	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
=	O
(	O
dl	double
==	O
dr	double
)	O
;	O
break	O
;	O
case	O
eNE	int
:	O
n	long
->	O
type	enum(int,int,int,int,int,int,int)
=	O
nINTEGER	int
;	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
=	O
(	O
dl	double
!=	O
dr	double
)	O
;	O
break	O
;	O
case	O
eGE	int
:	O
n	long
->	O
type	enum(int,int,int,int,int,int,int)
=	O
nINTEGER	int
;	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
=	O
(	O
dl	double
>=	O
dr	double
)	O
;	O
break	O
;	O
case	O
eLE	int
:	O
n	long
->	O
type	enum(int,int,int,int,int,int,int)
=	O
nINTEGER	int
;	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
=	O
(	O
dl	double
<=	O
dr	double
)	O
;	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s:%d: error: expression between illegal types\n"	*(char)
)	O
,	O
filename	*(char)
,	O
linenum	int
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
break	O
;	O
default	O
:	O
abort	()->(void)
(	O
)	O
;	O
break	O
;	O
}	O
return	O
n	long
;	O
}	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
Expr	struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*`,*`,struct`,struct`,struct`,struct`,struct`,struct`))),struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(*`,*`))),struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)))))
*	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
;	O
Environment	struct(*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
*	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
;	O
{	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
n	long
=	O
nvoid	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
;	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
;	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
,	O
*	O
r	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
;	O
Cons	struct(*(void),*(void))
*	O
c	*(struct(*(void),*(void)))
;	O
Primitive	*((*(char),*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(char),*(struct`))),*(char),int)->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
prim	*((*(char),*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(char),*(struct`))),*(char),int)->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
;	O
int	O
return_seen	*(int)
;	O
Environment	struct(*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
*	O
ei	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
,	O
*	O
ei2	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
;	O
int	O
i	int
;	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
sn	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
;	O
if	O
(	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
==	O
NULL	O
)	O
return	O
nvoid	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
;	O
switch	O
(	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
type	enum(int,int,int,int,int,int,int)
)	O
{	O
case	O
eSTRING	int
:	O
case	O
eREGEXP	int
:	O
case	O
eINTEGER	int
:	O
case	O
eREAL	int
:	O
node_reference	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
node	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
)	O
;	O
return	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
node	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
;	O
break	O
;	O
case	O
eSYMBOL	int
:	O
n	long
=	O
lookup_var	(*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(struct),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(char),int)->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
,	O
ns_vars	*(struct)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
node	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
)	O
;	O
node_reference	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
n	long
)	O
;	O
return	O
n	long
;	O
break	O
;	O
case	O
eNOT	int
:	O
n	long
=	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
not	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
i	int
=	O
!	O
IS_TRUE	O
(	O
n	long
)	O
;	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
n	long
)	O
;	O
n	long
=	O
node_alloc	(enum(int,int,int,int,int,int,int))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
nINTEGER	int
)	O
;	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
=	O
i	int
;	O
return	O
n	long
;	O
break	O
;	O
case	O
eFCALL	int
:	O
n	long
=	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
fcall	struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))
.	O
name	*(char)
;	O
if	O
(	O
strhash_get	(*(struct),*(char),int,*(*(void)))->(int)
(	O
ns_subs	*(struct)
,	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
,	O
strlen	(*(char))->(long)
(	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
)	O
,	O
(	O
void	O
*	O
*	O
)	O
&	O
c	*(struct(*(void),*(void)))
)	O
)	O
{	O
Environment	struct(*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
*	O
nenv	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
=	O
NULL	O
;	O
ListItem	struct(*(struct(*(struct(*`,*`)),*(void))),*(void))
*	O
i	int
,	O
*	O
e	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
;	O
List	struct(*(struct(*(struct(*`,*`)),*(void))),*(struct(*(struct(*`,*`)),*(void))))
*	O
stmts	*(struct(*(struct(*(struct`),*(void))),*(struct(*(struct`),*(void)))))
;	O
List	struct(*(struct(*(struct(*`,*`)),*(void))),*(struct(*(struct(*`,*`)),*(void))))
*	O
lst	*(struct(*(struct(*(struct`),*(void))),*(struct(*(struct`),*(void)))))
;	O
Cons	struct(*(void),*(void))
*	O
args_locals	*(struct(*(void),*(void)))
;	O
args_locals	*(struct(*(void),*(void)))
=	O
(	O
Cons	struct(*(void),*(void))
*	O
)	O
c	*(struct(*(void),*(void)))
->	O
car	*(void)
;	O
stmts	*(struct(*(struct(*(struct`),*(void))),*(struct(*(struct`),*(void)))))
=	O
(	O
List	struct(*(struct(*(struct(*`,*`)),*(void))),*(struct(*(struct(*`,*`)),*(void))))
*	O
)	O
c	*(struct(*(void),*(void)))
->	O
cdr	*(void)
;	O
lst	*(struct(*(struct(*(struct`),*(void))),*(struct(*(struct`),*(void)))))
=	O
(	O
List	struct(*(struct(*(struct(*`,*`)),*(void))),*(struct(*(struct(*`,*`)),*(void))))
*	O
)	O
args_locals	*(struct(*(void),*(void)))
->	O
car	*(void)
;	O
for	O
(	O
i	int
=	O
lst	*(struct(*(struct(*(struct`),*(void))),*(struct(*(struct`),*(void)))))
->	O
head	*(struct(*(struct(*(struct`),*(void))),*(void)))
,	O
e	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
=	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
fcall	struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))
.	O
args	*(struct(*(struct(*(struct`),*(void))),*(struct(*(struct`),*(void)))))
->	O
head	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
i	int
&&	O
e	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
;	O
i	int
=	O
i	int
->	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
,	O
e	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
=	O
e	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
{	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
sym	*(char)
;	O
sym	*(char)
=	O
(	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
)	O
i	int
->	O
data	*(void)
;	O
n	long
=	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
(	O
Expr	struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*`,*`,struct`,struct`,struct`,struct`,struct`,struct`))),struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(*`,*`))),struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)))))
*	O
)	O
e	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
->	O
data	*(void)
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
ei	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
=	O
(	O
Environment	struct(*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
*	O
)	O
xcalloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
*	O
ei	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
)	O
;	O
ei	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
->	O
name	*(char)
=	O
sym	*(char)
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
;	O
ei	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
->	O
val	array(int)
=	O
n	long
;	O
ei	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
nenv	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
;	O
nenv	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
=	O
ei	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
;	O
}	O
if	O
(	O
i	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s:%d: error: too few arguments for subroutine\n"	*(char)
)	O
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
if	O
(	O
e	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s:%d: error: too many arguments for subroutine\n"	*(char)
)	O
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
lst	*(struct(*(struct(*(struct`),*(void))),*(struct(*(struct`),*(void)))))
=	O
(	O
List	struct(*(struct(*(struct(*`,*`)),*(void))),*(struct(*(struct(*`,*`)),*(void))))
*	O
)	O
args_locals	*(struct(*(void),*(void)))
->	O
cdr	*(void)
;	O
for	O
(	O
i	int
=	O
lst	*(struct(*(struct(*(struct`),*(void))),*(struct(*(struct`),*(void)))))
->	O
head	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
i	int
;	O
i	int
=	O
i	int
->	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
{	O
Cons	struct(*(void),*(void))
*	O
c	*(struct(*(void),*(void)))
;	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
sym	*(char)
;	O
Expr	struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*`,*`,struct`,struct`,struct`,struct`,struct`,struct`))),struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(*`,*`))),struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)))))
*	O
init	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)))))
;	O
c	*(struct(*(void),*(void)))
=	O
(	O
Cons	struct(*(void),*(void))
*	O
)	O
i	int
->	O
data	*(void)
;	O
sym	*(char)
=	O
(	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
)	O
c	*(struct(*(void),*(void)))
->	O
car	*(void)
;	O
init	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)))))
=	O
(	O
Expr	struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*`,*`,struct`,struct`,struct`,struct`,struct`,struct`))),struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(*`,*`))),struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)))))
*	O
)	O
c	*(struct(*(void),*(void)))
->	O
cdr	*(void)
;	O
ei	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
=	O
(	O
Environment	struct(*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
*	O
)	O
xcalloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
*	O
ei	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
)	O
;	O
ei	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
->	O
name	*(char)
=	O
sym	*(char)
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
;	O
if	O
(	O
init	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)))))
)	O
ei	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
->	O
val	array(int)
=	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
init	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)))))
,	O
nenv	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
else	O
ei	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
->	O
val	array(int)
=	O
nvoid	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
;	O
ei	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
nenv	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
;	O
nenv	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
=	O
ei	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
;	O
}	O
return_seen	*(int)
=	O
0	int
;	O
n	long
=	O
eval_statement_list	(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(int))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
(	O
List	struct(*(struct(*(struct(*`,*`)),*(void))),*(struct(*(struct(*`,*`)),*(void))))
*	O
)	O
c	*(struct(*(void),*(void)))
->	O
cdr	*(void)
,	O
nenv	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
,	O
&	O
return_seen	*(int)
)	O
;	O
for	O
(	O
ei	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
=	O
nenv	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
;	O
ei	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
;	O
ei	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
=	O
ei2	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
{	O
ei2	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
=	O
ei	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
ei	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
->	O
val	array(int)
)	O
;	O
xfree	(*(void))->(void)
(	O
ei	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
}	O
return	O
n	long
;	O
}	O
else	O
if	O
(	O
strhash_get	(*(struct),*(char),int,*(*(void)))->(int)
(	O
ns_prims	*(struct)
,	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
,	O
strlen	(*(char))->(long)
(	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
)	O
,	O
(	O
void	O
*	O
*	O
)	O
&	O
prim	*((*(char),*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(char),*(struct`))),*(char),int)->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
)	O
{	O
n	long
=	O
(	O
*	O
prim	*((*(char),*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(char),*(struct`))),*(char),int)->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
(	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
fcall	struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))
.	O
args	*(struct(*(struct(*(struct`),*(void))),*(struct(*(struct`),*(void)))))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
)	O
;	O
return	O
n	long
;	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s:%d: error: undefined procedure `%s'\n"	*(char)
)	O
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
,	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
sym	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
break	O
;	O
case	O
eASSIGN	int
:	O
n	long
=	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
assign	struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
set_var	(*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(struct),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(char),int)->(void)
(	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
,	O
ns_vars	*(struct)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
assign	struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
sym	*(char)
,	O
n	long
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
)	O
;	O
node_reference	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
n	long
)	O
;	O
return	O
n	long
;	O
break	O
;	O
case	O
eADDASSIGN	int
:	O
case	O
eSUBASSIGN	int
:	O
case	O
eMULASSIGN	int
:	O
case	O
eDIVASSIGN	int
:	O
n	long
=	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
assign	struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
=	O
lookup_var	(*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(struct),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(char),int)->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
,	O
ns_vars	*(struct)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
assign	struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
sym	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
)	O
;	O
switch	O
(	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
type	enum(int,int,int,int,int,int,int)
)	O
{	O
case	O
eADDASSIGN	int
:	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
=	O
calculate_binary	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),int,*(char),int)->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
,	O
n	long
,	O
ePLUS	int
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
)	O
;	O
break	O
;	O
case	O
eSUBASSIGN	int
:	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
=	O
calculate_binary	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),int,*(char),int)->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
,	O
n	long
,	O
eMINUS	int
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
)	O
;	O
break	O
;	O
case	O
eMULASSIGN	int
:	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
=	O
calculate_binary	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),int,*(char),int)->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
,	O
n	long
,	O
eMULT	int
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
)	O
;	O
break	O
;	O
case	O
eDIVASSIGN	int
:	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
=	O
calculate_binary	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),int,*(char),int)->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
,	O
n	long
,	O
eDIV	int
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
)	O
;	O
break	O
;	O
default	O
:	O
abort	()->(void)
(	O
)	O
;	O
break	O
;	O
}	O
set_var	(*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(struct),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(char),int)->(void)
(	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
,	O
ns_vars	*(struct)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
assign	struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
sym	*(char)
,	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
)	O
;	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
n	long
)	O
;	O
node_reference	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
)	O
;	O
return	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
;	O
break	O
;	O
case	O
ePOSTFIXADD	int
:	O
case	O
ePOSTFIXSUB	int
:	O
sn	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
.	O
type	enum(int,int,int,int,int,int,int)
=	O
nINTEGER	int
;	O
sn	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
.	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
=	O
1	int
;	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
=	O
lookup_var	(*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(struct),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(char),int)->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
,	O
ns_vars	*(struct)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
node	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
)	O
;	O
node_reference	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
)	O
;	O
n	long
=	O
calculate_binary	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),int,*(char),int)->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
,	O
&	O
sn	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
type	enum(int,int,int,int,int,int,int)
==	O
ePOSTFIXADD	int
?	O
ePLUS	int
:	O
eMINUS	int
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
)	O
;	O
set_var	(*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(struct),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(char),int)->(void)
(	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
,	O
ns_vars	*(struct)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
node	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
,	O
n	long
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
)	O
;	O
return	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
;	O
break	O
;	O
case	O
ePREFIXADD	int
:	O
case	O
ePREFIXSUB	int
:	O
sn	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
.	O
type	enum(int,int,int,int,int,int,int)
=	O
nINTEGER	int
;	O
sn	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
.	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
=	O
1	int
;	O
n	long
=	O
lookup_var	(*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(struct),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(char),int)->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
,	O
ns_vars	*(struct)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
node	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
)	O
;	O
n	long
=	O
calculate_binary	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),int,*(char),int)->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
n	long
,	O
&	O
sn	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
type	enum(int,int,int,int,int,int,int)
==	O
ePREFIXADD	int
?	O
ePLUS	int
:	O
eMINUS	int
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
)	O
;	O
set_var	(*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(struct),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(char),int)->(void)
(	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
,	O
ns_vars	*(struct)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
node	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
,	O
n	long
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
)	O
;	O
node_reference	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
n	long
)	O
;	O
return	O
n	long
;	O
break	O
;	O
case	O
eARRAYASSIGN	int
:	O
n	long
=	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
arrayassign	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
expr1	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
if	O
(	O
n	long
->	O
type	enum(int,int,int,int,int,int,int)
!=	O
nARRAY	int
&&	O
n	long
->	O
type	enum(int,int,int,int,int,int,int)
!=	O
nSTRING	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s:%d: error: illegal lvalue for assignment\n"	*(char)
)	O
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
=	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
arrayassign	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
expr2	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
if	O
(	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
type	enum(int,int,int,int,int,int,int)
!=	O
nINTEGER	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s:%d: error: array reference index is not integer\n"	*(char)
)	O
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
if	O
(	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s:%d: error: negative array reference index\n"	*(char)
)	O
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
if	O
(	O
n	long
->	O
type	enum(int,int,int,int,int,int,int)
==	O
nARRAY	int
)	O
{	O
if	O
(	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
>=	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
.	O
len	int
)	O
{	O
if	O
(	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
>=	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
.	O
allocated	long
)	O
{	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
.	O
allocated	long
=	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
+	O
100	int
;	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
=	O
(	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
*	O
)	O
xrealloc	(*(void),long)->(*(void))
(	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
,	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
.	O
allocated	long
*	O
sizeof	O
(	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
)	O
)	O
;	O
}	O
for	O
(	O
i	int
=	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
.	O
len	int
;	O
i	int
<=	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
;	O
i	int
++	O
)	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
[	O
i	int
]	O
=	O
nvoid	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
;	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
.	O
len	int
=	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
+	O
1	int
;	O
}	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
[	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
]	O
)	O
;	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
=	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
arrayassign	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
expr3	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
node_reference	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
)	O
;	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
[	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
]	O
=	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
;	O
}	O
else	O
{	O
if	O
(	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
>=	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
len	int
)	O
{	O
i	int
=	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
len	int
;	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
len	int
=	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
+	O
1	int
;	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
data	*(void)
=	O
(	O
char	O
*	O
)	O
xrealloc	(*(void),long)->(*(void))
(	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
data	*(void)
,	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
len	int
)	O
;	O
for	O
(	O
;	O
i	int
<	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
len	int
;	O
i	int
++	O
)	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
data	*(void)
[	O
i	int
]	O
=	O
' '	O
;	O
}	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
=	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
arrayassign	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
expr3	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
if	O
(	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
type	enum(int,int,int,int,int,int,int)
!=	O
nINTEGER	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s:%d: error: illegal rvalue for string assignment\n"	*(char)
)	O
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
data	*(void)
[	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
]	O
=	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
;	O
}	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
n	long
)	O
;	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
)	O
;	O
return	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
;	O
break	O
;	O
case	O
eARRAYREF	int
:	O
n	long
=	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
arrayref	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
expr1	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
if	O
(	O
n	long
->	O
type	enum(int,int,int,int,int,int,int)
!=	O
nARRAY	int
&&	O
n	long
->	O
type	enum(int,int,int,int,int,int,int)
!=	O
nSTRING	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s:%d: error: illegal type for array reference\n"	*(char)
)	O
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
=	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
arrayref	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
expr2	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
if	O
(	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
type	enum(int,int,int,int,int,int,int)
!=	O
nINTEGER	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s:%d: error: array reference index is not integer\n"	*(char)
)	O
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
if	O
(	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
<	O
0	int
||	O
(	O
n	long
->	O
type	enum(int,int,int,int,int,int,int)
==	O
nARRAY	int
&&	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
>=	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
.	O
len	int
)	O
||	O
(	O
n	long
->	O
type	enum(int,int,int,int,int,int,int)
==	O
nSTRING	int
&&	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
>=	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
len	int
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s:%d: error: array reference index out of range\n"	*(char)
)	O
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
if	O
(	O
n	long
->	O
type	enum(int,int,int,int,int,int,int)
==	O
nARRAY	int
)	O
{	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
=	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
.	O
array	*(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char))))
[	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
]	O
;	O
node_reference	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
)	O
;	O
}	O
else	O
{	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
=	O
node_alloc	(enum(int,int,int,int,int,int,int))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
nINTEGER	int
)	O
;	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
=	O
(	O
int	O
)	O
(	O
(	O
unsigned	O
char	O
*	O
)	O
n	long
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
str	struct(*(char),int)
.	O
data	*(void)
)	O
[	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
integer	int
]	O
;	O
}	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
n	long
)	O
;	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
)	O
;	O
return	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
;	O
break	O
;	O
case	O
eQUESTCOLON	int
:	O
n	long
=	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
questcolon	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
cond	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
i	int
=	O
IS_TRUE	O
(	O
n	long
)	O
;	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
n	long
)	O
;	O
if	O
(	O
i	int
)	O
n	long
=	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
questcolon	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
expr1	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
else	O
n	long
=	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
questcolon	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
expr2	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
return	O
n	long
;	O
break	O
;	O
case	O
eAND	int
:	O
n	long
=	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
op	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
left	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
if	O
(	O
!	O
IS_TRUE	O
(	O
n	long
)	O
)	O
return	O
n	long
;	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
n	long
)	O
;	O
return	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
op	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
right	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
break	O
;	O
case	O
eOR	int
:	O
n	long
=	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
op	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
left	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
if	O
(	O
IS_TRUE	O
(	O
n	long
)	O
)	O
return	O
n	long
;	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
n	long
)	O
;	O
return	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
op	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
right	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
break	O
;	O
case	O
eMULT	int
:	O
case	O
eDIV	int
:	O
case	O
ePLUS	int
:	O
case	O
eMINUS	int
:	O
case	O
eLT	int
:	O
case	O
eGT	int
:	O
case	O
eEQ	int
:	O
case	O
eNE	int
:	O
case	O
eGE	int
:	O
case	O
eLE	int
:	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
=	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
op	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
left	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
r	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
=	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
op	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char))))
.	O
right	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
n	long
=	O
calculate_binary	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),int,*(char),int)->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
,	O
r	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
type	enum(int,int,int,int,int,int,int)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
filename	*(char)
,	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
->	O
linenum	int
)	O
;	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
l	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
)	O
;	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
r	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
)	O
;	O
return	O
n	long
;	O
break	O
;	O
}	O
return	O
n	long
;	O
}	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
eval_statement	(*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`,*`),*(struct`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(int))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
,	O
return_seen	*(int)
)	O
Stmt	struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*`,*`,struct`,struct`,struct`,struct`,struct`,struct`))),struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(*`,*`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int),int,*`,union`))),*(struct(*(struct`),*(struct`)))))
*	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
;	O
Environment	struct(*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
*	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
;	O
int	O
*	O
return_seen	*(int)
;	O
{	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
n	long
=	O
nvoid	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
;	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
;	O
int	O
i	int
;	O
switch	O
(	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
type	enum(int,int,int,int,int,int,int)
)	O
{	O
case	O
sRETURN	int
:	O
n	long
=	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
*	O
return_seen	*(int)
=	O
1	int
;	O
break	O
;	O
case	O
sDEFSUB	int
:	O
define_sub	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(*(void),*(void))),*(char),int)->(void)
(	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
defsub	struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(*(void),*(void))))
.	O
name	*(char)
,	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
defsub	struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))),*(struct(*(void),*(void))))
.	O
closure	*(struct(*(void),*(void)))
,	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
filename	*(char)
,	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
linenum	int
)	O
;	O
break	O
;	O
case	O
sBLOCK	int
:	O
n	long
=	O
eval_statement_list	(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(int))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
block	*(struct(*(struct(*(struct`),*(void))),*(struct(*(struct`),*(void)))))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
,	O
return_seen	*(int)
)	O
;	O
break	O
;	O
case	O
sIF	int
:	O
n	long
=	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
stmt_if	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))))
.	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
i	int
=	O
IS_TRUE	O
(	O
n	long
)	O
;	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
n	long
)	O
;	O
if	O
(	O
i	int
)	O
n	long
=	O
eval_statement	(*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`,*`),*(struct`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(int))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
stmt_if	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))))
.	O
then_stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
,	O
return_seen	*(int)
)	O
;	O
else	O
{	O
if	O
(	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
stmt_if	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))))
.	O
else_stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char)))
)	O
n	long
=	O
eval_statement	(*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`,*`),*(struct`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(int))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
stmt_if	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))))
.	O
else_stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
,	O
return_seen	*(int)
)	O
;	O
else	O
n	long
=	O
nvoid	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
;	O
}	O
break	O
;	O
case	O
sWHILE	int
:	O
while	O
(	O
1	int
)	O
{	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
=	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
stmt_while	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))))
.	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
i	int
=	O
IS_TRUE	O
(	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
)	O
;	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
)	O
;	O
if	O
(	O
!	O
i	int
)	O
break	O
;	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
n	long
)	O
;	O
n	long
=	O
eval_statement	(*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`,*`),*(struct`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(int))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
stmt_while	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))))
.	O
body	*(struct(enum(int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
,	O
return_seen	*(int)
)	O
;	O
if	O
(	O
*	O
return_seen	*(int)
)	O
break	O
;	O
}	O
break	O
;	O
case	O
sFOR	int
:	O
if	O
(	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
stmt_for	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))))
.	O
init	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)))))
)	O
{	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
=	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
stmt_for	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))))
.	O
init	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)))))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
)	O
;	O
}	O
while	O
(	O
1	int
)	O
{	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
=	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
stmt_for	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))))
.	O
cond	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
i	int
=	O
IS_TRUE	O
(	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
)	O
;	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
)	O
;	O
if	O
(	O
!	O
i	int
)	O
break	O
;	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
n	long
)	O
;	O
n	long
=	O
eval_statement	(*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`,*`),*(struct`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(int))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
stmt_for	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))))
.	O
body	*(struct(enum(int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
,	O
return_seen	*(int)
)	O
;	O
if	O
(	O
*	O
return_seen	*(int)
)	O
break	O
;	O
if	O
(	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
stmt_for	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))))
.	O
incr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)))))
)	O
{	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
=	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
stmt_for	struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(enum(int,int,int,int,int,int,int),int,*(char))))
.	O
incr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)))))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
n2	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
)	O
;	O
}	O
}	O
break	O
;	O
case	O
sEXPR	int
:	O
n	long
=	O
eval_expr	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
->	O
u	union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`))),int,int))
.	O
expr	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char)))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
)	O
;	O
break	O
;	O
}	O
return	O
n	long
;	O
}	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
eval_statement_list	(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(int))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
lst	*(struct(*(struct(*(struct`),*(void))),*(struct(*(struct`),*(void)))))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
,	O
return_seen	*(int)
)	O
List	struct(*(struct(*(struct(*`,*`)),*(void))),*(struct(*(struct(*`,*`)),*(void))))
*	O
lst	*(struct(*(struct(*(struct`),*(void))),*(struct(*(struct`),*(void)))))
;	O
Environment	struct(*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
*	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
;	O
int	O
*	O
return_seen	*(int)
;	O
{	O
ListItem	struct(*(struct(*(struct(*`,*`)),*(void))),*(void))
*	O
i	int
;	O
Stmt	struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*`,*`,struct`,struct`,struct`,struct`,struct`,struct`))),struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(*`,*`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int),int,*`,union`))),*(struct(*(struct`),*(struct`)))))
*	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
;	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
n	long
=	O
nvoid	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
;	O
if	O
(	O
lst	*(struct(*(struct(*(struct`),*(void))),*(struct(*(struct`),*(void)))))
==	O
NULL	O
)	O
return	O
nvoid	*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),struct(int,*`,*`)),int,double,*(char),struct(*(*`),int,int))))
;	O
for	O
(	O
i	int
=	O
lst	*(struct(*(struct(*(struct`),*(void))),*(struct(*(struct`),*(void)))))
->	O
head	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
i	int
;	O
i	int
=	O
i	int
->	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
{	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
n	long
)	O
;	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
=	O
(	O
Stmt	struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(char),union(*`,*`,struct`,struct`,struct`,struct`,struct`,struct`))),struct(*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)),*(struct(*`,*`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int),int,*`,union`))),struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),*(struct(enum(int,int,int,int,int,int,int),int,*`,union`))),*(struct(*(struct`),*(struct`)))))
*	O
)	O
i	int
->	O
data	*(void)
;	O
n	long
=	O
eval_statement	(*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct`),struct(*`,*`),struct(*`,*`,*`),struct(*`,*`),struct(*`,*`,*`,*`),*(struct`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(int))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
stmt	*(struct(enum(int,int,int,int,int,int,int),int,*(char),union(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`,union`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`),*(struct`),*(struct`)),*(struct(*`,*`)))))
,	O
env	*(struct(*(struct(*(struct`),*(char),*(struct`))),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct`,struct`,int,double,*`,struct`)))))
,	O
return_seen	*(int)
)	O
;	O
if	O
(	O
*	O
return_seen	*(int)
)	O
return	O
n	long
;	O
}	O
return	O
n	long
;	O
}	O
void	O
load_states_file	(*(char))->(void)
(	O
name	*(char)
)	O
char	O
*	O
name	*(char)
;	O
{	O
Node	struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*(char),int),struct(*(char),int,int,struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),struct(int,*(int),*(int))),int,double,*(char),struct(*(*(struct`)),int,int)))
*	O
n	long
;	O
int	O
return_seen	*(int)
=	O
0	int
;	O
yyin_name	*(char)
=	O
xstrdup	(*(char))->(*(char))
(	O
name	*(char)
)	O
;	O
linenum	int
=	O
1	int
;	O
yyin	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
yyin_name	*(char)
,	O
"r"	*(char)
)	O
;	O
if	O
(	O
yyin	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
==	O
NULL	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s: couldn't open definition file `%s': %s\n"	*(char)
)	O
,	O
program	*(char)
,	O
yyin_name	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
yyparse	()->(int)
(	O
)	O
;	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
yyin	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
n	long
=	O
eval_statement_list	(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))),*(struct(*(struct(*`,*`,*`)),*(char),*(struct(enum(int,int,int,int,int,int,int),int,int,*`,union`)))),*(int))->(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))
(	O
global_stmts	*(struct(*(struct(*(struct`),*(void))),*(struct(*(struct`),*(void)))))
,	O
NULL	O
,	O
&	O
return_seen	*(int)
)	O
;	O
node_free	(*(struct(enum(int,int,int,int,int,int,int),int,int,*(char),union(struct(*`,int),struct(*`,int,int,struct`,struct`),int,double,*(char),struct(*`,int,int)))))->(void)
(	O
n	long
)	O
;	O
global_stmts	*(struct(*(struct(*(struct`),*(void))),*(struct(*(struct`),*(void)))))
=	O
list	()->(*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))
(	O
)	O
;	O
}	O
int	O
autoload_file	(*(char))->(int)
(	O
name	*(char)
)	O
char	O
*	O
name	*(char)
;	O
{	O
char	O
*	O
start	*(int)
;	O
unsigned	O
int	O
len	int
;	O
char	O
*	O
cp	*(char)
;	O
char	O
*	O
buf	*(char)
=	O
NULL	O
;	O
unsigned	O
int	O
buflen	int
=	O
1024	int
;	O
unsigned	O
int	O
name_len	int
;	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
stat_st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
;	O
int	O
result	int
=	O
0	int
;	O
name_len	int
=	O
strlen	(*(char))->(long)
(	O
name	*(char)
)	O
;	O
buf	*(char)
=	O
xmalloc	(long)->(*(void))
(	O
buflen	int
)	O
;	O
for	O
(	O
start	*(int)
=	O
path	*(char)
;	O
start	*(int)
;	O
start	*(int)
=	O
cp	*(char)
)	O
{	O
cp	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
start	*(int)
,	O
PATH_SEPARATOR	char
)	O
;	O
if	O
(	O
cp	*(char)
)	O
{	O
len	int
=	O
cp	*(char)
-	O
start	*(int)
;	O
cp	*(char)
++	O
;	O
}	O
else	O
len	int
=	O
strlen	(*(char))->(long)
(	O
start	*(int)
)	O
;	O
if	O
(	O
len	int
+	O
1	int
+	O
name_len	int
+	O
3	int
+	O
1	int
>=	O
buflen	int
)	O
{	O
buflen	int
=	O
len	int
+	O
1	int
+	O
name_len	int
+	O
3	int
+	O
1	int
+	O
1024	int
;	O
buf	*(char)
=	O
xrealloc	(*(void),long)->(*(void))
(	O
buf	*(char)
,	O
buflen	int
)	O
;	O
}	O
sprintf	(*(char),*(char))->(int)
(	O
buf	*(char)
,	O
"%.*s/%s.st"	*(char)
,	O
len	int
,	O
start	*(int)
,	O
name	*(char)
)	O
;	O
if	O
(	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
(	O
buf	*(char)
,	O
&	O
stat_st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
==	O
0	int
)	O
{	O
if	O
(	O
verbose	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s: autoloading `%s' from `%s'\n"	*(char)
)	O
,	O
program	*(char)
,	O
name	*(char)
,	O
buf	*(char)
)	O
;	O
load_states_file	(*(char))->(void)
(	O
buf	*(char)
)	O
;	O
result	int
=	O
1	int
;	O
break	O
;	O
}	O
}	O
xfree	(*(void))->(void)
(	O
buf	*(char)
)	O
;	O
return	O
result	int
;	O
}	O
State	struct(*(char),*(char),*(struct(*(char),*(char),*(struct(*`,*`,*`,*`)),*(struct(*`,*`)))),*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))
*	O
lookup_state	(*(char))->(*(struct(*(char),*(char),*(struct(*`,*`,*`,*`)),*(struct(*`,*`)))))
(	O
name	*(char)
)	O
char	O
*	O
name	*(char)
;	O
{	O
State	struct(*(char),*(char),*(struct(*(char),*(char),*(struct(*`,*`,*`,*`)),*(struct(*`,*`)))),*(struct(*(struct(*`,*`)),*(struct(*`,*`)))))
*	O
state	*(int)
;	O
int	O
retry_count	int
=	O
0	int
;	O
while	O
(	O
1	int
)	O
{	O
if	O
(	O
strhash_get	(*(struct),*(char),int,*(*(void)))->(int)
(	O
ns_states	*(struct)
,	O
name	*(char)
,	O
strlen	(*(char))->(long)
(	O
name	*(char)
)	O
,	O
(	O
void	O
*	O
*	O
)	O
&	O
state	*(int)
)	O
)	O
return	O
state	*(int)
;	O
if	O
(	O
retry_count	int
>	O
0	int
)	O
break	O
;	O
autoload_file	(*(char))->(int)
(	O
name	*(char)
)	O
;	O
retry_count	int
++	O
;	O
}	O
return	O
NULL	O
;	O
}	O
