speed_t	int
ospeed	int
;	O
static	O
struct	O
termios	struct(int,int,int,int,char,array(char),int,int)
old_term	struct(int,int,int,int,char,array(char),int,int)
;	O
static	O
struct	O
termios	struct(int,int,int,int,char,array(char),int,int)
new_term	struct(int,int,int,int,char,array(char),int,int)
;	O
char	O
*	O
copyright	*(char)
=	O
"%s %s - Display key sequence utility\nGIT is free software; you can redistribute it and/or modify it under the\nterms of the GNU General Public License as published by the Free Software\nFoundation; either version 2, or (at your option) any later version.\nCopyright (C) 1993-1998 Free Software Foundation, Inc.\nWritten by Tudor Hulubei and Andrei Pitis, students at PUB, Romania\n\nPress SPACE when done.\n\n"	*(char)
;	O
extern	O
RETSIGTYPE	void
do_exit	(int)->(void)
PROTO	O
(	O
(	O
int	O
)	O
)	O
;	O
void	O
tty_init	()->(void)
(	O
)	O
{	O
{	O
tcgetattr	(int,*(struct(int,int,int,int,char,array(char),int,int)))->(int)
(	O
TTY_OUTPUT	int
,	O
&	O
old_term	struct(int,int,int,int,char,array(char),int,int)
)	O
;	O
new_term	struct(int,int,int,int,char,array(char),int,int)
=	O
old_term	struct(int,int,int,int,char,array(char),int,int)
;	O
new_term	struct(int,int,int,int,char,array(char),int,int)
.	O
c_iflag	short
&=	O
~	O
(	O
IXON	int
|	O
ICRNL	int
|	O
IGNCR	int
|	O
INLCR	int
|	O
IGNBRK	int
|	O
BRKINT	int
)	O
;	O
new_term	struct(int,int,int,int,char,array(char),int,int)
.	O
c_oflag	short
&=	O
~	O
OPOST	int
;	O
new_term	struct(int,int,int,int,char,array(char),int,int)
.	O
c_lflag	short
|=	O
ISIG	int
|	O
NOFLSH	int
;	O
new_term	struct(int,int,int,int,char,array(char),int,int)
.	O
c_lflag	short
&=	O
~	O
(	O
ICANON	int
|	O
ECHO	int
)	O
;	O
new_term	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cc	array(char)
[	O
VINTR	int
]	O
=	O
CDISABLE	O
;	O
new_term	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cc	array(char)
[	O
VQUIT	int
]	O
=	O
CDISABLE	O
;	O
new_term	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cc	array(char)
[	O
VSTART	int
]	O
=	O
CDISABLE	O
;	O
new_term	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cc	array(char)
[	O
VSTOP	int
]	O
=	O
CDISABLE	O
;	O
new_term	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cc	array(char)
[	O
VMIN	int
]	O
=	O
1	int
;	O
new_term	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cc	array(char)
[	O
VTIME	int
]	O
=	O
0	int
;	O
new_term	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cc	array(char)
[	O
VERASE	int
]	O
=	O
CDISABLE	O
;	O
new_term	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cc	array(char)
[	O
VKILL	int
]	O
=	O
CDISABLE	O
;	O
new_term	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cc	array(char)
[	O
VEOL	int
]	O
=	O
CDISABLE	O
;	O
new_term	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cc	array(char)
[	O
VEOL2	int
]	O
=	O
CDISABLE	O
;	O
new_term	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cc	array(char)
[	O
VSUSP	int
]	O
=	O
CDISABLE	O
;	O
new_term	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cc	array(char)
[	O
VREPRINT	int
]	O
=	O
CDISABLE	O
;	O
new_term	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cc	array(char)
[	O
VDISCARD	int
]	O
=	O
CDISABLE	O
;	O
new_term	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cc	array(char)
[	O
VWERASE	int
]	O
=	O
CDISABLE	O
;	O
new_term	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cc	array(char)
[	O
VLNEXT	int
]	O
=	O
CDISABLE	O
;	O
tcsetattr	(int,int,*(struct(int,int,int,int,char,array(char),int,int)))->(int)
(	O
TTY_OUTPUT	int
,	O
TCSADRAIN	int
,	O
&	O
new_term	struct(int,int,int,int,char,array(char),int,int)
)	O
;	O
ospeed	int
=	O
cfgetospeed	(*(struct(int,int,int,int,char,array(char),int,int)))->(int)
(	O
&	O
new_term	struct(int,int,int,int,char,array(char),int,int)
)	O
;	O
ioctl	(int,long)->(int)
(	O
TTY_OUTPUT	int
,	O
TCXONC	int
,	O
1	int
)	O
;	O
tcflow	(int,int)->(int)
(	O
TTY_OUTPUT	int
,	O
TCOON	int
)	O
;	O
}	O
}	O
void	O
tty_end	()->(void)
(	O
)	O
{	O
tcsetattr	(int,int,*(struct(int,int,int,int,char,array(char),int,int)))->(int)
(	O
TTY_OUTPUT	int
,	O
TCSADRAIN	int
,	O
&	O
old_term	struct(int,int,int,int,char,array(char),int,int)
)	O
;	O
}	O
RETSIGTYPE	void
do_exit	(int)->(void)
(	O
signum	int
)	O
int	O
signum	int
;	O
{	O
signal	(int,*((int)->(void)))->(*((int)->(void)))
(	O
signum	int
,	O
do_exit	(int)->(void)
)	O
;	O
tty_end	()->(void)
(	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
int	O
main	()->(int)
(	O
)	O
{	O
char	O
c	char
;	O
printf	(*(char))->(int)
(	O
copyright	*(char)
,	O
PRODUCT	*(char)
,	O
VERSION	*(char)
)	O
;	O
signal	(int,*((int)->(void)))->(*((int)->(void)))
(	O
SIGTERM	int
,	O
do_exit	(int)->(void)
)	O
;	O
tty_init	()->(void)
(	O
)	O
;	O
signal	(int,*((int)->(void)))->(*((int)->(void)))
(	O
SIGTSTP	int
,	O
SIG_IGN	O
)	O
;	O
signal	(int,*((int)->(void)))->(*((int)->(void)))
(	O
SIGCONT	int
,	O
SIG_IGN	O
)	O
;	O
for	O
(	O
;	O
;	O
)	O
{	O
read	*((*(void),*(char),long)->(long))
(	O
0	int
,	O
&	O
c	char
,	O
1	int
)	O
;	O
if	O
(	O
c	char
==	O
' '	O
)	O
break	O
;	O
printf	(*(char))->(int)
(	O
"%x "	*(char)
,	O
(	O
unsigned	O
char	O
)	O
c	char
)	O
;	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
tty_end	()->(void)
(	O
)	O
;	O
printf	(*(char))->(int)
(	O
"\n"	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
