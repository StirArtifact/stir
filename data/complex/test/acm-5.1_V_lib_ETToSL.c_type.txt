extern	O
void	O
DrawScanLine	(*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*`,*`,int)),*(struct(*`,*`,int)),*(struct(*`,*`,int)),*(struct(*`)),*(struct(*`)),*(struct(short,long,long,*`,*`,*`)),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int)),int,int,int,short)->(void)
(	O
AWindow	struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct(short,short,short)),*(struct(short,short,short)),int)),*(struct(*(struct(short,short,short)),*(struct(short,short,short)),int)),*(struct(*(struct(short,short,short)),*(struct(short,short,short)),int)),*(struct(*(struct(short,long,long,*`,*`,*`)))),*(struct(*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int)
*	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
,	O
int	O
y	int
,	O
int	O
x0	*(int)
,	O
int	O
x1	short
,	O
Color	short
color	short
)	O
;	O
static	O
void	O
updateActiveEdgeList	(*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*`,*`,int)),*(struct(*`,*`,int)),*(struct(*`,*`,int)),*(struct(*`)),*(struct(*`)),*(struct(short,long,long,*`,*`,*`)),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int)),*(*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))),*(*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))),int)->(void)
(	O
AWindow	struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct(short,short,short)),*(struct(short,short,short)),int)),*(struct(*(struct(short,short,short)),*(struct(short,short,short)),int)),*(struct(*(struct(short,short,short)),*(struct(short,short,short)),int)),*(struct(*(struct(short,long,long,*`,*`,*`)))),*(struct(*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int)
*	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
,	O
Edge	struct(short,long,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
*	O
*	O
head	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
,	O
Edge	struct(short,long,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
*	O
*	O
lineHead	*(*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
,	O
int	O
y	int
)	O
{	O
register	O
int	O
inserted	int
;	O
register	O
Edge	struct(short,long,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
*	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
,	O
*	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
,	O
*	O
last	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
,	O
*	O
newhead	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
,	O
*	O
newtail	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
,	O
*	O
q1	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
,	O
*	O
q2	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
;	O
newhead	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
newtail	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
(	O
Edge	struct(short,long,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
*	O
)	O
NULL	O
;	O
for	O
(	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
=	O
*	O
head	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
;	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
!=	O
(	O
Edge	struct(short,long,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
*	O
)	O
NULL	O
;	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
=	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
)	O
{	O
if	O
(	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
y2	short
==	O
y	int
)	O
{	O
}	O
else	O
{	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
x1	short
+=	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
Dx	long
;	O
if	O
(	O
newhead	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
==	O
(	O
Edge	struct(short,long,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
*	O
)	O
NULL	O
)	O
{	O
newhead	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
newtail	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
;	O
}	O
else	O
if	O
(	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
x1	short
>=	O
newtail	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
x1	short
)	O
{	O
newtail	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
=	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
;	O
newtail	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
;	O
}	O
else	O
{	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
nexte	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
->	O
edges	*(struct(*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
[	O
y	int
]	O
.	O
head	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
;	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
->	O
edges	*(struct(*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
[	O
y	int
]	O
.	O
head	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
;	O
}	O
}	O
}	O
*	O
head	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
newhead	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
;	O
if	O
(	O
newtail	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
!=	O
(	O
Edge	struct(short,long,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
*	O
)	O
NULL	O
)	O
newtail	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
=	O
(	O
Edge	struct(short,long,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
*	O
)	O
NULL	O
;	O
for	O
(	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
->	O
lines	*(struct(*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
[	O
y	int
]	O
.	O
head	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
;	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
!=	O
(	O
Edge	struct(short,long,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
*	O
)	O
NULL	O
;	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
nexte	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
)	O
{	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
=	O
*	O
lineHead	*(*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
;	O
*	O
lineHead	*(*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
=	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
;	O
}	O
newhead	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
newtail	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
(	O
Edge	struct(short,long,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
*	O
)	O
NULL	O
;	O
for	O
(	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
*	O
lineHead	*(*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
;	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
!=	O
(	O
Edge	struct(short,long,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
*	O
)	O
NULL	O
;	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
)	O
{	O
if	O
(	O
y	int
<	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
y2	short
)	O
{	O
q1	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
+	O
1	int
;	O
q2	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
+	O
2	int
;	O
q1	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
x1	short
=	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
x1	short
;	O
q2	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
x1	short
=	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
x1	short
=	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
x1	short
+	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
Dx	long
;	O
q1	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
y2	short
=	O
q2	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
y2	short
=	O
y	int
+	O
1	int
;	O
q1	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
nexte	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
q2	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
;	O
q2	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
nexte	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
->	O
edges	*(struct(*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
[	O
y	int
]	O
.	O
head	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
;	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
->	O
edges	*(struct(*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
[	O
y	int
]	O
.	O
head	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
q1	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
;	O
if	O
(	O
newhead	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
==	O
(	O
Edge	struct(short,long,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
*	O
)	O
NULL	O
)	O
{	O
newhead	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
newtail	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
;	O
}	O
else	O
{	O
newtail	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
=	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
;	O
newtail	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
;	O
}	O
}	O
}	O
*	O
lineHead	*(*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
=	O
newhead	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
;	O
if	O
(	O
newtail	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
!=	O
(	O
Edge	struct(short,long,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
*	O
)	O
NULL	O
)	O
newtail	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
=	O
(	O
Edge	struct(short,long,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
*	O
)	O
NULL	O
;	O
for	O
(	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
->	O
edges	*(struct(*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
[	O
y	int
]	O
.	O
head	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
;	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
!=	O
(	O
Edge	struct(short,long,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
*	O
)	O
NULL	O
;	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
nexte	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
)	O
{	O
if	O
(	O
*	O
head	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
==	O
NULL	O
)	O
{	O
*	O
head	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
;	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
=	O
(	O
Edge	struct(short,long,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
*	O
)	O
NULL	O
;	O
}	O
else	O
{	O
inserted	int
=	O
0	int
;	O
for	O
(	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
=	O
*	O
head	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
,	O
last	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
(	O
Edge	struct(short,long,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
*	O
)	O
NULL	O
;	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
!=	O
(	O
Edge	struct(short,long,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
*	O
)	O
NULL	O
;	O
)	O
{	O
if	O
(	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
x1	short
<=	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
x1	short
)	O
{	O
if	O
(	O
last	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
==	O
(	O
Edge	struct(short,long,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
*	O
)	O
NULL	O
)	O
*	O
head	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
;	O
else	O
last	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
=	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
;	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
=	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
;	O
inserted	int
=	O
1	int
;	O
break	O
;	O
}	O
last	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
;	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
=	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
;	O
}	O
if	O
(	O
inserted	int
==	O
0	int
)	O
{	O
last	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
=	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
;	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
=	O
(	O
Edge	struct(short,long,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
*	O
)	O
NULL	O
;	O
}	O
}	O
}	O
}	O
static	O
void	O
planeSweep	(*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*`,*`,int)),*(struct(*`,*`,int)),*(struct(*`,*`,int)),*(struct(*`)),*(struct(*`)),*(struct(short,long,long,*`,*`,*`)),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int)),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),int)->(void)
(	O
AWindow	struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct(short,short,short)),*(struct(short,short,short)),int)),*(struct(*(struct(short,short,short)),*(struct(short,short,short)),int)),*(struct(*(struct(short,short,short)),*(struct(short,short,short)),int)),*(struct(*(struct(short,long,long,*`,*`,*`)))),*(struct(*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int)
*	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
,	O
Edge	struct(short,long,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
*	O
head	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
,	O
int	O
y	int
)	O
{	O
ZInfo	struct(short,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))))
*	O
ps	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
=	O
(	O
ZInfo	struct(short,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))))
*	O
)	O
NULL	O
;	O
ZInfo	struct(short,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))))
*	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
,	O
*	O
r	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
,	O
*	O
lastr	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
=	O
(	O
ZInfo	struct(short,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))))
*	O
)	O
NULL	O
;	O
Edge	struct(short,long,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
*	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
;	O
register	O
int	O
x0	*(int)
,	O
x1	short
=	O
0	int
,	O
lastStart	int
=	O
-	O
1	int
;	O
Color	short
lastColor	short
=	O
0	int
;	O
register	O
unsigned	O
long	O
lastDepth	long
=	O
MaxDepth	int
;	O
if	O
(	O
head	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
==	O
NULL	O
)	O
{	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
->	O
scanLine	*(struct(*(struct(short,short,short)),*(struct(short,short,short)),int))
[	O
y	int
]	O
.	O
count	int
=	O
0	int
;	O
return	O
;	O
}	O
for	O
(	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
=	O
head	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
;	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
!=	O
(	O
Edge	struct(short,long,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
*	O
)	O
NULL	O
;	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
=	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
)	O
{	O
x0	*(int)
=	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
x1	short
>>	O
16	int
;	O
x1	short
=	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
->	O
x1	short
>>	O
16	int
;	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
p	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
;	O
if	O
(	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
==	O
NotAnElement	O
)	O
{	O
if	O
(	O
ps	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
==	O
(	O
ZInfo	struct(short,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))))
*	O
)	O
NULL	O
)	O
{	O
ps	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
=	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
;	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
=	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
prev	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
=	O
(	O
ZInfo	struct(short,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))))
*	O
)	O
NULL	O
;	O
}	O
else	O
{	O
for	O
(	O
r	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
=	O
ps	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
;	O
r	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
!=	O
(	O
ZInfo	struct(short,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))))
*	O
)	O
NULL	O
;	O
r	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
=	O
r	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
)	O
{	O
if	O
(	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
depth	int
<	O
r	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
depth	int
)	O
{	O
if	O
(	O
r	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
prev	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
==	O
(	O
ZInfo	struct(short,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))))
*	O
)	O
NULL	O
)	O
ps	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
=	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
;	O
else	O
r	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
prev	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
=	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
;	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
=	O
r	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
;	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
prev	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
=	O
r	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
prev	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
;	O
r	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
prev	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
=	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
;	O
break	O
;	O
}	O
lastr	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
=	O
r	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
;	O
}	O
if	O
(	O
r	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
==	O
(	O
ZInfo	struct(short,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))))
*	O
)	O
NULL	O
)	O
{	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
=	O
lastr	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
;	O
lastr	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
=	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
;	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
prev	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
=	O
lastr	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
;	O
}	O
}	O
}	O
else	O
{	O
if	O
(	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
prev	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
==	O
NULL	O
)	O
ps	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
=	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
;	O
else	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
prev	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
=	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
;	O
if	O
(	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
!=	O
NULL	O
)	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
->	O
prev	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
=	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
prev	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
;	O
q	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
=	O
NotAnElement	O
;	O
}	O
if	O
(	O
ps	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
!=	O
(	O
ZInfo	struct(short,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))))
*	O
)	O
NULL	O
)	O
{	O
if	O
(	O
lastDepth	long
<	O
ps	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
depth	int
)	O
{	O
if	O
(	O
(	O
++	O
x0	*(int)
)	O
<=	O
x1	short
)	O
{	O
QDrawScanLine	O
(	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
,	O
y	int
,	O
x0	*(int)
,	O
x1	short
,	O
ps	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
color	short
)	O
;	O
lastDepth	long
=	O
ps	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
depth	int
;	O
}	O
}	O
else	O
{	O
QDrawScanLine	O
(	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
,	O
y	int
,	O
x0	*(int)
,	O
x1	short
,	O
ps	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
color	short
)	O
;	O
lastDepth	long
=	O
ps	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
depth	int
;	O
}	O
}	O
else	O
{	O
lastDepth	long
=	O
MaxDepth	int
;	O
if	O
(	O
lastStart	int
!=	O
1	int
)	O
{	O
DrawScanLine	(*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*`,*`,int)),*(struct(*`,*`,int)),*(struct(*`,*`,int)),*(struct(*`)),*(struct(*`)),*(struct(short,long,long,*`,*`,*`)),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int)),int,int,int,short)->(void)
(	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
,	O
y	int
,	O
lastStart	int
,	O
x1	short
,	O
lastColor	short
)	O
;	O
lastStart	int
=	O
-	O
1	int
;	O
}	O
}	O
}	O
if	O
(	O
lastStart	int
!=	O
-	O
1	int
)	O
DrawScanLine	(*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*`,*`,int)),*(struct(*`,*`,int)),*(struct(*`,*`,int)),*(struct(*`)),*(struct(*`)),*(struct(short,long,long,*`,*`,*`)),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int)),int,int,int,short)->(void)
(	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
,	O
y	int
,	O
lastStart	int
,	O
x1	short
,	O
lastColor	short
)	O
;	O
if	O
(	O
ps	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
!=	O
NULL	O
)	O
{	O
ps	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
next	*(struct(int,*(struct(int,*(struct`),*((*`)->(int)),*(char))),*((*(struct`))->(int)),*(char)))
=	O
NotAnElement	O
;	O
}	O
}	O
void	O
EdgeTableToScanLine	(*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*`,*`,int)),*(struct(*`,*`,int)),*(struct(*`,*`,int)),*(struct(*`)),*(struct(*`)),*(struct(short,long,long,*`,*`,*`)),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int)))->(void)
(	O
AWindow	struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct(short,short,short)),*(struct(short,short,short)),int)),*(struct(*(struct(short,short,short)),*(struct(short,short,short)),int)),*(struct(*(struct(short,short,short)),*(struct(short,short,short)),int)),*(struct(*(struct(short,long,long,*`,*`,*`)))),*(struct(*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int)
*	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
)	O
{	O
register	O
int	O
y	int
,	O
end	int
=	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
->	O
ymax	short
;	O
Edge	struct(short,long,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
*	O
active	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
;	O
Edge	struct(short,long,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
*	O
activeLines	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
;	O
active	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
activeLines	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
=	O
(	O
Edge	struct(short,long,long,*(struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))))
*	O
)	O
NULL	O
;	O
if	O
(	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
->	O
ymin	short
<	O
0	int
||	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
->	O
ymax	short
>=	O
(	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
->	O
height	int
+	O
1	int
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"whoa! The y bounds are out of line.\n"	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"ymin = %d   ymax = %d\n"	*(char)
,	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
->	O
ymin	short
,	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
->	O
ymax	short
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"height = %d\n"	*(char)
,	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
->	O
height	int
)	O
;	O
}	O
if	O
(	O
end	int
>=	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
->	O
height	int
)	O
{	O
end	int
=	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
->	O
height	int
;	O
}	O
for	O
(	O
y	int
=	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
->	O
ymin	short
;	O
y	int
<=	O
end	int
;	O
++	O
y	int
)	O
{	O
updateActiveEdgeList	(*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*`,*`,int)),*(struct(*`,*`,int)),*(struct(*`,*`,int)),*(struct(*`)),*(struct(*`)),*(struct(short,long,long,*`,*`,*`)),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int)),*(*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))),*(*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))),int)->(void)
(	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
,	O
&	O
active	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
,	O
&	O
activeLines	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
,	O
y	int
)	O
;	O
planeSweep	(*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*`,*`,int)),*(struct(*`,*`,int)),*(struct(*`,*`,int)),*(struct(*`)),*(struct(*`)),*(struct(short,long,long,*`,*`,*`)),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int)),*(struct(short,long,long,*(struct(short,long,*`,*`)),*(struct(short,long,long,*`,*`,*`)),*(struct(short,long,long,*`,*`,*`)))),int)->(void)
(	O
w	*(struct(*(struct),long,*(struct),int,array(struct(*(struct(short,short,short,short)),int)),array(long),long,*(long),int,short,short,short,short,int,struct(short,short,short,short),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),int,int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int,*(struct(short,short,short)),int,int))
,	O
active	*(struct(short,long,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`))),*(struct(short,long,long,*(struct`),*(struct`),*(struct`)))))
,	O
y	int
)	O
;	O
}	O
}	O
