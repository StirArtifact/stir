char	O
*	O
concatenated_filename	(*(char),*(char),*(char))->(*(char))
(	O
const	O
char	O
*	O
directory	*(char)
,	O
const	O
char	O
*	O
filename	*(char)
,	O
const	O
char	O
*	O
suffix	*(char)
)	O
{	O
char	O
*	O
result	*(char)
;	O
char	O
*	O
p	*(char)
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
directory	*(char)
,	O
"."	*(char)
)	O
==	O
0	int
)	O
{	O
result	*(char)
=	O
(	O
char	O
*	O
)	O
malloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
filename	*(char)
)	O
+	O
(	O
suffix	*(char)
!=	O
NULL	O
?	O
strlen	(*(char))->(long)
(	O
suffix	*(char)
)	O
:	O
0	int
)	O
+	O
1	int
)	O
;	O
if	O
(	O
result	*(char)
==	O
NULL	O
)	O
return	O
NULL	O
;	O
p	*(char)
=	O
result	*(char)
;	O
}	O
else	O
{	O
size_t	long
directory_len	long
=	O
strlen	(*(char))->(long)
(	O
directory	*(char)
)	O
;	O
int	O
need_slash	int
=	O
(	O
directory_len	long
>	O
FILE_SYSTEM_PREFIX_LEN	int
(	O
directory	*(char)
)	O
&&	O
!	O
ISSLASH	O
(	O
directory	*(char)
[	O
directory_len	long
-	O
1	int
]	O
)	O
)	O
;	O
result	*(char)
=	O
(	O
char	O
*	O
)	O
malloc	(long)->(*(void))
(	O
directory_len	long
+	O
need_slash	int
+	O
strlen	(*(char))->(long)
(	O
filename	*(char)
)	O
+	O
(	O
suffix	*(char)
!=	O
NULL	O
?	O
strlen	(*(char))->(long)
(	O
suffix	*(char)
)	O
:	O
0	int
)	O
+	O
1	int
)	O
;	O
if	O
(	O
result	*(char)
==	O
NULL	O
)	O
return	O
NULL	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
result	*(char)
,	O
directory	*(char)
,	O
directory_len	long
)	O
;	O
p	*(char)
=	O
result	*(char)
+	O
directory_len	long
;	O
if	O
(	O
need_slash	int
)	O
*	O
p	*(char)
++	O
=	O
'/'	O
;	O
}	O
p	*(char)
=	O
stpcpy	(*(char),*(char))->(*(char))
(	O
p	*(char)
,	O
filename	*(char)
)	O
;	O
if	O
(	O
suffix	*(char)
!=	O
NULL	O
)	O
stpcpy	(*(char),*(char))->(*(char))
(	O
p	*(char)
,	O
suffix	*(char)
)	O
;	O
return	O
result	*(char)
;	O
}	O
