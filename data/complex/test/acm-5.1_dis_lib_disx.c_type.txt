static	O
unsigned	O
char	O
pdu_family	array(char)
[	O
256	int
]	O
=	O
{	O
0	int
,	O
1	int
,	O
2	int
,	O
2	int
,	O
1	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
5	int
,	O
5	int
,	O
5	int
,	O
5	int
,	O
5	int
,	O
5	int
,	O
5	int
,	O
5	int
,	O
5	int
,	O
5	int
,	O
5	int
,	O
5	int
,	O
6	int
,	O
6	int
,	O
4	int
,	O
4	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
}	O
;	O
static	O
int	O
protocol_version	char
=	O
DISProtocolVersionIEEE1278_95	int
;	O
int	O
DISxSetProtocolVersion	(int)->(int)
(	O
int	O
version	int
)	O
{	O
int	O
result	char
=	O
protocol_version	char
;	O
protocol_version	char
=	O
version	int
;	O
return	O
result	char
;	O
}	O
int	O
DISxSetPDUProtocolFamily	(int,int)->(int)
(	O
int	O
pdu_type	char
,	O
int	O
protocol_family	char
)	O
{	O
int	O
result	char
;	O
if	O
(	O
pdu_type	char
<	O
0	int
||	O
pdu_type	char
>	O
255	int
)	O
{	O
return	O
-	O
1	int
;	O
}	O
result	char
=	O
pdu_family	array(char)
[	O
pdu_type	char
]	O
;	O
pdu_family	array(char)
[	O
pdu_type	char
]	O
=	O
protocol_family	char
;	O
return	O
result	char
;	O
}	O
int	O
DISxPortNumber	int
=	O
-	O
1	int
;	O
DISxApplicationInfo	struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short)
*	O
DISxInitializeApplication	(int,int,int)->(*(struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short)))
(	O
unsigned	O
int	O
exercise_id	char
,	O
unsigned	O
int	O
site_id	short
,	O
unsigned	O
int	O
application_id	short
)	O
{	O
char	O
name	short
[	O
64	int
]	O
;	O
int	O
result	char
;	O
DISxApplicationInfo	struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short)
*	O
p	*(struct(char,char,short,char,char,char,char))
=	O
(	O
DISxApplicationInfo	struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short)
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
DISxApplicationInfo	struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short)
)	O
)	O
;	O
if	O
(	O
!	O
p	*(struct(char,char,short,char,char,char,char))
)	O
{	O
return	O
p	*(struct(char,char,short,char,char,char,char))
;	O
}	O
p	*(struct(char,char,short,char,char,char,char))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
.	O
protocol_version	char
=	O
protocol_version	char
;	O
p	*(struct(char,char,short,char,char,char,char))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
.	O
exercise_id	char
=	O
exercise_id	char
;	O
p	*(struct(char,char,short,char,char,char,char))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
.	O
padding	short
=	O
0	int
;	O
p	*(struct(char,char,short,char,char,char,char))
->	O
last_event	short
=	O
0	int
;	O
p	*(struct(char,char,short,char,char,char,char))
->	O
last_entity	short
=	O
0	int
;	O
p	*(struct(char,char,short,char,char,char,char))
->	O
last_request	short
=	O
0	int
;	O
p	*(struct(char,char,short,char,char,char,char))
->	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
=	O
DISOpenTransceiver	(int)->(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)))
(	O
DISxPortNumber	int
)	O
;	O
if	O
(	O
!	O
p	*(struct(char,char,short,char,char,char,char))
->	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
)	O
{	O
free	(*(void))->(void)
(	O
p	*(struct(char,char,short,char,char,char,char))
)	O
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
DISSetNBIOState	(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),int)->(int)
(	O
p	*(struct(char,char,short,char,char,char,char))
->	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
,	O
1	int
)	O
!=	O
0	int
)	O
{	O
free	(*(void))->(void)
(	O
p	*(struct(char,char,short,char,char,char,char))
)	O
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
site_id	short
!=	O
0	int
&&	O
application_id	short
!=	O
0	int
)	O
{	O
p	*(struct(char,char,short,char,char,char,char))
->	O
id	char
.	O
site_id	short
=	O
site_id	short
;	O
p	*(struct(char,char,short,char,char,char,char))
->	O
id	char
.	O
application_id	short
=	O
application_id	short
;	O
result	char
=	O
SIMx_SUCCESS	int
;	O
}	O
else	O
{	O
if	O
(	O
site_id	short
==	O
0	int
)	O
{	O
SIMxGetSiteName	(*(char),int)->(*(char))
(	O
name	short
,	O
sizeof	O
(	O
name	short
)	O
)	O
;	O
}	O
else	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
name	short
,	O
"0x%x"	*(char)
,	O
site_id	short
)	O
;	O
}	O
result	char
=	O
SIMxRegisterApplication	(*(char),*(char),int,*(struct(short,short)))->(int)
(	O
(	O
char	O
*	O
)	O
NULL	O
,	O
name	short
,	O
application_id	short
,	O
&	O
p	*(struct(char,char,short,char,char,char,char))
->	O
id	char
)	O
;	O
}	O
return	O
(	O
result	char
==	O
SIMx_SUCCESS	int
)	O
?	O
p	*(struct(char,char,short,char,char,char,char))
:	O
NULL	O
;	O
}	O
void	O
DISxGetSimulationAddress	(*(struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short)),*(struct(short,short)))->(void)
(	O
DISxApplicationInfo	struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short)
*	O
info	*(struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short))
,	O
dis_simulation_addr	struct(short,short)
*	O
p	*(struct(char,char,short,char,char,char,char))
)	O
{	O
*	O
p	*(struct(char,char,short,char,char,char,char))
=	O
info	*(struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short))
->	O
id	char
;	O
}	O
void	O
DISxSetExerciseID	(*(struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short)),int)->(void)
(	O
DISxApplicationInfo	struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short)
*	O
info	*(struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short))
,	O
int	O
id	char
)	O
{	O
info	*(struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
.	O
exercise_id	char
=	O
id	char
;	O
}	O
int	O
DISxWritePDU	(*(struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short)),*(union(struct(char,char,char,char,struct(int,int),short,short),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct`,struct`),struct(char,array(char)),long,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(float,float,float),long,struct(float,float,float)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),long,struct(double,double,double),struct(struct`,short,short,short,short),struct(float,float,float),float),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(float,float,float),struct(double,double,double),struct(struct`,short,short,short,short),struct(float,float,float),char,char,short,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),struct(long,struct`),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),char,char,array(char),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),short,short,long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),long,long,long,*(long),*(long)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,long,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),char,char,short,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),short,struct(struct`,short),char,char,float,float,struct(float,float,float),struct(double,double,double)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,char,char,struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short)))))->(int)
(	O
DISxApplicationInfo	struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short)
*	O
info	*(struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short))
,	O
dis_pdu	union(struct(char,char,char,char,struct(int,int),short,short),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),long,struct(float,float,float)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),float),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),char,char,short,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),struct(long,struct(int,int)),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),char,char,array(char),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),short,short,long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),long,long,long,*(long),*(long)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(long,long,*(struct(long,long)),*(struct(long,long,union`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(long,long,*(struct(long,long)),*(struct(long,long,union`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,long,*(struct(long,long)),*(struct(long,long,union`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,long,*(struct(long,long,union(double,struct`,*`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),char,char,short,*(struct(char,char,short,struct(short,char,char),struct(float,float,float),*(struct`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),short,struct(struct(short,short),short),char,char,float,float,struct(float,float,float),struct(double,double,double)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,char,char,struct(struct(short,short),short),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short)))
*	O
p	*(struct(char,char,short,char,char,char,char))
)	O
{	O
p	*(struct(char,char,short,char,char,char,char))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
.	O
protocol_version	char
=	O
info	*(struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
.	O
protocol_version	char
;	O
p	*(struct(char,char,short,char,char,char,char))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
.	O
exercise_id	char
=	O
info	*(struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
.	O
exercise_id	char
;	O
p	*(struct(char,char,short,char,char,char,char))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
.	O
protocol_family	char
=	O
pdu_family	array(char)
[	O
p	*(struct(char,char,short,char,char,char,char))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
.	O
pdu_type	char
]	O
;	O
return	O
DISWritePDU	(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),*(union(struct(char,char,char,char,struct(int,int),short,short),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct`,struct`),struct(char,array(char)),long,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(float,float,float),long,struct(float,float,float)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),long,struct(double,double,double),struct(struct`,short,short,short,short),struct(float,float,float),float),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(float,float,float),struct(double,double,double),struct(struct`,short,short,short,short),struct(float,float,float),char,char,short,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),struct(long,struct`),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),char,char,array(char),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),short,short,long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),long,long,long,*(long),*(long)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,long,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),char,char,short,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),short,struct(struct`,short),char,char,float,float,struct(float,float,float),struct(double,double,double)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,char,char,struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short)))))->(int)
(	O
info	*(struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short))
->	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
,	O
p	*(struct(char,char,short,char,char,char,char))
)	O
;	O
}	O
int	O
DISxReadPDU	(*(struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short)),*(union(struct(char,char,char,char,struct(int,int),short,short),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct`,struct`),struct(char,array(char)),long,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(float,float,float),long,struct(float,float,float)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),long,struct(double,double,double),struct(struct`,short,short,short,short),struct(float,float,float),float),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(float,float,float),struct(double,double,double),struct(struct`,short,short,short,short),struct(float,float,float),char,char,short,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),struct(long,struct`),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),char,char,array(char),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),short,short,long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),long,long,long,*(long),*(long)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,long,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),char,char,short,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),short,struct(struct`,short),char,char,float,float,struct(float,float,float),struct(double,double,double)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,char,char,struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short)))))->(int)
(	O
DISxApplicationInfo	struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short)
*	O
info	*(struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short))
,	O
dis_pdu	union(struct(char,char,char,char,struct(int,int),short,short),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),long,struct(float,float,float)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),float),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),char,char,short,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),struct(long,struct(int,int)),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),char,char,array(char),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),short,short,long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),long,long,long,*(long),*(long)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(long,long,*(struct(long,long)),*(struct(long,long,union`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(long,long,*(struct(long,long)),*(struct(long,long,union`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,long,*(struct(long,long)),*(struct(long,long,union`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,long,*(struct(long,long,union(double,struct`,*`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),char,char,short,*(struct(char,char,short,struct(short,char,char),struct(float,float,float),*(struct`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),short,struct(struct(short,short),short),char,char,float,float,struct(float,float,float),struct(double,double,double)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,char,char,struct(struct(short,short),short),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short)))
*	O
p	*(struct(char,char,short,char,char,char,char))
)	O
{	O
return	O
DISReadPDU	(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),*(union(struct(char,char,char,char,struct(int,int),short,short),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct`,struct`),struct(char,array(char)),long,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(float,float,float),long,struct(float,float,float)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),long,struct(double,double,double),struct(struct`,short,short,short,short),struct(float,float,float),float),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(float,float,float),struct(double,double,double),struct(struct`,short,short,short,short),struct(float,float,float),char,char,short,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),struct(long,struct`),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),char,char,array(char),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),short,short,long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),long,long,long,*(long),*(long)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,long,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),char,char,short,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),short,struct(struct`,short),char,char,float,float,struct(float,float,float),struct(double,double,double)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,char,char,struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short)))))->(int)
(	O
info	*(struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short))
->	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
,	O
p	*(struct(char,char,short,char,char,char,char))
)	O
;	O
}	O
void	O
DISxCloseApplication	(*(struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short)))->(void)
(	O
DISxApplicationInfo	struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short)
*	O
info	*(struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short))
)	O
{	O
DISCloseTransceiver	(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)))->(void)
(	O
info	*(struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short))
->	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
)	O
;	O
free	(*(void))->(void)
(	O
info	*(struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short))
)	O
;	O
}	O
dis_request_id	long
DISxIssueRequestID	(*(struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short)))->(long)
(	O
DISxApplicationInfo	struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short)
*	O
info	*(struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short))
)	O
{	O
dis_request_id	long
result	char
;	O
result	char
=	O
++	O
info	*(struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short))
->	O
last_request	short
;	O
if	O
(	O
info	*(struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short))
->	O
last_request	short
==	O
0xfffffff	int
)	O
{	O
info	*(struct(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),struct(char,char,char,char,struct(int,int),short,short),struct(short,short),short,short,short))
->	O
last_request	short
=	O
0	int
;	O
}	O
return	O
result	char
;	O
}	O
