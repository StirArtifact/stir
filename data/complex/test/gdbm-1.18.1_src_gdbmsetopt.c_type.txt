static	O
int	O
getbool	(*(void),int)->(int)
(	O
void	O
*	O
optval	*(void)
,	O
int	O
optlen	int
)	O
{	O
int	O
n	int
;	O
if	O
(	O
!	O
optval	*(void)
||	O
optlen	int
!=	O
sizeof	O
(	O
int	O
)	O
||	O
(	O
(	O
(	O
n	int
=	O
*	O
(	O
int	O
*	O
)	O
optval	*(void)
)	O
!=	O
TRUE	int
)	O
&&	O
n	int
!=	O
FALSE	int
)	O
)	O
return	O
-	O
1	int
;	O
return	O
n	int
;	O
}	O
static	O
int	O
get_size	(*(void),int,*(long))->(int)
(	O
void	O
*	O
optval	*(void)
,	O
int	O
optlen	int
,	O
size_t	long
*	O
ret	*(long)
)	O
{	O
if	O
(	O
!	O
optval	*(void)
)	O
return	O
-	O
1	int
;	O
if	O
(	O
optlen	int
==	O
sizeof	O
(	O
unsigned	O
)	O
)	O
*	O
ret	*(long)
=	O
*	O
(	O
unsigned	O
*	O
)	O
optval	*(void)
;	O
else	O
if	O
(	O
optlen	int
==	O
sizeof	O
(	O
unsigned	O
long	O
)	O
)	O
*	O
ret	*(long)
=	O
*	O
(	O
unsigned	O
long	O
*	O
)	O
optval	*(void)
;	O
else	O
if	O
(	O
optlen	int
==	O
sizeof	O
(	O
size_t	long
)	O
)	O
*	O
ret	*(long)
=	O
*	O
(	O
size_t	long
*	O
)	O
optval	*(void)
;	O
else	O
return	O
-	O
1	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
setopt_gdbm_setcachesize	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
(	O
GDBM_FILE	*(struct)
dbf	*(struct)
,	O
void	O
*	O
optval	*(void)
,	O
int	O
optlen	int
)	O
{	O
size_t	long
sz	long
;	O
if	O
(	O
dbf	*(struct)
->	O
bucket_cache	*(struct(*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),long,char,struct(int,int,int,*(char),long,int)))
!=	O
NULL	O
)	O
{	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_OPT_ALREADY_SET	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
get_size	(*(void),int,*(long))->(int)
(	O
optval	*(void)
,	O
optlen	int
,	O
&	O
sz	long
)	O
)	O
{	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_OPT_ILLEGAL	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
return	O
_gdbm_init_cache	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),long)->(int)
(	O
dbf	*(struct)
,	O
(	O
sz	long
>	O
9	int
)	O
?	O
sz	long
:	O
10	int
)	O
;	O
}	O
static	O
int	O
setopt_gdbm_getcachesize	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
(	O
GDBM_FILE	*(struct)
dbf	*(struct)
,	O
void	O
*	O
optval	*(void)
,	O
int	O
optlen	int
)	O
{	O
if	O
(	O
!	O
optval	*(void)
||	O
optlen	int
!=	O
sizeof	O
(	O
size_t	long
)	O
)	O
{	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_OPT_ILLEGAL	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
*	O
(	O
size_t	long
*	O
)	O
optval	*(void)
=	O
dbf	*(struct)
->	O
cache_size	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
setopt_gdbm_fastmode	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
(	O
GDBM_FILE	*(struct)
dbf	*(struct)
,	O
void	O
*	O
optval	*(void)
,	O
int	O
optlen	int
)	O
{	O
int	O
n	int
;	O
if	O
(	O
(	O
n	int
=	O
getbool	(*(void),int)->(int)
(	O
optval	*(void)
,	O
optlen	int
)	O
)	O
==	O
-	O
1	int
)	O
{	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_OPT_ILLEGAL	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
dbf	*(struct)
->	O
fast_write	int
=	O
n	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
setopt_gdbm_setsyncmode	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
(	O
GDBM_FILE	*(struct)
dbf	*(struct)
,	O
void	O
*	O
optval	*(void)
,	O
int	O
optlen	int
)	O
{	O
int	O
n	int
;	O
if	O
(	O
(	O
n	int
=	O
getbool	(*(void),int)->(int)
(	O
optval	*(void)
,	O
optlen	int
)	O
)	O
==	O
-	O
1	int
)	O
{	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_OPT_ILLEGAL	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
dbf	*(struct)
->	O
fast_write	int
=	O
!	O
n	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
setopt_gdbm_getsyncmode	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
(	O
GDBM_FILE	*(struct)
dbf	*(struct)
,	O
void	O
*	O
optval	*(void)
,	O
int	O
optlen	int
)	O
{	O
if	O
(	O
!	O
optval	*(void)
||	O
optlen	int
!=	O
sizeof	O
(	O
int	O
)	O
)	O
{	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_OPT_ILLEGAL	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
*	O
(	O
int	O
*	O
)	O
optval	*(void)
=	O
!	O
dbf	*(struct)
->	O
fast_write	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
setopt_gdbm_setcentfree	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
(	O
GDBM_FILE	*(struct)
dbf	*(struct)
,	O
void	O
*	O
optval	*(void)
,	O
int	O
optlen	int
)	O
{	O
int	O
n	int
;	O
if	O
(	O
(	O
n	int
=	O
getbool	(*(void),int)->(int)
(	O
optval	*(void)
,	O
optlen	int
)	O
)	O
==	O
-	O
1	int
)	O
{	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_OPT_ILLEGAL	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
dbf	*(struct)
->	O
central_free	int
=	O
n	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
setopt_gdbm_getcentfree	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
(	O
GDBM_FILE	*(struct)
dbf	*(struct)
,	O
void	O
*	O
optval	*(void)
,	O
int	O
optlen	int
)	O
{	O
if	O
(	O
!	O
optval	*(void)
||	O
optlen	int
!=	O
sizeof	O
(	O
int	O
)	O
)	O
{	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_OPT_ILLEGAL	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
*	O
(	O
int	O
*	O
)	O
optval	*(void)
=	O
!	O
dbf	*(struct)
->	O
central_free	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
setopt_gdbm_setcoalesceblks	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
(	O
GDBM_FILE	*(struct)
dbf	*(struct)
,	O
void	O
*	O
optval	*(void)
,	O
int	O
optlen	int
)	O
{	O
int	O
n	int
;	O
if	O
(	O
(	O
n	int
=	O
getbool	(*(void),int)->(int)
(	O
optval	*(void)
,	O
optlen	int
)	O
)	O
==	O
-	O
1	int
)	O
{	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_OPT_ILLEGAL	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
dbf	*(struct)
->	O
coalesce_blocks	int
=	O
n	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
setopt_gdbm_getcoalesceblks	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
(	O
GDBM_FILE	*(struct)
dbf	*(struct)
,	O
void	O
*	O
optval	*(void)
,	O
int	O
optlen	int
)	O
{	O
if	O
(	O
!	O
optval	*(void)
||	O
optlen	int
!=	O
sizeof	O
(	O
int	O
)	O
)	O
{	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_OPT_ILLEGAL	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
*	O
(	O
int	O
*	O
)	O
optval	*(void)
=	O
dbf	*(struct)
->	O
coalesce_blocks	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
setopt_gdbm_setmmap	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
(	O
GDBM_FILE	*(struct)
dbf	*(struct)
,	O
void	O
*	O
optval	*(void)
,	O
int	O
optlen	int
)	O
{	O
int	O
n	int
;	O
if	O
(	O
(	O
n	int
=	O
getbool	(*(void),int)->(int)
(	O
optval	*(void)
,	O
optlen	int
)	O
)	O
==	O
-	O
1	int
)	O
{	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_OPT_ILLEGAL	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
gdbm_file_sync	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)))->(int)
(	O
dbf	*(struct)
)	O
;	O
if	O
(	O
n	int
==	O
dbf	*(struct)
->	O
memory_mapping	int
)	O
return	O
0	int
;	O
if	O
(	O
n	int
)	O
{	O
if	O
(	O
_gdbm_mapped_init	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)))->(int)
(	O
dbf	*(struct)
)	O
==	O
0	int
)	O
dbf	*(struct)
->	O
memory_mapping	int
=	O
TRUE	int
;	O
else	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
_gdbm_mapped_unmap	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)))->(void)
(	O
dbf	*(struct)
)	O
;	O
dbf	*(struct)
->	O
memory_mapping	int
=	O
FALSE	int
;	O
}	O
return	O
0	int
;	O
}	O
static	O
int	O
setopt_gdbm_getmmap	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
(	O
GDBM_FILE	*(struct)
dbf	*(struct)
,	O
void	O
*	O
optval	*(void)
,	O
int	O
optlen	int
)	O
{	O
if	O
(	O
!	O
optval	*(void)
||	O
optlen	int
!=	O
sizeof	O
(	O
int	O
)	O
)	O
{	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_OPT_ILLEGAL	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
*	O
(	O
int	O
*	O
)	O
optval	*(void)
=	O
dbf	*(struct)
->	O
memory_mapping	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
setopt_gdbm_setmaxmapsize	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
(	O
GDBM_FILE	*(struct)
dbf	*(struct)
,	O
void	O
*	O
optval	*(void)
,	O
int	O
optlen	int
)	O
{	O
size_t	long
page_size	long
=	O
sysconf	(int)->(long)
(	O
_SC_PAGESIZE	int
)	O
;	O
size_t	long
sz	long
;	O
if	O
(	O
get_size	(*(void),int,*(long))->(int)
(	O
optval	*(void)
,	O
optlen	int
,	O
&	O
sz	long
)	O
)	O
{	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_OPT_ILLEGAL	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
dbf	*(struct)
->	O
mapped_size_max	long
=	O
(	O
(	O
sz	long
+	O
page_size	long
-	O
1	int
)	O
/	O
page_size	long
)	O
*	O
page_size	long
;	O
_gdbm_mapped_init	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)))->(int)
(	O
dbf	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
setopt_gdbm_getmaxmapsize	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
(	O
GDBM_FILE	*(struct)
dbf	*(struct)
,	O
void	O
*	O
optval	*(void)
,	O
int	O
optlen	int
)	O
{	O
if	O
(	O
!	O
optval	*(void)
||	O
optlen	int
!=	O
sizeof	O
(	O
size_t	long
)	O
)	O
{	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_OPT_ILLEGAL	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
*	O
(	O
size_t	long
*	O
)	O
optval	*(void)
=	O
dbf	*(struct)
->	O
mapped_size_max	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
setopt_gdbm_getflags	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
(	O
GDBM_FILE	*(struct)
dbf	*(struct)
,	O
void	O
*	O
optval	*(void)
,	O
int	O
optlen	int
)	O
{	O
if	O
(	O
!	O
optval	*(void)
||	O
optlen	int
!=	O
sizeof	O
(	O
int	O
)	O
)	O
{	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_OPT_ILLEGAL	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
int	O
flags	int
=	O
dbf	*(struct)
->	O
read_write	int
;	O
if	O
(	O
!	O
dbf	*(struct)
->	O
fast_write	int
)	O
flags	int
|=	O
GDBM_SYNC	int
;	O
if	O
(	O
!	O
dbf	*(struct)
->	O
file_locking	int
)	O
flags	int
|=	O
GDBM_NOLOCK	int
;	O
if	O
(	O
!	O
dbf	*(struct)
->	O
memory_mapping	int
)	O
flags	int
|=	O
GDBM_NOMMAP	int
;	O
*	O
(	O
int	O
*	O
)	O
optval	*(void)
=	O
flags	int
;	O
}	O
return	O
0	int
;	O
}	O
static	O
int	O
setopt_gdbm_getdbname	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
(	O
GDBM_FILE	*(struct)
dbf	*(struct)
,	O
void	O
*	O
optval	*(void)
,	O
int	O
optlen	int
)	O
{	O
if	O
(	O
!	O
optval	*(void)
||	O
optlen	int
!=	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
{	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_OPT_ILLEGAL	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
char	O
*	O
p	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
dbf	*(struct)
->	O
name	*(char)
)	O
;	O
if	O
(	O
!	O
p	*(char)
)	O
{	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_MALLOC_ERROR	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
*	O
(	O
char	O
*	O
*	O
)	O
optval	*(void)
=	O
p	*(char)
;	O
}	O
return	O
0	int
;	O
}	O
static	O
int	O
setopt_gdbm_getblocksize	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
(	O
GDBM_FILE	*(struct)
dbf	*(struct)
,	O
void	O
*	O
optval	*(void)
,	O
int	O
optlen	int
)	O
{	O
if	O
(	O
optval	*(void)
&&	O
optlen	int
==	O
sizeof	O
(	O
int	O
)	O
)	O
{	O
*	O
(	O
int	O
*	O
)	O
optval	*(void)
=	O
dbf	*(struct)
->	O
header	*(struct(int,int,long,int,int,int,int,long,struct(int,int,long,array(struct(int,long)))))
->	O
block_size	int
;	O
return	O
0	int
;	O
}	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_OPT_ILLEGAL	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
typedef	O
int	O
(	O
*	O
setopt_handler	*((*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct`),*(long),*(struct`),long,long,*(struct`),int,*(struct`),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int))
)	O
(	O
GDBM_FILE	*(struct)
,	O
void	O
*	O
,	O
int	O
)	O
;	O
static	O
setopt_handler	*((*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct`),*(long),*(struct`),long,long,*(struct`),int,*(struct`),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int))
setopt_handler_tab	array(*((*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct`),*(long),*(struct`),long,long,*(struct`),int,*(struct`),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)))
[	O
]	O
=	O
{	O
[	O
GDBM_SETCACHESIZE	int
]	O
=	O
setopt_gdbm_setcachesize	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
,	O
[	O
GDBM_GETCACHESIZE	int
]	O
=	O
setopt_gdbm_getcachesize	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
,	O
[	O
GDBM_FASTMODE	int
]	O
=	O
setopt_gdbm_fastmode	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
,	O
[	O
GDBM_SETSYNCMODE	int
]	O
=	O
setopt_gdbm_setsyncmode	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
,	O
[	O
GDBM_GETSYNCMODE	int
]	O
=	O
setopt_gdbm_getsyncmode	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
,	O
[	O
GDBM_SETCENTFREE	int
]	O
=	O
setopt_gdbm_setcentfree	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
,	O
[	O
GDBM_GETCENTFREE	int
]	O
=	O
setopt_gdbm_getcentfree	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
,	O
[	O
GDBM_SETCOALESCEBLKS	int
]	O
=	O
setopt_gdbm_setcoalesceblks	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
,	O
[	O
GDBM_GETCOALESCEBLKS	int
]	O
=	O
setopt_gdbm_getcoalesceblks	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
,	O
[	O
GDBM_SETMMAP	int
]	O
=	O
setopt_gdbm_setmmap	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
,	O
[	O
GDBM_GETMMAP	int
]	O
=	O
setopt_gdbm_getmmap	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
,	O
[	O
GDBM_SETMAXMAPSIZE	int
]	O
=	O
setopt_gdbm_setmaxmapsize	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
,	O
[	O
GDBM_GETMAXMAPSIZE	int
]	O
=	O
setopt_gdbm_getmaxmapsize	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
,	O
[	O
GDBM_GETFLAGS	int
]	O
=	O
setopt_gdbm_getflags	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
,	O
[	O
GDBM_GETDBNAME	int
]	O
=	O
setopt_gdbm_getdbname	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
,	O
[	O
GDBM_GETBLOCKSIZE	int
]	O
=	O
setopt_gdbm_getblocksize	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)
,	O
}	O
;	O
int	O
gdbm_setopt	(*(struct),int,*(void),int)->(int)
(	O
GDBM_FILE	*(struct)
dbf	*(struct)
,	O
int	O
optflag	int
,	O
void	O
*	O
optval	*(void)
,	O
int	O
optlen	int
)	O
{	O
GDBM_ASSERT_CONSISTENCY	O
(	O
dbf	*(struct)
,	O
-	O
1	int
)	O
;	O
if	O
(	O
optflag	int
>=	O
0	int
&&	O
optflag	int
<	O
sizeof	O
(	O
setopt_handler_tab	array(*((*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct`),*(long),*(struct`),long,long,*(struct`),int,*(struct`),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)))
)	O
/	O
sizeof	O
(	O
setopt_handler_tab	array(*((*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct`),*(long),*(struct`),long,long,*(struct`),int,*(struct`),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)))
[	O
0	int
]	O
)	O
&&	O
setopt_handler_tab	array(*((*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct`),*(long),*(struct`),long,long,*(struct`),int,*(struct`),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)))
[	O
optflag	int
]	O
)	O
return	O
setopt_handler_tab	array(*((*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct`),*(long),*(struct`),long,long,*(struct`),int,*(struct`),int,int,int,int,long,*(void),long,long,long)),*(void),int)->(int)))
[	O
optflag	int
]	O
(	O
dbf	*(struct)
,	O
optval	*(void)
,	O
optlen	int
)	O
;	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_OPT_ILLEGAL	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
