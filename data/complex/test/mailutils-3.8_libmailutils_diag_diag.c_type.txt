void	O
mu_diag_init	()->(void)
(	O
)	O
{	O
if	O
(	O
!	O
mu_strerr	*(struct)
)	O
mu_stdstream_setup	(int)->(void)
(	O
MU_STDSTREAM_RESET_NONE	int
)	O
;	O
}	O
void	O
mu_diag_voutput	(int,*(char),array(struct(int,int,*(void),*(void))))->(void)
(	O
int	O
level	int
,	O
const	O
char	O
*	O
fmt	*(char)
,	O
va_list	array(struct(int,int,*(void),*(void)))
ap	array(struct(int,int,*(void),*(void)))
)	O
{	O
mu_diag_init	()->(void)
(	O
)	O
;	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
mu_strerr	*(struct)
,	O
"\033s<%d>"	*(char)
,	O
level	int
)	O
;	O
mu_stream_vprintf	(*(struct),*(char),array(struct(int,int,*(void),*(void))))->(int)
(	O
mu_strerr	*(struct)
,	O
fmt	*(char)
,	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
mu_strerr	*(struct)
,	O
"\n"	*(char)
,	O
1	int
,	O
NULL	O
)	O
;	O
}	O
void	O
mu_diag_output	(int,*(char))->(void)
(	O
int	O
level	int
,	O
const	O
char	O
*	O
fmt	*(char)
,	O
...	O
)	O
{	O
va_list	array(struct(int,int,*(void),*(void)))
ap	array(struct(int,int,*(void),*(void)))
;	O
va_start	O
(	O
ap	array(struct(int,int,*(void),*(void)))
,	O
fmt	*(char)
)	O
;	O
mu_diag_voutput	(int,*(char),array(struct(int,int,*(void),*(void))))->(void)
(	O
level	int
,	O
fmt	*(char)
,	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
}	O
void	O
mu_vdiag_at_locus_range	(int,*(struct(struct(*(char),int,int),struct(*(char),int,int))),*(char),array(struct(int,int,*(void),*(void))))->(void)
(	O
int	O
level	int
,	O
struct	O
mu_locus_range	struct(struct(*(char),int,int),struct(*(char),int,int))
const	O
*	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
,	O
const	O
char	O
*	O
fmt	*(char)
,	O
va_list	array(struct(int,int,*(void),*(void)))
ap	array(struct(int,int,*(void),*(void)))
)	O
{	O
struct	O
mu_locus_range	struct(struct(*(char),int,int),struct(*(char),int,int))
old_loc	struct(struct(*(char),int,int),struct(*(char),int,int))
=	O
MU_LOCUS_RANGE_INITIALIZER	O
;	O
int	O
old_mode	int
;	O
int	O
restore	int
=	O
0	int
;	O
if	O
(	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
)	O
{	O
if	O
(	O
mu_stream_ioctl	(*(struct),int,int,*(void))->(int)
(	O
mu_strerr	*(struct)
,	O
MU_IOCTL_LOGSTREAM	int
,	O
MU_IOCTL_LOGSTREAM_GET_LOCUS_RANGE	int
,	O
&	O
old_loc	struct(struct(*(char),int,int),struct(*(char),int,int))
)	O
==	O
0	int
)	O
{	O
if	O
(	O
mu_stream_ioctl	(*(struct),int,int,*(void))->(int)
(	O
mu_strerr	*(struct)
,	O
MU_IOCTL_LOGSTREAM	int
,	O
MU_IOCTL_LOGSTREAM_GET_MODE	int
,	O
&	O
old_mode	int
)	O
==	O
0	int
)	O
{	O
int	O
mode	int
=	O
old_mode	int
|	O
MU_LOGMODE_LOCUS	int
;	O
mu_stream_ioctl	(*(struct),int,int,*(void))->(int)
(	O
mu_strerr	*(struct)
,	O
MU_IOCTL_LOGSTREAM	int
,	O
MU_IOCTL_LOGSTREAM_SET_MODE	int
,	O
&	O
mode	int
)	O
;	O
mu_stream_ioctl	(*(struct),int,int,*(void))->(int)
(	O
mu_strerr	*(struct)
,	O
MU_IOCTL_LOGSTREAM	int
,	O
MU_IOCTL_LOGSTREAM_SET_LOCUS_RANGE	int
,	O
(	O
void	O
*	O
)	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
)	O
;	O
restore	int
=	O
1	int
;	O
}	O
}	O
}	O
mu_diag_voutput	(int,*(char),array(struct(int,int,*(void),*(void))))->(void)
(	O
level	int
,	O
fmt	*(char)
,	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
if	O
(	O
restore	int
)	O
{	O
mu_stream_ioctl	(*(struct),int,int,*(void))->(int)
(	O
mu_strerr	*(struct)
,	O
MU_IOCTL_LOGSTREAM	int
,	O
MU_IOCTL_LOGSTREAM_SET_LOCUS_RANGE	int
,	O
&	O
old_loc	struct(struct(*(char),int,int),struct(*(char),int,int))
)	O
;	O
mu_stream_ioctl	(*(struct),int,int,*(void))->(int)
(	O
mu_strerr	*(struct)
,	O
MU_IOCTL_LOGSTREAM	int
,	O
MU_IOCTL_LOGSTREAM_SET_MODE	int
,	O
&	O
old_mode	int
)	O
;	O
mu_locus_range_deinit	(*(struct(struct(*(char),int,int),struct(*(char),int,int))))->(void)
(	O
&	O
old_loc	struct(struct(*(char),int,int),struct(*(char),int,int))
)	O
;	O
}	O
}	O
void	O
mu_diag_at_locus_range	(int,*(struct(struct(*(char),int,int),struct(*(char),int,int))),*(char))->(void)
(	O
int	O
level	int
,	O
struct	O
mu_locus_range	struct(struct(*(char),int,int),struct(*(char),int,int))
const	O
*	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
,	O
const	O
char	O
*	O
fmt	*(char)
,	O
...	O
)	O
{	O
va_list	array(struct(int,int,*(void),*(void)))
ap	array(struct(int,int,*(void),*(void)))
;	O
va_start	O
(	O
ap	array(struct(int,int,*(void),*(void)))
,	O
fmt	*(char)
)	O
;	O
mu_vdiag_at_locus_range	(int,*(struct(struct(*(char),int,int),struct(*(char),int,int))),*(char),array(struct(int,int,*(void),*(void))))->(void)
(	O
level	int
,	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
,	O
fmt	*(char)
,	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
}	O
void	O
mu_diag_at_locus_point	(int,*(struct(*(char),int,int)),*(char))->(void)
(	O
int	O
level	int
,	O
struct	O
mu_locus_point	struct(*(char),int,int)
const	O
*	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
,	O
const	O
char	O
*	O
fmt	*(char)
,	O
...	O
)	O
{	O
va_list	array(struct(int,int,*(void),*(void)))
ap	array(struct(int,int,*(void),*(void)))
;	O
struct	O
mu_locus_range	struct(struct(*(char),int,int),struct(*(char),int,int))
lr	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
=	O
MU_LOCUS_RANGE_INITIALIZER	O
;	O
lr	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
.	O
beg	struct(*(char),int,int)
=	O
*	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
;	O
va_start	O
(	O
ap	array(struct(int,int,*(void),*(void)))
,	O
fmt	*(char)
)	O
;	O
mu_vdiag_at_locus_range	(int,*(struct(struct(*(char),int,int),struct(*(char),int,int))),*(char),array(struct(int,int,*(void),*(void))))->(void)
(	O
level	int
,	O
&	O
lr	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
,	O
fmt	*(char)
,	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
}	O
void	O
mu_diag_vprintf	(int,*(char),array(struct(int,int,*(void),*(void))))->(void)
(	O
int	O
level	int
,	O
const	O
char	O
*	O
fmt	*(char)
,	O
va_list	array(struct(int,int,*(void),*(void)))
ap	array(struct(int,int,*(void),*(void)))
)	O
{	O
mu_diag_init	()->(void)
(	O
)	O
;	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
mu_strerr	*(struct)
,	O
"\033s<%d>"	*(char)
,	O
level	int
)	O
;	O
mu_stream_vprintf	(*(struct),*(char),array(struct(int,int,*(void),*(void))))->(int)
(	O
mu_strerr	*(struct)
,	O
fmt	*(char)
,	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
}	O
void	O
mu_diag_cont_vprintf	(*(char),array(struct(int,int,*(void),*(void))))->(void)
(	O
const	O
char	O
*	O
fmt	*(char)
,	O
va_list	array(struct(int,int,*(void),*(void)))
ap	array(struct(int,int,*(void),*(void)))
)	O
{	O
mu_diag_init	()->(void)
(	O
)	O
;	O
mu_stream_vprintf	(*(struct),*(char),array(struct(int,int,*(void),*(void))))->(int)
(	O
mu_strerr	*(struct)
,	O
fmt	*(char)
,	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
}	O
void	O
mu_diag_printf	(int,*(char))->(void)
(	O
int	O
level	int
,	O
const	O
char	O
*	O
fmt	*(char)
,	O
...	O
)	O
{	O
va_list	array(struct(int,int,*(void),*(void)))
ap	array(struct(int,int,*(void),*(void)))
;	O
va_start	O
(	O
ap	array(struct(int,int,*(void),*(void)))
,	O
fmt	*(char)
)	O
;	O
mu_diag_vprintf	(int,*(char),array(struct(int,int,*(void),*(void))))->(void)
(	O
level	int
,	O
fmt	*(char)
,	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
}	O
void	O
mu_diag_cont_printf	(*(char))->(void)
(	O
const	O
char	O
*	O
fmt	*(char)
,	O
...	O
)	O
{	O
va_list	array(struct(int,int,*(void),*(void)))
ap	array(struct(int,int,*(void),*(void)))
;	O
va_start	O
(	O
ap	array(struct(int,int,*(void),*(void)))
,	O
fmt	*(char)
)	O
;	O
mu_diag_cont_vprintf	(*(char),array(struct(int,int,*(void),*(void))))->(void)
(	O
fmt	*(char)
,	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
}	O
const	O
char	O
*	O
mu_diag_level_to_string	(int)->(*(char))
(	O
int	O
level	int
)	O
{	O
switch	O
(	O
level	int
)	O
{	O
case	O
MU_DIAG_EMERG	O
:	O
return	O
_	O
(	O
"emergency"	*(char)
)	O
;	O
case	O
MU_DIAG_ALERT	O
:	O
return	O
_	O
(	O
"alert"	*(char)
)	O
;	O
case	O
MU_DIAG_CRIT	O
:	O
return	O
_	O
(	O
"critical"	*(char)
)	O
;	O
case	O
MU_DIAG_ERROR	O
:	O
return	O
_	O
(	O
"error"	*(char)
)	O
;	O
case	O
MU_DIAG_WARNING	O
:	O
return	O
_	O
(	O
"warning"	*(char)
)	O
;	O
case	O
MU_DIAG_NOTICE	O
:	O
return	O
_	O
(	O
"notice"	*(char)
)	O
;	O
case	O
MU_DIAG_INFO	O
:	O
return	O
_	O
(	O
"info"	*(char)
)	O
;	O
case	O
MU_DIAG_DEBUG	O
:	O
return	O
_	O
(	O
"debug"	*(char)
)	O
;	O
}	O
return	O
_	O
(	O
"unknown"	*(char)
)	O
;	O
}	O
void	O
mu_diag_funcall	(int,*(char),*(char),int)->(void)
(	O
mu_log_level_t	int
level	int
,	O
const	O
char	O
*	O
func	*(char)
,	O
const	O
char	O
*	O
arg	*(char)
,	O
int	O
err	int
)	O
{	O
if	O
(	O
err	int
)	O
mu_diag_output	(int,*(char))->(void)
(	O
level	int
,	O
_	O
(	O
"%s(%s) failed: %s"	*(char)
)	O
,	O
func	*(char)
,	O
mu_prstr	(*(char))->(*(char))
(	O
arg	*(char)
)	O
,	O
mu_strerror	(int)->(*(char))
(	O
err	int
)	O
)	O
;	O
else	O
mu_diag_output	(int,*(char))->(void)
(	O
level	int
,	O
_	O
(	O
"%s(%s) failed"	*(char)
)	O
,	O
func	*(char)
,	O
mu_prstr	(*(char))->(*(char))
(	O
arg	*(char)
)	O
)	O
;	O
}	O
