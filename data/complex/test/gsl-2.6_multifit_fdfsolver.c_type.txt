gsl_multifit_fdfsolver	struct(*(struct(*(char),long,*((*`,long,long)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(void)))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),long,*(void))
*	O
gsl_multifit_fdfsolver_alloc	(*(struct(*(char),long,*((*`,long,long)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(void)))),long,long)->(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))))
(	O
const	O
gsl_multifit_fdfsolver_type	struct(*(char),long,*((*(void),long,long)->(int)),*((*(void),*(struct(long,long,*`,*`,int)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)))->(int)),*((*(void),*(struct(long,long,*`,*`,int)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)))->(int)),*((*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(void))->(void)))
*	O
T	*(struct(*(char),long,*((*(void),long,long)->(int)),*((*(void),*(struct`),*(struct`),*(struct`),*(struct`))->(int)),*((*(void),*(struct`),*(struct`),*(struct`),*(struct`))->(int)),*((*(void))->(void))))
,	O
size_t	long
n	int
,	O
size_t	long
p	int
)	O
{	O
int	O
status	int
;	O
gsl_multifit_fdfsolver	struct(*(struct(*(char),long,*((*`,long,long)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(void)))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),long,*(void))
*	O
s	*(float)
;	O
if	O
(	O
n	int
<	O
p	int
)	O
{	O
GSL_ERROR_VAL	O
(	O
"insufficient data points, n < p"	*(char)
,	O
GSL_EINVAL	int
,	O
0	int
)	O
;	O
}	O
s	*(float)
=	O
(	O
gsl_multifit_fdfsolver	struct(*(struct(*(char),long,*((*`,long,long)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(void)))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),long,*(void))
*	O
)	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
gsl_multifit_fdfsolver	struct(*(struct(*(char),long,*((*`,long,long)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(void)))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),long,*(void))
)	O
)	O
;	O
if	O
(	O
s	*(float)
==	O
0	int
)	O
{	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for multifit solver struct"	*(char)
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
s	*(float)
->	O
x	double
=	O
gsl_vector_calloc	(long)->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
p	int
)	O
;	O
if	O
(	O
s	*(float)
->	O
x	double
==	O
0	int
)	O
{	O
gsl_multifit_fdfsolver_free	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))))->(void)
(	O
s	*(float)
)	O
;	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for x"	*(char)
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
s	*(float)
->	O
f	*(double)
=	O
gsl_vector_calloc	(long)->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
n	int
)	O
;	O
if	O
(	O
s	*(float)
->	O
f	*(double)
==	O
0	int
)	O
{	O
gsl_multifit_fdfsolver_free	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))))->(void)
(	O
s	*(float)
)	O
;	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for f"	*(char)
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
s	*(float)
->	O
dx	*(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_vector_calloc	(long)->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
p	int
)	O
;	O
if	O
(	O
s	*(float)
->	O
dx	*(struct(long,long,*(double),*(struct(long,*(double))),int))
==	O
0	int
)	O
{	O
gsl_multifit_fdfsolver_free	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))))->(void)
(	O
s	*(float)
)	O
;	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for dx"	*(char)
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
s	*(float)
->	O
g	*(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_vector_alloc	(long)->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
p	int
)	O
;	O
if	O
(	O
s	*(float)
->	O
g	*(struct(long,long,*(double),*(struct(long,*(double))),int))
==	O
0	int
)	O
{	O
gsl_multifit_fdfsolver_free	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))))->(void)
(	O
s	*(float)
)	O
;	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for g"	*(char)
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
s	*(float)
->	O
sqrt_wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_vector_calloc	(long)->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
n	int
)	O
;	O
if	O
(	O
s	*(float)
->	O
sqrt_wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
==	O
0	int
)	O
{	O
gsl_multifit_fdfsolver_free	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))))->(void)
(	O
s	*(float)
)	O
;	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for sqrt_wts"	*(char)
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
s	*(float)
->	O
state	*(int)
=	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
T	*(struct(*(char),long,*((*(void),long,long)->(int)),*((*(void),*(struct`),*(struct`),*(struct`),*(struct`))->(int)),*((*(void),*(struct`),*(struct`),*(struct`),*(struct`))->(int)),*((*(void))->(void))))
->	O
size	long
)	O
;	O
if	O
(	O
s	*(float)
->	O
state	*(int)
==	O
0	int
)	O
{	O
gsl_multifit_fdfsolver_free	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))))->(void)
(	O
s	*(float)
)	O
;	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for multifit solver state"	*(char)
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
s	*(float)
->	O
type	*(struct(*(char),long,*((*(void),long,long)->(int)),*((*(void),*(struct`),*(struct`),*(struct`),*(struct`))->(int)),*((*(void),*(struct`),*(struct`),*(struct`),*(struct`))->(int)),*((*(void))->(void))))
=	O
T	*(struct(*(char),long,*((*(void),long,long)->(int)),*((*(void),*(struct`),*(struct`),*(struct`),*(struct`))->(int)),*((*(void),*(struct`),*(struct`),*(struct`),*(struct`))->(int)),*((*(void))->(void))))
;	O
status	int
=	O
(	O
s	*(float)
->	O
type	*(struct(*(char),long,*((*(void),long,long)->(int)),*((*(void),*(struct`),*(struct`),*(struct`),*(struct`))->(int)),*((*(void),*(struct`),*(struct`),*(struct`),*(struct`))->(int)),*((*(void))->(void))))
->	O
alloc	*((*(void),long,long)->(int))
)	O
(	O
s	*(float)
->	O
state	*(int)
,	O
n	int
,	O
p	int
)	O
;	O
if	O
(	O
status	int
!=	O
GSL_SUCCESS	int
)	O
{	O
gsl_multifit_fdfsolver_free	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))))->(void)
(	O
s	*(float)
)	O
;	O
GSL_ERROR_VAL	O
(	O
"failed to set solver"	*(char)
,	O
status	int
,	O
0	int
)	O
;	O
}	O
s	*(float)
->	O
fdf	*((double,*(void),*(double),*(double))->(void))
=	O
NULL	O
;	O
s	*(float)
->	O
niter	long
=	O
0	int
;	O
return	O
s	*(float)
;	O
}	O
int	O
gsl_multifit_fdfsolver_set	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
gsl_multifit_fdfsolver	struct(*(struct(*(char),long,*((*`,long,long)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(void)))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),long,*(void))
*	O
s	*(float)
,	O
gsl_multifit_function_fdf	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
*	O
f	*(double)
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
x	double
)	O
{	O
return	O
gsl_multifit_fdfsolver_wset	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
s	*(float)
,	O
f	*(double)
,	O
x	double
,	O
NULL	O
)	O
;	O
}	O
int	O
gsl_multifit_fdfsolver_wset	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
gsl_multifit_fdfsolver	struct(*(struct(*(char),long,*((*`,long,long)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(void)))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),long,*(void))
*	O
s	*(float)
,	O
gsl_multifit_function_fdf	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
*	O
f	*(double)
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
x	double
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
{	O
const	O
size_t	long
n	int
=	O
s	*(float)
->	O
f	*(double)
->	O
size	long
;	O
if	O
(	O
n	int
!=	O
f	*(double)
->	O
n	int
)	O
{	O
GSL_ERROR	O
(	O
"function size does not match solver"	*(char)
,	O
GSL_EBADLEN	int
)	O
;	O
}	O
else	O
if	O
(	O
s	*(float)
->	O
x	double
->	O
size	long
!=	O
x	double
->	O
size	long
)	O
{	O
GSL_ERROR	O
(	O
"vector length does not match solver"	*(char)
,	O
GSL_EBADLEN	int
)	O
;	O
}	O
else	O
if	O
(	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
!=	O
NULL	O
&&	O
n	int
!=	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
->	O
size	long
)	O
{	O
GSL_ERROR	O
(	O
"weight vector length does not match solver"	*(char)
,	O
GSL_EBADLEN	int
)	O
;	O
}	O
else	O
{	O
size_t	long
i	long
;	O
s	*(float)
->	O
fdf	*((double,*(void),*(double),*(double))->(void))
=	O
f	*(double)
;	O
gsl_vector_memcpy	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
s	*(float)
->	O
x	double
,	O
x	double
)	O
;	O
s	*(float)
->	O
niter	long
=	O
0	int
;	O
if	O
(	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
{	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
n	int
;	O
++	O
i	long
)	O
{	O
double	O
wi	double
=	O
gsl_vector_get	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long)->(double)
(	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
i	long
)	O
;	O
gsl_vector_set	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long,double)->(void)
(	O
s	*(float)
->	O
sqrt_wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
i	long
,	O
sqrt	(double)->(double)
(	O
wi	double
)	O
)	O
;	O
}	O
}	O
else	O
gsl_vector_set_all	(*(struct(long,long,*(double),*(struct(long,*`)),int)),double)->(void)
(	O
s	*(float)
->	O
sqrt_wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
1.0	int
)	O
;	O
return	O
(	O
s	*(float)
->	O
type	*(struct(*(char),long,*((*(void),long,long)->(int)),*((*(void),*(struct`),*(struct`),*(struct`),*(struct`))->(int)),*((*(void),*(struct`),*(struct`),*(struct`),*(struct`))->(int)),*((*(void))->(void))))
->	O
set	*((*(void),*(struct(*((*`,*`,*`)->(int)),long,long,*(void))),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)))->(int))
)	O
(	O
s	*(float)
->	O
state	*(int)
,	O
s	*(float)
->	O
sqrt_wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
s	*(float)
->	O
fdf	*((double,*(void),*(double),*(double))->(void))
,	O
s	*(float)
->	O
x	double
,	O
s	*(float)
->	O
f	*(double)
,	O
s	*(float)
->	O
dx	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
}	O
}	O
int	O
gsl_multifit_fdfsolver_iterate	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))))->(int)
(	O
gsl_multifit_fdfsolver	struct(*(struct(*(char),long,*((*`,long,long)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(void)))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),long,*(void))
*	O
s	*(float)
)	O
{	O
int	O
status	int
=	O
(	O
s	*(float)
->	O
type	*(struct(*(char),long,*((*(void),long,long)->(int)),*((*(void),*(struct`),*(struct`),*(struct`),*(struct`))->(int)),*((*(void),*(struct`),*(struct`),*(struct`),*(struct`))->(int)),*((*(void))->(void))))
->	O
iterate	*((*(void),*(struct(*((*`,*`,*`)->(int)),long,long,*(void))),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)))->(int))
)	O
(	O
s	*(float)
->	O
state	*(int)
,	O
s	*(float)
->	O
sqrt_wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
s	*(float)
->	O
fdf	*((double,*(void),*(double),*(double))->(void))
,	O
s	*(float)
->	O
x	double
,	O
s	*(float)
->	O
f	*(double)
,	O
s	*(float)
->	O
dx	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
s	*(float)
->	O
niter	long
++	O
;	O
return	O
status	int
;	O
}	O
int	O
gsl_multifit_fdfsolver_driver	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),long,double,double,double,*(int))->(int)
(	O
gsl_multifit_fdfsolver	struct(*(struct(*(char),long,*((*`,long,long)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(void)))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),long,*(void))
*	O
s	*(float)
,	O
const	O
size_t	long
maxiter	long
,	O
const	O
double	O
xtol	double
,	O
const	O
double	O
gtol	double
,	O
const	O
double	O
ftol	double
,	O
int	O
*	O
info	*(int)
)	O
{	O
int	O
status	int
;	O
size_t	long
iter	long
=	O
0	int
;	O
do	O
{	O
status	int
=	O
gsl_multifit_fdfsolver_iterate	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))))->(int)
(	O
s	*(float)
)	O
;	O
if	O
(	O
status	int
!=	O
GSL_SUCCESS	int
&&	O
status	int
!=	O
GSL_ENOPROG	int
)	O
break	O
;	O
status	int
=	O
gsl_multifit_fdfsolver_test	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),double,double,double,*(int))->(int)
(	O
s	*(float)
,	O
xtol	double
,	O
gtol	double
,	O
ftol	double
,	O
info	*(int)
)	O
;	O
}	O
while	O
(	O
status	int
==	O
GSL_CONTINUE	int
&&	O
++	O
iter	long
<	O
maxiter	long
)	O
;	O
if	O
(	O
status	int
==	O
GSL_ETOLF	int
||	O
status	int
==	O
GSL_ETOLX	int
||	O
status	int
==	O
GSL_ETOLG	int
)	O
{	O
*	O
info	*(int)
=	O
status	int
;	O
status	int
=	O
GSL_SUCCESS	int
;	O
}	O
if	O
(	O
iter	long
>=	O
maxiter	long
&&	O
status	int
!=	O
GSL_SUCCESS	int
)	O
status	int
=	O
GSL_EMAXITER	int
;	O
return	O
status	int
;	O
}	O
int	O
gsl_multifit_fdfsolver_jac	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(long,long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
gsl_multifit_fdfsolver	struct(*(struct(*(char),long,*((*`,long,long)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(void)))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),long,*(void))
*	O
s	*(float)
,	O
gsl_matrix	struct(long,long,long,*(double),*(struct(long,*(double))),int)
*	O
J	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
)	O
{	O
const	O
size_t	long
n	int
=	O
s	*(float)
->	O
f	*(double)
->	O
size	long
;	O
const	O
size_t	long
p	int
=	O
s	*(float)
->	O
x	double
->	O
size	long
;	O
if	O
(	O
n	int
!=	O
J	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
->	O
size1	long
||	O
p	int
!=	O
J	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
->	O
size2	long
)	O
{	O
GSL_ERROR	O
(	O
"Jacobian dimensions do not match solver"	*(char)
,	O
GSL_EBADLEN	int
)	O
;	O
}	O
else	O
{	O
return	O
(	O
s	*(float)
->	O
type	*(struct(*(char),long,*((*(void),long,long)->(int)),*((*(void),*(struct`),*(struct`),*(struct`),*(struct`))->(int)),*((*(void),*(struct`),*(struct`),*(struct`),*(struct`))->(int)),*((*(void))->(void))))
->	O
jac	*((*(void),*(struct(long,long,long,*(double),*(struct`),int)))->(int))
)	O
(	O
s	*(float)
->	O
state	*(int)
,	O
J	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
}	O
}	O
void	O
gsl_multifit_fdfsolver_free	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))))->(void)
(	O
gsl_multifit_fdfsolver	struct(*(struct(*(char),long,*((*`,long,long)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(void)))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),long,*(void))
*	O
s	*(float)
)	O
{	O
RETURN_IF_NULL	O
(	O
s	*(float)
)	O
;	O
if	O
(	O
s	*(float)
->	O
state	*(int)
)	O
{	O
(	O
s	*(float)
->	O
type	*(struct(*(char),long,*((*(void),long,long)->(int)),*((*(void),*(struct`),*(struct`),*(struct`),*(struct`))->(int)),*((*(void),*(struct`),*(struct`),*(struct`),*(struct`))->(int)),*((*(void))->(void))))
->	O
free	(*(void))->(void)
)	O
(	O
s	*(float)
->	O
state	*(int)
)	O
;	O
free	(*(void))->(void)
(	O
s	*(float)
->	O
state	*(int)
)	O
;	O
}	O
if	O
(	O
s	*(float)
->	O
dx	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
gsl_vector_free	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
s	*(float)
->	O
dx	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
if	O
(	O
s	*(float)
->	O
x	double
)	O
gsl_vector_free	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
s	*(float)
->	O
x	double
)	O
;	O
if	O
(	O
s	*(float)
->	O
f	*(double)
)	O
gsl_vector_free	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
s	*(float)
->	O
f	*(double)
)	O
;	O
if	O
(	O
s	*(float)
->	O
sqrt_wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
gsl_vector_free	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
s	*(float)
->	O
sqrt_wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
if	O
(	O
s	*(float)
->	O
g	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
gsl_vector_free	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
s	*(float)
->	O
g	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
free	(*(void))->(void)
(	O
s	*(float)
)	O
;	O
}	O
const	O
char	O
*	O
gsl_multifit_fdfsolver_name	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))))->(*(char))
(	O
const	O
gsl_multifit_fdfsolver	struct(*(struct(*(char),long,*((*`,long,long)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(void)))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),long,*(void))
*	O
s	*(float)
)	O
{	O
return	O
s	*(float)
->	O
type	*(struct(*(char),long,*((*(void),long,long)->(int)),*((*(void),*(struct`),*(struct`),*(struct`),*(struct`))->(int)),*((*(void),*(struct`),*(struct`),*(struct`),*(struct`))->(int)),*((*(void))->(void))))
->	O
name	*(char)
;	O
}	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
gsl_multifit_fdfsolver_position	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))))->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
const	O
gsl_multifit_fdfsolver	struct(*(struct(*(char),long,*((*`,long,long)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(void)))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),long,*(void))
*	O
s	*(float)
)	O
{	O
return	O
s	*(float)
->	O
x	double
;	O
}	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
gsl_multifit_fdfsolver_residual	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))))->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
const	O
gsl_multifit_fdfsolver	struct(*(struct(*(char),long,*((*`,long,long)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(void)))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),long,*(void))
*	O
s	*(float)
)	O
{	O
return	O
s	*(float)
->	O
f	*(double)
;	O
}	O
size_t	long
gsl_multifit_fdfsolver_niter	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))))->(long)
(	O
const	O
gsl_multifit_fdfsolver	struct(*(struct(*(char),long,*((*`,long,long)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(void)))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),long,*(void))
*	O
s	*(float)
)	O
{	O
return	O
s	*(float)
->	O
niter	long
;	O
}	O
int	O
gsl_multifit_eval_wf	(*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
gsl_multifit_function_fdf	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
*	O
fdf	*((double,*(void),*(double),*(double))->(void))
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
x	double
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
swts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
y	double
)	O
{	O
int	O
s	*(float)
=	O
(	O
(	O
*	O
(	O
(	O
fdf	*((double,*(void),*(double),*(double))->(void))
)	O
->	O
f	*(double)
)	O
)	O
(	O
x	double
,	O
fdf	*((double,*(void),*(double),*(double))->(void))
->	O
params	*(void)
,	O
y	double
)	O
)	O
;	O
++	O
(	O
fdf	*((double,*(void),*(double),*(double))->(void))
->	O
nevalf	long
)	O
;	O
if	O
(	O
swts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
gsl_vector_mul	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
y	double
,	O
swts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
return	O
s	*(float)
;	O
}	O
int	O
gsl_multifit_eval_wdf	(*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
gsl_multifit_function_fdf	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
*	O
fdf	*((double,*(void),*(double),*(double))->(void))
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
x	double
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
swts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
gsl_matrix	struct(long,long,long,*(double),*(struct(long,*(double))),int)
*	O
dy	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
)	O
{	O
int	O
status	int
=	O
(	O
(	O
*	O
(	O
(	O
fdf	*((double,*(void),*(double),*(double))->(void))
)	O
->	O
df	*(double)
)	O
)	O
(	O
x	double
,	O
fdf	*((double,*(void),*(double),*(double))->(void))
->	O
params	*(void)
,	O
dy	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
)	O
)	O
;	O
++	O
(	O
fdf	*((double,*(void),*(double),*(double))->(void))
->	O
nevaldf	long
)	O
;	O
if	O
(	O
swts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
{	O
const	O
size_t	long
n	int
=	O
swts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
->	O
size	long
;	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
n	int
;	O
++	O
i	long
)	O
{	O
double	O
swi	double
=	O
gsl_vector_get	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long)->(double)
(	O
swts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
i	long
)	O
;	O
gsl_vector_view	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
gsl_matrix_row	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),long)->(struct(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
dy	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
,	O
i	long
)	O
;	O
gsl_vector_scale	(*(struct(long,long,*(double),*(struct(long,*`)),int)),double)->(int)
(	O
&	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
.	O
vector	struct(long,long,*(long double),*(struct(long,*(long double))),int)
,	O
swi	double
)	O
;	O
}	O
}	O
return	O
status	int
;	O
}	O
