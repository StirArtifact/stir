const	O
char	O
_uuconf_cmdlin_rcsid	array(char)
[	O
]	O
=	O
"$Id: cmdlin.c,v 1.7 2002/03/05 19:10:42 ian Rel $"	*(char)
;	O
int	O
uuconf_cmd_line	(*(void),*(char),*(struct(*(char),int,*(void),*((*`,int,*`,*`,*`)->(int)))),*(void),*((*(void),int,*(*(char)),*(void),*(void))->(int)),int,*(void))->(int)
(	O
pglobal	*(void)
,	O
zline	*(char)
,	O
qtab	*(struct(*(char),int,*(void),*((*(void),int,*(*`),*(void),*(void))->(int))))
,	O
pinfo	*(void)
,	O
pfiunknown	*((*(void),int,*(*(char)),*(void),*(void))->(int))
,	O
iflags	int
,	O
pblock	*(void)
)	O
pointer	*(void)
pglobal	*(void)
;	O
char	O
*	O
zline	*(char)
;	O
const	O
struct	O
uuconf_cmdtab	struct(*(char),int,*(void),*((*(void),int,*(*(char)),*(void),*(void))->(int)))
*	O
qtab	*(struct(*(char),int,*(void),*((*(void),int,*(*`),*(void),*(void))->(int))))
;	O
pointer	*(void)
pinfo	*(void)
;	O
int	O
(	O
*	O
pfiunknown	*((*(void),int,*(*(char)),*(void),*(void))->(int))
)	O
P	O
(	O
(	O
pointer	*(void)
,	O
int	O
,	O
char	O
*	O
*	O
,	O
pointer	*(void)
,	O
pointer	*(void)
)	O
)	O
;	O
int	O
iflags	int
;	O
pointer	*(void)
pblock	*(void)
;	O
{	O
struct	O
sglobal	struct(*(struct),*(void),int,*(char),int)
*	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
=	O
(	O
struct	O
sglobal	struct(*(struct),*(void),int,*(char),int)
*	O
)	O
pglobal	*(void)
;	O
char	O
*	O
z	*(char)
;	O
int	O
cargs	int
;	O
char	O
*	O
azargs	array(*(char))
[	O
CSTACK	O
]	O
;	O
char	O
*	O
*	O
pzargs	*(*(char))
;	O
int	O
iret	int
;	O
if	O
(	O
(	O
iflags	int
&	O
UUCONF_CMDTABFLAG_NOCOMMENTS	O
)	O
==	O
0	int
)	O
{	O
z	*(char)
=	O
zline	*(char)
;	O
while	O
(	O
(	O
z	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
z	*(char)
,	O
'#'	O
)	O
)	O
!=	O
NULL	O
)	O
{	O
if	O
(	O
z	*(char)
==	O
zline	*(char)
||	O
*	O
(	O
z	*(char)
-	O
1	int
)	O
!=	O
'\\'	O
)	O
{	O
*	O
z	*(char)
=	O
'\0'	O
;	O
break	O
;	O
}	O
while	O
(	O
(	O
*	O
(	O
z	*(char)
-	O
1	int
)	O
=	O
*	O
z	*(char)
)	O
!=	O
'\0'	O
)	O
++	O
z	*(char)
;	O
}	O
}	O
z	*(char)
=	O
zline	*(char)
;	O
cargs	int
=	O
0	int
;	O
pzargs	*(*(char))
=	O
azargs	array(*(char))
;	O
while	O
(	O
TRUE	O
)	O
{	O
while	O
(	O
*	O
z	*(char)
!=	O
'\0'	O
&&	O
isspace	(int)->(int)
(	O
BUCHAR	O
(	O
*	O
z	*(char)
)	O
)	O
)	O
++	O
z	*(char)
;	O
if	O
(	O
*	O
z	*(char)
==	O
'\0'	O
)	O
break	O
;	O
if	O
(	O
cargs	int
>=	O
CSTACK	O
)	O
{	O
char	O
*	O
*	O
pzsplit	*(*(char))
;	O
size_t	long
csplit	*(long)
;	O
int	O
cmore	int
;	O
pzsplit	*(*(char))
=	O
NULL	O
;	O
csplit	*(long)
=	O
0	int
;	O
cmore	int
=	O
_uuconf_istrsplit	(*(char),int,*(*(*(char))),*(long))->(int)
(	O
z	*(char)
,	O
'\0'	O
,	O
&	O
pzsplit	*(*(char))
,	O
&	O
csplit	*(long)
)	O
;	O
if	O
(	O
cmore	int
<	O
0	int
)	O
{	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
ierrno	int
=	O
errno	O
;	O
return	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
}	O
pzargs	*(*(char))
=	O
(	O
char	O
*	O
*	O
)	O
malloc	(long)->(*(void))
(	O
(	O
cmore	int
+	O
CSTACK	O
)	O
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
if	O
(	O
pzargs	*(*(char))
==	O
NULL	O
)	O
{	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
ierrno	int
=	O
errno	O
;	O
free	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
pzsplit	*(*(char))
)	O
;	O
return	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
(	O
pointer	*(void)
)	O
pzargs	*(*(char))
,	O
(	O
pointer	*(void)
)	O
azargs	array(*(char))
,	O
CSTACK	O
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
(	O
pointer	*(void)
)	O
(	O
pzargs	*(*(char))
+	O
CSTACK	O
)	O
,	O
(	O
pointer	*(void)
)	O
pzsplit	*(*(char))
,	O
cmore	int
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
cargs	int
=	O
cmore	int
+	O
CSTACK	O
;	O
free	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
pzsplit	*(*(char))
)	O
;	O
break	O
;	O
}	O
azargs	array(*(char))
[	O
cargs	int
]	O
=	O
z	*(char)
;	O
++	O
cargs	int
;	O
while	O
(	O
*	O
z	*(char)
!=	O
'\0'	O
&&	O
!	O
isspace	(int)->(int)
(	O
BUCHAR	O
(	O
*	O
z	*(char)
)	O
)	O
)	O
z	*(char)
++	O
;	O
if	O
(	O
*	O
z	*(char)
==	O
'\0'	O
)	O
break	O
;	O
*	O
z	*(char)
++	O
=	O
'\0'	O
;	O
}	O
if	O
(	O
cargs	int
<=	O
0	int
)	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
iret	int
=	O
uuconf_cmd_args	(*(void),int,*(*(char)),*(struct(*(char),int,*(void),*((*`,int,*`,*`,*`)->(int)))),*(void),*((*(void),int,*(*(char)),*(void),*(void))->(int)),int,*(void))->(int)
(	O
pglobal	*(void)
,	O
cargs	int
,	O
pzargs	*(*(char))
,	O
qtab	*(struct(*(char),int,*(void),*((*(void),int,*(*`),*(void),*(void))->(int))))
,	O
pinfo	*(void)
,	O
pfiunknown	*((*(void),int,*(*(char)),*(void),*(void))->(int))
,	O
iflags	int
,	O
pblock	*(void)
)	O
;	O
if	O
(	O
pzargs	*(*(char))
!=	O
azargs	array(*(char))
)	O
free	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
pzargs	*(*(char))
)	O
;	O
return	O
iret	int
;	O
}	O
