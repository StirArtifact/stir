static	O
void	O
free_entry	(*(struct(*(char),int,*(struct(*`,*`,int,int,int,char,int)))))->(void)
(	O
swacfl_entry	struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int)))
*	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
)	O
;	O
SWACFL	struct(*(struct(*(*(char)),int,int,long,int)))
*	O
swacfl_open	()->(*(struct(*(struct(*`,int,int,long,int)))))
(	O
)	O
{	O
SWACFL	struct(*(struct(*(*(char)),int,int,long,int)))
*	O
swacfl	*(struct(*(struct(*(*`),int,int,long,int))))
=	O
(	O
SWACFL	struct(*(struct(*(*(char)),int,int,long,int)))
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
SWACFL	struct(*(struct(*(*(char)),int,int,long,int)))
)	O
)	O
;	O
if	O
(	O
!	O
swacfl	*(struct(*(struct(*(*`),int,int,long,int))))
)	O
return	O
NULL	O
;	O
swacfl	*(struct(*(struct(*(*`),int,int,long,int))))
->	O
entry_array_	*(struct(*(*(char)),int,int,long,int))
=	O
cplob_open	(int)->(*(struct(*(*(char)),int,int,long,int)))
(	O
8	int
)	O
;	O
cplob_additem	(*(struct(*(*(char)),int,int,long,int)),int,*(char))->(void)
(	O
swacfl	*(struct(*(struct(*(*`),int,int,long,int))))
->	O
entry_array_	*(struct(*(*(char)),int,int,long,int))
,	O
0	int
,	O
NULL	O
)	O
;	O
return	O
swacfl	*(struct(*(struct(*(*`),int,int,long,int))))
;	O
}	O
void	O
swacfl_close	(*(struct(*(struct(*`,int,int,long,int)))))->(void)
(	O
SWACFL	struct(*(struct(*(*(char)),int,int,long,int)))
*	O
swacfl	*(struct(*(struct(*(*`),int,int,long,int))))
)	O
{	O
int	O
i	int
=	O
0	int
;	O
swacfl_entry	struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int)))
*	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
;	O
while	O
(	O
(	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
=	O
(	O
swacfl_entry	struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int)))
*	O
)	O
cplob_val	(*(struct(*(*(char)),int,int,long,int)),int)->(*(char))
(	O
swacfl	*(struct(*(struct(*(*`),int,int,long,int))))
->	O
entry_array_	*(struct(*(*(char)),int,int,long,int))
,	O
i	int
++	O
)	O
)	O
)	O
{	O
free_entry	(*(struct(*(char),int,*(struct(*`,*`,int,int,int,char,int)))))->(void)
(	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
)	O
;	O
}	O
cplob_close	(*(struct(*(*(char)),int,int,long,int)))->(void)
(	O
swacfl	*(struct(*(struct(*(*`),int,int,long,int))))
->	O
entry_array_	*(struct(*(*(char)),int,int,long,int))
)	O
;	O
}	O
static	O
void	O
free_entry	(*(struct(*(char),int,*(struct(*`,*`,int,int,int,char,int)))))->(void)
(	O
swacfl_entry	struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int)))
*	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
)	O
{	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
->	O
archiveNameM	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
if	O
(	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
->	O
from_name_	*(char)
)	O
swbis_free	O
(	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
->	O
from_name_	*(char)
)	O
;	O
}	O
swacfl_entry	struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int)))
*	O
swacfl_find_entry	(*(struct(*(struct(*`,int,int,long,int)))),*(char))->(*(struct(*(char),int,*(struct(*`,*`,int,int,int,char,int)))))
(	O
SWACFL	struct(*(struct(*(*(char)),int,int,long,int)))
*	O
swacfl	*(struct(*(struct(*(*`),int,int,long,int))))
,	O
char	O
*	O
archive_name	*(char)
)	O
{	O
int	O
i	int
=	O
0	int
;	O
swacfl_entry	struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int)))
*	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
;	O
char	O
*	O
p	*(char)
;	O
archive_name	*(char)
=	O
swlib_return_no_leading	(*(char))->(*(char))
(	O
archive_name	*(char)
)	O
;	O
while	O
(	O
(	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
=	O
(	O
swacfl_entry	struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int)))
*	O
)	O
cplob_val	(*(struct(*(*(char)),int,int,long,int)),int)->(*(char))
(	O
swacfl	*(struct(*(struct(*(*`),int,int,long,int))))
->	O
entry_array_	*(struct(*(*(char)),int,int,long,int))
,	O
i	int
++	O
)	O
)	O
)	O
{	O
p	*(char)
=	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
->	O
archiveNameM	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
p	*(char)
=	O
swlib_return_no_leading	(*(char))->(*(char))
(	O
p	*(char)
)	O
;	O
if	O
(	O
swlib_compare_8859	(*(char),*(char))->(int)
(	O
archive_name	*(char)
,	O
p	*(char)
)	O
==	O
0	int
)	O
return	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
;	O
}	O
return	O
(	O
swacfl_entry	struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int)))
*	O
)	O
NULL	O
;	O
}	O
void	O
swacfl_add	(*(struct(*(struct(*`,int,int,long,int)))),*(char),*(char),int)->(void)
(	O
SWACFL	struct(*(struct(*(*(char)),int,int,long,int)))
*	O
swacfl	*(struct(*(struct(*(*`),int,int,long,int))))
,	O
char	O
*	O
archive_name	*(char)
,	O
char	O
*	O
source_name	*(char)
,	O
int	O
type	int
)	O
{	O
E_DEBUG3	O
(	O
" archive_name=[%s] source_name=[%s]"	*(char)
,	O
archive_name	*(char)
,	O
source_name	*(char)
)	O
;	O
swacfl_entry	struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int)))
*	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
=	O
swacfl_make_entry	(*(char),*(char),int)->(*(struct(*(char),int,*(struct(*`,*`,int,int,int,char,int)))))
(	O
archive_name	*(char)
,	O
source_name	*(char)
,	O
type	int
)	O
;	O
swacfl_add_entry	(*(struct(*(struct(*`,int,int,long,int)))),*(struct(*(char),int,*(struct(*`,*`,int,int,int,char,int)))))->(void)
(	O
swacfl	*(struct(*(struct(*(*`),int,int,long,int))))
,	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
)	O
;	O
}	O
void	O
swacfl_add_entry	(*(struct(*(struct(*`,int,int,long,int)))),*(struct(*(char),int,*(struct(*`,*`,int,int,int,char,int)))))->(void)
(	O
SWACFL	struct(*(struct(*(*(char)),int,int,long,int)))
*	O
swacfl	*(struct(*(struct(*(*`),int,int,long,int))))
,	O
swacfl_entry	struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int)))
*	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
)	O
{	O
CPLOB	struct(*(*(char)),int,int,long,int)
*	O
lob	*(struct(*(*(char)),int,int,long,int))
=	O
swacfl	*(struct(*(struct(*(*`),int,int,long,int))))
->	O
entry_array_	*(struct(*(*(char)),int,int,long,int))
;	O
cplob_additem	(*(struct(*(*(char)),int,int,long,int)),int,*(char))->(void)
(	O
lob	*(struct(*(*(char)),int,int,long,int))
,	O
cplob_get_nused	(*(struct(*(*(char)),int,int,long,int)))->(int)
(	O
lob	*(struct(*(*(char)),int,int,long,int))
)	O
-	O
1	int
,	O
(	O
char	O
*	O
)	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
)	O
;	O
cplob_additem	(*(struct(*(*(char)),int,int,long,int)),int,*(char))->(void)
(	O
lob	*(struct(*(*(char)),int,int,long,int))
,	O
cplob_get_nused	(*(struct(*(*(char)),int,int,long,int)))->(int)
(	O
lob	*(struct(*(*(char)),int,int,long,int))
)	O
,	O
NULL	O
)	O
;	O
}	O
swacfl_entry	struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int)))
*	O
swacfl_make_entry	(*(char),*(char),int)->(*(struct(*(char),int,*(struct(*`,*`,int,int,int,char,int)))))
(	O
char	O
*	O
archive_name	*(char)
,	O
char	O
*	O
source_name	*(char)
,	O
int	O
type	int
)	O
{	O
swacfl_entry	struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int)))
*	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
=	O
(	O
swacfl_entry	struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int)))
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
swacfl_entry	struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int)))
)	O
)	O
;	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
->	O
archiveNameM	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
10	int
)	O
;	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
->	O
archiveNameM	*(struct(*(char),*(char),int,int,int,char,int))
,	O
archive_name	*(char)
)	O
;	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
->	O
from_name_	*(char)
=	O
swlib_strdup	(*(char))->(*(char))
(	O
source_name	*(char)
)	O
;	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
->	O
source_code_	int
=	O
type	int
;	O
return	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
;	O
}	O
void	O
swacfl_set_source_name	(*(struct(*(char),int,*(struct(*`,*`,int,int,int,char,int)))),*(char))->(void)
(	O
swacfl_entry	struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int)))
*	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
,	O
char	O
*	O
name	*(char)
)	O
{	O
if	O
(	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
->	O
from_name_	*(char)
)	O
swbis_free	O
(	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
->	O
from_name_	*(char)
)	O
;	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
->	O
from_name_	*(char)
=	O
swlib_strdup	(*(char))->(*(char))
(	O
name	*(char)
)	O
;	O
}	O
o__inline__	O
void	O
swacfl_set_type	(*(struct(*(char),int,*(struct(*`,*`,int,int,int,char,int)))),int)->(void)
(	O
swacfl_entry	struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int)))
*	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
,	O
int	O
type	int
)	O
{	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
->	O
source_code_	int
=	O
type	int
;	O
}	O
o__inline__	O
char	O
*	O
swacfl_get_archive_name	(*(struct(*(char),int,*(struct(*`,*`,int,int,int,char,int)))))->(*(char))
(	O
swacfl_entry	struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int)))
*	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
)	O
{	O
return	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
->	O
archiveNameM	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
}	O
o__inline__	O
char	O
*	O
swacfl_get_source_name	(*(struct(*(char),int,*(struct(*`,*`,int,int,int,char,int)))))->(*(char))
(	O
swacfl_entry	struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int)))
*	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
)	O
{	O
return	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
->	O
from_name_	*(char)
;	O
}	O
o__inline__	O
int	O
swacfl_get_type	(*(struct(*(char),int,*(struct(*`,*`,int,int,int,char,int)))))->(int)
(	O
swacfl_entry	struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int)))
*	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
)	O
{	O
return	O
en	*(struct(*(char),int,*(struct(*(char),*(char),int,int,int,char,int))))
->	O
source_code_	int
;	O
}	O
