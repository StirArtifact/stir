xio_path	*(char)
xio_getdirectory	(*(char))->(*(char))
(	O
xio_path	*(char)
filename	*(char)
)	O
{	O
int	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
;	O
xio_pathdata	array(char)
directory	*(char)
;	O
for	O
(	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
=	O
strlen	(*(char))->(long)
(	O
filename	*(char)
)	O
;	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
&&	O
filename	*(char)
[	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
]	O
!=	O
'/'	O
&&	O
filename	*(char)
[	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
]	O
!=	O
'\\'	O
;	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
--	O
)	O
;	O
if	O
(	O
filename	*(char)
[	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
]	O
==	O
'/'	O
||	O
filename	*(char)
[	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
]	O
==	O
'\\'	O
)	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
++	O
;	O
directory	*(char)
[	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
]	O
=	O
0	int
;	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
--	O
;	O
for	O
(	O
;	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
>=	O
0	int
;	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
--	O
)	O
directory	*(char)
[	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
]	O
=	O
filename	*(char)
[	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
]	O
;	O
return	O
(	O
strdup	(*(char))->(*(char))
(	O
directory	*(char)
)	O
)	O
;	O
}	O
xio_path	*(char)
xio_getfilename	(*(char),*(char))->(*(char))
(	O
char	O
*	O
basename	*(char)
,	O
char	O
*	O
extension	*(char)
)	O
{	O
static	O
char	O
name	*(char)
[	O
40	int
]	O
;	O
int	O
nimage	int
=	O
0	int
;	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
sb	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
;	O
do	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
name	*(char)
,	O
"%s%i%s"	*(char)
,	O
basename	*(char)
,	O
nimage	int
++	O
,	O
extension	*(char)
)	O
;	O
}	O
while	O
(	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
(	O
name	*(char)
,	O
&	O
sb	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
!=	O
-	O
1	int
)	O
;	O
return	O
(	O
name	*(char)
)	O
;	O
}	O
xio_file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
xio_getrandomexample	(*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
xio_path	*(char)
name	*(char)
)	O
{	O
static	O
char	O
*	O
paths	array(*(char))
[	O
]	O
=	O
{	O
EXAMPLESPATH	O
,	O
"./examples/"	*(char)
,	O
"../examples/"	*(char)
,	O
"./"	*(char)
,	O
}	O
;	O
int	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
,	O
p	int
;	O
DIR	struct
*	O
d	*(void)
=	O
NULL	O
;	O
xio_file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
f	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),struct(int,int,int),*(struct`),*(void),*(char),int,int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),struct(int,int,int),*(struct`),*(void),*(char),int,int)),*(struct),*(struct),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),struct(int,int,int),*(struct),*(void),*(char),int,int))
;	O
struct	O
dirent	struct(long,long,short,char,array(char))
*	O
dir	*(struct(long,long,short,char,array(char)))
;	O
int	O
n	int
;	O
int	O
max	int
;	O
for	O
(	O
p	int
=	O
0	int
;	O
p	int
<	O
(	O
int	O
)	O
(	O
sizeof	O
(	O
paths	array(*(char))
)	O
/	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
&&	O
d	*(void)
==	O
NULL	O
;	O
p	int
++	O
)	O
{	O
d	*(void)
=	O
opendir	(*(char))->(*(struct))
(	O
paths	array(*(char))
[	O
p	int
]	O
)	O
;	O
if	O
(	O
d	*(void)
!=	O
NULL	O
)	O
break	O
;	O
}	O
if	O
(	O
d	*(void)
==	O
NULL	O
)	O
{	O
return	O
NULL	O
;	O
}	O
max	int
=	O
800	int
-	O
strlen	(*(char))->(long)
(	O
paths	array(*(char))
[	O
p	int
]	O
)	O
;	O
for	O
(	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
=	O
0	int
;	O
(	O
dir	*(struct(long,long,short,char,array(char)))
=	O
readdir	(*(struct))->(*(struct(long,long,short,char,array(char))))
(	O
d	*(void)
)	O
)	O
!=	O
NULL	O
;	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
++	O
)	O
{	O
int	O
s	struct(double,double,double,double)
=	O
strlen	(*(char))->(long)
(	O
dir	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
)	O
;	O
if	O
(	O
s	struct(double,double,double,double)
>	O
max	int
||	O
s	struct(double,double,double,double)
<	O
4	int
||	O
strcmp	(*(char),*(char))->(int)
(	O
".xpf"	*(char)
,	O
dir	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
+	O
s	struct(double,double,double,double)
-	O
4	int
)	O
)	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
--	O
;	O
}	O
if	O
(	O
!	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
)	O
{	O
closedir	(*(struct))->(int)
(	O
d	*(void)
)	O
;	O
return	O
NULL	O
;	O
}	O
rewinddir	(*(struct))->(void)
(	O
d	*(void)
)	O
;	O
dir	*(struct(long,long,short,char,array(char)))
=	O
NULL	O
;	O
n	int
=	O
(	O
(	O
number_t	double
)	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
*	O
rand	()->(int)
(	O
)	O
/	O
(	O
RAND_MAX	int
+	O
1.0	int
)	O
)	O
;	O
for	O
(	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
=	O
0	int
;	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
<=	O
n	int
;	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
++	O
)	O
{	O
int	O
s	struct(double,double,double,double)
;	O
do	O
{	O
dir	*(struct(long,long,short,char,array(char)))
=	O
readdir	(*(struct))->(*(struct(long,long,short,char,array(char))))
(	O
d	*(void)
)	O
;	O
if	O
(	O
dir	*(struct(long,long,short,char,array(char)))
==	O
NULL	O
)	O
{	O
closedir	(*(struct))->(int)
(	O
d	*(void)
)	O
;	O
return	O
NULL	O
;	O
}	O
s	struct(double,double,double,double)
=	O
strlen	(*(char))->(long)
(	O
dir	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
)	O
;	O
}	O
while	O
(	O
s	struct(double,double,double,double)
>	O
max	int
||	O
s	struct(double,double,double,double)
<	O
4	int
||	O
strcmp	(*(char),*(char))->(int)
(	O
".xpf"	*(char)
,	O
dir	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
+	O
s	struct(double,double,double,double)
-	O
4	int
)	O
)	O
;	O
}	O
if	O
(	O
dir	*(struct(long,long,short,char,array(char)))
==	O
NULL	O
)	O
{	O
closedir	(*(struct))->(int)
(	O
d	*(void)
)	O
;	O
return	O
NULL	O
;	O
}	O
strcpy	(*(char),*(char))->(*(char))
(	O
name	*(char)
,	O
paths	array(*(char))
[	O
p	int
]	O
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
name	*(char)
,	O
dir	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
)	O
;	O
closedir	(*(struct))->(int)
(	O
d	*(void)
)	O
;	O
f	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),struct(int,int,int),*(struct`),*(void),*(char),int,int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),struct(int,int,int),*(struct`),*(void),*(char),int,int)),*(struct),*(struct),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),struct(int,int,int),*(struct),*(void),*(char),int,int))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
name	*(char)
,	O
"r"	*(char)
)	O
;	O
return	O
(	O
f	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),struct(int,int,int),*(struct`),*(void),*(char),int,int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),struct(int,int,int),*(struct`),*(void),*(char),int,int)),*(struct),*(struct),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),struct(int,int,int),*(struct),*(void),*(char),int,int))
)	O
;	O
}	O
xio_file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
xio_getcatalog	(*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
char	O
*	O
name	*(char)
)	O
{	O
static	O
xio_path	*(char)
paths	array(*(char))
[	O
]	O
=	O
{	O
CATALOGSPATH	O
,	O
"./catalogs/"	*(char)
,	O
"../catalogs/"	*(char)
,	O
"./"	*(char)
,	O
}	O
;	O
int	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
;	O
xio_file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
f	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),struct(int,int,int),*(struct`),*(void),*(char),int,int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),struct(int,int,int),*(struct`),*(void),*(char),int,int)),*(struct),*(struct),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),struct(int,int,int),*(struct),*(void),*(char),int,int))
=	O
XIO_FAILED	O
;	O
xio_pathdata	array(char)
tmp	array(char)
;	O
for	O
(	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
=	O
0	int
;	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
<	O
(	O
int	O
)	O
(	O
sizeof	O
(	O
paths	array(*(char))
)	O
/	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
&&	O
f	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),struct(int,int,int),*(struct`),*(void),*(char),int,int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),struct(int,int,int),*(struct`),*(void),*(char),int,int)),*(struct),*(struct),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),struct(int,int,int),*(struct),*(void),*(char),int,int))
==	O
XIO_FAILED	O
;	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
++	O
)	O
{	O
xio_addfname	O
(	O
tmp	array(char)
,	O
paths	array(*(char))
[	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
]	O
,	O
name	*(char)
)	O
;	O
f	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),struct(int,int,int),*(struct`),*(void),*(char),int,int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),struct(int,int,int),*(struct`),*(void),*(char),int,int)),*(struct),*(struct),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),struct(int,int,int),*(struct),*(void),*(char),int,int))
=	O
xio_ropen	O
(	O
tmp	array(char)
)	O
;	O
if	O
(	O
f	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),struct(int,int,int),*(struct`),*(void),*(char),int,int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),struct(int,int,int),*(struct`),*(void),*(char),int,int)),*(struct),*(struct),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),struct(int,int,int),*(struct),*(void),*(char),int,int))
==	O
XIO_FAILED	O
)	O
{	O
xio_addextension	O
(	O
tmp	array(char)
,	O
".cat"	*(char)
)	O
;	O
f	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),struct(int,int,int),*(struct`),*(void),*(char),int,int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),struct(int,int,int),*(struct`),*(void),*(char),int,int)),*(struct),*(struct),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),struct(int,int,int),*(struct),*(void),*(char),int,int))
=	O
xio_ropen	O
(	O
tmp	array(char)
)	O
;	O
}	O
}	O
return	O
(	O
f	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),struct(int,int,int),*(struct`),*(void),*(char),int,int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),struct(int,int,int),*(struct`),*(void),*(char),int,int)),*(struct),*(struct),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),struct(int,int,int),*(struct),*(void),*(char),int,int))
)	O
;	O
}	O
xio_file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
xio_gettutorial	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
char	O
*	O
name	*(char)
,	O
xio_path	*(char)
tmp	array(char)
)	O
{	O
int	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
;	O
xio_file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
f	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),struct(int,int,int),*(struct`),*(void),*(char),int,int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),struct(int,int,int),*(struct`),*(void),*(char),int,int)),*(struct),*(struct),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),struct(int,int,int),*(struct),*(void),*(char),int,int))
=	O
XIO_FAILED	O
;	O
static	O
xio_path	*(char)
paths	array(*(char))
[	O
]	O
=	O
{	O
TUTORIALPATH	O
,	O
"./"	*(char)
,	O
"./tutorial/"	*(char)
,	O
"../tutorial/"	*(char)
,	O
}	O
;	O
for	O
(	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
=	O
0	int
;	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
<	O
(	O
int	O
)	O
(	O
sizeof	O
(	O
paths	array(*(char))
)	O
/	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
&&	O
f	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),struct(int,int,int),*(struct`),*(void),*(char),int,int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),struct(int,int,int),*(struct`),*(void),*(char),int,int)),*(struct),*(struct),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),struct(int,int,int),*(struct),*(void),*(char),int,int))
==	O
XIO_FAILED	O
;	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
++	O
)	O
{	O
xio_addfname	O
(	O
tmp	array(char)
,	O
paths	array(*(char))
[	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
]	O
,	O
name	*(char)
)	O
;	O
f	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),struct(int,int,int),*(struct`),*(void),*(char),int,int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),struct(int,int,int),*(struct`),*(void),*(char),int,int)),*(struct),*(struct),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),struct(int,int,int),*(struct),*(void),*(char),int,int))
=	O
xio_ropen	O
(	O
tmp	array(char)
)	O
;	O
}	O
return	O
(	O
f	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),struct(int,int,int),*(struct`),*(void),*(char),int,int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),struct(int,int,int),*(struct`),*(void),*(char),int,int)),*(struct),*(struct),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),struct(int,int,int),*(struct),*(void),*(char),int,int))
)	O
;	O
}	O
