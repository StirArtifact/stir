int	O
stream_writez	(*(struct),*(char))->(int)
(	O
dico_stream_t	*(struct)
str	*(struct)
,	O
const	O
char	O
*	O
buf	*(void)
)	O
{	O
return	O
dico_stream_write	(*(struct),*(void),long)->(int)
(	O
str	*(struct)
,	O
buf	*(void)
,	O
strlen	(*(char))->(long)
(	O
buf	*(void)
)	O
)	O
;	O
}	O
int	O
stream_printf	(*(struct),*(char))->(int)
(	O
dico_stream_t	*(struct)
str	*(struct)
,	O
const	O
char	O
*	O
fmt	*(char)
,	O
...	O
)	O
{	O
int	O
len	int
;	O
char	O
*	O
buf	*(void)
;	O
va_list	array(struct(int,int,*(void),*(void)))
ap	array(struct(int,int,*(void),*(void)))
;	O
va_start	O
(	O
ap	array(struct(int,int,*(void),*(void)))
,	O
fmt	*(char)
)	O
;	O
len	int
=	O
vasprintf	(*(*(char)),*(char),array(struct(int,int,*(void),*(void))))->(int)
(	O
&	O
buf	*(void)
,	O
fmt	*(char)
,	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
if	O
(	O
len	int
<	O
0	int
)	O
{	O
dico_log	(int,int,*(char))->(void)
(	O
L_CRIT	int
,	O
0	int
,	O
_	O
(	O
"not enough memory while formatting reply message"	*(char)
)	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
len	int
=	O
dico_stream_write	(*(struct),*(void),long)->(int)
(	O
str	*(struct)
,	O
buf	*(void)
,	O
len	int
)	O
;	O
free	(*(void))->(void)
(	O
buf	*(void)
)	O
;	O
return	O
len	int
;	O
}	O
void	O
stream_write_multiline	(*(struct),*(char))->(void)
(	O
dico_stream_t	*(struct)
str	*(struct)
,	O
const	O
char	O
*	O
text	*(char)
)	O
{	O
struct	O
utf8_iterator	struct(*(char),*(char),int,long,int,int)
itr	*((*(void),*(void))->(int))
;	O
size_t	long
len	int
=	O
0	int
;	O
for	O
(	O
utf8_iter_first	(*(struct(*(char),*(char),int,long,int,int)),*(char))->(int)
(	O
&	O
itr	*((*(void),*(void))->(int))
,	O
(	O
char	O
*	O
)	O
text	*(char)
)	O
;	O
!	O
utf8_iter_end_p	(*(struct(*(char),*(char),int,long,int,int)))->(int)
(	O
&	O
itr	*((*(void),*(void))->(int))
)	O
;	O
utf8_iter_next	(*(struct(*(char),*(char),int,long,int,int)))->(int)
(	O
&	O
itr	*((*(void),*(void))->(int))
)	O
)	O
{	O
if	O
(	O
utf8_iter_isascii	O
(	O
itr	*((*(void),*(void))->(int))
)	O
&&	O
*	O
itr	*((*(void),*(void))->(int))
.	O
curptr	*(char)
==	O
'\n'	O
)	O
{	O
dico_stream_writeln	(*(struct),*(char),long)->(int)
(	O
str	*(struct)
,	O
itr	*((*(void),*(void))->(int))
.	O
curptr	*(char)
-	O
len	int
,	O
len	int
)	O
;	O
len	int
=	O
0	int
;	O
}	O
else	O
len	int
+=	O
itr	*((*(void),*(void))->(int))
.	O
curwidth	int
;	O
}	O
if	O
(	O
len	int
)	O
dico_stream_writeln	(*(struct),*(char),long)->(int)
(	O
str	*(struct)
,	O
itr	*((*(void),*(void))->(int))
.	O
curptr	*(char)
-	O
len	int
,	O
len	int
)	O
;	O
}	O
