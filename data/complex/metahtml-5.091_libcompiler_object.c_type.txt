bc_string_t	*(char)
bc_object_empty	*(char)
=	O
""	*(char)
;	O
bc_string_t	*(char)
bc_object_true	*(char)
=	O
"true"	*(char)
;	O
bc_string_t	*(char)
bc_object_false	*(char)
=	O
"false"	*(char)
;	O
bc_symbol_t	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
bc_list_of_symbols	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
=	O
(	O
bc_symbol_t	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
)	O
NULL	O
;	O
bc_symbol_t	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
bc_symbol_find	(*(char))->(*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*`,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)))))
(	O
bc_string_t	*(char)
string	*(char)
)	O
{	O
bc_symbol_t	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
symbol	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
;	O
for	O
(	O
symbol	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
=	O
bc_list_of_symbols	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
;	O
symbol	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
;	O
symbol	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
=	O
BC_SYMBOL_NEXT	O
(	O
symbol	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
)	O
)	O
if	O
(	O
0	int
==	O
strcmp	(*(char),*(char))->(int)
(	O
string	*(char)
,	O
BC_SYMBOL_NAME	O
(	O
symbol	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
)	O
)	O
)	O
return	O
(	O
symbol	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
)	O
;	O
return	O
(	O
(	O
bc_symbol_t	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
)	O
NULL	O
)	O
;	O
}	O
bc_symbol_t	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
bc_symbol_intern	(*(char))->(*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*`,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)))))
(	O
bc_string_t	*(char)
string	*(char)
)	O
{	O
bc_symbol_t	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
symbol	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
=	O
bc_symbol_find	(*(char))->(*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*`,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)))))
(	O
string	*(char)
)	O
;	O
if	O
(	O
!	O
symbol	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
)	O
{	O
symbol	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
=	O
(	O
bc_symbol_t	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
)	O
xmalloc	()->(int)
(	O
sizeof	O
(	O
struct	O
bc_symbol	struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`))))))
)	O
)	O
;	O
BC_SYMBOL_NAME	O
(	O
symbol	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
)	O
=	O
string	*(char)
;	O
BC_SYMBOL_VALUE	O
(	O
symbol	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
)	O
=	O
"no value"	*(char)
;	O
BC_SYMBOL_TYPE	int
(	O
symbol	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
)	O
=	O
BC_STRING_TYPE	int
;	O
BC_SYMBOL_HASH	O
(	O
symbol	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
)	O
=	O
0	int
;	O
BC_SYMBOL_NEXT	O
(	O
symbol	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
)	O
=	O
bc_list_of_symbols	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
;	O
bc_list_of_symbols	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
=	O
symbol	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
;	O
}	O
return	O
(	O
symbol	*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(char),*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))))
)	O
;	O
}	O
bc_package_t	*(struct(*(char),*(struct(*(struct`),*(struct`))),*(struct(*(char),*(struct`),*(struct`)))))
bc_package_list	*(struct(*(char),*(struct(*(struct`),*(struct`))),*(struct(*(char),*(struct`),*(struct`)))))
=	O
(	O
bc_package_t	*(struct(*(char),*(struct(*(struct`),*(struct`))),*(struct(*(char),*(struct`),*(struct`)))))
)	O
NULL	O
;	O
bc_package_t	*(struct(*(char),*(struct(*(struct`),*(struct`))),*(struct(*(char),*(struct`),*(struct`)))))
bc_current_package	*(struct(*(char),*(struct(*(struct`),*(struct`))),*(struct(*(char),*(struct`),*(struct`)))))
=	O
(	O
bc_package_t	*(struct(*(char),*(struct(*(struct`),*(struct`))),*(struct(*(char),*(struct`),*(struct`)))))
)	O
NULL	O
;	O
bc_package_t	*(struct(*(char),*(struct(*(struct`),*(struct`))),*(struct(*(char),*(struct`),*(struct`)))))
bc_function_package	*(struct(*(char),*(struct(*(struct`),*(struct`))),*(struct(*(char),*(struct`),*(struct`)))))
=	O
(	O
bc_package_t	*(struct(*(char),*(struct(*(struct`),*(struct`))),*(struct(*(char),*(struct`),*(struct`)))))
)	O
NULL	O
;	O
extern	O
bc_function_t	*(struct(*(char),*(char),int,*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))),int,int))
bc_function_new	(*(char),*(char),int,*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))),int,int)->(*(struct(*(char),*(char),int,*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`)),int,int)))
(	O
bc_string_t	*(char)
name	*(char)
,	O
bc_byte_code_t	char
*	O
code	*(char)
,	O
unsigned	O
int	O
code_count	int
,	O
struct	O
bc_tagged_object	struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))
*	O
constants	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
,	O
unsigned	O
int	O
constants_count	int
,	O
unsigned	O
int	O
stack_size	int
)	O
{	O
bc_function_t	*(struct(*(char),*(char),int,*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))),int,int))
function	*(struct(*(char),*(char),int,*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))),int,int))
=	O
(	O
bc_function_t	*(struct(*(char),*(char),int,*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))),int,int))
)	O
xmalloc	()->(int)
(	O
sizeof	O
(	O
struct	O
bc_function	struct(*(char),*(char),int,*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))),int,int)
)	O
)	O
;	O
BC_FUNCTION_NAME	O
(	O
function	*(struct(*(char),*(char),int,*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))),int,int))
)	O
=	O
name	*(char)
;	O
BC_FUNCTION_CODE	O
(	O
function	*(struct(*(char),*(char),int,*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))),int,int))
)	O
=	O
code	*(char)
;	O
BC_FUNCTION_CODE_COUNT	O
(	O
function	*(struct(*(char),*(char),int,*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))),int,int))
)	O
=	O
code_count	int
;	O
BC_FUNCTION_CONSTANTS	O
(	O
function	*(struct(*(char),*(char),int,*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))),int,int))
)	O
=	O
constants	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
;	O
BC_FUNCTION_CONSTANTS_COUNT	O
(	O
function	*(struct(*(char),*(char),int,*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))),int,int))
)	O
=	O
constants_count	int
;	O
BC_FUNCTION_STACK_SIZE	O
(	O
function	*(struct(*(char),*(char),int,*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))),int,int))
)	O
=	O
stack_size	int
;	O
return	O
(	O
function	*(struct(*(char),*(char),int,*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))),int,int))
)	O
;	O
}	O
void	O
bc_function_free	(*(struct(*(char),*(char),int,*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`)),int,int)))->(void)
(	O
bc_function_t	*(struct(*(char),*(char),int,*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))),int,int))
function	*(struct(*(char),*(char),int,*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))),int,int))
)	O
{	O
free	(*(void))->(void)
(	O
BC_FUNCTION_CODE	O
(	O
function	*(struct(*(char),*(char),int,*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))),int,int))
)	O
)	O
;	O
free	(*(void))->(void)
(	O
BC_FUNCTION_CONSTANTS	O
(	O
function	*(struct(*(char),*(char),int,*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))),int,int))
)	O
)	O
;	O
free	(*(void))->(void)
(	O
function	*(struct(*(char),*(char),int,*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))),int,int))
)	O
;	O
}	O
extern	O
void	O
bc_format_print	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`)))))->(void)
(	O
bc_format_t	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*(struct`)))))
format	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*(struct`)))))
)	O
{	O
for	O
(	O
;	O
format	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*(struct`)))))
;	O
format	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*(struct`)))))
=	O
BC_FORMAT_NEXT	O
(	O
format	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*(struct`)))))
)	O
)	O
{	O
switch	O
(	O
BC_FORMAT_TYPE	int
(	O
format	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*(struct`)))))
)	O
)	O
{	O
case	O
BC_STRING_TYPE	int
:	O
printf	(*(char))->(int)
(	O
"\"%s\""	*(char)
,	O
(	O
bc_string_t	*(char)
)	O
BC_FORMAT_OBJECT	O
(	O
format	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*(struct`)))))
)	O
)	O
;	O
break	O
;	O
case	O
BC_INDEX_TYPE	int
:	O
printf	(*(char))->(int)
(	O
"%d"	*(char)
,	O
(	O
bc_index_t	int
)	O
BC_FORMAT_OBJECT	O
(	O
format	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*(struct`)))))
)	O
)	O
;	O
break	O
;	O
default	O
:	O
printf	(*(char))->(int)
(	O
"***"	*(char)
)	O
;	O
break	O
;	O
}	O
if	O
(	O
BC_FORMAT_NEXT	O
(	O
format	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*(struct`)))))
)	O
)	O
printf	(*(char))->(int)
(	O
" "	*(char)
)	O
;	O
}	O
}	O
