void	O
mpz_gcd	O
(	O
mpz_ptr	*(struct(int,int,*(long)))
g	*(struct(int,int,*(long)))
,	O
mpz_srcptr	*(struct(int,int,*(long)))
u	array(array(long))
,	O
mpz_srcptr	*(struct(int,int,*(long)))
v	*(struct(int,int,*(long)))
)	O
{	O
unsigned	O
long	O
int	O
g_zero_bits	long
,	O
u_zero_bits	long
,	O
v_zero_bits	long
;	O
mp_size_t	long
g_zero_limbs	long
,	O
u_zero_limbs	long
,	O
v_zero_limbs	long
;	O
mp_ptr	*(long)
tp	*(long)
;	O
mp_ptr	*(long)
up	*(long)
;	O
mp_size_t	long
usize	*(long)
;	O
mp_ptr	*(long)
vp	*(long)
;	O
mp_size_t	long
vsize	long
;	O
mp_size_t	long
gsize	long
;	O
TMP_DECL	O
;	O
up	*(long)
=	O
PTR	O
(	O
u	array(array(long))
)	O
;	O
usize	*(long)
=	O
ABSIZ	O
(	O
u	array(array(long))
)	O
;	O
vp	*(long)
=	O
PTR	O
(	O
v	*(struct(int,int,*(long)))
)	O
;	O
vsize	long
=	O
ABSIZ	O
(	O
v	*(struct(int,int,*(long)))
)	O
;	O
if	O
(	O
usize	*(long)
==	O
0	int
)	O
{	O
SIZ	O
(	O
g	*(struct(int,int,*(long)))
)	O
=	O
vsize	long
;	O
if	O
(	O
g	*(struct(int,int,*(long)))
==	O
v	*(struct(int,int,*(long)))
)	O
return	O
;	O
MPZ_REALLOC	O
(	O
g	*(struct(int,int,*(long)))
,	O
vsize	long
)	O
;	O
MPN_COPY	O
(	O
PTR	O
(	O
g	*(struct(int,int,*(long)))
)	O
,	O
vp	*(long)
,	O
vsize	long
)	O
;	O
return	O
;	O
}	O
if	O
(	O
vsize	long
==	O
0	int
)	O
{	O
SIZ	O
(	O
g	*(struct(int,int,*(long)))
)	O
=	O
usize	*(long)
;	O
if	O
(	O
g	*(struct(int,int,*(long)))
==	O
u	array(array(long))
)	O
return	O
;	O
MPZ_REALLOC	O
(	O
g	*(struct(int,int,*(long)))
,	O
usize	*(long)
)	O
;	O
MPN_COPY	O
(	O
PTR	O
(	O
g	*(struct(int,int,*(long)))
)	O
,	O
up	*(long)
,	O
usize	*(long)
)	O
;	O
return	O
;	O
}	O
if	O
(	O
usize	*(long)
==	O
1	int
)	O
{	O
SIZ	O
(	O
g	*(struct(int,int,*(long)))
)	O
=	O
1	int
;	O
PTR	O
(	O
g	*(struct(int,int,*(long)))
)	O
[	O
0	int
]	O
=	O
mpn_gcd_1	O
(	O
vp	*(long)
,	O
vsize	long
,	O
up	*(long)
[	O
0	int
]	O
)	O
;	O
return	O
;	O
}	O
if	O
(	O
vsize	long
==	O
1	int
)	O
{	O
SIZ	O
(	O
g	*(struct(int,int,*(long)))
)	O
=	O
1	int
;	O
PTR	O
(	O
g	*(struct(int,int,*(long)))
)	O
[	O
0	int
]	O
=	O
mpn_gcd_1	O
(	O
up	*(long)
,	O
usize	*(long)
,	O
vp	*(long)
[	O
0	int
]	O
)	O
;	O
return	O
;	O
}	O
TMP_MARK	O
;	O
while	O
(	O
*	O
up	*(long)
==	O
0	int
)	O
up	*(long)
++	O
;	O
u_zero_limbs	long
=	O
up	*(long)
-	O
PTR	O
(	O
u	array(array(long))
)	O
;	O
usize	*(long)
-=	O
u_zero_limbs	long
;	O
count_trailing_zeros	O
(	O
u_zero_bits	long
,	O
*	O
up	*(long)
)	O
;	O
tp	*(long)
=	O
up	*(long)
;	O
up	*(long)
=	O
TMP_ALLOC_LIMBS	O
(	O
usize	*(long)
)	O
;	O
if	O
(	O
u_zero_bits	long
!=	O
0	int
)	O
{	O
mpn_rshift	O
(	O
up	*(long)
,	O
tp	*(long)
,	O
usize	*(long)
,	O
u_zero_bits	long
)	O
;	O
usize	*(long)
-=	O
up	*(long)
[	O
usize	*(long)
-	O
1	int
]	O
==	O
0	int
;	O
}	O
else	O
MPN_COPY	O
(	O
up	*(long)
,	O
tp	*(long)
,	O
usize	*(long)
)	O
;	O
while	O
(	O
*	O
vp	*(long)
==	O
0	int
)	O
vp	*(long)
++	O
;	O
v_zero_limbs	long
=	O
vp	*(long)
-	O
PTR	O
(	O
v	*(struct(int,int,*(long)))
)	O
;	O
vsize	long
-=	O
v_zero_limbs	long
;	O
count_trailing_zeros	O
(	O
v_zero_bits	long
,	O
*	O
vp	*(long)
)	O
;	O
tp	*(long)
=	O
vp	*(long)
;	O
vp	*(long)
=	O
TMP_ALLOC_LIMBS	O
(	O
vsize	long
)	O
;	O
if	O
(	O
v_zero_bits	long
!=	O
0	int
)	O
{	O
mpn_rshift	O
(	O
vp	*(long)
,	O
tp	*(long)
,	O
vsize	long
,	O
v_zero_bits	long
)	O
;	O
vsize	long
-=	O
vp	*(long)
[	O
vsize	long
-	O
1	int
]	O
==	O
0	int
;	O
}	O
else	O
MPN_COPY	O
(	O
vp	*(long)
,	O
tp	*(long)
,	O
vsize	long
)	O
;	O
if	O
(	O
u_zero_limbs	long
>	O
v_zero_limbs	long
)	O
{	O
g_zero_limbs	long
=	O
v_zero_limbs	long
;	O
g_zero_bits	long
=	O
v_zero_bits	long
;	O
}	O
else	O
if	O
(	O
u_zero_limbs	long
<	O
v_zero_limbs	long
)	O
{	O
g_zero_limbs	long
=	O
u_zero_limbs	long
;	O
g_zero_bits	long
=	O
u_zero_bits	long
;	O
}	O
else	O
{	O
g_zero_limbs	long
=	O
u_zero_limbs	long
;	O
g_zero_bits	long
=	O
MIN	O
(	O
u_zero_bits	long
,	O
v_zero_bits	long
)	O
;	O
}	O
vsize	long
=	O
(	O
usize	*(long)
<	O
vsize	long
||	O
(	O
usize	*(long)
==	O
vsize	long
&&	O
up	*(long)
[	O
usize	*(long)
-	O
1	int
]	O
<	O
vp	*(long)
[	O
vsize	long
-	O
1	int
]	O
)	O
)	O
?	O
mpn_gcd	O
(	O
vp	*(long)
,	O
vp	*(long)
,	O
vsize	long
,	O
up	*(long)
,	O
usize	*(long)
)	O
:	O
mpn_gcd	O
(	O
vp	*(long)
,	O
up	*(long)
,	O
usize	*(long)
,	O
vp	*(long)
,	O
vsize	long
)	O
;	O
gsize	long
=	O
vsize	long
+	O
g_zero_limbs	long
;	O
if	O
(	O
g_zero_bits	long
!=	O
0	int
)	O
{	O
mp_limb_t	long
cy_limb	long
;	O
gsize	long
+=	O
(	O
vp	*(long)
[	O
vsize	long
-	O
1	int
]	O
>>	O
(	O
GMP_NUMB_BITS	O
-	O
g_zero_bits	long
)	O
)	O
!=	O
0	int
;	O
MPZ_REALLOC	O
(	O
g	*(struct(int,int,*(long)))
,	O
gsize	long
)	O
;	O
MPN_ZERO	O
(	O
PTR	O
(	O
g	*(struct(int,int,*(long)))
)	O
,	O
g_zero_limbs	long
)	O
;	O
tp	*(long)
=	O
PTR	O
(	O
g	*(struct(int,int,*(long)))
)	O
+	O
g_zero_limbs	long
;	O
cy_limb	long
=	O
mpn_lshift	O
(	O
tp	*(long)
,	O
vp	*(long)
,	O
vsize	long
,	O
g_zero_bits	long
)	O
;	O
if	O
(	O
cy_limb	long
!=	O
0	int
)	O
tp	*(long)
[	O
vsize	long
]	O
=	O
cy_limb	long
;	O
}	O
else	O
{	O
MPZ_REALLOC	O
(	O
g	*(struct(int,int,*(long)))
,	O
gsize	long
)	O
;	O
MPN_ZERO	O
(	O
PTR	O
(	O
g	*(struct(int,int,*(long)))
)	O
,	O
g_zero_limbs	long
)	O
;	O
MPN_COPY	O
(	O
PTR	O
(	O
g	*(struct(int,int,*(long)))
)	O
+	O
g_zero_limbs	long
,	O
vp	*(long)
,	O
vsize	long
)	O
;	O
}	O
SIZ	O
(	O
g	*(struct(int,int,*(long)))
)	O
=	O
gsize	long
;	O
TMP_FREE	O
;	O
}	O
