static	O
bool	bool
_isBidi	(*(int),long)->(bool)
(	O
const	O
uint32_t	int
*	O
label	*(int)
,	O
size_t	long
llen	long
)	O
{	O
for	O
(	O
;	O
(	O
ssize_t	long
)	O
llen	long
>	O
0	int
;	O
llen	long
--	O
)	O
{	O
int	O
bc	int
=	O
uc_bidi_category	(int)->(int)
(	O
*	O
label	*(int)
++	O
)	O
;	O
if	O
(	O
bc	int
==	O
UC_BIDI_R	int
||	O
bc	int
==	O
UC_BIDI_AL	int
||	O
bc	int
==	O
UC_BIDI_AN	int
)	O
return	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
int	O
_idn2_bidi	(*(int),long)->(int)
(	O
const	O
uint32_t	int
*	O
label	*(int)
,	O
size_t	long
llen	long
)	O
{	O
int	O
bc	int
;	O
int	O
endok	int
=	O
1	int
;	O
if	O
(	O
!	O
_isBidi	(*(int),long)->(bool)
(	O
label	*(int)
,	O
llen	long
)	O
)	O
return	O
IDN2_OK	int
;	O
switch	O
(	O
(	O
bc	int
=	O
uc_bidi_category	(int)->(int)
(	O
*	O
label	*(int)
)	O
)	O
)	O
{	O
case	O
UC_BIDI_L	int
:	O
for	O
(	O
size_t	long
it	long
=	O
1	int
;	O
it	long
<	O
llen	long
;	O
it	long
++	O
)	O
{	O
bc	int
=	O
uc_bidi_category	(int)->(int)
(	O
label	*(int)
[	O
it	long
]	O
)	O
;	O
if	O
(	O
bc	int
==	O
UC_BIDI_L	int
||	O
bc	int
==	O
UC_BIDI_EN	int
||	O
bc	int
==	O
UC_BIDI_NSM	int
)	O
{	O
endok	int
=	O
1	int
;	O
}	O
else	O
{	O
if	O
(	O
bc	int
!=	O
UC_BIDI_ES	int
&&	O
bc	int
!=	O
UC_BIDI_CS	int
&&	O
bc	int
!=	O
UC_BIDI_ET	int
&&	O
bc	int
!=	O
UC_BIDI_ON	int
&&	O
bc	int
!=	O
UC_BIDI_BN	int
)	O
{	O
return	O
IDN2_BIDI	int
;	O
}	O
endok	int
=	O
0	int
;	O
}	O
}	O
return	O
endok	int
?	O
IDN2_OK	int
:	O
IDN2_BIDI	int
;	O
case	O
UC_BIDI_R	int
:	O
case	O
UC_BIDI_AL	int
:	O
for	O
(	O
size_t	long
it	long
=	O
1	int
;	O
it	long
<	O
llen	long
;	O
it	long
++	O
)	O
{	O
bc	int
=	O
uc_bidi_category	(int)->(int)
(	O
label	*(int)
[	O
it	long
]	O
)	O
;	O
if	O
(	O
bc	int
==	O
UC_BIDI_R	int
||	O
bc	int
==	O
UC_BIDI_AL	int
||	O
bc	int
==	O
UC_BIDI_EN	int
||	O
bc	int
==	O
UC_BIDI_AN	int
||	O
bc	int
==	O
UC_BIDI_NSM	int
)	O
{	O
endok	int
=	O
1	int
;	O
}	O
else	O
{	O
if	O
(	O
bc	int
!=	O
UC_BIDI_ES	int
&&	O
bc	int
!=	O
UC_BIDI_CS	int
&&	O
bc	int
!=	O
UC_BIDI_ET	int
&&	O
bc	int
!=	O
UC_BIDI_ON	int
&&	O
bc	int
!=	O
UC_BIDI_BN	int
)	O
{	O
return	O
IDN2_BIDI	int
;	O
}	O
endok	int
=	O
0	int
;	O
}	O
}	O
return	O
endok	int
?	O
IDN2_OK	int
:	O
IDN2_BIDI	int
;	O
default	O
:	O
return	O
IDN2_BIDI	int
;	O
}	O
}	O
