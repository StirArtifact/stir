const	O
char	O
*	O
progname	*(char)
;	O
static	O
const	O
struct	O
dispatch	struct(*(char),*((int,*(*(char)),int)->(void)),int)
{	O
const	O
char	O
*	O
cmd	*(char)
;	O
void	O
(	O
*	O
fn	*((int,*(*(char)),int)->(void))
)	O
(	O
int	O
,	O
char	O
*	O
*	O
,	O
int	O
)	O
;	O
int	O
type	enum(int,int,int,int)
;	O
}	O
dispatch	struct(*(char),*((int,*(*(char)),int)->(void)),int)
[	O
]	O
=	O
{	O
{	O
"mattrib"	*(char)
,	O
mattrib	(int,*(*(char)),int)->(void)
,	O
0	int
}	O
,	O
{	O
"mbadblocks"	*(char)
,	O
mbadblocks	(int,*(*(char)),int)->(void)
,	O
0	int
}	O
,	O
{	O
"mcat"	*(char)
,	O
mcat	(int,*(*(char)),int)->(void)
,	O
0	int
}	O
,	O
{	O
"mcd"	*(char)
,	O
mcd	(int,*(*(char)),int)->(void)
,	O
0	int
}	O
,	O
{	O
"mclasserase"	*(char)
,	O
mclasserase	(int,*(*(char)),int)->(void)
,	O
0	int
}	O
,	O
{	O
"mcopy"	*(char)
,	O
mcopy	(int,*(*(char)),int)->(void)
,	O
0	int
}	O
,	O
{	O
"mdel"	*(char)
,	O
mdel	(int,*(*(char)),int)->(void)
,	O
0	int
}	O
,	O
{	O
"mdeltree"	*(char)
,	O
mdel	(int,*(*(char)),int)->(void)
,	O
2	int
}	O
,	O
{	O
"mdir"	*(char)
,	O
mdir	(int,*(*(char)),int)->(void)
,	O
0	int
}	O
,	O
{	O
"mdoctorfat"	*(char)
,	O
mdoctorfat	(int,*(*(char)),int)->(void)
,	O
0	int
}	O
,	O
{	O
"mdu"	*(char)
,	O
mdu	(int,*(*(char)),int)->(void)
,	O
0	int
}	O
,	O
{	O
"mformat"	*(char)
,	O
mformat	(int,*(*(char)),int)->(void)
,	O
0	int
}	O
,	O
{	O
"minfo"	*(char)
,	O
minfo	(int,*(*(char)),int)->(void)
,	O
0	int
}	O
,	O
{	O
"mlabel"	*(char)
,	O
mlabel	(int,*(*(char)),int)->(void)
,	O
0	int
}	O
,	O
{	O
"mmd"	*(char)
,	O
mmd	(int,*(*(char)),int)->(void)
,	O
0	int
}	O
,	O
{	O
"mmount"	*(char)
,	O
mmount	(int,*(*(char)),int)->(void)
,	O
0	int
}	O
,	O
{	O
"mpartition"	*(char)
,	O
mpartition	(int,*(*(char)),int)->(void)
,	O
0	int
}	O
,	O
{	O
"mrd"	*(char)
,	O
mdel	(int,*(*(char)),int)->(void)
,	O
1	int
}	O
,	O
{	O
"mread"	*(char)
,	O
mcopy	(int,*(*(char)),int)->(void)
,	O
0	int
}	O
,	O
{	O
"mmove"	*(char)
,	O
mmove	(int,*(*(char)),int)->(void)
,	O
0	int
}	O
,	O
{	O
"mren"	*(char)
,	O
mmove	(int,*(*(char)),int)->(void)
,	O
1	int
}	O
,	O
{	O
"mshowfat"	*(char)
,	O
mshowfat	(int,*(*(char)),int)->(void)
,	O
0	int
}	O
,	O
{	O
"mshortname"	*(char)
,	O
mshortname	(int,*(*(char)),int)->(void)
,	O
0	int
}	O
,	O
{	O
"mtoolstest"	*(char)
,	O
mtoolstest	(int,*(*(char)),int)->(void)
,	O
0	int
}	O
,	O
{	O
"mtype"	*(char)
,	O
mcopy	(int,*(*(char)),int)->(void)
,	O
1	int
}	O
,	O
{	O
"mwrite"	*(char)
,	O
mcopy	(int,*(*(char)),int)->(void)
,	O
0	int
}	O
,	O
{	O
"mzip"	*(char)
,	O
mzip	(int,*(*(char)),int)->(void)
,	O
0	int
}	O
}	O
;	O
int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
unsigned	O
int	O
i	int
;	O
const	O
char	O
*	O
name	*(char)
;	O
char	O
*	O
locale	*(char)
;	O
locale	*(char)
=	O
setlocale	(int,*(char))->(*(char))
(	O
LC_ALL	O
,	O
""	*(char)
)	O
;	O
if	O
(	O
locale	*(char)
==	O
NULL	O
||	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
locale	*(char)
,	O
"C"	*(char)
)	O
)	O
setlocale	(int,*(char))->(*(char))
(	O
LC_ALL	O
,	O
"en_US"	*(char)
)	O
;	O
init_privs	()->(void)
(	O
)	O
;	O
if	O
(	O
sizeof	O
(	O
struct	O
partition	int
)	O
!=	O
16	int
||	O
sizeof	O
(	O
struct	O
directory	struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))
)	O
!=	O
32	int
||	O
sizeof	O
(	O
struct	O
vfat_subentry	struct(char,array(struct(char,char)),char,char,char,array(struct(char,char)),char,char,array(struct(char,char)))
)	O
!=	O
32	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Mtools has not been correctly compiled\n"	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Recompile it using a more recent compiler\n"	*(char)
)	O
;	O
return	O
137	int
;	O
}	O
name	*(char)
=	O
_basename	(*(char))->(*(char))
(	O
argv	*(*(char))
[	O
0	int
]	O
)	O
;	O
progname	*(char)
=	O
argv	*(*(char))
[	O
0	int
]	O
;	O
if	O
(	O
argc	int
>=	O
3	int
&&	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
argv	*(*(char))
[	O
1	int
]	O
,	O
"-c"	*(char)
)	O
&&	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
name	*(char)
,	O
"mtools"	*(char)
)	O
)	O
{	O
argc	int
-=	O
2	int
;	O
argv	*(*(char))
+=	O
2	int
;	O
name	*(char)
=	O
argv	*(*(char))
[	O
0	int
]	O
;	O
}	O
if	O
(	O
argc	int
>=	O
2	int
&&	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	*(*(char))
[	O
1	int
]	O
,	O
"-V"	*(char)
)	O
==	O
0	int
||	O
strcmp	(*(char),*(char))->(int)
(	O
argv	*(*(char))
[	O
1	int
]	O
,	O
"--version"	*(char)
)	O
==	O
0	int
)	O
)	O
{	O
printf	(*(char))->(int)
(	O
"%s (GNU mtools) %s\n"	*(char)
,	O
name	*(char)
,	O
mversion	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"configured with the following options: "	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"enable-xdf "	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"disable-vold "	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"disable-new-vold "	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"disable-debug "	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"enable-raw-term "	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"\n"	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
read_config	()->(void)
(	O
)	O
;	O
setup_signal	()->(void)
(	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
NDISPATCH	O
;	O
i	int
++	O
)	O
{	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
name	*(char)
,	O
dispatch	struct(*(char),*((int,*(*(char)),int)->(void)),int)
[	O
i	int
]	O
.	O
cmd	*(char)
)	O
)	O
dispatch	struct(*(char),*((int,*(*(char)),int)->(void)),int)
[	O
i	int
]	O
.	O
fn	*((int,*(*(char)),int)->(void))
(	O
argc	int
,	O
argv	*(*(char))
,	O
dispatch	struct(*(char),*((int,*(*(char)),int)->(void)),int)
[	O
i	int
]	O
.	O
type	enum(int,int,int,int)
)	O
;	O
}	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
name	*(char)
,	O
"mtools"	*(char)
)	O
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Unknown mtools command '%s'\n"	*(char)
,	O
name	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Supported commands:"	*(char)
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
NDISPATCH	O
;	O
i	int
++	O
)	O
{	O
if	O
(	O
i	int
%	O
8	int
==	O
0	int
)	O
putc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\n'	O
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
else	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
", "	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s"	*(char)
,	O
dispatch	struct(*(char),*((int,*(*(char)),int)->(void)),int)
[	O
i	int
]	O
.	O
cmd	*(char)
)	O
;	O
}	O
putc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\n'	O
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
return	O
1	int
;	O
}	O
int	O
helpFlag	(int,*(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
return	O
(	O
argc	int
>	O
1	int
&&	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
argv	*(*(char))
[	O
1	int
]	O
,	O
"--help"	*(char)
)	O
)	O
;	O
}	O
