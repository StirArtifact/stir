int	O
snmp_errno	O
;	O
struct	O
snmp_def	struct(int,int,int)
snmp_def	struct(int,int,int)
=	O
{	O
0	int
,	O
3	int
,	O
3	int
,	O
}	O
;	O
static	O
int	O
__snmp_errno	int
;	O
int	O
*	O
__snmp_errno_location	()->(*(int))
(	O
)	O
{	O
return	O
&	O
__snmp_errno	int
;	O
}	O
int	O
snmp_req_id	()->(int)
(	O
)	O
{	O
if	O
(	O
snmp_def	struct(int,int,int)
.	O
req_id	int
==	O
0	int
)	O
{	O
srand	(int)->(void)
(	O
time	struct(long,long)
(	O
NULL	O
)	O
)	O
;	O
snmp_def	struct(int,int,int)
.	O
req_id	int
=	O
random	()->(long)
(	O
)	O
;	O
}	O
return	O
snmp_def	struct(int,int,int)
.	O
req_id	int
++	O
;	O
}	O
int	O
snmp_fdset	(*(struct(*(struct(*`,int,struct`,int,int,*`,short,short,int,struct`,struct`,*`,*`,*`,*`)),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct(char,struct`,int,int,int,*`)),*(struct(*`,int,int,struct`,*`)))),*(struct(array(long))))->(int)
(	O
struct	O
snmp_session	struct(*(struct(*(struct(*(struct`),int,struct(*`,int),int,int,*(char),short,short,int,struct(short,short,struct`,array(char)),struct(short,short,struct`,array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*(struct`))),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*(struct`),*(struct`),*(void))->(int)),*(void),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(struct(*(struct`),int,int,struct(long,long),*(struct`))))),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*(struct(*(struct`),int,struct(*`,int),int,int,*(char),short,short,int,struct(short,short,struct`,array(char)),struct(short,short,struct`,array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*(struct`))),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(void))->(int)),*(void),*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`))))),*(struct(*(struct(*(struct`),int,int,struct(long,long),*(struct`))),int,int,struct(long,long),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))))))
*	O
sp	*(struct)
,	O
fd_set	struct(array(long))
*	O
fdset	*(struct(array(long)))
)	O
{	O
int	O
fdmax	int
;	O
fdmax	int
=	O
-	O
1	int
;	O
FD_ZERO	O
(	O
fdset	*(struct(array(long)))
)	O
;	O
for	O
(	O
;	O
sp	*(struct)
;	O
sp	*(struct)
=	O
sp	*(struct)
->	O
next	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
)	O
if	O
(	O
sp	*(struct)
->	O
sd	int
!=	O
-	O
1	int
&&	O
sp	*(struct)
->	O
request_list	*(struct(*(struct(*(struct`),int,int,struct(long,long),*(struct`))),int,int,struct(long,long),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`)))))
)	O
{	O
FD_SET	O
(	O
sp	*(struct)
->	O
sd	int
,	O
fdset	*(struct(array(long)))
)	O
;	O
if	O
(	O
sp	*(struct)
->	O
sd	int
>	O
fdmax	int
)	O
fdmax	int
=	O
sp	*(struct)
->	O
sd	int
;	O
}	O
return	O
fdmax	int
+	O
1	int
;	O
}	O
void	O
snmp_init	(int,int,*((long)->(*(void))),*((*(void))->(*(void))))->(void)
(	O
int	O
retries	int
,	O
int	O
timeout	int
,	O
snmp_alloc_t	*((long)->(*(void)))
memalloc	*((long)->(*(void)))
,	O
snmp_free_t	*((*(void))->(*(void)))
memfree	*((*(void))->(*(void)))
)	O
{	O
if	O
(	O
retries	int
)	O
snmp_def	struct(int,int,int)
.	O
retries	int
=	O
retries	int
;	O
if	O
(	O
timeout	int
)	O
snmp_def	struct(int,int,int)
.	O
timeout	int
=	O
timeout	int
;	O
if	O
(	O
memalloc	*((long)->(*(void)))
)	O
__snmp_alloc_fp	*((long)->(*(void)))
=	O
memalloc	*((long)->(*(void)))
;	O
if	O
(	O
memfree	*((*(void))->(*(void)))
)	O
__snmp_free_fp	*((*(void))->(*(void)))
=	O
memfree	*((*(void))->(*(void)))
;	O
}	O
struct	O
snmp_session	struct(*(struct(*(struct(*(struct`),int,struct(*`,int),int,int,*(char),short,short,int,struct(short,short,struct`,array(char)),struct(short,short,struct`,array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*(struct`))),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*(struct`),*(struct`),*(void))->(int)),*(void),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(struct(*(struct`),int,int,struct(long,long),*(struct`))))),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*(struct(*(struct`),int,struct(*`,int),int,int,*(char),short,short,int,struct(short,short,struct`,array(char)),struct(short,short,struct`,array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*(struct`))),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(void))->(int)),*(void),*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`))))),*(struct(*(struct(*(struct`),int,int,struct(long,long),*(struct`))),int,int,struct(long,long),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))))))
*	O
snmp_session_create	(*(char),*(char),int,*((int,*(struct(*`,int,struct`,int,int,*`,short,short,int,struct`,struct`,*`,*`,*`,*`)),*(struct(char,struct`,int,int,int,*`)),*(void))->(int)),*(void))->(*(struct(*(struct(*`,int,struct`,int,int,*`,short,short,int,struct`,struct`,*`,*`,*`,*`)),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct(char,struct`,int,int,int,*`)),*(struct(*`,int,int,struct`,*`)))))
(	O
char	O
*	O
community	struct(*(char),int)
,	O
char	O
*	O
host	*(char)
,	O
int	O
port	int
,	O
snmp_cfn	*((int,*(struct),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(void))->(int))
cfn	*((int,*(struct(*(struct`),int,struct(*`,int),int,int,*(char),short,short,int,struct(short,short,struct`,array(char)),struct(short,short,struct`,array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*(struct`))),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(void))->(int))
,	O
void	O
*	O
closure	*(void)
)	O
{	O
struct	O
snmp_session	struct(*(struct(*(struct(*(struct`),int,struct(*`,int),int,int,*(char),short,short,int,struct(short,short,struct`,array(char)),struct(short,short,struct`,array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*(struct`))),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*(struct`),*(struct`),*(void))->(int)),*(void),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(struct(*(struct`),int,int,struct(long,long),*(struct`))))),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*(struct(*(struct`),int,struct(*`,int),int,int,*(char),short,short,int,struct(short,short,struct`,array(char)),struct(short,short,struct`,array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*(struct`))),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(void))->(int)),*(void),*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`))))),*(struct(*(struct(*(struct`),int,int,struct(long,long),*(struct`))),int,int,struct(long,long),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))))))
*	O
sp	*(struct)
;	O
int	O
len	int
;	O
sp	*(struct)
=	O
snmp_alloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
sp	*(struct)
)	O
)	O
;	O
sp	*(struct)
->	O
version	int
=	O
SNMP_VERSION_1	int
;	O
len	int
=	O
strlen	*(int)
(	O
community	struct(*(char),int)
)	O
;	O
sp	*(struct)
->	O
community	struct(*(char),int)
.	O
str	*(char)
=	O
snmp_alloc	(long)->(*(void))
(	O
len	int
+	O
1	int
)	O
;	O
if	O
(	O
!	O
sp	*(struct)
->	O
community	struct(*(char),int)
.	O
str	*(char)
)	O
{	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_NOMEM	int
)	O
;	O
snmp_free	(*(void))->(void)
(	O
sp	*(struct)
)	O
;	O
return	O
NULL	O
;	O
}	O
strcpy	(*(char),*(char))->(*(char))
(	O
sp	*(struct)
->	O
community	struct(*(char),int)
.	O
str	*(char)
,	O
community	struct(*(char),int)
)	O
;	O
sp	*(struct)
->	O
community	struct(*(char),int)
.	O
len	int
=	O
len	int
;	O
sp	*(struct)
->	O
retries	int
=	O
snmp_def	struct(int,int,int)
.	O
retries	int
;	O
sp	*(struct)
->	O
timeout	int
=	O
snmp_def	struct(int,int,int)
.	O
timeout	int
;	O
len	int
=	O
strlen	*(int)
(	O
host	*(char)
)	O
+	O
1	int
;	O
sp	*(struct)
->	O
remote_host	*(char)
=	O
snmp_alloc	(long)->(*(void))
(	O
len	int
)	O
;	O
if	O
(	O
!	O
sp	*(struct)
->	O
remote_host	*(char)
)	O
{	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_NOMEM	int
)	O
;	O
snmp_free	(*(void))->(void)
(	O
sp	*(struct)
->	O
community	struct(*(char),int)
.	O
str	*(char)
)	O
;	O
snmp_free	(*(void))->(void)
(	O
sp	*(struct)
)	O
;	O
return	O
NULL	O
;	O
}	O
strcpy	(*(char),*(char))->(*(char))
(	O
sp	*(struct)
->	O
remote_host	*(char)
,	O
host	*(char)
)	O
;	O
sp	*(struct)
->	O
remote_port	short
=	O
port	int
;	O
sp	*(struct)
->	O
local_port	short
=	O
0	int
;	O
sp	*(struct)
->	O
converse	*((int,*(struct(*(struct`),int,struct(*`,int),int,int,*(char),short,short,int,struct(short,short,struct`,array(char)),struct(short,short,struct`,array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*(struct`))),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(void))->(int))
=	O
cfn	*((int,*(struct(*(struct`),int,struct(*`,int),int,int,*(char),short,short,int,struct(short,short,struct`,array(char)),struct(short,short,struct`,array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*(struct`))),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(void))->(int))
;	O
sp	*(struct)
->	O
app_closure	*(void)
=	O
closure	*(void)
;	O
sp	*(struct)
->	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
=	O
NULL	O
;	O
sp	*(struct)
->	O
sd	int
=	O
-	O
1	int
;	O
sp	*(struct)
->	O
next	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
NULL	O
;	O
sp	*(struct)
->	O
request_list	*(struct(*(struct(*(struct`),int,int,struct(long,long),*(struct`))),int,int,struct(long,long),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`)))))
=	O
NULL	O
;	O
return	O
sp	*(struct)
;	O
}	O
int	O
snmp_session_open	(*(struct(*(struct(*`,int,struct`,int,int,*`,short,short,int,struct`,struct`,*`,*`,*`,*`)),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct(char,struct`,int,int,int,*`)),*(struct(*`,int,int,struct`,*`)))),int,int,int,int)->(int)
(	O
struct	O
snmp_session	struct(*(struct(*(struct(*(struct`),int,struct(*`,int),int,int,*(char),short,short,int,struct(short,short,struct`,array(char)),struct(short,short,struct`,array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*(struct`))),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*(struct`),*(struct`),*(void))->(int)),*(void),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(struct(*(struct`),int,int,struct(long,long),*(struct`))))),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*(struct(*(struct`),int,struct(*`,int),int,int,*(char),short,short,int,struct(short,short,struct`,array(char)),struct(short,short,struct`,array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*(struct`))),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(void))->(int)),*(void),*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`))))),*(struct(*(struct(*(struct`),int,int,struct(long,long),*(struct`))),int,int,struct(long,long),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))))))
*	O
sp	*(struct)
,	O
ip_addr_t	int
local_ip	int
,	O
int	O
local_port	short
,	O
int	O
timeout	int
,	O
int	O
retries	int
)	O
{	O
ip_addr_t	int
addr	int
;	O
u_short	short
port	int
;	O
struct	O
sockaddr_in	struct(short,short,struct(int),array(char))
local_sin	struct(short,short,struct(int),array(char))
;	O
if	O
(	O
!	O
timeout	int
)	O
sp	*(struct)
->	O
timeout	int
=	O
snmp_def	struct(int,int,int)
.	O
timeout	int
;	O
if	O
(	O
!	O
retries	int
)	O
sp	*(struct)
->	O
retries	int
=	O
snmp_def	struct(int,int,int)
.	O
retries	int
;	O
if	O
(	O
local_ip	int
==	O
0	int
)	O
local_ip	int
=	O
INADDR_ANY	O
;	O
sp	*(struct)
->	O
sd	int
=	O
socket	(int,int,int)->(int)
(	O
PF_INET	int
,	O
SOCK_DGRAM	int
,	O
0	int
)	O
;	O
if	O
(	O
sp	*(struct)
->	O
sd	int
<	O
0	int
)	O
{	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_SOCKET	int
)	O
;	O
snmp_session_free	(*(struct(*(struct(*`,int,struct`,int,int,*`,short,short,int,struct`,struct`,*`,*`,*`,*`)),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct(char,struct`,int,int,int,*`)),*(struct(*`,int,int,struct`,*`)))))->(void)
(	O
sp	*(struct)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
{	O
int	O
one	int
=	O
1	int
;	O
setsockopt	(int,int,int,*(void),int)->(int)
(	O
sp	*(struct)
->	O
sd	int
,	O
SOL_SOCKET	int
,	O
SO_BSDCOMPAT	int
,	O
&	O
one	int
,	O
sizeof	O
(	O
one	int
)	O
)	O
;	O
}	O
addr	int
=	O
inet_addr	(*(char))->(int)
(	O
sp	*(struct)
->	O
remote_host	*(char)
)	O
;	O
if	O
(	O
addr	int
=	O
(	O
ip_addr_t	int
)	O
-	O
1	int
)	O
{	O
struct	O
hostent	struct(*(char),*(*(char)),int,int,*(*(char)))
*	O
hp	*(struct(*(char),*(*(char)),int,int,*(*(char))))
=	O
gethostbyname	(*(char))->(*(struct(*(char),*(*(char)),int,int,*(*(char)))))
(	O
sp	*(struct)
->	O
remote_host	*(char)
)	O
;	O
if	O
(	O
!	O
hp	*(struct(*(char),*(*(char)),int,int,*(*(char))))
)	O
{	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_BAD_ADDRESS	int
)	O
;	O
snmp_session_close	(*(struct(*(struct(*`,int,struct`,int,int,*`,short,short,int,struct`,struct`,*`,*`,*`,*`)),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct(char,struct`,int,int,int,*`)),*(struct(*`,int,int,struct`,*`)))))->(void)
(	O
sp	*(struct)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
addr	int
=	O
*	O
(	O
ip_addr_t	int
*	O
)	O
hp	*(struct(*(char),*(*(char)),int,int,*(*(char))))
->	O
h_addr	O
;	O
}	O
sp	*(struct)
->	O
remote_sin	struct(short,short,struct(int),array(char))
.	O
sin_addr	struct(int)
.	O
s_addr	int
=	O
addr	int
;	O
sp	*(struct)
->	O
remote_sin	struct(short,short,struct(int),array(char))
.	O
sin_family	short
=	O
AF_INET	O
;	O
if	O
(	O
sp	*(struct)
->	O
remote_port	short
==	O
0	int
)	O
{	O
struct	O
servent	struct(*(char),*(*(char)),int,*(char))
*	O
servp	*(struct(*(char),*(*(char)),int,*(char)))
=	O
getservbyname	(*(char),*(char))->(*(struct(*(char),*(*(char)),int,*(char))))
(	O
"snmp"	*(char)
,	O
"udp"	*(char)
)	O
;	O
if	O
(	O
!	O
servp	*(struct(*(char),*(*(char)),int,*(char)))
)	O
port	int
=	O
htons	(short)->(short)
(	O
SNMP_PORT	int
)	O
;	O
else	O
port	int
=	O
servp	*(struct(*(char),*(*(char)),int,*(char)))
->	O
s_port	int
;	O
}	O
else	O
port	int
=	O
htons	(short)->(short)
(	O
sp	*(struct)
->	O
remote_port	short
)	O
;	O
sp	*(struct)
->	O
remote_sin	struct(short,short,struct(int),array(char))
.	O
sin_port	short
=	O
port	int
;	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
local_sin	struct(short,short,struct(int),array(char))
,	O
'\0'	O
,	O
sizeof	O
(	O
local_sin	struct(short,short,struct(int),array(char))
)	O
)	O
;	O
local_sin	struct(short,short,struct(int),array(char))
.	O
sin_family	short
=	O
AF_INET	O
;	O
local_sin	struct(short,short,struct(int),array(char))
.	O
sin_addr	struct(int)
.	O
s_addr	int
=	O
local_ip	int
?	O
INADDR_ANY	O
:	O
htonl	(int)->(int)
(	O
local_ip	int
)	O
;	O
local_sin	struct(short,short,struct(int),array(char))
.	O
sin_port	short
=	O
htons	(short)->(short)
(	O
sp	*(struct)
->	O
local_port	short
)	O
;	O
if	O
(	O
bind	(int,union(*(struct(short,array(char))),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct)),int)->(int)
(	O
sp	*(struct)
->	O
sd	int
,	O
(	O
struct	O
sockaddr	struct(short,array(char))
*	O
)	O
&	O
local_sin	struct(short,short,struct(int),array(char))
,	O
sizeof	O
(	O
local_sin	struct(short,short,struct(int),array(char))
)	O
)	O
<	O
0	int
)	O
{	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_BIND	int
)	O
;	O
snmp_session_close	(*(struct(*(struct(*`,int,struct`,int,int,*`,short,short,int,struct`,struct`,*`,*`,*`,*`)),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct(char,struct`,int,int,int,*`)),*(struct(*`,int,int,struct`,*`)))))->(void)
(	O
sp	*(struct)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
void	O
snmp_session_close	(*(struct(*(struct(*`,int,struct`,int,int,*`,short,short,int,struct`,struct`,*`,*`,*`,*`)),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct(char,struct`,int,int,int,*`)),*(struct(*`,int,int,struct`,*`)))))->(void)
(	O
struct	O
snmp_session	struct(*(struct(*(struct(*(struct`),int,struct(*`,int),int,int,*(char),short,short,int,struct(short,short,struct`,array(char)),struct(short,short,struct`,array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*(struct`))),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*(struct`),*(struct`),*(void))->(int)),*(void),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(struct(*(struct`),int,int,struct(long,long),*(struct`))))),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*(struct(*(struct`),int,struct(*`,int),int,int,*(char),short,short,int,struct(short,short,struct`,array(char)),struct(short,short,struct`,array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*(struct`))),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(void))->(int)),*(void),*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`))))),*(struct(*(struct(*(struct`),int,int,struct(long,long),*(struct`))),int,int,struct(long,long),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))))))
*	O
sess	*(struct(*(struct(*(struct`),int,struct(*`,int),int,int,*(char),short,short,int,struct(short,short,struct`,array(char)),struct(short,short,struct`,array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*(struct`))),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*(struct`),*(struct`),*(void))->(int)),*(void),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(struct(*(struct`),int,int,struct(long,long),*(struct`)))))
)	O
{	O
if	O
(	O
sess	*(struct(*(struct(*(struct`),int,struct(*`,int),int,int,*(char),short,short,int,struct(short,short,struct`,array(char)),struct(short,short,struct`,array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*(struct`))),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*(struct`),*(struct`),*(void))->(int)),*(void),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(struct(*(struct`),int,int,struct(long,long),*(struct`)))))
->	O
sd	int
!=	O
-	O
1	int
)	O
close	(int)->(int)
(	O
sess	*(struct(*(struct(*(struct`),int,struct(*`,int),int,int,*(char),short,short,int,struct(short,short,struct`,array(char)),struct(short,short,struct`,array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*(struct`))),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*(struct`),*(struct`),*(void))->(int)),*(void),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(struct(*(struct`),int,int,struct(long,long),*(struct`)))))
->	O
sd	int
)	O
;	O
snmp_session_free	(*(struct(*(struct(*`,int,struct`,int,int,*`,short,short,int,struct`,struct`,*`,*`,*`,*`)),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct(char,struct`,int,int,int,*`)),*(struct(*`,int,int,struct`,*`)))))->(void)
(	O
sess	*(struct(*(struct(*(struct`),int,struct(*`,int),int,int,*(char),short,short,int,struct(short,short,struct`,array(char)),struct(short,short,struct`,array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*(struct`))),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*(struct`),*(struct`),*(void))->(int)),*(void),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(struct(*(struct`),int,int,struct(long,long),*(struct`)))))
)	O
;	O
}	O
void	O
snmp_session_free	(*(struct(*(struct(*`,int,struct`,int,int,*`,short,short,int,struct`,struct`,*`,*`,*`,*`)),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct(char,struct`,int,int,int,*`)),*(struct(*`,int,int,struct`,*`)))))->(void)
(	O
struct	O
snmp_session	struct(*(struct(*(struct(*(struct`),int,struct(*`,int),int,int,*(char),short,short,int,struct(short,short,struct`,array(char)),struct(short,short,struct`,array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*(struct`))),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*(struct`),*(struct`),*(void))->(int)),*(void),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(struct(*(struct`),int,int,struct(long,long),*(struct`))))),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*(struct(*(struct`),int,struct(*`,int),int,int,*(char),short,short,int,struct(short,short,struct`,array(char)),struct(short,short,struct`,array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*(struct`))),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(void))->(int)),*(void),*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`))))),*(struct(*(struct(*(struct`),int,int,struct(long,long),*(struct`))),int,int,struct(long,long),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))))))
*	O
sess	*(struct(*(struct(*(struct`),int,struct(*`,int),int,int,*(char),short,short,int,struct(short,short,struct`,array(char)),struct(short,short,struct`,array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*(struct`))),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*(struct`),*(struct`),*(void))->(int)),*(void),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(struct(*(struct`),int,int,struct(long,long),*(struct`)))))
)	O
{	O
if	O
(	O
!	O
sess	*(struct(*(struct(*(struct`),int,struct(*`,int),int,int,*(char),short,short,int,struct(short,short,struct`,array(char)),struct(short,short,struct`,array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*(struct`))),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*(struct`),*(struct`),*(void))->(int)),*(void),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(struct(*(struct`),int,int,struct(long,long),*(struct`)))))
)	O
return	O
;	O
snmp_pdu_free	(*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*`,*`,int,char,union`)))))->(void)
(	O
sess	*(struct(*(struct(*(struct`),int,struct(*`,int),int,int,*(char),short,short,int,struct(short,short,struct`,array(char)),struct(short,short,struct`,array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*(struct`))),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*(struct`),*(struct`),*(void))->(int)),*(void),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(struct(*(struct`),int,int,struct(long,long),*(struct`)))))
->	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
)	O
;	O
snmp_request_free_list	(*(struct(*(struct(*`,int,int,struct`,*`)),int,int,struct(long,long),*(struct(char,struct`,int,int,int,*`)))))->(void)
(	O
sess	*(struct(*(struct(*(struct`),int,struct(*`,int),int,int,*(char),short,short,int,struct(short,short,struct`,array(char)),struct(short,short,struct`,array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*(struct`))),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*(struct`),*(struct`),*(void))->(int)),*(void),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(struct(*(struct`),int,int,struct(long,long),*(struct`)))))
->	O
request_list	*(struct(*(struct(*(struct`),int,int,struct(long,long),*(struct`))),int,int,struct(long,long),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`)))))
)	O
;	O
snmp_free	(*(void))->(void)
(	O
sess	*(struct(*(struct(*(struct`),int,struct(*`,int),int,int,*(char),short,short,int,struct(short,short,struct`,array(char)),struct(short,short,struct`,array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*(struct`))),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*(struct`),*(struct`),*(void))->(int)),*(void),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(struct(*(struct`),int,int,struct(long,long),*(struct`)))))
->	O
remote_host	*(char)
)	O
;	O
snmp_free	(*(void))->(void)
(	O
sess	*(struct(*(struct(*(struct`),int,struct(*`,int),int,int,*(char),short,short,int,struct(short,short,struct`,array(char)),struct(short,short,struct`,array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*(struct`))),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*(struct`),*(struct`),*(void))->(int)),*(void),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(struct(*(struct`),int,int,struct(long,long),*(struct`)))))
->	O
community	struct(*(char),int)
.	O
str	*(char)
)	O
;	O
snmp_free	(*(void))->(void)
(	O
sess	*(struct(*(struct(*(struct`),int,struct(*`,int),int,int,*(char),short,short,int,struct(short,short,struct`,array(char)),struct(short,short,struct`,array(char)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*(struct`))),int,struct(*(char),int),int,int,*(char),short,short,int,struct(short,short,struct(int),array(char)),struct(short,short,struct(int),array(char)),*((int,*(struct`),*(struct`),*(void))->(int)),*(void),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))),*(struct(*(struct`),int,int,struct(long,long),*(struct`)))))
)	O
;	O
}	O
void	O
snmp_request_free	(*(struct(*(struct(*`,int,int,struct`,*`)),int,int,struct(long,long),*(struct(char,struct`,int,int,int,*`)))))->(void)
(	O
struct	O
snmp_request	struct(*(struct(*(struct(*(struct`),int,int,struct(long,long),*(struct`))),int,int,struct(long,long),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))))),int,int,struct(long,long),*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`))))))
*	O
req	*(struct(*(struct(*(struct`),int,int,struct(long,long),*(struct`))),int,int,struct(long,long),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`)))))
)	O
{	O
if	O
(	O
req	*(struct(*(struct(*(struct`),int,int,struct(long,long),*(struct`))),int,int,struct(long,long),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`)))))
)	O
{	O
snmp_pdu_free	(*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*`,*`,int,char,union`)))))->(void)
(	O
req	*(struct(*(struct(*(struct`),int,int,struct(long,long),*(struct`))),int,int,struct(long,long),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`)))))
->	O
pdu	*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`)))))
)	O
;	O
snmp_free	(*(void))->(void)
(	O
req	*(struct(*(struct(*(struct`),int,int,struct(long,long),*(struct`))),int,int,struct(long,long),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`)))))
)	O
;	O
}	O
}	O
void	O
snmp_request_free_list	(*(struct(*(struct(*`,int,int,struct`,*`)),int,int,struct(long,long),*(struct(char,struct`,int,int,int,*`)))))->(void)
(	O
struct	O
snmp_request	struct(*(struct(*(struct(*(struct`),int,int,struct(long,long),*(struct`))),int,int,struct(long,long),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))))),int,int,struct(long,long),*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`))))))
*	O
req	*(struct(*(struct(*(struct`),int,int,struct(long,long),*(struct`))),int,int,struct(long,long),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`)))))
)	O
{	O
struct	O
snmp_request	struct(*(struct(*(struct(*(struct`),int,int,struct(long,long),*(struct`))),int,int,struct(long,long),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`))))),int,int,struct(long,long),*(struct(char,struct(short,short,struct(int),array(char)),int,int,int,*(struct(*(struct`),*(int),int,char,union(int,*`,*`))))))
*	O
next	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
;	O
while	O
(	O
req	*(struct(*(struct(*(struct`),int,int,struct(long,long),*(struct`))),int,int,struct(long,long),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`)))))
)	O
{	O
next	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
=	O
req	*(struct(*(struct(*(struct`),int,int,struct(long,long),*(struct`))),int,int,struct(long,long),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
;	O
snmp_free	(*(void))->(void)
(	O
req	*(struct(*(struct(*(struct`),int,int,struct(long,long),*(struct`))),int,int,struct(long,long),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`)))))
)	O
;	O
req	*(struct(*(struct(*(struct`),int,int,struct(long,long),*(struct`))),int,int,struct(long,long),*(struct(char,struct(short,short,struct`,array(char)),int,int,int,*(struct`)))))
=	O
next	*(struct(*(struct(*(struct`),*(int),int,char,union(int,*`,*`))),*(int),int,char,union(int,*(char),*(int))))
;	O
}	O
}	O
