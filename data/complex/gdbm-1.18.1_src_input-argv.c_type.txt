struct	O
instream_argv	struct(struct(*(char),int,*((*(struct(*`,int,*`,*`,*`)),*(char),long)->(long)),*((*(struct(*`,int,*`,*`,*`)))->(void)),*((*(struct(*`,int,*`,*`,*`)),*(struct(*`,int,*`,*`,*`)))->(int))),int,*(*(char)),int,*(char),int,int)
{	O
struct	O
instream	struct(*(char),int,*((*(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int)))),*(char),long)->(long)),*((*(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int)))))->(void)),*((*(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int)))),*(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int)))))->(int)))
base	struct(*(char),int,*((*(struct(*`,int,*`,*`,*`)),*(char),long)->(long)),*((*(struct(*`,int,*`,*`,*`)))->(void)),*((*(struct(*`,int,*`,*`,*`)),*(struct(*`,int,*`,*`,*`)))->(int)))
;	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	*(*(char))
;	O
int	O
idx	int
;	O
char	O
*	O
cur	*(char)
;	O
int	O
delim	int
;	O
int	O
quote	int
;	O
}	O
;	O
static	O
ssize_t	long
instream_argv_read	(*(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int)))),*(char),long)->(long)
(	O
instream_t	*(struct)
istr	*(struct(*(char),int,*((*(struct`),*(char),long)->(long)),*((*(struct`))->(void)),*((*(struct`),*(struct`))->(int))))
,	O
char	O
*	O
buf	*(void)
,	O
size_t	long
size	int
)	O
{	O
size_t	long
total	long
=	O
0	int
;	O
struct	O
instream_argv	struct(struct(*(char),int,*((*(struct(*`,int,*`,*`,*`)),*(char),long)->(long)),*((*(struct(*`,int,*`,*`,*`)))->(void)),*((*(struct(*`,int,*`,*`,*`)),*(struct(*`,int,*`,*`,*`)))->(int))),int,*(*(char)),int,*(char),int,int)
*	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
=	O
(	O
struct	O
instream_argv	struct(struct(*(char),int,*((*(struct(*`,int,*`,*`,*`)),*(char),long)->(long)),*((*(struct(*`,int,*`,*`,*`)))->(void)),*((*(struct(*`,int,*`,*`,*`)),*(struct(*`,int,*`,*`,*`)))->(int))),int,*(*(char)),int,*(char),int,int)
*	O
)	O
istr	*(struct(*(char),int,*((*(struct`),*(char),long)->(long)),*((*(struct`))->(void)),*((*(struct`),*(struct`))->(int))))
;	O
char	O
const	O
specials	array(char)
[	O
]	O
=	O
" \"\t\n[]{},="	*(char)
;	O
char	O
const	O
escapable	array(char)
[	O
]	O
=	O
"\\\""	*(char)
;	O
while	O
(	O
total	long
<	O
size	int
)	O
{	O
if	O
(	O
*	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
->	O
cur	*(char)
==	O
0	int
)	O
{	O
if	O
(	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
->	O
quote	int
)	O
{	O
buf	*(void)
[	O
total	long
++	O
]	O
=	O
'"'	O
;	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
->	O
quote	int
=	O
0	int
;	O
continue	O
;	O
}	O
if	O
(	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
->	O
idx	int
==	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
->	O
argc	int
)	O
{	O
if	O
(	O
!	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
->	O
delim	int
)	O
{	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
->	O
cur	*(char)
=	O
"\n"	*(char)
;	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
->	O
delim	int
=	O
1	int
;	O
}	O
else	O
break	O
;	O
}	O
else	O
if	O
(	O
!	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
->	O
delim	int
)	O
{	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
->	O
cur	*(char)
=	O
" "	*(char)
;	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
->	O
delim	int
=	O
1	int
;	O
}	O
else	O
{	O
size_t	long
len	long
;	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
->	O
cur	*(char)
=	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
->	O
argv	*(*(char))
[	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
->	O
idx	int
++	O
]	O
;	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
->	O
delim	int
=	O
0	int
;	O
len	long
=	O
strlen	(*(char))->(long)
(	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
->	O
cur	*(char)
)	O
;	O
if	O
(	O
len	long
>	O
1	int
&&	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
->	O
cur	*(char)
[	O
0	int
]	O
==	O
'"'	O
&&	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
->	O
cur	*(char)
[	O
len	long
-	O
1	int
]	O
==	O
'"'	O
)	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
->	O
quote	int
=	O
0	int
;	O
else	O
if	O
(	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
->	O
cur	*(char)
[	O
strcspn	(*(char),*(char))->(long)
(	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
->	O
cur	*(char)
,	O
specials	array(char)
)	O
]	O
)	O
{	O
buf	*(void)
[	O
total	long
++	O
]	O
=	O
'"'	O
;	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
->	O
quote	int
=	O
1	int
;	O
continue	O
;	O
}	O
else	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
->	O
quote	int
=	O
0	int
;	O
}	O
}	O
if	O
(	O
strchr	(*(char),int)->(*(char))
(	O
escapable	array(char)
,	O
*	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
->	O
cur	*(char)
)	O
)	O
{	O
if	O
(	O
total	long
+	O
2	int
>	O
size	int
)	O
break	O
;	O
buf	*(void)
[	O
total	long
++	O
]	O
=	O
'\\'	O
;	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
->	O
cur	*(char)
++	O
;	O
}	O
buf	*(void)
[	O
total	long
++	O
]	O
=	O
*	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
->	O
cur	*(char)
++	O
;	O
}	O
return	O
total	long
;	O
}	O
static	O
void	O
instream_argv_close	(*(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int)))))->(void)
(	O
instream_t	*(struct)
istr	*(struct(*(char),int,*((*(struct`),*(char),long)->(long)),*((*(struct`))->(void)),*((*(struct`),*(struct`))->(int))))
)	O
{	O
struct	O
instream_argv	struct(struct(*(char),int,*((*(struct(*`,int,*`,*`,*`)),*(char),long)->(long)),*((*(struct(*`,int,*`,*`,*`)))->(void)),*((*(struct(*`,int,*`,*`,*`)),*(struct(*`,int,*`,*`,*`)))->(int))),int,*(*(char)),int,*(char),int,int)
*	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
=	O
(	O
struct	O
instream_argv	struct(struct(*(char),int,*((*(struct(*`,int,*`,*`,*`)),*(char),long)->(long)),*((*(struct(*`,int,*`,*`,*`)))->(void)),*((*(struct(*`,int,*`,*`,*`)),*(struct(*`,int,*`,*`,*`)))->(int))),int,*(*(char)),int,*(char),int,int)
*	O
)	O
istr	*(struct(*(char),int,*((*(struct`),*(char),long)->(long)),*((*(struct`))->(void)),*((*(struct`),*(struct`))->(int))))
;	O
free	(*(void))->(void)
(	O
i	*(struct(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int))),int,*(*(char)),int,*(char),int,int))
)	O
;	O
}	O
static	O
int	O
instream_argv_eq	(*(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int)))),*(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int)))))->(int)
(	O
instream_t	*(struct)
a	array(int)
,	O
instream_t	*(struct)
b	array(int)
)	O
{	O
return	O
0	int
;	O
}	O
instream_t	*(struct)
instream_argv_create	(int,*(*(char)))->(*(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int)))))
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
struct	O
instream_argv	struct(struct(*(char),int,*((*(struct(*`,int,*`,*`,*`)),*(char),long)->(long)),*((*(struct(*`,int,*`,*`,*`)))->(void)),*((*(struct(*`,int,*`,*`,*`)),*(struct(*`,int,*`,*`,*`)))->(int))),int,*(*(char)),int,*(char),int,int)
*	O
istr	*(struct(*(char),int,*((*(struct`),*(char),long)->(long)),*((*(struct`))->(void)),*((*(struct`),*(struct`))->(int))))
;	O
istr	*(struct(*(char),int,*((*(struct`),*(char),long)->(long)),*((*(struct`))->(void)),*((*(struct`),*(struct`))->(int))))
=	O
emalloc	(long)->(*(void))
(	O
sizeof	O
*	O
istr	*(struct(*(char),int,*((*(struct`),*(char),long)->(long)),*((*(struct`))->(void)),*((*(struct`),*(struct`))->(int))))
)	O
;	O
istr	*(struct(*(char),int,*((*(struct`),*(char),long)->(long)),*((*(struct`))->(void)),*((*(struct`),*(struct`))->(int))))
->	O
base	struct(*(char),int,*((*(struct(*`,int,*`,*`,*`)),*(char),long)->(long)),*((*(struct(*`,int,*`,*`,*`)))->(void)),*((*(struct(*`,int,*`,*`,*`)),*(struct(*`,int,*`,*`,*`)))->(int)))
.	O
in_name	*(char)
=	O
"argv"	*(char)
;	O
istr	*(struct(*(char),int,*((*(struct`),*(char),long)->(long)),*((*(struct`))->(void)),*((*(struct`),*(struct`))->(int))))
->	O
base	struct(*(char),int,*((*(struct(*`,int,*`,*`,*`)),*(char),long)->(long)),*((*(struct(*`,int,*`,*`,*`)))->(void)),*((*(struct(*`,int,*`,*`,*`)),*(struct(*`,int,*`,*`,*`)))->(int)))
.	O
in_inter	int
=	O
0	int
;	O
istr	*(struct(*(char),int,*((*(struct`),*(char),long)->(long)),*((*(struct`))->(void)),*((*(struct`),*(struct`))->(int))))
->	O
base	struct(*(char),int,*((*(struct(*`,int,*`,*`,*`)),*(char),long)->(long)),*((*(struct(*`,int,*`,*`,*`)))->(void)),*((*(struct(*`,int,*`,*`,*`)),*(struct(*`,int,*`,*`,*`)))->(int)))
.	O
in_read	*((*(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int)))),*(char),long)->(long))
=	O
instream_argv_read	(*(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int)))),*(char),long)->(long)
;	O
istr	*(struct(*(char),int,*((*(struct`),*(char),long)->(long)),*((*(struct`))->(void)),*((*(struct`),*(struct`))->(int))))
->	O
base	struct(*(char),int,*((*(struct(*`,int,*`,*`,*`)),*(char),long)->(long)),*((*(struct(*`,int,*`,*`,*`)))->(void)),*((*(struct(*`,int,*`,*`,*`)),*(struct(*`,int,*`,*`,*`)))->(int)))
.	O
in_close	*((*(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int)))))->(void))
=	O
instream_argv_close	(*(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int)))))->(void)
;	O
istr	*(struct(*(char),int,*((*(struct`),*(char),long)->(long)),*((*(struct`))->(void)),*((*(struct`),*(struct`))->(int))))
->	O
base	struct(*(char),int,*((*(struct(*`,int,*`,*`,*`)),*(char),long)->(long)),*((*(struct(*`,int,*`,*`,*`)))->(void)),*((*(struct(*`,int,*`,*`,*`)),*(struct(*`,int,*`,*`,*`)))->(int)))
.	O
in_eq	*((*(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int)))),*(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int)))))->(int))
=	O
instream_argv_eq	(*(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int)))),*(struct(*(char),int,*((*`,*`,long)->(long)),*((*`)->(void)),*((*`,*`)->(int)))))->(int)
;	O
istr	*(struct(*(char),int,*((*(struct`),*(char),long)->(long)),*((*(struct`))->(void)),*((*(struct`),*(struct`))->(int))))
->	O
argc	int
=	O
argc	int
;	O
istr	*(struct(*(char),int,*((*(struct`),*(char),long)->(long)),*((*(struct`))->(void)),*((*(struct`),*(struct`))->(int))))
->	O
argv	*(*(char))
=	O
argv	*(*(char))
;	O
istr	*(struct(*(char),int,*((*(struct`),*(char),long)->(long)),*((*(struct`))->(void)),*((*(struct`),*(struct`))->(int))))
->	O
idx	int
=	O
0	int
;	O
istr	*(struct(*(char),int,*((*(struct`),*(char),long)->(long)),*((*(struct`))->(void)),*((*(struct`),*(struct`))->(int))))
->	O
cur	*(char)
=	O
""	*(char)
;	O
istr	*(struct(*(char),int,*((*(struct`),*(char),long)->(long)),*((*(struct`))->(void)),*((*(struct`),*(struct`))->(int))))
->	O
delim	int
=	O
1	int
;	O
istr	*(struct(*(char),int,*((*(struct`),*(char),long)->(long)),*((*(struct`))->(void)),*((*(struct`),*(struct`))->(int))))
->	O
quote	int
=	O
0	int
;	O
return	O
(	O
instream_t	*(struct)
)	O
istr	*(struct(*(char),int,*((*(struct`),*(char),long)->(long)),*((*(struct`))->(void)),*((*(struct`),*(struct`))->(int))))
;	O
}	O
