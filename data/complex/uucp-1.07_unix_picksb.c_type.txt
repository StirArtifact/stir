const	O
char	O
picksb_rcsid	array(char)
[	O
]	O
=	O
"$Id: picksb.c,v 1.13 2002/03/05 19:10:42 ian Rel $"	*(char)
;	O
extern	O
struct	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
*	O
getpwuid	(int)->(*(struct(*(char),*(char),int,int,*(char),*(char),*(char))))
(	O
)	O
;	O
static	O
DIR	struct
*	O
qStopdir	*(struct)
;	O
static	O
char	O
*	O
zStopdir	*(char)
;	O
static	O
DIR	struct
*	O
qSsysdir	*(struct)
;	O
static	O
char	O
*	O
zSsysdir	*(char)
;	O
boolean	int
fsysdep_uupick_init	(*(char),*(char))->(int)
(	O
zsystem	*(char)
,	O
zpubdir	*(char)
)	O
const	O
char	O
*	O
zsystem	*(char)
ATTRIBUTE_UNUSED	O
;	O
const	O
char	O
*	O
zpubdir	*(char)
;	O
{	O
const	O
char	O
*	O
zuser	*(char)
;	O
zuser	*(char)
=	O
zsysdep_login_name	()->(*(char))
(	O
)	O
;	O
zStopdir	*(char)
=	O
(	O
char	O
*	O
)	O
xmalloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
zpubdir	*(char)
)	O
+	O
sizeof	O
"/receive/"	*(char)
+	O
strlen	(*(char))->(long)
(	O
zuser	*(char)
)	O
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
zStopdir	*(char)
,	O
"%s/receive/%s"	*(char)
,	O
zpubdir	*(char)
,	O
zuser	*(char)
)	O
;	O
qStopdir	*(struct)
=	O
opendir	(*(char))->(*(struct))
(	O
zStopdir	*(char)
)	O
;	O
if	O
(	O
qStopdir	*(struct)
==	O
NULL	O
&&	O
errno	O
!=	O
ENOENT	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"opendir (%s): %s"	*(char)
,	O
zStopdir	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
qSsysdir	*(struct)
=	O
NULL	O
;	O
return	O
TRUE	O
;	O
}	O
char	O
*	O
zsysdep_uupick	(*(char),*(char),*(*(char)),*(*(char)))->(*(char))
(	O
zsysarg	*(char)
,	O
zpubdir	*(char)
,	O
pzfrom	*(*(char))
,	O
pzfull	*(*(char))
)	O
const	O
char	O
*	O
zsysarg	*(char)
;	O
const	O
char	O
*	O
zpubdir	*(char)
ATTRIBUTE_UNUSED	O
;	O
char	O
*	O
*	O
pzfrom	*(*(char))
;	O
char	O
*	O
*	O
pzfull	*(*(char))
;	O
{	O
struct	O
dirent	struct(long,long,short,char,array(char))
*	O
qentry	*(struct(long,long,short,char,array(char)))
;	O
while	O
(	O
TRUE	O
)	O
{	O
while	O
(	O
qSsysdir	*(struct)
==	O
NULL	O
)	O
{	O
const	O
char	O
*	O
zsystem	*(char)
;	O
char	O
*	O
zdir	*(char)
;	O
if	O
(	O
qStopdir	*(struct)
==	O
NULL	O
)	O
return	O
NULL	O
;	O
if	O
(	O
zsysarg	*(char)
!=	O
NULL	O
)	O
{	O
closedir	(*(struct))->(int)
(	O
qStopdir	*(struct)
)	O
;	O
qStopdir	*(struct)
=	O
NULL	O
;	O
zsystem	*(char)
=	O
zsysarg	*(char)
;	O
}	O
else	O
{	O
do	O
{	O
qentry	*(struct(long,long,short,char,array(char)))
=	O
readdir	(*(struct))->(*(struct(long,long,short,char,array(char))))
(	O
qStopdir	*(struct)
)	O
;	O
if	O
(	O
qentry	*(struct(long,long,short,char,array(char)))
==	O
NULL	O
)	O
{	O
closedir	(*(struct))->(int)
(	O
qStopdir	*(struct)
)	O
;	O
qStopdir	*(struct)
=	O
NULL	O
;	O
return	O
NULL	O
;	O
}	O
}	O
while	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
qentry	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
,	O
"."	*(char)
)	O
==	O
0	int
||	O
strcmp	(*(char),*(char))->(int)
(	O
qentry	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
,	O
".."	*(char)
)	O
==	O
0	int
)	O
;	O
zsystem	*(char)
=	O
qentry	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
;	O
}	O
zdir	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
strlen	(*(char))->(long)
(	O
zStopdir	*(char)
)	O
+	O
strlen	(*(char))->(long)
(	O
zsystem	*(char)
)	O
+	O
sizeof	O
"/"	*(char)
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
zdir	*(char)
,	O
"%s/%s"	*(char)
,	O
zStopdir	*(char)
,	O
zsystem	*(char)
)	O
;	O
qSsysdir	*(struct)
=	O
opendir	(*(char))->(*(struct))
(	O
zdir	*(char)
)	O
;	O
if	O
(	O
qSsysdir	*(struct)
==	O
NULL	O
)	O
{	O
if	O
(	O
errno	O
!=	O
ENOENT	int
&&	O
errno	O
!=	O
ENOTDIR	int
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"opendir (%s): %s"	*(char)
,	O
zdir	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
}	O
else	O
{	O
ubuffree	(*(char))->(void)
(	O
zSsysdir	*(char)
)	O
;	O
zSsysdir	*(char)
=	O
zbufcpy	(*(char))->(*(char))
(	O
zsystem	*(char)
)	O
;	O
}	O
ubuffree	(*(char))->(void)
(	O
zdir	*(char)
)	O
;	O
}	O
qentry	*(struct(long,long,short,char,array(char)))
=	O
readdir	(*(struct))->(*(struct(long,long,short,char,array(char))))
(	O
qSsysdir	*(struct)
)	O
;	O
if	O
(	O
qentry	*(struct(long,long,short,char,array(char)))
==	O
NULL	O
)	O
{	O
closedir	(*(struct))->(int)
(	O
qSsysdir	*(struct)
)	O
;	O
qSsysdir	*(struct)
=	O
NULL	O
;	O
continue	O
;	O
}	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
qentry	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
,	O
"."	*(char)
)	O
==	O
0	int
||	O
strcmp	(*(char),*(char))->(int)
(	O
qentry	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
,	O
".."	*(char)
)	O
==	O
0	int
)	O
continue	O
;	O
*	O
pzfrom	*(*(char))
=	O
zbufcpy	(*(char))->(*(char))
(	O
zSsysdir	*(char)
)	O
;	O
*	O
pzfull	*(*(char))
=	O
zsappend3	(*(char),*(char),*(char))->(*(char))
(	O
zStopdir	*(char)
,	O
zSsysdir	*(char)
,	O
qentry	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
)	O
;	O
return	O
zbufcpy	(*(char))->(*(char))
(	O
qentry	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
)	O
;	O
}	O
}	O
boolean	int
fsysdep_uupick_free	(*(char),*(char))->(int)
(	O
zsystem	*(char)
,	O
zpubdir	*(char)
)	O
const	O
char	O
*	O
zsystem	*(char)
ATTRIBUTE_UNUSED	O
;	O
const	O
char	O
*	O
zpubdir	*(char)
ATTRIBUTE_UNUSED	O
;	O
{	O
xfree	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
zStopdir	*(char)
)	O
;	O
if	O
(	O
qStopdir	*(struct)
!=	O
NULL	O
)	O
{	O
closedir	(*(struct))->(int)
(	O
qStopdir	*(struct)
)	O
;	O
qStopdir	*(struct)
=	O
NULL	O
;	O
}	O
ubuffree	(*(char))->(void)
(	O
zSsysdir	*(char)
)	O
;	O
zSsysdir	*(char)
=	O
NULL	O
;	O
if	O
(	O
qSsysdir	*(struct)
!=	O
NULL	O
)	O
{	O
closedir	(*(struct))->(int)
(	O
qSsysdir	*(struct)
)	O
;	O
qSsysdir	*(struct)
=	O
NULL	O
;	O
}	O
return	O
TRUE	O
;	O
}	O
char	O
*	O
zsysdep_uupick_local_file	(*(char),*(int))->(*(char))
(	O
zfile	*(char)
,	O
pfbadname	*(int)
)	O
const	O
char	O
*	O
zfile	*(char)
;	O
boolean	int
*	O
pfbadname	*(int)
;	O
{	O
struct	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
*	O
q	*(struct)
;	O
if	O
(	O
pfbadname	*(int)
!=	O
NULL	O
)	O
*	O
pfbadname	*(int)
=	O
FALSE	O
;	O
if	O
(	O
zfile	*(char)
[	O
0	int
]	O
!=	O
'~'	O
||	O
(	O
zfile	*(char)
[	O
1	int
]	O
!=	O
'/'	O
&&	O
zfile	*(char)
[	O
1	int
]	O
!=	O
'\0'	O
)	O
)	O
return	O
zsysdep_local_file_cwd	(*(char),*(char),*(int))->(*(char))
(	O
zfile	*(char)
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
pfbadname	*(int)
)	O
;	O
q	*(struct)
=	O
getpwuid	(int)->(*(struct(*(char),*(char),int,int,*(char),*(char),*(char))))
(	O
getuid	()->(int)
(	O
)	O
)	O
;	O
if	O
(	O
q	*(struct)
==	O
NULL	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Can't get home directory"	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
zfile	*(char)
[	O
1	int
]	O
==	O
'\0'	O
)	O
return	O
zbufcpy	(*(char))->(*(char))
(	O
q	*(struct)
->	O
pw_dir	*(char)
)	O
;	O
return	O
zsysdep_in_dir	(*(char),*(char))->(*(char))
(	O
q	*(struct)
->	O
pw_dir	*(char)
,	O
zfile	*(char)
+	O
2	int
)	O
;	O
}	O
