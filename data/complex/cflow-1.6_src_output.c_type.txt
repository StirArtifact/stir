unsigned	O
char	O
*	O
level_mark	*(char)
;	O
int	O
level_mark_size	int
=	O
0	int
;	O
int	O
level_mark_incr	int
=	O
128	int
;	O
int	O
out_line	int
=	O
1	int
;	O
FILE	struct
*	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
static	O
void	O
set_level_mark	(int,int)->(void)
(	O
int	O
lev	int
,	O
int	O
mark	int
)	O
{	O
if	O
(	O
lev	int
>=	O
level_mark_size	int
)	O
{	O
level_mark_size	int
+=	O
level_mark_incr	int
;	O
level_mark	*(char)
=	O
xrealloc	(*(void),long)->(*(void))
(	O
level_mark	*(char)
,	O
level_mark_size	int
)	O
;	O
}	O
level_mark	*(char)
[	O
lev	int
]	O
=	O
mark	int
;	O
}	O
void	O
print_level	(int,int)->(void)
(	O
int	O
lev	int
,	O
int	O
last	int
)	O
{	O
int	O
i	long
;	O
if	O
(	O
print_line_numbers	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%5d "	*(char)
,	O
out_line	int
)	O
;	O
if	O
(	O
print_levels	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"{%4d} "	*(char)
,	O
lev	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s"	*(char)
,	O
level_begin	*(char)
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
lev	int
;	O
i	long
++	O
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s"	*(char)
,	O
level_indent	array(*(char))
[	O
level_mark	*(char)
[	O
i	long
]	O
]	O
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s"	*(char)
,	O
level_end	array(*(char))
[	O
last	int
]	O
)	O
;	O
}	O
struct	O
output_driver	struct(*(char),*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int)),*(void))
{	O
char	O
*	O
name	*(char)
;	O
int	O
(	O
*	O
handler	*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int))
)	O
(	O
cflow_output_command	enum(int,int,int,int,int,int,int)
cmd	enum(int,int,int,int,int,int,int)
,	O
FILE	struct
*	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
int	O
line	int
,	O
void	O
*	O
data	*(void)
,	O
void	O
*	O
handler_data	*(void)
)	O
;	O
void	O
*	O
handler_data	*(void)
;	O
}	O
;	O
static	O
int	O
driver_index	int
;	O
static	O
int	O
driver_max	int
=	O
0	int
;	O
struct	O
output_driver	struct(*(char),*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int)),*(void))
output_driver	struct(*(char),*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int)),*(void))
[	O
MAX_OUTPUT_DRIVERS	int
]	O
;	O
int	O
register_output	(*(char),*((enum(int,int,int,int,int,int,int),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(void),*(void))->(int)),*(void))->(int)
(	O
const	O
char	O
*	O
name	*(char)
,	O
int	O
(	O
*	O
handler	*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int))
)	O
(	O
cflow_output_command	enum(int,int,int,int,int,int,int)
cmd	enum(int,int,int,int,int,int,int)
,	O
FILE	struct
*	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
int	O
line	int
,	O
void	O
*	O
data	*(void)
,	O
void	O
*	O
handler_data	*(void)
)	O
,	O
void	O
*	O
handler_data	*(void)
)	O
{	O
if	O
(	O
driver_max	int
==	O
MAX_OUTPUT_DRIVERS	int
-	O
1	int
)	O
abort	()->(void)
(	O
)	O
;	O
output_driver	struct(*(char),*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int)),*(void))
[	O
driver_max	int
]	O
.	O
name	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
name	*(char)
)	O
;	O
output_driver	struct(*(char),*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int)),*(void))
[	O
driver_max	int
]	O
.	O
handler	*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int))
=	O
handler	*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int))
;	O
output_driver	struct(*(char),*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int)),*(void))
[	O
driver_max	int
]	O
.	O
handler_data	*(void)
=	O
handler_data	*(void)
;	O
return	O
driver_max	int
++	O
;	O
}	O
int	O
select_output_driver	(*(char))->(int)
(	O
const	O
char	O
*	O
name	*(char)
)	O
{	O
int	O
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
driver_max	int
;	O
i	long
++	O
)	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
output_driver	struct(*(char),*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int)),*(void))
[	O
i	long
]	O
.	O
name	*(char)
,	O
name	*(char)
)	O
==	O
0	int
)	O
{	O
driver_index	int
=	O
i	long
;	O
return	O
0	int
;	O
}	O
return	O
-	O
1	int
;	O
}	O
void	O
output_init	()->(void)
(	O
)	O
{	O
output_driver	struct(*(char),*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int)),*(void))
[	O
driver_index	int
]	O
.	O
handler	*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int))
(	O
cflow_output_init	int
,	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
output_driver	struct(*(char),*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int)),*(void))
[	O
driver_index	int
]	O
.	O
handler_data	*(void)
)	O
;	O
}	O
void	O
newline	()->(void)
(	O
)	O
{	O
output_driver	struct(*(char),*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int)),*(void))
[	O
driver_index	int
]	O
.	O
handler	*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int))
(	O
cflow_output_newline	int
,	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
out_line	int
,	O
NULL	O
,	O
output_driver	struct(*(char),*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int)),*(void))
[	O
driver_index	int
]	O
.	O
handler_data	*(void)
)	O
;	O
out_line	int
++	O
;	O
}	O
static	O
void	O
begin	()->(void)
(	O
)	O
{	O
output_driver	struct(*(char),*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int)),*(void))
[	O
driver_index	int
]	O
.	O
handler	*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int))
(	O
cflow_output_begin	int
,	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
out_line	int
,	O
NULL	O
,	O
output_driver	struct(*(char),*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int)),*(void))
[	O
driver_index	int
]	O
.	O
handler_data	*(void)
)	O
;	O
}	O
static	O
void	O
end	()->(void)
(	O
)	O
{	O
output_driver	struct(*(char),*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int)),*(void))
[	O
driver_index	int
]	O
.	O
handler	*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int))
(	O
cflow_output_end	int
,	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
out_line	int
,	O
NULL	O
,	O
output_driver	struct(*(char),*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int)),*(void))
[	O
driver_index	int
]	O
.	O
handler_data	*(void)
)	O
;	O
}	O
static	O
void	O
separator	()->(void)
(	O
)	O
{	O
output_driver	struct(*(char),*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int)),*(void))
[	O
driver_index	int
]	O
.	O
handler	*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int))
(	O
cflow_output_separator	int
,	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
out_line	int
,	O
NULL	O
,	O
output_driver	struct(*(char),*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int)),*(void))
[	O
driver_index	int
]	O
.	O
handler_data	*(void)
)	O
;	O
}	O
static	O
int	O
print_symbol	(int,int,int,*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(int)
(	O
int	O
direct	int
,	O
int	O
level	int
,	O
int	O
last	int
,	O
Symbol	struct
*	O
sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
)	O
{	O
struct	O
output_symbol	struct(int,int,int,*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`))))))
output_symbol	struct(int,int,int,*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`))))))
;	O
output_symbol	struct(int,int,int,*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`))))))
.	O
direct	int
=	O
direct	int
;	O
output_symbol	struct(int,int,int,*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`))))))
.	O
level	int
=	O
level	int
;	O
output_symbol	struct(int,int,int,*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`))))))
.	O
last	int
=	O
last	int
;	O
output_symbol	struct(int,int,int,*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`))))))
.	O
sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
=	O
sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
;	O
return	O
output_driver	struct(*(char),*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int)),*(void))
[	O
driver_index	int
]	O
.	O
handler	*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int))
(	O
cflow_output_symbol	int
,	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
out_line	int
,	O
&	O
output_symbol	struct(int,int,int,*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`))))))
,	O
output_driver	struct(*(char),*((enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(void),*(void))->(int)),*(void))
[	O
driver_index	int
]	O
.	O
handler_data	*(void)
)	O
;	O
}	O
static	O
int	O
compare	(*(void),*(void))->(int)
(	O
const	O
void	O
*	O
ap	*(void)
,	O
const	O
void	O
*	O
bp	*(void)
)	O
{	O
Symbol	struct
*	O
const	O
*	O
a	*(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
=	O
ap	*(void)
;	O
Symbol	struct
*	O
const	O
*	O
b	*(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
=	O
bp	*(void)
;	O
return	O
strcmp	(*(char),*(char))->(int)
(	O
(	O
*	O
a	*(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
)	O
->	O
name	*(char)
,	O
(	O
*	O
b	*(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
)	O
->	O
name	*(char)
)	O
;	O
}	O
static	O
int	O
is_var	(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(int)
(	O
Symbol	struct
*	O
symp	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
)	O
{	O
if	O
(	O
include_symbol	(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(int)
(	O
symp	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
)	O
)	O
{	O
if	O
(	O
symp	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
->	O
type	enum(int,int,int)
==	O
SymIdentifier	int
)	O
return	O
symp	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
->	O
storage	enum(int,int,int,int,int)
==	O
ExternStorage	int
||	O
symp	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
->	O
storage	enum(int,int,int,int,int)
==	O
StaticStorage	int
;	O
else	O
return	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
int	O
symbol_is_function	(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(int)
(	O
Symbol	struct
*	O
symp	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
)	O
{	O
return	O
symp	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
->	O
type	enum(int,int,int)
==	O
SymIdentifier	int
&&	O
symp	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
->	O
arity	int
>=	O
0	int
;	O
}	O
static	O
void	O
clear_active	(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(void)
(	O
Symbol	struct
*	O
sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
)	O
{	O
sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
->	O
active	int
=	O
0	int
;	O
}	O
void	O
print_refs	(*(char),*(struct(*((*`)->(void)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))->(void)
(	O
char	O
*	O
name	*(char)
,	O
struct	O
linked_list	struct(*((*(void))->(void)),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))))
*	O
reflist	*(struct(*((*(void))->(void)),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void)))))
)	O
{	O
Ref	struct(int,*(char))
*	O
refptr	*(struct(int,*(char)))
;	O
struct	O
linked_list_entry	struct(*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct),*(void))
*	O
p	*(void)
;	O
for	O
(	O
p	*(void)
=	O
linked_list_head	O
(	O
reflist	*(struct(*((*(void))->(void)),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void)))))
)	O
;	O
p	*(void)
;	O
p	*(void)
=	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void)))
)	O
{	O
refptr	*(struct(int,*(char)))
=	O
(	O
Ref	struct(int,*(char))
*	O
)	O
p	*(void)
->	O
data	*(void)
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s   %s:%d\n"	*(char)
,	O
name	*(char)
,	O
refptr	*(struct(int,*(char)))
->	O
source	*(char)
,	O
refptr	*(struct(int,*(char)))
->	O
line	int
)	O
;	O
}	O
}	O
static	O
void	O
print_function	(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(void)
(	O
Symbol	struct
*	O
symp	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
)	O
{	O
if	O
(	O
symp	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
->	O
source	*(char)
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s * %s:%d %s\n"	*(char)
,	O
symp	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
->	O
name	*(char)
,	O
symp	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
->	O
source	*(char)
,	O
symp	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
->	O
def_line	int
,	O
symp	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
->	O
decl	*(char)
)	O
;	O
}	O
print_refs	(*(char),*(struct(*((*`)->(void)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))->(void)
(	O
symp	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
->	O
name	*(char)
,	O
symp	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
->	O
ref_line	*(struct(*((*(void))->(void)),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void)))))
)	O
;	O
}	O
static	O
void	O
print_type	(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(void)
(	O
Symbol	struct
*	O
symp	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
)	O
{	O
if	O
(	O
symp	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
->	O
source	*(char)
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s t %s:%d\n"	*(char)
,	O
symp	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
->	O
name	*(char)
,	O
symp	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
->	O
source	*(char)
,	O
symp	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
->	O
def_line	int
)	O
;	O
}	O
void	O
xref_output	()->(void)
(	O
)	O
{	O
Symbol	struct
*	O
*	O
symbols	*(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
,	O
*	O
symp	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
;	O
size_t	long
i	long
,	O
num	long
;	O
num	long
=	O
collect_symbols	(*(*(*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)))),*(()->(int)),long)->(long)
(	O
&	O
symbols	*(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
,	O
is_var	(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(int)
,	O
0	int
)	O
;	O
qsort	(*(void),long,long,*((*(void),*(void))->(int)))->(void)
(	O
symbols	*(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
,	O
num	long
,	O
sizeof	O
(	O
*	O
symbols	*(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
)	O
,	O
compare	(*(void),*(void))->(int)
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
num	long
;	O
i	long
++	O
)	O
{	O
symp	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
=	O
symbols	*(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
[	O
i	long
]	O
;	O
switch	O
(	O
symp	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
->	O
type	enum(int,int,int)
)	O
{	O
case	O
SymIdentifier	int
:	O
print_function	(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(void)
(	O
symp	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
)	O
;	O
break	O
;	O
case	O
SymToken	int
:	O
print_type	(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(void)
(	O
symp	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
)	O
;	O
break	O
;	O
case	O
SymUndefined	int
:	O
break	O
;	O
}	O
}	O
free	(*(void))->(void)
(	O
symbols	*(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
)	O
;	O
}	O
static	O
void	O
set_active	(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(void)
(	O
Symbol	struct
*	O
sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
)	O
{	O
sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
->	O
active	int
=	O
out_line	int
;	O
}	O
static	O
int	O
is_printable	(*(struct(*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`)),*(void))))->(int)
(	O
struct	O
linked_list_entry	struct(*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct),*(void))
*	O
p	*(void)
)	O
{	O
return	O
p	*(void)
!=	O
NULL	O
&&	O
include_symbol	(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(int)
(	O
(	O
Symbol	struct
*	O
)	O
p	*(void)
->	O
data	*(void)
)	O
;	O
}	O
static	O
int	O
is_last	(*(struct(*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`)),*(void))))->(int)
(	O
struct	O
linked_list_entry	struct(*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct),*(void))
*	O
p	*(void)
)	O
{	O
while	O
(	O
(	O
p	*(void)
=	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void)))
)	O
)	O
if	O
(	O
is_printable	(*(struct(*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`)),*(void))))->(int)
(	O
p	*(void)
)	O
)	O
return	O
0	int
;	O
return	O
1	int
;	O
}	O
static	O
void	O
direct_tree	(int,int,*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(void)
(	O
int	O
lev	int
,	O
int	O
last	int
,	O
Symbol	struct
*	O
sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
)	O
{	O
struct	O
linked_list_entry	struct(*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct),*(void))
*	O
p	*(void)
;	O
int	O
rc	int
;	O
if	O
(	O
sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
->	O
type	enum(int,int,int)
==	O
SymUndefined	int
||	O
(	O
max_depth	int
&&	O
lev	int
>=	O
max_depth	int
)	O
||	O
!	O
include_symbol	(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(int)
(	O
sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
)	O
)	O
return	O
;	O
rc	int
=	O
print_symbol	(int,int,int,*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(int)
(	O
1	int
,	O
lev	int
,	O
last	int
,	O
sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
)	O
;	O
newline	()->(void)
(	O
)	O
;	O
if	O
(	O
rc	int
||	O
sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
->	O
active	int
)	O
return	O
;	O
set_active	(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(void)
(	O
sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
)	O
;	O
for	O
(	O
p	*(void)
=	O
linked_list_head	O
(	O
sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
->	O
callee	*(struct(*((*(void))->(void)),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void)))))
)	O
;	O
p	*(void)
;	O
p	*(void)
=	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void)))
)	O
{	O
set_level_mark	(int,int)->(void)
(	O
lev	int
+	O
1	int
,	O
!	O
is_last	(*(struct(*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`)),*(void))))->(int)
(	O
p	*(void)
)	O
)	O
;	O
direct_tree	(int,int,*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(void)
(	O
lev	int
+	O
1	int
,	O
is_last	(*(struct(*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`)),*(void))))->(int)
(	O
p	*(void)
)	O
,	O
(	O
Symbol	struct
*	O
)	O
p	*(void)
->	O
data	*(void)
)	O
;	O
}	O
clear_active	(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(void)
(	O
sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
)	O
;	O
}	O
static	O
void	O
inverted_tree	(int,int,*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(void)
(	O
int	O
lev	int
,	O
int	O
last	int
,	O
Symbol	struct
*	O
sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
)	O
{	O
struct	O
linked_list_entry	struct(*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct),*(void))
*	O
p	*(void)
;	O
int	O
rc	int
;	O
if	O
(	O
sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
->	O
type	enum(int,int,int)
==	O
SymUndefined	int
||	O
(	O
max_depth	int
&&	O
lev	int
>=	O
max_depth	int
)	O
||	O
!	O
include_symbol	(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(int)
(	O
sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
)	O
)	O
return	O
;	O
rc	int
=	O
print_symbol	(int,int,int,*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(int)
(	O
0	int
,	O
lev	int
,	O
last	int
,	O
sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
)	O
;	O
newline	()->(void)
(	O
)	O
;	O
if	O
(	O
rc	int
||	O
sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
->	O
active	int
)	O
return	O
;	O
set_active	(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(void)
(	O
sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
)	O
;	O
for	O
(	O
p	*(void)
=	O
linked_list_head	O
(	O
sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
->	O
caller	*(struct(*((*(void))->(void)),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void)))))
)	O
;	O
p	*(void)
;	O
p	*(void)
=	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void)))
)	O
{	O
set_level_mark	(int,int)->(void)
(	O
lev	int
+	O
1	int
,	O
!	O
is_last	(*(struct(*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`)),*(void))))->(int)
(	O
p	*(void)
)	O
)	O
;	O
inverted_tree	(int,int,*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(void)
(	O
lev	int
+	O
1	int
,	O
is_last	(*(struct(*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`)),*(void))))->(int)
(	O
p	*(void)
)	O
,	O
(	O
Symbol	struct
*	O
)	O
p	*(void)
->	O
data	*(void)
)	O
;	O
}	O
clear_active	(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(void)
(	O
sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
)	O
;	O
}	O
static	O
void	O
tree_output	()->(void)
(	O
)	O
{	O
Symbol	struct
*	O
*	O
symbols	*(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
,	O
*	O
main_sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
;	O
size_t	long
i	long
,	O
num	long
;	O
cflow_depmap_t	*(struct)
depmap	*(struct)
;	O
num	long
=	O
collect_functions	(*(*(*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)))))->(long)
(	O
&	O
symbols	*(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
num	long
;	O
i	long
++	O
)	O
symbols	*(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
[	O
i	long
]	O
->	O
ord	long
=	O
i	long
;	O
depmap	*(struct)
=	O
depmap_alloc	(long)->(*(struct))
(	O
num	long
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
num	long
;	O
i	long
++	O
)	O
{	O
if	O
(	O
symbols	*(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
[	O
i	long
]	O
->	O
callee	*(struct(*((*(void))->(void)),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void)))))
)	O
{	O
struct	O
linked_list_entry	struct(*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct),*(void))
*	O
p	*(void)
;	O
for	O
(	O
p	*(void)
=	O
linked_list_head	O
(	O
symbols	*(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
[	O
i	long
]	O
->	O
callee	*(struct(*((*(void))->(void)),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void)))))
)	O
;	O
p	*(void)
;	O
p	*(void)
=	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void)))
)	O
{	O
Symbol	struct
*	O
s	long
=	O
(	O
Symbol	struct
*	O
)	O
p	*(void)
->	O
data	*(void)
;	O
if	O
(	O
symbol_is_function	(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(int)
(	O
s	long
)	O
)	O
depmap_set	(*(struct),long,long)->(void)
(	O
depmap	*(struct)
,	O
i	long
,	O
(	O
(	O
Symbol	struct
*	O
)	O
p	*(void)
->	O
data	*(void)
)	O
->	O
ord	long
)	O
;	O
}	O
}	O
}	O
depmap_tc	(*(struct))->(void)
(	O
depmap	*(struct)
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
num	long
;	O
i	long
++	O
)	O
if	O
(	O
depmap_isset	(*(struct),long,long)->(int)
(	O
depmap	*(struct)
,	O
i	long
,	O
i	long
)	O
)	O
symbols	*(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
[	O
i	long
]	O
->	O
recursive	int
=	O
1	int
;	O
free	(*(void))->(void)
(	O
depmap	*(struct)
)	O
;	O
free	(*(void))->(void)
(	O
symbols	*(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
)	O
;	O
num	long
=	O
collect_symbols	(*(*(*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)))),*(()->(int)),long)->(long)
(	O
&	O
symbols	*(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
,	O
is_var	(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(int)
,	O
0	int
)	O
;	O
qsort	(*(void),long,long,*((*(void),*(void))->(int)))->(void)
(	O
symbols	*(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
,	O
num	long
,	O
sizeof	O
(	O
*	O
symbols	*(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
)	O
,	O
compare	(*(void),*(void))->(int)
)	O
;	O
begin	()->(void)
(	O
)	O
;	O
if	O
(	O
reverse_tree	int
)	O
{	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
num	long
;	O
i	long
++	O
)	O
{	O
inverted_tree	(int,int,*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(void)
(	O
0	int
,	O
0	int
,	O
symbols	*(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
[	O
i	long
]	O
)	O
;	O
separator	()->(void)
(	O
)	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
(	O
main_sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
=	O
start_name	*(char)
?	O
lookup	(*(char))->(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
(	O
start_name	*(char)
)	O
:	O
NULL	O
)	O
!=	O
NULL	O
)	O
{	O
direct_tree	(int,int,*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(void)
(	O
0	int
,	O
0	int
,	O
main_sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
)	O
;	O
separator	()->(void)
(	O
)	O
;	O
}	O
else	O
if	O
(	O
!	O
all_functions	int
)	O
{	O
all_functions	int
=	O
1	int
;	O
}	O
if	O
(	O
all_functions	int
)	O
{	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
num	long
;	O
i	long
++	O
)	O
{	O
if	O
(	O
main_sym	*(struct(*(struct),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int,int),*(char),enum(int,int,int,int),*(struct`),int,int,int,*(char),int,*(struct`),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct`),*(struct`))),int,int,int,*(char),int,*(struct(*((*`)->(void)),*(struct`),*(struct`))),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(struct(*((*`)->(void)),*(struct`),*(struct`)))))
!=	O
symbols	*(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
[	O
i	long
]	O
&&	O
symbols	*(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
[	O
i	long
]	O
->	O
source	*(char)
&&	O
(	O
all_functions	int
>	O
1	int
||	O
symbols	*(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
[	O
i	long
]	O
->	O
caller	*(struct(*((*(void))->(void)),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void)))))
==	O
NULL	O
)	O
)	O
{	O
direct_tree	(int,int,*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))->(void)
(	O
0	int
,	O
0	int
,	O
symbols	*(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
[	O
i	long
]	O
)	O
;	O
separator	()->(void)
(	O
)	O
;	O
}	O
}	O
}	O
}	O
end	()->(void)
(	O
)	O
;	O
free	(*(void))->(void)
(	O
symbols	*(*(struct(*(struct),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),*(struct(*`,*`,*`,*`)),enum(int,int,int),*(char),enum(int,int,int,int),*(struct(*`,*`,*`,enum(int,int,int),*`,enum(int,int,int,int),*`,int,int,int,*`,int,*`,int,*`,enum(int,int,int,int,int),int,int,long,*`,*`)),int,int,int,*(char),int,*(struct(*`,*`,*`)),int,*(char),enum(int,int,int,int,int),int,int,long,*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
)	O
;	O
}	O
void	O
output	()->(void)
(	O
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
outname	*(char)
,	O
"-"	*(char)
)	O
==	O
0	int
)	O
{	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
}	O
else	O
{	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
outname	*(char)
,	O
"w"	*(char)
)	O
;	O
if	O
(	O
!	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
error	(int,int,*(char))->(void)
(	O
EX_FATAL	int
,	O
errno	O
,	O
_	O
(	O
"cannot open file `%s'"	*(char)
)	O
,	O
outname	*(char)
)	O
;	O
}	O
set_level_mark	(int,int)->(void)
(	O
0	int
,	O
0	int
)	O
;	O
if	O
(	O
print_option	int
&	O
PRINT_XREF	int
)	O
{	O
xref_output	()->(void)
(	O
)	O
;	O
}	O
if	O
(	O
print_option	int
&	O
PRINT_TREE	int
)	O
{	O
tree_output	()->(void)
(	O
)	O
;	O
}	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
