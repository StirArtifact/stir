int	O
mu_nntp_connect	(*(struct))->(int)
(	O
mu_nntp_t	*(struct)
nntp	*(*(struct))
)	O
{	O
int	O
status	*(char)
;	O
if	O
(	O
nntp	*(*(struct))
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
nntp	*(*(struct))
->	O
carrier	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
switch	O
(	O
nntp	*(*(struct))
->	O
state	*(int)
)	O
{	O
default	O
:	O
case	O
MU_NNTP_NO_STATE	int
:	O
status	*(char)
=	O
mu_nntp_disconnect	(*(struct))->(int)
(	O
nntp	*(*(struct))
)	O
;	O
MU_NNTP_CHECK_EAGAIN	O
(	O
nntp	*(*(struct))
,	O
status	*(char)
)	O
;	O
nntp	*(*(struct))
->	O
state	*(int)
=	O
MU_NNTP_CONNECT	int
;	O
case	O
MU_NNTP_CONNECT	int
:	O
if	O
(	O
!	O
mu_stream_is_open	(*(struct))->(int)
(	O
nntp	*(*(struct))
->	O
carrier	*(struct)
)	O
)	O
{	O
status	*(char)
=	O
mu_stream_open	(*(struct))->(int)
(	O
nntp	*(*(struct))
->	O
carrier	*(struct)
)	O
;	O
MU_NNTP_CHECK_EAGAIN	O
(	O
nntp	*(*(struct))
,	O
status	*(char)
)	O
;	O
}	O
nntp	*(*(struct))
->	O
acknowledge	int
=	O
0	int
;	O
nntp	*(*(struct))
->	O
state	*(int)
=	O
MU_NNTP_GREETINGS	int
;	O
case	O
MU_NNTP_GREETINGS	int
:	O
{	O
size_t	long
len	long
=	O
0	int
;	O
int	O
code	int
;	O
status	*(char)
=	O
mu_nntp_response	(*(struct),*(char),long,*(long))->(int)
(	O
nntp	*(*(struct))
,	O
NULL	O
,	O
0	int
,	O
&	O
len	long
)	O
;	O
MU_NNTP_CHECK_EAGAIN	O
(	O
nntp	*(*(struct))
,	O
status	*(char)
)	O
;	O
mu_nntp_debug_ack	(*(struct(struct(*(char),*(char),*(char),long),struct(*(char),*(char),*(char),long),int,struct(*(char),int,long,long,long),int,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(struct))))->(int)
(	O
nntp	*(*(struct))
)	O
;	O
code	int
=	O
mu_nntp_response_code	(*(struct))->(int)
(	O
nntp	*(*(struct))
)	O
;	O
if	O
(	O
code	int
!=	O
MU_NNTP_RESP_CODE_POSTING_ALLOWED	int
&&	O
code	int
!=	O
MU_NNTP_RESP_CODE_POSTING_PROHIBITED	int
)	O
{	O
mu_stream_close	(*(struct))->(int)
(	O
nntp	*(*(struct))
->	O
carrier	*(struct)
)	O
;	O
nntp	*(*(struct))
->	O
state	*(int)
=	O
MU_NNTP_NO_STATE	int
;	O
return	O
EACCES	int
;	O
}	O
nntp	*(*(struct))
->	O
state	*(int)
=	O
MU_NNTP_NO_STATE	int
;	O
}	O
}	O
return	O
status	*(char)
;	O
}	O
