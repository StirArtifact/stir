enum	O
{	O
GETOPT_HELP_CHAR	int
=	O
(	O
CHAR_MIN	O
-	O
2	int
)	O
,	O
GETOPT_VERSION_CHAR	int
=	O
(	O
CHAR_MIN	O
-	O
3	int
)	O
,	O
GETOPT_JOIN_HELP_CHAR	int
=	O
(	O
CHAR_MIN	O
-	O
4	int
)	O
,	O
GETOPT_CUT_HELP_CHAR	int
=	O
(	O
CHAR_MIN	O
-	O
5	int
)	O
,	O
}	O
;	O
static	O
struct	O
option	struct(*(char),int,*(int),int)
const	O
long_options	array(struct(*(char),int,*(int),int))
[	O
]	O
=	O
{	O
{	O
"hierarchy-key-fields"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'a'	O
}	O
,	O
{	O
"output-record-delimiter"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'b'	O
}	O
,	O
{	O
"input-record-delimiter"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'B'	O
}	O
,	O
{	O
"output-field-delimiter"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'd'	O
}	O
,	O
{	O
"no-output-field-delimiter"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
OPT_NO_OUTPUT_DELIMITER	int
}	O
,	O
{	O
"input-field-delimiter"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'D'	O
}	O
,	O
{	O
"no-input-field-delimiter"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
OPT_NO_INPUT_DELIMITER	int
}	O
,	O
{	O
"input-field-delimiter-repeat"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
OPT_INPUT_DELIMITER_REPEAT	int
}	O
,	O
{	O
"emulate"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'e'	O
}	O
,	O
{	O
"flag"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
'f'	O
}	O
,	O
{	O
"flatten-hierarchy"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'F'	O
}	O
,	O
{	O
"hash-size"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'h'	O
}	O
,	O
{	O
"hash-movement"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'H'	O
}	O
,	O
{	O
"key-fields"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'k'	O
}	O
,	O
{	O
"output-constant"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'K'	O
}	O
,	O
{	O
"hierarchy-leaf-only"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
'l'	O
}	O
,	O
{	O
"input-record-length"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'L'	O
}	O
,	O
{	O
"data-key-fields"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'm'	O
}	O
,	O
{	O
"data-is-reference"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
'M'	O
}	O
,	O
{	O
"count"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
'n'	O
}	O
,	O
{	O
"match-optional"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
'p'	O
}	O
,	O
{	O
"exclude-match"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
'P'	O
}	O
,	O
{	O
"output-fields"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'o'	O
}	O
,	O
{	O
"field-order"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'O'	O
}	O
,	O
{	O
"reference-file"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'r'	O
}	O
,	O
{	O
"check-all-reference"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
'R'	O
}	O
,	O
{	O
"no-check-all-reference"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
OPT_NO_CHECK_ALL_REFERENCE	int
}	O
,	O
{	O
"sum-fields"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
's'	O
}	O
,	O
{	O
"output-file"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
't'	O
}	O
,	O
{	O
"unique"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
'u'	O
}	O
,	O
{	O
"up-hierarchy"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
'U'	O
}	O
,	O
{	O
"verbose"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
'v'	O
}	O
,	O
{	O
"write-output"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
'w'	O
}	O
,	O
{	O
"extension"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'x'	O
}	O
,	O
{	O
"extension-init-file"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'X'	O
}	O
,	O
{	O
"counter-size"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'z'	O
}	O
,	O
{	O
"statistics"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
OPT_STATISTICS	int
}	O
,	O
{	O
"no-statistics"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
OPT_NO_STATISTICS	int
}	O
,	O
{	O
GETOPT_HELP_OPTION_DECL	O
}	O
,	O
{	O
GETOPT_VERSION_OPTION_DECL	O
}	O
,	O
{	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
}	O
,	O
}	O
;	O
static	O
struct	O
option	struct(*(char),int,*(int),int)
const	O
join_long_options	array(struct(*(char),int,*(int),int))
[	O
]	O
=	O
{	O
{	O
"file-1-key"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'1'	O
}	O
,	O
{	O
"file-2-key"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'2'	O
}	O
,	O
{	O
"print-unmatched-from"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'a'	O
}	O
,	O
{	O
"empty-replacement"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'e'	O
}	O
,	O
{	O
"ignore-case"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
'i'	O
}	O
,	O
{	O
"join-key"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'j'	O
}	O
,	O
{	O
"output-format"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'o'	O
}	O
,	O
{	O
"delimiter"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
't'	O
}	O
,	O
{	O
"print-only-unmatched-from"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'v'	O
}	O
,	O
{	O
GETOPT_JOIN_HELP_OPTION_DECL	O
}	O
,	O
{	O
GETOPT_VERSION_OPTION_DECL	O
}	O
,	O
{	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
}	O
,	O
}	O
;	O
static	O
struct	O
option	struct(*(char),int,*(int),int)
const	O
cut_long_options	array(struct(*(char),int,*(int),int))
[	O
]	O
=	O
{	O
{	O
"bytes"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'b'	O
}	O
,	O
{	O
"characters"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'c'	O
}	O
,	O
{	O
"delimiter"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'd'	O
}	O
,	O
{	O
"fields"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'f'	O
}	O
,	O
{	O
"only-delimited"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
's'	O
}	O
,	O
{	O
"output-delimiter"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
CUT_OPT_OUTPUT_DELIMITER	int
}	O
,	O
{	O
GETOPT_CUT_HELP_OPTION_DECL	O
}	O
,	O
{	O
GETOPT_VERSION_OPTION_DECL	O
}	O
,	O
{	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
}	O
,	O
}	O
;	O
void	O
expand_delimited_ranges	(*(*(struct(long,long,int,*(char)))),*(int))->(void)
(	O
field_range	struct(long,long,int,*(char))
*	O
*	O
,	O
int	O
*	O
)	O
;	O
int	O
initialize_variables	(int,*(*(char)))->(int)
(	O
argc	int
,	O
argv	*(*(char))
)	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	*(*(char))
;	O
{	O
gi_reference_file_count	int
=	O
0	int
;	O
gi_data_is_reference	int
=	O
0	int
;	O
gi_output_counter_size	int
=	O
0	int
;	O
gi_counter_ind	int
=	O
0	int
;	O
gi_flag_ind	int
=	O
0	int
;	O
gi_verbose_ind	int
=	O
0	int
;	O
gi_statistics_ind	int
=	O
1	int
;	O
gi_checkallref_ind	int
=	O
1	int
;	O
gi_hashmovement_ind	enum(int,int,int,int,int)
=	O
hm_binary_long	int
;	O
gi_no_output_field_delimiter	int
=	O
0	int
;	O
gi_data_write_ind	int
=	O
0	int
;	O
gi_data_suppress_empty_ind	int
=	O
0	int
;	O
gi_data_optional_ind	int
=	O
0	int
;	O
gi_data_exclude_match_ind	int
=	O
0	int
;	O
gi_data_out_end_start	int
=	O
0	int
;	O
gi_data_out_range_count	int
=	O
0	int
;	O
gi_data_sum_end_start	int
=	O
0	int
;	O
gi_data_sum_range_count	int
=	O
0	int
;	O
gi_allocated_reference_info	int
=	O
0	int
;	O
gi_data_records_read	int
=	O
0	int
;	O
gi_data_records_dropped_filter	int
=	O
0	int
;	O
gi_data_records_matched	int
=	O
0	int
;	O
gi_output_records_written	int
=	O
0	int
;	O
gi_file_records_read	int
=	O
0	int
;	O
gi_file_records_dropped_filter	int
=	O
0	int
;	O
gi_file_records_matched	int
=	O
0	int
;	O
gi_file_output_records_written	int
=	O
0	int
;	O
gi_data_input_buffer_size	long
=	O
0	int
;	O
gi_data_input_buffer_pos	long
=	O
0	int
;	O
gi_data_output_buffer_size	long
=	O
0	int
;	O
gi_data_output_buffer_pos	long
=	O
0	int
;	O
input_filename	*(char)
=	O
NULL	O
;	O
output_filename	*(char)
=	O
NULL	O
;	O
gs_data_output_buffer	*(char)
=	O
NULL	O
;	O
gs_data_input_buffer	*(char)
=	O
NULL	O
;	O
gs_output_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gs_output_record_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
"\n"	*(char)
)	O
;	O
gs_data_input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gi_data_input_field_delimiter_repeat	int
=	O
0	int
;	O
gs_data_input_record_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
"\n"	*(char)
)	O
;	O
gs_data_constant_string	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gs_data_missing_string	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gs_data_empty_string	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gs_data_output_file_name	*(char)
=	O
NULL	O
;	O
gra_data_output_field_order	*(struct(char,int,char,int))
=	O
NULL	O
;	O
gi_data_output_field_order_count	int
=	O
0	int
;	O
gs_ext_init_file	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gs_ext_begin_command	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gs_ext_end_command	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gs_data_ext_file_open_command	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gs_data_ext_record_read_command	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gs_data_ext_file_close_command	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gs_data_ext_start_writing_command	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gs_data_ext_record_write_command	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gs_data_ext_finished_writing_command	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gs_data_ext_filter_command	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gs_data_ext_match_command	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gi_allocated_reference_info	int
=	O
16	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
=	O
malloc	(long)->(*(void))
(	O
gi_allocated_reference_info	int
*	O
(	O
sizeof	O
*	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
)	O
)	O
;	O
program_name	*(char)
=	O
argv	*(*(char))
[	O
0	int
]	O
;	O
field_type	enum(int,int,int)
=	O
undefined_mode	int
;	O
input_delimiter	int
=	O
'\0'	O
;	O
return	O
EXIT_SUCCESS	int
;	O
}	O
int	O
calculate_ranges	(*(char),*(*(struct(long,long,int,*(char)))),*(int),*(int))->(int)
(	O
string	*(char)
,	O
ranges	*(*(struct(long,long,int,*(char))))
,	O
end_range_start	*(int)
,	O
range_count	*(int)
)	O
char	O
*	O
string	*(char)
;	O
field_range	struct(long,long,int,*(char))
*	O
*	O
ranges	*(*(struct(long,long,int,*(char))))
;	O
int	O
*	O
end_range_start	*(int)
;	O
int	O
*	O
range_count	*(int)
;	O
{	O
int	O
field_found	int
;	O
unsigned	O
int	O
start_value	int
;	O
unsigned	O
int	O
end_value	int
;	O
unsigned	O
int	O
precision	int
;	O
unsigned	O
int	O
n_ranges	int
;	O
unsigned	O
int	O
n_ranges_allocated	int
;	O
char	O
*	O
string_copy	*(char)
;	O
char	O
*	O
current_range	*(char)
;	O
char	O
*	O
rest_of_string	*(char)
;	O
char	O
*	O
current_comment	*(char)
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
string	*(char)
)	O
==	O
0	int
)	O
{	O
*	O
end_range_start	*(int)
=	O
0	int
;	O
*	O
range_count	*(int)
=	O
0	int
;	O
*	O
ranges	*(*(struct(long,long,int,*(char))))
=	O
NULL	O
;	O
return	O
0	int
;	O
}	O
n_ranges	int
=	O
0	int
;	O
n_ranges_allocated	int
=	O
16	int
;	O
*	O
ranges	*(*(struct(long,long,int,*(char))))
=	O
(	O
field_range	struct(long,long,int,*(char))
*	O
)	O
malloc	(long)->(*(void))
(	O
n_ranges_allocated	int
*	O
sizeof	O
(	O
*	O
*	O
ranges	*(*(struct(long,long,int,*(char))))
)	O
)	O
;	O
string_copy	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
string	*(char)
)	O
;	O
if	O
(	O
string_copy	*(char)
==	O
NULL	O
)	O
return	O
EXIT_FAILURE	int
;	O
rest_of_string	*(char)
=	O
string_copy	*(char)
;	O
while	O
(	O
rest_of_string	*(char)
!=	O
NULL	O
)	O
{	O
current_range	*(char)
=	O
strsep	(*(*(char)),*(char))->(*(char))
(	O
&	O
rest_of_string	*(char)
,	O
","	*(char)
)	O
;	O
start_value	int
=	O
0	int
;	O
end_value	int
=	O
0	int
;	O
precision	int
=	O
0	int
;	O
current_comment	*(char)
=	O
NULL	O
;	O
if	O
(	O
*	O
current_range	*(char)
!=	O
'-'	O
)	O
{	O
start_value	int
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
current_range	*(char)
,	O
&	O
current_range	*(char)
,	O
0	int
)	O
;	O
}	O
if	O
(	O
*	O
current_range	*(char)
==	O
'-'	O
)	O
{	O
current_range	*(char)
++	O
;	O
end_value	int
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
current_range	*(char)
,	O
&	O
current_range	*(char)
,	O
0	int
)	O
;	O
}	O
else	O
end_value	int
=	O
start_value	int
;	O
if	O
(	O
*	O
current_range	*(char)
==	O
'.'	O
)	O
{	O
current_range	*(char)
++	O
;	O
precision	int
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
current_range	*(char)
,	O
&	O
current_range	*(char)
,	O
0	int
)	O
;	O
}	O
current_comment	*(char)
=	O
current_range	*(char)
;	O
if	O
(	O
*	O
current_comment	*(char)
==	O
'\0'	O
)	O
current_comment	*(char)
=	O
NULL	O
;	O
if	O
(	O
start_value	int
==	O
0	int
&&	O
end_value	int
==	O
0	int
)	O
FATAL_ERROR1	O
(	O
_	O
(	O
"invalid field specification: %s"	*(char)
)	O
,	O
string	*(char)
)	O
;	O
if	O
(	O
start_value	int
==	O
0	int
)	O
start_value	int
=	O
1	int
;	O
if	O
(	O
end_value	int
==	O
0	int
)	O
{	O
*	O
end_range_start	*(int)
=	O
start_value	int
;	O
}	O
else	O
{	O
if	O
(	O
start_value	int
>	O
end_value	int
)	O
FATAL_ERROR2	O
(	O
_	O
(	O
"invalid field range: start %d, end %d"	*(char)
)	O
,	O
start_value	int
,	O
end_value	int
)	O
;	O
ADD_RANGE_PAIR	O
(	O
(	O
*	O
ranges	*(*(struct(long,long,int,*(char))))
)	O
,	O
start_value	int
,	O
end_value	int
,	O
precision	int
,	O
current_comment	*(char)
)	O
;	O
}	O
}	O
free	(*(void))->(void)
(	O
string_copy	*(char)
)	O
;	O
*	O
range_count	*(int)
=	O
n_ranges	int
;	O
return	O
field_found	int
;	O
}	O
int	O
write_user_request	()->(int)
(	O
)	O
{	O
int	O
i	int
;	O
int	O
j	int
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"General options:\n"	*(char)
)	O
)	O
;	O
if	O
(	O
gs_output_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
!=	O
NULL	O
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  String separating fields in ouput: [%.*s]\n"	*(char)
)	O
,	O
(	O
int	O
)	O
(	O
gs_output_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
->	O
length	long
)	O
,	O
gs_output_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
->	O
string	*(char)
)	O
;	O
if	O
(	O
gi_output_counter_size	int
!=	O
0	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  Length of any counter or sum values in reference-based output: %d\n"	*(char)
)	O
,	O
gi_output_counter_size	int
)	O
;	O
if	O
(	O
gi_counter_ind	int
!=	O
0	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  Writing a count of data file matches in reference-based output.\n"	*(char)
)	O
)	O
;	O
if	O
(	O
gi_flag_ind	int
!=	O
0	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  Writing a flag for data file matches in reference-based output.\n"	*(char)
)	O
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"Data files to process: "	*(char)
)	O
)	O
;	O
if	O
(	O
filecount	int
==	O
0	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"<stdin>"	*(char)
)	O
;	O
else	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
filecount	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
i	int
>	O
0	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
", "	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s"	*(char)
,	O
filenames	*(*(char))
[	O
i	int
]	O
)	O
;	O
}	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
if	O
(	O
gi_data_write_ind	int
!=	O
0	int
)	O
{	O
if	O
(	O
gs_data_output_file_name	*(char)
!=	O
NULL	O
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  Writing data-file-based output to file %s\n"	*(char)
)	O
,	O
gs_data_output_file_name	*(char)
)	O
;	O
else	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  Writing data-file-based output to stdout\n"	*(char)
)	O
)	O
;	O
if	O
(	O
gi_data_out_range_count	int
!=	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  Data fields written to the data-based output file:\n  Start   End Precision Instructions\n  ----- ----- --------- ------------\n"	*(char)
)	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
gi_data_out_range_count	int
;	O
i	int
++	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"  %5ld %5ld %9d %s\n"	*(char)
,	O
gra_data_out_ranges	*(struct(long,long,int,*(char)))
[	O
i	int
]	O
.	O
lower_bound	long
,	O
gra_data_out_ranges	*(struct(long,long,int,*(char)))
[	O
i	int
]	O
.	O
upper_bound	long
,	O
gra_data_out_ranges	*(struct(long,long,int,*(char)))
[	O
i	int
]	O
.	O
precision	int
,	O
gra_data_out_ranges	*(struct(long,long,int,*(char)))
[	O
i	int
]	O
.	O
format	*(char)
)	O
;	O
}	O
if	O
(	O
gi_data_out_end_start	int
!=	O
0	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  %5d   End %9d %s\n"	*(char)
)	O
,	O
gi_data_out_end_start	int
,	O
0	int
,	O
(	O
char	O
*	O
)	O
NULL	O
)	O
;	O
}	O
}	O
if	O
(	O
gi_data_sum_range_count	int
!=	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  Data fields to be summed in reference-based output:\n  Start   End Precision Instructions\n  ----- ----- --------- ------------\n"	*(char)
)	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
gi_data_sum_range_count	int
;	O
i	int
++	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"  %5ld %5ld %9d %s\n"	*(char)
,	O
gra_data_sum_ranges	*(struct(long,long,int,*(char)))
[	O
i	int
]	O
.	O
lower_bound	long
,	O
gra_data_sum_ranges	*(struct(long,long,int,*(char)))
[	O
i	int
]	O
.	O
upper_bound	long
,	O
gra_data_sum_ranges	*(struct(long,long,int,*(char)))
[	O
i	int
]	O
.	O
precision	int
,	O
gra_data_sum_ranges	*(struct(long,long,int,*(char)))
[	O
i	int
]	O
.	O
format	*(char)
)	O
;	O
}	O
if	O
(	O
gi_data_sum_end_start	int
!=	O
0	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  %5d   End %9d %s\n"	*(char)
)	O
,	O
gi_data_sum_end_start	int
,	O
0	int
,	O
(	O
char	O
*	O
)	O
NULL	O
)	O
;	O
}	O
if	O
(	O
gs_data_constant_string	*(struct(long,enum(int,int,int),*(char)))
!=	O
NULL	O
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  Constant value accompanying data fields in ouput: [%.*s]\n"	*(char)
)	O
,	O
(	O
int	O
)	O
(	O
gs_data_constant_string	*(struct(long,enum(int,int,int),*(char)))
->	O
length	long
)	O
,	O
gs_data_constant_string	*(struct(long,enum(int,int,int),*(char)))
->	O
string	*(char)
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
gi_reference_file_count	int
;	O
i	int
++	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"Reference file number %d: %s\n"	*(char)
)	O
,	O
i	int
+	O
1	int
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
file_name	*(char)
)	O
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
out_range_count	int
!=	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  Reference fields to be written in all output:\n  Start   End Precision Instructions\n  ----- ----- --------- ------------\n"	*(char)
)	O
)	O
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
out_range_count	int
;	O
j	int
++	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"  %5ld %5ld %9d %s\n"	*(char)
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
out_ranges	*(struct(long,long,int,*(char)))
[	O
j	int
]	O
.	O
lower_bound	long
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
out_ranges	*(struct(long,long,int,*(char)))
[	O
j	int
]	O
.	O
upper_bound	long
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
out_ranges	*(struct(long,long,int,*(char)))
[	O
j	int
]	O
.	O
precision	int
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
out_ranges	*(struct(long,long,int,*(char)))
[	O
j	int
]	O
.	O
format	*(char)
)	O
;	O
}	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
out_end_start	int
!=	O
0	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  %5d   End %9d %s\n"	*(char)
)	O
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
out_end_start	int
,	O
0	int
,	O
(	O
char	O
*	O
)	O
NULL	O
)	O
;	O
}	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
key_range_count	int
!=	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  Reference fields to match data file keys:\n  Start   End Precision Instructions\n  ----- ----- --------- ------------\n"	*(char)
)	O
)	O
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
key_range_count	int
;	O
j	int
++	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"  %5ld %5ld %9d %s\n"	*(char)
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
key_ranges	*(struct(long,long,int,*(char)))
[	O
j	int
]	O
.	O
lower_bound	long
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
key_ranges	*(struct(long,long,int,*(char)))
[	O
j	int
]	O
.	O
upper_bound	long
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
key_ranges	*(struct(long,long,int,*(char)))
[	O
j	int
]	O
.	O
precision	int
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
key_ranges	*(struct(long,long,int,*(char)))
[	O
j	int
]	O
.	O
format	*(char)
)	O
;	O
}	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
key_end_start	int
!=	O
0	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  %5d   End %9d %s\n"	*(char)
)	O
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
key_end_start	int
,	O
0	int
,	O
(	O
char	O
*	O
)	O
NULL	O
)	O
;	O
}	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
data_key_range_count	int
!=	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  Data fields to match keys in this reference file:\n  Start   End Precision Instructions\n  ----- ----- --------- ------------\n"	*(char)
)	O
)	O
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
data_key_range_count	int
;	O
j	int
++	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"  %5ld %5ld %9d %s\n"	*(char)
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
data_key_ranges	*(struct(long,long,int,*(char)))
[	O
j	int
]	O
.	O
lower_bound	long
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
data_key_ranges	*(struct(long,long,int,*(char)))
[	O
j	int
]	O
.	O
upper_bound	long
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
data_key_ranges	*(struct(long,long,int,*(char)))
[	O
j	int
]	O
.	O
precision	int
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
data_key_ranges	*(struct(long,long,int,*(char)))
[	O
j	int
]	O
.	O
format	*(char)
)	O
;	O
}	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
data_key_end_start	int
!=	O
0	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  %5d   End %9d %s\n"	*(char)
)	O
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
data_key_end_start	int
,	O
0	int
,	O
(	O
char	O
*	O
)	O
NULL	O
)	O
;	O
}	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
hrchy_key_range_count	int
!=	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  Traversing hierarchy using these keys to connect to next record in this file:\n"	*(char)
)	O
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  Start   End Precision Instructions\n  ----- ----- --------- ------------\n"	*(char)
)	O
)	O
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
hrchy_key_range_count	int
;	O
j	int
++	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"  %5ld %5ld %9d %s\n"	*(char)
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
hrchy_key_ranges	*(struct(long,long,int,*(char)))
[	O
j	int
]	O
.	O
lower_bound	long
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
hrchy_key_ranges	*(struct(long,long,int,*(char)))
[	O
j	int
]	O
.	O
upper_bound	long
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
hrchy_key_ranges	*(struct(long,long,int,*(char)))
[	O
j	int
]	O
.	O
precision	int
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
hrchy_key_ranges	*(struct(long,long,int,*(char)))
[	O
j	int
]	O
.	O
format	*(char)
)	O
;	O
}	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
hrchy_key_end_start	int
!=	O
0	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  %5d   End %9d %s\n"	*(char)
)	O
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
hrchy_key_end_start	int
,	O
0	int
,	O
(	O
char	O
*	O
)	O
NULL	O
)	O
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
hrchy_flatten_levels	int
!=	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  Reference fields from this file will be repeated %d times to report each level"	*(char)
)	O
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
hrchy_flatten_levels	int
)	O
;	O
}	O
else	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
hrchy_leaf_only	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  Terminal nodes encountered in the hierarchy will be treated as matching reference records.\n"	*(char)
)	O
)	O
;	O
else	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  Each node encountered in the hierarchy will be treated as a matching reference record.\n"	*(char)
)	O
)	O
;	O
}	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
unique_ind	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  Keeping only one copy of each key value.\n"	*(char)
)	O
)	O
;	O
else	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  Keeping all copies of each key value.\n"	*(char)
)	O
)	O
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
optional_ind	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  Matches to this file optional for data output.\n"	*(char)
)	O
)	O
;	O
else	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  Matches to this file required for data output.\n"	*(char)
)	O
)	O
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
write_ind	int
)	O
{	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
output_file_name	*(char)
!=	O
NULL	O
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  Writing output to %s\n"	*(char)
)	O
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
output_file_name	*(char)
)	O
;	O
else	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  Writing output to stdout\n"	*(char)
)	O
)	O
;	O
}	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
constant_string	*(struct(long,enum(int,int,int),*(char)))
!=	O
NULL	O
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"  Constant value to accompany all reference output: [%.*s]\n"	*(char)
)	O
,	O
(	O
int	O
)	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
constant_string	*(struct(long,enum(int,int,int),*(char)))
->	O
length	long
)	O
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
constant_string	*(struct(long,enum(int,int,int),*(char)))
->	O
string	*(char)
)	O
;	O
}	O
return	O
EXIT_SUCCESS	int
;	O
}	O
int	O
validate_options	()->(int)
(	O
)	O
{	O
int	O
i	int
;	O
int	O
j	int
;	O
if	O
(	O
gs_data_input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
!=	O
NULL	O
)	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
gi_reference_file_count	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
&&	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
no_input_field_delimiter	int
==	O
0	int
)	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
i	int
]	O
.	O
input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
gs_data_input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
;	O
}	O
if	O
(	O
gs_output_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
&&	O
gi_no_output_field_delimiter	int
==	O
0	int
)	O
gs_output_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
gs_data_input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
;	O
}	O
if	O
(	O
gs_data_input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
!=	O
NULL	O
)	O
{	O
expand_delimited_ranges	(*(*(struct(long,long,int,*(char)))),*(int))->(void)
(	O
&	O
gra_data_out_ranges	*(struct(long,long,int,*(char)))
,	O
&	O
gi_data_out_range_count	int
)	O
;	O
expand_delimited_ranges	(*(*(struct(long,long,int,*(char)))),*(int))->(void)
(	O
&	O
gra_data_sum_ranges	*(struct(long,long,int,*(char)))
,	O
&	O
gi_data_sum_range_count	int
)	O
;	O
}	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
gi_reference_file_count	int
;	O
j	int
++	O
)	O
{	O
if	O
(	O
gs_data_input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
!=	O
NULL	O
)	O
expand_delimited_ranges	(*(*(struct(long,long,int,*(char)))),*(int))->(void)
(	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
data_key_ranges	*(struct(long,long,int,*(char)))
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
data_key_range_count	int
)	O
)	O
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
!=	O
NULL	O
)	O
{	O
expand_delimited_ranges	(*(*(struct(long,long,int,*(char)))),*(int))->(void)
(	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
key_ranges	*(struct(long,long,int,*(char)))
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
key_range_count	int
)	O
)	O
;	O
expand_delimited_ranges	(*(*(struct(long,long,int,*(char)))),*(int))->(void)
(	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
hrchy_key_ranges	*(struct(long,long,int,*(char)))
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
hrchy_key_range_count	int
)	O
)	O
;	O
expand_delimited_ranges	(*(*(struct(long,long,int,*(char)))),*(int))->(void)
(	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
out_ranges	*(struct(long,long,int,*(char)))
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
out_range_count	int
)	O
)	O
;	O
}	O
}	O
if	O
(	O
gra_data_output_field_order	*(struct(char,int,char,int))
!=	O
NULL	O
)	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
gi_data_output_field_order_count	int
;	O
i	int
++	O
)	O
{	O
switch	O
(	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source	char
)	O
{	O
case	O
'r'	O
:	O
if	O
(	O
gi_reference_file_count	int
<	O
1	int
||	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source_num	int
>	O
gi_reference_file_count	int
)	O
FATAL_ERROR1	O
(	O
_	O
(	O
"requested non-existent reference file %d in data-output ordering"	*(char)
)	O
,	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source_num	int
)	O
;	O
switch	O
(	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type	char
)	O
{	O
case	O
'f'	O
:	O
case	O
'n'	O
:	O
case	O
's'	O
:	O
FATAL_ERROR	O
(	O
_	O
(	O
"requested flag, counter, or sum in data-output ordering"	*(char)
)	O
)	O
;	O
break	O
;	O
case	O
'o'	O
:	O
if	O
(	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
==	O
0	int
||	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
>	O
TOTAL_REF_OUT_RANGES	O
(	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source_num	int
-	O
1	int
)	O
||	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
<	O
-	O
1	int
*	O
TOTAL_REF_OUT_RANGES	O
(	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source_num	int
-	O
1	int
)	O
)	O
FATAL_ERROR2	O
(	O
_	O
(	O
"requested non-existent reference field %d in refrence file %d in data-output ordering"	*(char)
)	O
,	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
,	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source_num	int
)	O
;	O
break	O
;	O
case	O
'k'	O
:	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source_num	int
]	O
.	O
constant_string	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR1	O
(	O
_	O
(	O
"requested non-existent reference constant string from reference file %d in data-output ordering"	*(char)
)	O
,	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source_num	int
)	O
;	O
break	O
;	O
default	O
:	O
FATAL_ERROR1	O
(	O
_	O
(	O
"unknown reference field type '%c' requested in data-output ordering"	*(char)
)	O
,	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type	char
)	O
;	O
}	O
break	O
;	O
case	O
'd'	O
:	O
case	O
's'	O
:	O
switch	O
(	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type	char
)	O
{	O
case	O
'f'	O
:	O
case	O
'n'	O
:	O
case	O
's'	O
:	O
FATAL_ERROR	O
(	O
_	O
(	O
"requested flag, counter, or sum from data file in data-output ordering"	*(char)
)	O
)	O
;	O
break	O
;	O
case	O
'o'	O
:	O
if	O
(	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
==	O
0	int
||	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
>	O
gi_data_out_range_count	int
+	O
(	O
gi_data_out_end_start	int
!=	O
0	int
?	O
1	int
:	O
0	int
)	O
||	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
<	O
-	O
1	int
*	O
gi_data_out_range_count	int
-	O
(	O
gi_data_out_end_start	int
!=	O
0	int
?	O
1	int
:	O
0	int
)	O
)	O
FATAL_ERROR1	O
(	O
_	O
(	O
"requested non-existent data field %d in data-output ordering"	*(char)
)	O
,	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
)	O
;	O
break	O
;	O
case	O
'k'	O
:	O
if	O
(	O
gs_data_constant_string	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"requested non-existent data constant string in data-output ordering"	*(char)
)	O
)	O
;	O
break	O
;	O
default	O
:	O
FATAL_ERROR1	O
(	O
_	O
(	O
"unknown data field type %c requested in data-output ordering"	*(char)
)	O
,	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type	char
)	O
;	O
}	O
break	O
;	O
default	O
:	O
FATAL_ERROR1	O
(	O
_	O
(	O
"unknown field source %c requested in data-output ordering"	*(char)
)	O
,	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source	char
)	O
;	O
}	O
}	O
}	O
if	O
(	O
gi_data_is_reference	int
!=	O
0	int
)	O
{	O
if	O
(	O
gi_reference_file_count	int
!=	O
1	int
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"single-pass reading of one file as both reference and data requires exactly one reference file"	*(char)
)	O
)	O
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
data_key_end_start	int
!=	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
key_end_start	int
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"single-pass reading of one file as both reference and data requires identical keys"	*(char)
)	O
)	O
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
data_key_range_count	int
!=	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
key_range_count	int
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"single-pass reading of one file as both reference and data requires identical keys"	*(char)
)	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
key_range_count	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
data_key_ranges	*(struct(long,long,int,*(char)))
[	O
i	int
]	O
.	O
upper_bound	long
!=	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
key_ranges	*(struct(long,long,int,*(char)))
[	O
i	int
]	O
.	O
upper_bound	long
)	O
||	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
data_key_ranges	*(struct(long,long,int,*(char)))
[	O
i	int
]	O
.	O
lower_bound	long
!=	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
key_ranges	*(struct(long,long,int,*(char)))
[	O
i	int
]	O
.	O
lower_bound	long
)	O
||	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
data_key_ranges	*(struct(long,long,int,*(char)))
[	O
i	int
]	O
.	O
precision	int
!=	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
key_ranges	*(struct(long,long,int,*(char)))
[	O
i	int
]	O
.	O
precision	int
)	O
||	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
data_key_ranges	*(struct(long,long,int,*(char)))
[	O
i	int
]	O
.	O
format	*(char)
!=	O
NULL	O
&&	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
key_ranges	*(struct(long,long,int,*(char)))
[	O
i	int
]	O
.	O
format	*(char)
!=	O
NULL	O
&&	O
strcmp	(*(char),*(char))->(int)
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
data_key_ranges	*(struct(long,long,int,*(char)))
[	O
i	int
]	O
.	O
format	*(char)
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
key_ranges	*(struct(long,long,int,*(char)))
[	O
i	int
]	O
.	O
format	*(char)
)	O
!=	O
0	int
)	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"single-pass reading of one file as both reference and data requires identical keys"	*(char)
)	O
)	O
;	O
}	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
unique_ind	int
==	O
0	int
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"single-pass reading of one file as both reference and data requires unique keys"	*(char)
)	O
)	O
;	O
if	O
(	O
gi_data_write_ind	int
!=	O
0	int
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"single-pass reading of one file as both reference and data makes no sense with data=file-based output"	*(char)
)	O
)	O
;	O
}	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
gi_reference_file_count	int
;	O
j	int
++	O
)	O
{	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
!=	O
NULL	O
)	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
output_field_order_count	int
;	O
i	int
++	O
)	O
{	O
switch	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source	char
)	O
{	O
case	O
'r'	O
:	O
if	O
(	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source_num	int
>	O
gi_reference_file_count	int
)	O
||	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source_num	int
<	O
-	O
1	int
*	O
gi_reference_file_count	int
)	O
||	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source_num	int
==	O
0	int
)	O
)	O
FATAL_ERROR2	O
(	O
_	O
(	O
"requested non-existent reference file %d in output ordering for reference file %d"	*(char)
)	O
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source_num	int
,	O
j	int
+	O
1	int
)	O
;	O
if	O
(	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source_num	int
!=	O
j	int
+	O
1	int
)	O
&&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source_num	int
!=	O
0	int
)	O
)	O
FATAL_ERROR2	O
(	O
_	O
(	O
"reference file %d order requests fields from reference file %d"	*(char)
)	O
,	O
j	int
+	O
1	int
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source_num	int
)	O
;	O
switch	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type	char
)	O
{	O
case	O
'n'	O
:	O
if	O
(	O
gi_counter_ind	int
==	O
0	int
)	O
FATAL_ERROR1	O
(	O
_	O
(	O
"requested non-existent counter in output from reference file %d"	*(char)
)	O
,	O
j	int
)	O
;	O
break	O
;	O
case	O
's'	O
:	O
if	O
(	O
NUM_COUNTERS	O
-	O
2	int
<	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
)	O
FATAL_ERROR2	O
(	O
_	O
(	O
"requested sum %d when only %d sum fields were specified"	*(char)
)	O
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
,	O
NUM_COUNTERS	O
-	O
2	int
)	O
;	O
break	O
;	O
case	O
'f'	O
:	O
if	O
(	O
gi_flag_ind	int
==	O
0	int
)	O
FATAL_ERROR1	O
(	O
_	O
(	O
"requested non-existent flag in output from reference file %d"	*(char)
)	O
,	O
j	int
)	O
;	O
break	O
;	O
case	O
'o'	O
:	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
<	O
1	int
||	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
>	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
out_range_count	int
)	O
FATAL_ERROR2	O
(	O
_	O
(	O
"requested non-existent reference field %d in reference file %d in reference-output ordering"	*(char)
)	O
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source_num	int
)	O
;	O
break	O
;	O
case	O
'k'	O
:	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
constant_string	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR1	O
(	O
_	O
(	O
"requested non-existent reference constant string from reference file %d in reference-output ordering"	*(char)
)	O
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source_num	int
)	O
;	O
break	O
;	O
default	O
:	O
FATAL_ERROR1	O
(	O
_	O
(	O
"unknown reference field type '%c' requested in reference-output ordering"	*(char)
)	O
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type	char
)	O
;	O
}	O
break	O
;	O
case	O
'd'	O
:	O
case	O
's'	O
:	O
switch	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type	char
)	O
{	O
case	O
'f'	O
:	O
case	O
'n'	O
:	O
case	O
's'	O
:	O
FATAL_ERROR	O
(	O
_	O
(	O
"requested flag, counter, or sum from data file in reference-output ordering"	*(char)
)	O
)	O
;	O
break	O
;	O
case	O
'o'	O
:	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
<	O
1	int
||	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
>	O
gi_data_out_range_count	int
)	O
FATAL_ERROR1	O
(	O
_	O
(	O
"requested non-existent data field %d in reference-output ordering"	*(char)
)	O
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
)	O
;	O
break	O
;	O
case	O
'k'	O
:	O
if	O
(	O
gs_data_constant_string	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"requested non-existent data constant string in reference-output ordering"	*(char)
)	O
)	O
;	O
break	O
;	O
default	O
:	O
FATAL_ERROR1	O
(	O
_	O
(	O
"unknown data field type %c requested in reference-output ordering"	*(char)
)	O
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type	char
)	O
;	O
}	O
break	O
;	O
default	O
:	O
FATAL_ERROR1	O
(	O
_	O
(	O
"unknown field source %c requested in reference-output ordering"	*(char)
)	O
,	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
j	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source	char
)	O
;	O
}	O
}	O
}	O
}	O
if	O
(	O
gs_ext_init_file	*(struct(long,enum(int,int,int),*(char)))
!=	O
NULL	O
)	O
FATAL_ERROR2	O
(	O
_	O
(	O
"specified extension processing without Guile installed: %.*s"	*(char)
)	O
,	O
gs_ext_init_file	*(struct(long,enum(int,int,int),*(char)))
->	O
length	long
,	O
gs_ext_init_file	*(struct(long,enum(int,int,int),*(char)))
->	O
string	*(char)
)	O
;	O
if	O
(	O
gs_ext_begin_command	*(struct(long,enum(int,int,int),*(char)))
!=	O
NULL	O
)	O
FATAL_ERROR2	O
(	O
_	O
(	O
"specified extension processing without Guile installed: %.*s"	*(char)
)	O
,	O
gs_ext_begin_command	*(struct(long,enum(int,int,int),*(char)))
->	O
length	long
,	O
gs_ext_begin_command	*(struct(long,enum(int,int,int),*(char)))
->	O
string	*(char)
)	O
;	O
if	O
(	O
gs_ext_end_command	*(struct(long,enum(int,int,int),*(char)))
!=	O
NULL	O
)	O
FATAL_ERROR2	O
(	O
_	O
(	O
"specified extension processing without Guile installed: %.*s"	*(char)
)	O
,	O
gs_ext_end_command	*(struct(long,enum(int,int,int),*(char)))
->	O
length	long
,	O
gs_ext_end_command	*(struct(long,enum(int,int,int),*(char)))
->	O
string	*(char)
)	O
;	O
if	O
(	O
gs_data_ext_file_open_command	*(struct(long,enum(int,int,int),*(char)))
!=	O
NULL	O
)	O
FATAL_ERROR2	O
(	O
_	O
(	O
"specified extension processing without Guile installed: %.*s"	*(char)
)	O
,	O
gs_data_ext_file_open_command	*(struct(long,enum(int,int,int),*(char)))
->	O
length	long
,	O
gs_data_ext_file_open_command	*(struct(long,enum(int,int,int),*(char)))
->	O
string	*(char)
)	O
;	O
if	O
(	O
gs_data_ext_record_read_command	*(struct(long,enum(int,int,int),*(char)))
!=	O
NULL	O
)	O
FATAL_ERROR2	O
(	O
_	O
(	O
"specified extension processing without Guile installed: %.*s"	*(char)
)	O
,	O
gs_data_ext_record_read_command	*(struct(long,enum(int,int,int),*(char)))
->	O
length	long
,	O
gs_data_ext_record_read_command	*(struct(long,enum(int,int,int),*(char)))
->	O
string	*(char)
)	O
;	O
if	O
(	O
gs_data_ext_file_close_command	*(struct(long,enum(int,int,int),*(char)))
!=	O
NULL	O
)	O
FATAL_ERROR2	O
(	O
_	O
(	O
"specified extension processing without Guile installed: %.*s"	*(char)
)	O
,	O
gs_data_ext_file_close_command	*(struct(long,enum(int,int,int),*(char)))
->	O
length	long
,	O
gs_data_ext_file_close_command	*(struct(long,enum(int,int,int),*(char)))
->	O
string	*(char)
)	O
;	O
if	O
(	O
gs_data_ext_start_writing_command	*(struct(long,enum(int,int,int),*(char)))
!=	O
NULL	O
)	O
FATAL_ERROR2	O
(	O
_	O
(	O
"specified extension processing without Guile installed: %.*s"	*(char)
)	O
,	O
gs_data_ext_start_writing_command	*(struct(long,enum(int,int,int),*(char)))
->	O
length	long
,	O
gs_data_ext_start_writing_command	*(struct(long,enum(int,int,int),*(char)))
->	O
string	*(char)
)	O
;	O
if	O
(	O
gs_data_ext_record_write_command	*(struct(long,enum(int,int,int),*(char)))
!=	O
NULL	O
)	O
FATAL_ERROR2	O
(	O
_	O
(	O
"specified extension processing without Guile installed: %.*s"	*(char)
)	O
,	O
gs_data_ext_record_write_command	*(struct(long,enum(int,int,int),*(char)))
->	O
length	long
,	O
gs_data_ext_record_write_command	*(struct(long,enum(int,int,int),*(char)))
->	O
string	*(char)
)	O
;	O
if	O
(	O
gs_data_ext_finished_writing_command	*(struct(long,enum(int,int,int),*(char)))
!=	O
NULL	O
)	O
FATAL_ERROR2	O
(	O
_	O
(	O
"specified extension processing without Guile installed: %.*s"	*(char)
)	O
,	O
gs_data_ext_finished_writing_command	*(struct(long,enum(int,int,int),*(char)))
->	O
length	long
,	O
gs_data_ext_finished_writing_command	*(struct(long,enum(int,int,int),*(char)))
->	O
string	*(char)
)	O
;	O
if	O
(	O
gs_data_ext_filter_command	*(struct(long,enum(int,int,int),*(char)))
!=	O
NULL	O
)	O
FATAL_ERROR2	O
(	O
_	O
(	O
"specified extension processing without Guile installed: %.*s"	*(char)
)	O
,	O
gs_data_ext_filter_command	*(struct(long,enum(int,int,int),*(char)))
->	O
length	long
,	O
gs_data_ext_filter_command	*(struct(long,enum(int,int,int),*(char)))
->	O
string	*(char)
)	O
;	O
if	O
(	O
gs_data_ext_match_command	*(struct(long,enum(int,int,int),*(char)))
!=	O
NULL	O
)	O
FATAL_ERROR2	O
(	O
_	O
(	O
"specified extension processing without Guile installed: %.*s"	*(char)
)	O
,	O
gs_data_ext_match_command	*(struct(long,enum(int,int,int),*(char)))
->	O
length	long
,	O
gs_data_ext_match_command	*(struct(long,enum(int,int,int),*(char)))
->	O
string	*(char)
)	O
;	O
return	O
EXIT_SUCCESS	int
;	O
}	O
void	O
expand_delimited_ranges	(*(*(struct(long,long,int,*(char)))),*(int))->(void)
(	O
out_ranges	*(struct(long,long,int,*(char)))
,	O
range_count	*(int)
)	O
field_range	struct(long,long,int,*(char))
*	O
*	O
out_ranges	*(struct(long,long,int,*(char)))
;	O
int	O
*	O
range_count	*(int)
;	O
{	O
int	O
i	int
;	O
field_range	struct(long,long,int,*(char))
*	O
replace_ranges	*(struct(long,long,int,*(char)))
;	O
int	O
replace_count	int
;	O
replace_ranges	*(struct(long,long,int,*(char)))
=	O
NULL	O
;	O
replace_count	int
=	O
0	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
*	O
range_count	*(int)
;	O
i	int
++	O
)	O
{	O
if	O
(	O
(	O
*	O
out_ranges	*(struct(long,long,int,*(char)))
)	O
[	O
i	int
]	O
.	O
upper_bound	long
!=	O
0	int
&&	O
(	O
*	O
out_ranges	*(struct(long,long,int,*(char)))
)	O
[	O
i	int
]	O
.	O
upper_bound	long
!=	O
(	O
*	O
out_ranges	*(struct(long,long,int,*(char)))
)	O
[	O
i	int
]	O
.	O
lower_bound	long
)	O
{	O
int	O
j	int
;	O
if	O
(	O
replace_ranges	*(struct(long,long,int,*(char)))
==	O
NULL	O
)	O
{	O
replace_ranges	*(struct(long,long,int,*(char)))
=	O
malloc	(long)->(*(void))
(	O
(	O
i	int
+	O
(	O
*	O
out_ranges	*(struct(long,long,int,*(char)))
)	O
[	O
i	int
]	O
.	O
upper_bound	long
-	O
(	O
*	O
out_ranges	*(struct(long,long,int,*(char)))
)	O
[	O
i	int
]	O
.	O
lower_bound	long
+	O
1	int
)	O
*	O
sizeof	O
(	O
field_range	struct(long,long,int,*(char))
)	O
)	O
;	O
if	O
(	O
replace_ranges	*(struct(long,long,int,*(char)))
==	O
NULL	O
)	O
{	O
*	O
out_ranges	*(struct(long,long,int,*(char)))
=	O
NULL	O
;	O
*	O
range_count	*(int)
=	O
0	int
;	O
return	O
;	O
}	O
if	O
(	O
i	int
>	O
0	int
)	O
memmove	(*(void),*(void),long)->(*(void))
(	O
replace_ranges	*(struct(long,long,int,*(char)))
,	O
*	O
out_ranges	*(struct(long,long,int,*(char)))
,	O
i	int
*	O
sizeof	O
(	O
field_range	struct(long,long,int,*(char))
)	O
)	O
;	O
replace_count	int
=	O
i	int
;	O
}	O
else	O
{	O
replace_ranges	*(struct(long,long,int,*(char)))
=	O
realloc	(*(void),long)->(*(void))
(	O
replace_ranges	*(struct(long,long,int,*(char)))
,	O
(	O
replace_count	int
+	O
(	O
*	O
out_ranges	*(struct(long,long,int,*(char)))
)	O
[	O
i	int
]	O
.	O
upper_bound	long
-	O
(	O
*	O
out_ranges	*(struct(long,long,int,*(char)))
)	O
[	O
i	int
]	O
.	O
lower_bound	long
+	O
1	int
)	O
*	O
sizeof	O
(	O
field_range	struct(long,long,int,*(char))
)	O
)	O
;	O
if	O
(	O
replace_ranges	*(struct(long,long,int,*(char)))
==	O
NULL	O
)	O
{	O
*	O
out_ranges	*(struct(long,long,int,*(char)))
=	O
NULL	O
;	O
*	O
range_count	*(int)
=	O
0	int
;	O
return	O
;	O
}	O
}	O
for	O
(	O
j	int
=	O
(	O
*	O
out_ranges	*(struct(long,long,int,*(char)))
)	O
[	O
i	int
]	O
.	O
lower_bound	long
;	O
j	int
<=	O
(	O
*	O
out_ranges	*(struct(long,long,int,*(char)))
)	O
[	O
i	int
]	O
.	O
upper_bound	long
;	O
j	int
++	O
)	O
{	O
replace_count	int
++	O
;	O
replace_ranges	*(struct(long,long,int,*(char)))
[	O
replace_count	int
-	O
1	int
]	O
.	O
lower_bound	long
=	O
j	int
;	O
replace_ranges	*(struct(long,long,int,*(char)))
[	O
replace_count	int
-	O
1	int
]	O
.	O
upper_bound	long
=	O
j	int
;	O
replace_ranges	*(struct(long,long,int,*(char)))
[	O
replace_count	int
-	O
1	int
]	O
.	O
precision	int
=	O
(	O
*	O
out_ranges	*(struct(long,long,int,*(char)))
)	O
[	O
i	int
]	O
.	O
precision	int
;	O
replace_ranges	*(struct(long,long,int,*(char)))
[	O
replace_count	int
-	O
1	int
]	O
.	O
format	*(char)
=	O
(	O
*	O
out_ranges	*(struct(long,long,int,*(char)))
)	O
[	O
i	int
]	O
.	O
format	*(char)
;	O
}	O
}	O
else	O
if	O
(	O
replace_ranges	*(struct(long,long,int,*(char)))
!=	O
NULL	O
)	O
{	O
replace_ranges	*(struct(long,long,int,*(char)))
=	O
realloc	(*(void),long)->(*(void))
(	O
replace_ranges	*(struct(long,long,int,*(char)))
,	O
(	O
replace_count	int
+	O
1	int
)	O
*	O
sizeof	O
(	O
field_range	struct(long,long,int,*(char))
)	O
)	O
;	O
if	O
(	O
replace_ranges	*(struct(long,long,int,*(char)))
==	O
NULL	O
)	O
{	O
*	O
out_ranges	*(struct(long,long,int,*(char)))
=	O
NULL	O
;	O
*	O
range_count	*(int)
=	O
0	int
;	O
return	O
;	O
}	O
replace_count	int
++	O
;	O
replace_ranges	*(struct(long,long,int,*(char)))
[	O
replace_count	int
-	O
1	int
]	O
.	O
upper_bound	long
=	O
(	O
*	O
out_ranges	*(struct(long,long,int,*(char)))
)	O
[	O
i	int
]	O
.	O
upper_bound	long
;	O
replace_ranges	*(struct(long,long,int,*(char)))
[	O
replace_count	int
-	O
1	int
]	O
.	O
lower_bound	long
=	O
(	O
*	O
out_ranges	*(struct(long,long,int,*(char)))
)	O
[	O
i	int
]	O
.	O
lower_bound	long
;	O
replace_ranges	*(struct(long,long,int,*(char)))
[	O
replace_count	int
-	O
1	int
]	O
.	O
precision	int
=	O
(	O
*	O
out_ranges	*(struct(long,long,int,*(char)))
)	O
[	O
i	int
]	O
.	O
precision	int
;	O
replace_ranges	*(struct(long,long,int,*(char)))
[	O
replace_count	int
-	O
1	int
]	O
.	O
format	*(char)
=	O
(	O
*	O
out_ranges	*(struct(long,long,int,*(char)))
)	O
[	O
i	int
]	O
.	O
format	*(char)
;	O
}	O
}	O
if	O
(	O
replace_ranges	*(struct(long,long,int,*(char)))
!=	O
NULL	O
)	O
{	O
*	O
out_ranges	*(struct(long,long,int,*(char)))
=	O
replace_ranges	*(struct(long,long,int,*(char)))
;	O
*	O
range_count	*(int)
=	O
replace_count	int
;	O
}	O
return	O
;	O
}	O
int	O
assert_reference_file	(int)->(int)
(	O
option	struct(*(char),int,*(int),int)
)	O
int	O
option	struct(*(char),int,*(int),int)
;	O
{	O
if	O
(	O
gi_reference_file_count	int
<=	O
0	int
)	O
FATAL_ERROR1	O
(	O
_	O
(	O
"option %c listed before any reference file was specified"	*(char)
)	O
,	O
option	struct(*(char),int,*(int),int)
)	O
;	O
return	O
EXIT_SUCCESS	int
;	O
}	O
int	O
set_reference_option	(int)->(int)
(	O
option	struct(*(char),int,*(int),int)
)	O
int	O
option	struct(*(char),int,*(int),int)
;	O
{	O
switch	O
(	O
option	struct(*(char),int,*(int),int)
)	O
{	O
case	O
'a'	O
:	O
calculate_ranges	(*(char),*(*(struct(long,long,int,*(char)))),*(int),*(int))->(int)
(	O
optarg	*(char)
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
hrchy_key_ranges	*(struct(long,long,int,*(char)))
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
hrchy_key_end_start	int
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
hrchy_key_range_count	int
)	O
)	O
;	O
break	O
;	O
case	O
'F'	O
:	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
hrchy_flatten_levels	int
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
optarg	*(char)
,	O
NULL	O
,	O
0	int
)	O
;	O
break	O
;	O
case	O
'h'	O
:	O
if	O
(	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
hash_size	long
=	O
atoi	(*(char))->(int)
(	O
optarg	*(char)
)	O
)	O
<=	O
0	int
)	O
FATAL_ERROR1	O
(	O
_	O
(	O
"hash table size must be a positive number (got %s)"	*(char)
)	O
,	O
optarg	*(char)
)	O
;	O
break	O
;	O
case	O
'H'	O
:	O
if	O
(	O
strcasecmp	(*(char),*(char))->(int)
(	O
optarg	*(char)
,	O
"beginning"	*(char)
)	O
==	O
0	int
)	O
{	O
gi_hashmovement_ind	enum(int,int,int,int,int)
=	O
hm_beginning	int
;	O
}	O
else	O
if	O
(	O
strcasecmp	(*(char),*(char))->(int)
(	O
optarg	*(char)
,	O
"end"	*(char)
)	O
==	O
0	int
)	O
{	O
gi_hashmovement_ind	enum(int,int,int,int,int)
=	O
hm_end	int
;	O
}	O
else	O
if	O
(	O
strcasecmp	(*(char),*(char))->(int)
(	O
optarg	*(char)
,	O
"number"	*(char)
)	O
==	O
0	int
)	O
{	O
gi_hashmovement_ind	enum(int,int,int,int,int)
=	O
hm_number	int
;	O
}	O
else	O
if	O
(	O
strcasecmp	(*(char),*(char))->(int)
(	O
optarg	*(char)
,	O
"binary"	*(char)
)	O
==	O
0	int
)	O
{	O
gi_hashmovement_ind	enum(int,int,int,int,int)
=	O
hm_binary	int
;	O
}	O
else	O
if	O
(	O
strcasecmp	(*(char),*(char))->(int)
(	O
optarg	*(char)
,	O
"binary_long"	*(char)
)	O
==	O
0	int
)	O
{	O
gi_hashmovement_ind	enum(int,int,int,int,int)
=	O
hm_binary_long	int
;	O
}	O
else	O
FATAL_ERROR	O
(	O
_	O
(	O
"hash-movement option must be `beginning' or `end'"	*(char)
)	O
)	O
;	O
break	O
;	O
case	O
'k'	O
:	O
calculate_ranges	(*(char),*(*(struct(long,long,int,*(char)))),*(int),*(int))->(int)
(	O
optarg	*(char)
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
key_ranges	*(struct(long,long,int,*(char)))
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
key_end_start	int
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
key_range_count	int
)	O
)	O
;	O
break	O
;	O
case	O
'l'	O
:	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
hrchy_leaf_only	int
=	O
-	O
1	int
;	O
break	O
;	O
case	O
'm'	O
:	O
calculate_ranges	(*(char),*(*(struct(long,long,int,*(char)))),*(int),*(int))->(int)
(	O
optarg	*(char)
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
data_key_ranges	*(struct(long,long,int,*(char)))
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
data_key_end_start	int
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
data_key_range_count	int
)	O
)	O
;	O
break	O
;	O
case	O
'p'	O
:	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
optional_ind	int
=	O
-	O
1	int
;	O
break	O
;	O
case	O
'P'	O
:	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
optional_ind	int
=	O
-	O
1	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
exclude_match_ind	int
=	O
-	O
1	int
;	O
break	O
;	O
case	O
'u'	O
:	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
unique_ind	int
=	O
-	O
1	int
;	O
break	O
;	O
case	O
'U'	O
:	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
hrchy_direction	int
=	O
-	O
1	int
;	O
break	O
;	O
}	O
}	O
int	O
set_file_option	(int)->(int)
(	O
option	struct(*(char),int,*(int),int)
)	O
int	O
option	struct(*(char),int,*(int),int)
;	O
{	O
STRINGTYPE	O
temp_dstring	struct(long,enum(int,int,int),*(char))
;	O
switch	O
(	O
option	struct(*(char),int,*(int),int)
)	O
{	O
case	O
'B'	O
:	O
if	O
(	O
gi_reference_file_count	int
==	O
0	int
)	O
{	O
gs_data_input_record_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
optarg	*(char)
)	O
;	O
if	O
(	O
gs_data_input_record_delimiter	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
}	O
else	O
{	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
input_record_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
optarg	*(char)
)	O
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
input_record_delimiter	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
}	O
break	O
;	O
case	O
'D'	O
:	O
if	O
(	O
gi_reference_file_count	int
==	O
0	int
)	O
{	O
gs_data_input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
optarg	*(char)
)	O
;	O
if	O
(	O
gs_data_input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
gi_data_no_input_field_delimiter	int
=	O
0	int
;	O
}	O
else	O
{	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
optarg	*(char)
)	O
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
no_input_field_delimiter	int
=	O
0	int
;	O
}	O
break	O
;	O
case	O
OPT_NO_INPUT_DELIMITER	int
:	O
if	O
(	O
gi_reference_file_count	int
==	O
0	int
)	O
{	O
gi_data_no_input_field_delimiter	int
=	O
-	O
1	int
;	O
if	O
(	O
gs_data_input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
!=	O
NULL	O
)	O
{	O
dstrfree	(*(struct(long,enum(int,int,int),*(char))))->(void)
(	O
gs_data_input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
)	O
;	O
gs_data_input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
}	O
}	O
else	O
{	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
no_input_field_delimiter	int
=	O
-	O
1	int
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
!=	O
NULL	O
)	O
{	O
dstrfree	(*(struct(long,enum(int,int,int),*(char))))->(void)
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
)	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
}	O
}	O
break	O
;	O
case	O
OPT_INPUT_DELIMITER_REPEAT	int
:	O
if	O
(	O
gi_reference_file_count	int
==	O
0	int
)	O
{	O
gi_data_input_field_delimiter_repeat	int
=	O
-	O
1	int
;	O
}	O
else	O
{	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
input_field_delimiter_repeat	int
=	O
-	O
1	int
;	O
}	O
break	O
;	O
case	O
'K'	O
:	O
if	O
(	O
gi_reference_file_count	int
==	O
0	int
)	O
{	O
gs_data_constant_string	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
optarg	*(char)
)	O
;	O
if	O
(	O
gs_data_constant_string	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
}	O
else	O
{	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
constant_string	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
optarg	*(char)
)	O
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
constant_string	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
}	O
break	O
;	O
case	O
'L'	O
:	O
if	O
(	O
gi_reference_file_count	int
==	O
0	int
)	O
{	O
gi_data_input_record_length	int
=	O
atol	(*(char))->(long)
(	O
optarg	*(char)
)	O
;	O
if	O
(	O
gi_data_input_record_length	int
<=	O
0	int
)	O
FATAL_ERROR1	O
(	O
_	O
(	O
"record length must be postitive number (got %s)"	*(char)
)	O
,	O
optarg	*(char)
)	O
;	O
}	O
else	O
{	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
input_record_length	int
=	O
atol	(*(char))->(long)
(	O
optarg	*(char)
)	O
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
input_record_length	int
==	O
0	int
)	O
FATAL_ERROR1	O
(	O
_	O
(	O
"record length must be postitive number (got %s)"	*(char)
)	O
,	O
optarg	*(char)
)	O
;	O
}	O
break	O
;	O
case	O
'o'	O
:	O
if	O
(	O
gi_reference_file_count	int
==	O
0	int
)	O
{	O
calculate_ranges	(*(char),*(*(struct(long,long,int,*(char)))),*(int),*(int))->(int)
(	O
optarg	*(char)
,	O
&	O
gra_data_out_ranges	*(struct(long,long,int,*(char)))
,	O
&	O
gi_data_out_end_start	int
,	O
&	O
gi_data_out_range_count	int
)	O
;	O
}	O
else	O
{	O
calculate_ranges	(*(char),*(*(struct(long,long,int,*(char)))),*(int),*(int))->(int)
(	O
optarg	*(char)
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
out_ranges	*(struct(long,long,int,*(char)))
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
out_end_start	int
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
out_range_count	int
)	O
)	O
;	O
}	O
break	O
;	O
case	O
'O'	O
:	O
temp_dstring	struct(long,enum(int,int,int),*(char))
.	O
string	*(char)
=	O
optarg	*(char)
;	O
temp_dstring	struct(long,enum(int,int,int),*(char))
.	O
length	long
=	O
strlen	(*(char))->(long)
(	O
optarg	*(char)
)	O
;	O
if	O
(	O
gi_reference_file_count	int
==	O
0	int
)	O
{	O
gra_data_output_field_order	*(struct(char,int,char,int))
=	O
parse_field_order_string	(*(struct(long,enum(int,int,int),*(char))),*(int))->(*(struct(char,int,char,int)))
(	O
&	O
temp_dstring	struct(long,enum(int,int,int),*(char))
,	O
&	O
gi_data_output_field_order_count	int
)	O
;	O
if	O
(	O
gra_data_output_field_order	*(struct(char,int,char,int))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to parse data output field order"	*(char)
)	O
)	O
;	O
}	O
else	O
{	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
=	O
parse_field_order_string	(*(struct(long,enum(int,int,int),*(char))),*(int))->(*(struct(char,int,char,int)))
(	O
&	O
temp_dstring	struct(long,enum(int,int,int),*(char))
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
output_field_order_count	int
)	O
)	O
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
"Unable to parse reference output field order"	*(char)
)	O
;	O
}	O
break	O
;	O
case	O
'p'	O
:	O
if	O
(	O
gi_reference_file_count	int
==	O
0	int
)	O
gi_data_optional_ind	int
=	O
-	O
1	int
;	O
else	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
optional_ind	int
=	O
-	O
1	int
;	O
break	O
;	O
case	O
'P'	O
:	O
if	O
(	O
gi_reference_file_count	int
==	O
0	int
)	O
gi_data_optional_ind	int
=	O
-	O
1	int
;	O
else	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
optional_ind	int
=	O
-	O
1	int
;	O
if	O
(	O
gi_reference_file_count	int
==	O
0	int
)	O
gi_data_exclude_match_ind	int
=	O
-	O
1	int
;	O
else	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
exclude_match_ind	int
=	O
-	O
1	int
;	O
break	O
;	O
case	O
't'	O
:	O
if	O
(	O
gi_reference_file_count	int
==	O
0	int
)	O
{	O
gs_data_output_file_name	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
optarg	*(char)
)	O
;	O
if	O
(	O
gs_data_output_file_name	*(char)
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
}	O
else	O
{	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
output_file_name	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
optarg	*(char)
)	O
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
output_file_name	*(char)
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
}	O
break	O
;	O
case	O
'w'	O
:	O
if	O
(	O
gi_reference_file_count	int
==	O
0	int
)	O
gi_data_write_ind	int
=	O
1	int
;	O
else	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
write_ind	int
=	O
1	int
;	O
break	O
;	O
}	O
}	O
int	O
set_reference_file	(*(char))->(int)
(	O
filename	*(char)
)	O
char	O
*	O
filename	*(char)
;	O
{	O
if	O
(	O
++	O
gi_reference_file_count	int
>	O
gi_allocated_reference_info	int
)	O
FATAL_ERROR	O
(	O
"too many reference files."	*(char)
)	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
file_name	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
filename	*(char)
)	O
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
file_name	*(char)
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
input_buffer	*(char)
=	O
NULL	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
input_buffer_size	long
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
input_buffer_pos	long
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
output_buffer	*(char)
=	O
NULL	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
output_buffer_size	long
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
output_buffer_pos	long
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
out_ranges	*(struct(long,long,int,*(char)))
=	O
NULL	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
out_end_start	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
out_range_count	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
key_ranges	*(struct(long,long,int,*(char)))
=	O
NULL	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
key_end_start	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
key_range_count	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
hrchy_key_ranges	*(struct(long,long,int,*(char)))
=	O
NULL	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
hrchy_key_end_start	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
hrchy_key_range_count	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
hrchy_flatten_levels	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
hrchy_leaf_only	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
hrchy_direction	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
data_key_ranges	*(struct(long,long,int,*(char)))
=	O
NULL	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
constant_string	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
missing_string	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
empty_string	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
no_input_field_delimiter	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
input_field_delimiter_repeat	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
input_record_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
"\n"	*(char)
)	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
input_record_length	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
data_key_end_start	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
data_key_range_count	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
unique_ind	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
optional_ind	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
exclude_match_ind	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
hrchy_path	*(long)
=	O
NULL	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
hrchy_path_size	long
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
hrchy_curr_depth	long
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
records_read	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
records_dropped_filter	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
records_stored	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
records_matched_key	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
records_matched	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
data_records_matched	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
write_ind	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
suppress_empty_ind	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
output_file_name	*(char)
=	O
NULL	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_file_open_command	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_record_read_command	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_file_close_command	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_start_writing_command	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_record_write_command	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_finished_writing_command	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_filter_command	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_match_command	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_hrchy_match_command	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
output_field_order	*(struct(char,int,char,int))
=	O
NULL	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
output_field_order_count	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
hash_size	long
=	O
DEFAULT_HASHTABLE_SIZE	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
hash_table	*(struct(long,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(*(struct(long,enum(int,int,int),*`))),*(*(long)),*(void)))
=	O
0	int
;	O
}	O
set_general_option	(int)->(int)
(	O
option	struct(*(char),int,*(int),int)
)	O
int	O
option	struct(*(char),int,*(int),int)
;	O
{	O
switch	O
(	O
option	struct(*(char),int,*(int),int)
)	O
{	O
case	O
'b'	O
:	O
gs_output_record_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
optarg	*(char)
)	O
;	O
if	O
(	O
gs_output_record_delimiter	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
break	O
;	O
case	O
'd'	O
:	O
gs_output_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
optarg	*(char)
)	O
;	O
if	O
(	O
gs_output_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
gi_no_output_field_delimiter	int
=	O
0	int
;	O
break	O
;	O
case	O
OPT_NO_OUTPUT_DELIMITER	int
:	O
gi_no_output_field_delimiter	int
=	O
-	O
1	int
;	O
if	O
(	O
gs_output_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
!=	O
NULL	O
)	O
{	O
dstrfree	(*(struct(long,enum(int,int,int),*(char))))->(void)
(	O
gs_output_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
)	O
;	O
gs_output_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
NULL	O
;	O
}	O
break	O
;	O
case	O
'f'	O
:	O
gi_flag_ind	int
=	O
1	int
;	O
break	O
;	O
case	O
'M'	O
:	O
gi_data_is_reference	int
=	O
1	int
;	O
break	O
;	O
case	O
'n'	O
:	O
gi_counter_ind	int
=	O
1	int
;	O
break	O
;	O
case	O
'R'	O
:	O
gi_checkallref_ind	int
=	O
1	int
;	O
break	O
;	O
case	O
OPT_NO_CHECK_ALL_REFERENCE	int
:	O
gi_checkallref_ind	int
=	O
0	int
;	O
break	O
;	O
case	O
's'	O
:	O
calculate_ranges	(*(char),*(*(struct(long,long,int,*(char)))),*(int),*(int))->(int)
(	O
optarg	*(char)
,	O
&	O
gra_data_sum_ranges	*(struct(long,long,int,*(char)))
,	O
&	O
gi_data_sum_end_start	int
,	O
&	O
gi_data_sum_range_count	int
)	O
;	O
break	O
;	O
case	O
'v'	O
:	O
gi_verbose_ind	int
=	O
1	int
;	O
break	O
;	O
case	O
'x'	O
:	O
switch	O
(	O
optarg	*(char)
[	O
0	int
]	O
)	O
{	O
case	O
'b'	O
:	O
gs_ext_begin_command	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
&	O
(	O
optarg	*(char)
[	O
1	int
]	O
)	O
)	O
;	O
if	O
(	O
gs_ext_begin_command	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
break	O
;	O
case	O
'e'	O
:	O
gs_ext_end_command	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
&	O
(	O
optarg	*(char)
[	O
1	int
]	O
)	O
)	O
;	O
if	O
(	O
gs_ext_end_command	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
break	O
;	O
case	O
'o'	O
:	O
if	O
(	O
gi_reference_file_count	int
==	O
0	int
)	O
{	O
gs_data_ext_file_open_command	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
&	O
(	O
optarg	*(char)
[	O
1	int
]	O
)	O
)	O
;	O
if	O
(	O
gs_data_ext_file_open_command	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
}	O
else	O
{	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_file_open_command	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
&	O
(	O
optarg	*(char)
[	O
1	int
]	O
)	O
)	O
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_file_open_command	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
}	O
break	O
;	O
case	O
'r'	O
:	O
if	O
(	O
gi_reference_file_count	int
==	O
0	int
)	O
{	O
gs_data_ext_record_read_command	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
&	O
(	O
optarg	*(char)
[	O
1	int
]	O
)	O
)	O
;	O
if	O
(	O
gs_data_ext_record_read_command	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
}	O
else	O
{	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_record_read_command	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
&	O
(	O
optarg	*(char)
[	O
1	int
]	O
)	O
)	O
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_record_read_command	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
}	O
break	O
;	O
case	O
'c'	O
:	O
if	O
(	O
gi_reference_file_count	int
==	O
0	int
)	O
{	O
gs_data_ext_file_close_command	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
&	O
(	O
optarg	*(char)
[	O
1	int
]	O
)	O
)	O
;	O
if	O
(	O
gs_data_ext_file_close_command	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
}	O
else	O
{	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_file_close_command	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
&	O
(	O
optarg	*(char)
[	O
1	int
]	O
)	O
)	O
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_file_close_command	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
}	O
break	O
;	O
case	O
's'	O
:	O
if	O
(	O
gi_reference_file_count	int
==	O
0	int
)	O
{	O
gs_data_ext_start_writing_command	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
&	O
(	O
optarg	*(char)
[	O
1	int
]	O
)	O
)	O
;	O
if	O
(	O
gs_data_ext_start_writing_command	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
}	O
else	O
{	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_start_writing_command	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
&	O
(	O
optarg	*(char)
[	O
1	int
]	O
)	O
)	O
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_start_writing_command	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
}	O
break	O
;	O
case	O
'w'	O
:	O
if	O
(	O
gi_reference_file_count	int
==	O
0	int
)	O
{	O
gs_data_ext_record_write_command	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
&	O
(	O
optarg	*(char)
[	O
1	int
]	O
)	O
)	O
;	O
if	O
(	O
gs_data_ext_record_write_command	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
}	O
else	O
{	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_record_write_command	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
&	O
(	O
optarg	*(char)
[	O
1	int
]	O
)	O
)	O
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_record_write_command	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
}	O
break	O
;	O
case	O
'f'	O
:	O
if	O
(	O
gi_reference_file_count	int
==	O
0	int
)	O
{	O
gs_data_ext_finished_writing_command	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
&	O
(	O
optarg	*(char)
[	O
1	int
]	O
)	O
)	O
;	O
if	O
(	O
gs_data_ext_finished_writing_command	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
}	O
else	O
{	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_finished_writing_command	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
&	O
(	O
optarg	*(char)
[	O
1	int
]	O
)	O
)	O
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_finished_writing_command	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
}	O
break	O
;	O
case	O
'l'	O
:	O
if	O
(	O
gi_reference_file_count	int
==	O
0	int
)	O
{	O
gs_data_ext_filter_command	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
&	O
(	O
optarg	*(char)
[	O
1	int
]	O
)	O
)	O
;	O
if	O
(	O
gs_data_ext_filter_command	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
}	O
else	O
{	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_filter_command	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
&	O
(	O
optarg	*(char)
[	O
1	int
]	O
)	O
)	O
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_filter_command	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
}	O
break	O
;	O
case	O
'm'	O
:	O
assert_reference_file	(int)->(int)
(	O
'm'	O
)	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_match_command	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
&	O
(	O
optarg	*(char)
[	O
1	int
]	O
)	O
)	O
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_match_command	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
break	O
;	O
case	O
'h'	O
:	O
assert_reference_file	(int)->(int)
(	O
'h'	O
)	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_hrchy_match_command	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
&	O
(	O
optarg	*(char)
[	O
1	int
]	O
)	O
)	O
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
ext_hrchy_match_command	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
break	O
;	O
}	O
break	O
;	O
case	O
'X'	O
:	O
gs_ext_init_file	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
optarg	*(char)
)	O
;	O
if	O
(	O
gs_ext_init_file	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
break	O
;	O
case	O
'z'	O
:	O
gi_output_counter_size	int
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
optarg	*(char)
,	O
NULL	O
,	O
10	int
)	O
;	O
if	O
(	O
gi_output_counter_size	int
<=	O
0	int
)	O
FATAL_ERROR1	O
(	O
_	O
(	O
"counter size must be a positive number (got '%s')"	*(char)
)	O
,	O
optarg	*(char)
)	O
;	O
break	O
;	O
case	O
OPT_STATISTICS	int
:	O
gi_statistics_ind	int
=	O
1	int
;	O
break	O
;	O
case	O
OPT_NO_STATISTICS	int
:	O
gi_statistics_ind	int
=	O
0	int
;	O
break	O
;	O
}	O
}	O
int	O
usage	(int)->(int)
(	O
status	int
)	O
int	O
status	int
;	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"combine -- flexible file joins (and more)\n"	*(char)
)	O
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"\n"	*(char)
"Reads a data file, checks for matches in any specified reference files, and \n"	*(char)
"writes specified output.\n"	*(char)
"\n"	*(char)
"The following are the main options.  General options and options referring to \n"	*(char)
"the data file should come before any reference file is specified.  Options \n"	*(char)
"appearing after a reference file is specified are applied to the latest reference \n"	*(char)
"file named.  \n"	*(char)
)	O
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"\n"	*(char)
"General Options\n"	*(char)
"\n"	*(char)
"  -b, --output-record-delimiter=STRING  put STRING between all output records \n"	*(char)
"  -d, --output-field-delimiter=STRING   put STRING between all output fields \n"	*(char)
"  -f, --flag                            make 1/0 flags indicating matches\n"	*(char)
"  -H, --hash-movement=OPTION            `beginning' or `end' for best variation\n"	*(char)
"  -n, --count                           make counts of the matching data records\n"	*(char)
"  -R, --check-all-reference             keep checking after a non-optional non-match\n"	*(char)
"      --no-check-all-reference          stop checking after a non-optional non-match\n"	*(char)
"  -x, --extension=COMMAND               run a guile COMMAND as specified\n"	*(char)
"  -X, --extension-init-file=FILENAME    load FILENAME as initialization for guile\n"	*(char)
"  -z, --counter-size=NUMBER             make all counters and sums NUMBER bytes long\n"	*(char)
"      --statistics                      write record counts to stderr\n"	*(char)
"      --no-statistics                   do not write record counts to stderr\n"	*(char)
"      --verbose                         write detailed information to stderr\n"	*(char)
)	O
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
HELP_OPTION_DESCRIPTION	O
,	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
VERSION_OPTION_DESCRIPTION	O
,	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"\n"	*(char)
"Options for Any File\n"	*(char)
"\n"	*(char)
"  -B, --input-record-delimiter=STRING  use STRING to separate input records\n"	*(char)
"  -L, --input-record-length=NUMBER     separate records at NUMBER byte intervals\n"	*(char)
"  -D, --input-field-delimiter=STRING   use STRING to separate fields\n"	*(char)
"  -K, --output-constant=STRING         write STRING in output record\n"	*(char)
"  -o, --output-fields=FIELD-LIST       write FIELD-LIST in output records\n"	*(char)
"  -O, --field-order=FIELD-ORDER-LIST   write output in order of FIELD-ORDER-LIST\n"	*(char)
"  -t, --output-file=FILENAME           write output to FILENAME (default stdout)\n"	*(char)
"  -w, --write-output                   write output based on this file\n"	*(char)
""	*(char)
)	O
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"\n"	*(char)
"Data File Options\n"	*(char)
"\n"	*(char)
"  -s, --sum-fields=FIELD-LIST  sum the values of FIELD-LIST from data records\n"	*(char)
""	*(char)
)	O
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"\n"	*(char)
"Reference File Options\n"	*(char)
"\n"	*(char)
"  -r, --reference-file=FILENAME     FILENAME is the (next) reference file\n"	*(char)
"  -k, --key-fields=FIELD-LIST       match FIELD-LIST to the data file\n"	*(char)
"  -m, --data-key-fields=FIELD-LIST  match FIELD-LIST in the data file to reference\n"	*(char)
"  -p, --match-optional              do not require a match to this file\n"	*(char)
"  -u, --unique                      store only one copy of each distinct set of keys\n"	*(char)
"  -h, --hash-size=NUMBER            initial hash table size (in records)\n"	*(char)
""	*(char)
)	O
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"\n"	*(char)
"FIELD-LIST is a comma-separated list of ranges of bytes or fields (if delimited)\n"	*(char)
"FIELD-ORDER-LIST is a comma-separated list of entries like SOURCE[NUM].TYPE[NUM]\n"	*(char)
)	O
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"\n"	*(char)
"For complete documentation, see the info manual at `info combine'.\n"	*(char)
"\n"	*(char)
"Please report bugs to <dpv@world.std.com>\n"	*(char)
)	O
)	O
;	O
exit	(int)->(void)
(	O
status	int
)	O
;	O
}	O
int	O
handle_cut_arguments	(int,*(*(char)))->(int)
(	O
argc	int
,	O
argv	*(*(char))
)	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	*(*(char))
;	O
{	O
int	O
c	int
;	O
int	O
i	int
;	O
char	O
const	O
*	O
short_options	*(char)
=	O
CUT_COMMON_SHORT_OPTIONS	*(char)
;	O
version_etc_copyright	*(char)
=	O
"Copyright (C) 2002, 2003, 2004, 2013 Daniel P. Valentine"	*(char)
;	O
gi_data_write_ind	int
=	O
1	int
;	O
c	int
=	O
getopt_long	(int,*(*(char)),*(char),*(struct(*(char),int,*(int),int)),*(int))->(int)
(	O
argc	int
,	O
argv	*(*(char))
,	O
short_options	*(char)
,	O
cut_long_options	array(struct(*(char),int,*(int),int))
,	O
NULL	O
)	O
;	O
for	O
(	O
;	O
;	O
)	O
{	O
if	O
(	O
c	int
==	O
-	O
1	int
)	O
{	O
filecount	int
=	O
argc	int
-	O
optind	int
;	O
filenames	*(*(char))
=	O
argv	*(*(char))
+	O
optind	int
;	O
break	O
;	O
}	O
else	O
switch	O
(	O
c	int
)	O
{	O
case	O
'b'	O
:	O
case	O
'c'	O
:	O
calculate_ranges	(*(char),*(*(struct(long,long,int,*(char)))),*(int),*(int))->(int)
(	O
optarg	*(char)
,	O
&	O
gra_data_out_ranges	*(struct(long,long,int,*(char)))
,	O
&	O
gi_data_out_end_start	int
,	O
&	O
gi_data_out_range_count	int
)	O
;	O
if	O
(	O
gs_data_input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
!=	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"bad combination of bytes and fields in cut emulation"	*(char)
)	O
)	O
;	O
break	O
;	O
case	O
'd'	O
:	O
if	O
(	O
strlen	(*(char))->(long)
(	O
optarg	*(char)
)	O
==	O
0	int
)	O
gs_data_input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
"X"	*(char)
)	O
;	O
else	O
gs_data_input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
optarg	*(char)
)	O
;	O
if	O
(	O
gs_data_input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
optarg	*(char)
)	O
==	O
0	int
)	O
gs_data_input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
->	O
string	*(char)
[	O
0	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
gs_output_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
gs_output_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
gs_data_input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
;	O
break	O
;	O
case	O
'f'	O
:	O
calculate_ranges	(*(char),*(*(struct(long,long,int,*(char)))),*(int),*(int))->(int)
(	O
optarg	*(char)
,	O
&	O
gra_data_out_ranges	*(struct(long,long,int,*(char)))
,	O
&	O
gi_data_out_end_start	int
,	O
&	O
gi_data_out_range_count	int
)	O
;	O
if	O
(	O
gs_data_input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
{	O
gs_data_input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
"	"	*(char)
)	O
;	O
if	O
(	O
gs_data_input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
}	O
break	O
;	O
case	O
's'	O
:	O
break	O
;	O
case	O
CUT_OPT_OUTPUT_DELIMITER	int
:	O
if	O
(	O
strlen	(*(char))->(long)
(	O
optarg	*(char)
)	O
==	O
0	int
)	O
gs_output_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
"X"	*(char)
)	O
;	O
else	O
gs_output_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
optarg	*(char)
)	O
;	O
if	O
(	O
gs_output_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
optarg	*(char)
)	O
==	O
0	int
)	O
gs_output_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
->	O
string	*(char)
[	O
0	int
]	O
=	O
'\0'	O
;	O
break	O
;	O
case_GETOPT_HELP_CHAR	O
;	O
case_GETOPT_VERSION_CHAR	O
(	O
PROGRAM_NAME	*(char)
,	O
AUTHORS	*(char)
)	O
;	O
default	O
:	O
usage	(int)->(int)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
c	int
=	O
getopt_long	(int,*(*(char)),*(char),*(struct(*(char),int,*(int),int)),*(int))->(int)
(	O
argc	int
,	O
argv	*(*(char))
,	O
short_options	*(char)
,	O
cut_long_options	array(struct(*(char),int,*(int),int))
,	O
NULL	O
)	O
;	O
}	O
if	O
(	O
gi_data_out_end_start	int
+	O
gi_data_out_range_count	int
==	O
0	int
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"exactly one of -b, -c, or -f needed in cut emulation"	*(char)
)	O
)	O
;	O
}	O
int	O
handle_join_arguments	(int,*(*(char)))->(int)
(	O
argc	int
,	O
argv	*(*(char))
)	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	*(*(char))
;	O
{	O
int	O
c	int
;	O
int	O
i	int
;	O
size_t	long
max_ref_field	long
;	O
size_t	long
max_data_field	long
;	O
size_t	long
end_ref_field	long
;	O
size_t	long
end_data_field	long
;	O
char	O
temp_string	array(char)
[	O
100	int
]	O
;	O
char	O
const	O
*	O
short_options	*(char)
=	O
JOIN_COMMON_SHORT_OPTIONS	*(char)
;	O
STRINGTYPE	O
temp_dstring	struct(long,enum(int,int,int),*(char))
;	O
version_etc_copyright	*(char)
=	O
"Copyright (C) 2002, 2003, 2004, 2013 Daniel P. Valentine"	*(char)
;	O
set_reference_file	(*(char))->(int)
(	O
"temp_reference_file"	*(char)
)	O
;	O
gi_data_write_ind	int
=	O
1	int
;	O
gs_data_input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
" "	*(char)
)	O
;	O
gi_data_no_input_field_delimiter	int
=	O
0	int
;	O
if	O
(	O
gs_data_input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
" "	*(char)
)	O
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
gs_output_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
" "	*(char)
)	O
;	O
gi_data_input_field_delimiter_repeat	int
=	O
-	O
1	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
input_field_delimiter_repeat	int
=	O
-	O
1	int
;	O
gi_data_optional_ind	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
optional_ind	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
unique_ind	int
=	O
-	O
1	int
;	O
gs_data_empty_string	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
""	*(char)
)	O
;	O
if	O
(	O
gs_data_empty_string	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
empty_string	*(struct(long,enum(int,int,int),*(char)))
=	O
gs_data_empty_string	*(struct(long,enum(int,int,int),*(char)))
;	O
gs_data_missing_string	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
""	*(char)
)	O
;	O
if	O
(	O
gs_data_missing_string	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
missing_string	*(struct(long,enum(int,int,int),*(char)))
=	O
gs_data_missing_string	*(struct(long,enum(int,int,int),*(char)))
;	O
gi_data_suppress_empty_ind	int
=	O
-	O
1	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
suppress_empty_ind	int
=	O
-	O
1	int
;	O
if	O
(	O
gs_output_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
c	int
=	O
getopt_long	(int,*(*(char)),*(char),*(struct(*(char),int,*(int),int)),*(int))->(int)
(	O
argc	int
,	O
argv	*(*(char))
,	O
short_options	*(char)
,	O
join_long_options	array(struct(*(char),int,*(int),int))
,	O
NULL	O
)	O
;	O
for	O
(	O
;	O
;	O
)	O
{	O
if	O
(	O
c	int
==	O
-	O
1	int
)	O
{	O
filecount	int
=	O
argc	int
-	O
optind	int
;	O
filenames	*(*(char))
=	O
argv	*(*(char))
+	O
optind	int
;	O
if	O
(	O
filecount	int
!=	O
2	int
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"join emulation requires exactly 2 input files."	*(char)
)	O
)	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
file_name	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
filenames	*(*(char))
[	O
0	int
]	O
)	O
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
gi_reference_file_count	int
-	O
1	int
]	O
.	O
file_name	*(char)
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
filecount	int
--	O
;	O
filenames	*(*(char))
++	O
;	O
break	O
;	O
}	O
else	O
switch	O
(	O
c	int
)	O
{	O
case	O
'1'	O
:	O
calculate_ranges	(*(char),*(*(struct(long,long,int,*(char)))),*(int),*(int))->(int)
(	O
optarg	*(char)
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
key_ranges	*(struct(long,long,int,*(char)))
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
key_end_start	int
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
key_range_count	int
)	O
)	O
;	O
break	O
;	O
case	O
'2'	O
:	O
calculate_ranges	(*(char),*(*(struct(long,long,int,*(char)))),*(int),*(int))->(int)
(	O
optarg	*(char)
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
data_key_ranges	*(struct(long,long,int,*(char)))
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
data_key_end_start	int
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
data_key_range_count	int
)	O
)	O
;	O
break	O
;	O
case	O
'a'	O
:	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
"1"	*(char)
,	O
optarg	*(char)
)	O
==	O
0	int
)	O
gi_data_optional_ind	int
=	O
-	O
1	int
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
"2"	*(char)
,	O
optarg	*(char)
)	O
==	O
0	int
)	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
optional_ind	int
=	O
-	O
1	int
;	O
else	O
FATAL_ERROR1	O
(	O
_	O
(	O
"file number for join -a must be 1 or 2.  Got %s"	*(char)
)	O
,	O
optarg	*(char)
)	O
;	O
break	O
;	O
case	O
'e'	O
:	O
gs_data_empty_string	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
optarg	*(char)
)	O
;	O
if	O
(	O
gs_data_empty_string	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
empty_string	*(struct(long,enum(int,int,int),*(char)))
=	O
gs_data_empty_string	*(struct(long,enum(int,int,int),*(char)))
;	O
gs_data_missing_string	*(struct(long,enum(int,int,int),*(char)))
=	O
gs_data_empty_string	*(struct(long,enum(int,int,int),*(char)))
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
missing_string	*(struct(long,enum(int,int,int),*(char)))
=	O
gs_data_empty_string	*(struct(long,enum(int,int,int),*(char)))
;	O
gi_data_input_field_delimiter_repeat	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
input_field_delimiter_repeat	int
=	O
0	int
;	O
break	O
;	O
case	O
'i'	O
:	O
break	O
;	O
case	O
'j'	O
:	O
calculate_ranges	(*(char),*(*(struct(long,long,int,*(char)))),*(int),*(int))->(int)
(	O
optarg	*(char)
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
key_ranges	*(struct(long,long,int,*(char)))
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
key_end_start	int
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
key_range_count	int
)	O
)	O
;	O
calculate_ranges	(*(char),*(*(struct(long,long,int,*(char)))),*(int),*(int))->(int)
(	O
optarg	*(char)
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
data_key_ranges	*(struct(long,long,int,*(char)))
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
data_key_end_start	int
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
data_key_range_count	int
)	O
)	O
;	O
break	O
;	O
case	O
'o'	O
:	O
temp_dstring	struct(long,enum(int,int,int),*(char))
.	O
string	*(char)
=	O
optarg	*(char)
;	O
temp_dstring	struct(long,enum(int,int,int),*(char))
.	O
length	long
=	O
strlen	(*(char))->(long)
(	O
optarg	*(char)
)	O
;	O
gra_data_output_field_order	*(struct(char,int,char,int))
=	O
parse_join_order_string	(*(struct(long,enum(int,int,int),*(char))),*(int))->(*(struct(char,int,char,int)))
(	O
&	O
temp_dstring	struct(long,enum(int,int,int),*(char))
,	O
&	O
gi_data_output_field_order_count	int
)	O
;	O
if	O
(	O
gra_data_output_field_order	*(struct(char,int,char,int))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to parse data output field order"	*(char)
)	O
)	O
;	O
break	O
;	O
case	O
't'	O
:	O
gs_data_input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
optarg	*(char)
)	O
;	O
if	O
(	O
gs_data_input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
optarg	*(char)
)	O
;	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
gs_output_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
=	O
dstrdupstr	(*(char))->(*(struct(long,enum(int,int,int),*(char))))
(	O
optarg	*(char)
)	O
;	O
if	O
(	O
gs_output_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
gi_data_input_field_delimiter_repeat	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
input_field_delimiter_repeat	int
=	O
0	int
;	O
break	O
;	O
case	O
'v'	O
:	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
"1"	*(char)
,	O
optarg	*(char)
)	O
==	O
0	int
)	O
{	O
gi_data_optional_ind	int
=	O
-	O
1	int
;	O
gi_data_exclude_match_ind	int
=	O
-	O
1	int
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
"2"	*(char)
,	O
optarg	*(char)
)	O
==	O
0	int
)	O
{	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
optional_ind	int
=	O
-	O
1	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
exclude_match_ind	int
=	O
-	O
1	int
;	O
}	O
else	O
FATAL_ERROR1	O
(	O
_	O
(	O
"file number for join -v must be 1 or 2.  Got %s"	*(char)
)	O
,	O
optarg	*(char)
)	O
;	O
break	O
;	O
case_GETOPT_HELP_CHAR	O
;	O
case_GETOPT_VERSION_CHAR	O
(	O
PROGRAM_NAME	*(char)
,	O
AUTHORS	*(char)
)	O
;	O
default	O
:	O
usage	(int)->(int)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
c	int
=	O
getopt_long	(int,*(*(char)),*(char),*(struct(*(char),int,*(int),int)),*(int))->(int)
(	O
argc	int
,	O
argv	*(*(char))
,	O
short_options	*(char)
,	O
join_long_options	array(struct(*(char),int,*(int),int))
,	O
NULL	O
)	O
;	O
}	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
key_range_count	int
==	O
0	int
&&	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
key_end_start	int
==	O
0	int
)	O
{	O
calculate_ranges	(*(char),*(*(struct(long,long,int,*(char)))),*(int),*(int))->(int)
(	O
"1"	*(char)
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
key_ranges	*(struct(long,long,int,*(char)))
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
key_end_start	int
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
key_range_count	int
)	O
)	O
;	O
}	O
if	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
data_key_range_count	int
==	O
0	int
&&	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
data_key_end_start	int
==	O
0	int
)	O
{	O
calculate_ranges	(*(char),*(*(struct(long,long,int,*(char)))),*(int),*(int))->(int)
(	O
"1"	*(char)
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
data_key_ranges	*(struct(long,long,int,*(char)))
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
data_key_end_start	int
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
data_key_range_count	int
)	O
)	O
;	O
}	O
if	O
(	O
gra_data_output_field_order	*(struct(char,int,char,int))
==	O
NULL	O
)	O
{	O
temp_dstring	struct(long,enum(int,int,int),*(char))
.	O
string	*(char)
=	O
"r1.o1,s0.o1,r1.o2-,d.o2-"	*(char)
;	O
temp_dstring	struct(long,enum(int,int,int),*(char))
.	O
length	long
=	O
strlen	(*(char))->(long)
(	O
temp_dstring	struct(long,enum(int,int,int),*(char))
.	O
string	*(char)
)	O
;	O
gra_data_output_field_order	*(struct(char,int,char,int))
=	O
parse_field_order_string	(*(struct(long,enum(int,int,int),*(char))),*(int))->(*(struct(char,int,char,int)))
(	O
&	O
temp_dstring	struct(long,enum(int,int,int),*(char))
,	O
&	O
gi_data_output_field_order_count	int
)	O
;	O
if	O
(	O
gra_data_output_field_order	*(struct(char,int,char,int))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to parse data output field order"	*(char)
)	O
)	O
;	O
}	O
max_data_field	long
=	O
0	int
;	O
max_ref_field	long
=	O
0	int
;	O
end_data_field	long
=	O
0	int
;	O
end_ref_field	long
=	O
0	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
gi_data_output_field_order_count	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source	char
==	O
'd'	O
&&	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type	char
==	O
'o'	O
&&	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
>	O
0	int
&&	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
>	O
max_data_field	long
)	O
max_data_field	long
=	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
;	O
if	O
(	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source	char
==	O
'r'	O
&&	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type	char
==	O
'o'	O
&&	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
>	O
0	int
&&	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
>	O
max_ref_field	long
)	O
max_ref_field	long
=	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
;	O
if	O
(	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source	char
==	O
'd'	O
&&	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type	char
==	O
'o'	O
&&	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
<	O
0	int
)	O
end_data_field	long
=	O
-	O
1	int
*	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
;	O
if	O
(	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source	char
==	O
'r'	O
&&	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type	char
==	O
'o'	O
&&	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
<	O
0	int
)	O
end_ref_field	long
=	O
-	O
1	int
*	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
;	O
if	O
(	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source	char
==	O
's'	O
&&	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source_num	int
==	O
0	int
&&	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type	char
==	O
'o'	O
&&	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
>	O
0	int
&&	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
>	O
max_data_field	long
)	O
max_data_field	long
=	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
;	O
if	O
(	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source	char
==	O
's'	O
&&	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source_num	int
==	O
1	int
&&	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type	char
==	O
'o'	O
&&	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
>	O
0	int
&&	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
>	O
max_ref_field	long
)	O
max_ref_field	long
=	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
;	O
}	O
if	O
(	O
max_data_field	long
>	O
0	int
&&	O
end_data_field	long
>	O
0	int
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
temp_string	array(char)
,	O
"1-%ld,%ld-"	*(char)
,	O
max_data_field	long
,	O
end_data_field	long
)	O
;	O
calculate_ranges	(*(char),*(*(struct(long,long,int,*(char)))),*(int),*(int))->(int)
(	O
temp_string	array(char)
,	O
&	O
(	O
gra_data_out_ranges	*(struct(long,long,int,*(char)))
)	O
,	O
&	O
(	O
gi_data_out_end_start	int
)	O
,	O
&	O
(	O
gi_data_out_range_count	int
)	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
gi_data_output_field_order_count	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source	char
==	O
'd'	O
&&	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type	char
==	O
'o'	O
&&	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
<	O
0	int
)	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
=	O
(	O
gi_data_out_range_count	int
+	O
1	int
)	O
;	O
}	O
}	O
else	O
if	O
(	O
max_data_field	long
>	O
0	int
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
temp_string	array(char)
,	O
"1-%ld"	*(char)
,	O
max_data_field	long
)	O
;	O
calculate_ranges	(*(char),*(*(struct(long,long,int,*(char)))),*(int),*(int))->(int)
(	O
temp_string	array(char)
,	O
&	O
(	O
gra_data_out_ranges	*(struct(long,long,int,*(char)))
)	O
,	O
&	O
(	O
gi_data_out_end_start	int
)	O
,	O
&	O
(	O
gi_data_out_range_count	int
)	O
)	O
;	O
}	O
else	O
{	O
gi_data_out_range_count	int
=	O
0	int
;	O
gi_data_out_end_start	int
=	O
0	int
;	O
}	O
if	O
(	O
max_ref_field	long
>	O
0	int
&&	O
end_ref_field	long
>	O
0	int
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
temp_string	array(char)
,	O
"1-%ld,%ld-"	*(char)
,	O
max_ref_field	long
,	O
end_ref_field	long
)	O
;	O
calculate_ranges	(*(char),*(*(struct(long,long,int,*(char)))),*(int),*(int))->(int)
(	O
temp_string	array(char)
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
out_ranges	*(struct(long,long,int,*(char)))
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
out_end_start	int
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
out_range_count	int
)	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
gi_data_output_field_order_count	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
source	char
==	O
'r'	O
&&	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type	char
==	O
'o'	O
&&	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
<	O
0	int
)	O
gra_data_output_field_order	*(struct(char,int,char,int))
[	O
i	int
]	O
.	O
type_num	int
=	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
out_range_count	int
+	O
1	int
)	O
;	O
}	O
}	O
else	O
if	O
(	O
max_ref_field	long
>	O
0	int
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
temp_string	array(char)
,	O
"1-%ld"	*(char)
,	O
max_ref_field	long
)	O
;	O
calculate_ranges	(*(char),*(*(struct(long,long,int,*(char)))),*(int),*(int))->(int)
(	O
temp_string	array(char)
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
out_ranges	*(struct(long,long,int,*(char)))
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
out_end_start	int
)	O
,	O
&	O
(	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
out_range_count	int
)	O
)	O
;	O
}	O
else	O
{	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
out_end_start	int
=	O
0	int
;	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
[	O
0	int
]	O
.	O
out_range_count	int
=	O
0	int
;	O
}	O
}	O
int	O
handle_arguments	(int,*(*(char)))->(int)
(	O
argc	int
,	O
argv	*(*(char))
)	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	*(*(char))
;	O
{	O
int	O
c	int
;	O
char	O
const	O
*	O
short_options	*(char)
=	O
COMMON_SHORT_OPTIONS	*(char)
;	O
version_etc_copyright	*(char)
=	O
"Copyright (C) 2002, 2003, 2004, 2013 Daniel P. Valentine"	*(char)
;	O
c	int
=	O
getopt_long	(int,*(*(char)),*(char),*(struct(*(char),int,*(int),int)),*(int))->(int)
(	O
argc	int
,	O
argv	*(*(char))
,	O
short_options	*(char)
,	O
long_options	array(struct(*(char),int,*(int),int))
,	O
NULL	O
)	O
;	O
if	O
(	O
c	int
==	O
'e'	O
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
optarg	*(char)
,	O
"join"	*(char)
)	O
==	O
0	int
)	O
handle_join_arguments	(int,*(*(char)))->(int)
(	O
argc	int
,	O
argv	*(*(char))
)	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
optarg	*(char)
,	O
"cut"	*(char)
)	O
==	O
0	int
)	O
handle_cut_arguments	(int,*(*(char)))->(int)
(	O
argc	int
,	O
argv	*(*(char))
)	O
;	O
else	O
FATAL_ERROR1	O
(	O
"unknown emulation requested: %s"	*(char)
,	O
optarg	*(char)
)	O
;	O
}	O
else	O
for	O
(	O
;	O
;	O
)	O
{	O
if	O
(	O
c	int
==	O
-	O
1	int
)	O
{	O
filecount	int
=	O
argc	int
-	O
optind	int
;	O
filenames	*(*(char))
=	O
argv	*(*(char))
+	O
optind	int
;	O
break	O
;	O
}	O
else	O
switch	O
(	O
c	int
)	O
{	O
case	O
0	int
:	O
break	O
;	O
case	O
'a'	O
:	O
case	O
'F'	O
:	O
case	O
'h'	O
:	O
case	O
'H'	O
:	O
case	O
'k'	O
:	O
case	O
'l'	O
:	O
case	O
'm'	O
:	O
case	O
'u'	O
:	O
case	O
'U'	O
:	O
assert_reference_file	(int)->(int)
(	O
c	int
)	O
;	O
set_reference_option	(int)->(int)
(	O
c	int
)	O
;	O
break	O
;	O
case	O
'B'	O
:	O
case	O
'D'	O
:	O
case	O
OPT_INPUT_DELIMITER_REPEAT	int
:	O
case	O
'K'	O
:	O
case	O
'L'	O
:	O
case	O
'o'	O
:	O
case	O
'O'	O
:	O
case	O
'p'	O
:	O
case	O
'P'	O
:	O
case	O
't'	O
:	O
case	O
'w'	O
:	O
set_file_option	(int)->(int)
(	O
c	int
)	O
;	O
break	O
;	O
case	O
'r'	O
:	O
set_reference_file	(*(char))->(int)
(	O
optarg	*(char)
)	O
;	O
break	O
;	O
case	O
'b'	O
:	O
case	O
'd'	O
:	O
case	O
'f'	O
:	O
case	O
'M'	O
:	O
case	O
'n'	O
:	O
case	O
'R'	O
:	O
case	O
OPT_NO_CHECK_ALL_REFERENCE	int
:	O
case	O
's'	O
:	O
case	O
'v'	O
:	O
case	O
'x'	O
:	O
case	O
'X'	O
:	O
case	O
'z'	O
:	O
case	O
OPT_STATISTICS	int
:	O
case	O
OPT_NO_STATISTICS	int
:	O
set_general_option	(int)->(int)
(	O
c	int
)	O
;	O
break	O
;	O
case_GETOPT_HELP_CHAR	O
;	O
case_GETOPT_VERSION_CHAR	O
(	O
PROGRAM_NAME	*(char)
,	O
AUTHORS	*(char)
)	O
;	O
default	O
:	O
usage	(int)->(int)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
c	int
=	O
getopt_long	(int,*(*(char)),*(char),*(struct(*(char),int,*(int),int)),*(int))->(int)
(	O
argc	int
,	O
argv	*(*(char))
,	O
short_options	*(char)
,	O
long_options	array(struct(*(char),int,*(int),int))
,	O
NULL	O
)	O
;	O
}	O
}	O
