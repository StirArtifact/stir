static	O
int	O
_asn1_get_indefinite_length_string	(*(char),int,*(int))->(int)
(	O
const	O
unsigned	O
char	O
*	O
der	*(char)
,	O
int	O
der_len	int
,	O
int	O
*	O
len	int
)	O
;	O
static	O
int	O
_asn1_decode_simple_ber	(int,*(char),int,*(*(char)),*(int),*(int),int)->(int)
(	O
unsigned	O
int	O
etype	*(int)
,	O
const	O
unsigned	O
char	O
*	O
der	*(char)
,	O
unsigned	O
int	O
_der_len	int
,	O
unsigned	O
char	O
*	O
*	O
str	*(*(char))
,	O
unsigned	O
int	O
*	O
str_len	*(int)
,	O
unsigned	O
int	O
*	O
ber_len	int
,	O
unsigned	O
dflags	int
)	O
;	O
static	O
int	O
_asn1_decode_simple_der	(int,*(char),int,*(*(char)),*(int),int)->(int)
(	O
unsigned	O
int	O
etype	*(int)
,	O
const	O
unsigned	O
char	O
*	O
der	*(char)
,	O
unsigned	O
int	O
_der_len	int
,	O
const	O
unsigned	O
char	O
*	O
*	O
str	*(*(char))
,	O
unsigned	O
int	O
*	O
str_len	*(int)
,	O
unsigned	O
dflags	int
)	O
;	O
static	O
void	O
_asn1_error_description_tag_error	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(char))->(void)
(	O
asn1_node	*(struct)
node	*(struct)
,	O
char	O
*	O
ErrorDescription	*(char)
)	O
{	O
Estrcpy	O
(	O
ErrorDescription	*(char)
,	O
":: tag error near element '"	*(char)
)	O
;	O
_asn1_hierarchical_name	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(char),int)->(void)
(	O
node	*(struct)
,	O
ErrorDescription	*(char)
+	O
strlen	(*(char))->(long)
(	O
ErrorDescription	*(char)
)	O
,	O
ASN1_MAX_ERROR_DESCRIPTION_SIZE	int
-	O
40	int
)	O
;	O
Estrcat	O
(	O
ErrorDescription	*(char)
,	O
"'"	*(char)
)	O
;	O
}	O
long	O
asn1_get_length_der	(*(char),int,*(int))->(long)
(	O
const	O
unsigned	O
char	O
*	O
der	*(char)
,	O
int	O
der_len	int
,	O
int	O
*	O
len	int
)	O
{	O
unsigned	O
int	O
ans	int
;	O
int	O
k	int
,	O
punt	int
,	O
sum	int
;	O
*	O
len	int
=	O
0	int
;	O
if	O
(	O
der_len	int
<=	O
0	int
)	O
return	O
0	int
;	O
if	O
(	O
!	O
(	O
der	*(char)
[	O
0	int
]	O
&	O
128	int
)	O
)	O
{	O
*	O
len	int
=	O
1	int
;	O
ans	int
=	O
der	*(char)
[	O
0	int
]	O
;	O
}	O
else	O
{	O
k	int
=	O
der	*(char)
[	O
0	int
]	O
&	O
0x7F	int
;	O
punt	int
=	O
1	int
;	O
if	O
(	O
k	int
)	O
{	O
ans	int
=	O
0	int
;	O
while	O
(	O
punt	int
<=	O
k	int
&&	O
punt	int
<	O
der_len	int
)	O
{	O
if	O
(	O
INT_MULTIPLY_OVERFLOW	O
(	O
ans	int
,	O
256	int
)	O
)	O
return	O
-	O
2	int
;	O
ans	int
*=	O
256	int
;	O
if	O
(	O
INT_ADD_OVERFLOW	O
(	O
ans	int
,	O
(	O
(	O
unsigned	O
)	O
der	*(char)
[	O
punt	int
]	O
)	O
)	O
)	O
return	O
-	O
2	int
;	O
ans	int
+=	O
der	*(char)
[	O
punt	int
]	O
;	O
punt	int
++	O
;	O
}	O
}	O
else	O
{	O
*	O
len	int
=	O
punt	int
;	O
return	O
-	O
1	int
;	O
}	O
*	O
len	int
=	O
punt	int
;	O
}	O
sum	int
=	O
ans	int
;	O
if	O
(	O
ans	int
>=	O
INT_MAX	O
||	O
INT_ADD_OVERFLOW	O
(	O
sum	int
,	O
(	O
*	O
len	int
)	O
)	O
)	O
return	O
-	O
2	int
;	O
sum	int
+=	O
*	O
len	int
;	O
if	O
(	O
sum	int
>	O
der_len	int
)	O
return	O
-	O
4	int
;	O
return	O
ans	int
;	O
}	O
int	O
asn1_get_tag_der	(*(char),int,*(char),*(int),*(long))->(int)
(	O
const	O
unsigned	O
char	O
*	O
der	*(char)
,	O
int	O
der_len	int
,	O
unsigned	O
char	O
*	O
cls	*(char)
,	O
int	O
*	O
len	int
,	O
unsigned	O
long	O
*	O
tag	*(long)
)	O
{	O
unsigned	O
int	O
ris	int
;	O
int	O
punt	int
;	O
if	O
(	O
der	*(char)
==	O
NULL	O
||	O
der_len	int
<	O
2	int
||	O
len	int
==	O
NULL	O
)	O
return	O
ASN1_DER_ERROR	int
;	O
*	O
cls	*(char)
=	O
der	*(char)
[	O
0	int
]	O
&	O
0xE0	int
;	O
if	O
(	O
(	O
der	*(char)
[	O
0	int
]	O
&	O
0x1F	int
)	O
!=	O
0x1F	int
)	O
{	O
*	O
len	int
=	O
1	int
;	O
ris	int
=	O
der	*(char)
[	O
0	int
]	O
&	O
0x1F	int
;	O
}	O
else	O
{	O
punt	int
=	O
1	int
;	O
ris	int
=	O
0	int
;	O
while	O
(	O
punt	int
<	O
der_len	int
&&	O
der	*(char)
[	O
punt	int
]	O
&	O
128	int
)	O
{	O
if	O
(	O
INT_MULTIPLY_OVERFLOW	O
(	O
ris	int
,	O
128	int
)	O
)	O
return	O
ASN1_DER_ERROR	int
;	O
ris	int
*=	O
128	int
;	O
if	O
(	O
INT_ADD_OVERFLOW	O
(	O
ris	int
,	O
(	O
(	O
unsigned	O
)	O
(	O
der	*(char)
[	O
punt	int
]	O
&	O
0x7F	int
)	O
)	O
)	O
)	O
return	O
ASN1_DER_ERROR	int
;	O
ris	int
+=	O
(	O
der	*(char)
[	O
punt	int
]	O
&	O
0x7F	int
)	O
;	O
punt	int
++	O
;	O
}	O
if	O
(	O
punt	int
>=	O
der_len	int
)	O
return	O
ASN1_DER_ERROR	int
;	O
if	O
(	O
INT_MULTIPLY_OVERFLOW	O
(	O
ris	int
,	O
128	int
)	O
)	O
return	O
ASN1_DER_ERROR	int
;	O
ris	int
*=	O
128	int
;	O
if	O
(	O
INT_ADD_OVERFLOW	O
(	O
ris	int
,	O
(	O
(	O
unsigned	O
)	O
(	O
der	*(char)
[	O
punt	int
]	O
&	O
0x7F	int
)	O
)	O
)	O
)	O
return	O
ASN1_DER_ERROR	int
;	O
ris	int
+=	O
(	O
der	*(char)
[	O
punt	int
]	O
&	O
0x7F	int
)	O
;	O
punt	int
++	O
;	O
*	O
len	int
=	O
punt	int
;	O
}	O
if	O
(	O
tag	*(long)
)	O
*	O
tag	*(long)
=	O
ris	int
;	O
return	O
ASN1_SUCCESS	int
;	O
}	O
long	O
asn1_get_length_ber	(*(char),int,*(int))->(long)
(	O
const	O
unsigned	O
char	O
*	O
ber	*(char)
,	O
int	O
ber_len	int
,	O
int	O
*	O
len	int
)	O
{	O
int	O
ret	*(void)
;	O
long	O
err	long
;	O
ret	*(void)
=	O
asn1_get_length_der	(*(char),int,*(int))->(long)
(	O
ber	*(char)
,	O
ber_len	int
,	O
len	int
)	O
;	O
if	O
(	O
ret	*(void)
==	O
-	O
1	int
&&	O
ber_len	int
>	O
1	int
)	O
{	O
err	long
=	O
_asn1_get_indefinite_length_string	(*(char),int,*(int))->(int)
(	O
ber	*(char)
+	O
1	int
,	O
ber_len	int
-	O
1	int
,	O
&	O
ret	*(void)
)	O
;	O
if	O
(	O
err	long
!=	O
ASN1_SUCCESS	int
)	O
return	O
-	O
3	int
;	O
}	O
return	O
ret	*(void)
;	O
}	O
int	O
asn1_get_octet_der	(*(char),int,*(int),*(char),int,*(int))->(int)
(	O
const	O
unsigned	O
char	O
*	O
der	*(char)
,	O
int	O
der_len	int
,	O
int	O
*	O
ret_len	*(int)
,	O
unsigned	O
char	O
*	O
str	*(*(char))
,	O
int	O
str_size	int
,	O
int	O
*	O
str_len	*(int)
)	O
{	O
int	O
len_len	int
=	O
0	int
;	O
if	O
(	O
der_len	int
<=	O
0	int
)	O
return	O
ASN1_GENERIC_ERROR	int
;	O
*	O
str_len	*(int)
=	O
asn1_get_length_der	(*(char),int,*(int))->(long)
(	O
der	*(char)
,	O
der_len	int
,	O
&	O
len_len	int
)	O
;	O
if	O
(	O
*	O
str_len	*(int)
<	O
0	int
)	O
return	O
ASN1_DER_ERROR	int
;	O
*	O
ret_len	*(int)
=	O
*	O
str_len	*(int)
+	O
len_len	int
;	O
if	O
(	O
str_size	int
>=	O
*	O
str_len	*(int)
)	O
{	O
if	O
(	O
*	O
str_len	*(int)
>	O
0	int
&&	O
str	*(*(char))
!=	O
NULL	O
)	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
str	*(*(char))
,	O
der	*(char)
+	O
len_len	int
,	O
*	O
str_len	*(int)
)	O
;	O
}	O
else	O
{	O
return	O
ASN1_MEM_ERROR	int
;	O
}	O
return	O
ASN1_SUCCESS	int
;	O
}	O
static	O
int	O
_asn1_get_time_der	(int,*(char),int,*(int),*(char),int,int)->(int)
(	O
unsigned	O
type	int
,	O
const	O
unsigned	O
char	O
*	O
der	*(char)
,	O
int	O
der_len	int
,	O
int	O
*	O
ret_len	*(int)
,	O
char	O
*	O
str	*(*(char))
,	O
int	O
str_size	int
,	O
unsigned	O
flags	int
)	O
{	O
int	O
len_len	int
,	O
str_len	*(int)
;	O
unsigned	O
i	int
;	O
unsigned	O
sign_count	int
=	O
0	int
;	O
unsigned	O
dot_count	int
=	O
0	int
;	O
const	O
unsigned	O
char	O
*	O
p	*(char)
;	O
if	O
(	O
der_len	int
<=	O
0	int
||	O
str	*(*(char))
==	O
NULL	O
)	O
return	O
ASN1_DER_ERROR	int
;	O
str_len	*(int)
=	O
asn1_get_length_der	(*(char),int,*(int))->(long)
(	O
der	*(char)
,	O
der_len	int
,	O
&	O
len_len	int
)	O
;	O
if	O
(	O
str_len	*(int)
<=	O
0	int
||	O
str_size	int
<	O
str_len	*(int)
)	O
return	O
ASN1_DER_ERROR	int
;	O
if	O
(	O
str_len	*(int)
<	O
8	int
)	O
{	O
warn	O
(	O
)	O
;	O
return	O
ASN1_TIME_ENCODING_ERROR	int
;	O
}	O
if	O
(	O
(	O
flags	int
&	O
ASN1_DECODE_FLAG_STRICT_DER	O
)	O
&&	O
!	O
(	O
flags	int
&	O
ASN1_DECODE_FLAG_ALLOW_INCORRECT_TIME	O
)	O
)	O
{	O
p	*(char)
=	O
&	O
der	*(char)
[	O
len_len	int
]	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
(	O
unsigned	O
)	O
(	O
str_len	*(int)
-	O
1	int
)	O
;	O
i	int
++	O
)	O
{	O
if	O
(	O
c_isdigit	(int)->(bool)
(	O
p	*(char)
[	O
i	int
]	O
)	O
==	O
0	int
)	O
{	O
if	O
(	O
type	int
==	O
ASN1_ETYPE_GENERALIZED_TIME	int
)	O
{	O
if	O
(	O
p	*(char)
[	O
i	int
]	O
==	O
'.'	O
&&	O
dot_count	int
==	O
0	int
)	O
{	O
dot_count	int
++	O
;	O
continue	O
;	O
}	O
if	O
(	O
!	O
(	O
flags	int
&	O
ASN1_DECODE_FLAG_STRICT_DER	O
)	O
&&	O
(	O
p	*(char)
[	O
i	int
]	O
==	O
'+'	O
||	O
p	*(char)
[	O
i	int
]	O
==	O
'-'	O
)	O
&&	O
sign_count	int
==	O
0	int
)	O
{	O
sign_count	int
++	O
;	O
continue	O
;	O
}	O
}	O
warn	O
(	O
)	O
;	O
return	O
ASN1_TIME_ENCODING_ERROR	int
;	O
}	O
}	O
if	O
(	O
sign_count	int
==	O
0	int
&&	O
p	*(char)
[	O
str_len	*(int)
-	O
1	int
]	O
!=	O
'Z'	O
)	O
{	O
warn	O
(	O
)	O
;	O
return	O
ASN1_TIME_ENCODING_ERROR	int
;	O
}	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
str	*(*(char))
,	O
der	*(char)
+	O
len_len	int
,	O
str_len	*(int)
)	O
;	O
str	*(*(char))
[	O
str_len	*(int)
]	O
=	O
0	int
;	O
*	O
ret_len	*(int)
=	O
str_len	*(int)
+	O
len_len	int
;	O
return	O
ASN1_SUCCESS	int
;	O
}	O
int	O
asn1_get_object_id_der	(*(char),int,*(int),*(char),int)->(int)
(	O
const	O
unsigned	O
char	O
*	O
der	*(char)
,	O
int	O
der_len	int
,	O
int	O
*	O
ret_len	*(int)
,	O
char	O
*	O
str	*(*(char))
,	O
int	O
str_size	int
)	O
{	O
int	O
len_len	int
,	O
len	int
,	O
k	int
;	O
int	O
leading	int
,	O
parsed	int
;	O
char	O
temp	array(char)
[	O
LTOSTR_MAX_SIZE	int
]	O
;	O
uint64_t	long
val	long
,	O
val1	long
,	O
val0	long
;	O
*	O
ret_len	*(int)
=	O
0	int
;	O
if	O
(	O
str	*(*(char))
&&	O
str_size	int
>	O
0	int
)	O
str	*(*(char))
[	O
0	int
]	O
=	O
0	int
;	O
if	O
(	O
str	*(*(char))
==	O
NULL	O
||	O
der_len	int
<=	O
0	int
)	O
return	O
ASN1_GENERIC_ERROR	int
;	O
len	int
=	O
asn1_get_length_der	(*(char),int,*(int))->(long)
(	O
der	*(char)
,	O
der_len	int
,	O
&	O
len_len	int
)	O
;	O
if	O
(	O
len	int
<=	O
0	int
||	O
len	int
+	O
len_len	int
>	O
der_len	int
)	O
return	O
ASN1_DER_ERROR	int
;	O
if	O
(	O
der	*(char)
[	O
len_len	int
]	O
==	O
0x80	int
)	O
return	O
ASN1_DER_ERROR	int
;	O
val0	long
=	O
0	int
;	O
for	O
(	O
k	int
=	O
0	int
;	O
k	int
<	O
len	int
;	O
k	int
++	O
)	O
{	O
if	O
(	O
INT_LEFT_SHIFT_OVERFLOW	O
(	O
val0	long
,	O
7	int
)	O
)	O
return	O
ASN1_DER_ERROR	int
;	O
val0	long
<<=	O
7	int
;	O
val0	long
|=	O
der	*(char)
[	O
len_len	int
+	O
k	int
]	O
&	O
0x7F	int
;	O
if	O
(	O
!	O
(	O
der	*(char)
[	O
len_len	int
+	O
k	int
]	O
&	O
0x80	int
)	O
)	O
break	O
;	O
}	O
parsed	int
=	O
++	O
k	int
;	O
val	long
=	O
0	int
;	O
val1	long
=	O
val0	long
;	O
if	O
(	O
val1	long
>	O
39	int
)	O
{	O
val	long
=	O
1	int
;	O
val1	long
=	O
val0	long
-	O
40	int
;	O
if	O
(	O
val1	long
>	O
39	int
)	O
{	O
val	long
=	O
2	int
;	O
val1	long
=	O
val0	long
-	O
80	int
;	O
}	O
}	O
_asn1_str_cpy	(*(char),long,*(char))->(int)
(	O
str	*(*(char))
,	O
str_size	int
,	O
_asn1_ltostr	(long,array(char))->(*(char))
(	O
val	long
,	O
temp	array(char)
)	O
)	O
;	O
_asn1_str_cat	(*(char),long,*(char))->(void)
(	O
str	*(*(char))
,	O
str_size	int
,	O
"."	*(char)
)	O
;	O
_asn1_str_cat	(*(char),long,*(char))->(void)
(	O
str	*(*(char))
,	O
str_size	int
,	O
_asn1_ltostr	(long,array(char))->(*(char))
(	O
val1	long
,	O
temp	array(char)
)	O
)	O
;	O
val	long
=	O
0	int
;	O
leading	int
=	O
1	int
;	O
for	O
(	O
k	int
=	O
parsed	int
;	O
k	int
<	O
len	int
;	O
k	int
++	O
)	O
{	O
if	O
(	O
leading	int
!=	O
0	int
&&	O
der	*(char)
[	O
len_len	int
+	O
k	int
]	O
==	O
0x80	int
)	O
return	O
ASN1_DER_ERROR	int
;	O
leading	int
=	O
0	int
;	O
if	O
(	O
INT_LEFT_SHIFT_OVERFLOW	O
(	O
val	long
,	O
7	int
)	O
)	O
return	O
ASN1_DER_ERROR	int
;	O
val	long
=	O
val	long
<<	O
7	int
;	O
val	long
|=	O
der	*(char)
[	O
len_len	int
+	O
k	int
]	O
&	O
0x7F	int
;	O
if	O
(	O
!	O
(	O
der	*(char)
[	O
len_len	int
+	O
k	int
]	O
&	O
0x80	int
)	O
)	O
{	O
_asn1_str_cat	(*(char),long,*(char))->(void)
(	O
str	*(*(char))
,	O
str_size	int
,	O
"."	*(char)
)	O
;	O
_asn1_str_cat	(*(char),long,*(char))->(void)
(	O
str	*(*(char))
,	O
str_size	int
,	O
_asn1_ltostr	(long,array(char))->(*(char))
(	O
val	long
,	O
temp	array(char)
)	O
)	O
;	O
val	long
=	O
0	int
;	O
leading	int
=	O
1	int
;	O
}	O
}	O
if	O
(	O
INT_ADD_OVERFLOW	O
(	O
len	int
,	O
len_len	int
)	O
)	O
return	O
ASN1_DER_ERROR	int
;	O
*	O
ret_len	*(int)
=	O
len	int
+	O
len_len	int
;	O
return	O
ASN1_SUCCESS	int
;	O
}	O
int	O
asn1_get_bit_der	(*(char),int,*(int),*(char),int,*(int))->(int)
(	O
const	O
unsigned	O
char	O
*	O
der	*(char)
,	O
int	O
der_len	int
,	O
int	O
*	O
ret_len	*(int)
,	O
unsigned	O
char	O
*	O
str	*(*(char))
,	O
int	O
str_size	int
,	O
int	O
*	O
bit_len	int
)	O
{	O
int	O
len_len	int
=	O
0	int
,	O
len_byte	int
;	O
if	O
(	O
der_len	int
<=	O
0	int
)	O
return	O
ASN1_GENERIC_ERROR	int
;	O
len_byte	int
=	O
asn1_get_length_der	(*(char),int,*(int))->(long)
(	O
der	*(char)
,	O
der_len	int
,	O
&	O
len_len	int
)	O
-	O
1	int
;	O
if	O
(	O
len_byte	int
<	O
0	int
)	O
return	O
ASN1_DER_ERROR	int
;	O
*	O
ret_len	*(int)
=	O
len_byte	int
+	O
len_len	int
+	O
1	int
;	O
*	O
bit_len	int
=	O
len_byte	int
*	O
8	int
-	O
der	*(char)
[	O
len_len	int
]	O
;	O
if	O
(	O
*	O
bit_len	int
<	O
0	int
)	O
return	O
ASN1_DER_ERROR	int
;	O
if	O
(	O
str_size	int
>=	O
len_byte	int
)	O
{	O
if	O
(	O
len_byte	int
>	O
0	int
&&	O
str	*(*(char))
)	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
str	*(*(char))
,	O
der	*(char)
+	O
len_len	int
+	O
1	int
,	O
len_byte	int
)	O
;	O
}	O
else	O
{	O
return	O
ASN1_MEM_ERROR	int
;	O
}	O
return	O
ASN1_SUCCESS	int
;	O
}	O
static	O
int	O
_asn1_extract_tag_der	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(char),int,*(int),*(int),int)->(int)
(	O
asn1_node	*(struct)
node	*(struct)
,	O
const	O
unsigned	O
char	O
*	O
der	*(char)
,	O
int	O
der_len	int
,	O
int	O
*	O
tag_len	*(int)
,	O
int	O
*	O
inner_tag_len	*(int)
,	O
unsigned	O
flags	int
)	O
{	O
asn1_node	*(struct)
p	*(char)
;	O
int	O
counter	int
,	O
len2	int
,	O
len3	int
,	O
is_tag_implicit	int
;	O
int	O
result	int
;	O
unsigned	O
long	O
tag	*(long)
,	O
tag_implicit	long
=	O
0	int
;	O
unsigned	O
char	O
class	int
,	O
class2	char
,	O
class_implicit	char
=	O
0	int
;	O
if	O
(	O
der_len	int
<=	O
0	int
)	O
return	O
ASN1_GENERIC_ERROR	int
;	O
counter	int
=	O
is_tag_implicit	int
=	O
0	int
;	O
if	O
(	O
node	*(struct)
->	O
type	int
&	O
CONST_TAG	O
)	O
{	O
p	*(char)
=	O
node	*(struct)
->	O
down	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
while	O
(	O
p	*(char)
)	O
{	O
if	O
(	O
type_field	(int)->(int)
(	O
p	*(char)
->	O
type	int
)	O
==	O
ASN1_ETYPE_TAG	int
)	O
{	O
if	O
(	O
p	*(char)
->	O
type	int
&	O
CONST_APPLICATION	O
)	O
class2	char
=	O
ASN1_CLASS_APPLICATION	int
;	O
else	O
if	O
(	O
p	*(char)
->	O
type	int
&	O
CONST_UNIVERSAL	O
)	O
class2	char
=	O
ASN1_CLASS_UNIVERSAL	int
;	O
else	O
if	O
(	O
p	*(char)
->	O
type	int
&	O
CONST_PRIVATE	O
)	O
class2	char
=	O
ASN1_CLASS_PRIVATE	int
;	O
else	O
class2	char
=	O
ASN1_CLASS_CONTEXT_SPECIFIC	int
;	O
if	O
(	O
p	*(char)
->	O
type	int
&	O
CONST_EXPLICIT	O
)	O
{	O
if	O
(	O
asn1_get_tag_der	(*(char),int,*(char),*(int),*(long))->(int)
(	O
der	*(char)
+	O
counter	int
,	O
der_len	int
,	O
&	O
class	int
,	O
&	O
len2	int
,	O
&	O
tag	*(long)
)	O
!=	O
ASN1_SUCCESS	int
)	O
return	O
ASN1_DER_ERROR	int
;	O
DECR_LEN	O
(	O
der_len	int
,	O
len2	int
)	O
;	O
counter	int
+=	O
len2	int
;	O
if	O
(	O
flags	int
&	O
ASN1_DECODE_FLAG_STRICT_DER	O
)	O
len3	int
=	O
asn1_get_length_der	(*(char),int,*(int))->(long)
(	O
der	*(char)
+	O
counter	int
,	O
der_len	int
,	O
&	O
len2	int
)	O
;	O
else	O
len3	int
=	O
asn1_get_length_ber	(*(char),int,*(int))->(long)
(	O
der	*(char)
+	O
counter	int
,	O
der_len	int
,	O
&	O
len2	int
)	O
;	O
if	O
(	O
len3	int
<	O
0	int
)	O
return	O
ASN1_DER_ERROR	int
;	O
DECR_LEN	O
(	O
der_len	int
,	O
len2	int
)	O
;	O
counter	int
+=	O
len2	int
;	O
if	O
(	O
!	O
is_tag_implicit	int
)	O
{	O
if	O
(	O
(	O
class	int
!=	O
(	O
class2	char
|	O
ASN1_CLASS_STRUCTURED	int
)	O
)	O
||	O
(	O
tag	*(long)
!=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
(	O
char	O
*	O
)	O
p	*(char)
->	O
value	*(void)
,	O
NULL	O
,	O
10	int
)	O
)	O
)	O
return	O
ASN1_TAG_ERROR	int
;	O
}	O
else	O
{	O
if	O
(	O
(	O
class	int
!=	O
class_implicit	char
)	O
||	O
(	O
tag	*(long)
!=	O
tag_implicit	long
)	O
)	O
return	O
ASN1_TAG_ERROR	int
;	O
}	O
is_tag_implicit	int
=	O
0	int
;	O
}	O
else	O
{	O
if	O
(	O
!	O
is_tag_implicit	int
)	O
{	O
if	O
(	O
(	O
type_field	(int)->(int)
(	O
node	*(struct)
->	O
type	int
)	O
==	O
ASN1_ETYPE_SEQUENCE	int
)	O
||	O
(	O
type_field	(int)->(int)
(	O
node	*(struct)
->	O
type	int
)	O
==	O
ASN1_ETYPE_SEQUENCE_OF	int
)	O
||	O
(	O
type_field	(int)->(int)
(	O
node	*(struct)
->	O
type	int
)	O
==	O
ASN1_ETYPE_SET	int
)	O
||	O
(	O
type_field	(int)->(int)
(	O
node	*(struct)
->	O
type	int
)	O
==	O
ASN1_ETYPE_SET_OF	int
)	O
)	O
class2	char
|=	O
ASN1_CLASS_STRUCTURED	int
;	O
class_implicit	char
=	O
class2	char
;	O
tag_implicit	long
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
(	O
char	O
*	O
)	O
p	*(char)
->	O
value	*(void)
,	O
NULL	O
,	O
10	int
)	O
;	O
is_tag_implicit	int
=	O
1	int
;	O
}	O
}	O
}	O
p	*(char)
=	O
p	*(char)
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
}	O
}	O
if	O
(	O
is_tag_implicit	int
)	O
{	O
if	O
(	O
asn1_get_tag_der	(*(char),int,*(char),*(int),*(long))->(int)
(	O
der	*(char)
+	O
counter	int
,	O
der_len	int
,	O
&	O
class	int
,	O
&	O
len2	int
,	O
&	O
tag	*(long)
)	O
!=	O
ASN1_SUCCESS	int
)	O
return	O
ASN1_DER_ERROR	int
;	O
DECR_LEN	O
(	O
der_len	int
,	O
len2	int
)	O
;	O
if	O
(	O
(	O
class	int
!=	O
class_implicit	char
)	O
||	O
(	O
tag	*(long)
!=	O
tag_implicit	long
)	O
)	O
{	O
if	O
(	O
type_field	(int)->(int)
(	O
node	*(struct)
->	O
type	int
)	O
==	O
ASN1_ETYPE_OCTET_STRING	int
)	O
{	O
class_implicit	char
|=	O
ASN1_CLASS_STRUCTURED	int
;	O
if	O
(	O
(	O
class	int
!=	O
class_implicit	char
)	O
||	O
(	O
tag	*(long)
!=	O
tag_implicit	long
)	O
)	O
return	O
ASN1_TAG_ERROR	int
;	O
}	O
else	O
return	O
ASN1_TAG_ERROR	int
;	O
}	O
}	O
else	O
{	O
unsigned	O
type	int
=	O
type_field	(int)->(int)
(	O
node	*(struct)
->	O
type	int
)	O
;	O
if	O
(	O
type	int
==	O
ASN1_ETYPE_TAG	int
)	O
{	O
*	O
tag_len	*(int)
=	O
0	int
;	O
if	O
(	O
inner_tag_len	*(int)
)	O
*	O
inner_tag_len	*(int)
=	O
0	int
;	O
return	O
ASN1_SUCCESS	int
;	O
}	O
if	O
(	O
asn1_get_tag_der	(*(char),int,*(char),*(int),*(long))->(int)
(	O
der	*(char)
+	O
counter	int
,	O
der_len	int
,	O
&	O
class	int
,	O
&	O
len2	int
,	O
&	O
tag	*(long)
)	O
!=	O
ASN1_SUCCESS	int
)	O
return	O
ASN1_DER_ERROR	int
;	O
DECR_LEN	O
(	O
der_len	int
,	O
len2	int
)	O
;	O
switch	O
(	O
type	int
)	O
{	O
case	O
ASN1_ETYPE_NULL	int
:	O
case	O
ASN1_ETYPE_BOOLEAN	int
:	O
case	O
ASN1_ETYPE_INTEGER	int
:	O
case	O
ASN1_ETYPE_ENUMERATED	int
:	O
case	O
ASN1_ETYPE_OBJECT_ID	int
:	O
case	O
ASN1_ETYPE_GENERALSTRING	int
:	O
case	O
ASN1_ETYPE_NUMERIC_STRING	int
:	O
case	O
ASN1_ETYPE_IA5_STRING	int
:	O
case	O
ASN1_ETYPE_TELETEX_STRING	int
:	O
case	O
ASN1_ETYPE_PRINTABLE_STRING	int
:	O
case	O
ASN1_ETYPE_UNIVERSAL_STRING	int
:	O
case	O
ASN1_ETYPE_BMP_STRING	int
:	O
case	O
ASN1_ETYPE_UTF8_STRING	int
:	O
case	O
ASN1_ETYPE_VISIBLE_STRING	int
:	O
case	O
ASN1_ETYPE_BIT_STRING	int
:	O
case	O
ASN1_ETYPE_SEQUENCE	int
:	O
case	O
ASN1_ETYPE_SEQUENCE_OF	int
:	O
case	O
ASN1_ETYPE_SET	int
:	O
case	O
ASN1_ETYPE_SET_OF	int
:	O
case	O
ASN1_ETYPE_GENERALIZED_TIME	int
:	O
case	O
ASN1_ETYPE_UTC_TIME	int
:	O
if	O
(	O
(	O
class	int
!=	O
_asn1_tags	array(struct(int,int,*(char)))
[	O
type	int
]	O
.	O
class	int
)	O
||	O
(	O
tag	*(long)
!=	O
_asn1_tags	array(struct(int,int,*(char)))
[	O
type	int
]	O
.	O
tag	*(long)
)	O
)	O
return	O
ASN1_DER_ERROR	int
;	O
break	O
;	O
case	O
ASN1_ETYPE_OCTET_STRING	int
:	O
if	O
(	O
(	O
(	O
class	int
!=	O
ASN1_CLASS_UNIVERSAL	int
)	O
&&	O
(	O
class	int
!=	O
(	O
ASN1_CLASS_UNIVERSAL	int
|	O
ASN1_CLASS_STRUCTURED	int
)	O
)	O
)	O
||	O
(	O
tag	*(long)
!=	O
ASN1_TAG_OCTET_STRING	int
)	O
)	O
return	O
ASN1_DER_ERROR	int
;	O
break	O
;	O
case	O
ASN1_ETYPE_ANY	int
:	O
counter	int
-=	O
len2	int
;	O
break	O
;	O
case	O
ASN1_ETYPE_CHOICE	int
:	O
counter	int
-=	O
len2	int
;	O
break	O
;	O
default	O
:	O
return	O
ASN1_DER_ERROR	int
;	O
break	O
;	O
}	O
}	O
counter	int
+=	O
len2	int
;	O
*	O
tag_len	*(int)
=	O
counter	int
;	O
if	O
(	O
inner_tag_len	*(int)
)	O
*	O
inner_tag_len	*(int)
=	O
len2	int
;	O
return	O
ASN1_SUCCESS	int
;	O
cleanup	O
:	O
return	O
result	int
;	O
}	O
static	O
int	O
extract_tag_der_recursive	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(char),int,*(int),*(int),int)->(int)
(	O
asn1_node	*(struct)
node	*(struct)
,	O
const	O
unsigned	O
char	O
*	O
der	*(char)
,	O
int	O
der_len	int
,	O
int	O
*	O
ret_len	*(int)
,	O
int	O
*	O
inner_len	*(int)
,	O
unsigned	O
flags	int
)	O
{	O
asn1_node	*(struct)
p	*(char)
;	O
int	O
ris	int
=	O
ASN1_DER_ERROR	int
;	O
if	O
(	O
type_field	(int)->(int)
(	O
node	*(struct)
->	O
type	int
)	O
==	O
ASN1_ETYPE_CHOICE	int
)	O
{	O
p	*(char)
=	O
node	*(struct)
->	O
down	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
while	O
(	O
p	*(char)
)	O
{	O
ris	int
=	O
_asn1_extract_tag_der	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(char),int,*(int),*(int),int)->(int)
(	O
p	*(char)
,	O
der	*(char)
,	O
der_len	int
,	O
ret_len	*(int)
,	O
inner_len	*(int)
,	O
flags	int
)	O
;	O
if	O
(	O
ris	int
==	O
ASN1_SUCCESS	int
)	O
break	O
;	O
p	*(char)
=	O
p	*(char)
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
}	O
*	O
ret_len	*(int)
=	O
0	int
;	O
return	O
ris	int
;	O
}	O
else	O
return	O
_asn1_extract_tag_der	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(char),int,*(int),*(int),int)->(int)
(	O
node	*(struct)
,	O
der	*(char)
,	O
der_len	int
,	O
ret_len	*(int)
,	O
inner_len	*(int)
,	O
flags	int
)	O
;	O
}	O
static	O
int	O
_asn1_delete_not_used	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))->(int)
(	O
asn1_node	*(struct)
node	*(struct)
)	O
{	O
asn1_node	*(struct)
p	*(char)
,	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
if	O
(	O
node	*(struct)
==	O
NULL	O
)	O
return	O
ASN1_ELEMENT_NOT_FOUND	int
;	O
p	*(char)
=	O
node	*(struct)
;	O
while	O
(	O
p	*(char)
)	O
{	O
if	O
(	O
p	*(char)
->	O
type	int
&	O
CONST_NOT_USED	O
)	O
{	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
NULL	O
;	O
if	O
(	O
p	*(char)
!=	O
node	*(struct)
)	O
{	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
_asn1_find_left	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
p	*(char)
)	O
;	O
if	O
(	O
!	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
_asn1_find_up	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
p	*(char)
)	O
;	O
}	O
asn1_delete_structure	(*(*(struct)))->(int)
(	O
&	O
p	*(char)
)	O
;	O
p	*(char)
=	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
}	O
if	O
(	O
!	O
p	*(char)
)	O
break	O
;	O
if	O
(	O
p	*(char)
->	O
down	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
{	O
p	*(char)
=	O
p	*(char)
->	O
down	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
}	O
else	O
{	O
if	O
(	O
p	*(char)
==	O
node	*(struct)
)	O
p	*(char)
=	O
NULL	O
;	O
else	O
if	O
(	O
p	*(char)
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
p	*(char)
=	O
p	*(char)
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
else	O
{	O
while	O
(	O
1	int
)	O
{	O
p	*(char)
=	O
_asn1_find_up	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
p	*(char)
)	O
;	O
if	O
(	O
p	*(char)
==	O
node	*(struct)
)	O
{	O
p	*(char)
=	O
NULL	O
;	O
break	O
;	O
}	O
if	O
(	O
p	*(char)
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
{	O
p	*(char)
=	O
p	*(char)
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
break	O
;	O
}	O
}	O
}	O
}	O
}	O
return	O
ASN1_SUCCESS	int
;	O
}	O
static	O
int	O
_asn1_get_indefinite_length_string	(*(char),int,*(int))->(int)
(	O
const	O
unsigned	O
char	O
*	O
der	*(char)
,	O
int	O
der_len	int
,	O
int	O
*	O
len	int
)	O
{	O
int	O
len2	int
,	O
len3	int
,	O
counter	int
,	O
indefinite	int
;	O
int	O
result	int
;	O
unsigned	O
long	O
tag	*(long)
;	O
unsigned	O
char	O
class	int
;	O
counter	int
=	O
indefinite	int
=	O
0	int
;	O
while	O
(	O
1	int
)	O
{	O
if	O
(	O
HAVE_TWO	O
(	O
der_len	int
)	O
&&	O
(	O
der	*(char)
[	O
counter	int
]	O
==	O
0	int
)	O
&&	O
(	O
der	*(char)
[	O
counter	int
+	O
1	int
]	O
==	O
0	int
)	O
)	O
{	O
counter	int
+=	O
2	int
;	O
DECR_LEN	O
(	O
der_len	int
,	O
2	int
)	O
;	O
indefinite	int
--	O
;	O
if	O
(	O
indefinite	int
<=	O
0	int
)	O
break	O
;	O
else	O
continue	O
;	O
}	O
if	O
(	O
asn1_get_tag_der	(*(char),int,*(char),*(int),*(long))->(int)
(	O
der	*(char)
+	O
counter	int
,	O
der_len	int
,	O
&	O
class	int
,	O
&	O
len2	int
,	O
&	O
tag	*(long)
)	O
!=	O
ASN1_SUCCESS	int
)	O
return	O
ASN1_DER_ERROR	int
;	O
DECR_LEN	O
(	O
der_len	int
,	O
len2	int
)	O
;	O
counter	int
+=	O
len2	int
;	O
len2	int
=	O
asn1_get_length_der	(*(char),int,*(int))->(long)
(	O
der	*(char)
+	O
counter	int
,	O
der_len	int
,	O
&	O
len3	int
)	O
;	O
if	O
(	O
len2	int
<	O
-	O
1	int
)	O
return	O
ASN1_DER_ERROR	int
;	O
if	O
(	O
len2	int
==	O
-	O
1	int
)	O
{	O
indefinite	int
++	O
;	O
counter	int
+=	O
1	int
;	O
DECR_LEN	O
(	O
der_len	int
,	O
1	int
)	O
;	O
}	O
else	O
{	O
counter	int
+=	O
len2	int
+	O
len3	int
;	O
DECR_LEN	O
(	O
der_len	int
,	O
len2	int
+	O
len3	int
)	O
;	O
}	O
}	O
*	O
len	int
=	O
counter	int
;	O
return	O
ASN1_SUCCESS	int
;	O
cleanup	O
:	O
return	O
result	int
;	O
}	O
static	O
void	O
delete_unneeded_choice_fields	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))->(void)
(	O
asn1_node	*(struct)
p	*(char)
)	O
{	O
asn1_node	*(struct)
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
while	O
(	O
p	*(char)
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
{	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
p	*(char)
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
asn1_delete_structure	(*(*(struct)))->(int)
(	O
&	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
;	O
}	O
}	O
int	O
asn1_der_decoding2	(*(*(struct)),*(void),*(int),int,*(char))->(int)
(	O
asn1_node	*(struct)
*	O
element	*(*(struct))
,	O
const	O
void	O
*	O
ider	*(void)
,	O
int	O
*	O
max_ider_len	*(int)
,	O
unsigned	O
int	O
flags	int
,	O
char	O
*	O
errorDescription	*(char)
)	O
{	O
asn1_node	*(struct)
node	*(struct)
,	O
p	*(char)
,	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
,	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
char	O
temp	array(char)
[	O
128	int
]	O
;	O
int	O
counter	int
,	O
len2	int
,	O
len3	int
,	O
len4	int
,	O
move	int
,	O
ris	int
,	O
tlen	int
;	O
struct	O
node_tail_cache_st	struct(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int)))
tcache	struct(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
=	O
{	O
NULL	O
,	O
NULL	O
}	O
;	O
unsigned	O
char	O
class	int
;	O
unsigned	O
long	O
tag	*(long)
;	O
int	O
tag_len	*(int)
;	O
int	O
indefinite	int
,	O
result	int
,	O
total_len	int
=	O
*	O
max_ider_len	*(int)
,	O
ider_len	int
=	O
*	O
max_ider_len	*(int)
;	O
int	O
inner_tag_len	*(int)
;	O
unsigned	O
char	O
*	O
ptmp	*(char)
;	O
const	O
unsigned	O
char	O
*	O
ptag	*(char)
;	O
const	O
unsigned	O
char	O
*	O
der	*(char)
=	O
ider	*(void)
;	O
node	*(struct)
=	O
*	O
element	*(*(struct))
;	O
if	O
(	O
errorDescription	*(char)
!=	O
NULL	O
)	O
errorDescription	*(char)
[	O
0	int
]	O
=	O
0	int
;	O
if	O
(	O
node	*(struct)
==	O
NULL	O
)	O
return	O
ASN1_ELEMENT_NOT_FOUND	int
;	O
if	O
(	O
node	*(struct)
->	O
type	int
&	O
CONST_OPTION	O
)	O
{	O
result	int
=	O
ASN1_GENERIC_ERROR	int
;	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
counter	int
=	O
0	int
;	O
move	int
=	O
DOWN	int
;	O
p	*(char)
=	O
node	*(struct)
;	O
while	O
(	O
1	int
)	O
{	O
tag_len	*(int)
=	O
0	int
;	O
inner_tag_len	*(int)
=	O
0	int
;	O
ris	int
=	O
ASN1_SUCCESS	int
;	O
if	O
(	O
move	int
!=	O
UP	int
)	O
{	O
if	O
(	O
p	*(char)
->	O
type	int
&	O
CONST_SET	O
)	O
{	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
_asn1_find_up	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
p	*(char)
)	O
;	O
len2	int
=	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
tmp_ival	int
;	O
if	O
(	O
len2	int
==	O
-	O
1	int
)	O
{	O
if	O
(	O
HAVE_TWO	O
(	O
ider_len	int
)	O
&&	O
!	O
der	*(char)
[	O
counter	int
]	O
&&	O
!	O
der	*(char)
[	O
counter	int
+	O
1	int
]	O
)	O
{	O
p	*(char)
=	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
move	int
=	O
UP	int
;	O
counter	int
+=	O
2	int
;	O
DECR_LEN	O
(	O
ider_len	int
,	O
2	int
)	O
;	O
continue	O
;	O
}	O
}	O
else	O
if	O
(	O
counter	int
==	O
len2	int
)	O
{	O
p	*(char)
=	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
move	int
=	O
UP	int
;	O
continue	O
;	O
}	O
else	O
if	O
(	O
counter	int
>	O
len2	int
)	O
{	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
down	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
while	O
(	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
{	O
if	O
(	O
(	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
type	int
&	O
CONST_SET	O
)	O
&&	O
(	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
type	int
&	O
CONST_NOT_USED	O
)	O
)	O
{	O
ris	int
=	O
extract_tag_der_recursive	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(char),int,*(int),*(int),int)->(int)
(	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
,	O
der	*(char)
+	O
counter	int
,	O
ider_len	int
,	O
&	O
len2	int
,	O
NULL	O
,	O
flags	int
)	O
;	O
if	O
(	O
ris	int
==	O
ASN1_SUCCESS	int
)	O
{	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
type	int
&=	O
~	O
CONST_NOT_USED	O
;	O
p	*(char)
=	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
break	O
;	O
}	O
}	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
}	O
if	O
(	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
==	O
NULL	O
)	O
{	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
}	O
p	*(char)
->	O
start	*(int)
=	O
counter	int
;	O
p	*(char)
->	O
end	*(int)
=	O
total_len	int
-	O
1	int
;	O
if	O
(	O
(	O
p	*(char)
->	O
type	int
&	O
CONST_OPTION	O
)	O
||	O
(	O
p	*(char)
->	O
type	int
&	O
CONST_DEFAULT	O
)	O
)	O
{	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
_asn1_find_up	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
p	*(char)
)	O
;	O
len2	int
=	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
tmp_ival	int
;	O
if	O
(	O
counter	int
==	O
len2	int
)	O
{	O
if	O
(	O
p	*(char)
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
{	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
p	*(char)
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
move	int
=	O
RIGHT	int
;	O
}	O
else	O
move	int
=	O
UP	int
;	O
if	O
(	O
p	*(char)
->	O
type	int
&	O
CONST_OPTION	O
)	O
asn1_delete_structure	(*(*(struct)))->(int)
(	O
&	O
p	*(char)
)	O
;	O
p	*(char)
=	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
continue	O
;	O
}	O
}	O
if	O
(	O
type_field	(int)->(int)
(	O
p	*(char)
->	O
type	int
)	O
==	O
ASN1_ETYPE_CHOICE	int
)	O
{	O
while	O
(	O
p	*(char)
->	O
down	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
{	O
ris	int
=	O
extract_tag_der_recursive	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(char),int,*(int),*(int),int)->(int)
(	O
p	*(char)
->	O
down	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
,	O
der	*(char)
+	O
counter	int
,	O
ider_len	int
,	O
&	O
len2	int
,	O
NULL	O
,	O
flags	int
)	O
;	O
if	O
(	O
ris	int
==	O
ASN1_SUCCESS	int
)	O
{	O
delete_unneeded_choice_fields	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))->(void)
(	O
p	*(char)
->	O
down	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
;	O
break	O
;	O
}	O
else	O
if	O
(	O
ris	int
==	O
ASN1_ERROR_TYPE_ANY	int
)	O
{	O
result	int
=	O
ASN1_ERROR_TYPE_ANY	int
;	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
else	O
{	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
p	*(char)
->	O
down	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
asn1_delete_structure	(*(*(struct)))->(int)
(	O
&	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
;	O
}	O
}	O
if	O
(	O
p	*(char)
->	O
down	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
==	O
NULL	O
)	O
{	O
if	O
(	O
!	O
(	O
p	*(char)
->	O
type	int
&	O
CONST_OPTION	O
)	O
)	O
{	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
}	O
else	O
if	O
(	O
type_field	(int)->(int)
(	O
p	*(char)
->	O
type	int
)	O
!=	O
ASN1_ETYPE_CHOICE	int
)	O
p	*(char)
=	O
p	*(char)
->	O
down	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
p	*(char)
->	O
start	*(int)
=	O
counter	int
;	O
}	O
if	O
(	O
(	O
p	*(char)
->	O
type	int
&	O
CONST_OPTION	O
)	O
||	O
(	O
p	*(char)
->	O
type	int
&	O
CONST_DEFAULT	O
)	O
)	O
{	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
_asn1_find_up	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
p	*(char)
)	O
;	O
len2	int
=	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
tmp_ival	int
;	O
if	O
(	O
(	O
len2	int
!=	O
-	O
1	int
)	O
&&	O
(	O
counter	int
>	O
len2	int
)	O
)	O
ris	int
=	O
ASN1_TAG_ERROR	int
;	O
}	O
if	O
(	O
ris	int
==	O
ASN1_SUCCESS	int
)	O
ris	int
=	O
extract_tag_der_recursive	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(char),int,*(int),*(int),int)->(int)
(	O
p	*(char)
,	O
der	*(char)
+	O
counter	int
,	O
ider_len	int
,	O
&	O
tag_len	*(int)
,	O
&	O
inner_tag_len	*(int)
,	O
flags	int
)	O
;	O
if	O
(	O
ris	int
!=	O
ASN1_SUCCESS	int
)	O
{	O
if	O
(	O
p	*(char)
->	O
type	int
&	O
CONST_OPTION	O
)	O
{	O
p	*(char)
->	O
type	int
|=	O
CONST_NOT_USED	O
;	O
move	int
=	O
RIGHT	int
;	O
}	O
else	O
if	O
(	O
p	*(char)
->	O
type	int
&	O
CONST_DEFAULT	O
)	O
{	O
_asn1_set_value	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(void),int)->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
p	*(char)
,	O
NULL	O
,	O
0	int
)	O
;	O
move	int
=	O
RIGHT	int
;	O
}	O
else	O
{	O
if	O
(	O
errorDescription	*(char)
!=	O
NULL	O
)	O
_asn1_error_description_tag_error	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(char))->(void)
(	O
p	*(char)
,	O
errorDescription	*(char)
)	O
;	O
result	int
=	O
ASN1_TAG_ERROR	int
;	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
}	O
else	O
{	O
DECR_LEN	O
(	O
ider_len	int
,	O
tag_len	*(int)
)	O
;	O
counter	int
+=	O
tag_len	*(int)
;	O
}	O
}	O
if	O
(	O
ris	int
==	O
ASN1_SUCCESS	int
)	O
{	O
switch	O
(	O
type_field	(int)->(int)
(	O
p	*(char)
->	O
type	int
)	O
)	O
{	O
case	O
ASN1_ETYPE_NULL	int
:	O
DECR_LEN	O
(	O
ider_len	int
,	O
1	int
)	O
;	O
if	O
(	O
der	*(char)
[	O
counter	int
]	O
)	O
{	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
counter	int
++	O
;	O
move	int
=	O
RIGHT	int
;	O
break	O
;	O
case	O
ASN1_ETYPE_BOOLEAN	int
:	O
DECR_LEN	O
(	O
ider_len	int
,	O
2	int
)	O
;	O
if	O
(	O
der	*(char)
[	O
counter	int
++	O
]	O
!=	O
1	int
)	O
{	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
if	O
(	O
der	*(char)
[	O
counter	int
++	O
]	O
==	O
0	int
)	O
_asn1_set_value	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(void),int)->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
p	*(char)
,	O
"F"	*(char)
,	O
1	int
)	O
;	O
else	O
_asn1_set_value	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(void),int)->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
p	*(char)
,	O
"T"	*(char)
,	O
1	int
)	O
;	O
move	int
=	O
RIGHT	int
;	O
break	O
;	O
case	O
ASN1_ETYPE_INTEGER	int
:	O
case	O
ASN1_ETYPE_ENUMERATED	int
:	O
len2	int
=	O
asn1_get_length_der	(*(char),int,*(int))->(long)
(	O
der	*(char)
+	O
counter	int
,	O
ider_len	int
,	O
&	O
len3	int
)	O
;	O
if	O
(	O
len2	int
<	O
0	int
)	O
{	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
DECR_LEN	O
(	O
ider_len	int
,	O
len3	int
+	O
len2	int
)	O
;	O
_asn1_set_value	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(void),int)->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
p	*(char)
,	O
der	*(char)
+	O
counter	int
,	O
len3	int
+	O
len2	int
)	O
;	O
counter	int
+=	O
len3	int
+	O
len2	int
;	O
move	int
=	O
RIGHT	int
;	O
break	O
;	O
case	O
ASN1_ETYPE_OBJECT_ID	int
:	O
result	int
=	O
asn1_get_object_id_der	(*(char),int,*(int),*(char),int)->(int)
(	O
der	*(char)
+	O
counter	int
,	O
ider_len	int
,	O
&	O
len2	int
,	O
temp	array(char)
,	O
sizeof	O
(	O
temp	array(char)
)	O
)	O
;	O
if	O
(	O
result	int
!=	O
ASN1_SUCCESS	int
)	O
{	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
DECR_LEN	O
(	O
ider_len	int
,	O
len2	int
)	O
;	O
tlen	int
=	O
strlen	(*(char))->(long)
(	O
temp	array(char)
)	O
;	O
if	O
(	O
tlen	int
>	O
0	int
)	O
_asn1_set_value	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(void),int)->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
p	*(char)
,	O
temp	array(char)
,	O
tlen	int
+	O
1	int
)	O
;	O
counter	int
+=	O
len2	int
;	O
move	int
=	O
RIGHT	int
;	O
break	O
;	O
case	O
ASN1_ETYPE_GENERALIZED_TIME	int
:	O
case	O
ASN1_ETYPE_UTC_TIME	int
:	O
result	int
=	O
_asn1_get_time_der	(int,*(char),int,*(int),*(char),int,int)->(int)
(	O
type_field	(int)->(int)
(	O
p	*(char)
->	O
type	int
)	O
,	O
der	*(char)
+	O
counter	int
,	O
ider_len	int
,	O
&	O
len2	int
,	O
temp	array(char)
,	O
sizeof	O
(	O
temp	array(char)
)	O
-	O
1	int
,	O
flags	int
)	O
;	O
if	O
(	O
result	int
!=	O
ASN1_SUCCESS	int
)	O
{	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
DECR_LEN	O
(	O
ider_len	int
,	O
len2	int
)	O
;	O
tlen	int
=	O
strlen	(*(char))->(long)
(	O
temp	array(char)
)	O
;	O
if	O
(	O
tlen	int
>	O
0	int
)	O
_asn1_set_value	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(void),int)->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
p	*(char)
,	O
temp	array(char)
,	O
tlen	int
)	O
;	O
counter	int
+=	O
len2	int
;	O
move	int
=	O
RIGHT	int
;	O
break	O
;	O
case	O
ASN1_ETYPE_OCTET_STRING	int
:	O
if	O
(	O
counter	int
<	O
inner_tag_len	*(int)
)	O
{	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
ptag	*(char)
=	O
der	*(char)
+	O
counter	int
-	O
inner_tag_len	*(int)
;	O
if	O
(	O
(	O
flags	int
&	O
ASN1_DECODE_FLAG_STRICT_DER	O
)	O
||	O
!	O
(	O
ptag	*(char)
[	O
0	int
]	O
&	O
ASN1_CLASS_STRUCTURED	int
)	O
)	O
{	O
if	O
(	O
ptag	*(char)
[	O
0	int
]	O
&	O
ASN1_CLASS_STRUCTURED	int
)	O
{	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
len2	int
=	O
asn1_get_length_der	(*(char),int,*(int))->(long)
(	O
der	*(char)
+	O
counter	int
,	O
ider_len	int
,	O
&	O
len3	int
)	O
;	O
if	O
(	O
len2	int
<	O
0	int
)	O
{	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
DECR_LEN	O
(	O
ider_len	int
,	O
len3	int
+	O
len2	int
)	O
;	O
_asn1_set_value	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(void),int)->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
p	*(char)
,	O
der	*(char)
+	O
counter	int
,	O
len3	int
+	O
len2	int
)	O
;	O
counter	int
+=	O
len3	int
+	O
len2	int
;	O
}	O
else	O
{	O
unsigned	O
dflags	int
=	O
0	int
,	O
vlen	int
,	O
ber_len	int
;	O
if	O
(	O
ptag	*(char)
[	O
0	int
]	O
&	O
ASN1_CLASS_STRUCTURED	int
)	O
dflags	int
|=	O
DECODE_FLAG_CONSTRUCTED	O
;	O
result	int
=	O
_asn1_decode_simple_ber	(int,*(char),int,*(*(char)),*(int),*(int),int)->(int)
(	O
type_field	(int)->(int)
(	O
p	*(char)
->	O
type	int
)	O
,	O
der	*(char)
+	O
counter	int
,	O
ider_len	int
,	O
&	O
ptmp	*(char)
,	O
&	O
vlen	int
,	O
&	O
ber_len	int
,	O
dflags	int
)	O
;	O
if	O
(	O
result	int
!=	O
ASN1_SUCCESS	int
)	O
{	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
DECR_LEN	O
(	O
ider_len	int
,	O
ber_len	int
)	O
;	O
_asn1_set_value_lv	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(void),int)->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
p	*(char)
,	O
ptmp	*(char)
,	O
vlen	int
)	O
;	O
counter	int
+=	O
ber_len	int
;	O
free	(*(void))->(void)
(	O
ptmp	*(char)
)	O
;	O
}	O
move	int
=	O
RIGHT	int
;	O
break	O
;	O
case	O
ASN1_ETYPE_GENERALSTRING	int
:	O
case	O
ASN1_ETYPE_NUMERIC_STRING	int
:	O
case	O
ASN1_ETYPE_IA5_STRING	int
:	O
case	O
ASN1_ETYPE_TELETEX_STRING	int
:	O
case	O
ASN1_ETYPE_PRINTABLE_STRING	int
:	O
case	O
ASN1_ETYPE_UNIVERSAL_STRING	int
:	O
case	O
ASN1_ETYPE_BMP_STRING	int
:	O
case	O
ASN1_ETYPE_UTF8_STRING	int
:	O
case	O
ASN1_ETYPE_VISIBLE_STRING	int
:	O
case	O
ASN1_ETYPE_BIT_STRING	int
:	O
len2	int
=	O
asn1_get_length_der	(*(char),int,*(int))->(long)
(	O
der	*(char)
+	O
counter	int
,	O
ider_len	int
,	O
&	O
len3	int
)	O
;	O
if	O
(	O
len2	int
<	O
0	int
)	O
{	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
DECR_LEN	O
(	O
ider_len	int
,	O
len3	int
+	O
len2	int
)	O
;	O
_asn1_set_value	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(void),int)->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
p	*(char)
,	O
der	*(char)
+	O
counter	int
,	O
len3	int
+	O
len2	int
)	O
;	O
counter	int
+=	O
len3	int
+	O
len2	int
;	O
move	int
=	O
RIGHT	int
;	O
break	O
;	O
case	O
ASN1_ETYPE_SEQUENCE	int
:	O
case	O
ASN1_ETYPE_SET	int
:	O
if	O
(	O
move	int
==	O
UP	int
)	O
{	O
len2	int
=	O
p	*(char)
->	O
tmp_ival	int
;	O
p	*(char)
->	O
tmp_ival	int
=	O
0	int
;	O
if	O
(	O
len2	int
==	O
-	O
1	int
)	O
{	O
DECR_LEN	O
(	O
ider_len	int
,	O
2	int
)	O
;	O
if	O
(	O
(	O
der	*(char)
[	O
counter	int
]	O
)	O
||	O
der	*(char)
[	O
counter	int
+	O
1	int
]	O
)	O
{	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
counter	int
+=	O
2	int
;	O
}	O
else	O
{	O
if	O
(	O
len2	int
!=	O
counter	int
)	O
{	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
}	O
move	int
=	O
RIGHT	int
;	O
}	O
else	O
{	O
len3	int
=	O
asn1_get_length_der	(*(char),int,*(int))->(long)
(	O
der	*(char)
+	O
counter	int
,	O
ider_len	int
,	O
&	O
len2	int
)	O
;	O
if	O
(	O
IS_ERR	O
(	O
len3	int
,	O
flags	int
)	O
)	O
{	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
DECR_LEN	O
(	O
ider_len	int
,	O
len2	int
)	O
;	O
counter	int
+=	O
len2	int
;	O
if	O
(	O
len3	int
>	O
0	int
)	O
{	O
p	*(char)
->	O
tmp_ival	int
=	O
counter	int
+	O
len3	int
;	O
move	int
=	O
DOWN	int
;	O
}	O
else	O
if	O
(	O
len3	int
==	O
0	int
)	O
{	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
p	*(char)
->	O
down	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
while	O
(	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
{	O
if	O
(	O
type_field	(int)->(int)
(	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
type	int
)	O
!=	O
ASN1_ETYPE_TAG	int
)	O
{	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
asn1_delete_structure	(*(*(struct)))->(int)
(	O
&	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
;	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
}	O
else	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
}	O
move	int
=	O
RIGHT	int
;	O
}	O
else	O
{	O
p	*(char)
->	O
tmp_ival	int
=	O
-	O
1	int
;	O
move	int
=	O
DOWN	int
;	O
}	O
}	O
break	O
;	O
case	O
ASN1_ETYPE_SEQUENCE_OF	int
:	O
case	O
ASN1_ETYPE_SET_OF	int
:	O
if	O
(	O
move	int
==	O
UP	int
)	O
{	O
len2	int
=	O
p	*(char)
->	O
tmp_ival	int
;	O
if	O
(	O
len2	int
==	O
-	O
1	int
)	O
{	O
if	O
(	O
!	O
HAVE_TWO	O
(	O
ider_len	int
)	O
||	O
(	O
(	O
der	*(char)
[	O
counter	int
]	O
)	O
||	O
der	*(char)
[	O
counter	int
+	O
1	int
]	O
)	O
)	O
{	O
result	int
=	O
_asn1_append_sequence_set	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(struct(*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)))))->(int)
(	O
p	*(char)
,	O
&	O
tcache	struct(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
)	O
;	O
if	O
(	O
result	int
!=	O
0	int
)	O
{	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
p	*(char)
=	O
tcache	struct(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
.	O
tail	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
move	int
=	O
RIGHT	int
;	O
continue	O
;	O
}	O
p	*(char)
->	O
tmp_ival	int
=	O
0	int
;	O
tcache	struct(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
.	O
tail	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
NULL	O
;	O
tcache	struct(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
.	O
head	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
NULL	O
;	O
DECR_LEN	O
(	O
ider_len	int
,	O
2	int
)	O
;	O
counter	int
+=	O
2	int
;	O
}	O
else	O
{	O
if	O
(	O
len2	int
>	O
counter	int
)	O
{	O
result	int
=	O
_asn1_append_sequence_set	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(struct(*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)))))->(int)
(	O
p	*(char)
,	O
&	O
tcache	struct(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
)	O
;	O
if	O
(	O
result	int
!=	O
0	int
)	O
{	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
p	*(char)
=	O
tcache	struct(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
.	O
tail	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
move	int
=	O
RIGHT	int
;	O
continue	O
;	O
}	O
p	*(char)
->	O
tmp_ival	int
=	O
0	int
;	O
tcache	struct(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
.	O
tail	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
NULL	O
;	O
tcache	struct(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
.	O
head	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
NULL	O
;	O
if	O
(	O
len2	int
!=	O
counter	int
)	O
{	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
}	O
}	O
else	O
{	O
len3	int
=	O
asn1_get_length_der	(*(char),int,*(int))->(long)
(	O
der	*(char)
+	O
counter	int
,	O
ider_len	int
,	O
&	O
len2	int
)	O
;	O
if	O
(	O
IS_ERR	O
(	O
len3	int
,	O
flags	int
)	O
)	O
{	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
DECR_LEN	O
(	O
ider_len	int
,	O
len2	int
)	O
;	O
counter	int
+=	O
len2	int
;	O
if	O
(	O
len3	int
)	O
{	O
if	O
(	O
len3	int
>	O
0	int
)	O
{	O
p	*(char)
->	O
tmp_ival	int
=	O
counter	int
+	O
len3	int
;	O
}	O
else	O
{	O
p	*(char)
->	O
tmp_ival	int
=	O
-	O
1	int
;	O
}	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
p	*(char)
->	O
down	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
if	O
(	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
==	O
NULL	O
)	O
{	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
while	O
(	O
(	O
type_field	(int)->(int)
(	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
type	int
)	O
==	O
ASN1_ETYPE_TAG	int
)	O
||	O
(	O
type_field	(int)->(int)
(	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
type	int
)	O
==	O
ASN1_ETYPE_SIZE	int
)	O
)	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
if	O
(	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
==	O
NULL	O
)	O
{	O
result	int
=	O
_asn1_append_sequence_set	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(struct(*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)))))->(int)
(	O
p	*(char)
,	O
&	O
tcache	struct(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
)	O
;	O
if	O
(	O
result	int
!=	O
0	int
)	O
{	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
}	O
p	*(char)
=	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
}	O
}	O
move	int
=	O
RIGHT	int
;	O
break	O
;	O
case	O
ASN1_ETYPE_ANY	int
:	O
if	O
(	O
!	O
(	O
flags	int
&	O
ASN1_DECODE_FLAG_STRICT_DER	O
)	O
&&	O
(	O
p	*(char)
->	O
type	int
&	O
CONST_TAG	O
)	O
&&	O
tag_len	*(int)
==	O
2	int
&&	O
(	O
der	*(char)
[	O
counter	int
-	O
1	int
]	O
==	O
0x80	int
)	O
)	O
indefinite	int
=	O
1	int
;	O
else	O
indefinite	int
=	O
0	int
;	O
if	O
(	O
asn1_get_tag_der	(*(char),int,*(char),*(int),*(long))->(int)
(	O
der	*(char)
+	O
counter	int
,	O
ider_len	int
,	O
&	O
class	int
,	O
&	O
len2	int
,	O
&	O
tag	*(long)
)	O
!=	O
ASN1_SUCCESS	int
)	O
{	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
DECR_LEN	O
(	O
ider_len	int
,	O
len2	int
)	O
;	O
len4	int
=	O
asn1_get_length_der	(*(char),int,*(int))->(long)
(	O
der	*(char)
+	O
counter	int
+	O
len2	int
,	O
ider_len	int
,	O
&	O
len3	int
)	O
;	O
if	O
(	O
IS_ERR	O
(	O
len4	int
,	O
flags	int
)	O
)	O
{	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
if	O
(	O
len4	int
!=	O
-	O
1	int
)	O
{	O
len2	int
+=	O
len4	int
;	O
DECR_LEN	O
(	O
ider_len	int
,	O
len4	int
+	O
len3	int
)	O
;	O
_asn1_set_value_lv	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(void),int)->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
p	*(char)
,	O
der	*(char)
+	O
counter	int
,	O
len2	int
+	O
len3	int
)	O
;	O
counter	int
+=	O
len2	int
+	O
len3	int
;	O
}	O
else	O
{	O
ider_len	int
+=	O
len2	int
;	O
if	O
(	O
counter	int
==	O
0	int
)	O
{	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
result	int
=	O
_asn1_get_indefinite_length_string	(*(char),int,*(int))->(int)
(	O
der	*(char)
+	O
counter	int
,	O
ider_len	int
,	O
&	O
len2	int
)	O
;	O
if	O
(	O
result	int
!=	O
ASN1_SUCCESS	int
)	O
{	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
DECR_LEN	O
(	O
ider_len	int
,	O
len2	int
)	O
;	O
_asn1_set_value_lv	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(void),int)->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
p	*(char)
,	O
der	*(char)
+	O
counter	int
,	O
len2	int
)	O
;	O
counter	int
+=	O
len2	int
;	O
}	O
if	O
(	O
indefinite	int
)	O
{	O
DECR_LEN	O
(	O
ider_len	int
,	O
2	int
)	O
;	O
if	O
(	O
!	O
der	*(char)
[	O
counter	int
]	O
&&	O
!	O
der	*(char)
[	O
counter	int
+	O
1	int
]	O
)	O
{	O
counter	int
+=	O
2	int
;	O
}	O
else	O
{	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
}	O
move	int
=	O
RIGHT	int
;	O
break	O
;	O
default	O
:	O
move	int
=	O
(	O
move	int
==	O
UP	int
)	O
?	O
RIGHT	int
:	O
DOWN	int
;	O
break	O
;	O
}	O
}	O
if	O
(	O
p	*(char)
)	O
{	O
p	*(char)
->	O
end	*(int)
=	O
counter	int
-	O
1	int
;	O
}	O
if	O
(	O
p	*(char)
==	O
node	*(struct)
&&	O
move	int
!=	O
DOWN	int
)	O
break	O
;	O
if	O
(	O
move	int
==	O
DOWN	int
)	O
{	O
if	O
(	O
p	*(char)
->	O
down	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
p	*(char)
=	O
p	*(char)
->	O
down	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
else	O
move	int
=	O
RIGHT	int
;	O
}	O
if	O
(	O
(	O
move	int
==	O
RIGHT	int
)	O
&&	O
!	O
(	O
p	*(char)
->	O
type	int
&	O
CONST_SET	O
)	O
)	O
{	O
if	O
(	O
p	*(char)
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
p	*(char)
=	O
p	*(char)
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
else	O
move	int
=	O
UP	int
;	O
}	O
if	O
(	O
move	int
==	O
UP	int
)	O
p	*(char)
=	O
_asn1_find_up	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
p	*(char)
)	O
;	O
}	O
_asn1_delete_not_used	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))->(int)
(	O
*	O
element	*(*(struct))
)	O
;	O
if	O
(	O
(	O
ider_len	int
<	O
0	int
)	O
||	O
(	O
!	O
(	O
flags	int
&	O
ASN1_DECODE_FLAG_ALLOW_PADDING	int
)	O
&&	O
(	O
ider_len	int
!=	O
0	int
)	O
)	O
)	O
{	O
warn	O
(	O
)	O
;	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
goto	O
cleanup	O
;	O
}	O
*	O
max_ider_len	*(int)
=	O
total_len	int
-	O
ider_len	int
;	O
return	O
ASN1_SUCCESS	int
;	O
cleanup	O
:	O
asn1_delete_structure	(*(*(struct)))->(int)
(	O
element	*(*(struct))
)	O
;	O
return	O
result	int
;	O
}	O
int	O
asn1_der_decoding	(*(*(struct)),*(void),int,*(char))->(int)
(	O
asn1_node	*(struct)
*	O
element	*(*(struct))
,	O
const	O
void	O
*	O
ider	*(void)
,	O
int	O
ider_len	int
,	O
char	O
*	O
errorDescription	*(char)
)	O
{	O
return	O
asn1_der_decoding2	(*(*(struct)),*(void),*(int),int,*(char))->(int)
(	O
element	*(*(struct))
,	O
ider	*(void)
,	O
&	O
ider_len	int
,	O
0	int
,	O
errorDescription	*(char)
)	O
;	O
}	O
int	O
asn1_der_decoding_element	(*(*(struct)),*(char),*(void),int,*(char))->(int)
(	O
asn1_node	*(struct)
*	O
structure	*(struct)
,	O
const	O
char	O
*	O
elementName	*(char)
,	O
const	O
void	O
*	O
ider	*(void)
,	O
int	O
len	int
,	O
char	O
*	O
errorDescription	*(char)
)	O
{	O
return	O
asn1_der_decoding	(*(*(struct)),*(void),int,*(char))->(int)
(	O
structure	*(struct)
,	O
ider	*(void)
,	O
len	int
,	O
errorDescription	*(char)
)	O
;	O
}	O
int	O
asn1_der_decoding_startEnd	(*(struct),*(void),int,*(char),*(int),*(int))->(int)
(	O
asn1_node	*(struct)
element	*(*(struct))
,	O
const	O
void	O
*	O
ider	*(void)
,	O
int	O
ider_len	int
,	O
const	O
char	O
*	O
name_element	*(char)
,	O
int	O
*	O
start	*(int)
,	O
int	O
*	O
end	*(int)
)	O
{	O
asn1_node	*(struct)
node	*(struct)
,	O
node_to_find	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
int	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
node	*(struct)
=	O
element	*(*(struct))
;	O
if	O
(	O
node	*(struct)
==	O
NULL	O
)	O
return	O
ASN1_ELEMENT_NOT_FOUND	int
;	O
node_to_find	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
asn1_find_node	(*(struct),*(char))->(*(struct))
(	O
node	*(struct)
,	O
name_element	*(char)
)	O
;	O
if	O
(	O
node_to_find	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
==	O
NULL	O
)	O
return	O
ASN1_ELEMENT_NOT_FOUND	int
;	O
*	O
start	*(int)
=	O
node_to_find	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
start	*(int)
;	O
*	O
end	*(int)
=	O
node_to_find	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
end	*(int)
;	O
if	O
(	O
*	O
start	*(int)
==	O
0	int
&&	O
*	O
end	*(int)
==	O
0	int
)	O
{	O
if	O
(	O
ider	*(void)
==	O
NULL	O
||	O
ider_len	int
==	O
0	int
)	O
return	O
ASN1_GENERIC_ERROR	int
;	O
result	int
=	O
asn1_der_decoding	(*(*(struct)),*(void),int,*(char))->(int)
(	O
&	O
node	*(struct)
,	O
ider	*(void)
,	O
ider_len	int
,	O
NULL	O
)	O
;	O
if	O
(	O
result	int
!=	O
ASN1_SUCCESS	int
)	O
{	O
warn	O
(	O
)	O
;	O
return	O
result	int
;	O
}	O
node_to_find	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
asn1_find_node	(*(struct),*(char))->(*(struct))
(	O
node	*(struct)
,	O
name_element	*(char)
)	O
;	O
if	O
(	O
node_to_find	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
==	O
NULL	O
)	O
return	O
ASN1_ELEMENT_NOT_FOUND	int
;	O
*	O
start	*(int)
=	O
node_to_find	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
start	*(int)
;	O
*	O
end	*(int)
=	O
node_to_find	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
end	*(int)
;	O
}	O
if	O
(	O
*	O
end	*(int)
<	O
*	O
start	*(int)
)	O
return	O
ASN1_GENERIC_ERROR	int
;	O
return	O
ASN1_SUCCESS	int
;	O
}	O
int	O
asn1_expand_any_defined_by	(*(struct),*(*(struct)))->(int)
(	O
asn1_node_const	*(struct)
definitions	*(*(struct))
,	O
asn1_node	*(struct)
*	O
element	*(*(struct))
)	O
{	O
char	O
name	*(char)
[	O
2	int
*	O
ASN1_MAX_NAME_SIZE	int
+	O
2	int
]	O
,	O
value	*(void)
[	O
ASN1_MAX_NAME_SIZE	int
]	O
;	O
int	O
retCode	int
=	O
ASN1_SUCCESS	int
,	O
result	int
;	O
int	O
len	int
,	O
len2	int
,	O
len3	int
;	O
asn1_node_const	*(struct)
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
asn1_node	*(struct)
p	*(char)
,	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
,	O
aux	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
NULL	O
;	O
char	O
errorDescription	*(char)
[	O
ASN1_MAX_ERROR_DESCRIPTION_SIZE	int
]	O
;	O
const	O
char	O
*	O
definitionsName	*(char)
;	O
if	O
(	O
(	O
definitions	*(*(struct))
==	O
NULL	O
)	O
||	O
(	O
*	O
element	*(*(struct))
==	O
NULL	O
)	O
)	O
return	O
ASN1_ELEMENT_NOT_FOUND	int
;	O
definitionsName	*(char)
=	O
definitions	*(*(struct))
->	O
name	*(char)
;	O
p	*(char)
=	O
*	O
element	*(*(struct))
;	O
while	O
(	O
p	*(char)
)	O
{	O
switch	O
(	O
type_field	(int)->(int)
(	O
p	*(char)
->	O
type	int
)	O
)	O
{	O
case	O
ASN1_ETYPE_ANY	int
:	O
if	O
(	O
(	O
p	*(char)
->	O
type	int
&	O
CONST_DEFINED_BY	O
)	O
&&	O
(	O
p	*(char)
->	O
value	*(void)
)	O
)	O
{	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
p	*(char)
->	O
down	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
while	O
(	O
(	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
&&	O
(	O
type_field	(int)->(int)
(	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
type	int
)	O
!=	O
ASN1_ETYPE_CONSTANT	int
)	O
)	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
if	O
(	O
!	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
{	O
retCode	int
=	O
ASN1_ERROR_TYPE_ANY	int
;	O
break	O
;	O
}	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
_asn1_find_up	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
p	*(char)
)	O
;	O
if	O
(	O
!	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
{	O
retCode	int
=	O
ASN1_ERROR_TYPE_ANY	int
;	O
break	O
;	O
}	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
down	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
while	O
(	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
{	O
if	O
(	O
!	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
name	*(char)
,	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
name	*(char)
)	O
)	O
)	O
break	O
;	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
}	O
if	O
(	O
(	O
!	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
||	O
(	O
type_field	(int)->(int)
(	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
type	int
)	O
!=	O
ASN1_ETYPE_OBJECT_ID	int
)	O
||	O
(	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
value	*(void)
==	O
NULL	O
)	O
)	O
{	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
_asn1_find_up	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
p	*(char)
)	O
;	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
_asn1_find_up	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
;	O
if	O
(	O
!	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
{	O
retCode	int
=	O
ASN1_ERROR_TYPE_ANY	int
;	O
break	O
;	O
}	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
down	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
while	O
(	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
{	O
if	O
(	O
!	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
name	*(char)
,	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
name	*(char)
)	O
)	O
)	O
break	O
;	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
}	O
if	O
(	O
(	O
!	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
||	O
(	O
type_field	(int)->(int)
(	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
type	int
)	O
!=	O
ASN1_ETYPE_OBJECT_ID	int
)	O
||	O
(	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
value	*(void)
==	O
NULL	O
)	O
)	O
{	O
retCode	int
=	O
ASN1_ERROR_TYPE_ANY	int
;	O
break	O
;	O
}	O
}	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
definitions	*(*(struct))
->	O
down	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
while	O
(	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
{	O
if	O
(	O
(	O
type_field	(int)->(int)
(	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
type	int
)	O
==	O
ASN1_ETYPE_OBJECT_ID	int
)	O
&&	O
(	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
type	int
&	O
CONST_ASSIGN	O
)	O
)	O
{	O
snprintf	(*(char),long,*(char))->(int)
(	O
name	*(char)
,	O
sizeof	O
(	O
name	*(char)
)	O
,	O
"%s.%s"	*(char)
,	O
definitionsName	*(char)
,	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
name	*(char)
)	O
;	O
len	int
=	O
ASN1_MAX_NAME_SIZE	int
;	O
result	int
=	O
asn1_read_value	(*(struct),*(char),*(void),*(int))->(int)
(	O
definitions	*(*(struct))
,	O
name	*(char)
,	O
value	*(void)
,	O
&	O
len	int
)	O
;	O
if	O
(	O
(	O
result	int
==	O
ASN1_SUCCESS	int
)	O
&&	O
(	O
!	O
_asn1_strcmp	O
(	O
p3	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
value	*(void)
,	O
value	*(void)
)	O
)	O
)	O
{	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
while	O
(	O
(	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
&&	O
(	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
type	int
&	O
CONST_ASSIGN	O
)	O
)	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
if	O
(	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
{	O
snprintf	(*(char),long,*(char))->(int)
(	O
name	*(char)
,	O
sizeof	O
(	O
name	*(char)
)	O
,	O
"%s.%s"	*(char)
,	O
definitionsName	*(char)
,	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
name	*(char)
)	O
;	O
result	int
=	O
asn1_create_element	(*(struct),*(char),*(*(struct)))->(int)
(	O
definitions	*(*(struct))
,	O
name	*(char)
,	O
&	O
aux	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
;	O
if	O
(	O
result	int
==	O
ASN1_SUCCESS	int
)	O
{	O
_asn1_cpy_name	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
aux	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
,	O
p	*(char)
)	O
;	O
len2	int
=	O
asn1_get_length_der	(*(char),int,*(int))->(long)
(	O
p	*(char)
->	O
value	*(void)
,	O
p	*(char)
->	O
value_len	int
,	O
&	O
len3	int
)	O
;	O
if	O
(	O
len2	int
<	O
0	int
)	O
return	O
ASN1_DER_ERROR	int
;	O
result	int
=	O
asn1_der_decoding	(*(*(struct)),*(void),int,*(char))->(int)
(	O
&	O
aux	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
,	O
p	*(char)
->	O
value	*(void)
+	O
len3	int
,	O
len2	int
,	O
errorDescription	*(char)
)	O
;	O
if	O
(	O
result	int
==	O
ASN1_SUCCESS	int
)	O
{	O
_asn1_set_right	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
aux	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
,	O
p	*(char)
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
;	O
_asn1_set_right	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
p	*(char)
,	O
aux	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
;	O
result	int
=	O
asn1_delete_structure	(*(*(struct)))->(int)
(	O
&	O
p	*(char)
)	O
;	O
if	O
(	O
result	int
==	O
ASN1_SUCCESS	int
)	O
{	O
p	*(char)
=	O
aux	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
aux	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
NULL	O
;	O
break	O
;	O
}	O
else	O
{	O
asn1_delete_structure	(*(*(struct)))->(int)
(	O
&	O
aux	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
;	O
retCode	int
=	O
result	int
;	O
break	O
;	O
}	O
}	O
else	O
{	O
retCode	int
=	O
result	int
;	O
break	O
;	O
}	O
}	O
else	O
{	O
retCode	int
=	O
result	int
;	O
break	O
;	O
}	O
}	O
else	O
{	O
retCode	int
=	O
ASN1_ERROR_TYPE_ANY	int
;	O
break	O
;	O
}	O
}	O
}	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
}	O
if	O
(	O
!	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
{	O
retCode	int
=	O
ASN1_ERROR_TYPE_ANY	int
;	O
break	O
;	O
}	O
}	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
if	O
(	O
p	*(char)
->	O
down	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
{	O
p	*(char)
=	O
p	*(char)
->	O
down	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
}	O
else	O
if	O
(	O
p	*(char)
==	O
*	O
element	*(*(struct))
)	O
{	O
p	*(char)
=	O
NULL	O
;	O
break	O
;	O
}	O
else	O
if	O
(	O
p	*(char)
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
p	*(char)
=	O
p	*(char)
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
else	O
{	O
while	O
(	O
1	int
)	O
{	O
p	*(char)
=	O
_asn1_find_up	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
p	*(char)
)	O
;	O
if	O
(	O
p	*(char)
==	O
*	O
element	*(*(struct))
)	O
{	O
p	*(char)
=	O
NULL	O
;	O
break	O
;	O
}	O
if	O
(	O
p	*(char)
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
{	O
p	*(char)
=	O
p	*(char)
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
break	O
;	O
}	O
}	O
}	O
}	O
return	O
retCode	int
;	O
}	O
int	O
asn1_expand_octet_string	(*(struct),*(*(struct)),*(char),*(char))->(int)
(	O
asn1_node_const	*(struct)
definitions	*(*(struct))
,	O
asn1_node	*(struct)
*	O
element	*(*(struct))
,	O
const	O
char	O
*	O
octetName	*(char)
,	O
const	O
char	O
*	O
objectName	*(char)
)	O
{	O
char	O
name	*(char)
[	O
2	int
*	O
ASN1_MAX_NAME_SIZE	int
+	O
1	int
]	O
,	O
value	*(void)
[	O
ASN1_MAX_NAME_SIZE	int
]	O
;	O
int	O
retCode	int
=	O
ASN1_SUCCESS	int
,	O
result	int
;	O
int	O
len	int
,	O
len2	int
,	O
len3	int
;	O
asn1_node_const	*(struct)
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
asn1_node	*(struct)
aux	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
NULL	O
;	O
asn1_node	*(struct)
octetNode	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
NULL	O
,	O
objectNode	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
NULL	O
;	O
char	O
errorDescription	*(char)
[	O
ASN1_MAX_ERROR_DESCRIPTION_SIZE	int
]	O
;	O
if	O
(	O
(	O
definitions	*(*(struct))
==	O
NULL	O
)	O
||	O
(	O
*	O
element	*(*(struct))
==	O
NULL	O
)	O
)	O
return	O
ASN1_ELEMENT_NOT_FOUND	int
;	O
octetNode	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
asn1_find_node	(*(struct),*(char))->(*(struct))
(	O
*	O
element	*(*(struct))
,	O
octetName	*(char)
)	O
;	O
if	O
(	O
octetNode	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
==	O
NULL	O
)	O
return	O
ASN1_ELEMENT_NOT_FOUND	int
;	O
if	O
(	O
type_field	(int)->(int)
(	O
octetNode	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
type	int
)	O
!=	O
ASN1_ETYPE_OCTET_STRING	int
)	O
return	O
ASN1_ELEMENT_NOT_FOUND	int
;	O
if	O
(	O
octetNode	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
value	*(void)
==	O
NULL	O
)	O
return	O
ASN1_VALUE_NOT_FOUND	int
;	O
objectNode	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
asn1_find_node	(*(struct),*(char))->(*(struct))
(	O
*	O
element	*(*(struct))
,	O
objectName	*(char)
)	O
;	O
if	O
(	O
objectNode	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
==	O
NULL	O
)	O
return	O
ASN1_ELEMENT_NOT_FOUND	int
;	O
if	O
(	O
type_field	(int)->(int)
(	O
objectNode	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
type	int
)	O
!=	O
ASN1_ETYPE_OBJECT_ID	int
)	O
return	O
ASN1_ELEMENT_NOT_FOUND	int
;	O
if	O
(	O
objectNode	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
value	*(void)
==	O
NULL	O
)	O
return	O
ASN1_VALUE_NOT_FOUND	int
;	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
definitions	*(*(struct))
->	O
down	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
while	O
(	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
{	O
if	O
(	O
(	O
type_field	(int)->(int)
(	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
type	int
)	O
==	O
ASN1_ETYPE_OBJECT_ID	int
)	O
&&	O
(	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
type	int
&	O
CONST_ASSIGN	O
)	O
)	O
{	O
strcpy	(*(char),*(char))->(*(char))
(	O
name	*(char)
,	O
definitions	*(*(struct))
->	O
name	*(char)
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
name	*(char)
,	O
"."	*(char)
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
name	*(char)
,	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
name	*(char)
)	O
;	O
len	int
=	O
sizeof	O
(	O
value	*(void)
)	O
;	O
result	int
=	O
asn1_read_value	(*(struct),*(char),*(void),*(int))->(int)
(	O
definitions	*(*(struct))
,	O
name	*(char)
,	O
value	*(void)
,	O
&	O
len	int
)	O
;	O
if	O
(	O
(	O
result	int
==	O
ASN1_SUCCESS	int
)	O
&&	O
(	O
!	O
_asn1_strcmp	O
(	O
objectNode	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
value	*(void)
,	O
value	*(void)
)	O
)	O
)	O
{	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
while	O
(	O
(	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
&&	O
(	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
type	int
&	O
CONST_ASSIGN	O
)	O
)	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
if	O
(	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
{	O
strcpy	(*(char),*(char))->(*(char))
(	O
name	*(char)
,	O
definitions	*(*(struct))
->	O
name	*(char)
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
name	*(char)
,	O
"."	*(char)
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
name	*(char)
,	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
name	*(char)
)	O
;	O
result	int
=	O
asn1_create_element	(*(struct),*(char),*(*(struct)))->(int)
(	O
definitions	*(*(struct))
,	O
name	*(char)
,	O
&	O
aux	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
;	O
if	O
(	O
result	int
==	O
ASN1_SUCCESS	int
)	O
{	O
_asn1_cpy_name	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
aux	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
,	O
octetNode	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
;	O
len2	int
=	O
asn1_get_length_der	(*(char),int,*(int))->(long)
(	O
octetNode	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
value	*(void)
,	O
octetNode	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
value_len	int
,	O
&	O
len3	int
)	O
;	O
if	O
(	O
len2	int
<	O
0	int
)	O
return	O
ASN1_DER_ERROR	int
;	O
result	int
=	O
asn1_der_decoding	(*(*(struct)),*(void),int,*(char))->(int)
(	O
&	O
aux	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
,	O
octetNode	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
value	*(void)
+	O
len3	int
,	O
len2	int
,	O
errorDescription	*(char)
)	O
;	O
if	O
(	O
result	int
==	O
ASN1_SUCCESS	int
)	O
{	O
_asn1_set_right	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
aux	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
,	O
octetNode	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
;	O
_asn1_set_right	(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))->(*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),*(struct(array(char),int,int,*`,int,*`,*`,*`,array(char),int,int,int)),array(char),int,int,int)))
(	O
octetNode	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
,	O
aux	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
;	O
result	int
=	O
asn1_delete_structure	(*(*(struct)))->(int)
(	O
&	O
octetNode	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
;	O
if	O
(	O
result	int
==	O
ASN1_SUCCESS	int
)	O
{	O
aux	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
NULL	O
;	O
break	O
;	O
}	O
else	O
{	O
asn1_delete_structure	(*(*(struct)))->(int)
(	O
&	O
aux	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
;	O
retCode	int
=	O
result	int
;	O
break	O
;	O
}	O
}	O
else	O
{	O
retCode	int
=	O
result	int
;	O
break	O
;	O
}	O
}	O
else	O
{	O
retCode	int
=	O
result	int
;	O
break	O
;	O
}	O
}	O
else	O
{	O
retCode	int
=	O
ASN1_VALUE_NOT_VALID	int
;	O
break	O
;	O
}	O
}	O
}	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
=	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
->	O
right	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
;	O
}	O
if	O
(	O
!	O
p2	*(struct(array(char),int,int,*(char),int,*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),*(struct(array(char),int,int,*(char),int,*(struct`),*(struct`),*(struct`),array(char),int,int,int)),array(char),int,int,int))
)	O
retCode	int
=	O
ASN1_VALUE_NOT_VALID	int
;	O
return	O
retCode	int
;	O
}	O
static	O
int	O
_asn1_decode_simple_der	(int,*(char),int,*(*(char)),*(int),int)->(int)
(	O
unsigned	O
int	O
etype	*(int)
,	O
const	O
unsigned	O
char	O
*	O
der	*(char)
,	O
unsigned	O
int	O
_der_len	int
,	O
const	O
unsigned	O
char	O
*	O
*	O
str	*(*(char))
,	O
unsigned	O
int	O
*	O
str_len	*(int)
,	O
unsigned	O
dflags	int
)	O
{	O
int	O
tag_len	*(int)
,	O
len_len	int
;	O
const	O
unsigned	O
char	O
*	O
p	*(char)
;	O
int	O
der_len	int
=	O
_der_len	int
;	O
unsigned	O
char	O
class	int
;	O
unsigned	O
long	O
tag	*(long)
;	O
long	O
ret	*(void)
;	O
if	O
(	O
der	*(char)
==	O
NULL	O
||	O
der_len	int
==	O
0	int
)	O
return	O
ASN1_VALUE_NOT_VALID	int
;	O
if	O
(	O
ETYPE_OK	O
(	O
etype	*(int)
)	O
==	O
0	int
||	O
ETYPE_IS_STRING	O
(	O
etype	*(int)
)	O
==	O
0	int
)	O
return	O
ASN1_VALUE_NOT_VALID	int
;	O
class	int
=	O
ETYPE_CLASS	O
(	O
etype	*(int)
)	O
;	O
if	O
(	O
class	int
!=	O
ASN1_CLASS_UNIVERSAL	int
)	O
return	O
ASN1_VALUE_NOT_VALID	int
;	O
p	*(char)
=	O
der	*(char)
;	O
if	O
(	O
dflags	int
&	O
DECODE_FLAG_HAVE_TAG	int
)	O
{	O
ret	*(void)
=	O
asn1_get_tag_der	(*(char),int,*(char),*(int),*(long))->(int)
(	O
p	*(char)
,	O
der_len	int
,	O
&	O
class	int
,	O
&	O
tag_len	*(int)
,	O
&	O
tag	*(long)
)	O
;	O
if	O
(	O
ret	*(void)
!=	O
ASN1_SUCCESS	int
)	O
return	O
ret	*(void)
;	O
if	O
(	O
class	int
!=	O
ETYPE_CLASS	O
(	O
etype	*(int)
)	O
||	O
tag	*(long)
!=	O
ETYPE_TAG	O
(	O
etype	*(int)
)	O
)	O
{	O
warn	O
(	O
)	O
;	O
return	O
ASN1_DER_ERROR	int
;	O
}	O
p	*(char)
+=	O
tag_len	*(int)
;	O
der_len	int
-=	O
tag_len	*(int)
;	O
if	O
(	O
der_len	int
<=	O
0	int
)	O
return	O
ASN1_DER_ERROR	int
;	O
}	O
ret	*(void)
=	O
asn1_get_length_der	(*(char),int,*(int))->(long)
(	O
p	*(char)
,	O
der_len	int
,	O
&	O
len_len	int
)	O
;	O
if	O
(	O
ret	*(void)
<	O
0	int
)	O
return	O
ASN1_DER_ERROR	int
;	O
p	*(char)
+=	O
len_len	int
;	O
der_len	int
-=	O
len_len	int
;	O
if	O
(	O
der_len	int
<=	O
0	int
)	O
return	O
ASN1_DER_ERROR	int
;	O
*	O
str_len	*(int)
=	O
ret	*(void)
;	O
*	O
str	*(*(char))
=	O
p	*(char)
;	O
return	O
ASN1_SUCCESS	int
;	O
}	O
int	O
asn1_decode_simple_der	(int,*(char),int,*(*(char)),*(int))->(int)
(	O
unsigned	O
int	O
etype	*(int)
,	O
const	O
unsigned	O
char	O
*	O
der	*(char)
,	O
unsigned	O
int	O
_der_len	int
,	O
const	O
unsigned	O
char	O
*	O
*	O
str	*(*(char))
,	O
unsigned	O
int	O
*	O
str_len	*(int)
)	O
{	O
return	O
_asn1_decode_simple_der	(int,*(char),int,*(*(char)),*(int),int)->(int)
(	O
etype	*(int)
,	O
der	*(char)
,	O
_der_len	int
,	O
str	*(*(char))
,	O
str_len	*(int)
,	O
DECODE_FLAG_HAVE_TAG	int
)	O
;	O
}	O
static	O
int	O
append	(*(*(char)),*(int),*(char),int)->(int)
(	O
uint8_t	char
*	O
*	O
dst	*(struct)
,	O
unsigned	O
*	O
dst_size	*(int)
,	O
const	O
unsigned	O
char	O
*	O
src	*(struct)
,	O
unsigned	O
src_size	int
)	O
{	O
if	O
(	O
src_size	int
==	O
0	int
)	O
return	O
ASN1_SUCCESS	int
;	O
*	O
dst	*(struct)
=	O
_asn1_realloc	(*(void),long)->(*(void))
(	O
*	O
dst	*(struct)
,	O
*	O
dst_size	*(int)
+	O
src_size	int
)	O
;	O
if	O
(	O
*	O
dst	*(struct)
==	O
NULL	O
)	O
return	O
ASN1_MEM_ALLOC_ERROR	int
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
*	O
dst	*(struct)
+	O
*	O
dst_size	*(int)
,	O
src	*(struct)
,	O
src_size	int
)	O
;	O
*	O
dst_size	*(int)
+=	O
src_size	int
;	O
return	O
ASN1_SUCCESS	int
;	O
}	O
static	O
int	O
_asn1_decode_simple_ber	(int,*(char),int,*(*(char)),*(int),*(int),int)->(int)
(	O
unsigned	O
int	O
etype	*(int)
,	O
const	O
unsigned	O
char	O
*	O
der	*(char)
,	O
unsigned	O
int	O
_der_len	int
,	O
unsigned	O
char	O
*	O
*	O
str	*(*(char))
,	O
unsigned	O
int	O
*	O
str_len	*(int)
,	O
unsigned	O
int	O
*	O
ber_len	int
,	O
unsigned	O
dflags	int
)	O
{	O
int	O
tag_len	*(int)
,	O
len_len	int
;	O
const	O
unsigned	O
char	O
*	O
p	*(char)
;	O
int	O
der_len	int
=	O
_der_len	int
;	O
uint8_t	char
*	O
total	*(char)
=	O
NULL	O
;	O
unsigned	O
total_size	int
=	O
0	int
;	O
unsigned	O
char	O
class	int
;	O
unsigned	O
long	O
tag	*(long)
;	O
unsigned	O
char	O
*	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
NULL	O
;	O
const	O
unsigned	O
char	O
*	O
cout	*(char)
=	O
NULL	O
;	O
unsigned	O
out_len	int
;	O
long	O
result	int
;	O
if	O
(	O
ber_len	int
)	O
*	O
ber_len	int
=	O
0	int
;	O
if	O
(	O
der	*(char)
==	O
NULL	O
||	O
der_len	int
==	O
0	int
)	O
{	O
warn	O
(	O
)	O
;	O
return	O
ASN1_VALUE_NOT_VALID	int
;	O
}	O
if	O
(	O
ETYPE_OK	O
(	O
etype	*(int)
)	O
==	O
0	int
)	O
{	O
warn	O
(	O
)	O
;	O
return	O
ASN1_VALUE_NOT_VALID	int
;	O
}	O
class	int
=	O
ETYPE_CLASS	O
(	O
etype	*(int)
)	O
;	O
if	O
(	O
class	int
!=	O
ASN1_CLASS_UNIVERSAL	int
)	O
{	O
warn	O
(	O
)	O
;	O
return	O
ASN1_VALUE_NOT_VALID	int
;	O
}	O
p	*(char)
=	O
der	*(char)
;	O
if	O
(	O
dflags	int
&	O
DECODE_FLAG_HAVE_TAG	int
)	O
{	O
result	int
=	O
asn1_get_tag_der	(*(char),int,*(char),*(int),*(long))->(int)
(	O
p	*(char)
,	O
der_len	int
,	O
&	O
class	int
,	O
&	O
tag_len	*(int)
,	O
&	O
tag	*(long)
)	O
;	O
if	O
(	O
result	int
!=	O
ASN1_SUCCESS	int
)	O
{	O
warn	O
(	O
)	O
;	O
return	O
result	int
;	O
}	O
if	O
(	O
tag	*(long)
!=	O
ETYPE_TAG	O
(	O
etype	*(int)
)	O
)	O
{	O
warn	O
(	O
)	O
;	O
return	O
ASN1_DER_ERROR	int
;	O
}	O
p	*(char)
+=	O
tag_len	*(int)
;	O
DECR_LEN	O
(	O
der_len	int
,	O
tag_len	*(int)
)	O
;	O
if	O
(	O
ber_len	int
)	O
*	O
ber_len	int
+=	O
tag_len	*(int)
;	O
}	O
if	O
(	O
(	O
(	O
(	O
dflags	int
&	O
DECODE_FLAG_CONSTRUCTED	O
)	O
||	O
class	int
==	O
ASN1_CLASS_STRUCTURED	int
)	O
&&	O
ETYPE_IS_STRING	O
(	O
etype	*(int)
)	O
)	O
&&	O
!	O
(	O
dflags	int
&	O
DECODE_FLAG_LEVEL3	O
)	O
)	O
{	O
if	O
(	O
der_len	int
==	O
0	int
)	O
{	O
warn	O
(	O
)	O
;	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
goto	O
cleanup	O
;	O
}	O
if	O
(	O
der_len	int
>	O
0	int
&&	O
p	*(char)
[	O
0	int
]	O
==	O
0x80	int
)	O
{	O
len_len	int
=	O
1	int
;	O
DECR_LEN	O
(	O
der_len	int
,	O
len_len	int
)	O
;	O
p	*(char)
+=	O
len_len	int
;	O
if	O
(	O
ber_len	int
)	O
*	O
ber_len	int
+=	O
len_len	int
;	O
do	O
{	O
unsigned	O
tmp_len	int
;	O
unsigned	O
flags	int
=	O
DECODE_FLAG_HAVE_TAG	int
;	O
if	O
(	O
dflags	int
&	O
DECODE_FLAG_LEVEL1	O
)	O
flags	int
|=	O
DECODE_FLAG_LEVEL2	O
;	O
else	O
if	O
(	O
dflags	int
&	O
DECODE_FLAG_LEVEL2	O
)	O
flags	int
|=	O
DECODE_FLAG_LEVEL3	O
;	O
else	O
flags	int
|=	O
DECODE_FLAG_LEVEL1	O
;	O
result	int
=	O
_asn1_decode_simple_ber	(int,*(char),int,*(*(char)),*(int),*(int),int)->(int)
(	O
etype	*(int)
,	O
p	*(char)
,	O
der_len	int
,	O
&	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
&	O
out_len	int
,	O
&	O
tmp_len	int
,	O
flags	int
)	O
;	O
if	O
(	O
result	int
!=	O
ASN1_SUCCESS	int
)	O
{	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
p	*(char)
+=	O
tmp_len	int
;	O
DECR_LEN	O
(	O
der_len	int
,	O
tmp_len	int
)	O
;	O
if	O
(	O
ber_len	int
)	O
*	O
ber_len	int
+=	O
tmp_len	int
;	O
DECR_LEN	O
(	O
der_len	int
,	O
2	int
)	O
;	O
result	int
=	O
append	(*(*(char)),*(int),*(char),int)->(int)
(	O
&	O
total	*(char)
,	O
&	O
total_size	int
,	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
out_len	int
)	O
;	O
if	O
(	O
result	int
!=	O
ASN1_SUCCESS	int
)	O
{	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
free	(*(void))->(void)
(	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
NULL	O
;	O
if	O
(	O
p	*(char)
[	O
0	int
]	O
==	O
0	int
&&	O
p	*(char)
[	O
1	int
]	O
==	O
0	int
)	O
{	O
if	O
(	O
ber_len	int
)	O
*	O
ber_len	int
+=	O
2	int
;	O
break	O
;	O
}	O
der_len	int
+=	O
2	int
;	O
if	O
(	O
der_len	int
==	O
2	int
)	O
{	O
warn	O
(	O
)	O
;	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
goto	O
cleanup	O
;	O
}	O
}	O
while	O
(	O
1	int
)	O
;	O
}	O
else	O
{	O
long	O
const_len	long
;	O
result	int
=	O
asn1_get_length_ber	(*(char),int,*(int))->(long)
(	O
p	*(char)
,	O
der_len	int
,	O
&	O
len_len	int
)	O
;	O
if	O
(	O
result	int
<	O
0	int
)	O
{	O
warn	O
(	O
)	O
;	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
goto	O
cleanup	O
;	O
}	O
DECR_LEN	O
(	O
der_len	int
,	O
len_len	int
)	O
;	O
p	*(char)
+=	O
len_len	int
;	O
const_len	long
=	O
result	int
;	O
if	O
(	O
ber_len	int
)	O
*	O
ber_len	int
+=	O
len_len	int
;	O
while	O
(	O
const_len	long
>	O
0	int
)	O
{	O
unsigned	O
tmp_len	int
;	O
unsigned	O
flags	int
=	O
DECODE_FLAG_HAVE_TAG	int
;	O
if	O
(	O
dflags	int
&	O
DECODE_FLAG_LEVEL1	O
)	O
flags	int
|=	O
DECODE_FLAG_LEVEL2	O
;	O
else	O
if	O
(	O
dflags	int
&	O
DECODE_FLAG_LEVEL2	O
)	O
flags	int
|=	O
DECODE_FLAG_LEVEL3	O
;	O
else	O
flags	int
|=	O
DECODE_FLAG_LEVEL1	O
;	O
result	int
=	O
_asn1_decode_simple_ber	(int,*(char),int,*(*(char)),*(int),*(int),int)->(int)
(	O
etype	*(int)
,	O
p	*(char)
,	O
der_len	int
,	O
&	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
&	O
out_len	int
,	O
&	O
tmp_len	int
,	O
flags	int
)	O
;	O
if	O
(	O
result	int
!=	O
ASN1_SUCCESS	int
)	O
{	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
p	*(char)
+=	O
tmp_len	int
;	O
DECR_LEN	O
(	O
der_len	int
,	O
tmp_len	int
)	O
;	O
DECR_LEN	O
(	O
const_len	long
,	O
tmp_len	int
)	O
;	O
if	O
(	O
ber_len	int
)	O
*	O
ber_len	int
+=	O
tmp_len	int
;	O
result	int
=	O
append	(*(*(char)),*(int),*(char),int)->(int)
(	O
&	O
total	*(char)
,	O
&	O
total_size	int
,	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
out_len	int
)	O
;	O
if	O
(	O
result	int
!=	O
ASN1_SUCCESS	int
)	O
{	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
free	(*(void))->(void)
(	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
NULL	O
;	O
}	O
}	O
}	O
else	O
if	O
(	O
class	int
==	O
ETYPE_CLASS	O
(	O
etype	*(int)
)	O
)	O
{	O
if	O
(	O
ber_len	int
)	O
{	O
result	int
=	O
asn1_get_length_der	(*(char),int,*(int))->(long)
(	O
p	*(char)
,	O
der_len	int
,	O
&	O
len_len	int
)	O
;	O
if	O
(	O
result	int
<	O
0	int
)	O
{	O
warn	O
(	O
)	O
;	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
goto	O
cleanup	O
;	O
}	O
*	O
ber_len	int
+=	O
result	int
+	O
len_len	int
;	O
}	O
result	int
=	O
_asn1_decode_simple_der	(int,*(char),int,*(*(char)),*(int),int)->(int)
(	O
etype	*(int)
,	O
der	*(char)
,	O
_der_len	int
,	O
&	O
cout	*(char)
,	O
&	O
out_len	int
,	O
dflags	int
)	O
;	O
if	O
(	O
result	int
!=	O
ASN1_SUCCESS	int
)	O
{	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
result	int
=	O
append	(*(*(char)),*(int),*(char),int)->(int)
(	O
&	O
total	*(char)
,	O
&	O
total_size	int
,	O
cout	*(char)
,	O
out_len	int
)	O
;	O
if	O
(	O
result	int
!=	O
ASN1_SUCCESS	int
)	O
{	O
warn	O
(	O
)	O
;	O
goto	O
cleanup	O
;	O
}	O
}	O
else	O
{	O
warn	O
(	O
)	O
;	O
result	int
=	O
ASN1_DER_ERROR	int
;	O
goto	O
cleanup	O
;	O
}	O
*	O
str	*(*(char))
=	O
total	*(char)
;	O
*	O
str_len	*(int)
=	O
total_size	int
;	O
return	O
ASN1_SUCCESS	int
;	O
cleanup	O
:	O
free	(*(void))->(void)
(	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
free	(*(void))->(void)
(	O
total	*(char)
)	O
;	O
return	O
result	int
;	O
}	O
int	O
asn1_decode_simple_ber	(int,*(char),int,*(*(char)),*(int),*(int))->(int)
(	O
unsigned	O
int	O
etype	*(int)
,	O
const	O
unsigned	O
char	O
*	O
der	*(char)
,	O
unsigned	O
int	O
_der_len	int
,	O
unsigned	O
char	O
*	O
*	O
str	*(*(char))
,	O
unsigned	O
int	O
*	O
str_len	*(int)
,	O
unsigned	O
int	O
*	O
ber_len	int
)	O
{	O
return	O
_asn1_decode_simple_ber	(int,*(char),int,*(*(char)),*(int),*(int),int)->(int)
(	O
etype	*(int)
,	O
der	*(char)
,	O
_der_len	int
,	O
str	*(*(char))
,	O
str_len	*(int)
,	O
ber_len	int
,	O
DECODE_FLAG_HAVE_TAG	int
)	O
;	O
}	O
