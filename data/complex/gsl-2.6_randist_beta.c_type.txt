double	O
gsl_ran_beta	(*(struct(*(struct(*`,long,long,long,*`,*`,*`)),*(void))),double,double)->(double)
(	O
const	O
gsl_rng	struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void))
*	O
r	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
,	O
const	O
double	O
a	double
,	O
const	O
double	O
b	double
)	O
{	O
if	O
(	O
(	O
a	double
<=	O
1.0	int
)	O
&&	O
(	O
b	double
<=	O
1.0	int
)	O
)	O
{	O
double	O
U	double
,	O
V	double
,	O
X	*(float)
,	O
Y	*(float)
;	O
while	O
(	O
1	int
)	O
{	O
U	double
=	O
gsl_rng_uniform_pos	(*(struct(*(struct(*`,long,long,long,*`,*`,*`)),*(void))))->(double)
(	O
r	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
)	O
;	O
V	double
=	O
gsl_rng_uniform_pos	(*(struct(*(struct(*`,long,long,long,*`,*`,*`)),*(void))))->(double)
(	O
r	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
)	O
;	O
X	*(float)
=	O
pow	(double,double)->(double)
(	O
U	double
,	O
1.0	int
/	O
a	double
)	O
;	O
Y	*(float)
=	O
pow	(double,double)->(double)
(	O
V	double
,	O
1.0	int
/	O
b	double
)	O
;	O
if	O
(	O
(	O
X	*(float)
+	O
Y	*(float)
)	O
<=	O
1.0	int
)	O
{	O
if	O
(	O
X	*(float)
+	O
Y	*(float)
>	O
0	int
)	O
{	O
return	O
X	*(float)
/	O
(	O
X	*(float)
+	O
Y	*(float)
)	O
;	O
}	O
else	O
{	O
double	O
logX	double
=	O
log	(double)->(double)
(	O
U	double
)	O
/	O
a	double
;	O
double	O
logY	double
=	O
log	(double)->(double)
(	O
V	double
)	O
/	O
b	double
;	O
double	O
logM	double
=	O
logX	double
>	O
logY	double
?	O
logX	double
:	O
logY	double
;	O
logX	double
-=	O
logM	double
;	O
logY	double
-=	O
logM	double
;	O
return	O
exp	(double)->(double)
(	O
logX	double
-	O
log	(double)->(double)
(	O
exp	(double)->(double)
(	O
logX	double
)	O
+	O
exp	(double)->(double)
(	O
logY	double
)	O
)	O
)	O
;	O
}	O
}	O
}	O
}	O
else	O
{	O
double	O
x1	double
=	O
gsl_ran_gamma	(*(struct(*(struct(*`,long,long,long,*`,*`,*`)),*(void))),double,double)->(double)
(	O
r	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
,	O
a	double
,	O
1.0	int
)	O
;	O
double	O
x2	double
=	O
gsl_ran_gamma	(*(struct(*(struct(*`,long,long,long,*`,*`,*`)),*(void))),double,double)->(double)
(	O
r	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
,	O
b	double
,	O
1.0	int
)	O
;	O
return	O
x1	double
/	O
(	O
x1	double
+	O
x2	double
)	O
;	O
}	O
}	O
double	O
gsl_ran_beta_pdf	(double,double,double)->(double)
(	O
const	O
double	O
x	double
,	O
const	O
double	O
a	double
,	O
const	O
double	O
b	double
)	O
{	O
if	O
(	O
x	double
<	O
0	int
||	O
x	double
>	O
1	int
)	O
{	O
return	O
0	int
;	O
}	O
else	O
{	O
double	O
p	int
;	O
double	O
gab	double
=	O
gsl_sf_lngamma	(double)->(double)
(	O
a	double
+	O
b	double
)	O
;	O
double	O
ga	double
=	O
gsl_sf_lngamma	(double)->(double)
(	O
a	double
)	O
;	O
double	O
gb	double
=	O
gsl_sf_lngamma	(double)->(double)
(	O
b	double
)	O
;	O
if	O
(	O
x	double
==	O
0.0	int
||	O
x	double
==	O
1.0	int
)	O
{	O
if	O
(	O
a	double
>	O
1.0	int
&&	O
b	double
>	O
1.0	int
)	O
{	O
p	int
=	O
0.0	int
;	O
}	O
else	O
{	O
p	int
=	O
exp	(double)->(double)
(	O
gab	double
-	O
ga	double
-	O
gb	double
)	O
*	O
pow	(double,double)->(double)
(	O
x	double
,	O
a	double
-	O
1	int
)	O
*	O
pow	(double,double)->(double)
(	O
1	int
-	O
x	double
,	O
b	double
-	O
1	int
)	O
;	O
}	O
}	O
else	O
{	O
p	int
=	O
exp	(double)->(double)
(	O
gab	double
-	O
ga	double
-	O
gb	double
+	O
log	(double)->(double)
(	O
x	double
)	O
*	O
(	O
a	double
-	O
1	int
)	O
+	O
log1p	(double)->(double)
(	O
-	O
x	double
)	O
*	O
(	O
b	double
-	O
1	int
)	O
)	O
;	O
}	O
return	O
p	int
;	O
}	O
}	O
