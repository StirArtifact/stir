extern	O
char	O
*	O
*	O
environ	*(*(char))
;	O
extern	O
char	O
*	O
get_classpath	(*(char))->(*(char))
(	O
const	O
char	O
*	O
)	O
;	O
char	O
*	O
progname	*(char)
;	O
int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
char	O
*	O
progname	*(char)
=	O
argv	*(*(char))
[	O
0	int
]	O
;	O
char	O
*	O
basename	*(char)
=	O
progname	*(char)
;	O
char	O
*	O
p	*(char)
;	O
char	O
*	O
*	O
envp	*(*(char))
;	O
int	O
env_size	int
=	O
0	int
,	O
env_count	int
=	O
0	int
;	O
char	O
*	O
*	O
nargv	*(*(char))
,	O
*	O
*	O
nargp	*(*(char))
;	O
for	O
(	O
p	*(char)
=	O
progname	*(char)
;	O
*	O
p	*(char)
;	O
p	*(char)
++	O
)	O
{	O
if	O
(	O
*	O
p	*(char)
==	O
'/'	O
)	O
basename	*(char)
=	O
p	*(char)
+	O
1	int
;	O
}	O
p	*(char)
=	O
getenv	(*(char))->(*(char))
(	O
"CLASSPATH"	*(char)
)	O
;	O
if	O
(	O
p	*(char)
==	O
NULL	O
)	O
{	O
if	O
(	O
basename	*(char)
==	O
progname	*(char)
)	O
putenv	(*(char))->(int)
(	O
"CLASSPATH=."	*(char)
)	O
;	O
else	O
{	O
p	*(char)
=	O
malloc	(long)->(*(void))
(	O
basename	*(char)
-	O
progname	*(char)
+	O
50	int
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
p	*(char)
,	O
"CLASSPATH=%.*s"	*(char)
,	O
basename	*(char)
-	O
progname	*(char)
-	O
1	int
,	O
progname	*(char)
)	O
;	O
putenv	(*(char))->(int)
(	O
p	*(char)
)	O
;	O
}	O
}	O
putenv	(*(char))->(int)
(	O
get_classpath	(*(char))->(*(char))
(	O
argv	*(*(char))
[	O
0	int
]	O
)	O
)	O
;	O
for	O
(	O
envp	*(*(char))
=	O
environ	*(*(char))
;	O
*	O
envp	*(*(char))
!=	O
NULL	O
;	O
envp	*(*(char))
++	O
)	O
{	O
env_count	int
++	O
;	O
env_size	int
+=	O
strlen	(*(char))->(long)
(	O
*	O
envp	*(*(char))
)	O
;	O
}	O
nargv	*(*(char))
=	O
(	O
char	O
*	O
*	O
)	O
malloc	(long)->(*(void))
(	O
(	O
env_count	int
+	O
5	int
)	O
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
nargp	*(*(char))
=	O
nargv	*(*(char))
;	O
*	O
nargp	*(*(char))
++	O
=	O
COMMAND	O
;	O
for	O
(	O
envp	*(*(char))
=	O
environ	*(*(char))
;	O
*	O
envp	*(*(char))
!=	O
NULL	O
;	O
envp	*(*(char))
++	O
)	O
{	O
*	O
nargp	*(*(char))
=	O
(	O
char	O
*	O
)	O
malloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
*	O
envp	*(*(char))
)	O
+	O
3	int
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
*	O
nargp	*(*(char))
,	O
"-D%s"	*(char)
,	O
*	O
envp	*(*(char))
)	O
;	O
nargp	*(*(char))
++	O
;	O
}	O
*	O
nargp	*(*(char))
++	O
=	O
"gnu.kawa.servlet.CGIServletWrapper"	*(char)
;	O
*	O
nargp	*(*(char))
++	O
=	O
basename	*(char)
;	O
*	O
nargp	*(*(char))
++	O
=	O
NULL	O
;	O
execvp	(*(char),array(*(char)))->(int)
(	O
nargv	*(*(char))
[	O
0	int
]	O
,	O
nargv	*(*(char))
)	O
;	O
}	O
