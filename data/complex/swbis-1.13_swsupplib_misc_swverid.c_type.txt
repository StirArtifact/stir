static	O
int	O
sg_swverid_uuid	int
;	O
static	O
char	O
*	O
rel_op_array	array(*(char))
[	O
]	O
=	O
{	O
SWVERID_RELOP_NEQ	*(char)
,	O
SWVERID_RELOP_LT	*(char)
,	O
SWVERID_RELOP_LTE	*(char)
,	O
SWVERID_RELOP_EQ2	*(char)
,	O
SWVERID_RELOP_EQ	*(char)
,	O
SWVERID_RELOP_GTE	*(char)
,	O
SWVERID_RELOP_GT	*(char)
,	O
(	O
char	O
*	O
)	O
NULL	O
}	O
;	O
static	O
int	O
is_fully_qualified	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))->(int)
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
spec	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
)	O
{	O
return	O
0	int
;	O
}	O
static	O
char	O
get_ver_id_char_from_this	(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))->(char)
(	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
this	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
{	O
char	O
*	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
this	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
ver_idM	array(char)
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
>	O
1	int
)	O
{	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
++	O
;	O
}	O
return	O
*	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
}	O
static	O
int	O
determine_rel_op_code	(*(char))->(int)
(	O
char	O
*	O
rel_op	*(char)
)	O
{	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
int	O
index	(*(char),int)->(*(char))
;	O
index	(*(char),int)->(*(char))
=	O
0	int
;	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
rel_op_array	array(*(char))
[	O
index	(*(char),int)->(*(char))
]	O
;	O
while	O
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
,	O
rel_op	*(char)
)	O
==	O
0	int
)	O
return	O
index	(*(char),int)->(*(char))
;	O
index	(*(char),int)->(*(char))
++	O
;	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
rel_op_array	array(*(char))
[	O
index	(*(char),int)->(*(char))
]	O
;	O
}	O
return	O
-	O
1	int
;	O
}	O
static	O
int	O
compare_relop	(int,int)->(int)
(	O
int	O
rel	int
,	O
int	O
req	int
)	O
{	O
if	O
(	O
req	int
==	O
SWVERID_CMP_NOT_USED	O
)	O
{	O
return	O
rel	int
;	O
}	O
if	O
(	O
req	int
==	O
SWVERID_CMP_NEQ	int
)	O
{	O
if	O
(	O
rel	int
!=	O
SWVERID_CMP_EQ	int
)	O
{	O
return	O
0	int
;	O
}	O
else	O
{	O
return	O
1	int
;	O
}	O
}	O
else	O
if	O
(	O
req	int
==	O
SWVERID_CMP_EQ	int
||	O
req	int
==	O
SWVERID_CMP_EQ2	int
)	O
{	O
if	O
(	O
rel	int
!=	O
SWVERID_CMP_EQ	int
&&	O
rel	int
!=	O
SWVERID_CMP_EQ2	int
)	O
{	O
return	O
1	int
;	O
}	O
else	O
{	O
return	O
0	int
;	O
}	O
}	O
else	O
if	O
(	O
req	int
==	O
SWVERID_CMP_LTE	int
)	O
{	O
if	O
(	O
rel	int
==	O
SWVERID_CMP_EQ	int
||	O
rel	int
==	O
SWVERID_CMP_LTE	int
||	O
rel	int
==	O
SWVERID_CMP_LT	int
||	O
0	int
)	O
{	O
return	O
0	int
;	O
}	O
else	O
{	O
return	O
1	int
;	O
}	O
}	O
else	O
if	O
(	O
req	int
==	O
SWVERID_CMP_LT	int
)	O
{	O
if	O
(	O
rel	int
==	O
SWVERID_CMP_LTE	int
||	O
0	int
)	O
{	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
rel	int
==	O
SWVERID_CMP_LT	int
||	O
0	int
)	O
{	O
return	O
0	int
;	O
}	O
else	O
{	O
return	O
1	int
;	O
}	O
}	O
else	O
if	O
(	O
req	int
==	O
SWVERID_CMP_GT	int
)	O
{	O
if	O
(	O
rel	int
==	O
SWVERID_CMP_GTE	int
||	O
0	int
)	O
{	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
rel	int
==	O
SWVERID_CMP_GT	int
||	O
0	int
)	O
{	O
return	O
0	int
;	O
}	O
else	O
{	O
return	O
1	int
;	O
}	O
}	O
else	O
if	O
(	O
req	int
==	O
SWVERID_CMP_GTE	int
)	O
{	O
if	O
(	O
rel	int
==	O
SWVERID_CMP_EQ	int
||	O
rel	int
==	O
SWVERID_CMP_GTE	int
||	O
rel	int
==	O
SWVERID_CMP_GT	int
||	O
0	int
)	O
{	O
return	O
0	int
;	O
}	O
else	O
{	O
return	O
1	int
;	O
}	O
}	O
else	O
{	O
return	O
-	O
1	int
;	O
}	O
}	O
static	O
int	O
swverid_i_rpmvercmp	(*(char),*(char))->(int)
(	O
char	O
*	O
target_list	*(char)
,	O
char	O
*	O
candidate_list	*(char)
)	O
{	O
int	O
ret	int
;	O
char	O
*	O
target	*(char)
;	O
char	O
*	O
candidate	*(char)
;	O
target	*(char)
=	O
target_list	*(char)
;	O
candidate	*(char)
=	O
candidate_list	*(char)
;	O
if	O
(	O
!	O
target	*(char)
||	O
!	O
candidate	*(char)
)	O
{	O
return	O
0	int
;	O
}	O
ret	int
=	O
swlib_rpmvercmp	(*(char),*(char))->(int)
(	O
target	*(char)
,	O
candidate	*(char)
)	O
;	O
return	O
ret	int
;	O
}	O
char	O
*	O
swverid_i_print	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
int	O
i	int
=	O
0	int
;	O
char	O
*	O
ret	int
;	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
version	array(char)
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
32	int
)	O
;	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
next	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
while	O
(	O
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
cplob_val	(*(struct(*(*(char)),int,int,long,int)),int)->(*(char))
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
,	O
i	int
++	O
)	O
)	O
)	O
{	O
if	O
(	O
i	int
>	O
1	int
)	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
"."	*(char)
)	O
;	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
}	O
next	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
ver_id_listM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
swverid_print_ver_id	(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
next	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
,	O
version	array(char)
)	O
;	O
if	O
(	O
strob_strlen	(*(struct(*(char),*(char),int,int,int,char,int)))->(long)
(	O
version	array(char)
)	O
>	O
0	int
)	O
{	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
","	*(char)
)	O
;	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
version	array(char)
)	O
)	O
;	O
}	O
ret	int
=	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
version	array(char)
)	O
;	O
return	O
ret	int
;	O
}	O
static	O
int	O
swverid_i_fnmatch	(*(char),*(char),int)->(int)
(	O
char	O
*	O
candidate	*(char)
,	O
char	O
*	O
target	*(char)
,	O
int	O
flags	int
)	O
{	O
int	O
ret	int
;	O
if	O
(	O
!	O
target	*(char)
||	O
!	O
candidate	*(char)
)	O
{	O
return	O
0	int
;	O
}	O
ret	int
=	O
fnmatch	(*(char),*(char),int)->(int)
(	O
candidate	*(char)
,	O
target	*(char)
,	O
flags	int
)	O
;	O
return	O
ret	int
;	O
}	O
static	O
void	O
delete_version_id	(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))->(void)
(	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
{	O
free	(*(void))->(void)
(	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
;	O
}	O
static	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
create_version_id	(*(char))->(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))
(	O
char	O
*	O
version_id_string	*(char)
)	O
{	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
(	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
)	O
)	O
;	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
;	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
version_id_string	*(char)
;	O
char	O
*	O
olds	*(char)
;	O
int	O
count	int
;	O
int	O
ret	int
;	O
memset	(*(void),int,long)->(*(void))
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
ver_idM	array(char)
,	O
'\0'	O
,	O
sizeof	O
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
ver_idM	array(char)
)	O
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
idM	char
,	O
'\0'	O
,	O
sizeof	O
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
idM	char
)	O
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
vqM	array(char)
,	O
'\0'	O
,	O
sizeof	O
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
vqM	array(char)
)	O
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
rel_opM	array(char)
,	O
'\0'	O
,	O
sizeof	O
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
rel_opM	array(char)
)	O
)	O
;	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
rel_op_codeM	int
=	O
0	int
;	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
valueM	int
=	O
NULL	O
;	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
nextM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
NULL	O
;	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
10	int
)	O
;	O
olds	*(char)
=	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
while	O
(	O
isalpha	(int)->(int)
(	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
s	*(struct(*(char),*(char),int,int,int,char,int))
++	O
;	O
if	O
(	O
(	O
olds	*(char)
-	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
==	O
0	int
||	O
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
-	O
olds	*(char)
)	O
>	O
2	int
)	O
{	O
swbis_free	O
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
;	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
-	O
olds	*(char)
)	O
==	O
1	int
)	O
{	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
idM	char
,	O
olds	*(char)
,	O
1	int
)	O
;	O
if	O
(	O
strpbrk	(*(char),*(char))->(*(char))
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
idM	char
,	O
SWVERID_VERIDS_POSIX	*(char)
SWVERID_VERIDS_SWBIS	*(char)
)	O
==	O
NULL	O
)	O
{	O
return	O
NULL	O
;	O
}	O
}	O
else	O
if	O
(	O
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
-	O
olds	*(char)
)	O
==	O
2	int
)	O
{	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
vqM	array(char)
,	O
olds	*(char)
,	O
1	int
)	O
;	O
if	O
(	O
strpbrk	(*(char),*(char))->(*(char))
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
vqM	array(char)
,	O
SWVERID_QUALIFIER	*(char)
)	O
==	O
NULL	O
)	O
{	O
return	O
NULL	O
;	O
}	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
idM	char
,	O
olds	*(char)
+	O
1	int
,	O
1	int
)	O
;	O
if	O
(	O
strpbrk	(*(char),*(char))->(*(char))
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
idM	char
,	O
SWVERID_VERIDS_POSIX	*(char)
SWVERID_VERIDS_SWBIS	*(char)
)	O
==	O
NULL	O
)	O
{	O
return	O
NULL	O
;	O
}	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"swverid fatal error\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
77	int
)	O
;	O
}	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
ver_idM	array(char)
,	O
olds	*(char)
,	O
(	O
int	O
)	O
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
-	O
olds	*(char)
)	O
)	O
;	O
count	int
=	O
0	int
;	O
olds	*(char)
=	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
while	O
(	O
count	int
<	O
3	int
&&	O
(	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
==	O
'='	O
||	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
==	O
'|'	O
||	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
==	O
'<'	O
||	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
==	O
'>'	O
)	O
)	O
{	O
s	*(struct(*(char),*(char),int,int,int,char,int))
++	O
;	O
count	int
++	O
;	O
}	O
if	O
(	O
count	int
>	O
2	int
)	O
{	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
(	O
olds	*(char)
-	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
==	O
0	int
||	O
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
-	O
olds	*(char)
)	O
>	O
2	int
)	O
{	O
swbis_free	O
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
;	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
return	O
NULL	O
;	O
}	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
rel_opM	array(char)
,	O
olds	*(char)
,	O
(	O
int	O
)	O
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
-	O
olds	*(char)
)	O
)	O
;	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
rel_opM	array(char)
[	O
(	O
int	O
)	O
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
-	O
olds	*(char)
)	O
]	O
=	O
'\0'	O
;	O
ret	int
=	O
determine_rel_op_code	(*(char))->(int)
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
rel_opM	array(char)
)	O
;	O
if	O
(	O
ret	int
<	O
0	int
)	O
{	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
return	O
NULL	O
;	O
}	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
rel_op_codeM	int
=	O
ret	int
;	O
if	O
(	O
*	O
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
idM	char
)	O
==	O
SWVERID_VERID_REVISION	O
)	O
{	O
if	O
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
rel_op_codeM	int
==	O
SWVERID_CMP_EQ2	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: error: invalid use of '=' for revision specs\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
)	O
;	O
return	O
NULL	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
rel_op_codeM	int
!=	O
SWVERID_CMP_EQ2	int
)	O
{	O
return	O
NULL	O
;	O
}	O
}	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
valueM	int
=	O
NULL	O
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
idM	char
,	O
SWVERID_VERIDS_LOCATION	*(char)
)	O
==	O
0	int
)	O
{	O
swlib_squash_trailing_slash	(*(char))->(void)
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
if	O
(	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
!=	O
'/'	O
)	O
{	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
"/"	*(char)
)	O
;	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strdup	(*(char))->(*(char))
(	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
;	O
}	O
else	O
{	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strdup	(*(char))->(*(char))
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
}	O
}	O
else	O
{	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strdup	(*(char))->(*(char))
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
}	O
}	O
else	O
{	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strdup	(*(char))->(*(char))
(	O
""	*(char)
)	O
;	O
}	O
SWLIB_ASSERT	O
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
!=	O
NULL	O
)	O
;	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
valueM	int
=	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
return	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
}	O
static	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
copy_construct_version_id	(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))->(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))
(	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
{	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
;	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
new_ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
char	O
*	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
char	O
*	O
val	array(int)
;	O
if	O
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
12	int
)	O
;	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
vqM	array(char)
)	O
;	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
idM	char
)	O
;	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
rel_opM	array(char)
)	O
;	O
if	O
(	O
(	O
val	array(int)
=	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
valueM	int
)	O
!=	O
NULL	O
)	O
{	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
val	array(int)
)	O
;	O
}	O
else	O
{	O
;	O
}	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
new_ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
create_version_id	(*(char))->(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))
(	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
;	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
return	O
new_ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
}	O
static	O
void	O
ver_ids_copy	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))->(void)
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
dst	*(char)
,	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
src	*(char)
)	O
{	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
vid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
copy_of_last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
dst	*(char)
->	O
ver_id_listM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
while	O
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
{	O
vid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
nextM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
swbis_free	O
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
;	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
vid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
}	O
dst	*(char)
->	O
ver_id_listM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
NULL	O
;	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
src	*(char)
->	O
ver_id_listM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
while	O
(	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
{	O
copy_of_last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
copy_construct_version_id	(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))->(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))
(	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
;	O
swverid_add_verid	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))->(void)
(	O
dst	*(char)
,	O
copy_of_last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
;	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
nextM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
}	O
}	O
static	O
int	O
compare_version_id	(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),int)->(int)
(	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
id_target	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
,	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
id_candidate	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
,	O
int	O
req	int
)	O
{	O
int	O
ret	int
=	O
-	O
1	int
;	O
int	O
retval	int
=	O
-	O
1	int
;	O
int	O
flags	int
;	O
char	O
verid_letter	char
;	O
if	O
(	O
!	O
id_target	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
||	O
!	O
id_candidate	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
{	O
if	O
(	O
id_candidate	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
id_candidate	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
rel_op_codeM	int
=	O
SWVERID_CMP_NOT_USED	O
;	O
return	O
0	int
;	O
}	O
verid_letter	char
=	O
get_ver_id_char_from_this	(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))->(char)
(	O
id_candidate	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
;	O
if	O
(	O
verid_letter	char
==	O
SWVERID_VERID_REVISION	O
)	O
{	O
ret	int
=	O
swverid_i_rpmvercmp	(*(char),*(char))->(int)
(	O
id_target	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
valueM	int
,	O
id_candidate	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
valueM	int
)	O
;	O
if	O
(	O
ret	int
==	O
1	int
)	O
{	O
id_candidate	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
rel_op_codeM	int
=	O
SWVERID_CMP_LT	int
;	O
}	O
else	O
if	O
(	O
ret	int
==	O
-	O
1	int
)	O
{	O
id_candidate	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
rel_op_codeM	int
=	O
SWVERID_CMP_GT	int
;	O
retval	int
=	O
1	int
;	O
}	O
else	O
if	O
(	O
ret	int
==	O
0	int
)	O
{	O
id_candidate	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
rel_op_codeM	int
=	O
SWVERID_CMP_EQ	int
;	O
retval	int
=	O
0	int
;	O
}	O
else	O
{	O
return	O
-	O
1	int
;	O
}	O
}	O
else	O
{	O
flags	int
=	O
0	int
;	O
ret	int
=	O
swverid_i_fnmatch	(*(char),*(char),int)->(int)
(	O
id_candidate	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
valueM	int
,	O
id_target	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
valueM	int
,	O
flags	int
)	O
;	O
if	O
(	O
ret	int
==	O
0	int
)	O
{	O
id_candidate	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
rel_op_codeM	int
=	O
SWVERID_CMP_EQ	int
;	O
retval	int
=	O
0	int
;	O
}	O
else	O
{	O
id_candidate	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
rel_op_codeM	int
=	O
SWVERID_CMP_NEQ	int
;	O
retval	int
=	O
1	int
;	O
}	O
}	O
retval	int
=	O
compare_relop	(int,int)->(int)
(	O
id_candidate	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
rel_op_codeM	int
,	O
req	int
)	O
;	O
return	O
retval	int
;	O
}	O
static	O
int	O
compare_taglist	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))->(int)
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
pattern	*(char)
,	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
fq_candidate	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
)	O
{	O
return	O
-	O
1	int
;	O
}	O
static	O
int	O
compare_all_version_ids	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))->(int)
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
target	*(char)
,	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
candidate	*(char)
)	O
{	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
id_target	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
id_candidate	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
if	O
(	O
is_fully_qualified	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))->(int)
(	O
target	*(char)
)	O
==	O
0	int
)	O
{	O
return	O
-	O
1	int
;	O
}	O
id_target	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
swverid_get_verid	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(char),int)->(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))
(	O
target	*(char)
,	O
SWVERID_VERIDS_REVISION	*(char)
,	O
1	int
)	O
;	O
id_candidate	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
swverid_get_verid	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(char),int)->(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))
(	O
candidate	*(char)
,	O
SWVERID_VERIDS_REVISION	*(char)
,	O
1	int
)	O
;	O
compare_version_id	(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),int)->(int)
(	O
id_target	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
,	O
id_candidate	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
,	O
SWVERID_CMP_NOT_USED	O
)	O
;	O
id_target	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
swverid_get_verid	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(char),int)->(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))
(	O
target	*(char)
,	O
SWVERID_VERIDS_ARCHITECTURE	*(char)
,	O
1	int
)	O
;	O
id_candidate	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
swverid_get_verid	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(char),int)->(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))
(	O
candidate	*(char)
,	O
SWVERID_VERIDS_ARCHITECTURE	*(char)
,	O
1	int
)	O
;	O
compare_version_id	(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),int)->(int)
(	O
id_target	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
,	O
id_candidate	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
,	O
SWVERID_CMP_NOT_USED	O
)	O
;	O
id_target	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
swverid_get_verid	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(char),int)->(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))
(	O
target	*(char)
,	O
SWVERID_VERIDS_VENDOR_TAG	*(char)
,	O
1	int
)	O
;	O
id_candidate	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
swverid_get_verid	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(char),int)->(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))
(	O
candidate	*(char)
,	O
SWVERID_VERIDS_VENDOR_TAG	*(char)
,	O
1	int
)	O
;	O
compare_version_id	(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),int)->(int)
(	O
id_target	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
,	O
id_candidate	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
,	O
SWVERID_CMP_NOT_USED	O
)	O
;	O
id_target	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
swverid_get_verid	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(char),int)->(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))
(	O
target	*(char)
,	O
SWVERID_VERIDS_LOCATION	*(char)
,	O
1	int
)	O
;	O
id_candidate	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
swverid_get_verid	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(char),int)->(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))
(	O
candidate	*(char)
,	O
SWVERID_VERIDS_LOCATION	*(char)
,	O
1	int
)	O
;	O
compare_version_id	(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),int)->(int)
(	O
id_target	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
,	O
id_candidate	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
,	O
SWVERID_CMP_NOT_USED	O
)	O
;	O
id_target	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
swverid_get_verid	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(char),int)->(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))
(	O
target	*(char)
,	O
SWVERID_VERIDS_QUALIFIER	*(char)
,	O
1	int
)	O
;	O
id_candidate	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
swverid_get_verid	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(char),int)->(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))
(	O
candidate	*(char)
,	O
SWVERID_VERIDS_QUALIFIER	*(char)
,	O
1	int
)	O
;	O
compare_version_id	(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),int)->(int)
(	O
id_target	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
,	O
id_candidate	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
,	O
SWVERID_CMP_NOT_USED	O
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
parse_version_ids_string	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(char))->(int)
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
char	O
*	O
verid_string	*(char)
)	O
{	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
10	int
)	O
;	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_strtok	(*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
verid_string	*(char)
,	O
","	*(char)
)	O
;	O
while	O
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
create_version_id	(*(char))->(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
if	O
(	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
==	O
(	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
)	O
(	O
NULL	O
)	O
)	O
return	O
-	O
1	int
;	O
swverid_add_verid	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))->(void)
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
;	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_strtok	(*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
NULL	O
,	O
","	*(char)
)	O
;	O
}	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
parse_swspec_string	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))->(int)
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
)	O
{	O
char	O
*	O
source	*(char)
=	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
source_copyM	*(char)
;	O
char	O
*	O
tag	*(char)
;	O
char	O
*	O
tags	*(char)
;	O
char	O
*	O
verids	*(char)
;	O
char	O
*	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
int	O
ret	int
;	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
20	int
)	O
;	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
tag_tmp2	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
20	int
)	O
;	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
ver_tmp2	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
20	int
)	O
;	O
if	O
(	O
!	O
source	*(char)
||	O
strlen	(*(char))->(long)
(	O
source	*(char)
)	O
==	O
0	int
)	O
return	O
-	O
2	int
;	O
cplob_shallow_reset	(*(struct(*(*(char)),int,int,long,int)))->(void)
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
)	O
;	O
tags	*(char)
=	O
strob_strtok	(*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char))->(*(char))
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
source	*(char)
,	O
","	*(char)
)	O
;	O
if	O
(	O
tags	*(char)
==	O
NULL	O
)	O
return	O
-	O
1	int
;	O
tag	*(char)
=	O
strob_strtok	(*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char))->(*(char))
(	O
tag_tmp2	*(struct(*(char),*(char),int,int,int,char,int))
,	O
tags	*(char)
,	O
"."	*(char)
)	O
;	O
if	O
(	O
tag	*(char)
==	O
NULL	O
)	O
return	O
-	O
1	int
;	O
if	O
(	O
strpbrk	(*(char),*(char))->(*(char))
(	O
tag	*(char)
,	O
SWVERID_RELOP_NEQ	*(char)
SWVERID_RELOP_LT	*(char)
SWVERID_RELOP_LTE	*(char)
SWVERID_RELOP_EQ2	*(char)
SWVERID_RELOP_EQ	*(char)
SWVERID_RELOP_GTE	*(char)
SWVERID_RELOP_GT	*(char)
)	O
)	O
{	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
tag_tmp2	*(struct(*(char),*(char),int,int,int,char,int))
,	O
"*"	*(char)
)	O
;	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
tag_tmp2	*(struct(*(char),*(char),int,int,int,char,int))
,	O
","	*(char)
)	O
;	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
tag_tmp2	*(struct(*(char),*(char),int,int,int,char,int))
,	O
source	*(char)
)	O
;	O
tags	*(char)
=	O
strob_strtok	(*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char))->(*(char))
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
tag_tmp2	*(struct(*(char),*(char),int,int,int,char,int))
)	O
,	O
","	*(char)
)	O
;	O
tag	*(char)
=	O
strob_strtok	(*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char))->(*(char))
(	O
tag_tmp2	*(struct(*(char),*(char),int,int,int,char,int))
,	O
tags	*(char)
,	O
"."	*(char)
)	O
;	O
}	O
while	O
(	O
tag	*(char)
)	O
{	O
cplob_add_nta	(*(struct(*(*(char)),int,int,long,int)),*(char))->(void)
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
,	O
strdup	(*(char))->(*(char))
(	O
tag	*(char)
)	O
)	O
;	O
tag	*(char)
=	O
strob_strtok	(*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char))->(*(char))
(	O
tag_tmp2	*(struct(*(char),*(char),int,int,int,char,int))
,	O
NULL	O
,	O
"."	*(char)
)	O
;	O
}	O
verids	*(char)
=	O
strob_strtok	(*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char))->(*(char))
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
NULL	O
,	O
","	*(char)
)	O
;	O
if	O
(	O
verids	*(char)
)	O
{	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
verids	*(char)
;	O
while	O
(	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
,	O
"*"	*(char)
)	O
==	O
0	int
)	O
{	O
ret	int
=	O
0	int
;	O
}	O
else	O
{	O
ret	int
=	O
parse_version_ids_string	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(char))->(int)
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
;	O
}	O
if	O
(	O
ret	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: error parsing version id [%s]\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
;	O
return	O
-	O
1	int
;	O
}	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
strob_strtok	(*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char))->(*(char))
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
NULL	O
,	O
","	*(char)
)	O
;	O
}	O
}	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
tag_tmp2	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
ver_tmp2	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
classify_namespace	(*(char))->(int)
(	O
char	O
*	O
object_kw	*(char)
)	O
{	O
if	O
(	O
!	O
object_kw	*(char)
)	O
return	O
SWVERID_NS_NA	O
;	O
if	O
(	O
!	O
strncmp	(*(char),*(char),long)->(int)
(	O
"fileset"	*(char)
,	O
object_kw	*(char)
,	O
7	int
)	O
)	O
{	O
return	O
SWVERID_NS_MID	int
;	O
}	O
else	O
if	O
(	O
!	O
strncmp	(*(char),*(char),long)->(int)
(	O
SW_A_control_file	*(char)
,	O
object_kw	*(char)
,	O
11	int
)	O
)	O
{	O
return	O
SWVERID_NS_MID	int
;	O
}	O
else	O
if	O
(	O
!	O
strncmp	(*(char),*(char),long)->(int)
(	O
SW_A_subproduct	*(char)
,	O
object_kw	*(char)
,	O
10	int
)	O
)	O
{	O
return	O
SWVERID_NS_MID	int
;	O
}	O
else	O
if	O
(	O
!	O
strncmp	(*(char),*(char),long)->(int)
(	O
SW_A_product	*(char)
,	O
object_kw	*(char)
,	O
7	int
)	O
)	O
{	O
return	O
SWVERID_NS_TOP	int
;	O
}	O
else	O
if	O
(	O
!	O
strncmp	(*(char),*(char),long)->(int)
(	O
SW_A_bundle	*(char)
,	O
object_kw	*(char)
,	O
6	int
)	O
)	O
{	O
return	O
SWVERID_NS_TOP	int
;	O
}	O
else	O
if	O
(	O
!	O
strncmp	(*(char),*(char),long)->(int)
(	O
SW_A_file	*(char)
,	O
object_kw	*(char)
,	O
4	int
)	O
)	O
{	O
return	O
SWVERID_NS_LOW	int
;	O
}	O
else	O
{	O
return	O
SWVERID_NS_NA	O
;	O
}	O
}	O
void	O
i_replace_verid	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),int)->(void)
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
,	O
int	O
do_replace	int
)	O
{	O
char	O
new_id	char
;	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
prev	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
newverid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
ver_id_listM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
nextM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
NULL	O
;	O
prev	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
NULL	O
;	O
new_id	char
=	O
get_ver_id_char_from_this	(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))->(char)
(	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
;	O
if	O
(	O
!	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
{	O
newverid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
copy_construct_version_id	(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))->(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))
(	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
;	O
swverid_add_verid	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))->(void)
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
newverid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
;	O
return	O
;	O
}	O
while	O
(	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
{	O
if	O
(	O
get_ver_id_char_from_this	(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))->(char)
(	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
==	O
new_id	char
&&	O
do_replace	int
)	O
{	O
newverid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
copy_construct_version_id	(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))->(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))
(	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
;	O
if	O
(	O
prev	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
{	O
prev	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
nextM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
newverid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
}	O
newverid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
nextM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
nextM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
return	O
;	O
}	O
else	O
if	O
(	O
get_ver_id_char_from_this	(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))->(char)
(	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
==	O
new_id	char
&&	O
do_replace	int
==	O
0	int
)	O
{	O
return	O
;	O
}	O
prev	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
nextM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
}	O
newverid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
copy_construct_version_id	(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))->(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))
(	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
;	O
swverid_add_verid	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))->(void)
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
newverid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
;	O
}	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid_copy	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))->(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
src	*(char)
)	O
{	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
dst	*(char)
;	O
char	O
*	O
tag	*(char)
;	O
int	O
n	long
;	O
dst	*(char)
=	O
swverid_open	(*(char),*(char))->(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))
(	O
NULL	O
,	O
NULL	O
)	O
;	O
if	O
(	O
src	*(char)
->	O
object_nameM	*(char)
)	O
{	O
if	O
(	O
dst	*(char)
->	O
object_nameM	*(char)
)	O
free	(*(void))->(void)
(	O
dst	*(char)
->	O
object_nameM	*(char)
)	O
;	O
dst	*(char)
->	O
object_nameM	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
src	*(char)
->	O
object_nameM	*(char)
)	O
;	O
}	O
else	O
{	O
dst	*(char)
->	O
object_nameM	*(char)
=	O
NULL	O
;	O
}	O
if	O
(	O
src	*(char)
->	O
source_copyM	*(char)
)	O
{	O
if	O
(	O
dst	*(char)
->	O
source_copyM	*(char)
)	O
free	(*(void))->(void)
(	O
dst	*(char)
->	O
source_copyM	*(char)
)	O
;	O
dst	*(char)
->	O
source_copyM	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
src	*(char)
->	O
source_copyM	*(char)
)	O
;	O
}	O
else	O
{	O
dst	*(char)
->	O
source_copyM	*(char)
=	O
NULL	O
;	O
}	O
if	O
(	O
src	*(char)
->	O
catalogM	*(char)
)	O
{	O
if	O
(	O
dst	*(char)
->	O
catalogM	*(char)
)	O
free	(*(void))->(void)
(	O
dst	*(char)
->	O
catalogM	*(char)
)	O
;	O
dst	*(char)
->	O
catalogM	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
src	*(char)
->	O
catalogM	*(char)
)	O
;	O
}	O
else	O
{	O
dst	*(char)
->	O
catalogM	*(char)
=	O
NULL	O
;	O
}	O
dst	*(char)
->	O
use_path_compareM	int
=	O
src	*(char)
->	O
use_path_compareM	int
;	O
dst	*(char)
->	O
namespaceM	array(char)
=	O
src	*(char)
->	O
namespaceM	array(char)
;	O
dst	*(char)
->	O
comparison_codeM	int
=	O
src	*(char)
->	O
comparison_codeM	int
;	O
cplob_close	(*(struct(*(*(char)),int,int,long,int)))->(void)
(	O
dst	*(char)
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
)	O
;	O
dst	*(char)
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
=	O
cplob_open	(int)->(*(struct(*(*(char)),int,int,long,int)))
(	O
1	int
)	O
;	O
cplob_add_nta	(*(struct(*(*(char)),int,int,long,int)),*(char))->(void)
(	O
dst	*(char)
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
,	O
(	O
char	O
*	O
)	O
(	O
NULL	O
)	O
)	O
;	O
n	long
=	O
0	int
;	O
while	O
(	O
(	O
tag	*(char)
=	O
swverid_get_tag	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),int)->(*(char))
(	O
src	*(char)
,	O
n	long
++	O
)	O
)	O
!=	O
NULL	O
)	O
{	O
cplob_add_nta	(*(struct(*(*(char)),int,int,long,int)),*(char))->(void)
(	O
dst	*(char)
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
,	O
strdup	(*(char))->(*(char))
(	O
tag	*(char)
)	O
)	O
;	O
}	O
ver_ids_copy	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))->(void)
(	O
dst	*(char)
,	O
src	*(char)
)	O
;	O
return	O
dst	*(char)
;	O
}	O
void	O
swverid_add_tag	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(char))->(void)
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
char	O
*	O
tag	*(char)
)	O
{	O
cplob_add_nta	(*(struct(*(*(char)),int,int,long,int)),*(char))->(void)
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
,	O
strdup	(*(char))->(*(char))
(	O
tag	*(char)
)	O
)	O
;	O
}	O
void	O
swverid_ver_id_set_object_qualifier	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(char))->(void)
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
char	O
*	O
objkeyword	*(char)
)	O
{	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
ver_id_listM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
while	O
(	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
{	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
vqM	array(char)
[	O
0	int
]	O
=	O
*	O
objkeyword	*(char)
;	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
vqM	array(char)
[	O
1	int
]	O
=	O
'\0'	O
;	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
nextM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
}	O
}	O
int	O
swverid_ver_id_unlink	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))->(int)
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
{	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
prev	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
prev	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
NULL	O
;	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
ver_id_listM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
while	O
(	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
{	O
if	O
(	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
==	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
{	O
if	O
(	O
prev	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
{	O
prev	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
nextM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
nextM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
}	O
else	O
{	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
ver_id_listM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
ver_id_listM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
nextM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
}	O
delete_version_id	(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))->(void)
(	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
;	O
return	O
0	int
;	O
}	O
prev	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
nextM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
}	O
return	O
-	O
1	int
;	O
}	O
static	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid_i_open	(*(char),*(char))->(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))
(	O
char	O
*	O
object_keyword	*(char)
,	O
char	O
*	O
swversion_string	*(char)
)	O
{	O
int	O
ret	int
;	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
;	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
=	O
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
)	O
)	O
;	O
if	O
(	O
!	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
)	O
return	O
NULL	O
;	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
object_nameM	*(char)
=	O
swlib_strdup	(*(char))->(*(char))
(	O
""	*(char)
)	O
;	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
=	O
cplob_open	(int)->(*(struct(*(*(char)),int,int,long,int)))
(	O
3	int
)	O
;	O
cplob_add_nta	(*(struct(*(*(char)),int,int,long,int)),*(char))->(void)
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
,	O
(	O
char	O
*	O
)	O
(	O
NULL	O
)	O
)	O
;	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
catalogM	*(char)
=	O
swlib_strdup	(*(char))->(*(char))
(	O
""	*(char)
)	O
;	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
comparison_codeM	int
=	O
SWVERID_CMP_EQ	int
;	O
swverid_set_namespace	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(char))->(void)
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
object_keyword	*(char)
)	O
;	O
swverid_set_object_name	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(char))->(void)
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
object_keyword	*(char)
)	O
;	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
ver_id_listM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
(	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
)	O
(	O
NULL	O
)	O
;	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
source_copyM	*(char)
=	O
(	O
char	O
*	O
)	O
(	O
NULL	O
)	O
;	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
use_path_compareM	int
=	O
0	int
;	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
swutsM	*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int))
=	O
swuts_create	()->(*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)))
(	O
)	O
;	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
altM	*(void)
=	O
NULL	O
;	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
alter_uuidM	int
=	O
0	int
;	O
if	O
(	O
swversion_string	*(char)
!=	O
(	O
char	O
*	O
)	O
(	O
NULL	O
)	O
)	O
{	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
source_copyM	*(char)
=	O
swlib_strdup	(*(char))->(*(char))
(	O
swversion_string	*(char)
)	O
;	O
ret	int
=	O
parse_swspec_string	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))->(int)
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
)	O
;	O
if	O
(	O
ret	int
<	O
0	int
)	O
{	O
return	O
NULL	O
;	O
}	O
}	O
return	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
;	O
}	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid_open	(*(char),*(char))->(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))
(	O
char	O
*	O
object_keyword	*(char)
,	O
char	O
*	O
swversion_string	*(char)
)	O
{	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
;	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
parent	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
;	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
;	O
int	O
i	int
;	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
if	O
(	O
swversion_string	*(char)
!=	O
(	O
char	O
*	O
)	O
(	O
NULL	O
)	O
)	O
{	O
i	int
=	O
0	int
;	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
NULL	O
;	O
parent	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
=	O
NULL	O
;	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
32	int
)	O
;	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_strtok	(*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char))->(*(char))
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
swversion_string	*(char)
,	O
"|\n\r"	*(char)
)	O
;	O
while	O
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
=	O
swverid_i_open	(*(char),*(char))->(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))
(	O
object_keyword	*(char)
,	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
if	O
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
if	O
(	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
altM	*(void)
=	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
;	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
;	O
if	O
(	O
i	int
==	O
0	int
)	O
parent	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
=	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
;	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_strtok	(*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char))->(*(char))
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
NULL	O
,	O
"|\n\r"	*(char)
)	O
;	O
i	int
++	O
;	O
}	O
if	O
(	O
parent	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
parent	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
;	O
if	O
(	O
sg_swverid_uuid	int
==	O
0	int
)	O
sg_swverid_uuid	int
++	O
;	O
parent	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
alter_uuidM	int
=	O
sg_swverid_uuid	int
++	O
;	O
while	O
(	O
(	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
swverid_get_alternate	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))->(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))
(	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
)	O
)	O
{	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
alter_uuidM	int
=	O
parent	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
alter_uuidM	int
;	O
}	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
}	O
else	O
{	O
parent	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
=	O
swverid_i_open	(*(char),*(char))->(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))
(	O
object_keyword	*(char)
,	O
NULL	O
)	O
;	O
if	O
(	O
parent	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
)	O
parent	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
alter_uuidM	int
=	O
sg_swverid_uuid	int
++	O
;	O
}	O
return	O
parent	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
;	O
}	O
void	O
swverid_set_namespace	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(char))->(void)
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
char	O
*	O
object_keyword	*(char)
)	O
{	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
namespaceM	array(char)
=	O
classify_namespace	(*(char))->(int)
(	O
object_keyword	*(char)
)	O
;	O
swverid_set_object_name	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(char))->(void)
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
object_keyword	*(char)
)	O
;	O
}	O
void	O
swverid_close	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))->(void)
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
)	O
{	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
vid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
,	O
*	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
ver_id_listM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
while	O
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
{	O
vid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
nextM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
swbis_free	O
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
;	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
vid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
}	O
if	O
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
object_nameM	*(char)
)	O
{	O
swbis_free	O
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
object_nameM	*(char)
)	O
;	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
object_nameM	*(char)
=	O
NULL	O
;	O
}	O
if	O
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
source_copyM	*(char)
)	O
{	O
swbis_free	O
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
source_copyM	*(char)
)	O
;	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
source_copyM	*(char)
=	O
NULL	O
;	O
}	O
swuts_delete	(*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)))->(void)
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
swutsM	*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int))
)	O
;	O
swbis_free	O
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
)	O
;	O
}	O
o__inline__	O
void	O
swverid_set_object_name	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(char))->(void)
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
char	O
*	O
name	*(char)
)	O
{	O
if	O
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
object_nameM	*(char)
)	O
swbis_free	O
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
object_nameM	*(char)
)	O
;	O
if	O
(	O
name	*(char)
)	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
object_nameM	*(char)
=	O
swlib_strdup	(*(char))->(*(char))
(	O
name	*(char)
)	O
;	O
else	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
object_nameM	*(char)
=	O
swlib_strdup	(*(char))->(*(char))
(	O
""	*(char)
)	O
;	O
}	O
o__inline__	O
char	O
*	O
swverid_get_object_name	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))->(*(char))
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
)	O
{	O
return	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
object_nameM	*(char)
;	O
}	O
int	O
swverid_verid_compare	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))->(int)
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid1_target	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid2_candidate	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
)	O
{	O
int	O
ret	int
;	O
ret	int
=	O
compare_all_version_ids	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))->(int)
(	O
swverid1_target	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
swverid2_candidate	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
)	O
;	O
return	O
ret	int
;	O
}	O
int	O
swverid_vtagOLD_compare	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))->(int)
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid1_target	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid2_candidate	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
)	O
{	O
char	O
*	O
tag1	*(char)
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
swverid1_target	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
object_nameM	*(char)
,	O
swverid2_candidate	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
object_nameM	*(char)
)	O
)	O
{	O
return	O
SWVERID_CMP_NEQ	int
;	O
}	O
if	O
(	O
swverid1_target	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
namespaceM	array(char)
!=	O
SWVERID_NS_NA	O
&&	O
swverid1_target	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
namespaceM	array(char)
!=	O
swverid2_candidate	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
namespaceM	array(char)
)	O
{	O
return	O
SWVERID_CMP_NEQ	int
;	O
}	O
tag1	*(char)
=	O
cplob_val	(*(struct(*(*(char)),int,int,long,int)),int)->(*(char))
(	O
swverid1_target	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
,	O
0	int
)	O
;	O
if	O
(	O
!	O
tag1	*(char)
||	O
strlen	(*(char))->(long)
(	O
tag1	*(char)
)	O
==	O
0	int
)	O
{	O
return	O
SWVERID_CMP_EQ	int
;	O
}	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
tag1	*(char)
,	O
"*"	*(char)
)	O
==	O
0	int
)	O
{	O
return	O
SWVERID_CMP_EQ	int
;	O
}	O
if	O
(	O
swverid1_target	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
use_path_compareM	int
||	O
swverid2_candidate	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
use_path_compareM	int
)	O
{	O
if	O
(	O
!	O
swlib_compare_8859	(*(char),*(char))->(int)
(	O
cplob_val	(*(struct(*(*(char)),int,int,long,int)),int)->(*(char))
(	O
swverid1_target	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
,	O
0	int
)	O
,	O
cplob_val	(*(struct(*(*(char)),int,int,long,int)),int)->(*(char))
(	O
swverid2_candidate	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
,	O
0	int
)	O
)	O
)	O
{	O
return	O
SWVERID_CMP_EQ	int
;	O
}	O
else	O
{	O
return	O
SWVERID_CMP_NEQ	int
;	O
}	O
}	O
else	O
{	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
cplob_val	(*(struct(*(*(char)),int,int,long,int)),int)->(*(char))
(	O
swverid1_target	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
,	O
0	int
)	O
,	O
cplob_val	(*(struct(*(*(char)),int,int,long,int)),int)->(*(char))
(	O
swverid2_candidate	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
,	O
0	int
)	O
)	O
)	O
{	O
return	O
SWVERID_CMP_EQ	int
;	O
}	O
else	O
{	O
return	O
SWVERID_CMP_NEQ	int
;	O
}	O
}	O
}	O
int	O
swverid_compare	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))->(int)
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid1_target	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid2_candidate	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
)	O
{	O
int	O
ret	int
;	O
char	O
*	O
tag1	*(char)
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
swverid1_target	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
object_nameM	*(char)
,	O
swverid2_candidate	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
object_nameM	*(char)
)	O
)	O
{	O
return	O
SWVERID_CMP_NEQ	int
;	O
}	O
if	O
(	O
swverid1_target	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
namespaceM	array(char)
!=	O
SWVERID_NS_NA	O
&&	O
swverid1_target	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
namespaceM	array(char)
!=	O
swverid2_candidate	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
namespaceM	array(char)
)	O
{	O
return	O
SWVERID_CMP_NEQ	int
;	O
}	O
tag1	*(char)
=	O
cplob_val	(*(struct(*(*(char)),int,int,long,int)),int)->(*(char))
(	O
swverid1_target	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
,	O
0	int
)	O
;	O
if	O
(	O
!	O
tag1	*(char)
||	O
strlen	(*(char))->(long)
(	O
tag1	*(char)
)	O
==	O
0	int
)	O
{	O
return	O
SWVERID_CMP_EQ	int
;	O
}	O
if	O
(	O
swverid1_target	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
use_path_compareM	int
&&	O
swverid2_candidate	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
use_path_compareM	int
)	O
{	O
if	O
(	O
!	O
swlib_compare_8859	(*(char),*(char))->(int)
(	O
cplob_val	(*(struct(*(*(char)),int,int,long,int)),int)->(*(char))
(	O
swverid1_target	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
,	O
0	int
)	O
,	O
cplob_val	(*(struct(*(*(char)),int,int,long,int)),int)->(*(char))
(	O
swverid2_candidate	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
,	O
0	int
)	O
)	O
)	O
{	O
return	O
SWVERID_CMP_EQ	int
;	O
}	O
else	O
{	O
return	O
SWVERID_CMP_NEQ	int
;	O
}	O
}	O
else	O
if	O
(	O
swverid1_target	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
use_path_compareM	int
==	O
0	int
&&	O
swverid2_candidate	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
use_path_compareM	int
==	O
0	int
)	O
{	O
compare_taglist	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))->(int)
(	O
swverid1_target	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
swverid2_candidate	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
)	O
;	O
ret	int
=	O
compare_all_version_ids	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))->(int)
(	O
swverid1_target	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
swverid2_candidate	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
)	O
;	O
return	O
ret	int
;	O
}	O
else	O
{	O
return	O
-	O
1	int
;	O
}	O
}	O
int	O
swverid_add_attribute	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(char),*(char),*(char))->(int)
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
char	O
*	O
object_keyword	*(char)
,	O
char	O
*	O
keyword	*(char)
,	O
char	O
*	O
value	int
)	O
{	O
char	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
[	O
3	int
]	O
;	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
version_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
verid_string	*(char)
;	O
int	O
c	int
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
object_keyword	*(char)
,	O
"file"	*(char)
)	O
==	O
0	int
||	O
strcmp	(*(char),*(char))->(int)
(	O
object_keyword	*(char)
,	O
"control_file"	*(char)
)	O
==	O
0	int
)	O
{	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
use_path_compareM	int
=	O
1	int
;	O
}	O
c	int
=	O
swverid_get_ver_id_char	(*(char),*(char))->(int)
(	O
object_keyword	*(char)
,	O
keyword	*(char)
)	O
;	O
if	O
(	O
c	int
<	O
0	int
)	O
{	O
swuts_add_attribute	(*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(char),*(char))->(void)
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
swutsM	*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int))
,	O
keyword	*(char)
,	O
value	int
)	O
;	O
return	O
0	int
;	O
}	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
[	O
0	int
]	O
=	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
[	O
1	int
]	O
=	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
[	O
2	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
c	int
==	O
0	int
)	O
{	O
if	O
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
source_copyM	*(char)
)	O
{	O
swbis_free	O
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
source_copyM	*(char)
)	O
;	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
source_copyM	*(char)
=	O
NULL	O
;	O
}	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
source_copyM	*(char)
=	O
swlib_strdup	(*(char))->(*(char))
(	O
value	int
)	O
;	O
cplob_additem	(*(struct(*(*(char)),int,int,long,int)),int,*(char))->(void)
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
,	O
0	int
,	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
source_copyM	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
if	O
(	O
0	int
&&	O
object_keyword	*(char)
)	O
{	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
[	O
0	int
]	O
=	O
*	O
object_keyword	*(char)
;	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
[	O
1	int
]	O
=	O
(	O
char	O
)	O
(	O
c	int
)	O
;	O
}	O
else	O
{	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
[	O
0	int
]	O
=	O
(	O
char	O
)	O
(	O
c	int
)	O
;	O
}	O
verid_string	*(char)
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
24	int
)	O
;	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
verid_string	*(char)
,	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
;	O
if	O
(	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
[	O
0	int
]	O
==	O
'r'	O
||	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
[	O
1	int
]	O
==	O
'r'	O
)	O
{	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
verid_string	*(char)
,	O
"=="	*(char)
)	O
;	O
}	O
else	O
{	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
verid_string	*(char)
,	O
"="	*(char)
)	O
;	O
}	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
verid_string	*(char)
,	O
value	int
)	O
;	O
version_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
create_version_id	(*(char))->(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))
(	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
verid_string	*(char)
)	O
)	O
;	O
if	O
(	O
version_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
==	O
NULL	O
)	O
{	O
return	O
-	O
1	int
;	O
}	O
swverid_add_verid	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))->(void)
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
version_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
;	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
verid_string	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
int	O
swverid_get_comparison_sense	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))->(int)
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid1	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid2	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
)	O
{	O
return	O
0	int
;	O
}	O
Swverid_Cmp_Code	int
swverid_get_comparison_code	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))->(int)
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
)	O
{	O
return	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
comparison_codeM	int
;	O
}	O
void	O
swverid_set_comparison_code	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),int)->(void)
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
Swverid_Cmp_Code	int
code	int
)	O
{	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
comparison_codeM	int
=	O
code	int
;	O
}	O
char	O
*	O
swverid_get_tag	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),int)->(*(char))
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
int	O
n	long
)	O
{	O
return	O
cplob_val	(*(struct(*(*(char)),int,int,long,int)),int)->(*(char))
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
,	O
n	long
)	O
;	O
}	O
void	O
swverid_set_tag	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(char),*(char))->(void)
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
char	O
*	O
key	*(char)
,	O
char	O
*	O
value	int
)	O
{	O
if	O
(	O
value	int
==	O
NULL	O
)	O
return	O
;	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
key	*(char)
,	O
"catalog"	*(char)
)	O
)	O
{	O
if	O
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
catalogM	*(char)
)	O
{	O
swbis_free	O
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
catalogM	*(char)
)	O
;	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
catalogM	*(char)
=	O
NULL	O
;	O
}	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
catalogM	*(char)
=	O
swlib_strdup	(*(char))->(*(char))
(	O
value	int
)	O
;	O
}	O
else	O
{	O
if	O
(	O
cplob_val	(*(struct(*(*(char)),int,int,long,int)),int)->(*(char))
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
,	O
0	int
)	O
)	O
{	O
swbis_free	O
(	O
cplob_val	(*(struct(*(*(char)),int,int,long,int)),int)->(*(char))
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
,	O
0	int
)	O
)	O
;	O
}	O
cplob_additem	(*(struct(*(*(char)),int,int,long,int)),int,*(char))->(void)
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
,	O
0	int
,	O
swlib_strdup	(*(char))->(*(char))
(	O
value	int
)	O
)	O
;	O
}	O
}	O
int	O
swverid_get_ver_id_char	(*(char),*(char))->(int)
(	O
char	O
*	O
object	*(char)
,	O
char	O
*	O
attr_name	*(char)
)	O
{	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
attr_name	*(char)
,	O
SW_A_revision	*(char)
)	O
)	O
{	O
return	O
SWVERID_VERID_REVISION	O
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
attr_name	*(char)
,	O
SW_A_architecture	*(char)
)	O
)	O
{	O
return	O
SWVERID_VERID_ARCHITECTURE	O
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
attr_name	*(char)
,	O
SW_A_vendor_tag	*(char)
)	O
)	O
{	O
return	O
SWVERID_VERID_VENDOR_TAG	O
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
attr_name	*(char)
,	O
SW_A_location	*(char)
)	O
)	O
{	O
return	O
SWVERID_VERID_LOCATION	O
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
attr_name	*(char)
,	O
SW_A_qualifier	*(char)
)	O
)	O
{	O
return	O
SWVERID_VERID_QUALIFIER	O
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
attr_name	*(char)
,	O
SW_A_tag	*(char)
)	O
)	O
{	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
attr_name	*(char)
,	O
SW_A_path	*(char)
)	O
)	O
{	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
object	*(char)
,	O
"file"	*(char)
)	O
||	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
object	*(char)
,	O
SW_A_distribution	*(char)
)	O
)	O
return	O
0	int
;	O
else	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
return	O
-	O
1	int
;	O
}	O
}	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
swverid_get_verid	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(char),int)->(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
char	O
*	O
fp_verid	*(char)
,	O
int	O
occno	int
)	O
{	O
char	O
*	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
char	O
*	O
qualifier	*(char)
;	O
int	O
occ_count	int
;	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
fp_verid	*(char)
;	O
occ_count	int
=	O
0	int
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
>	O
2	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"invalid version id: %s\n"	*(char)
,	O
fp_verid	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
strlen	(*(char))->(long)
(	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
>	O
1	int
)	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
++	O
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
>	O
1	int
)	O
qualifier	*(char)
=	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
else	O
qualifier	*(char)
=	O
""	*(char)
;	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
ver_id_listM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
while	O
(	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
{	O
if	O
(	O
*	O
(	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
idM	char
)	O
==	O
*	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
{	O
if	O
(	O
strlen	(*(char))->(long)
(	O
qualifier	*(char)
)	O
>	O
0	int
)	O
{	O
if	O
(	O
strlen	(*(char))->(long)
(	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
vqM	array(char)
)	O
>	O
0	int
)	O
{	O
if	O
(	O
*	O
(	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
vqM	array(char)
)	O
==	O
*	O
qualifier	*(char)
)	O
{	O
if	O
(	O
occ_count	int
>=	O
occno	int
-	O
1	int
)	O
{	O
return	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
}	O
occ_count	int
++	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
occ_count	int
>=	O
occno	int
-	O
1	int
)	O
{	O
return	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
}	O
occ_count	int
++	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
occ_count	int
>=	O
occno	int
-	O
1	int
)	O
{	O
return	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
}	O
occ_count	int
++	O
;	O
}	O
}	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
nextM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
}	O
return	O
NULL	O
;	O
}	O
char	O
*	O
swverid_print_ver_id	(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
next	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
,	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
int	O
vi	int
;	O
char	O
*	O
val	array(int)
;	O
int	O
n	long
=	O
0	int
;	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
""	*(char)
)	O
;	O
while	O
(	O
next	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
{	O
if	O
(	O
n	long
++	O
)	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
","	*(char)
)	O
;	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
next	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
vqM	array(char)
)	O
;	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
next	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
idM	char
)	O
;	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
next	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
rel_opM	array(char)
)	O
;	O
vi	int
=	O
0	int
;	O
if	O
(	O
(	O
val	array(int)
=	O
next	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
valueM	int
)	O
!=	O
NULL	O
)	O
{	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
val	array(int)
)	O
;	O
}	O
else	O
{	O
;	O
}	O
next	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
next	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
nextM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
}	O
return	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
}	O
void	O
swverid_add_verid	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))->(void)
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
{	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
prev	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
ver_id_listM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
if	O
(	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
nextM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
NULL	O
;	O
if	O
(	O
!	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
{	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
ver_id_listM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
return	O
;	O
}	O
while	O
(	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
{	O
prev	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
nextM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
}	O
prev	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
nextM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
}	O
void	O
swverid_add_verid_if	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))->(void)
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
{	O
i_replace_verid	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),int)->(void)
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
,	O
0	int
)	O
;	O
}	O
void	O
swverid_replace_verid	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))->(void)
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
{	O
i_replace_verid	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),int)->(void)
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
,	O
1	int
)	O
;	O
}	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid_get_alternate	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))->(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
)	O
{	O
return	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
altM	*(void)
;	O
}	O
void	O
swverid_disconnect_alternates	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))->(void)
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
)	O
{	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
oldparent	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
;	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
parent	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
;	O
parent	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
=	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
;	O
while	O
(	O
parent	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
)	O
{	O
oldparent	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
=	O
parent	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
;	O
parent	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
=	O
parent	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
altM	*(void)
;	O
oldparent	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
altM	*(void)
=	O
NULL	O
;	O
}	O
}	O
char	O
*	O
swverid_debug_print	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
;	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
32	int
)	O
;	O
swverid_print	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
""	*(char)
)	O
;	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
0	int
,	O
"%d: %s"	*(char)
,	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
alter_uuidM	int
,	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
;	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
return	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
}	O
char	O
*	O
swverid_print	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
fp_buf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
char	O
*	O
ret	int
;	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
;	O
static	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
nb	*(struct(*(char),*(char),int,int,int,char,int))
;	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
next	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
if	O
(	O
fp_buf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
=	O
fp_buf	*(struct(*(char),*(char),int,int,int,char,int))
;	O
}	O
else	O
{	O
if	O
(	O
nb	*(struct(*(char),*(char),int,int,int,char,int))
==	O
NULL	O
)	O
{	O
nb	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
32	int
)	O
;	O
}	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
=	O
nb	*(struct(*(char),*(char),int,int,int,char,int))
;	O
}	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
""	*(char)
)	O
;	O
swverid_i_print	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
next	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
;	O
while	O
(	O
(	O
next	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
swverid_get_alternate	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))->(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))
(	O
next	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
)	O
)	O
{	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
"|"	*(char)
)	O
;	O
swverid_i_print	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
next	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
,	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
}	O
ret	int
=	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
return	O
ret	int
;	O
}	O
char	O
*	O
swverid_show_object_debug	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
fp_buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
char	O
*	O
prefix	*(char)
)	O
{	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
xx	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
;	O
static	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
;	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
buf1	*(struct(*(char),*(char),int,int,int,char,int))
;	O
char	O
*	O
tag	*(char)
;	O
int	O
in	int
;	O
if	O
(	O
fp_buf	*(struct(*(char),*(char),int,int,int,char,int))
==	O
NULL	O
)	O
{	O
if	O
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
==	O
NULL	O
)	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
32	int
)	O
;	O
}	O
else	O
{	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
=	O
fp_buf	*(struct(*(char),*(char),int,int,int,char,int))
;	O
}	O
xx	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
=	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
;	O
buf1	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
10	int
)	O
;	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
""	*(char)
)	O
;	O
swverid_print	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
buf1	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
1	int
,	O
"%s%p (SWVERID*)\n"	*(char)
,	O
prefix	*(char)
,	O
(	O
void	O
*	O
)	O
xx	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
)	O
;	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
1	int
,	O
"%s%p swverid_print() = [%s]\n"	*(char)
,	O
prefix	*(char)
,	O
(	O
void	O
*	O
)	O
xx	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
swverid_print	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
buf1	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
;	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
1	int
,	O
"%s%p->object_nameM = [%s]\n"	*(char)
,	O
prefix	*(char)
,	O
(	O
void	O
*	O
)	O
xx	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
xx	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
object_nameM	*(char)
)	O
;	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
1	int
,	O
"%s%p->source_copyM = [%s]\n"	*(char)
,	O
prefix	*(char)
,	O
(	O
void	O
*	O
)	O
xx	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
xx	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
source_copyM	*(char)
)	O
;	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
1	int
,	O
"%s%p->catalogM = [%s]\n"	*(char)
,	O
prefix	*(char)
,	O
(	O
void	O
*	O
)	O
xx	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
xx	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
catalogM	*(char)
)	O
;	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
1	int
,	O
"%s%p->use_path_compareM = [%d]\n"	*(char)
,	O
prefix	*(char)
,	O
(	O
void	O
*	O
)	O
xx	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
xx	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
use_path_compareM	int
)	O
;	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
1	int
,	O
"%s%p->comparison_codeM = [%d]\n"	*(char)
,	O
prefix	*(char)
,	O
(	O
void	O
*	O
)	O
xx	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
xx	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
comparison_codeM	int
)	O
;	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
1	int
,	O
"%s%p->ver_id_listM = (struct VER_ID*)%p\n"	*(char)
,	O
prefix	*(char)
,	O
(	O
void	O
*	O
)	O
xx	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
(	O
void	O
*	O
)	O
(	O
xx	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
ver_id_listM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
)	O
;	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
1	int
,	O
"%s%p->ver_id_listM = [%s]\n"	*(char)
,	O
prefix	*(char)
,	O
(	O
void	O
*	O
)	O
xx	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
swverid_print_ver_id	(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
xx	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
ver_id_listM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
,	O
buf1	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
;	O
in	int
=	O
0	int
;	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
buf1	*(struct(*(char),*(char),int,int,int,char,int))
,	O
""	*(char)
)	O
;	O
while	O
(	O
(	O
tag	*(char)
=	O
cplob_val	(*(struct(*(*(char)),int,int,long,int)),int)->(*(char))
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
,	O
in	int
++	O
)	O
)	O
!=	O
NULL	O
)	O
{	O
if	O
(	O
in	int
>	O
1	int
)	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
buf1	*(struct(*(char),*(char),int,int,int,char,int))
,	O
1	int
,	O
"."	*(char)
,	O
tag	*(char)
)	O
;	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
buf1	*(struct(*(char),*(char),int,int,int,char,int))
,	O
1	int
,	O
"%s"	*(char)
,	O
tag	*(char)
)	O
;	O
}	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
1	int
,	O
"%s%p->taglistM = (CPLOB*)(%p)\n"	*(char)
,	O
prefix	*(char)
,	O
(	O
void	O
*	O
)	O
xx	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
(	O
void	O
*	O
)	O
(	O
xx	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
)	O
)	O
;	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
1	int
,	O
"%s%p->taglistM = [%s]\n"	*(char)
,	O
prefix	*(char)
,	O
(	O
void	O
*	O
)	O
xx	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
buf1	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
;	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
1	int
,	O
"%s%p->namespaceM = [%d]\n"	*(char)
,	O
prefix	*(char)
,	O
(	O
void	O
*	O
)	O
xx	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
xx	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
namespaceM	array(char)
)	O
;	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
STROB_DO_APPEND	int
,	O
"os_name=%s\n"	*(char)
"os_version=%s\n"	*(char)
"os_release=%s\n"	*(char)
"machine_type=%s\n"	*(char)
,	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
swutsM	*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int))
->	O
sysnameM	*(char)
,	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
swutsM	*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int))
->	O
versionM	*(char)
,	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
swutsM	*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int))
->	O
releaseM	*(char)
,	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
swutsM	*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int))
->	O
machineM	*(char)
)	O
;	O
return	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
}	O
CPLOB	struct(*(*(char)),int,int,long,int)
*	O
swverid_u_parse_swspec	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(char))->(*(struct(*(*(char)),int,int,long,int)))
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
char	O
*	O
swspec	*(char)
)	O
{	O
CPLOB	struct(*(*(char)),int,int,long,int)
*	O
list	*(*(char))
;	O
CPLOB	struct(*(*(char)),int,int,long,int)
*	O
savecplob	*(struct(*(*(char)),int,int,long,int))
;	O
char	O
*	O
savesource	*(char)
;	O
savecplob	*(struct(*(*(char)),int,int,long,int))
=	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
;	O
list	*(*(char))
=	O
cplob_open	(int)->(*(struct(*(*(char)),int,int,long,int)))
(	O
3	int
)	O
;	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
=	O
list	*(*(char))
;	O
savesource	*(char)
=	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
source_copyM	*(char)
;	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
source_copyM	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
swspec	*(char)
)	O
;	O
parse_swspec_string	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))->(int)
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
)	O
;	O
free	(*(void))->(void)
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
source_copyM	*(char)
)	O
;	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
taglistM	*(struct(*(*(char)),int,int,long,int))
=	O
savecplob	*(struct(*(*(char)),int,int,long,int))
;	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
source_copyM	*(char)
=	O
savesource	*(char)
;	O
return	O
list	*(*(char))
;	O
}	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
swverid_create_version_id	(*(char))->(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))
(	O
char	O
*	O
verid_string	*(char)
)	O
{	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
create_version_id	(*(char))->(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))
(	O
verid_string	*(char)
)	O
;	O
return	O
ver_id	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
}	O
char	O
*	O
swverid_get_verid_value	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(char),int)->(*(char))
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
char	O
*	O
fp_verid	*(char)
,	O
int	O
occno	int
)	O
{	O
char	O
*	O
ret	int
;	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
swverid_get_verid	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(char),int)->(*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
fp_verid	*(char)
,	O
occno	int
)	O
;	O
if	O
(	O
!	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
return	O
(	O
char	O
*	O
)	O
NULL	O
;	O
ret	int
=	O
verid	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
valueM	int
;	O
return	O
ret	int
;	O
}	O
int	O
swverid_delete_non_fully_qualified_verids	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)))->(int)
(	O
SWVERID	struct(*(char),*(char),*(char),int,*(struct(*(*(char)),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int)
*	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
)	O
{	O
int	O
retval	int
;	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
;	O
struct	O
VER_ID	struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))))))
*	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
retval	int
=	O
0	int
;	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
->	O
ver_id_listM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
while	O
(	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
)	O
{	O
if	O
(	O
swlib_is_sh_tainted_string	(*(char))->(int)
(	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
valueM	int
)	O
)	O
{	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
=	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
nextM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
swverid_ver_id_unlink	(*(struct(*(char),*(char),*(char),int,*(struct(*`,int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*`,*`)),*(struct(*`,*`,*`,*`,*`,char,char,char,char,int)),*(void),int)),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*`,*`)))))->(int)
(	O
swverid	*(struct(*(char),*(char),*(char),int,*(struct(*(*`),int,int,long,int)),int,int,*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),char,char,char,char,int)),*(void),int))
,	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
retval	int
++	O
;	O
}	O
else	O
{	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
=	O
last	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
->	O
nextM	*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct(array(char),array(char),array(char),array(char),int,*(char),*(struct`)))))
;	O
}	O
}	O
return	O
retval	int
;	O
}	O
