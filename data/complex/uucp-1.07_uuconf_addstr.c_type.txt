const	O
char	O
_uuconf_addstr_rcsid	array(char)
[	O
]	O
=	O
"$Id: addstr.c,v 1.8 2002/03/05 19:10:42 ian Rel $"	*(char)
;	O
char	O
*	O
_uuconf_unset	*(char)
;	O
int	O
_uuconf_iadd_string	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,int,int,int,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,int,*`)),*(void),int,*(char),int)),*(char),int,int,*(*(*(char))),*(void))->(int)
(	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
,	O
zadd	*(char)
,	O
fcopy	int
,	O
fcheck	int
,	O
ppzstrings	*(*(*(char)))
,	O
pblock	*(void)
)	O
struct	O
sglobal	struct(*(struct),*(void),int,*(char),int)
*	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
;	O
char	O
*	O
zadd	*(char)
;	O
boolean	int
fcopy	int
;	O
boolean	int
fcheck	int
;	O
char	O
*	O
*	O
*	O
ppzstrings	*(*(*(char)))
;	O
pointer	*(void)
pblock	*(void)
;	O
{	O
char	O
*	O
*	O
pz	*(*(char))
;	O
size_t	long
c	long
;	O
if	O
(	O
fcheck	int
&&	O
*	O
ppzstrings	*(*(*(char)))
!=	O
NULL	O
)	O
{	O
for	O
(	O
pz	*(*(char))
=	O
*	O
ppzstrings	*(*(*(char)))
;	O
*	O
pz	*(*(char))
!=	O
NULL	O
;	O
pz	*(*(char))
++	O
)	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
zadd	*(char)
,	O
*	O
pz	*(*(char))
)	O
==	O
0	int
)	O
return	O
UUCONF_SUCCESS	O
;	O
}	O
if	O
(	O
fcopy	int
)	O
{	O
size_t	long
clen	long
;	O
char	O
*	O
znew	*(char)
;	O
clen	long
=	O
strlen	(*(char))->(long)
(	O
zadd	*(char)
)	O
+	O
1	int
;	O
znew	*(char)
=	O
(	O
char	O
*	O
)	O
uuconf_malloc	(*(void),long)->(*(void))
(	O
pblock	*(void)
,	O
clen	long
)	O
;	O
if	O
(	O
znew	*(char)
==	O
NULL	O
)	O
{	O
if	O
(	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
!=	O
NULL	O
)	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
ierrno	int
=	O
errno	O
;	O
return	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
(	O
pointer	*(void)
)	O
znew	*(char)
,	O
(	O
pointer	*(void)
)	O
zadd	*(char)
,	O
clen	long
)	O
;	O
zadd	*(char)
=	O
znew	*(char)
;	O
}	O
pz	*(*(char))
=	O
*	O
ppzstrings	*(*(*(char)))
;	O
if	O
(	O
pz	*(*(char))
==	O
NULL	O
||	O
pz	*(*(char))
==	O
(	O
char	O
*	O
*	O
)	O
&	O
_uuconf_unset	*(char)
)	O
{	O
pz	*(*(char))
=	O
(	O
char	O
*	O
*	O
)	O
uuconf_malloc	(*(void),long)->(*(void))
(	O
pblock	*(void)
,	O
CSLOTS	O
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
if	O
(	O
pz	*(*(char))
==	O
NULL	O
)	O
{	O
if	O
(	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
!=	O
NULL	O
)	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
ierrno	int
=	O
errno	O
;	O
return	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
}	O
*	O
ppzstrings	*(*(*(char)))
=	O
pz	*(*(char))
;	O
}	O
else	O
{	O
c	long
=	O
0	int
;	O
while	O
(	O
*	O
pz	*(*(char))
!=	O
NULL	O
)	O
{	O
++	O
pz	*(*(char))
;	O
++	O
c	long
;	O
}	O
if	O
(	O
(	O
c	long
+	O
1	int
)	O
%	O
CSLOTS	O
==	O
0	int
)	O
{	O
char	O
*	O
*	O
pznew	*(*(char))
;	O
pznew	*(*(char))
=	O
(	O
char	O
*	O
*	O
)	O
uuconf_malloc	(*(void),long)->(*(void))
(	O
pblock	*(void)
,	O
(	O
(	O
c	long
+	O
1	int
+	O
CSLOTS	O
)	O
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
)	O
;	O
if	O
(	O
pznew	*(*(char))
==	O
NULL	O
)	O
{	O
if	O
(	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
!=	O
NULL	O
)	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
ierrno	int
=	O
errno	O
;	O
return	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
(	O
pointer	*(void)
)	O
pznew	*(*(char))
,	O
(	O
pointer	*(void)
)	O
*	O
ppzstrings	*(*(*(char)))
,	O
c	long
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
uuconf_free	(*(void),*(void))->(void)
(	O
pblock	*(void)
,	O
*	O
ppzstrings	*(*(*(char)))
)	O
;	O
*	O
ppzstrings	*(*(*(char)))
=	O
pznew	*(*(char))
;	O
pz	*(*(char))
=	O
pznew	*(*(char))
+	O
c	long
;	O
}	O
}	O
pz	*(*(char))
[	O
0	int
]	O
=	O
zadd	*(char)
;	O
pz	*(*(char))
[	O
1	int
]	O
=	O
NULL	O
;	O
return	O
UUCONF_SUCCESS	O
;	O
}	O
