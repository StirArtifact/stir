void	O
mu_argcv_remove	(*(int),*(*(*(char))),*((*(char),*(void))->(int)),*(void))->(void)
(	O
int	O
*	O
pargc	*(int)
,	O
char	O
*	O
*	O
*	O
pargv	*(*(*(char)))
,	O
int	O
(	O
*	O
sel	*((*(char),*(void))->(int))
)	O
(	O
const	O
char	O
*	O
,	O
void	O
*	O
)	O
,	O
void	O
*	O
data	*(void)
)	O
{	O
int	O
i	int
,	O
j	int
;	O
int	O
argc	long
=	O
*	O
pargc	*(int)
;	O
char	O
*	O
*	O
argv	*(*(char))
=	O
*	O
pargv	*(*(*(char)))
;	O
int	O
cnt	int
=	O
0	int
;	O
for	O
(	O
i	int
=	O
j	int
=	O
0	int
;	O
i	int
<	O
argc	long
;	O
i	int
++	O
)	O
{	O
if	O
(	O
sel	*((*(char),*(void))->(int))
(	O
argv	*(*(char))
[	O
i	int
]	O
,	O
data	*(void)
)	O
)	O
{	O
free	(*(void))->(void)
(	O
argv	*(*(char))
[	O
i	int
]	O
)	O
;	O
cnt	int
++	O
;	O
}	O
else	O
{	O
if	O
(	O
i	int
!=	O
j	int
)	O
argv	*(*(char))
[	O
j	int
]	O
=	O
argv	*(*(char))
[	O
i	int
]	O
;	O
j	int
++	O
;	O
}	O
}	O
if	O
(	O
i	int
!=	O
j	int
)	O
argv	*(*(char))
[	O
j	int
]	O
=	O
NULL	O
;	O
argc	long
-=	O
cnt	int
;	O
*	O
pargc	*(int)
=	O
argc	long
;	O
*	O
pargv	*(*(*(char)))
=	O
argv	*(*(char))
;	O
}	O
