struct	O
comm	struct(*(char),int,array(*(char)))
comms	array(struct(*(char),int,array(*(char))))
[	O
RC_LAST	int
+	O
1	int
]	O
=	O
{	O
{	O
"acladd"	*(char)
,	O
ARGS_1234	O
}	O
,	O
{	O
"aclchg"	*(char)
,	O
ARGS_23	O
}	O
,	O
{	O
"acldel"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"aclgrp"	*(char)
,	O
ARGS_12	O
}	O
,	O
{	O
"aclumask"	*(char)
,	O
ARGS_1	O
|	O
ARGS_ORMORE	O
}	O
,	O
{	O
"activity"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"addacl"	*(char)
,	O
ARGS_1234	O
}	O
,	O
{	O
"allpartial"	*(char)
,	O
NEED_DISPLAY	O
|	O
ARGS_1	O
}	O
,	O
{	O
"altscreen"	*(char)
,	O
ARGS_01	O
}	O
,	O
{	O
"at"	*(char)
,	O
ARGS_2	O
|	O
ARGS_ORMORE	O
}	O
,	O
{	O
"attrcolor"	*(char)
,	O
ARGS_12	O
}	O
,	O
{	O
"autodetach"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"autonuke"	*(char)
,	O
NEED_DISPLAY	O
|	O
ARGS_1	O
}	O
,	O
{	O
"backtick"	*(char)
,	O
ARGS_1	O
|	O
ARGS_ORMORE	O
}	O
,	O
{	O
"bce"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_01	O
}	O
,	O
{	O
"bell"	*(char)
,	O
ARGS_01	O
}	O
,	O
{	O
"bell_msg"	*(char)
,	O
ARGS_01	O
}	O
,	O
{	O
"bind"	*(char)
,	O
ARGS_1	O
|	O
ARGS_ORMORE	O
}	O
,	O
{	O
"bindkey"	*(char)
,	O
ARGS_0	O
|	O
ARGS_ORMORE	O
}	O
,	O
{	O
"blanker"	*(char)
,	O
NEED_DISPLAY	O
|	O
ARGS_0	O
}	O
,	O
{	O
"blankerprg"	*(char)
,	O
ARGS_0	O
|	O
ARGS_ORMORE	O
}	O
,	O
{	O
"break"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_01	O
}	O
,	O
{	O
"breaktype"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_01	O
}	O
,	O
{	O
"bufferfile"	*(char)
,	O
ARGS_01	O
}	O
,	O
{	O
"bumpleft"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_0	O
}	O
,	O
{	O
"bumpright"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_0	O
}	O
,	O
{	O
"c1"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_01	O
}	O
,	O
{	O
"caption"	*(char)
,	O
ARGS_12	O
}	O
,	O
{	O
"chacl"	*(char)
,	O
ARGS_23	O
}	O
,	O
{	O
"charset"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_1	O
}	O
,	O
{	O
"chdir"	*(char)
,	O
ARGS_01	O
}	O
,	O
{	O
"cjkwidth"	*(char)
,	O
ARGS_01	O
}	O
,	O
{	O
"clear"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_0	O
}	O
,	O
{	O
"collapse"	*(char)
,	O
ARGS_0	O
}	O
,	O
{	O
"colon"	*(char)
,	O
NEED_LAYER	O
|	O
ARGS_01	O
}	O
,	O
{	O
"command"	*(char)
,	O
NEED_DISPLAY	O
|	O
ARGS_02	O
}	O
,	O
{	O
"compacthist"	*(char)
,	O
ARGS_01	O
}	O
,	O
{	O
"console"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_01	O
}	O
,	O
{	O
"copy"	*(char)
,	O
NEED_FORE	O
|	O
NEED_DISPLAY	O
|	O
ARGS_0	O
}	O
,	O
{	O
"crlf"	*(char)
,	O
ARGS_01	O
}	O
,	O
{	O
"debug"	*(char)
,	O
ARGS_01	O
}	O
,	O
{	O
"defautonuke"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"defbce"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"defbreaktype"	*(char)
,	O
ARGS_01	O
}	O
,	O
{	O
"defc1"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"defcharset"	*(char)
,	O
ARGS_01	O
}	O
,	O
{	O
"defdynamictitle"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"defencoding"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"defescape"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"defflow"	*(char)
,	O
ARGS_12	O
}	O
,	O
{	O
"defgr"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"defhstatus"	*(char)
,	O
ARGS_01	O
}	O
,	O
{	O
"defkanji"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"deflog"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"deflogin"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"defmode"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"defmonitor"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"defmousetrack"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"defnonblock"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"defobuflimit"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"defscrollback"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"defshell"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"defsilence"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"defslowpaste"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"defutf8"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"defwrap"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"defwritelock"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"detach"	*(char)
,	O
NEED_DISPLAY	O
|	O
ARGS_01	O
}	O
,	O
{	O
"digraph"	*(char)
,	O
NEED_LAYER	O
|	O
ARGS_012	O
}	O
,	O
{	O
"dinfo"	*(char)
,	O
NEED_DISPLAY	O
|	O
ARGS_0	O
}	O
,	O
{	O
"displays"	*(char)
,	O
NEED_LAYER	O
|	O
ARGS_0	O
}	O
,	O
{	O
"dumptermcap"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_0	O
}	O
,	O
{	O
"dynamictitle"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"echo"	*(char)
,	O
CAN_QUERY	O
|	O
ARGS_12	O
}	O
,	O
{	O
"encoding"	*(char)
,	O
ARGS_12	O
}	O
,	O
{	O
"escape"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"eval"	*(char)
,	O
ARGS_1	O
|	O
ARGS_ORMORE	O
}	O
,	O
{	O
"exec"	*(char)
,	O
ARGS_0	O
|	O
ARGS_ORMORE	O
}	O
,	O
{	O
"fit"	*(char)
,	O
NEED_DISPLAY	O
|	O
ARGS_0	O
}	O
,	O
{	O
"flow"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_01	O
}	O
,	O
{	O
"focus"	*(char)
,	O
NEED_DISPLAY	O
|	O
ARGS_01	O
}	O
,	O
{	O
"focusminsize"	*(char)
,	O
ARGS_02	O
}	O
,	O
{	O
"gr"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_01	O
}	O
,	O
{	O
"group"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_01	O
}	O
,	O
{	O
"hardcopy"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_012	O
}	O
,	O
{	O
"hardcopy_append"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"hardcopydir"	*(char)
,	O
ARGS_01	O
}	O
,	O
{	O
"hardstatus"	*(char)
,	O
ARGS_012	O
}	O
,	O
{	O
"height"	*(char)
,	O
ARGS_0123	O
}	O
,	O
{	O
"help"	*(char)
,	O
NEED_LAYER	O
|	O
ARGS_02	O
}	O
,	O
{	O
"history"	*(char)
,	O
NEED_DISPLAY	O
|	O
NEED_FORE	O
|	O
ARGS_0	O
}	O
,	O
{	O
"hstatus"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_1	O
}	O
,	O
{	O
"idle"	*(char)
,	O
ARGS_0	O
|	O
ARGS_ORMORE	O
}	O
,	O
{	O
"ignorecase"	*(char)
,	O
ARGS_01	O
}	O
,	O
{	O
"info"	*(char)
,	O
CAN_QUERY	O
|	O
NEED_LAYER	O
|	O
ARGS_0	O
}	O
,	O
{	O
"kanji"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_12	O
}	O
,	O
{	O
"kill"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_0	O
}	O
,	O
{	O
"lastmsg"	*(char)
,	O
CAN_QUERY	O
|	O
NEED_DISPLAY	O
|	O
ARGS_0	O
}	O
,	O
{	O
"layout"	*(char)
,	O
ARGS_1	O
|	O
ARGS_ORMORE	O
}	O
,	O
{	O
"license"	*(char)
,	O
NEED_LAYER	O
|	O
ARGS_0	O
}	O
,	O
{	O
"lockscreen"	*(char)
,	O
NEED_DISPLAY	O
|	O
ARGS_0	O
}	O
,	O
{	O
"log"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_01	O
}	O
,	O
{	O
"logfile"	*(char)
,	O
ARGS_012	O
}	O
,	O
{	O
"login"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_01	O
}	O
,	O
{	O
"logtstamp"	*(char)
,	O
ARGS_012	O
}	O
,	O
{	O
"mapdefault"	*(char)
,	O
NEED_DISPLAY	O
|	O
ARGS_0	O
}	O
,	O
{	O
"mapnotnext"	*(char)
,	O
NEED_DISPLAY	O
|	O
ARGS_0	O
}	O
,	O
{	O
"maptimeout"	*(char)
,	O
ARGS_01	O
}	O
,	O
{	O
"markkeys"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"maxwin"	*(char)
,	O
ARGS_01	O
}	O
,	O
{	O
"meta"	*(char)
,	O
NEED_LAYER	O
|	O
ARGS_0	O
}	O
,	O
{	O
"monitor"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_01	O
}	O
,	O
{	O
"mousetrack"	*(char)
,	O
NEED_DISPLAY	O
|	O
ARGS_01	O
}	O
,	O
{	O
"msgminwait"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"msgwait"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"multiuser"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"nethack"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"next"	*(char)
,	O
ARGS_0	O
}	O
,	O
{	O
"nonblock"	*(char)
,	O
NEED_DISPLAY	O
|	O
ARGS_01	O
}	O
,	O
{	O
"number"	*(char)
,	O
CAN_QUERY	O
|	O
NEED_FORE	O
|	O
ARGS_01	O
}	O
,	O
{	O
"obuflimit"	*(char)
,	O
NEED_DISPLAY	O
|	O
ARGS_01	O
}	O
,	O
{	O
"only"	*(char)
,	O
NEED_DISPLAY	O
|	O
ARGS_0	O
}	O
,	O
{	O
"other"	*(char)
,	O
ARGS_0	O
}	O
,	O
{	O
"partial"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_01	O
}	O
,	O
{	O
"password"	*(char)
,	O
ARGS_01	O
}	O
,	O
{	O
"paste"	*(char)
,	O
NEED_LAYER	O
|	O
ARGS_012	O
}	O
,	O
{	O
"pastefont"	*(char)
,	O
ARGS_01	O
}	O
,	O
{	O
"pow_break"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_01	O
}	O
,	O
{	O
"pow_detach"	*(char)
,	O
NEED_DISPLAY	O
|	O
ARGS_0	O
}	O
,	O
{	O
"pow_detach_msg"	*(char)
,	O
ARGS_01	O
}	O
,	O
{	O
"prev"	*(char)
,	O
ARGS_0	O
}	O
,	O
{	O
"printcmd"	*(char)
,	O
ARGS_01	O
}	O
,	O
{	O
"process"	*(char)
,	O
NEED_DISPLAY	O
|	O
ARGS_01	O
}	O
,	O
{	O
"quit"	*(char)
,	O
ARGS_0	O
}	O
,	O
{	O
"readbuf"	*(char)
,	O
ARGS_0123	O
}	O
,	O
{	O
"readreg"	*(char)
,	O
ARGS_0	O
|	O
ARGS_ORMORE	O
}	O
,	O
{	O
"redisplay"	*(char)
,	O
NEED_DISPLAY	O
|	O
ARGS_0	O
}	O
,	O
{	O
"register"	*(char)
,	O
ARGS_24	O
}	O
,	O
{	O
"remove"	*(char)
,	O
NEED_DISPLAY	O
|	O
ARGS_0	O
}	O
,	O
{	O
"removebuf"	*(char)
,	O
ARGS_0	O
}	O
,	O
{	O
"rendition"	*(char)
,	O
ARGS_23	O
}	O
,	O
{	O
"reset"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_0	O
}	O
,	O
{	O
"resize"	*(char)
,	O
NEED_DISPLAY	O
|	O
ARGS_0	O
|	O
ARGS_ORMORE	O
}	O
,	O
{	O
"screen"	*(char)
,	O
ARGS_0	O
|	O
ARGS_ORMORE	O
}	O
,	O
{	O
"scrollback"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_1	O
}	O
,	O
{	O
"select"	*(char)
,	O
CAN_QUERY	O
|	O
ARGS_01	O
}	O
,	O
{	O
"sessionname"	*(char)
,	O
ARGS_01	O
}	O
,	O
{	O
"setenv"	*(char)
,	O
ARGS_012	O
}	O
,	O
{	O
"setsid"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"shell"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"shelltitle"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"silence"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_01	O
}	O
,	O
{	O
"silencewait"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"sleep"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"slowpaste"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_01	O
}	O
,	O
{	O
"sorendition"	*(char)
,	O
ARGS_012	O
}	O
,	O
{	O
"sort"	*(char)
,	O
ARGS_0	O
}	O
,	O
{	O
"source"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"split"	*(char)
,	O
NEED_DISPLAY	O
|	O
ARGS_01	O
}	O
,	O
{	O
"startup_message"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"stuff"	*(char)
,	O
NEED_LAYER	O
|	O
ARGS_012	O
}	O
,	O
{	O
"su"	*(char)
,	O
NEED_DISPLAY	O
|	O
ARGS_012	O
}	O
,	O
{	O
"suspend"	*(char)
,	O
NEED_DISPLAY	O
|	O
ARGS_0	O
}	O
,	O
{	O
"term"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"termcap"	*(char)
,	O
ARGS_23	O
}	O
,	O
{	O
"termcapinfo"	*(char)
,	O
ARGS_23	O
}	O
,	O
{	O
"terminfo"	*(char)
,	O
ARGS_23	O
}	O
,	O
{	O
"time"	*(char)
,	O
CAN_QUERY	O
|	O
ARGS_01	O
}	O
,	O
{	O
"title"	*(char)
,	O
CAN_QUERY	O
|	O
NEED_FORE	O
|	O
ARGS_01	O
}	O
,	O
{	O
"umask"	*(char)
,	O
ARGS_1	O
|	O
ARGS_ORMORE	O
}	O
,	O
{	O
"unbindall"	*(char)
,	O
ARGS_0	O
}	O
,	O
{	O
"unsetenv"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"utf8"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_012	O
}	O
,	O
{	O
"vbell"	*(char)
,	O
ARGS_01	O
}	O
,	O
{	O
"vbell_msg"	*(char)
,	O
ARGS_01	O
}	O
,	O
{	O
"vbellwait"	*(char)
,	O
ARGS_1	O
}	O
,	O
{	O
"verbose"	*(char)
,	O
ARGS_01	O
}	O
,	O
{	O
"version"	*(char)
,	O
ARGS_0	O
}	O
,	O
{	O
"wall"	*(char)
,	O
NEED_DISPLAY	O
|	O
ARGS_1	O
}	O
,	O
{	O
"width"	*(char)
,	O
ARGS_0123	O
}	O
,	O
{	O
"windowlist"	*(char)
,	O
ARGS_012	O
}	O
,	O
{	O
"windows"	*(char)
,	O
CAN_QUERY	O
|	O
ARGS_01	O
}	O
,	O
{	O
"wrap"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_01	O
}	O
,	O
{	O
"writebuf"	*(char)
,	O
ARGS_0123	O
}	O
,	O
{	O
"writelock"	*(char)
,	O
NEED_FORE	O
|	O
ARGS_01	O
}	O
,	O
{	O
"xoff"	*(char)
,	O
NEED_LAYER	O
|	O
ARGS_0	O
}	O
,	O
{	O
"xon"	*(char)
,	O
NEED_LAYER	O
|	O
ARGS_0	O
}	O
,	O
{	O
"zmodem"	*(char)
,	O
ARGS_012	O
}	O
,	O
{	O
"zombie"	*(char)
,	O
ARGS_012	O
}	O
,	O
{	O
"zombie_timeout"	*(char)
,	O
ARGS_1	O
}	O
}	O
;	O
