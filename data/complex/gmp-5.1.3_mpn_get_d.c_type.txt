double	O
mpn_get_d	O
(	O
mp_srcptr	*(long)
up	*(long)
,	O
mp_size_t	long
size	long
,	O
mp_size_t	long
sign	char
,	O
long	O
exp	int
)	O
{	O
int	O
lshift	int
,	O
nbits	int
;	O
mp_limb_t	long
x	long
,	O
mhi	long
,	O
mlo	long
;	O
ASSERT	O
(	O
size	long
>=	O
0	int
)	O
;	O
ASSERT_MPN	O
(	O
up	*(long)
,	O
size	long
)	O
;	O
ASSERT	O
(	O
size	long
==	O
0	int
||	O
up	*(long)
[	O
size	long
-	O
1	int
]	O
!=	O
0	int
)	O
;	O
if	O
(	O
size	long
==	O
0	int
)	O
return	O
0.0	int
;	O
if	O
(	O
UNLIKELY	O
(	O
(	O
unsigned	O
long	O
)	O
(	O
GMP_NUMB_BITS	O
*	O
size	long
)	O
>	O
(	O
(	O
unsigned	O
long	O
)	O
LONG_MAX	O
-	O
exp	int
)	O
)	O
)	O
{	O
goto	O
ieee_infinity	O
;	O
exp	int
=	O
LONG_MAX	O
;	O
}	O
else	O
{	O
exp	int
+=	O
GMP_NUMB_BITS	O
*	O
size	long
;	O
}	O
{	O
union	O
ieee_double_extract	union(struct(int,int,int,int),double)
u	array(array(long))
;	O
up	*(long)
+=	O
size	long
;	O
mlo	long
=	O
up	*(long)
[	O
-	O
1	int
]	O
;	O
count_leading_zeros	O
(	O
lshift	int
,	O
mlo	long
)	O
;	O
exp	int
-=	O
(	O
lshift	int
-	O
GMP_NAIL_BITS	int
)	O
+	O
1	int
;	O
mlo	long
<<=	O
lshift	int
;	O
nbits	int
=	O
GMP_LIMB_BITS	int
-	O
lshift	int
;	O
if	O
(	O
nbits	int
<	O
53	int
&&	O
size	long
>	O
1	int
)	O
{	O
x	long
=	O
up	*(long)
[	O
-	O
2	int
]	O
;	O
x	long
<<=	O
GMP_NAIL_BITS	int
;	O
x	long
>>=	O
nbits	int
;	O
mlo	long
|=	O
x	long
;	O
nbits	int
+=	O
GMP_NUMB_BITS	O
;	O
if	O
(	O
LIMBS_PER_DOUBLE	O
>=	O
3	int
&&	O
nbits	int
<	O
53	int
&&	O
size	long
>	O
2	int
)	O
{	O
x	long
=	O
up	*(long)
[	O
-	O
3	int
]	O
;	O
x	long
<<=	O
GMP_NAIL_BITS	int
;	O
x	long
>>=	O
nbits	int
;	O
mlo	long
|=	O
x	long
;	O
nbits	int
+=	O
GMP_NUMB_BITS	O
;	O
}	O
}	O
mhi	long
=	O
mlo	long
>>	O
(	O
32	int
+	O
11	int
)	O
;	O
mlo	long
=	O
mlo	long
>>	O
11	int
;	O
if	O
(	O
UNLIKELY	O
(	O
exp	int
>=	O
CONST_1024	O
)	O
)	O
{	O
ieee_infinity	O
:	O
mhi	long
=	O
0	int
;	O
mlo	long
=	O
0	int
;	O
exp	int
=	O
1024	int
;	O
}	O
else	O
if	O
(	O
UNLIKELY	O
(	O
exp	int
<=	O
CONST_NEG_1023	O
)	O
)	O
{	O
int	O
rshift	int
;	O
if	O
(	O
LIKELY	O
(	O
exp	int
<=	O
CONST_NEG_1022_SUB_53	O
)	O
)	O
return	O
0.0	int
;	O
rshift	int
=	O
-	O
1022	int
-	O
exp	int
;	O
ASSERT	O
(	O
rshift	int
>	O
0	int
&&	O
rshift	int
<	O
53	int
)	O
;	O
mlo	long
>>=	O
rshift	int
;	O
mhi	long
=	O
mlo	long
>>	O
32	int
;	O
exp	int
=	O
-	O
1023	int
;	O
}	O
u	array(array(long))
.	O
s	array(char)
.	O
manh	int
=	O
mhi	long
;	O
u	array(array(long))
.	O
s	array(char)
.	O
manl	int
=	O
mlo	long
;	O
u	array(array(long))
.	O
s	array(char)
.	O
exp	int
=	O
exp	int
+	O
1023	int
;	O
u	array(array(long))
.	O
s	array(char)
.	O
sig	int
=	O
(	O
sign	char
<	O
0	int
)	O
;	O
return	O
u	array(array(long))
.	O
d	long
;	O
}	O
}	O
