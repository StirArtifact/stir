boolean	int
fsysdep_make_dirs	(*(char),int)->(int)
(	O
zfile	*(char)
,	O
fpublic	int
)	O
const	O
char	O
*	O
zfile	*(char)
;	O
boolean	int
fpublic	int
;	O
{	O
char	O
*	O
zcopy	*(char)
,	O
*	O
z	*(char)
;	O
int	O
imode	int
;	O
zcopy	*(char)
=	O
zbufcpy	(*(char))->(*(char))
(	O
zfile	*(char)
)	O
;	O
if	O
(	O
fpublic	int
)	O
imode	int
=	O
IPUBLIC_DIRECTORY_MODE	O
;	O
else	O
imode	int
=	O
IDIRECTORY_MODE	O
;	O
for	O
(	O
z	*(char)
=	O
zcopy	*(char)
;	O
*	O
z	*(char)
!=	O
'\0'	O
;	O
z	*(char)
++	O
)	O
{	O
if	O
(	O
*	O
z	*(char)
==	O
'/'	O
&&	O
z	*(char)
!=	O
zcopy	*(char)
)	O
{	O
if	O
(	O
z	*(char)
[	O
-	O
1	int
]	O
==	O
'/'	O
)	O
continue	O
;	O
*	O
z	*(char)
=	O
'\0'	O
;	O
if	O
(	O
mkdir	(*(char),int)->(int)
(	O
zcopy	*(char)
,	O
imode	int
)	O
!=	O
0	int
)	O
{	O
int	O
ierr	int
;	O
ierr	int
=	O
errno	O
;	O
if	O
(	O
ierr	int
!=	O
EEXIST	int
&&	O
ierr	int
!=	O
EISDIR	int
&&	O
ierr	int
!=	O
EROFS	int
&&	O
(	O
ierr	int
!=	O
EACCES	int
||	O
!	O
fsysdep_directory	(*(char))->(int)
(	O
zcopy	*(char)
)	O
)	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"mkdir (%s): %s"	*(char)
,	O
zcopy	*(char)
,	O
strerror	(int)->(*(char))
(	O
ierr	int
)	O
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zcopy	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
*	O
z	*(char)
=	O
'/'	O
;	O
}	O
}	O
ubuffree	(*(char))->(void)
(	O
zcopy	*(char)
)	O
;	O
return	O
TRUE	O
;	O
}	O
