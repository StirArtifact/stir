extern	O
IFILE	O
curr_ifile	*(void)
;	O
struct	O
ifile	*(void)
{	O
struct	O
ifile	*(void)
*	O
h_next	*(struct(*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(char),*(void),int,int,char,struct(long,int),*(void),*(char)))
;	O
struct	O
ifile	*(void)
*	O
h_prev	*(struct(*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(char),*(void),int,int,char,struct(long,int),*(void),*(char)))
;	O
char	O
*	O
h_filename	*(char)
;	O
void	O
*	O
h_filestate	*(void)
;	O
int	O
h_index	int
;	O
int	O
h_hold	int
;	O
char	O
h_opened	char
;	O
struct	O
scrpos	struct(long,int)
h_scrpos	struct(long,int)
;	O
void	O
*	O
h_altpipe	*(void)
;	O
char	O
*	O
h_altfilename	*(char)
;	O
}	O
;	O
static	O
struct	O
ifile	*(void)
anchor	*(struct)
=	O
{	O
&	O
anchor	*(struct)
,	O
&	O
anchor	*(struct)
,	O
NULL	O
,	O
NULL	O
,	O
0	int
,	O
0	int
,	O
'\0'	O
,	O
{	O
NULL_POSITION	O
,	O
0	int
}	O
}	O
;	O
static	O
int	O
ifiles	int
=	O
0	int
;	O
static	O
void	O
incr_index	(*(struct(*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),int)->(void)
(	O
p	*(char)
,	O
incr	int
)	O
struct	O
ifile	*(void)
*	O
p	*(char)
;	O
int	O
incr	int
;	O
{	O
for	O
(	O
;	O
p	*(char)
!=	O
&	O
anchor	*(struct)
;	O
p	*(char)
=	O
p	*(char)
->	O
h_next	*(struct(*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(char),*(void),int,int,char,struct(long,int),*(void),*(char)))
)	O
p	*(char)
->	O
h_index	int
+=	O
incr	int
;	O
}	O
static	O
void	O
link_ifile	(*(struct(*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(struct(*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))))->(void)
(	O
p	*(char)
,	O
prev	*(char)
)	O
struct	O
ifile	*(void)
*	O
p	*(char)
;	O
struct	O
ifile	*(void)
*	O
prev	*(char)
;	O
{	O
if	O
(	O
prev	*(char)
==	O
NULL	O
)	O
prev	*(char)
=	O
&	O
anchor	*(struct)
;	O
p	*(char)
->	O
h_next	*(struct(*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(char),*(void),int,int,char,struct(long,int),*(void),*(char)))
=	O
prev	*(char)
->	O
h_next	*(struct(*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(char),*(void),int,int,char,struct(long,int),*(void),*(char)))
;	O
p	*(char)
->	O
h_prev	*(struct(*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(char),*(void),int,int,char,struct(long,int),*(void),*(char)))
=	O
prev	*(char)
;	O
prev	*(char)
->	O
h_next	*(struct(*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(char),*(void),int,int,char,struct(long,int),*(void),*(char)))
->	O
h_prev	*(struct(*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(char),*(void),int,int,char,struct(long,int),*(void),*(char)))
=	O
p	*(char)
;	O
prev	*(char)
->	O
h_next	*(struct(*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(char),*(void),int,int,char,struct(long,int),*(void),*(char)))
=	O
p	*(char)
;	O
p	*(char)
->	O
h_index	int
=	O
prev	*(char)
->	O
h_index	int
+	O
1	int
;	O
incr_index	(*(struct(*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),int)->(void)
(	O
p	*(char)
->	O
h_next	*(struct(*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(char),*(void),int,int,char,struct(long,int),*(void),*(char)))
,	O
1	int
)	O
;	O
ifiles	int
++	O
;	O
}	O
static	O
void	O
unlink_ifile	(*(struct(*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))))->(void)
(	O
p	*(char)
)	O
struct	O
ifile	*(void)
*	O
p	*(char)
;	O
{	O
p	*(char)
->	O
h_next	*(struct(*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(char),*(void),int,int,char,struct(long,int),*(void),*(char)))
->	O
h_prev	*(struct(*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(char),*(void),int,int,char,struct(long,int),*(void),*(char)))
=	O
p	*(char)
->	O
h_prev	*(struct(*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(char),*(void),int,int,char,struct(long,int),*(void),*(char)))
;	O
p	*(char)
->	O
h_prev	*(struct(*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(char),*(void),int,int,char,struct(long,int),*(void),*(char)))
->	O
h_next	*(struct(*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(char),*(void),int,int,char,struct(long,int),*(void),*(char)))
=	O
p	*(char)
->	O
h_next	*(struct(*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(char),*(void),int,int,char,struct(long,int),*(void),*(char)))
;	O
incr_index	(*(struct(*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),int)->(void)
(	O
p	*(char)
->	O
h_next	*(struct(*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(char),*(void),int,int,char,struct(long,int),*(void),*(char)))
,	O
-	O
1	int
)	O
;	O
ifiles	int
--	O
;	O
}	O
static	O
struct	O
ifile	*(void)
*	O
new_ifile	(*(char),*(struct(*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))))->(*(struct(*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))))
(	O
filename	*(char)
,	O
prev	*(char)
)	O
char	O
*	O
filename	*(char)
;	O
struct	O
ifile	*(void)
*	O
prev	*(char)
;	O
{	O
struct	O
ifile	*(void)
*	O
p	*(char)
;	O
p	*(char)
=	O
(	O
struct	O
ifile	*(void)
*	O
)	O
ecalloc	(int,int)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
struct	O
ifile	*(void)
)	O
)	O
;	O
p	*(char)
->	O
h_filename	*(char)
=	O
save	(*(char))->(*(char))
(	O
filename	*(char)
)	O
;	O
p	*(char)
->	O
h_scrpos	struct(long,int)
.	O
pos	long
=	O
NULL_POSITION	O
;	O
p	*(char)
->	O
h_opened	char
=	O
0	int
;	O
p	*(char)
->	O
h_hold	int
=	O
0	int
;	O
p	*(char)
->	O
h_filestate	*(void)
=	O
NULL	O
;	O
link_ifile	(*(struct(*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(struct(*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))))->(void)
(	O
p	*(char)
,	O
prev	*(char)
)	O
;	O
return	O
(	O
p	*(char)
)	O
;	O
}	O
public	O
void	O
del_ifile	(*(void))->(void)
(	O
h	*(void)
)	O
IFILE	O
h	*(void)
;	O
{	O
struct	O
ifile	*(void)
*	O
p	*(char)
;	O
if	O
(	O
h	*(void)
==	O
NULL_IFILE	O
)	O
return	O
;	O
unmark	(*(void))->(void)
(	O
h	*(void)
)	O
;	O
if	O
(	O
h	*(void)
==	O
curr_ifile	*(void)
)	O
curr_ifile	*(void)
=	O
getoff_ifile	(*(void))->(*(void))
(	O
curr_ifile	*(void)
)	O
;	O
p	*(char)
=	O
int_ifile	O
(	O
h	*(void)
)	O
;	O
unlink_ifile	(*(struct(*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))))->(void)
(	O
p	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
p	*(char)
->	O
h_filename	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
p	*(char)
)	O
;	O
}	O
public	O
IFILE	O
next_ifile	(*(void))->(*(void))
(	O
h	*(void)
)	O
IFILE	O
h	*(void)
;	O
{	O
struct	O
ifile	*(void)
*	O
p	*(char)
;	O
p	*(char)
=	O
(	O
h	*(void)
==	O
NULL_IFILE	O
)	O
?	O
&	O
anchor	*(struct)
:	O
int_ifile	O
(	O
h	*(void)
)	O
;	O
if	O
(	O
p	*(char)
->	O
h_next	*(struct(*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(char),*(void),int,int,char,struct(long,int),*(void),*(char)))
==	O
&	O
anchor	*(struct)
)	O
return	O
(	O
NULL_IFILE	O
)	O
;	O
return	O
(	O
ext_ifile	O
(	O
p	*(char)
->	O
h_next	*(struct(*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(char),*(void),int,int,char,struct(long,int),*(void),*(char)))
)	O
)	O
;	O
}	O
public	O
IFILE	O
prev_ifile	(*(void))->(*(void))
(	O
h	*(void)
)	O
IFILE	O
h	*(void)
;	O
{	O
struct	O
ifile	*(void)
*	O
p	*(char)
;	O
p	*(char)
=	O
(	O
h	*(void)
==	O
NULL_IFILE	O
)	O
?	O
&	O
anchor	*(struct)
:	O
int_ifile	O
(	O
h	*(void)
)	O
;	O
if	O
(	O
p	*(char)
->	O
h_prev	*(struct(*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(char),*(void),int,int,char,struct(long,int),*(void),*(char)))
==	O
&	O
anchor	*(struct)
)	O
return	O
(	O
NULL_IFILE	O
)	O
;	O
return	O
(	O
ext_ifile	O
(	O
p	*(char)
->	O
h_prev	*(struct(*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(char),*(void),int,int,char,struct(long,int),*(void),*(char)))
)	O
)	O
;	O
}	O
public	O
IFILE	O
getoff_ifile	(*(void))->(*(void))
(	O
ifile	*(void)
)	O
IFILE	O
ifile	*(void)
;	O
{	O
IFILE	O
newifile	*(void)
;	O
if	O
(	O
(	O
newifile	*(void)
=	O
prev_ifile	(*(void))->(*(void))
(	O
ifile	*(void)
)	O
)	O
!=	O
NULL_IFILE	O
)	O
return	O
(	O
newifile	*(void)
)	O
;	O
if	O
(	O
(	O
newifile	*(void)
=	O
next_ifile	(*(void))->(*(void))
(	O
ifile	*(void)
)	O
)	O
!=	O
NULL_IFILE	O
)	O
return	O
(	O
newifile	*(void)
)	O
;	O
return	O
(	O
NULL_IFILE	O
)	O
;	O
}	O
public	O
int	O
nifile	()->(int)
(	O
)	O
{	O
return	O
(	O
ifiles	int
)	O
;	O
}	O
static	O
struct	O
ifile	*(void)
*	O
find_ifile	(*(char))->(*(struct(*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))))
(	O
filename	*(char)
)	O
char	O
*	O
filename	*(char)
;	O
{	O
struct	O
ifile	*(void)
*	O
p	*(char)
;	O
for	O
(	O
p	*(char)
=	O
anchor	*(struct)
.	O
h_next	*(struct(*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(char),*(void),int,int,char,struct(long,int),*(void),*(char)))
;	O
p	*(char)
!=	O
&	O
anchor	*(struct)
;	O
p	*(char)
=	O
p	*(char)
->	O
h_next	*(struct(*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(struct(*(struct`),*(struct`),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))),*(char),*(void),int,int,char,struct(long,int),*(void),*(char)))
)	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
filename	*(char)
,	O
p	*(char)
->	O
h_filename	*(char)
)	O
==	O
0	int
)	O
return	O
(	O
p	*(char)
)	O
;	O
return	O
(	O
NULL	O
)	O
;	O
}	O
public	O
IFILE	O
get_ifile	(*(char),*(void))->(*(void))
(	O
filename	*(char)
,	O
prev	*(char)
)	O
char	O
*	O
filename	*(char)
;	O
IFILE	O
prev	*(char)
;	O
{	O
struct	O
ifile	*(void)
*	O
p	*(char)
;	O
if	O
(	O
(	O
p	*(char)
=	O
find_ifile	(*(char))->(*(struct(*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))))
(	O
filename	*(char)
)	O
)	O
==	O
NULL	O
)	O
p	*(char)
=	O
new_ifile	(*(char),*(struct(*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))))->(*(struct(*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(struct(*`,*`,*`,*`,int,int,char,struct`,*`,*`)),*(char),*(void),int,int,char,struct(long,int),*(void),*(char))))
(	O
filename	*(char)
,	O
int_ifile	O
(	O
prev	*(char)
)	O
)	O
;	O
return	O
(	O
ext_ifile	O
(	O
p	*(char)
)	O
)	O
;	O
}	O
public	O
char	O
*	O
get_filename	(*(void))->(*(char))
(	O
ifile	*(void)
)	O
IFILE	O
ifile	*(void)
;	O
{	O
if	O
(	O
ifile	*(void)
==	O
NULL	O
)	O
return	O
(	O
NULL	O
)	O
;	O
return	O
(	O
int_ifile	O
(	O
ifile	*(void)
)	O
->	O
h_filename	*(char)
)	O
;	O
}	O
public	O
int	O
get_index	(*(void))->(int)
(	O
ifile	*(void)
)	O
IFILE	O
ifile	*(void)
;	O
{	O
return	O
(	O
int_ifile	O
(	O
ifile	*(void)
)	O
->	O
h_index	int
)	O
;	O
}	O
public	O
void	O
store_pos	(*(void),*(struct(long,int)))->(void)
(	O
ifile	*(void)
,	O
scrpos	struct(long,int)
)	O
IFILE	O
ifile	*(void)
;	O
struct	O
scrpos	struct(long,int)
*	O
scrpos	struct(long,int)
;	O
{	O
int_ifile	O
(	O
ifile	*(void)
)	O
->	O
h_scrpos	struct(long,int)
=	O
*	O
scrpos	struct(long,int)
;	O
}	O
public	O
void	O
get_pos	(*(void),*(struct(long,int)))->(void)
(	O
ifile	*(void)
,	O
scrpos	struct(long,int)
)	O
IFILE	O
ifile	*(void)
;	O
struct	O
scrpos	struct(long,int)
*	O
scrpos	struct(long,int)
;	O
{	O
*	O
scrpos	struct(long,int)
=	O
int_ifile	O
(	O
ifile	*(void)
)	O
->	O
h_scrpos	struct(long,int)
;	O
}	O
public	O
void	O
set_open	(*(void))->(void)
(	O
ifile	*(void)
)	O
IFILE	O
ifile	*(void)
;	O
{	O
int_ifile	O
(	O
ifile	*(void)
)	O
->	O
h_opened	char
=	O
1	int
;	O
}	O
public	O
int	O
opened	(*(void))->(int)
(	O
ifile	*(void)
)	O
IFILE	O
ifile	*(void)
;	O
{	O
return	O
(	O
int_ifile	O
(	O
ifile	*(void)
)	O
->	O
h_opened	char
)	O
;	O
}	O
public	O
void	O
hold_ifile	(*(void),int)->(void)
(	O
ifile	*(void)
,	O
incr	int
)	O
IFILE	O
ifile	*(void)
;	O
int	O
incr	int
;	O
{	O
int_ifile	O
(	O
ifile	*(void)
)	O
->	O
h_hold	int
+=	O
incr	int
;	O
}	O
public	O
int	O
held_ifile	(*(void))->(int)
(	O
ifile	*(void)
)	O
IFILE	O
ifile	*(void)
;	O
{	O
return	O
(	O
int_ifile	O
(	O
ifile	*(void)
)	O
->	O
h_hold	int
)	O
;	O
}	O
public	O
void	O
*	O
get_filestate	(*(void))->(*(void))
(	O
ifile	*(void)
)	O
IFILE	O
ifile	*(void)
;	O
{	O
return	O
(	O
int_ifile	O
(	O
ifile	*(void)
)	O
->	O
h_filestate	*(void)
)	O
;	O
}	O
public	O
void	O
set_filestate	(*(void),*(void))->(void)
(	O
ifile	*(void)
,	O
filestate	*(void)
)	O
IFILE	O
ifile	*(void)
;	O
void	O
*	O
filestate	*(void)
;	O
{	O
int_ifile	O
(	O
ifile	*(void)
)	O
->	O
h_filestate	*(void)
=	O
filestate	*(void)
;	O
}	O
public	O
void	O
set_altpipe	(*(void),*(void))->(void)
(	O
ifile	*(void)
,	O
p	*(char)
)	O
IFILE	O
ifile	*(void)
;	O
void	O
*	O
p	*(char)
;	O
{	O
int_ifile	O
(	O
ifile	*(void)
)	O
->	O
h_altpipe	*(void)
=	O
p	*(char)
;	O
}	O
public	O
void	O
*	O
get_altpipe	(*(void))->(*(void))
(	O
ifile	*(void)
)	O
IFILE	O
ifile	*(void)
;	O
{	O
return	O
(	O
int_ifile	O
(	O
ifile	*(void)
)	O
->	O
h_altpipe	*(void)
)	O
;	O
}	O
public	O
void	O
set_altfilename	(*(void),*(char))->(void)
(	O
ifile	*(void)
,	O
altfilename	*(char)
)	O
IFILE	O
ifile	*(void)
;	O
char	O
*	O
altfilename	*(char)
;	O
{	O
struct	O
ifile	*(void)
*	O
p	*(char)
=	O
int_ifile	O
(	O
ifile	*(void)
)	O
;	O
if	O
(	O
p	*(char)
->	O
h_altfilename	*(char)
!=	O
NULL	O
)	O
free	(*(void))->(void)
(	O
p	*(char)
->	O
h_altfilename	*(char)
)	O
;	O
p	*(char)
->	O
h_altfilename	*(char)
=	O
altfilename	*(char)
;	O
}	O
public	O
char	O
*	O
get_altfilename	(*(void))->(*(char))
(	O
ifile	*(void)
)	O
IFILE	O
ifile	*(void)
;	O
{	O
return	O
(	O
int_ifile	O
(	O
ifile	*(void)
)	O
->	O
h_altfilename	*(char)
)	O
;	O
}	O
