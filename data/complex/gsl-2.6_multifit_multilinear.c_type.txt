static	O
int	O
multifit_linear_svd	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),int,*(struct(long,long,long,long,*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),double)))->(int)
(	O
const	O
gsl_matrix	struct(long,long,long,*(double),*(struct(long,*(double))),int)
*	O
X	*(float)
,	O
const	O
int	O
balance	int
,	O
gsl_multifit_linear_workspace	struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),double)
*	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
)	O
;	O
int	O
gsl_multifit_linear	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(double),*(struct(long,long,long,long,*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),double)))->(int)
(	O
const	O
gsl_matrix	struct(long,long,long,*(double),*(struct(long,*(double))),int)
*	O
X	*(float)
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
y	double
,	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
c	*(float)
,	O
gsl_matrix	struct(long,long,long,*(double),*(struct(long,*(double))),int)
*	O
cov	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
,	O
double	O
*	O
chisq	*(double)
,	O
gsl_multifit_linear_workspace	struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),double)
*	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
)	O
{	O
size_t	long
rank	*(long)
;	O
int	O
status	int
=	O
gsl_multifit_linear_tsvd	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(double),*(long),*(struct(long,long,long,long,*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),double)))->(int)
(	O
X	*(float)
,	O
y	double
,	O
GSL_DBL_EPSILON	int
,	O
c	*(float)
,	O
cov	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
,	O
chisq	*(double)
,	O
&	O
rank	*(long)
,	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
)	O
;	O
return	O
status	int
;	O
}	O
int	O
gsl_multifit_linear_tsvd	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(double),*(long),*(struct(long,long,long,long,*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),double)))->(int)
(	O
const	O
gsl_matrix	struct(long,long,long,*(double),*(struct(long,*(double))),int)
*	O
X	*(float)
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
y	double
,	O
const	O
double	O
tol	double
,	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
c	*(float)
,	O
gsl_matrix	struct(long,long,long,*(double),*(struct(long,*(double))),int)
*	O
cov	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
,	O
double	O
*	O
chisq	*(double)
,	O
size_t	long
*	O
rank	*(long)
,	O
gsl_multifit_linear_workspace	struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),double)
*	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
)	O
{	O
const	O
size_t	long
n	int
=	O
X	*(float)
->	O
size1	long
;	O
const	O
size_t	long
p	int
=	O
X	*(float)
->	O
size2	long
;	O
if	O
(	O
y	double
->	O
size	long
!=	O
n	int
)	O
{	O
GSL_ERROR	O
(	O
"number of observations in y does not match matrix"	*(char)
,	O
GSL_EBADLEN	int
)	O
;	O
}	O
else	O
if	O
(	O
p	int
!=	O
c	*(float)
->	O
size	long
)	O
{	O
GSL_ERROR	O
(	O
"number of parameters c does not match matrix"	*(char)
,	O
GSL_EBADLEN	int
)	O
;	O
}	O
else	O
if	O
(	O
tol	double
<=	O
0	int
)	O
{	O
GSL_ERROR	O
(	O
"tolerance must be positive"	*(char)
,	O
GSL_EINVAL	int
)	O
;	O
}	O
else	O
{	O
int	O
status	int
;	O
double	O
rnorm	*(double)
=	O
0.0	int
,	O
snorm	*(double)
;	O
status	int
=	O
gsl_multifit_linear_bsvd	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,long,*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),double)))->(int)
(	O
X	*(float)
,	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
multifit_linear_solve	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),double,double,*(long),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(double),*(double),*(struct(long,long,long,long,*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),double)))->(int)
(	O
X	*(float)
,	O
y	double
,	O
tol	double
,	O
-	O
1.0	int
,	O
rank	*(long)
,	O
c	*(float)
,	O
&	O
rnorm	*(double)
,	O
&	O
snorm	*(double)
,	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
)	O
;	O
*	O
chisq	*(double)
=	O
rnorm	*(double)
*	O
rnorm	*(double)
;	O
{	O
double	O
r2	double
=	O
rnorm	*(double)
*	O
rnorm	*(double)
;	O
double	O
s2	double
=	O
r2	double
/	O
(	O
double	O
)	O
(	O
n	int
-	O
*	O
rank	*(long)
)	O
;	O
size_t	long
i	long
,	O
j	long
;	O
gsl_matrix_view	struct(struct(long,long,long,*(double),*(struct(long,*(double))),int))
QSI	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_matrix_submatrix	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),long,long,long,long)->(struct(struct(long,long,long,*(double),*(struct(long,*`)),int)))
(	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
->	O
QSI	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
,	O
0	int
,	O
0	int
,	O
p	int
,	O
p	int
)	O
;	O
gsl_vector_view	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
D	*(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_vector_subvector	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long,long)->(struct(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
->	O
D	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
0	int
,	O
p	int
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
p	int
;	O
i	long
++	O
)	O
{	O
gsl_vector_view	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
row_i	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_matrix_row	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),long)->(struct(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
&	O
QSI	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
.	O
matrix	struct(long,long,long,*(long double),*(struct(long,*(long double))),int)
,	O
i	long
)	O
;	O
double	O
d_i	double
=	O
gsl_vector_get	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long)->(double)
(	O
&	O
D	*(struct(long,long,*(double),*(struct(long,*(double))),int))
.	O
vector	struct(long,long,*(long double),*(struct(long,*(long double))),int)
,	O
i	long
)	O
;	O
for	O
(	O
j	long
=	O
i	long
;	O
j	long
<	O
p	int
;	O
j	long
++	O
)	O
{	O
gsl_vector_view	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
row_j	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_matrix_row	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),long)->(struct(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
&	O
QSI	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
.	O
matrix	struct(long,long,long,*(long double),*(struct(long,*(long double))),int)
,	O
j	long
)	O
;	O
double	O
d_j	double
=	O
gsl_vector_get	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long)->(double)
(	O
&	O
D	*(struct(long,long,*(double),*(struct(long,*(double))),int))
.	O
vector	struct(long,long,*(long double),*(struct(long,*(long double))),int)
,	O
j	long
)	O
;	O
double	O
s	*(float)
;	O
gsl_blas_ddot	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(double))->(int)
(	O
&	O
row_i	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
.	O
vector	struct(long,long,*(long double),*(struct(long,*(long double))),int)
,	O
&	O
row_j	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
.	O
vector	struct(long,long,*(long double),*(struct(long,*(long double))),int)
,	O
&	O
s	*(float)
)	O
;	O
gsl_matrix_set	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),long,long,double)->(void)
(	O
cov	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
,	O
i	long
,	O
j	long
,	O
s	*(float)
*	O
s2	double
/	O
(	O
d_i	double
*	O
d_j	double
)	O
)	O
;	O
gsl_matrix_set	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),long,long,double)->(void)
(	O
cov	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
,	O
j	long
,	O
i	long
,	O
s	*(float)
*	O
s2	double
/	O
(	O
d_i	double
*	O
d_j	double
)	O
)	O
;	O
}	O
}	O
}	O
return	O
status	int
;	O
}	O
}	O
int	O
gsl_multifit_linear_svd	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,long,*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),double)))->(int)
(	O
const	O
gsl_matrix	struct(long,long,long,*(double),*(struct(long,*(double))),int)
*	O
X	*(float)
,	O
gsl_multifit_linear_workspace	struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),double)
*	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
)	O
{	O
int	O
status	int
=	O
multifit_linear_svd	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),int,*(struct(long,long,long,long,*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),double)))->(int)
(	O
X	*(float)
,	O
0	int
,	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
)	O
;	O
return	O
status	int
;	O
}	O
int	O
gsl_multifit_linear_bsvd	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,long,*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),double)))->(int)
(	O
const	O
gsl_matrix	struct(long,long,long,*(double),*(struct(long,*(double))),int)
*	O
X	*(float)
,	O
gsl_multifit_linear_workspace	struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),double)
*	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
)	O
{	O
int	O
status	int
=	O
multifit_linear_svd	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),int,*(struct(long,long,long,long,*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),double)))->(int)
(	O
X	*(float)
,	O
1	int
,	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
)	O
;	O
return	O
status	int
;	O
}	O
size_t	long
gsl_multifit_linear_rank	(double,*(struct(long,long,long,long,*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),double)))->(long)
(	O
const	O
double	O
tol	double
,	O
const	O
gsl_multifit_linear_workspace	struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),double)
*	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
)	O
{	O
double	O
s0	double
=	O
gsl_vector_get	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long)->(double)
(	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
->	O
S	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
0	int
)	O
;	O
size_t	long
rank	*(long)
=	O
0	int
;	O
size_t	long
j	long
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
->	O
p	int
;	O
j	long
++	O
)	O
{	O
double	O
sj	double
=	O
gsl_vector_get	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long)->(double)
(	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
->	O
S	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
j	long
)	O
;	O
if	O
(	O
sj	double
>	O
tol	double
*	O
s0	double
)	O
++	O
rank	*(long)
;	O
}	O
return	O
rank	*(long)
;	O
}	O
int	O
gsl_multifit_linear_est	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(double),*(double))->(int)
(	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
x	double
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
c	*(float)
,	O
const	O
gsl_matrix	struct(long,long,long,*(double),*(struct(long,*(double))),int)
*	O
cov	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
,	O
double	O
*	O
y	double
,	O
double	O
*	O
y_err	*(double)
)	O
{	O
if	O
(	O
x	double
->	O
size	long
!=	O
c	*(float)
->	O
size	long
)	O
{	O
GSL_ERROR	O
(	O
"number of parameters c does not match number of observations x"	*(char)
,	O
GSL_EBADLEN	int
)	O
;	O
}	O
else	O
if	O
(	O
cov	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
->	O
size1	long
!=	O
cov	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
->	O
size2	long
)	O
{	O
GSL_ERROR	O
(	O
"covariance matrix is not square"	*(char)
,	O
GSL_ENOTSQR	int
)	O
;	O
}	O
else	O
if	O
(	O
c	*(float)
->	O
size	long
!=	O
cov	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
->	O
size1	long
)	O
{	O
GSL_ERROR	O
(	O
"number of parameters c does not match size of covariance matrix cov"	*(char)
,	O
GSL_EBADLEN	int
)	O
;	O
}	O
else	O
{	O
size_t	long
i	long
,	O
j	long
;	O
double	O
var	double
=	O
0	int
;	O
gsl_blas_ddot	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(double))->(int)
(	O
x	double
,	O
c	*(float)
,	O
y	double
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
x	double
->	O
size	long
;	O
i	long
++	O
)	O
{	O
const	O
double	O
xi	double
=	O
gsl_vector_get	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long)->(double)
(	O
x	double
,	O
i	long
)	O
;	O
var	double
+=	O
xi	double
*	O
xi	double
*	O
gsl_matrix_get	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),long,long)->(double)
(	O
cov	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
,	O
i	long
,	O
i	long
)	O
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<	O
i	long
;	O
j	long
++	O
)	O
{	O
const	O
double	O
xj	double
=	O
gsl_vector_get	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long)->(double)
(	O
x	double
,	O
j	long
)	O
;	O
var	double
+=	O
2	int
*	O
xi	double
*	O
xj	double
*	O
gsl_matrix_get	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),long,long)->(double)
(	O
cov	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
,	O
i	long
,	O
j	long
)	O
;	O
}	O
}	O
*	O
y_err	*(double)
=	O
sqrt	(double)->(double)
(	O
var	double
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
}	O
double	O
gsl_multifit_linear_rcond	(*(struct(long,long,long,long,*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),double)))->(double)
(	O
const	O
gsl_multifit_linear_workspace	struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),double)
*	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
)	O
{	O
return	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
rcond	double
;	O
}	O
int	O
gsl_multifit_linear_residuals	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
const	O
gsl_matrix	struct(long,long,long,*(double),*(struct(long,*(double))),int)
*	O
X	*(float)
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
y	double
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
c	*(float)
,	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
r	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
{	O
if	O
(	O
X	*(float)
->	O
size1	long
!=	O
y	double
->	O
size	long
)	O
{	O
GSL_ERROR	O
(	O
"number of observations in y does not match rows of matrix X"	*(char)
,	O
GSL_EBADLEN	int
)	O
;	O
}	O
else	O
if	O
(	O
X	*(float)
->	O
size2	long
!=	O
c	*(float)
->	O
size	long
)	O
{	O
GSL_ERROR	O
(	O
"number of parameters c does not match columns of matrix X"	*(char)
,	O
GSL_EBADLEN	int
)	O
;	O
}	O
else	O
if	O
(	O
y	double
->	O
size	long
!=	O
r	*(struct(long,long,*(double),*(struct(long,*(double))),int))
->	O
size	long
)	O
{	O
GSL_ERROR	O
(	O
"number of observations in y does not match number of residuals"	*(char)
,	O
GSL_EBADLEN	int
)	O
;	O
}	O
else	O
{	O
gsl_vector_memcpy	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
r	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
y	double
)	O
;	O
gsl_blas_dgemv	(enum(int,int,int),double,*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),double,*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
CblasNoTrans	int
,	O
-	O
1.0	int
,	O
X	*(float)
,	O
c	*(float)
,	O
1.0	int
,	O
r	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
}	O
static	O
int	O
multifit_linear_svd	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),int,*(struct(long,long,long,long,*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),double)))->(int)
(	O
const	O
gsl_matrix	struct(long,long,long,*(double),*(struct(long,*(double))),int)
*	O
X	*(float)
,	O
const	O
int	O
balance	int
,	O
gsl_multifit_linear_workspace	struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),double)
*	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
)	O
{	O
const	O
size_t	long
n	int
=	O
X	*(float)
->	O
size1	long
;	O
const	O
size_t	long
p	int
=	O
X	*(float)
->	O
size2	long
;	O
if	O
(	O
n	int
>	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
->	O
nmax	long
||	O
p	int
>	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
->	O
pmax	long
)	O
{	O
GSL_ERROR	O
(	O
"observation matrix larger than workspace"	*(char)
,	O
GSL_EBADLEN	int
)	O
;	O
}	O
else	O
{	O
gsl_matrix_view	struct(struct(long,long,long,*(double),*(struct(long,*(double))),int))
A	*(float)
=	O
gsl_matrix_submatrix	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),long,long,long,long)->(struct(struct(long,long,long,*(double),*(struct(long,*`)),int)))
(	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
->	O
A	*(float)
,	O
0	int
,	O
0	int
,	O
n	int
,	O
p	int
)	O
;	O
gsl_matrix_view	struct(struct(long,long,long,*(double),*(struct(long,*(double))),int))
Q	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_matrix_submatrix	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),long,long,long,long)->(struct(struct(long,long,long,*(double),*(struct(long,*`)),int)))
(	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
->	O
Q	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
,	O
0	int
,	O
0	int
,	O
p	int
,	O
p	int
)	O
;	O
gsl_matrix_view	struct(struct(long,long,long,*(double),*(struct(long,*(double))),int))
QSI	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_matrix_submatrix	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),long,long,long,long)->(struct(struct(long,long,long,*(double),*(struct(long,*`)),int)))
(	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
->	O
QSI	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
,	O
0	int
,	O
0	int
,	O
p	int
,	O
p	int
)	O
;	O
gsl_vector_view	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
S	*(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_vector_subvector	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long,long)->(struct(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
->	O
S	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
0	int
,	O
p	int
)	O
;	O
gsl_vector_view	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
xt	*(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_vector_subvector	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long,long)->(struct(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
->	O
xt	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
0	int
,	O
p	int
)	O
;	O
gsl_vector_view	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
D	*(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_vector_subvector	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long,long)->(struct(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
->	O
D	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
0	int
,	O
p	int
)	O
;	O
gsl_matrix_memcpy	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
&	O
A	*(float)
.	O
matrix	struct(long,long,long,*(long double),*(struct(long,*(long double))),int)
,	O
X	*(float)
)	O
;	O
if	O
(	O
balance	int
)	O
{	O
gsl_linalg_balance_columns	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
&	O
A	*(float)
.	O
matrix	struct(long,long,long,*(long double),*(struct(long,*(long double))),int)
,	O
&	O
D	*(struct(long,long,*(double),*(struct(long,*(double))),int))
.	O
vector	struct(long,long,*(long double),*(struct(long,*(long double))),int)
)	O
;	O
}	O
else	O
{	O
gsl_vector_set_all	(*(struct(long,long,*(double),*(struct(long,*`)),int)),double)->(void)
(	O
&	O
D	*(struct(long,long,*(double),*(struct(long,*(double))),int))
.	O
vector	struct(long,long,*(long double),*(struct(long,*(long double))),int)
,	O
1.0	int
)	O
;	O
}	O
gsl_linalg_SV_decomp_mod	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
&	O
A	*(float)
.	O
matrix	struct(long,long,long,*(long double),*(struct(long,*(long double))),int)
,	O
&	O
QSI	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
.	O
matrix	struct(long,long,long,*(long double),*(struct(long,*(long double))),int)
,	O
&	O
Q	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
.	O
matrix	struct(long,long,long,*(long double),*(struct(long,*(long double))),int)
,	O
&	O
S	*(struct(long,long,*(double),*(struct(long,*(double))),int))
.	O
vector	struct(long,long,*(long double),*(struct(long,*(long double))),int)
,	O
&	O
xt	*(struct(long,long,*(double),*(struct(long,*(double))),int))
.	O
vector	struct(long,long,*(long double),*(struct(long,*(long double))),int)
)	O
;	O
{	O
double	O
smin	double
,	O
smax	double
;	O
gsl_vector_minmax	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(double),*(double))->(void)
(	O
&	O
S	*(struct(long,long,*(double),*(struct(long,*(double))),int))
.	O
vector	struct(long,long,*(long double),*(struct(long,*(long double))),int)
,	O
&	O
smin	double
,	O
&	O
smax	double
)	O
;	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
->	O
rcond	double
=	O
smin	double
/	O
smax	double
;	O
}	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
->	O
n	int
=	O
n	int
;	O
work	*(struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),double))
->	O
p	int
=	O
p	int
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
}	O
