static	O
bool	enum(int,int)
parse_page_type	(*(char),*(*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double))),*(double),*(double),*(double),*(double),*(double),*(double))->(enum(int,int))
(	O
const	O
char	O
*	O
pagesize	*(char)
,	O
const	O
plPageData	struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)
*	O
*	O
pagedata	*(*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)))
,	O
double	O
*	O
xoffset	*(double)
,	O
double	O
*	O
yoffset	*(double)
,	O
double	O
*	O
xorigin	int
,	O
double	O
*	O
yorigin	int
,	O
double	O
*	O
xsize	double
,	O
double	O
*	O
ysize	double
)	O
;	O
static	O
bool	enum(int,int)
string_to_inches	(*(char),*(double))->(enum(int,int))
(	O
const	O
char	O
*	O
string	*(short)
,	O
double	O
*	O
inches	*(double)
)	O
;	O
void	O
_set_page_type	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),array(*(void)),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int),*(struct(*`)),int,int,enum(int,int),int,int,int,int,double,double,double,double,*(struct(*`,*`,*`,enum(int,int),double,double,double,double,double,double)),double,double,double,double,double,double,array(double),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),*(struct(*`,*`,*`,long,*`,*`,long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct`,enum(int,int),*`,*`)),*(struct(*`,*`,*`,long,*`,*`,long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct`,enum(int,int),*`,*`)))))->(void)
(	O
plPlotterData	struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),array(*(void)),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int),*(struct(*(struct(*`,*`)))),int,int,enum(int,int),int,int,int,int,double,double,double,double,*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)),double,double,double,double,double,double,array(double),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),*(struct(*(struct(*`,*`,*`,long,*`,*`,long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct`,enum(int,int),*`,*`)),*(struct(*`,*`,*`,long,*`,*`,long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct`,enum(int,int),*`,*`)),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct(*`,*`,*`,long,*`,*`,long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct`,enum(int,int),*`,*`)))),*(struct(*(struct(*`,*`,*`,long,*`,*`,long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct`,enum(int,int),*`,*`)),*(struct(*`,*`,*`,long,*`,*`,long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct`,enum(int,int),*`,*`)),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct(*`,*`,*`,long,*`,*`,long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct`,enum(int,int),*`,*`)))))
*	O
data	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),array(*(void)),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int),*(struct(*(struct`))),int,int,enum(int,int),int,int,int,int,double,double,double,double,*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)),double,double,double,double,double,double,array(double),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
)	O
{	O
const	O
char	O
*	O
pagesize	*(char)
;	O
const	O
plPageData	struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)
*	O
pagedata	*(*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)))
;	O
double	O
viewport_xoffset	double
,	O
viewport_yoffset	double
;	O
double	O
viewport_xorigin	double
,	O
viewport_yorigin	double
;	O
double	O
viewport_xsize	double
,	O
viewport_ysize	double
;	O
pagesize	*(char)
=	O
(	O
const	O
char	O
*	O
)	O
_get_plot_param	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),array(*(void)),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int),*(struct(*`)),int,int,enum(int,int),int,int,int,int,double,double,double,double,*(struct(*`,*`,*`,enum(int,int),double,double,double,double,double,double)),double,double,double,double,double,double,array(double),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),*(struct(*`,*`,*`,long,*`,*`,long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct`,enum(int,int),*`,*`)),*(struct(*`,*`,*`,long,*`,*`,long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct`,enum(int,int),*`,*`)))),*(char))->(*(void))
(	O
data	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),array(*(void)),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int),*(struct(*(struct`))),int,int,enum(int,int),int,int,int,int,double,double,double,double,*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)),double,double,double,double,double,double,array(double),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
,	O
"PAGESIZE"	*(char)
)	O
;	O
if	O
(	O
!	O
parse_page_type	(*(char),*(*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double))),*(double),*(double),*(double),*(double),*(double),*(double))->(enum(int,int))
(	O
pagesize	*(char)
,	O
&	O
pagedata	*(*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)))
,	O
&	O
viewport_xoffset	double
,	O
&	O
viewport_yoffset	double
,	O
&	O
viewport_xorigin	double
,	O
&	O
viewport_yorigin	double
,	O
&	O
viewport_xsize	double
,	O
&	O
viewport_ysize	double
)	O
)	O
{	O
pagesize	*(char)
=	O
(	O
const	O
char	O
*	O
)	O
_get_default_plot_param	(*(char))->(*(void))
(	O
"PAGESIZE"	*(char)
)	O
;	O
parse_page_type	(*(char),*(*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double))),*(double),*(double),*(double),*(double),*(double),*(double))->(enum(int,int))
(	O
pagesize	*(char)
,	O
&	O
pagedata	*(*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)))
,	O
&	O
viewport_xoffset	double
,	O
&	O
viewport_yoffset	double
,	O
&	O
viewport_xorigin	double
,	O
&	O
viewport_yorigin	double
,	O
&	O
viewport_xsize	double
,	O
&	O
viewport_ysize	double
)	O
;	O
}	O
data	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),array(*(void)),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int),*(struct(*(struct`))),int,int,enum(int,int),int,int,int,int,double,double,double,double,*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)),double,double,double,double,double,double,array(double),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
->	O
page_data	*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double))
=	O
pagedata	*(*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)))
;	O
data	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),array(*(void)),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int),*(struct(*(struct`))),int,int,enum(int,int),int,int,int,int,double,double,double,double,*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)),double,double,double,double,double,double,array(double),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
->	O
viewport_xoffset	double
=	O
viewport_xoffset	double
;	O
data	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),array(*(void)),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int),*(struct(*(struct`))),int,int,enum(int,int),int,int,int,int,double,double,double,double,*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)),double,double,double,double,double,double,array(double),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
->	O
viewport_yoffset	double
=	O
viewport_yoffset	double
;	O
data	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),array(*(void)),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int),*(struct(*(struct`))),int,int,enum(int,int),int,int,int,int,double,double,double,double,*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)),double,double,double,double,double,double,array(double),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
->	O
viewport_xorigin	double
=	O
viewport_xorigin	double
;	O
data	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),array(*(void)),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int),*(struct(*(struct`))),int,int,enum(int,int),int,int,int,int,double,double,double,double,*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)),double,double,double,double,double,double,array(double),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
->	O
viewport_yorigin	double
=	O
viewport_yorigin	double
;	O
data	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),array(*(void)),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int),*(struct(*(struct`))),int,int,enum(int,int),int,int,int,int,double,double,double,double,*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)),double,double,double,double,double,double,array(double),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
->	O
viewport_xsize	double
=	O
viewport_xsize	double
;	O
data	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),array(*(void)),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int),*(struct(*(struct`))),int,int,enum(int,int),int,int,int,int,double,double,double,double,*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)),double,double,double,double,double,double,array(double),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
->	O
viewport_ysize	double
=	O
viewport_ysize	double
;	O
}	O
static	O
bool	enum(int,int)
parse_page_type	(*(char),*(*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double))),*(double),*(double),*(double),*(double),*(double),*(double))->(enum(int,int))
(	O
const	O
char	O
*	O
pagesize	*(char)
,	O
const	O
plPageData	struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)
*	O
*	O
pagedata	*(*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)))
,	O
double	O
*	O
xoffset	*(double)
,	O
double	O
*	O
yoffset	*(double)
,	O
double	O
*	O
xorigin	int
,	O
double	O
*	O
yorigin	int
,	O
double	O
*	O
xsize	double
,	O
double	O
*	O
ysize	double
)	O
{	O
const	O
plPageData	struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)
*	O
local_pagedata	*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double))
=	O
_pagedata	array(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double))
;	O
char	O
*	O
viewport_pagesize	*(char)
,	O
*	O
first	*(char)
,	O
*	O
next	*(struct(*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
;	O
char	O
xoffset_s	array(char)
[	O
32	int
]	O
,	O
yoffset_s	array(char)
[	O
32	int
]	O
;	O
char	O
xorigin_s	array(char)
[	O
32	int
]	O
,	O
yorigin_s	array(char)
[	O
32	int
]	O
;	O
char	O
xsize_s	array(char)
[	O
32	int
]	O
,	O
ysize_s	array(char)
[	O
32	int
]	O
;	O
bool	enum(int,int)
anotherfield	enum(int,int)
,	O
success	enum(int,int)
;	O
bool	enum(int,int)
got_xoffset	enum(int,int)
=	O
false	int
,	O
got_yoffset	enum(int,int)
=	O
false	int
;	O
bool	enum(int,int)
got_xorigin	enum(int,int)
=	O
false	int
,	O
got_yorigin	enum(int,int)
=	O
false	int
;	O
bool	enum(int,int)
got_xsize	enum(int,int)
=	O
false	int
,	O
got_ysize	enum(int,int)
=	O
false	int
;	O
int	O
i	int
;	O
viewport_pagesize	*(char)
=	O
(	O
char	O
*	O
)	O
_pl_xmalloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
pagesize	*(char)
)	O
+	O
1	int
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
viewport_pagesize	*(char)
,	O
pagesize	*(char)
)	O
;	O
first	*(char)
=	O
viewport_pagesize	*(char)
;	O
next	*(struct(*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
=	O
strchr	(*(char),int)->(*(char))
(	O
viewport_pagesize	*(char)
,	O
(	O
int	O
)	O
','	O
)	O
;	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
)	O
{	O
anotherfield	enum(int,int)
=	O
true	int
;	O
*	O
next	*(struct(*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
=	O
'\0'	O
;	O
next	*(struct(*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
++	O
;	O
}	O
else	O
anotherfield	enum(int,int)
=	O
false	int
;	O
success	enum(int,int)
=	O
false	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
PL_NUM_PAGESIZES	int
;	O
i	int
++	O
,	O
local_pagedata	*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double))
++	O
)	O
if	O
(	O
strcasecmp	(*(char),*(char))->(int)
(	O
local_pagedata	*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double))
->	O
name	*(char)
,	O
viewport_pagesize	*(char)
)	O
==	O
0	int
||	O
(	O
local_pagedata	*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double))
->	O
alt_name	*(char)
&&	O
strcasecmp	(*(char),*(char))->(int)
(	O
local_pagedata	*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double))
->	O
alt_name	*(char)
,	O
viewport_pagesize	*(char)
)	O
==	O
0	int
)	O
)	O
{	O
success	enum(int,int)
=	O
true	int
;	O
break	O
;	O
}	O
if	O
(	O
success	enum(int,int)
)	O
{	O
*	O
pagedata	*(*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)))
=	O
local_pagedata	*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double))
;	O
while	O
(	O
anotherfield	enum(int,int)
&&	O
*	O
next	*(struct(*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
)	O
{	O
first	*(char)
=	O
next	*(struct(*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
;	O
next	*(struct(*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
=	O
strchr	(*(char),int)->(*(char))
(	O
next	*(struct(*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
,	O
(	O
int	O
)	O
','	O
)	O
;	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
)	O
{	O
anotherfield	enum(int,int)
=	O
true	int
;	O
*	O
next	*(struct(*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
=	O
'\0'	O
;	O
next	*(struct(*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
++	O
;	O
}	O
else	O
anotherfield	enum(int,int)
=	O
false	int
;	O
if	O
(	O
sscanf	(*(char),*(char))->(int)
(	O
first	*(char)
,	O
"xoffset = %31s"	*(char)
,	O
xoffset_s	array(char)
)	O
==	O
1	int
)	O
got_xoffset	enum(int,int)
=	O
true	int
;	O
else	O
if	O
(	O
sscanf	(*(char),*(char))->(int)
(	O
first	*(char)
,	O
"yoffset = %31s"	*(char)
,	O
yoffset_s	array(char)
)	O
==	O
1	int
)	O
got_yoffset	enum(int,int)
=	O
true	int
;	O
else	O
if	O
(	O
sscanf	(*(char),*(char))->(int)
(	O
first	*(char)
,	O
"xorigin = %31s"	*(char)
,	O
xorigin_s	array(char)
)	O
==	O
1	int
)	O
got_xorigin	enum(int,int)
=	O
true	int
;	O
else	O
if	O
(	O
sscanf	(*(char),*(char))->(int)
(	O
first	*(char)
,	O
"yorigin = %31s"	*(char)
,	O
yorigin_s	array(char)
)	O
==	O
1	int
)	O
got_yorigin	enum(int,int)
=	O
true	int
;	O
else	O
if	O
(	O
sscanf	(*(char),*(char))->(int)
(	O
first	*(char)
,	O
"xsize = %31s"	*(char)
,	O
xsize_s	array(char)
)	O
==	O
1	int
)	O
got_xsize	enum(int,int)
=	O
true	int
;	O
else	O
if	O
(	O
sscanf	(*(char),*(char))->(int)
(	O
first	*(char)
,	O
"ysize = %31s"	*(char)
,	O
ysize_s	array(char)
)	O
==	O
1	int
)	O
got_ysize	enum(int,int)
=	O
true	int
;	O
}	O
{	O
double	O
viewport_xsize	double
,	O
viewport_ysize	double
;	O
double	O
viewport_xorigin	double
,	O
viewport_yorigin	double
;	O
double	O
viewport_xoffset	double
,	O
viewport_yoffset	double
;	O
if	O
(	O
!	O
(	O
got_xsize	enum(int,int)
&&	O
string_to_inches	(*(char),*(double))->(enum(int,int))
(	O
xsize_s	array(char)
,	O
&	O
viewport_xsize	double
)	O
)	O
)	O
viewport_xsize	double
=	O
local_pagedata	*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double))
->	O
default_viewport_size	double
;	O
if	O
(	O
!	O
(	O
got_ysize	enum(int,int)
&&	O
string_to_inches	(*(char),*(double))->(enum(int,int))
(	O
ysize_s	array(char)
,	O
&	O
viewport_ysize	double
)	O
)	O
)	O
viewport_ysize	double
=	O
local_pagedata	*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double))
->	O
default_viewport_size	double
;	O
if	O
(	O
!	O
(	O
got_xorigin	enum(int,int)
&&	O
string_to_inches	(*(char),*(double))->(enum(int,int))
(	O
xorigin_s	array(char)
,	O
&	O
viewport_xorigin	double
)	O
)	O
)	O
viewport_xorigin	double
=	O
0.5	int
*	O
(	O
local_pagedata	*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double))
->	O
xsize	double
-	O
viewport_xsize	double
)	O
;	O
if	O
(	O
!	O
(	O
got_yorigin	enum(int,int)
&&	O
string_to_inches	(*(char),*(double))->(enum(int,int))
(	O
yorigin_s	array(char)
,	O
&	O
viewport_yorigin	double
)	O
)	O
)	O
viewport_yorigin	double
=	O
0.5	int
*	O
(	O
local_pagedata	*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double))
->	O
ysize	double
-	O
viewport_ysize	double
)	O
;	O
if	O
(	O
!	O
(	O
got_xoffset	enum(int,int)
&&	O
string_to_inches	(*(char),*(double))->(enum(int,int))
(	O
xoffset_s	array(char)
,	O
&	O
viewport_xoffset	double
)	O
)	O
)	O
viewport_xoffset	double
=	O
0.0	int
;	O
if	O
(	O
!	O
(	O
got_yoffset	enum(int,int)
&&	O
string_to_inches	(*(char),*(double))->(enum(int,int))
(	O
yoffset_s	array(char)
,	O
&	O
viewport_yoffset	double
)	O
)	O
)	O
viewport_yoffset	double
=	O
0.0	int
;	O
*	O
xsize	double
=	O
viewport_xsize	double
;	O
*	O
ysize	double
=	O
viewport_ysize	double
;	O
*	O
xorigin	int
=	O
viewport_xorigin	double
;	O
*	O
yorigin	int
=	O
viewport_yorigin	double
;	O
*	O
xoffset	*(double)
=	O
viewport_xoffset	double
;	O
*	O
yoffset	*(double)
=	O
viewport_yoffset	double
;	O
}	O
}	O
free	(*(void))->(void)
(	O
viewport_pagesize	*(char)
)	O
;	O
return	O
success	enum(int,int)
;	O
}	O
static	O
bool	enum(int,int)
string_to_inches	(*(char),*(double))->(enum(int,int))
(	O
const	O
char	O
*	O
string	*(short)
,	O
double	O
*	O
inches	*(double)
)	O
{	O
double	O
val	double
;	O
char	O
s	*(char)
[	O
4	int
]	O
;	O
if	O
(	O
sscanf	(*(char),*(char))->(int)
(	O
string	*(short)
,	O
"%lf %3s"	*(char)
,	O
&	O
val	double
,	O
s	*(char)
)	O
==	O
2	int
)	O
{	O
if	O
(	O
strlen	(*(char))->(long)
(	O
s	*(char)
)	O
>	O
2	int
)	O
return	O
false	int
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
s	*(char)
,	O
"in"	*(char)
)	O
==	O
0	int
)	O
{	O
*	O
inches	*(double)
=	O
val	double
;	O
return	O
true	int
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
s	*(char)
,	O
"cm"	*(char)
)	O
==	O
0	int
)	O
{	O
*	O
inches	*(double)
=	O
val	double
/	O
2.54	int
;	O
return	O
true	int
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
s	*(char)
,	O
"mm"	*(char)
)	O
==	O
0	int
)	O
{	O
*	O
inches	*(double)
=	O
val	double
/	O
25.4	int
;	O
return	O
true	int
;	O
}	O
}	O
return	O
false	int
;	O
}	O
