static	O
int	O
sort_names	(*(char),*(void),*(char),*(void),*(void))->(int)
(	O
char	O
const	O
*	O
aname	*(char)
,	O
void	O
const	O
*	O
adata	*(void)
,	O
char	O
const	O
*	O
bname	*(char)
,	O
void	O
const	O
*	O
bdata	*(void)
,	O
void	O
*	O
data	*(void)
)	O
{	O
return	O
mu_c_strcasecmp	(*(char),*(char))->(int)
(	O
aname	*(char)
,	O
bname	*(char)
)	O
;	O
}	O
static	O
int	O
print_param	(*(char),*(void),*(void))->(int)
(	O
const	O
char	O
*	O
name	*(char)
,	O
void	O
*	O
item	*(void)
,	O
void	O
*	O
data	*(void)
)	O
{	O
struct	O
mu_mime_param	struct(*(char),*(char),*(char))
*	O
param	*(char)
=	O
item	*(void)
;	O
mu_printf	(*(char))->(int)
(	O
"%s"	*(char)
,	O
name	*(char)
)	O
;	O
if	O
(	O
param	*(char)
->	O
lang	*(char)
)	O
mu_printf	(*(char))->(int)
(	O
"(lang:%s/%s)"	*(char)
,	O
param	*(char)
->	O
lang	*(char)
,	O
param	*(char)
->	O
cset	*(char)
)	O
;	O
mu_printf	(*(char))->(int)
(	O
"=%s\n"	*(char)
,	O
param	*(char)
->	O
value	*(void)
)	O
;	O
return	O
0	int
;	O
}	O
int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
int	O
i	int
;	O
mu_stream_t	*(struct)
tmp	*(struct)
;	O
mu_transport_t	*(void)
trans	*(char)
[	O
2	int
]	O
;	O
char	O
*	O
value	*(void)
;	O
mu_assoc_t	*(struct)
assoc	*(struct)
;	O
char	O
*	O
charset	*(char)
=	O
NULL	O
;	O
char	O
*	O
header_name	*(char)
=	O
NULL	O
;	O
unsigned	O
long	O
width	long
=	O
76	int
;	O
mu_set_program_name	(*(char))->(void)
(	O
argv	*(*(char))
[	O
0	int
]	O
)	O
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
argc	int
;	O
i	int
++	O
)	O
{	O
char	O
*	O
opt	*(char)
=	O
argv	*(*(char))
[	O
i	int
]	O
;	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
opt	*(char)
,	O
"-debug="	*(char)
,	O
7	int
)	O
==	O
0	int
)	O
mu_debug_parse_spec	(*(char))->(void)
(	O
opt	*(char)
+	O
7	int
)	O
;	O
else	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
opt	*(char)
,	O
"-charset="	*(char)
,	O
9	int
)	O
==	O
0	int
)	O
charset	*(char)
=	O
opt	*(char)
+	O
9	int
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
opt	*(char)
,	O
"-h"	*(char)
)	O
==	O
0	int
||	O
strcmp	(*(char),*(char))->(int)
(	O
opt	*(char)
,	O
"-help"	*(char)
)	O
==	O
0	int
)	O
{	O
mu_printf	(*(char))->(int)
(	O
"usage: %s [-charset=cs] [-debug=SPEC] [-header=NAME] [-width=N]"	*(char)
,	O
mu_program_name	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
opt	*(char)
,	O
"-header="	*(char)
,	O
8	int
)	O
==	O
0	int
)	O
header_name	*(char)
=	O
opt	*(char)
+	O
8	int
;	O
else	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
opt	*(char)
,	O
"-width="	*(char)
,	O
7	int
)	O
==	O
0	int
)	O
width	long
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
opt	*(char)
+	O
7	int
,	O
NULL	O
,	O
10	int
)	O
;	O
else	O
{	O
mu_error	(*(char))->(int)
(	O
"unknown option %s"	*(char)
,	O
opt	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
}	O
if	O
(	O
i	int
!=	O
argc	int
)	O
{	O
mu_error	(*(char))->(int)
(	O
"too many arguments"	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
MU_ASSERT	O
(	O
mu_memory_stream_create	(*(*(struct)),int)->(int)
(	O
&	O
tmp	*(struct)
,	O
MU_STREAM_RDWR	O
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_stream_copy	(*(struct),*(struct),long,*(long))->(int)
(	O
tmp	*(struct)
,	O
mu_strin	*(struct)
,	O
0	int
,	O
NULL	O
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
tmp	*(struct)
,	O
""	*(char)
,	O
1	int
,	O
NULL	O
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_stream_ioctl	(*(struct),int,int,*(void))->(int)
(	O
tmp	*(struct)
,	O
MU_IOCTL_TRANSPORT	int
,	O
MU_IOCTL_OP_GET	int
,	O
trans	*(char)
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_mime_header_parse	(*(char),*(char),*(*(char)),*(*(struct)))->(int)
(	O
(	O
char	O
*	O
)	O
trans	*(char)
[	O
0	int
]	O
,	O
charset	*(char)
,	O
&	O
value	*(void)
,	O
&	O
assoc	*(struct)
)	O
)	O
;	O
if	O
(	O
header_name	*(char)
)	O
{	O
mu_header_t	*(struct)
hdr	*(struct)
;	O
mu_stream_t	*(struct)
hstr	*(struct)
;	O
MU_ASSERT	O
(	O
mu_header_create	(*(*(struct)),*(char),long)->(int)
(	O
&	O
hdr	*(struct)
,	O
NULL	O
,	O
0	int
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_mime_header_set_w	(*(struct),*(char),*(char),*(struct),long)->(int)
(	O
hdr	*(struct)
,	O
header_name	*(char)
,	O
value	*(void)
,	O
assoc	*(struct)
,	O
width	long
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_header_get_streamref	(*(struct),*(*(struct)))->(int)
(	O
hdr	*(struct)
,	O
&	O
hstr	*(struct)
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_stream_copy	(*(struct),*(struct),long,*(long))->(int)
(	O
mu_strout	*(struct)
,	O
hstr	*(struct)
,	O
0	int
,	O
NULL	O
)	O
)	O
;	O
}	O
else	O
{	O
mu_printf	(*(char))->(int)
(	O
"%s\n"	*(char)
,	O
value	*(void)
)	O
;	O
mu_assoc_sort_r	(*(struct),*((*(char),*(void),*(char),*(void),*(void))->(int)),*(void))->(int)
(	O
assoc	*(struct)
,	O
sort_names	(*(char),*(void),*(char),*(void),*(void))->(int)
,	O
NULL	O
)	O
;	O
mu_assoc_foreach	(*(struct),*((*(char),*(void),*(void))->(int)),*(void))->(int)
(	O
assoc	*(struct)
,	O
print_param	(*(char),*(void),*(void))->(int)
,	O
NULL	O
)	O
;	O
}	O
return	O
0	int
;	O
}	O
