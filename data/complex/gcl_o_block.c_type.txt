static	O
void	O
FFN	(int)->(int)
(	O
Fblock	int
)	O
(	O
VOL	O
object	int
args	int
)	O
{	O
object	int
*	O
oldlex	O
=	O
lex_env	O
;	O
object	int
id	O
;	O
object	int
body	O
;	O
object	int
*	O
top	O
;	O
if	O
(	O
endp	()->(int)
(	O
args	int
)	O
)	O
FEtoo_few_argumentsF	()->(int)
(	O
args	int
)	O
;	O
lex_copy	()->(int)
(	O
)	O
;	O
id	O
=	O
alloc_frame_id	()->(int)
(	O
)	O
;	O
vs_push	()->(int)
(	O
id	O
)	O
;	O
lex_block_bind	()->(int)
(	O
MMcar	()->(int)
(	O
args	int
)	O
,	O
id	O
)	O
;	O
vs_popp	O
;	O
frs_push	()->(int)
(	O
FRS_CATCH	O
,	O
id	O
)	O
;	O
if	O
(	O
nlj_active	O
)	O
nlj_active	O
=	O
FALSE	O
;	O
else	O
{	O
body	O
=	O
MMcdr	()->(int)
(	O
args	int
)	O
;	O
if	O
(	O
endp	()->(int)
(	O
body	O
)	O
)	O
{	O
vs_base	O
=	O
vs_top	O
;	O
vs_push	()->(int)
(	O
Cnil	O
)	O
;	O
}	O
else	O
{	O
top	O
=	O
vs_top	O
;	O
do	O
{	O
vs_top	O
=	O
top	O
;	O
eval	()->(int)
(	O
MMcar	()->(int)
(	O
body	O
)	O
)	O
;	O
body	O
=	O
MMcdr	()->(int)
(	O
body	O
)	O
;	O
}	O
while	O
(	O
!	O
endp	()->(int)
(	O
body	O
)	O
)	O
;	O
}	O
}	O
frs_pop	()->(int)
(	O
)	O
;	O
lex_env	O
=	O
oldlex	O
;	O
}	O
static	O
void	O
FFN	(int)->(int)
(	O
Freturn_from	int
)	O
(	O
object	int
args	int
)	O
{	O
object	int
lex_block	O
;	O
frame_ptr	O
fr	O
;	O
if	O
(	O
endp	()->(int)
(	O
args	int
)	O
)	O
FEtoo_few_argumentsF	()->(int)
(	O
args	int
)	O
;	O
if	O
(	O
!	O
endp	()->(int)
(	O
MMcdr	()->(int)
(	O
args	int
)	O
)	O
&&	O
!	O
endp	()->(int)
(	O
MMcddr	()->(int)
(	O
args	int
)	O
)	O
)	O
FEtoo_many_argumentsF	()->(int)
(	O
args	int
)	O
;	O
lex_block	O
=	O
lex_block_sch	()->(int)
(	O
MMcar	()->(int)
(	O
args	int
)	O
)	O
;	O
if	O
(	O
MMnull	()->(int)
(	O
lex_block	O
)	O
)	O
FEerror	()->(int)
(	O
"The block name ~S is undefined."	*(char)
,	O
1	int
,	O
MMcar	()->(int)
(	O
args	int
)	O
)	O
;	O
fr	O
=	O
frs_sch	()->(int)
(	O
MMcaddr	()->(int)
(	O
lex_block	O
)	O
)	O
;	O
if	O
(	O
fr	O
==	O
NULL	O
)	O
FEerror	()->(int)
(	O
"The block ~S is missing."	*(char)
,	O
1	int
,	O
MMcar	()->(int)
(	O
args	int
)	O
)	O
;	O
if	O
(	O
endp	()->(int)
(	O
MMcdr	()->(int)
(	O
args	int
)	O
)	O
)	O
{	O
vs_base	O
=	O
vs_top	O
;	O
vs_push	()->(int)
(	O
Cnil	O
)	O
;	O
}	O
else	O
eval	()->(int)
(	O
MMcadr	()->(int)
(	O
args	int
)	O
)	O
;	O
unwind	()->(int)
(	O
fr	O
,	O
MMcaddr	()->(int)
(	O
lex_block	O
)	O
)	O
;	O
}	O
static	O
void	O
FFN	(int)->(int)
(	O
Freturn	int
)	O
(	O
object	int
args	int
)	O
{	O
object	int
lex_block	O
;	O
frame_ptr	O
fr	O
;	O
if	O
(	O
!	O
endp	()->(int)
(	O
args	int
)	O
&&	O
!	O
endp	()->(int)
(	O
MMcdr	()->(int)
(	O
args	int
)	O
)	O
)	O
FEtoo_many_argumentsF	()->(int)
(	O
args	int
)	O
;	O
lex_block	O
=	O
lex_block_sch	()->(int)
(	O
Cnil	O
)	O
;	O
if	O
(	O
MMnull	()->(int)
(	O
lex_block	O
)	O
)	O
FEerror	()->(int)
(	O
"The block name ~S is undefined."	*(char)
,	O
1	int
,	O
Cnil	O
)	O
;	O
fr	O
=	O
frs_sch	()->(int)
(	O
MMcaddr	()->(int)
(	O
lex_block	O
)	O
)	O
;	O
if	O
(	O
fr	O
==	O
NULL	O
)	O
FEerror	()->(int)
(	O
"The block ~S is missing."	*(char)
,	O
1	int
,	O
Cnil	O
)	O
;	O
if	O
(	O
endp	()->(int)
(	O
args	int
)	O
)	O
{	O
vs_base	O
=	O
vs_top	O
;	O
vs_push	()->(int)
(	O
Cnil	O
)	O
;	O
}	O
else	O
eval	()->(int)
(	O
MMcar	()->(int)
(	O
args	int
)	O
)	O
;	O
unwind	()->(int)
(	O
fr	O
,	O
MMcaddr	()->(int)
(	O
lex_block	O
)	O
)	O
;	O
}	O
void	O
gcl_init_block	()->(void)
(	O
void	O
)	O
{	O
sLblock	O
=	O
make_special_form	()->(int)
(	O
"BLOCK"	*(char)
,	O
Fblock	int
)	O
;	O
enter_mark_origin	()->(int)
(	O
&	O
sLblock	O
)	O
;	O
make_special_form	()->(int)
(	O
"RETURN-FROM"	*(char)
,	O
Freturn_from	int
)	O
;	O
make_special_form	()->(int)
(	O
"RETURN"	*(char)
,	O
Freturn	int
)	O
;	O
}	O
