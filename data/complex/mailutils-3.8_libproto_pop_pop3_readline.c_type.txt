int	O
mu_pop3_carrier_is_ready	(*(struct),int,int)->(int)
(	O
mu_stream_t	*(struct)
carrier	*(struct)
,	O
int	O
flag	int
,	O
int	O
timeout	int
)	O
{	O
struct	O
timeval	struct(long,long)
tv	struct(long,long)
,	O
*	O
tvp	*(struct(long,long))
=	O
NULL	O
;	O
int	O
wflags	int
=	O
flag	int
;	O
int	O
status	int
;	O
if	O
(	O
timeout	int
>=	O
0	int
)	O
{	O
tv	struct(long,long)
.	O
tv_sec	long
=	O
timeout	int
/	O
100	int
;	O
tv	struct(long,long)
.	O
tv_usec	long
=	O
(	O
timeout	int
%	O
1000	int
)	O
*	O
1000	int
;	O
tvp	*(struct(long,long))
=	O
&	O
tv	struct(long,long)
;	O
}	O
status	int
=	O
mu_stream_wait	(*(struct),*(int),*(struct(long,long)))->(int)
(	O
carrier	*(struct)
,	O
&	O
wflags	int
,	O
tvp	*(struct(long,long))
)	O
;	O
if	O
(	O
status	int
)	O
return	O
0	int
;	O
return	O
wflags	int
&	O
flag	int
;	O
}	O
int	O
mu_pop3_getline	(*(struct))->(int)
(	O
mu_pop3_t	*(struct)
pop3	*(*(struct))
)	O
{	O
size_t	long
n	int
;	O
int	O
status	int
=	O
mu_stream_getline	(*(struct),*(*(char)),*(long),*(long))->(int)
(	O
pop3	*(*(struct))
->	O
carrier	*(struct)
,	O
&	O
pop3	*(*(struct))
->	O
rdbuf	*(char)
,	O
&	O
pop3	*(*(struct))
->	O
rdsize	long
,	O
&	O
n	int
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
if	O
(	O
n	int
==	O
0	int
)	O
return	O
EIO	int
;	O
n	int
=	O
mu_rtrim_class	(*(char),int)->(long)
(	O
pop3	*(*(struct))
->	O
rdbuf	*(char)
,	O
MU_CTYPE_SPACE	int
)	O
;	O
if	O
(	O
n	int
>=	O
2	int
&&	O
pop3	*(*(struct))
->	O
rdbuf	*(char)
[	O
0	int
]	O
==	O
'.'	O
&&	O
pop3	*(*(struct))
->	O
rdbuf	*(char)
[	O
1	int
]	O
!=	O
'\n'	O
)	O
memmove	(*(void),*(void),long)->(*(void))
(	O
pop3	*(*(struct))
->	O
rdbuf	*(char)
,	O
pop3	*(*(struct))
->	O
rdbuf	*(char)
+	O
1	int
,	O
n	int
)	O
;	O
}	O
return	O
status	int
;	O
}	O
