int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
int	O
rc	int
;	O
size_t	long
maxlen	long
=	O
76	int
,	O
sz	long
;	O
char	O
*	O
filename	*(char)
=	O
NULL	O
;	O
dico_stream_t	*(struct)
in	*(struct)
,	O
out	*(struct)
,	O
s	*(char)
;	O
char	O
buf	*(void)
[	O
512	int
]	O
;	O
dico_set_program_name	(*(char))->(void)
(	O
argv	*(*(char))
[	O
0	int
]	O
)	O
;	O
while	O
(	O
--	O
argc	int
)	O
{	O
char	O
*	O
arg	*(char)
=	O
*	O
++	O
argv	*(*(char))
;	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
arg	*(char)
,	O
"-length="	*(char)
,	O
8	int
)	O
==	O
0	int
)	O
maxlen	long
=	O
atoi	(*(char))->(int)
(	O
arg	*(char)
+	O
8	int
)	O
;	O
else	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
arg	*(char)
,	O
"-file="	*(char)
,	O
6	int
)	O
==	O
0	int
)	O
filename	*(char)
=	O
arg	*(char)
+	O
6	int
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"--"	*(char)
)	O
==	O
0	int
)	O
{	O
--	O
argc	int
;	O
++	O
argv	*(*(char))
;	O
}	O
else	O
if	O
(	O
arg	*(char)
[	O
0	int
]	O
==	O
'-'	O
)	O
{	O
dico_log	(int,int,*(char))->(void)
(	O
L_ERR	int
,	O
0	int
,	O
"unknown option '%s'"	*(char)
,	O
arg	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
else	O
break	O
;	O
}	O
if	O
(	O
argc	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Usage: %s [-length=N] [-file=S]\n"	*(char)
,	O
dico_program_name	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
if	O
(	O
filename	*(char)
)	O
{	O
in	*(struct)
=	O
dico_mapfile_stream_create	(*(char),int)->(*(struct))
(	O
filename	*(char)
,	O
DICO_STREAM_READ	int
)	O
;	O
if	O
(	O
!	O
in	*(struct)
)	O
{	O
dico_log	(int,int,*(char))->(void)
(	O
L_ERR	int
,	O
errno	O
,	O
"cannot create stream `%s'"	*(char)
,	O
filename	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
}	O
else	O
{	O
in	*(struct)
=	O
dico_fd_stream_create	(int,int,int)->(*(struct))
(	O
0	int
,	O
DICO_STREAM_READ	int
,	O
1	int
)	O
;	O
if	O
(	O
!	O
in	*(struct)
)	O
{	O
dico_log	(int,int,*(char))->(void)
(	O
L_ERR	int
,	O
errno	O
,	O
"cannot create stdin stream"	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
}	O
rc	int
=	O
dico_stream_open	(*(struct))->(int)
(	O
in	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
dico_log	(int,int,*(char))->(void)
(	O
L_ERR	int
,	O
0	int
,	O
"cannot open stream `%s': %s"	*(char)
,	O
filename	*(char)
?	O
filename	*(char)
:	O
"<stdin>"	*(char)
,	O
dico_stream_strerror	(*(struct),int)->(*(char))
(	O
in	*(struct)
,	O
rc	int
)	O
)	O
;	O
return	O
2	int
;	O
}	O
out	*(struct)
=	O
dico_fd_stream_create	(int,int,int)->(*(struct))
(	O
1	int
,	O
DICO_STREAM_WRITE	int
,	O
1	int
)	O
;	O
if	O
(	O
!	O
out	*(struct)
)	O
{	O
dico_log	(int,int,*(char))->(void)
(	O
L_ERR	int
,	O
errno	O
,	O
"cannot create stdout stream"	*(char)
)	O
;	O
return	O
2	int
;	O
}	O
rc	int
=	O
dico_stream_open	(*(struct))->(int)
(	O
out	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
dico_log	(int,int,*(char))->(void)
(	O
L_ERR	int
,	O
0	int
,	O
"cannot open stream `%s': %s"	*(char)
,	O
"<stdout>"	*(char)
,	O
dico_stream_strerror	(*(struct),int)->(*(char))
(	O
out	*(struct)
,	O
rc	int
)	O
)	O
;	O
return	O
2	int
;	O
}	O
s	*(char)
=	O
dico_linetrim_stream	(*(struct),long,int)->(*(struct))
(	O
out	*(struct)
,	O
maxlen	long
,	O
0	int
)	O
;	O
if	O
(	O
!	O
s	*(char)
)	O
{	O
dico_log	(int,int,*(char))->(void)
(	O
L_ERR	int
,	O
errno	O
,	O
"cannot create filter stream"	*(char)
)	O
;	O
return	O
2	int
;	O
}	O
out	*(struct)
=	O
s	*(char)
;	O
while	O
(	O
(	O
rc	int
=	O
dico_stream_read	(*(struct),*(void),long,*(long))->(int)
(	O
in	*(struct)
,	O
buf	*(void)
,	O
sizeof	O
(	O
buf	*(void)
)	O
,	O
&	O
sz	long
)	O
)	O
==	O
0	int
&&	O
sz	long
)	O
{	O
rc	int
=	O
dico_stream_write	(*(struct),*(void),long)->(int)
(	O
out	*(struct)
,	O
buf	*(void)
,	O
sz	long
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
dico_log	(int,int,*(char))->(void)
(	O
L_ERR	int
,	O
0	int
,	O
"write error: %s"	*(char)
,	O
dico_stream_strerror	(*(struct),int)->(*(char))
(	O
out	*(struct)
,	O
rc	int
)	O
)	O
;	O
return	O
2	int
;	O
}	O
}	O
dico_stream_close	(*(struct))->(int)
(	O
out	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
