void	O
miFillGeneralPoly	O
(	O
miPaintedSet	struct
*	O
paintedSet	*(struct)
,	O
const	O
miGC	struct
*	O
pGC	*(struct)
,	O
int	O
count	int
,	O
const	O
miPoint	struct(int,int)
*	O
ptsIn	*(struct(int,int))
)	O
{	O
EdgeTableEntry	struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),enum(int,int))
*	O
pAET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
;	O
int	O
y	double
;	O
int	O
nPts	int
=	O
0	int
;	O
EdgeTableEntry	struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),enum(int,int))
*	O
pWETE	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
;	O
ScanLineList	struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,*`,*`)))))
*	O
pSLL	*(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,*(struct`),*(struct`)))))
;	O
miPoint	struct(int,int)
*	O
ptsOut	*(struct(int,int))
;	O
unsigned	O
int	O
*	O
width	array(short)
;	O
miPoint	struct(int,int)
FirstPoint	array(struct(int,int))
[	O
NUMPTSTOBUFFER	int
]	O
;	O
unsigned	O
int	O
FirstWidth	array(int)
[	O
NUMPTSTOBUFFER	int
]	O
;	O
EdgeTableEntry	struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),enum(int,int))
*	O
pPrevAET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
;	O
EdgeTable	struct(int,int,struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,*(struct`),*(struct`)))))
ET	*(struct(int,int,struct(int,*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,*`,*`)))))
;	O
EdgeTableEntry	struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),enum(int,int))
AET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
;	O
EdgeTableEntry	struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),enum(int,int))
*	O
pETEs	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
;	O
ScanLineListBlock	struct(array(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,*`,*`)))))),*(struct(array(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,*`,*`)))))),*(struct(array(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,*`,*`)))))),*`)))))
SLLBlock	struct(array(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,*`,*`)))))),*(struct(array(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,*`,*`)))))),*(struct(array(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,*`,*`)))))),*`)))))
;	O
bool	enum(int,int)
fixWAET	enum(int,int)
=	O
false	int
;	O
if	O
(	O
count	int
<=	O
2	int
)	O
return	O
;	O
pETEs	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
=	O
(	O
EdgeTableEntry	struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),enum(int,int))
*	O
)	O
mi_xmalloc	O
(	O
sizeof	O
(	O
EdgeTableEntry	struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),enum(int,int))
)	O
*	O
count	int
)	O
;	O
ptsOut	*(struct(int,int))
=	O
FirstPoint	array(struct(int,int))
;	O
width	array(short)
=	O
FirstWidth	array(int)
;	O
miCreateETandAET	O
(	O
count	int
,	O
ptsIn	*(struct(int,int))
,	O
&	O
ET	*(struct(int,int,struct(int,*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,*`,*`)))))
,	O
&	O
AET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
,	O
pETEs	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
,	O
&	O
SLLBlock	struct(array(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,*`,*`)))))),*(struct(array(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,*`,*`)))))),*(struct(array(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,*`,*`)))))),*`)))))
)	O
;	O
pSLL	*(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,*(struct`),*(struct`)))))
=	O
ET	*(struct(int,int,struct(int,*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,*`,*`)))))
.	O
scanlines	struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,*`,*`)))))
.	O
next	*(struct(*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
;	O
if	O
(	O
pGC	*(struct)
->	O
fillRule	int
==	O
(	O
int	O
)	O
MI_EVEN_ODD_RULE	int
)	O
{	O
for	O
(	O
y	double
=	O
ET	*(struct(int,int,struct(int,*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,*`,*`)))))
.	O
ymin	double
;	O
y	double
<	O
ET	*(struct(int,int,struct(int,*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,*`,*`)))))
.	O
ymax	double
;	O
y	double
++	O
)	O
{	O
if	O
(	O
pSLL	*(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,*(struct`),*(struct`)))))
&&	O
y	double
==	O
pSLL	*(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,*(struct`),*(struct`)))))
->	O
scanline	int
)	O
{	O
miloadAET	O
(	O
&	O
AET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
,	O
pSLL	*(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,*(struct`),*(struct`)))))
->	O
edgelist	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
)	O
;	O
pSLL	*(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,*(struct`),*(struct`)))))
=	O
pSLL	*(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
;	O
}	O
pPrevAET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
=	O
&	O
AET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
;	O
pAET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
=	O
AET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
.	O
next	*(struct(*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
;	O
while	O
(	O
pAET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
)	O
{	O
ptsOut	*(struct(int,int))
->	O
x	double
=	O
pAET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
->	O
bres	struct(int,int,int,int,int,int)
.	O
minor_axis	int
;	O
ptsOut	*(struct(int,int))
++	O
->	O
y	double
=	O
y	double
;	O
*	O
width	array(short)
++	O
=	O
(	O
unsigned	O
int	O
)	O
(	O
pAET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
->	O
bres	struct(int,int,int,int,int,int)
.	O
minor_axis	int
-	O
pAET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
->	O
bres	struct(int,int,int,int,int,int)
.	O
minor_axis	int
)	O
;	O
nPts	int
++	O
;	O
if	O
(	O
nPts	int
==	O
NUMPTSTOBUFFER	int
)	O
{	O
MI_COPY_AND_PAINT_SPANS	O
(	O
paintedSet	*(struct)
,	O
pGC	*(struct)
->	O
pixels	*(struct(char,union(char,array(char))))
[	O
1	int
]	O
,	O
nPts	int
,	O
FirstPoint	array(struct(int,int))
,	O
FirstWidth	array(int)
)	O
ptsOut	*(struct(int,int))
=	O
FirstPoint	array(struct(int,int))
;	O
width	array(short)
=	O
FirstWidth	array(int)
;	O
nPts	int
=	O
0	int
;	O
}	O
EVALUATEEDGEEVENODD	O
(	O
pAET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
,	O
pPrevAET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
,	O
y	double
)	O
EVALUATEEDGEEVENODD	O
(	O
pAET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
,	O
pPrevAET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
,	O
y	double
)	O
;	O
}	O
miInsertionSort	O
(	O
&	O
AET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
)	O
;	O
}	O
}	O
else	O
{	O
for	O
(	O
y	double
=	O
ET	*(struct(int,int,struct(int,*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,*`,*`)))))
.	O
ymin	double
;	O
y	double
<	O
ET	*(struct(int,int,struct(int,*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,*`,*`)))))
.	O
ymax	double
;	O
y	double
++	O
)	O
{	O
if	O
(	O
pSLL	*(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,*(struct`),*(struct`)))))
&&	O
y	double
==	O
pSLL	*(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,*(struct`),*(struct`)))))
->	O
scanline	int
)	O
{	O
miloadAET	O
(	O
&	O
AET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
,	O
pSLL	*(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,*(struct`),*(struct`)))))
->	O
edgelist	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
)	O
;	O
micomputeWAET	O
(	O
&	O
AET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
)	O
;	O
pSLL	*(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,*(struct`),*(struct`)))))
=	O
pSLL	*(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
;	O
}	O
pPrevAET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
=	O
&	O
AET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
;	O
pAET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
=	O
AET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
.	O
next	*(struct(*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
;	O
pWETE	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
=	O
pAET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
;	O
while	O
(	O
pAET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
)	O
{	O
if	O
(	O
pWETE	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
==	O
pAET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
)	O
{	O
ptsOut	*(struct(int,int))
->	O
x	double
=	O
pAET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
->	O
bres	struct(int,int,int,int,int,int)
.	O
minor_axis	int
;	O
ptsOut	*(struct(int,int))
++	O
->	O
y	double
=	O
y	double
;	O
*	O
width	array(short)
++	O
=	O
(	O
unsigned	O
int	O
)	O
(	O
pAET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
->	O
nextWETE	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
->	O
bres	struct(int,int,int,int,int,int)
.	O
minor_axis	int
-	O
pAET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
->	O
bres	struct(int,int,int,int,int,int)
.	O
minor_axis	int
)	O
;	O
nPts	int
++	O
;	O
if	O
(	O
nPts	int
==	O
NUMPTSTOBUFFER	int
)	O
{	O
MI_COPY_AND_PAINT_SPANS	O
(	O
paintedSet	*(struct)
,	O
pGC	*(struct)
->	O
pixels	*(struct(char,union(char,array(char))))
[	O
1	int
]	O
,	O
nPts	int
,	O
FirstPoint	array(struct(int,int))
,	O
FirstWidth	array(int)
)	O
ptsOut	*(struct(int,int))
=	O
FirstPoint	array(struct(int,int))
;	O
width	array(short)
=	O
FirstWidth	array(int)
;	O
nPts	int
=	O
0	int
;	O
}	O
pWETE	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
=	O
pWETE	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
->	O
nextWETE	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
;	O
while	O
(	O
pWETE	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
!=	O
pAET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
)	O
EVALUATEEDGEWINDING	O
(	O
pAET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
,	O
pPrevAET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
,	O
y	double
,	O
fixWAET	enum(int,int)
)	O
;	O
pWETE	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
=	O
pWETE	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
->	O
nextWETE	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
;	O
}	O
EVALUATEEDGEWINDING	O
(	O
pAET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
,	O
pPrevAET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
,	O
y	double
,	O
fixWAET	enum(int,int)
)	O
;	O
}	O
if	O
(	O
miInsertionSort	O
(	O
&	O
AET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
)	O
||	O
fixWAET	enum(int,int)
)	O
{	O
micomputeWAET	O
(	O
&	O
AET	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
)	O
;	O
fixWAET	enum(int,int)
=	O
false	int
;	O
}	O
}	O
}	O
MI_COPY_AND_PAINT_SPANS	O
(	O
paintedSet	*(struct)
,	O
pGC	*(struct)
->	O
pixels	*(struct(char,union(char,array(char))))
[	O
1	int
]	O
,	O
nPts	int
,	O
FirstPoint	array(struct(int,int))
,	O
FirstWidth	array(int)
)	O
free	(*(void))->(void)
(	O
pETEs	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),*(struct(int,struct(int,int,int,int,int,int),*(struct`),*(struct`),*(struct`),enum(int,int))),enum(int,int)))
)	O
;	O
miFreeStorage	O
(	O
SLLBlock	struct(array(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,*`,*`)))))),*(struct(array(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,*`,*`)))))),*(struct(array(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,struct`,*`,*`,*`,enum(int,int))),enum(int,int))),*(struct(int,*(struct(int,struct`,*`,*`,*`,enum(int,int))),*(struct(int,*`,*`)))))),*`)))))
.	O
next	*(struct(*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
)	O
;	O
}	O
