void	O
sexp_output_init	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),int,int)->(void)
(	O
struct	O
sexp_output	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int)))),int,int,*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void)))),*(void),struct(*(char),short,char,char),int,int)
*	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
FILE	struct
*	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
unsigned	O
width	int
,	O
int	O
prefer_hex	int
)	O
{	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
line_width	int
=	O
width	int
;	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
coding	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
=	O
NULL	O
;	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
prefer_hex	int
=	O
prefer_hex	int
;	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
=	O
NULL	O
;	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
ctx	*(void)
=	O
NULL	O
;	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
pos	int
=	O
0	int
;	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
soft_newline	int
=	O
0	int
;	O
}	O
void	O
sexp_output_hash_init	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void))->(void)
(	O
struct	O
sexp_output	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int)))),int,int,*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void)))),*(void),struct(*(char),short,char,char),int,int)
*	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
const	O
struct	O
nettle_hash	struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void)))
*	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
,	O
void	O
*	O
ctx	*(void)
)	O
{	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
=	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
;	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
ctx	*(void)
=	O
ctx	*(void)
;	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
init	*((*(void))->(void))
(	O
ctx	*(void)
)	O
;	O
}	O
static	O
void	O
sexp_put_raw_char	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),char)->(void)
(	O
struct	O
sexp_output	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int)))),int,int,*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void)))),*(void),struct(*(char),short,char,char),int,int)
*	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
uint8_t	char
c	int
)	O
{	O
if	O
(	O
putc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
c	int
,	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
<	O
0	int
)	O
die	(*(char))->(void)
(	O
"Write failed: %s\n"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
pos	int
++	O
;	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
soft_newline	int
=	O
0	int
;	O
}	O
void	O
sexp_put_newline	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),int)->(void)
(	O
struct	O
sexp_output	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int)))),int,int,*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void)))),*(void),struct(*(char),short,char,char),int,int)
*	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
unsigned	O
indent	int
)	O
{	O
if	O
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
soft_newline	int
)	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
soft_newline	int
=	O
0	int
;	O
else	O
{	O
unsigned	O
i	int
;	O
sexp_put_raw_char	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),char)->(void)
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
'\n'	O
)	O
;	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
pos	int
=	O
0	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
indent	int
;	O
i	int
++	O
)	O
sexp_put_raw_char	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),char)->(void)
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
' '	O
)	O
;	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
pos	int
=	O
indent	int
;	O
}	O
}	O
void	O
sexp_put_soft_newline	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),int)->(void)
(	O
struct	O
sexp_output	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int)))),int,int,*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void)))),*(void),struct(*(char),short,char,char),int,int)
*	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
unsigned	O
indent	int
)	O
{	O
sexp_put_newline	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),int)->(void)
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
indent	int
)	O
;	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
soft_newline	int
=	O
1	int
;	O
}	O
void	O
sexp_put_char	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),char)->(void)
(	O
struct	O
sexp_output	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int)))),int,int,*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void)))),*(void),struct(*(char),short,char,char),int,int)
*	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
uint8_t	char
c	int
)	O
{	O
if	O
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
coding	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
)	O
{	O
char	O
encoded	array(char)
[	O
2	int
]	O
;	O
unsigned	O
done	int
;	O
unsigned	O
i	int
;	O
done	int
=	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
coding	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
->	O
encode_update	*((*(void),*(char),long,*(char))->(long))
(	O
&	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
base64	struct(*(char),short,char,char)
,	O
encoded	array(char)
,	O
1	int
,	O
&	O
c	int
)	O
;	O
assert	O
(	O
done	int
<=	O
sizeof	O
(	O
encoded	array(char)
)	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
done	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
line_width	int
&&	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
pos	int
>=	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
line_width	int
&&	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
pos	int
>=	O
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
coding_indent	int
+	O
10	int
)	O
)	O
sexp_put_newline	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),int)->(void)
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
coding_indent	int
)	O
;	O
sexp_put_raw_char	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),char)->(void)
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
encoded	array(char)
[	O
i	int
]	O
)	O
;	O
}	O
}	O
else	O
if	O
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
)	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
update	*((*(void),long,*(char))->(void))
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
ctx	*(void)
,	O
1	int
,	O
&	O
c	int
)	O
;	O
else	O
sexp_put_raw_char	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),char)->(void)
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
c	int
)	O
;	O
}	O
void	O
sexp_put_data	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),int,*(char))->(void)
(	O
struct	O
sexp_output	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int)))),int,int,*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void)))),*(void),struct(*(char),short,char,char),int,int)
*	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
unsigned	O
length	long
,	O
const	O
uint8_t	char
*	O
data	*(char)
)	O
{	O
unsigned	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
length	long
;	O
i	int
++	O
)	O
sexp_put_char	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),char)->(void)
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
data	*(char)
[	O
i	int
]	O
)	O
;	O
}	O
static	O
void	O
sexp_put_length	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),int)->(void)
(	O
struct	O
sexp_output	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int)))),int,int,*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void)))),*(void),struct(*(char),short,char,char),int,int)
*	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
unsigned	O
length	long
)	O
{	O
unsigned	O
digit	int
=	O
1	int
;	O
for	O
(	O
;	O
;	O
)	O
{	O
unsigned	O
next	int
=	O
digit	int
*	O
10	int
;	O
if	O
(	O
next	int
>	O
length	long
)	O
break	O
;	O
digit	int
=	O
next	int
;	O
}	O
for	O
(	O
;	O
digit	int
;	O
length	long
%=	O
digit	int
,	O
digit	int
/=	O
10	int
)	O
sexp_put_char	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),char)->(void)
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
'0'	O
+	O
length	long
/	O
digit	int
)	O
;	O
}	O
void	O
sexp_put_code_start	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))))->(void)
(	O
struct	O
sexp_output	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int)))),int,int,*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void)))),*(void),struct(*(char),short,char,char),int,int)
*	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
const	O
struct	O
nettle_armor	struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int)))
*	O
coding	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
)	O
{	O
assert	O
(	O
!	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
coding	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
)	O
;	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
coding_indent	int
=	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
pos	int
;	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
coding	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
=	O
coding	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
;	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
coding	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
->	O
encode_init	*((*(void))->(void))
(	O
&	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
base64	struct(*(char),short,char,char)
)	O
;	O
}	O
void	O
sexp_put_code_end	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)))->(void)
(	O
struct	O
sexp_output	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int)))),int,int,*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void)))),*(void),struct(*(char),short,char,char),int,int)
*	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
)	O
{	O
char	O
encoded	array(char)
[	O
BASE64_ENCODE_FINAL_LENGTH	int
]	O
;	O
unsigned	O
done	int
;	O
assert	O
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
coding	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
)	O
;	O
done	int
=	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
coding	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
->	O
encode_final	*((*(void),*(char))->(long))
(	O
&	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
base64	struct(*(char),short,char,char)
,	O
encoded	array(char)
)	O
;	O
assert	O
(	O
done	int
<=	O
sizeof	O
(	O
encoded	array(char)
)	O
)	O
;	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
coding	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
=	O
NULL	O
;	O
sexp_put_data	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),int,*(char))->(void)
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
done	int
,	O
(	O
const	O
uint8_t	char
*	O
)	O
encoded	array(char)
)	O
;	O
}	O
void	O
sexp_put_string	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),enum(int,int,int),*(struct(*(char),long,*(void),*((*`,*`,long)->(*`)),long)))->(void)
(	O
struct	O
sexp_output	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int)))),int,int,*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void)))),*(void),struct(*(char),short,char,char),int,int)
*	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
enum	O
sexp_mode	enum(int,int,int)
mode	enum(int,int,int)
,	O
struct	O
nettle_buffer	struct(*(char),long,*(void),*((*(void),*(void),long)->(*(void))),long)
*	O
string	*(struct(*(char),long,*(void),*((*(void),*(void),long)->(*(void))),long))
)	O
{	O
if	O
(	O
!	O
string	*(struct(*(char),long,*(void),*((*(void),*(void),long)->(*(void))),long))
->	O
size	long
)	O
sexp_put_data	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),int,*(char))->(void)
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
2	int
,	O
(	O
const	O
uint8_t	char
*	O
)	O
(	O
(	O
mode	enum(int,int,int)
==	O
SEXP_ADVANCED	int
)	O
?	O
"\"\""	*(char)
:	O
"0:"	*(char)
)	O
)	O
;	O
else	O
if	O
(	O
mode	enum(int,int,int)
==	O
SEXP_ADVANCED	int
)	O
{	O
unsigned	O
i	int
;	O
int	O
token	int
=	O
(	O
string	*(struct(*(char),long,*(void),*((*(void),*(void),long)->(*(void))),long))
->	O
contents	*(char)
[	O
0	int
]	O
<	O
'0'	O
||	O
string	*(struct(*(char),long,*(void),*((*(void),*(void),long)->(*(void))),long))
->	O
contents	*(char)
[	O
0	int
]	O
>	O
'9'	O
)	O
;	O
int	O
quote_friendly	int
=	O
1	int
;	O
static	O
const	O
char	O
escape_names	array(char)
[	O
CONTROL_SIZE	int
]	O
=	O
{	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
'b'	O
,	O
't'	O
,	O
'n'	O
,	O
0	int
,	O
'f'	O
,	O
'r'	O
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
}	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
string	*(struct(*(char),long,*(void),*((*(void),*(void),long)->(*(void))),long))
->	O
size	long
;	O
i	int
++	O
)	O
{	O
uint8_t	char
c	int
=	O
string	*(struct(*(char),long,*(void),*((*(void),*(void),long)->(*(void))),long))
->	O
contents	*(char)
[	O
i	int
]	O
;	O
if	O
(	O
token	int
&	O
!	O
TOKEN_CHAR	O
(	O
c	int
)	O
)	O
token	int
=	O
0	int
;	O
if	O
(	O
quote_friendly	int
)	O
{	O
if	O
(	O
c	int
>=	O
0x7f	int
)	O
quote_friendly	int
=	O
0	int
;	O
else	O
if	O
(	O
c	int
<	O
CONTROL_SIZE	int
&&	O
!	O
escape_names	array(char)
[	O
c	int
]	O
)	O
quote_friendly	int
=	O
0	int
;	O
}	O
}	O
if	O
(	O
token	int
)	O
sexp_put_data	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),int,*(char))->(void)
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
string	*(struct(*(char),long,*(void),*((*(void),*(void),long)->(*(void))),long))
->	O
size	long
,	O
string	*(struct(*(char),long,*(void),*((*(void),*(void),long)->(*(void))),long))
->	O
contents	*(char)
)	O
;	O
else	O
if	O
(	O
quote_friendly	int
)	O
{	O
sexp_put_char	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),char)->(void)
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
'"'	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
string	*(struct(*(char),long,*(void),*((*(void),*(void),long)->(*(void))),long))
->	O
size	long
;	O
i	int
++	O
)	O
{	O
int	O
escape	int
=	O
0	int
;	O
uint8_t	char
c	int
=	O
string	*(struct(*(char),long,*(void),*((*(void),*(void),long)->(*(void))),long))
->	O
contents	*(char)
[	O
i	int
]	O
;	O
assert	O
(	O
c	int
<	O
0x7f	int
)	O
;	O
if	O
(	O
c	int
==	O
'\\'	O
||	O
c	int
==	O
'"'	O
)	O
escape	int
=	O
1	int
;	O
else	O
if	O
(	O
c	int
<	O
CONTROL_SIZE	int
)	O
{	O
escape	int
=	O
1	int
;	O
c	int
=	O
escape_names	array(char)
[	O
c	int
]	O
;	O
assert	O
(	O
c	int
)	O
;	O
}	O
if	O
(	O
escape	int
)	O
sexp_put_char	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),char)->(void)
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
'\\'	O
)	O
;	O
sexp_put_char	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),char)->(void)
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
c	int
)	O
;	O
}	O
sexp_put_char	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),char)->(void)
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
'"'	O
)	O
;	O
}	O
else	O
{	O
uint8_t	char
delimiter	char
;	O
const	O
struct	O
nettle_armor	struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int)))
*	O
coding	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
;	O
if	O
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
prefer_hex	int
)	O
{	O
delimiter	char
=	O
'#'	O
;	O
coding	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
=	O
&	O
nettle_base16	struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int)))
;	O
}	O
else	O
{	O
delimiter	char
=	O
'|'	O
;	O
coding	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
=	O
&	O
nettle_base64	struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int)))
;	O
}	O
sexp_put_char	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),char)->(void)
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
delimiter	char
)	O
;	O
sexp_put_code_start	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))))->(void)
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
coding	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
)	O
;	O
sexp_put_data	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),int,*(char))->(void)
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
string	*(struct(*(char),long,*(void),*((*(void),*(void),long)->(*(void))),long))
->	O
size	long
,	O
string	*(struct(*(char),long,*(void),*((*(void),*(void),long)->(*(void))),long))
->	O
contents	*(char)
)	O
;	O
sexp_put_code_end	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)))->(void)
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
)	O
;	O
sexp_put_char	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),char)->(void)
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
delimiter	char
)	O
;	O
}	O
}	O
else	O
{	O
sexp_put_length	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),int)->(void)
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
string	*(struct(*(char),long,*(void),*((*(void),*(void),long)->(*(void))),long))
->	O
size	long
)	O
;	O
sexp_put_char	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),char)->(void)
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
':'	O
)	O
;	O
sexp_put_data	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),int,*(char))->(void)
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
string	*(struct(*(char),long,*(void),*((*(void),*(void),long)->(*(void))),long))
->	O
size	long
,	O
string	*(struct(*(char),long,*(void),*((*(void),*(void),long)->(*(void))),long))
->	O
contents	*(char)
)	O
;	O
}	O
}	O
void	O
sexp_put_digest	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)))->(void)
(	O
struct	O
sexp_output	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int)))),int,int,*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void)))),*(void),struct(*(char),short,char,char),int,int)
*	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
)	O
{	O
TMP_DECL	O
(	O
digest	*((*(void),long,*(char))->(void))
,	O
uint8_t	char
,	O
NETTLE_MAX_HASH_DIGEST_SIZE	O
)	O
;	O
TMP_ALLOC	O
(	O
digest	*((*(void),long,*(char))->(void))
,	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest_size	int
)	O
;	O
assert	O
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
)	O
;	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest	*((*(void),long,*(char))->(void))
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
ctx	*(void)
,	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest_size	int
,	O
digest	*((*(void),long,*(char))->(void))
)	O
;	O
sexp_put_code_start	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))))->(void)
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
&	O
nettle_base16	struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int)))
)	O
;	O
sexp_put_data	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)),int,*(char))->(void)
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
,	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
->	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest_size	int
,	O
digest	*((*(void),long,*(char))->(void))
)	O
;	O
sexp_put_code_end	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,*(struct(*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,int,*(struct(*`,int,int,int,*`,*`,*`)),*(void),struct(*(char),short,char,char),int,int)))->(void)
(	O
output	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),int,int,*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(void),struct(*(char),short,char,char),int,int))
)	O
;	O
}	O
