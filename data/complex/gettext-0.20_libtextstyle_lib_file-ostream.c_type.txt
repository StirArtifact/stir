const	O
typeinfo_t	O
file_ostream_typeinfo	O
=	O
{	O
"file_ostream"	*(char)
}	O
;	O
static	O
const	O
typeinfo_t	O
*	O
const	O
file_ostream_superclasses	array(*(int))
[	O
]	O
=	O
{	O
file_ostream_SUPERCLASSES	O
}	O
;	O
static	O
inline	O
int	O
nonintr_tcdrain	(int)->(int)
(	O
int	O
fd	int
)	O
{	O
int	O
retval	int
;	O
do	O
retval	int
=	O
tcdrain	()->(int)
(	O
fd	int
)	O
;	O
while	O
(	O
retval	int
<	O
0	int
&&	O
errno	O
==	O
EINTR	O
)	O
;	O
return	O
retval	int
;	O
}	O
static	O
void	O
file_ostream__write_mem	(int,*(void),int)->(void)
(	O
file_ostream_t	O
stream	int
,	O
const	O
void	O
*	O
data	*(void)
,	O
size_t	O
len	int
)	O
{	O
if	O
(	O
len	int
>	O
0	int
)	O
fwrite	()->(int)
(	O
data	*(void)
,	O
1	int
,	O
len	int
,	O
stream	int
->	O
fp	*(int)
)	O
;	O
}	O
static	O
void	O
file_ostream__flush	(int,int)->(void)
(	O
file_ostream_t	O
stream	int
,	O
ostream_flush_scope_t	O
scope	int
)	O
{	O
if	O
(	O
scope	int
!=	O
FLUSH_THIS_STREAM	O
)	O
{	O
fflush	()->(int)
(	O
stream	int
->	O
fp	*(int)
)	O
;	O
if	O
(	O
scope	int
==	O
FLUSH_ALL	O
)	O
{	O
int	O
fd	int
=	O
fileno	()->(int)
(	O
stream	int
->	O
fp	*(int)
)	O
;	O
if	O
(	O
fd	int
>=	O
0	int
)	O
{	O
fsync	()->(int)
(	O
fd	int
)	O
;	O
nonintr_tcdrain	(int)->(int)
(	O
fd	int
)	O
;	O
}	O
}	O
}	O
}	O
static	O
void	O
file_ostream__free	(int)->(void)
(	O
file_ostream_t	O
stream	int
)	O
{	O
free	()->(int)
(	O
stream	int
)	O
;	O
}	O
file_ostream_t	O
file_ostream_create	(*(int))->(int)
(	O
FILE	O
*	O
fp	*(int)
)	O
{	O
file_ostream_t	O
stream	int
=	O
XMALLOC	O
(	O
struct	O
file_ostream_representation	O
)	O
;	O
stream	int
->	O
base	O
.	O
vtable	*(struct)
=	O
&	O
file_ostream_vtable	O
;	O
stream	int
->	O
fp	*(int)
=	O
fp	*(int)
;	O
return	O
stream	int
;	O
}	O
const	O
struct	O
file_ostream_implementation	O
file_ostream_vtable	O
=	O
{	O
file_ostream_superclasses	array(*(int))
,	O
sizeof	O
(	O
file_ostream_superclasses	array(*(int))
)	O
/	O
sizeof	O
(	O
file_ostream_superclasses	array(*(int))
[	O
0	int
]	O
)	O
,	O
sizeof	O
(	O
struct	O
file_ostream_representation	O
)	O
,	O
file_ostream__write_mem	(int,*(void),int)->(void)
,	O
file_ostream__flush	(int,int)->(void)
,	O
file_ostream__free	(int)->(void)
,	O
}	O
;	O
void	O
file_ostream_write_mem	(int,*(void),int)->(void)
(	O
file_ostream_t	O
first_arg	int
,	O
const	O
void	O
*	O
data	*(void)
,	O
size_t	O
len	int
)	O
{	O
const	O
struct	O
file_ostream_implementation	O
*	O
vtable	*(struct)
=	O
(	O
(	O
struct	O
file_ostream_representation_header	O
*	O
)	O
(	O
struct	O
file_ostream_representation	O
*	O
)	O
first_arg	int
)	O
->	O
vtable	*(struct)
;	O
vtable	*(struct)
->	O
write_mem	O
(	O
first_arg	int
,	O
data	*(void)
,	O
len	int
)	O
;	O
}	O
void	O
file_ostream_flush	(int,int)->(void)
(	O
file_ostream_t	O
first_arg	int
,	O
ostream_flush_scope_t	O
scope	int
)	O
{	O
const	O
struct	O
file_ostream_implementation	O
*	O
vtable	*(struct)
=	O
(	O
(	O
struct	O
file_ostream_representation_header	O
*	O
)	O
(	O
struct	O
file_ostream_representation	O
*	O
)	O
first_arg	int
)	O
->	O
vtable	*(struct)
;	O
vtable	*(struct)
->	O
flush	O
(	O
first_arg	int
,	O
scope	int
)	O
;	O
}	O
void	O
file_ostream_free	(int)->(void)
(	O
file_ostream_t	O
first_arg	int
)	O
{	O
const	O
struct	O
file_ostream_implementation	O
*	O
vtable	*(struct)
=	O
(	O
(	O
struct	O
file_ostream_representation_header	O
*	O
)	O
(	O
struct	O
file_ostream_representation	O
*	O
)	O
first_arg	int
)	O
->	O
vtable	*(struct)
;	O
vtable	*(struct)
->	O
free	()->(int)
(	O
first_arg	int
)	O
;	O
}	O
