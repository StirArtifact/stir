struct	O
_pop3_message	struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct))
{	O
int	O
flags	int
;	O
mu_off_t	long
offset	long
;	O
mu_off_t	long
body_start	long
;	O
mu_off_t	long
body_end	long
;	O
size_t	long
header_lines	long
;	O
size_t	long
body_lines	long
;	O
int	O
attr_flags	int
;	O
size_t	long
message_size	long
;	O
size_t	long
message_lines	long
;	O
size_t	long
num	long
;	O
char	O
*	O
uidl	array(char)
;	O
mu_message_t	*(struct)
message	*(struct)
;	O
struct	O
_pop3_mailbox	struct(*(struct),int,int,long,long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`))))),long,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))),*(struct),*(char),*(struct))
*	O
mpd	*(struct)
;	O
}	O
;	O
struct	O
_pop3_mailbox	struct(*(struct),int,int,long,long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`))))),long,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))),*(struct),*(char),*(struct))
{	O
mu_pop3_t	*(struct)
pop3	*(*(struct))
;	O
int	O
pops	int
;	O
int	O
is_updated	int
;	O
size_t	long
msg_count	long
;	O
mu_off_t	long
total_size	long
;	O
struct	O
_pop3_message	struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct))
*	O
*	O
msg	*(struct)
;	O
size_t	long
msg_max	long
;	O
mu_mailbox_t	*(struct)
mbox	*(struct)
;	O
mu_stream_t	*(struct)
cache	*(struct)
;	O
char	O
*	O
user	*(char)
;	O
mu_secret_t	*(struct)
secret	*(struct)
;	O
}	O
;	O
static	O
int	O
pop_create_pop3_message	(*(struct(*(struct),int,int,long,long,*(*(struct`)),long,*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(char),*(struct))),long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct`),*(struct`)))))->(int)
(	O
struct	O
_pop3_mailbox	struct(*(struct),int,int,long,long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`))))),long,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))),*(struct),*(char),*(struct))
*	O
mpd	*(struct)
,	O
size_t	long
msgno	long
,	O
struct	O
_pop3_message	struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct))
*	O
*	O
mptr	*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`)))))
)	O
;	O
static	O
int	O
pop_open	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),int)->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
int	O
flags	int
)	O
{	O
struct	O
_pop3_mailbox	struct(*(struct),int,int,long,long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`))))),long,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))),*(struct),*(char),*(struct))
*	O
mpd	*(struct)
=	O
mbox	*(struct)
->	O
data	*(void)
;	O
int	O
status	int
;	O
mu_stream_t	*(struct)
stream	*(struct)
;	O
struct	O
mu_sockaddr	struct(*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,*(char))),*(struct(*(struct`),*(struct`),*(struct`),int,*(char))),*(struct(short,array(char))),int,*(char))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),int,*(char))),*(struct(*(struct`),*(struct`),*(struct`),int,*(char))),*(struct(short,array(char))),int,*(char))),*(struct(short,array(char))),int,*(char))
*	O
sa	*(struct(short,array(char)))
;	O
struct	O
mu_sockaddr_hints	struct(int,int,int,int,short)
hints	*(struct)
;	O
if	O
(	O
mpd	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
mbox	*(struct)
->	O
flags	int
=	O
flags	int
;	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
hints	*(struct)
,	O
0	int
,	O
sizeof	O
(	O
hints	*(struct)
)	O
)	O
;	O
hints	*(struct)
.	O
flags	int
=	O
MU_AH_DETECT_FAMILY	int
;	O
hints	*(struct)
.	O
port	int
=	O
mpd	*(struct)
->	O
pops	int
?	O
MU_POPS_PORT	int
:	O
MU_POP_PORT	int
;	O
hints	*(struct)
.	O
protocol	int
=	O
IPPROTO_TCP	int
;	O
hints	*(struct)
.	O
socktype	int
=	O
SOCK_STREAM	int
;	O
status	int
=	O
mu_sockaddr_from_url	(*(*(struct(*(struct`),*(struct`),*(struct`),int,*(char)))),*(struct),*(struct(int,int,int,int,short)))->(int)
(	O
&	O
sa	*(struct(short,array(char)))
,	O
mbox	*(struct)
->	O
url	*(struct)
,	O
&	O
hints	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
mu_tcp_stream_create_from_sa	(*(*(struct)),*(struct),*(struct),int)->(int)
(	O
&	O
stream	*(struct)
,	O
sa	*(struct(short,array(char)))
,	O
NULL	O
,	O
mbox	*(struct)
->	O
flags	int
)	O
;	O
if	O
(	O
status	int
)	O
{	O
mu_sockaddr_free	(*(struct(*(struct(*`,*`,*`,int,*`)),*(struct(*`,*`,*`,int,*`)),*(struct(short,array(char))),int,*(char))))->(void)
(	O
sa	*(struct(short,array(char)))
)	O
;	O
return	O
status	int
;	O
}	O
mu_stream_set_buffer	(*(struct),enum(int,int,int),long)->(int)
(	O
stream	*(struct)
,	O
mu_buffer_line	int
,	O
0	int
)	O
;	O
status	int
=	O
mu_pop3_create	(*(*(struct)))->(int)
(	O
&	O
mpd	*(struct)
->	O
pop3	*(*(struct))
)	O
;	O
if	O
(	O
status	int
)	O
{	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
stream	*(struct)
)	O
;	O
return	O
status	int
;	O
}	O
mu_pop3_set_carrier	(*(struct),*(struct))->(int)
(	O
mpd	*(struct)
->	O
pop3	*(*(struct))
,	O
stream	*(struct)
)	O
;	O
if	O
(	O
mu_debug_level_p	(int,int)->(int)
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_PROT	int
)	O
)	O
mu_pop3_trace	(*(struct),int)->(int)
(	O
mpd	*(struct)
->	O
pop3	*(*(struct))
,	O
MU_POP3_TRACE_SET	int
)	O
;	O
if	O
(	O
mu_debug_level_p	(int,int)->(int)
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_TRACE6	int
)	O
)	O
mu_pop3_trace_mask	(*(struct),int,int)->(int)
(	O
mpd	*(struct)
->	O
pop3	*(*(struct))
,	O
MU_POP3_TRACE_SET	int
,	O
MU_XSCRIPT_SECURE	int
)	O
;	O
if	O
(	O
mu_debug_level_p	(int,int)->(int)
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_TRACE7	int
)	O
)	O
mu_pop3_trace_mask	(*(struct),int,int)->(int)
(	O
mpd	*(struct)
->	O
pop3	*(*(struct))
,	O
MU_POP3_TRACE_SET	int
,	O
MU_XSCRIPT_PAYLOAD	int
)	O
;	O
do	O
{	O
status	int
=	O
mu_pop3_connect	(*(struct))->(int)
(	O
mpd	*(struct)
->	O
pop3	*(*(struct))
)	O
;	O
if	O
(	O
status	int
)	O
break	O
;	O
status	int
=	O
mu_pop3_capa	(*(struct),int,*(*(struct)))->(int)
(	O
mpd	*(struct)
->	O
pop3	*(*(struct))
,	O
1	int
,	O
NULL	O
)	O
;	O
if	O
(	O
status	int
==	O
MU_ERR_REPLY	O
)	O
{	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_ERROR	int
,	O
(	O
"server rejected the CAPA command: %s"	*(char)
,	O
mu_pop3_strresp	(*(struct))->(*(char))
(	O
mpd	*(struct)
->	O
pop3	*(*(struct))
)	O
)	O
)	O
;	O
}	O
else	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
mu_authority_authenticate	(*(struct))->(int)
(	O
mbox	*(struct)
->	O
folder	*(struct)
->	O
authority	*(struct)
)	O
;	O
}	O
while	O
(	O
0	int
)	O
;	O
if	O
(	O
status	int
)	O
mu_pop3_destroy	(*(*(struct)))->(void)
(	O
&	O
mpd	*(struct)
->	O
pop3	*(*(struct))
)	O
;	O
return	O
status	int
;	O
}	O
static	O
int	O
pop_close	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
)	O
{	O
struct	O
_pop3_mailbox	struct(*(struct),int,int,long,long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`))))),long,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))),*(struct),*(char),*(struct))
*	O
mpd	*(struct)
=	O
mbox	*(struct)
->	O
data	*(void)
;	O
int	O
status	int
;	O
status	int
=	O
mu_pop3_quit	(*(struct))->(int)
(	O
mpd	*(struct)
->	O
pop3	*(*(struct))
)	O
;	O
if	O
(	O
status	int
)	O
mu_error	(*(char))->(int)
(	O
"mu_pop3_quit failed: %s"	*(char)
,	O
mu_strerror	(int)->(*(char))
(	O
status	int
)	O
)	O
;	O
status	int
=	O
mu_pop3_disconnect	(*(struct))->(int)
(	O
mpd	*(struct)
->	O
pop3	*(*(struct))
)	O
;	O
if	O
(	O
status	int
)	O
mu_error	(*(char))->(int)
(	O
"mu_pop3_disconnect failed: %s"	*(char)
,	O
mu_strerror	(int)->(*(char))
(	O
status	int
)	O
)	O
;	O
if	O
(	O
mpd	*(struct)
->	O
msg	*(struct)
)	O
{	O
size_t	long
i	long
;	O
mu_monitor_wrlock	(*(struct(*(void),*(void),int,int)))->(int)
(	O
mbox	*(struct)
->	O
monitor	*(struct(*(void),*(void),int,int))
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
mpd	*(struct)
->	O
msg_count	long
;	O
i	long
++	O
)	O
{	O
if	O
(	O
mpd	*(struct)
->	O
msg	*(struct)
[	O
i	long
]	O
)	O
{	O
mu_message_destroy	(*(*(struct)),*(void))->(void)
(	O
&	O
mpd	*(struct)
->	O
msg	*(struct)
[	O
i	long
]	O
->	O
message	*(struct)
,	O
mpd	*(struct)
->	O
msg	*(struct)
[	O
i	long
]	O
)	O
;	O
if	O
(	O
mpd	*(struct)
->	O
msg	*(struct)
[	O
i	long
]	O
->	O
uidl	array(char)
)	O
free	(*(void))->(void)
(	O
mpd	*(struct)
->	O
msg	*(struct)
[	O
i	long
]	O
->	O
uidl	array(char)
)	O
;	O
free	(*(void))->(void)
(	O
mpd	*(struct)
->	O
msg	*(struct)
[	O
i	long
]	O
)	O
;	O
}	O
}	O
mu_monitor_unlock	(*(struct(*(void),*(void),int,int)))->(int)
(	O
mbox	*(struct)
->	O
monitor	*(struct(*(void),*(void),int,int))
)	O
;	O
}	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
mpd	*(struct)
->	O
cache	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
static	O
void	O
pop_destroy	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(void)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
)	O
{	O
struct	O
_pop3_mailbox	struct(*(struct),int,int,long,long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`))))),long,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))),*(struct),*(char),*(struct))
*	O
mpd	*(struct)
=	O
mbox	*(struct)
->	O
data	*(void)
;	O
if	O
(	O
mpd	*(struct)
)	O
{	O
mu_pop3_destroy	(*(*(struct)))->(void)
(	O
&	O
mpd	*(struct)
->	O
pop3	*(*(struct))
)	O
;	O
if	O
(	O
mpd	*(struct)
->	O
user	*(char)
)	O
free	(*(void))->(void)
(	O
mpd	*(struct)
->	O
user	*(char)
)	O
;	O
if	O
(	O
mpd	*(struct)
->	O
secret	*(struct)
)	O
mu_secret_unref	(*(struct))->(int)
(	O
mpd	*(struct)
->	O
secret	*(struct)
)	O
;	O
}	O
}	O
static	O
int	O
pop_is_updated	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
)	O
{	O
struct	O
_pop3_mailbox	struct(*(struct),int,int,long,long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`))))),long,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))),*(struct),*(char),*(struct))
*	O
mpd	*(struct)
=	O
mbox	*(struct)
->	O
data	*(void)
;	O
if	O
(	O
mpd	*(struct)
==	O
NULL	O
)	O
return	O
0	int
;	O
return	O
mpd	*(struct)
->	O
is_updated	int
;	O
}	O
static	O
int	O
pop_messages_count	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
size_t	long
*	O
pcount	*(long)
)	O
{	O
struct	O
_pop3_mailbox	struct(*(struct),int,int,long,long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`))))),long,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))),*(struct),*(char),*(struct))
*	O
mpd	*(struct)
=	O
mbox	*(struct)
->	O
data	*(void)
;	O
int	O
status	int
;	O
if	O
(	O
mpd	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
pop_is_updated	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mbox	*(struct)
)	O
)	O
{	O
if	O
(	O
pcount	*(long)
)	O
*	O
pcount	*(long)
=	O
mpd	*(struct)
->	O
msg_count	long
;	O
return	O
0	int
;	O
}	O
status	int
=	O
mu_pop3_stat	(*(struct),*(long),*(long))->(int)
(	O
mpd	*(struct)
->	O
pop3	*(*(struct))
,	O
&	O
mpd	*(struct)
->	O
msg_count	long
,	O
&	O
mpd	*(struct)
->	O
total_size	long
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
if	O
(	O
pcount	*(long)
)	O
*	O
pcount	*(long)
=	O
mpd	*(struct)
->	O
msg_count	long
;	O
mpd	*(struct)
->	O
is_updated	int
=	O
1	int
;	O
}	O
return	O
status	int
;	O
}	O
static	O
int	O
pop_scan	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(long))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
size_t	long
msgno	long
,	O
size_t	long
*	O
pcount	*(long)
)	O
{	O
int	O
status	int
;	O
size_t	long
i	long
;	O
size_t	long
count	long
=	O
0	int
;	O
struct	O
_pop3_mailbox	struct(*(struct),int,int,long,long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`))))),long,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))),*(struct),*(char),*(struct))
*	O
mpd	*(struct)
=	O
mbox	*(struct)
->	O
data	*(void)
;	O
int	O
flags	int
;	O
mu_iterator_t	*(struct)
itr	*(struct)
;	O
status	int
=	O
pop_messages_count	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
(	O
mbox	*(struct)
,	O
&	O
count	long
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
return	O
status	int
;	O
if	O
(	O
pcount	*(long)
)	O
*	O
pcount	*(long)
=	O
count	long
;	O
flags	int
=	O
_POP3_MSG_SIZE	int
;	O
if	O
(	O
!	O
mu_pop3_capa_test	(*(struct),*(char),*(*(char)))->(int)
(	O
mpd	*(struct)
->	O
pop3	*(*(struct))
,	O
"XLINES"	*(char)
,	O
NULL	O
)	O
)	O
flags	int
|=	O
_POP3_MSG_LINES	int
;	O
status	int
=	O
mu_pop3_list_all	(*(struct),*(*(struct)))->(int)
(	O
mpd	*(struct)
->	O
pop3	*(*(struct))
,	O
&	O
itr	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
for	O
(	O
i	long
=	O
0	int
,	O
mu_iterator_first	(*(struct))->(int)
(	O
itr	*(struct)
)	O
;	O
i	long
<=	O
count	long
&&	O
!	O
mu_iterator_is_done	(*(struct))->(int)
(	O
itr	*(struct)
)	O
;	O
i	long
++	O
,	O
mu_iterator_next	(*(struct))->(int)
(	O
itr	*(struct)
)	O
)	O
{	O
const	O
char	O
*	O
str	*(char)
;	O
char	O
*	O
p	*(char)
;	O
size_t	long
num	long
;	O
mu_iterator_current	(*(struct),*(*(void)))->(int)
(	O
itr	*(struct)
,	O
(	O
void	O
*	O
*	O
)	O
&	O
str	*(char)
)	O
;	O
num	long
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
str	*(char)
,	O
&	O
p	*(char)
,	O
10	int
)	O
;	O
if	O
(	O
*	O
p	*(char)
!=	O
' '	O
)	O
{	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_ERROR	int
,	O
(	O
"invalid reply to LIST command: %s"	*(char)
,	O
str	*(char)
)	O
)	O
;	O
status	int
=	O
MU_ERR_BADREPLY	O
;	O
break	O
;	O
}	O
if	O
(	O
num	long
>=	O
msgno	long
)	O
{	O
size_t	long
size	long
,	O
lines	int
;	O
struct	O
_pop3_message	struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct))
*	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
;	O
size	long
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
p	*(char)
+	O
1	int
,	O
&	O
p	*(char)
,	O
10	int
)	O
;	O
if	O
(	O
flags	int
&	O
_POP3_MSG_LINES	int
)	O
{	O
if	O
(	O
*	O
p	*(char)
!=	O
' '	O
)	O
{	O
mu_debug	O
(	O
MU_DEBCAT_MAILBOX	int
,	O
MU_DEBUG_ERROR	int
,	O
(	O
"invalid reply to LIST command: %s"	*(char)
,	O
str	*(char)
)	O
)	O
;	O
status	int
=	O
MU_ERR_BADREPLY	O
;	O
break	O
;	O
}	O
lines	int
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
p	*(char)
+	O
1	int
,	O
&	O
p	*(char)
,	O
10	int
)	O
;	O
}	O
status	int
=	O
pop_create_pop3_message	(*(struct(*(struct),int,int,long,long,*(*(struct`)),long,*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(char),*(struct))),long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct`),*(struct`)))))->(int)
(	O
mpd	*(struct)
,	O
num	long
,	O
&	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
;	O
if	O
(	O
status	int
)	O
break	O
;	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
message_size	long
=	O
size	long
;	O
if	O
(	O
flags	int
&	O
_POP3_MSG_LINES	int
)	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
message_lines	long
=	O
lines	int
;	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
flags	int
|=	O
flags	int
;	O
if	O
(	O
mbox	*(struct)
->	O
observable	*(struct)
)	O
{	O
if	O
(	O
(	O
(	O
i	long
+	O
1	int
)	O
%	O
10	int
)	O
==	O
0	int
)	O
mu_observable_notify	(*(struct),int,*(void))->(int)
(	O
mbox	*(struct)
->	O
observable	*(struct)
,	O
MU_EVT_MAILBOX_PROGRESS	int
,	O
NULL	O
)	O
;	O
}	O
}	O
}	O
mu_iterator_destroy	(*(*(struct)))->(void)
(	O
&	O
itr	*(struct)
)	O
;	O
if	O
(	O
mbox	*(struct)
->	O
observable	*(struct)
)	O
{	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<=	O
count	long
;	O
i	long
++	O
)	O
{	O
if	O
(	O
mu_observable_notify	(*(struct),int,*(void))->(int)
(	O
mbox	*(struct)
->	O
observable	*(struct)
,	O
MU_EVT_MESSAGE_ADD	int
,	O
&	O
i	long
)	O
!=	O
0	int
)	O
break	O
;	O
}	O
}	O
return	O
status	int
;	O
}	O
static	O
int	O
pop_message_unseen	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
size_t	long
*	O
punseen	*(long)
)	O
{	O
size_t	long
count	long
=	O
0	int
;	O
int	O
status	int
=	O
pop_messages_count	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
(	O
mbox	*(struct)
,	O
&	O
count	long
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
return	O
status	int
;	O
if	O
(	O
punseen	*(long)
)	O
*	O
punseen	*(long)
=	O
(	O
count	long
>	O
0	int
)	O
?	O
1	int
:	O
0	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
pop_get_size	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
mu_off_t	long
*	O
psize	*(long)
)	O
{	O
struct	O
_pop3_mailbox	struct(*(struct),int,int,long,long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`))))),long,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))),*(struct),*(char),*(struct))
*	O
mpd	*(struct)
=	O
mbox	*(struct)
->	O
data	*(void)
;	O
int	O
status	int
=	O
0	int
;	O
if	O
(	O
mpd	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
!	O
pop_is_updated	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mbox	*(struct)
)	O
)	O
status	int
=	O
pop_messages_count	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
(	O
mbox	*(struct)
,	O
NULL	O
)	O
;	O
if	O
(	O
psize	*(long)
)	O
*	O
psize	*(long)
=	O
mpd	*(struct)
->	O
total_size	long
;	O
return	O
status	int
;	O
}	O
static	O
void	O
pop_stream_drain	(*(struct))->(void)
(	O
mu_stream_t	*(struct)
str	*(char)
)	O
{	O
char	O
buf	*(void)
[	O
2048	int
]	O
;	O
size_t	long
size	long
;	O
while	O
(	O
mu_stream_read	(*(struct),*(void),long,*(long))->(int)
(	O
str	*(char)
,	O
buf	*(void)
,	O
sizeof	O
buf	*(void)
,	O
&	O
size	long
)	O
==	O
0	int
&&	O
size	long
)	O
;	O
}	O
static	O
int	O
_pop_message_get_stream	(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`)))),*(*(struct)))->(int)
(	O
struct	O
_pop3_message	struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct))
*	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
,	O
mu_stream_t	*(struct)
*	O
pstr	*(*(char))
)	O
{	O
int	O
status	int
;	O
struct	O
_pop3_mailbox	struct(*(struct),int,int,long,long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`))))),long,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))),*(struct),*(char),*(struct))
*	O
mpd	*(struct)
=	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
mpd	*(struct)
;	O
if	O
(	O
!	O
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
flags	int
&	O
_POP3_MSG_CACHED	int
)	O
)	O
{	O
mu_stream_t	*(struct)
stream	*(struct)
;	O
mu_off_t	long
size	long
;	O
status	int
=	O
mu_pop3_retr	(*(struct),int,*(*(struct)))->(int)
(	O
mpd	*(struct)
->	O
pop3	*(*(struct))
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
num	long
,	O
&	O
stream	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
do	O
{	O
mu_stream_t	*(struct)
flt	*((*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)))),*(void))->(int))
;	O
if	O
(	O
!	O
mpd	*(struct)
->	O
cache	*(struct)
)	O
{	O
status	int
=	O
mu_temp_file_stream_create	(*(*(struct)),*(struct),int)->(int)
(	O
&	O
mpd	*(struct)
->	O
cache	*(struct)
,	O
NULL	O
,	O
0	int
)	O
;	O
if	O
(	O
status	int
)	O
break	O
;	O
mu_stream_set_buffer	(*(struct),enum(int,int,int),long)->(int)
(	O
mpd	*(struct)
->	O
cache	*(struct)
,	O
mu_buffer_full	int
,	O
8192	int
)	O
;	O
}	O
status	int
=	O
mu_stream_size	(*(struct),*(long))->(int)
(	O
mpd	*(struct)
->	O
cache	*(struct)
,	O
&	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
offset	long
)	O
;	O
if	O
(	O
status	int
)	O
break	O
;	O
status	int
=	O
mu_filter_create	(*(*(struct)),*(struct),*(char),int,int)->(int)
(	O
&	O
flt	*((*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)))),*(void))->(int))
,	O
stream	*(struct)
,	O
"CRLF"	*(char)
,	O
MU_FILTER_DECODE	int
,	O
MU_STREAM_READ	int
)	O
;	O
if	O
(	O
status	int
)	O
break	O
;	O
status	int
=	O
mu_stream_copy	(*(struct),*(struct),long,*(long))->(int)
(	O
mpd	*(struct)
->	O
cache	*(struct)
,	O
flt	*((*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)))),*(void))->(int))
,	O
0	int
,	O
&	O
size	long
)	O
;	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
flt	*((*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)))),*(void))->(int))
)	O
;	O
}	O
while	O
(	O
0	int
)	O
;	O
if	O
(	O
status	int
)	O
{	O
pop_stream_drain	(*(struct))->(void)
(	O
stream	*(struct)
)	O
;	O
mu_stream_unref	(*(struct))->(void)
(	O
stream	*(struct)
)	O
;	O
return	O
status	int
;	O
}	O
mu_stream_unref	(*(struct))->(void)
(	O
stream	*(struct)
)	O
;	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
message_size	long
=	O
size	long
;	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
flags	int
|=	O
_POP3_MSG_CACHED	int
|	O
_POP3_MSG_SIZE	int
;	O
}	O
return	O
mu_streamref_create_abridged	(*(*(struct)),*(struct),long,long)->(int)
(	O
pstr	*(*(char))
,	O
mpd	*(struct)
->	O
cache	*(struct)
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
offset	long
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
offset	long
+	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
message_size	long
-	O
1	int
)	O
;	O
}	O
static	O
int	O
pop_message_get_stream	(*(struct),*(*(struct)))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
mu_stream_t	*(struct)
*	O
pstr	*(*(char))
)	O
{	O
struct	O
_pop3_message	struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct))
*	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
return	O
_pop_message_get_stream	(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`)))),*(*(struct)))->(int)
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
,	O
pstr	*(*(char))
)	O
;	O
}	O
static	O
int	O
pop_scan_message	(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`)))))->(int)
(	O
struct	O
_pop3_message	struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct))
*	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
{	O
int	O
status	int
;	O
mu_stream_t	*(struct)
stream	*(struct)
;	O
struct	O
mu_message_scan	struct(int,long,long,long,long,long,long,int,long)
scan	struct(int,long,long,long,long,long,long,int,long)
;	O
if	O
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
flags	int
&	O
_POP3_MSG_SCANNED	int
)	O
return	O
0	int
;	O
status	int
=	O
_pop_message_get_stream	(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`)))),*(*(struct)))->(int)
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
,	O
&	O
stream	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
scan	struct(int,long,long,long,long,long,long,int,long)
.	O
flags	int
=	O
MU_SCAN_SEEK	int
|	O
MU_SCAN_SIZE	int
;	O
scan	struct(int,long,long,long,long,long,long,int,long)
.	O
message_start	long
=	O
0	int
;	O
scan	struct(int,long,long,long,long,long,long,int,long)
.	O
message_size	long
=	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
message_size	long
;	O
status	int
=	O
mu_stream_scan_message	(*(struct),*(struct(int,long,long,long,long,long,long,int,long)))->(int)
(	O
stream	*(struct)
,	O
&	O
scan	struct(int,long,long,long,long,long,long,int,long)
)	O
;	O
mu_stream_unref	(*(struct))->(void)
(	O
stream	*(struct)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
body_start	long
=	O
scan	struct(int,long,long,long,long,long,long,int,long)
.	O
body_start	long
;	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
body_end	long
=	O
scan	struct(int,long,long,long,long,long,long,int,long)
.	O
body_end	long
;	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
header_lines	long
=	O
scan	struct(int,long,long,long,long,long,long,int,long)
.	O
header_lines	long
;	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
body_lines	long
=	O
scan	struct(int,long,long,long,long,long,long,int,long)
.	O
body_lines	long
;	O
if	O
(	O
!	O
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
flags	int
&	O
_POP3_MSG_ATTRSET	int
)	O
)	O
{	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
attr_flags	int
=	O
scan	struct(int,long,long,long,long,long,long,int,long)
.	O
attr_flags	int
;	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
flags	int
|=	O
_POP3_MSG_ATTRSET	int
;	O
}	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
flags	int
|=	O
_POP3_MSG_SCANNED	int
;	O
}	O
return	O
status	int
;	O
}	O
static	O
int	O
pop_message_size	(*(struct),*(long))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
size_t	long
*	O
psize	*(long)
)	O
{	O
struct	O
_pop3_message	struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct))
*	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
struct	O
_pop3_mailbox	struct(*(struct),int,int,long,long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`))))),long,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))),*(struct),*(char),*(struct))
*	O
mpd	*(struct)
=	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
mpd	*(struct)
;	O
if	O
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
!	O
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
flags	int
&	O
_POP3_MSG_SIZE	int
)	O
)	O
{	O
int	O
status	int
=	O
mu_pop3_list	(*(struct),int,*(long))->(int)
(	O
mpd	*(struct)
->	O
pop3	*(*(struct))
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
num	long
,	O
&	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
message_size	long
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
flags	int
|=	O
_POP3_MSG_SIZE	int
;	O
}	O
if	O
(	O
psize	*(long)
)	O
*	O
psize	*(long)
=	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
message_size	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
pop_message_lines	(*(struct),*(long),int)->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
size_t	long
*	O
plines	*(long)
,	O
int	O
quick	int
)	O
{	O
int	O
rc	int
;	O
struct	O
_pop3_message	struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct))
*	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
if	O
(	O
!	O
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
flags	int
&	O
_POP3_MSG_LINES	int
)	O
)	O
{	O
if	O
(	O
quick	int
&&	O
!	O
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
flags	int
&	O
_POP3_MSG_CACHED	int
)	O
)	O
return	O
MU_ERR_INFO_UNAVAILABLE	O
;	O
if	O
(	O
!	O
pop_is_updated	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
mpd	*(struct)
->	O
mbox	*(struct)
)	O
)	O
pop_scan	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(long))->(int)
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
mpd	*(struct)
->	O
mbox	*(struct)
,	O
1	int
,	O
NULL	O
)	O
;	O
rc	int
=	O
pop_scan_message	(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`)))))->(int)
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
message_lines	long
=	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
header_lines	long
+	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
body_lines	long
+	O
1	int
;	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
flags	int
|=	O
_POP3_MSG_LINES	int
;	O
}	O
*	O
plines	*(long)
=	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
message_lines	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
pop_create_message	(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`)))),*(struct(*(struct),int,int,long,long,*(*(struct`)),long,*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(char),*(struct))))->(int)
(	O
struct	O
_pop3_message	struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct))
*	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
,	O
struct	O
_pop3_mailbox	struct(*(struct),int,int,long,long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`))))),long,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))),*(struct),*(char),*(struct))
*	O
mpd	*(struct)
)	O
{	O
int	O
status	int
;	O
mu_message_t	*(struct)
msg	*(struct)
;	O
status	int
=	O
mu_message_create	(*(*(struct)),*(void))->(int)
(	O
&	O
msg	*(struct)
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
mu_message_set_get_stream	(*(struct),*((*(struct),*(*(struct`)))->(int)),*(void))->(int)
(	O
msg	*(struct)
,	O
pop_message_get_stream	(*(struct),*(*(struct)))->(int)
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
;	O
mu_message_set_size	(*(struct),*((*(struct),*(long))->(int)),*(void))->(int)
(	O
msg	*(struct)
,	O
pop_message_size	(*(struct),*(long))->(int)
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
;	O
mu_message_set_lines	(*(struct),*((*(struct),*(long),int)->(int)),*(void))->(int)
(	O
msg	*(struct)
,	O
pop_message_lines	(*(struct),*(long),int)->(int)
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
;	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
message	*(struct)
=	O
msg	*(struct)
;	O
return	O
0	int
;	O
}	O
static	O
int	O
pop_create_pop3_message	(*(struct(*(struct),int,int,long,long,*(*(struct`)),long,*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(char),*(struct))),long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct`),*(struct`)))))->(int)
(	O
struct	O
_pop3_mailbox	struct(*(struct),int,int,long,long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`))))),long,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))),*(struct),*(char),*(struct))
*	O
mpd	*(struct)
,	O
size_t	long
msgno	long
,	O
struct	O
_pop3_message	struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct))
*	O
*	O
mptr	*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`)))))
)	O
{	O
struct	O
_pop3_message	struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct))
*	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
;	O
if	O
(	O
msgno	long
>	O
mpd	*(struct)
->	O
msg_count	long
)	O
return	O
MU_ERR_NOENT	O
;	O
if	O
(	O
!	O
mpd	*(struct)
->	O
msg	*(struct)
)	O
{	O
mpd	*(struct)
->	O
msg	*(struct)
=	O
calloc	(long,long)->(*(void))
(	O
mpd	*(struct)
->	O
msg_count	long
,	O
sizeof	O
(	O
mpd	*(struct)
->	O
msg	*(struct)
[	O
0	int
]	O
)	O
)	O
;	O
if	O
(	O
!	O
mpd	*(struct)
->	O
msg	*(struct)
)	O
return	O
ENOMEM	int
;	O
}	O
if	O
(	O
mpd	*(struct)
->	O
msg	*(struct)
[	O
msgno	long
-	O
1	int
]	O
)	O
{	O
*	O
mptr	*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`)))))
=	O
mpd	*(struct)
->	O
msg	*(struct)
[	O
msgno	long
-	O
1	int
]	O
;	O
return	O
0	int
;	O
}	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
=	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
*	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
)	O
;	O
if	O
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
mpd	*(struct)
=	O
mpd	*(struct)
;	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
num	long
=	O
msgno	long
;	O
mpd	*(struct)
->	O
msg	*(struct)
[	O
msgno	long
-	O
1	int
]	O
=	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
;	O
*	O
mptr	*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`)))))
=	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
;	O
return	O
0	int
;	O
}	O
int	O
pop_header_blurb	(*(struct),long,*(*(char)),*(long))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
size_t	long
maxlines	long
,	O
char	O
*	O
*	O
pbuf	*(*(char))
,	O
size_t	long
*	O
plen	*(long)
)	O
{	O
int	O
status	int
;	O
mu_opool_t	*(struct)
opool	*(struct)
;	O
size_t	long
size	long
=	O
0	int
;	O
char	O
*	O
buf	*(void)
=	O
NULL	O
;	O
size_t	long
n	int
;	O
size_t	long
nlines	long
=	O
0	int
;	O
status	int
=	O
mu_opool_create	(*(*(struct)),int)->(int)
(	O
&	O
opool	*(struct)
,	O
MU_OPOOL_DEFAULT	int
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
while	O
(	O
(	O
status	int
=	O
mu_stream_getline	(*(struct),*(*(char)),*(long),*(long))->(int)
(	O
stream	*(struct)
,	O
&	O
buf	*(void)
,	O
&	O
size	long
,	O
&	O
n	int
)	O
)	O
==	O
0	int
&&	O
n	int
>	O
0	int
)	O
{	O
size_t	long
len	long
=	O
mu_rtrim_class	(*(char),int)->(long)
(	O
buf	*(void)
,	O
MU_CTYPE_ENDLN	int
)	O
;	O
if	O
(	O
len	long
==	O
0	int
)	O
break	O
;	O
mu_opool_append	(*(struct),*(void),long)->(int)
(	O
opool	*(struct)
,	O
buf	*(void)
,	O
len	long
)	O
;	O
mu_opool_append_char	(*(struct),char)->(int)
(	O
opool	*(struct)
,	O
'\n'	O
)	O
;	O
if	O
(	O
maxlines	long
&&	O
++	O
nlines	long
>=	O
maxlines	long
)	O
break	O
;	O
}	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
n	int
=	O
mu_opool_size	(*(struct))->(long)
(	O
opool	*(struct)
)	O
;	O
if	O
(	O
n	int
>	O
size	long
)	O
{	O
char	O
*	O
p	*(char)
=	O
realloc	(*(void),long)->(*(void))
(	O
buf	*(void)
,	O
n	int
)	O
;	O
if	O
(	O
!	O
p	*(char)
)	O
{	O
free	(*(void))->(void)
(	O
buf	*(void)
)	O
;	O
status	int
=	O
ENOMEM	int
;	O
}	O
else	O
buf	*(void)
=	O
p	*(char)
;	O
}	O
}	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
mu_opool_copy	(*(struct),*(void),long)->(long)
(	O
opool	*(struct)
,	O
buf	*(void)
,	O
n	int
)	O
;	O
*	O
pbuf	*(*(char))
=	O
buf	*(void)
;	O
*	O
plen	*(long)
=	O
n	int
;	O
}	O
else	O
free	(*(void))->(void)
(	O
buf	*(void)
)	O
;	O
mu_opool_destroy	(*(*(struct)))->(void)
(	O
&	O
opool	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
pop_header_fill	(*(void),*(*(char)),*(long))->(int)
(	O
void	O
*	O
data	*(void)
,	O
char	O
*	O
*	O
pbuf	*(*(char))
,	O
size_t	long
*	O
plen	*(long)
)	O
{	O
struct	O
_pop3_message	struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct))
*	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
=	O
data	*(void)
;	O
struct	O
_pop3_mailbox	struct(*(struct),int,int,long,long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`))))),long,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))),*(struct),*(char),*(struct))
*	O
mpd	*(struct)
=	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
mpd	*(struct)
;	O
mu_stream_t	*(struct)
stream	*(struct)
;	O
int	O
status	int
;	O
if	O
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
flags	int
&	O
_POP3_MSG_SCANNED	int
)	O
{	O
status	int
=	O
_pop_message_get_stream	(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`)))),*(*(struct)))->(int)
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
,	O
&	O
stream	*(struct)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
status	int
=	O
pop_header_blurb	(*(struct),long,*(*(char)),*(long))->(int)
(	O
stream	*(struct)
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
header_lines	long
,	O
pbuf	*(*(char))
,	O
plen	*(long)
)	O
;	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
stream	*(struct)
)	O
;	O
}	O
}	O
else	O
{	O
status	int
=	O
mu_pop3_top	(*(struct),int,int,*(*(struct)))->(int)
(	O
mpd	*(struct)
->	O
pop3	*(*(struct))
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
num	long
,	O
0	int
,	O
&	O
stream	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
status	int
=	O
_pop_message_get_stream	(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`)))),*(*(struct)))->(int)
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
,	O
&	O
stream	*(struct)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
status	int
=	O
pop_header_blurb	(*(struct),long,*(*(char)),*(long))->(int)
(	O
stream	*(struct)
,	O
0	int
,	O
pbuf	*(*(char))
,	O
plen	*(long)
)	O
;	O
if	O
(	O
!	O
mu_stream_eof	(*(struct))->(int)
(	O
stream	*(struct)
)	O
)	O
pop_stream_drain	(*(struct))->(void)
(	O
stream	*(struct)
)	O
;	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
stream	*(struct)
)	O
;	O
}	O
return	O
status	int
;	O
}	O
return	O
status	int
;	O
}	O
static	O
int	O
pop_create_header	(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`)))))->(int)
(	O
struct	O
_pop3_message	struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct))
*	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
{	O
int	O
status	int
;	O
mu_header_t	*(struct)
header	*(struct)
=	O
NULL	O
;	O
status	int
=	O
mu_header_create	(*(*(struct)),*(char),long)->(int)
(	O
&	O
header	*(struct)
,	O
NULL	O
,	O
0	int
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
mu_header_set_fill	(*(struct),*((*(void),*(*(char)),*(long))->(int)),*(void))->(int)
(	O
header	*(struct)
,	O
pop_header_fill	(*(void),*(*(char)),*(long))->(int)
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
;	O
mu_message_set_header	(*(struct),*(struct),*(void))->(int)
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
message	*(struct)
,	O
header	*(struct)
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
pop_get_attribute	(*(struct),*(int))->(int)
(	O
mu_attribute_t	*(struct)
attr	*(struct)
,	O
int	O
*	O
pflags	*(int)
)	O
{	O
struct	O
_pop3_message	struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct))
*	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
=	O
mu_attribute_get_owner	(*(struct))->(*(void))
(	O
attr	*(struct)
)	O
;	O
char	O
hdr_status	array(char)
[	O
64	int
]	O
;	O
mu_header_t	*(struct)
header	*(struct)
=	O
NULL	O
;	O
if	O
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
==	O
NULL	O
||	O
pflags	*(int)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
!	O
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
flags	int
&	O
_POP3_MSG_ATTRSET	int
)	O
)	O
{	O
hdr_status	array(char)
[	O
0	int
]	O
=	O
'\0'	O
;	O
mu_message_get_header	(*(struct),*(*(struct)))->(int)
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
message	*(struct)
,	O
&	O
header	*(struct)
)	O
;	O
mu_header_get_value	O
(	O
header	*(struct)
,	O
MU_HEADER_STATUS	*(char)
,	O
hdr_status	array(char)
,	O
sizeof	O
hdr_status	array(char)
,	O
NULL	O
)	O
;	O
mu_string_to_flags	(*(char),*(int))->(int)
(	O
hdr_status	array(char)
,	O
&	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
attr_flags	int
)	O
;	O
}	O
*	O
pflags	*(int)
=	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
attr_flags	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
pop_set_attribute	(*(struct),int)->(int)
(	O
mu_attribute_t	*(struct)
attr	*(struct)
,	O
int	O
flags	int
)	O
{	O
struct	O
_pop3_message	struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct))
*	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
=	O
mu_attribute_get_owner	(*(struct))->(*(void))
(	O
attr	*(struct)
)	O
;	O
if	O
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
attr_flags	int
|=	O
flags	int
;	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
flags	int
|=	O
_POP3_MSG_ATTRSET	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
pop_unset_attribute	(*(struct),int)->(int)
(	O
mu_attribute_t	*(struct)
attr	*(struct)
,	O
int	O
flags	int
)	O
{	O
struct	O
_pop3_message	struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct))
*	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
=	O
mu_attribute_get_owner	(*(struct))->(*(void))
(	O
attr	*(struct)
)	O
;	O
if	O
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
attr_flags	int
&=	O
~	O
flags	int
;	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
flags	int
|=	O
_POP3_MSG_ATTRSET	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
pop_create_attribute	(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`)))))->(int)
(	O
struct	O
_pop3_message	struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct))
*	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
{	O
int	O
status	int
;	O
mu_attribute_t	*(struct)
attribute	*(struct)
;	O
status	int
=	O
mu_attribute_create	(*(*(struct)),*(void))->(int)
(	O
&	O
attribute	*(struct)
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
mu_attribute_set_get_flags	(*(struct),*((*(struct),*(int))->(int)),*(void))->(int)
(	O
attribute	*(struct)
,	O
pop_get_attribute	(*(struct),*(int))->(int)
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
;	O
mu_attribute_set_set_flags	(*(struct),*((*(struct),int)->(int)),*(void))->(int)
(	O
attribute	*(struct)
,	O
pop_set_attribute	(*(struct),int)->(int)
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
;	O
mu_attribute_set_unset_flags	(*(struct),*((*(struct),int)->(int)),*(void))->(int)
(	O
attribute	*(struct)
,	O
pop_unset_attribute	(*(struct),int)->(int)
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
;	O
mu_message_set_attribute	(*(struct),*(struct),*(void))->(int)
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
message	*(struct)
,	O
attribute	*(struct)
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
;	O
return	O
0	int
;	O
}	O
int	O
pop_body_get_stream	(*(struct),*(*(struct)))->(int)
(	O
mu_body_t	*(struct)
body	*(struct)
,	O
mu_stream_t	*(struct)
*	O
pstr	*(*(char))
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
=	O
mu_body_get_owner	(*(struct))->(*(void))
(	O
body	*(struct)
)	O
;	O
struct	O
_pop3_message	struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct))
*	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
struct	O
_pop3_mailbox	struct(*(struct),int,int,long,long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`))))),long,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))),*(struct),*(char),*(struct))
*	O
mpd	*(struct)
=	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
mpd	*(struct)
;	O
int	O
status	int
=	O
pop_scan_message	(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`)))))->(int)
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
return	O
mu_streamref_create_abridged	(*(*(struct)),*(struct),long,long)->(int)
(	O
pstr	*(*(char))
,	O
mpd	*(struct)
->	O
cache	*(struct)
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
offset	long
+	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
body_start	long
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
offset	long
+	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
body_end	long
-	O
1	int
)	O
;	O
}	O
static	O
int	O
pop_body_size	(*(struct),*(long))->(int)
(	O
mu_body_t	*(struct)
body	*(struct)
,	O
size_t	long
*	O
psize	*(long)
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
=	O
mu_body_get_owner	(*(struct))->(*(void))
(	O
body	*(struct)
)	O
;	O
struct	O
_pop3_message	struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct))
*	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
int	O
status	int
=	O
pop_scan_message	(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`)))))->(int)
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
*	O
psize	*(long)
=	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
body_end	long
-	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
body_start	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
pop_body_lines	(*(struct),*(long))->(int)
(	O
mu_body_t	*(struct)
body	*(struct)
,	O
size_t	long
*	O
plines	*(long)
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
=	O
mu_body_get_owner	(*(struct))->(*(void))
(	O
body	*(struct)
)	O
;	O
struct	O
_pop3_message	struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct))
*	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
int	O
status	int
=	O
pop_scan_message	(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`)))))->(int)
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
*	O
plines	*(long)
=	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
body_lines	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
pop_create_body	(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`)))))->(int)
(	O
struct	O
_pop3_message	struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct))
*	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
{	O
int	O
status	int
;	O
mu_body_t	*(struct)
body	*(struct)
=	O
NULL	O
;	O
mu_message_t	*(struct)
msg	*(struct)
=	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
message	*(struct)
;	O
status	int
=	O
mu_body_create	(*(*(struct)),*(void))->(int)
(	O
&	O
body	*(struct)
,	O
msg	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
mu_body_set_get_stream	(*(struct),*((*(struct),*(*(struct`)))->(int)),*(void))->(int)
(	O
body	*(struct)
,	O
pop_body_get_stream	(*(struct),*(*(struct)))->(int)
,	O
msg	*(struct)
)	O
;	O
mu_body_set_size	(*(struct),*((*(struct),*(long))->(int)),*(void))->(int)
(	O
body	*(struct)
,	O
pop_body_size	(*(struct),*(long))->(int)
,	O
msg	*(struct)
)	O
;	O
mu_body_set_lines	(*(struct),*((*(struct),*(long))->(int)),*(void))->(int)
(	O
body	*(struct)
,	O
pop_body_lines	(*(struct),*(long))->(int)
,	O
msg	*(struct)
)	O
;	O
mu_message_set_body	(*(struct),*(struct),*(void))->(int)
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
message	*(struct)
,	O
body	*(struct)
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
pop_uidl	(*(struct),*(char),long,*(long))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
char	O
*	O
buffer	*(char)
,	O
size_t	long
buflen	long
,	O
size_t	long
*	O
pnwriten	*(long)
)	O
{	O
struct	O
_pop3_message	struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct))
*	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
struct	O
_pop3_mailbox	struct(*(struct),int,int,long,long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`))))),long,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))),*(struct),*(char),*(struct))
*	O
mpd	*(struct)
=	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
mpd	*(struct)
;	O
size_t	long
len	long
;	O
if	O
(	O
!	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
uidl	array(char)
)	O
{	O
if	O
(	O
mu_pop3_capa_test	(*(struct),*(char),*(*(char)))->(int)
(	O
mpd	*(struct)
->	O
pop3	*(*(struct))
,	O
"UIDL"	*(char)
,	O
NULL	O
)	O
==	O
0	int
)	O
{	O
int	O
status	int
=	O
mu_pop3_uidl	(*(struct),int,*(*(char)))->(int)
(	O
mpd	*(struct)
->	O
pop3	*(*(struct))
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
num	long
,	O
&	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
uidl	array(char)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
}	O
else	O
return	O
ENOSYS	int
;	O
}	O
len	long
=	O
strlen	(*(char))->(long)
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
uidl	array(char)
)	O
;	O
if	O
(	O
buffer	*(char)
)	O
{	O
buflen	long
--	O
;	O
buflen	long
=	O
(	O
len	long
>	O
buflen	long
)	O
?	O
buflen	long
:	O
len	long
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
buffer	*(char)
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
uidl	array(char)
,	O
buflen	long
)	O
;	O
buffer	*(char)
[	O
buflen	long
]	O
=	O
0	int
;	O
}	O
else	O
buflen	long
=	O
len	long
;	O
if	O
(	O
pnwriten	*(long)
)	O
*	O
pnwriten	*(long)
=	O
buflen	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
pop_uid	(*(struct),*(long))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
size_t	long
*	O
puid	*(long)
)	O
{	O
struct	O
_pop3_message	struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct))
*	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
if	O
(	O
puid	*(long)
)	O
*	O
puid	*(long)
=	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
num	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
pop_get_message	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(*(struct)))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
size_t	long
msgno	long
,	O
mu_message_t	*(struct)
*	O
pmsg	*(*(struct))
)	O
{	O
struct	O
_pop3_mailbox	struct(*(struct),int,int,long,long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`))))),long,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))),*(struct),*(char),*(struct))
*	O
mpd	*(struct)
=	O
mbox	*(struct)
->	O
data	*(void)
;	O
struct	O
_pop3_message	struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct))
*	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
;	O
int	O
status	int
;	O
if	O
(	O
pmsg	*(*(struct))
==	O
NULL	O
||	O
mpd	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
!	O
pop_is_updated	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mbox	*(struct)
)	O
)	O
pop_scan	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(long))->(int)
(	O
mbox	*(struct)
,	O
1	int
,	O
NULL	O
)	O
;	O
status	int
=	O
pop_create_pop3_message	(*(struct(*(struct),int,int,long,long,*(*(struct`)),long,*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(char),*(struct))),long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct`),*(struct`)))))->(int)
(	O
mpd	*(struct)
,	O
msgno	long
,	O
&	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
if	O
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
message	*(struct)
)	O
{	O
*	O
pmsg	*(*(struct))
=	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
message	*(struct)
;	O
return	O
0	int
;	O
}	O
status	int
=	O
pop_create_message	(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`)))),*(struct(*(struct),int,int,long,long,*(*(struct`)),long,*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(char),*(struct))))->(int)
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
,	O
mpd	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
do	O
{	O
status	int
=	O
pop_create_header	(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`)))))->(int)
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
;	O
if	O
(	O
status	int
)	O
break	O
;	O
status	int
=	O
pop_create_attribute	(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`)))))->(int)
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
;	O
if	O
(	O
status	int
)	O
break	O
;	O
status	int
=	O
pop_create_body	(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`)))))->(int)
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
;	O
}	O
while	O
(	O
0	int
)	O
;	O
if	O
(	O
status	int
)	O
{	O
mu_message_destroy	(*(*(struct)),*(void))->(void)
(	O
&	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
message	*(struct)
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
;	O
free	(*(void))->(void)
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
;	O
return	O
status	int
;	O
}	O
if	O
(	O
mu_pop3_capa_test	(*(struct),*(char),*(*(char)))->(int)
(	O
mpd	*(struct)
->	O
pop3	*(*(struct))
,	O
"UIDL"	*(char)
,	O
NULL	O
)	O
==	O
0	int
)	O
mu_message_set_uidl	(*(struct),*((*(struct),*(char),long,*(long))->(int)),*(void))->(int)
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
message	*(struct)
,	O
pop_uidl	(*(struct),*(char),long,*(long))->(int)
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
;	O
mu_message_set_uid	(*(struct),*((*(struct),*(long))->(int)),*(void))->(int)
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
message	*(struct)
,	O
pop_uid	(*(struct),*(long))->(int)
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
;	O
mu_message_set_mailbox	(*(struct),*(struct),*(void))->(int)
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
message	*(struct)
,	O
mbox	*(struct)
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
)	O
;	O
*	O
pmsg	*(*(struct))
=	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
message	*(struct)
;	O
return	O
0	int
;	O
}	O
static	O
int	O
pop_expunge	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
)	O
{	O
struct	O
_pop3_mailbox	struct(*(struct),int,int,long,long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`))))),long,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))),*(struct),*(char),*(struct))
*	O
mpd	*(struct)
=	O
mbox	*(struct)
->	O
data	*(void)
;	O
int	O
status	int
=	O
0	int
;	O
size_t	long
i	long
;	O
size_t	long
expcount	long
=	O
0	int
;	O
if	O
(	O
mpd	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
!	O
mpd	*(struct)
->	O
msg	*(struct)
)	O
return	O
0	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
mpd	*(struct)
->	O
msg_count	long
;	O
i	long
++	O
)	O
{	O
struct	O
_pop3_message	struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct))
*	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
=	O
mpd	*(struct)
->	O
msg	*(struct)
[	O
i	long
]	O
;	O
if	O
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
&&	O
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
flags	int
&	O
_POP3_MSG_ATTRSET	int
)	O
&&	O
(	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
attr_flags	int
&	O
MU_ATTRIBUTE_DELETED	int
)	O
)	O
{	O
size_t	long
expevt	array(long)
[	O
2	int
]	O
=	O
{	O
i	long
+	O
1	int
,	O
expcount	long
}	O
;	O
status	int
=	O
mu_pop3_dele	(*(struct),int)->(int)
(	O
mpd	*(struct)
->	O
pop3	*(*(struct))
,	O
mpm	*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*(struct`),int,int,long,long,*(*`),long,*(struct`),*(struct`),*(char),*(struct`)))))
->	O
num	long
)	O
;	O
if	O
(	O
status	int
)	O
break	O
;	O
mu_observable_notify	(*(struct),int,*(void))->(int)
(	O
mbox	*(struct)
->	O
observable	*(struct)
,	O
MU_EVT_MAILBOX_MESSAGE_EXPUNGE	int
,	O
&	O
expevt	array(long)
)	O
;	O
++	O
expcount	long
;	O
}	O
}	O
return	O
0	int
;	O
}	O
static	O
int	O
_pop3_mailbox_init	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),int)->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
int	O
pops	int
)	O
{	O
struct	O
_pop3_mailbox	struct(*(struct),int,int,long,long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`))))),long,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))),*(struct),*(char),*(struct))
*	O
mpd	*(struct)
;	O
int	O
status	int
=	O
0	int
;	O
mpd	*(struct)
=	O
mbox	*(struct)
->	O
data	*(void)
=	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
*	O
mpd	*(struct)
)	O
)	O
;	O
if	O
(	O
mbox	*(struct)
->	O
data	*(void)
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
mpd	*(struct)
->	O
pop3	*(*(struct))
=	O
NULL	O
;	O
mpd	*(struct)
->	O
mbox	*(struct)
=	O
mbox	*(struct)
;	O
mpd	*(struct)
->	O
pops	int
=	O
pops	int
;	O
mbox	*(struct)
->	O
_destroy	*((*(struct))->(void))
=	O
pop_destroy	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(void)
;	O
mbox	*(struct)
->	O
_open	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),int)->(int))
=	O
pop_open	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),int)->(int)
;	O
mbox	*(struct)
->	O
_close	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))))->(int))
=	O
pop_close	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
;	O
mbox	*(struct)
->	O
_messages_count	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int))
=	O
pop_messages_count	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
;	O
mbox	*(struct)
->	O
_messages_recent	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int))
=	O
pop_messages_count	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
;	O
mbox	*(struct)
->	O
_is_updated	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int))
=	O
pop_is_updated	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
;	O
mbox	*(struct)
->	O
_scan	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(long))->(int))
=	O
pop_scan	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(long))->(int)
;	O
mbox	*(struct)
->	O
_message_unseen	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int))
=	O
pop_message_unseen	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
;	O
mbox	*(struct)
->	O
_get_size	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int))
=	O
pop_get_size	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
;	O
mbox	*(struct)
->	O
_get_message	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(*(struct)))->(int))
=	O
pop_get_message	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(*(struct)))->(int)
;	O
mbox	*(struct)
->	O
_expunge	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int))
=	O
pop_expunge	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
;	O
{	O
mu_property_t	*(struct)
property	*(struct)
=	O
NULL	O
;	O
mu_mailbox_get_property	(*(struct),*(*(struct)))->(int)
(	O
mbox	*(struct)
,	O
&	O
property	*(struct)
)	O
;	O
mu_property_set_value	(*(struct),*(char),*(char),int)->(int)
(	O
property	*(struct)
,	O
"TYPE"	*(char)
,	O
"POP3"	*(char)
,	O
1	int
)	O
;	O
}	O
mbox	*(struct)
->	O
folder	*(struct)
->	O
data	*(void)
=	O
mbox	*(struct)
;	O
return	O
status	int
;	O
}	O
int	O
_mailbox_pop_init	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
)	O
{	O
return	O
_pop3_mailbox_init	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),int)->(int)
(	O
mbox	*(struct)
,	O
0	int
)	O
;	O
}	O
int	O
_mailbox_pops_init	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
)	O
{	O
return	O
_pop3_mailbox_init	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,*`,*`,*`,int,int,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),int)->(int)
(	O
mbox	*(struct)
,	O
1	int
)	O
;	O
}	O
static	O
int	O
pop_get_user	(*(struct))->(int)
(	O
mu_authority_t	*(struct)
auth	*(char)
)	O
{	O
mu_folder_t	*(struct)
folder	*(struct)
=	O
mu_authority_get_owner	(*(struct))->(*(void))
(	O
auth	*(char)
)	O
;	O
mu_mailbox_t	*(struct)
mbox	*(struct)
=	O
folder	*(struct)
->	O
data	*(void)
;	O
struct	O
_pop3_mailbox	struct(*(struct),int,int,long,long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`))))),long,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))),*(struct),*(char),*(struct))
*	O
mpd	*(struct)
=	O
mbox	*(struct)
->	O
data	*(void)
;	O
mu_ticket_t	*(struct)
ticket	*(struct)
=	O
NULL	O
;	O
int	O
status	int
;	O
mu_authority_get_ticket	(*(struct),*(*(struct)))->(int)
(	O
auth	*(char)
,	O
&	O
ticket	*(struct)
)	O
;	O
if	O
(	O
mpd	*(struct)
->	O
user	*(char)
)	O
{	O
free	(*(void))->(void)
(	O
mpd	*(struct)
->	O
user	*(char)
)	O
;	O
mpd	*(struct)
->	O
user	*(char)
=	O
NULL	O
;	O
}	O
status	int
=	O
mu_url_aget_user	(*(struct),*(*(char)))->(int)
(	O
mbox	*(struct)
->	O
url	*(struct)
,	O
&	O
mpd	*(struct)
->	O
user	*(char)
)	O
;	O
if	O
(	O
status	int
==	O
MU_ERR_NOENT	O
)	O
status	int
=	O
mu_ticket_get_cred	(*(struct),*(struct),*(char),*(*(char)),*(*(struct)))->(int)
(	O
ticket	*(struct)
,	O
mbox	*(struct)
->	O
url	*(struct)
,	O
"Pop User: "	*(char)
,	O
&	O
mpd	*(struct)
->	O
user	*(char)
,	O
NULL	O
)	O
;	O
if	O
(	O
status	int
==	O
MU_ERR_NOENT	O
||	O
mpd	*(struct)
->	O
user	*(char)
==	O
NULL	O
)	O
return	O
MU_ERR_NOUSERNAME	O
;	O
return	O
status	int
;	O
}	O
static	O
int	O
pop_get_passwd	(*(struct))->(int)
(	O
mu_authority_t	*(struct)
auth	*(char)
)	O
{	O
mu_folder_t	*(struct)
folder	*(struct)
=	O
mu_authority_get_owner	(*(struct))->(*(void))
(	O
auth	*(char)
)	O
;	O
mu_mailbox_t	*(struct)
mbox	*(struct)
=	O
folder	*(struct)
->	O
data	*(void)
;	O
struct	O
_pop3_mailbox	struct(*(struct),int,int,long,long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`))))),long,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))),*(struct),*(char),*(struct))
*	O
mpd	*(struct)
=	O
mbox	*(struct)
->	O
data	*(void)
;	O
mu_ticket_t	*(struct)
ticket	*(struct)
=	O
NULL	O
;	O
int	O
status	int
;	O
mu_authority_get_ticket	(*(struct),*(*(struct)))->(int)
(	O
auth	*(char)
,	O
&	O
ticket	*(struct)
)	O
;	O
status	int
=	O
mu_url_get_secret	(*(struct),*(*(struct)))->(int)
(	O
mbox	*(struct)
->	O
url	*(struct)
,	O
&	O
mpd	*(struct)
->	O
secret	*(struct)
)	O
;	O
if	O
(	O
status	int
==	O
MU_ERR_NOENT	O
)	O
status	int
=	O
mu_ticket_get_cred	(*(struct),*(struct),*(char),*(*(char)),*(*(struct)))->(int)
(	O
ticket	*(struct)
,	O
mbox	*(struct)
->	O
url	*(struct)
,	O
"Pop Passwd: "	*(char)
,	O
NULL	O
,	O
&	O
mpd	*(struct)
->	O
secret	*(struct)
)	O
;	O
if	O
(	O
status	int
==	O
MU_ERR_NOENT	O
||	O
!	O
mpd	*(struct)
->	O
secret	*(struct)
)	O
return	O
MU_ERR_NOPASSWORD	O
;	O
return	O
0	int
;	O
}	O
int	O
_pop_apop	(*(struct))->(int)
(	O
mu_authority_t	*(struct)
auth	*(char)
)	O
{	O
mu_folder_t	*(struct)
folder	*(struct)
=	O
mu_authority_get_owner	(*(struct))->(*(void))
(	O
auth	*(char)
)	O
;	O
mu_mailbox_t	*(struct)
mbox	*(struct)
=	O
folder	*(struct)
->	O
data	*(void)
;	O
struct	O
_pop3_mailbox	struct(*(struct),int,int,long,long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`))))),long,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))),*(struct),*(char),*(struct))
*	O
mpd	*(struct)
=	O
mbox	*(struct)
->	O
data	*(void)
;	O
int	O
status	int
;	O
status	int
=	O
pop_get_user	(*(struct))->(int)
(	O
auth	*(char)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
pop_get_passwd	(*(struct))->(int)
(	O
auth	*(char)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
mu_pop3_apop	(*(struct),*(char),*(char))->(int)
(	O
mpd	*(struct)
->	O
pop3	*(*(struct))
,	O
mpd	*(struct)
->	O
user	*(char)
,	O
mu_secret_password	(*(struct))->(*(char))
(	O
mpd	*(struct)
->	O
secret	*(struct)
)	O
)	O
;	O
mu_secret_password_unref	(*(struct))->(void)
(	O
mpd	*(struct)
->	O
secret	*(struct)
)	O
;	O
mu_secret_unref	(*(struct))->(int)
(	O
mpd	*(struct)
->	O
secret	*(struct)
)	O
;	O
mpd	*(struct)
->	O
secret	*(struct)
=	O
NULL	O
;	O
free	(*(void))->(void)
(	O
mpd	*(struct)
->	O
user	*(char)
)	O
;	O
mpd	*(struct)
->	O
user	*(char)
=	O
NULL	O
;	O
return	O
status	int
;	O
}	O
int	O
_pop_user	(*(struct))->(int)
(	O
mu_authority_t	*(struct)
auth	*(char)
)	O
{	O
mu_folder_t	*(struct)
folder	*(struct)
=	O
mu_authority_get_owner	(*(struct))->(*(void))
(	O
auth	*(char)
)	O
;	O
mu_mailbox_t	*(struct)
mbox	*(struct)
=	O
folder	*(struct)
->	O
data	*(void)
;	O
struct	O
_pop3_mailbox	struct(*(struct),int,int,long,long,*(*(struct(int,long,long,long,long,long,int,long,long,long,*(char),*(struct),*(struct(*`,int,int,long,long,*`,long,*`,*`,*`,*`))))),long,*(struct(*(struct),*(struct),*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),int,*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int)))),*(struct),*(char),*(struct))
*	O
mpd	*(struct)
=	O
mbox	*(struct)
->	O
data	*(void)
;	O
int	O
status	int
;	O
status	int
=	O
pop_get_user	(*(struct))->(int)
(	O
auth	*(char)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
mu_pop3_user	(*(struct),*(char))->(int)
(	O
mpd	*(struct)
->	O
pop3	*(*(struct))
,	O
mpd	*(struct)
->	O
user	*(char)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
status	int
=	O
pop_get_passwd	(*(struct))->(int)
(	O
auth	*(char)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
status	int
=	O
mu_pop3_pass	(*(struct),*(char))->(int)
(	O
mpd	*(struct)
->	O
pop3	*(*(struct))
,	O
mu_secret_password	(*(struct))->(*(char))
(	O
mpd	*(struct)
->	O
secret	*(struct)
)	O
)	O
;	O
mu_secret_password_unref	(*(struct))->(void)
(	O
mpd	*(struct)
->	O
secret	*(struct)
)	O
;	O
mu_secret_unref	(*(struct))->(int)
(	O
mpd	*(struct)
->	O
secret	*(struct)
)	O
;	O
mpd	*(struct)
->	O
secret	*(struct)
=	O
NULL	O
;	O
}	O
}	O
free	(*(void))->(void)
(	O
mpd	*(struct)
->	O
user	*(char)
)	O
;	O
mpd	*(struct)
->	O
user	*(char)
=	O
NULL	O
;	O
return	O
status	int
;	O
}	O
