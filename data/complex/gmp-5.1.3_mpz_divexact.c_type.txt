void	O
mpz_divexact	O
(	O
mpz_ptr	*(struct(int,int,*(long)))
quot	long
,	O
mpz_srcptr	*(struct(int,int,*(long)))
num	*(struct(int,int,*(long)))
,	O
mpz_srcptr	*(struct(int,int,*(long)))
den	*(struct(int,int,*(long)))
)	O
{	O
mp_ptr	*(long)
qp	*(long)
;	O
mp_size_t	long
qn	long
;	O
mp_srcptr	*(long)
np	*(long)
,	O
dp	*(long)
;	O
mp_size_t	long
nn	long
,	O
dn	long
;	O
TMP_DECL	O
;	O
nn	long
=	O
ABSIZ	O
(	O
num	*(struct(int,int,*(long)))
)	O
;	O
dn	long
=	O
ABSIZ	O
(	O
den	*(struct(int,int,*(long)))
)	O
;	O
if	O
(	O
nn	long
<	O
dn	long
)	O
{	O
SIZ	O
(	O
quot	long
)	O
=	O
0	int
;	O
return	O
;	O
}	O
qn	long
=	O
nn	long
-	O
dn	long
+	O
1	int
;	O
TMP_MARK	O
;	O
if	O
(	O
quot	long
==	O
num	*(struct(int,int,*(long)))
||	O
quot	long
==	O
den	*(struct(int,int,*(long)))
)	O
qp	*(long)
=	O
TMP_ALLOC_LIMBS	O
(	O
qn	long
)	O
;	O
else	O
qp	*(long)
=	O
MPZ_REALLOC	O
(	O
quot	long
,	O
qn	long
)	O
;	O
np	*(long)
=	O
PTR	O
(	O
num	*(struct(int,int,*(long)))
)	O
;	O
dp	*(long)
=	O
PTR	O
(	O
den	*(struct(int,int,*(long)))
)	O
;	O
mpn_divexact	O
(	O
qp	*(long)
,	O
np	*(long)
,	O
nn	long
,	O
dp	*(long)
,	O
dn	long
)	O
;	O
MPN_NORMALIZE	O
(	O
qp	*(long)
,	O
qn	long
)	O
;	O
if	O
(	O
qp	*(long)
!=	O
PTR	O
(	O
quot	long
)	O
)	O
MPN_COPY	O
(	O
MPZ_REALLOC	O
(	O
quot	long
,	O
qn	long
)	O
,	O
qp	*(long)
,	O
qn	long
)	O
;	O
SIZ	O
(	O
quot	long
)	O
=	O
(	O
SIZ	O
(	O
num	*(struct(int,int,*(long)))
)	O
^	O
SIZ	O
(	O
den	*(struct(int,int,*(long)))
)	O
)	O
>=	O
0	int
?	O
qn	long
:	O
-	O
qn	long
;	O
TMP_FREE	O
;	O
}	O
