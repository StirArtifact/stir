int	O
swlib_pipe_pump	(int,int)->(int)
(	O
int	O
ofd	int
,	O
int	O
suction_fd	int
)	O
;	O
static	O
long	O
shcmd_getgid	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(long)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
cmd	*(void)
)	O
{	O
struct	O
group	struct(*(char),*(char),int,*(*(char)))
*	O
pw	*(struct(*(char),*(char),int,*(*(char))))
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
cmd	*(void)
->	O
group_	array(char)
)	O
)	O
{	O
pw	*(struct(*(char),*(char),int,*(*(char))))
=	O
getgrnam	(*(char))->(*(struct(*(char),*(char),int,*(*(char)))))
(	O
cmd	*(void)
->	O
group_	array(char)
)	O
;	O
if	O
(	O
pw	*(struct(*(char),*(char),int,*(*(char))))
)	O
{	O
return	O
pw	*(struct(*(char),*(char),int,*(*(char))))
->	O
gr_gid	int
;	O
}	O
else	O
{	O
return	O
-	O
2	int
;	O
}	O
}	O
else	O
{	O
return	O
-	O
1	int
;	O
}	O
}	O
static	O
long	O
shcmd_getuid	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(long)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
cmd	*(void)
)	O
{	O
struct	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
*	O
pw	*(struct(*(char),*(char),int,*(*(char))))
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
cmd	*(void)
->	O
user_	array(char)
)	O
)	O
{	O
pw	*(struct(*(char),*(char),int,*(*(char))))
=	O
getpwnam	(*(char))->(*(struct(*(char),*(char),int,int,*(char),*(char),*(char))))
(	O
cmd	*(void)
->	O
user_	array(char)
)	O
;	O
if	O
(	O
pw	*(struct(*(char),*(char),int,*(*(char))))
)	O
{	O
return	O
(	O
long	O
)	O
(	O
pw	*(struct(*(char),*(char),int,*(*(char))))
->	O
pw_uid	int
)	O
;	O
}	O
else	O
{	O
return	O
(	O
long	O
)	O
-	O
2	int
;	O
}	O
}	O
else	O
{	O
return	O
(	O
long	O
)	O
-	O
1	int
;	O
}	O
}	O
static	O
void	O
internal_redirect	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),int,*(char),int,*(char),int,int,*(char),int)->(void)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
cmd	*(void)
,	O
int	O
srcfd	int
,	O
char	O
*	O
srcfile	*(char)
,	O
int	O
dstfd	int
,	O
char	O
*	O
dstfile	*(char)
,	O
int	O
append1	int
,	O
int	O
errfd	int
,	O
char	O
*	O
errfile	*(char)
,	O
int	O
append2	int
)	O
{	O
int	O
fd	int
;	O
int	O
flags	int
;	O
mode_t	int
mode	int
;	O
if	O
(	O
srcfd	int
!=	O
0	int
||	O
srcfile	*(char)
)	O
{	O
if	O
(	O
srcfd	int
==	O
STDIN_FILENO	int
&&	O
!	O
srcfile	*(char)
)	O
{	O
;	O
}	O
else	O
if	O
(	O
srcfd	int
>	O
0	int
&&	O
!	O
srcfile	*(char)
)	O
{	O
if	O
(	O
dup2	(int,int)->(int)
(	O
srcfd	int
,	O
STDIN_FILENO	int
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"src dup error\n"	*(char)
)	O
;	O
}	O
close	*((*(void))->(int))
(	O
srcfd	int
)	O
;	O
}	O
else	O
if	O
(	O
srcfile	*(char)
)	O
{	O
if	O
(	O
(	O
fd	int
=	O
open	(*(char),int)->(int)
(	O
srcfile	*(char)
,	O
O_RDONLY	int
,	O
0	int
)	O
)	O
==	O
-	O
1	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"fatal: error opening %s\n"	*(char)
,	O
srcfile	*(char)
)	O
;	O
_exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
if	O
(	O
fd	int
!=	O
STDIN_FILENO	int
)	O
{	O
dup2	(int,int)->(int)
(	O
fd	int
,	O
STDIN_FILENO	int
)	O
;	O
}	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"fatal: internal error, invalid stdin redirection. \n"	*(char)
)	O
;	O
_exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
}	O
if	O
(	O
dstfd	int
!=	O
STDOUT_FILENO	int
||	O
dstfile	*(char)
)	O
{	O
if	O
(	O
dstfd	int
==	O
STDOUT_FILENO	int
&&	O
!	O
dstfile	*(char)
)	O
{	O
;	O
}	O
else	O
if	O
(	O
dstfd	int
>	O
STDOUT_FILENO	int
&&	O
!	O
dstfile	*(char)
)	O
{	O
if	O
(	O
dup2	(int,int)->(int)
(	O
dstfd	int
,	O
STDOUT_FILENO	int
)	O
!=	O
STDOUT_FILENO	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"dst dup error\n"	*(char)
)	O
;	O
}	O
close	*((*(void))->(int))
(	O
dstfd	int
)	O
;	O
}	O
else	O
if	O
(	O
dstfile	*(char)
)	O
{	O
flags	int
=	O
O_WRONLY	int
|	O
O_CREAT	int
;	O
if	O
(	O
append1	int
)	O
{	O
flags	int
|=	O
O_APPEND	int
;	O
}	O
else	O
{	O
flags	int
|=	O
O_TRUNC	int
;	O
}	O
mode	int
=	O
umask	(int)->(int)
(	O
cmd	*(void)
->	O
umask_	int
)	O
;	O
if	O
(	O
(	O
fd	int
=	O
open	(*(char),int)->(int)
(	O
dstfile	*(char)
,	O
flags	int
,	O
0666	int
)	O
)	O
==	O
-	O
1	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"fatal: error opening %s\n"	*(char)
,	O
dstfile	*(char)
)	O
;	O
_exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
umask	(int)->(int)
(	O
mode	int
)	O
;	O
if	O
(	O
fd	int
!=	O
STDOUT_FILENO	int
)	O
{	O
dup2	(int,int)->(int)
(	O
fd	int
,	O
STDOUT_FILENO	int
)	O
;	O
}	O
if	O
(	O
append1	int
)	O
{	O
if	O
(	O
lseek	(int,long,int)->(long)
(	O
1	int
,	O
0L	int
,	O
SEEK_END	int
)	O
==	O
-	O
1	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"error seeking to end of %s\n"	*(char)
,	O
dstfile	*(char)
)	O
;	O
}	O
}	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"fatal: internal error,"	*(char)
" invalid stdout redirection. \n"	*(char)
)	O
;	O
_exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
}	O
if	O
(	O
errfd	int
!=	O
STDERR_FILENO	int
||	O
errfile	*(char)
)	O
{	O
if	O
(	O
errfd	int
==	O
STDERR_FILENO	int
&&	O
!	O
errfile	*(char)
)	O
{	O
;	O
}	O
else	O
if	O
(	O
(	O
errfd	int
>	O
STDERR_FILENO	int
&&	O
!	O
errfile	*(char)
)	O
||	O
errfd	int
==	O
STDOUT_FILENO	int
)	O
{	O
if	O
(	O
dup2	(int,int)->(int)
(	O
errfd	int
,	O
STDERR_FILENO	int
)	O
!=	O
STDERR_FILENO	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"err dup error\n"	*(char)
)	O
;	O
}	O
close	*((*(void))->(int))
(	O
errfd	int
)	O
;	O
}	O
else	O
if	O
(	O
errfile	*(char)
)	O
{	O
flags	int
=	O
O_WRONLY	int
|	O
O_CREAT	int
;	O
if	O
(	O
append2	int
)	O
{	O
flags	int
|=	O
O_APPEND	int
;	O
}	O
else	O
{	O
flags	int
|=	O
O_TRUNC	int
;	O
}	O
mode	int
=	O
umask	(int)->(int)
(	O
cmd	*(void)
->	O
umask_	int
)	O
;	O
if	O
(	O
(	O
fd	int
=	O
open	(*(char),int)->(int)
(	O
errfile	*(char)
,	O
flags	int
,	O
0666	int
)	O
)	O
==	O
-	O
1	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"fatal: error opening %s\n"	*(char)
,	O
errfile	*(char)
)	O
;	O
_exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
umask	(int)->(int)
(	O
mode	int
)	O
;	O
if	O
(	O
fd	int
!=	O
STDERR_FILENO	int
)	O
{	O
dup2	(int,int)->(int)
(	O
fd	int
,	O
STDERR_FILENO	int
)	O
;	O
}	O
if	O
(	O
append2	int
)	O
{	O
lseek	(int,long,int)->(long)
(	O
fd	int
,	O
0L	int
,	O
SEEK_END	int
)	O
;	O
}	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"fatal: internal error,"	*(char)
" invalid stderr redirection. \n"	*(char)
)	O
;	O
_exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
}	O
}	O
static	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
shcmd_common_open	()->(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
(	O
void	O
)	O
{	O
mode_t	int
mode	int
=	O
(	O
mode_t	int
)	O
0	int
;	O
int	O
i	int
;	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
=	O
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
)	O
)	O
;	O
if	O
(	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
argvector_	*(struct(*(*(char)),int,int,long,int))
=	O
cplob_open	(int)->(*(struct(*(*(char)),int,int,long,int)))
(	O
10	int
)	O
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
argv_set_	int
=	O
0	int
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
argv_	*(*(char))
=	O
(	O
char	O
*	O
*	O
)	O
(	O
NULL	O
)	O
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
argstring_	*(char)
=	O
NULL	O
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
cmdstring_	*(char)
=	O
NULL	O
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
closefd_	int
=	O
-	O
1	int
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
pid_	int
=	O
0	int
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
status_	int
=	O
0	int
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
srcfd_	int
=	O
STDIN_FILENO	int
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
dstfd_	int
=	O
STDOUT_FILENO	int
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
errfd_	int
=	O
STDERR_FILENO	int
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
dstfile_	*(char)
=	O
(	O
char	O
*	O
)	O
NULL	O
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
srcfile_	*(char)
=	O
(	O
char	O
*	O
)	O
NULL	O
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
errfile_	*(char)
=	O
(	O
char	O
*	O
)	O
NULL	O
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
append1_	int
=	O
0	int
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
append2_	int
=	O
0	int
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
async_	int
=	O
0	int
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
close_all_fd_	int
=	O
-	O
1	int
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
child_gone_	int
=	O
0	int
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
proc_error_	int
=	O
0	int
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
esrch_	int
=	O
0	int
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
envp_	*(*(char))
=	O
environ	*(*(char))
;	O
mode	int
=	O
umask	(int)->(int)
(	O
mode	int
)	O
;	O
umask	(int)->(int)
(	O
mode	int
)	O
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
umask_	int
=	O
mode	int
;	O
(	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
user_	array(char)
)	O
[	O
0	int
]	O
=	O
'\0'	O
;	O
(	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
group_	array(char)
)	O
[	O
0	int
]	O
=	O
'\0'	O
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
f_filter_	*((int,int,*(void))->(int))
=	O
(	O
int	O
(	O
*	O
)	O
(	O
int	O
,	O
int	O
,	O
void	O
*	O
)	O
)	O
(	O
NULL	O
)	O
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
f_filter_ctrl_	*(void)
=	O
(	O
void	O
*	O
)	O
NULL	O
;	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
f_exec_	*((*(void))->(int))
=	O
shcmd_unix_execve	(*(void))->(int)
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
CLOSE_LIST_LEN	O
;	O
i	int
++	O
)	O
{	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
close_list_	array(int)
[	O
i	int
]	O
=	O
-	O
1	int
;	O
}	O
return	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
;	O
}	O
static	O
void	O
close_list	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(void)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
)	O
{	O
int	O
fd	int
;	O
int	O
i	int
=	O
0	int
;	O
while	O
(	O
i	int
<	O
CLOSE_LIST_LEN	O
)	O
{	O
fd	int
=	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
close_list_	array(int)
[	O
i	int
]	O
;	O
if	O
(	O
fd	int
>=	O
0	int
)	O
if	O
(	O
close	*((*(void))->(int))
(	O
fd	int
)	O
<	O
0	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"shcmd : close_list_: fd=%d : %s\n"	*(char)
,	O
fd	int
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
i	int
++	O
;	O
}	O
}	O
static	O
int	O
cmd_invoke	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(int)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
cmd	*(void)
)	O
{	O
int	O
uid	int
;	O
int	O
gid	int
;	O
int	O
child_exitval	int
;	O
int	O
child_pid	int
;	O
int	O
srcfd	int
=	O
cmd	*(void)
->	O
srcfd_	int
;	O
int	O
dstfd	int
=	O
cmd	*(void)
->	O
dstfd_	int
;	O
child_pid	int
=	O
swfork	O
(	O
(	O
sigset_t	struct(array(long))
*	O
)	O
(	O
NULL	O
)	O
)	O
;	O
if	O
(	O
child_pid	int
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Can't create new process.\n"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
else	O
if	O
(	O
child_pid	int
==	O
0	int
)	O
{	O
if	O
(	O
cmd	*(void)
->	O
closefd_	int
!=	O
-	O
1	int
)	O
close	*((*(void))->(int))
(	O
cmd	*(void)
->	O
closefd_	int
)	O
;	O
close_list	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(void)
(	O
cmd	*(void)
)	O
;	O
gid	int
=	O
(	O
gid_t	int
)	O
shcmd_getgid	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(long)
(	O
cmd	*(void)
)	O
;	O
if	O
(	O
shcmd_getgid	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(long)
(	O
cmd	*(void)
)	O
>=	O
0	int
)	O
{	O
if	O
(	O
setgid	(int)->(int)
(	O
(	O
gid_t	int
)	O
(	O
shcmd_getgid	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(long)
(	O
cmd	*(void)
)	O
)	O
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"setgid failed in"	*(char)
" shcmd_cmd_invoke, group=%s %s\n"	*(char)
,	O
cmd	*(void)
->	O
group_	array(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
}	O
}	O
else	O
if	O
(	O
gid	int
==	O
-	O
2	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"shcmd_getgid failed:"	*(char)
" gid not found for group=%s"	*(char)
,	O
cmd	*(void)
->	O
group_	array(char)
)	O
;	O
}	O
else	O
{	O
;	O
}	O
uid	int
=	O
(	O
uid_t	int
)	O
shcmd_getuid	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(long)
(	O
cmd	*(void)
)	O
;	O
if	O
(	O
uid	int
>=	O
0	int
)	O
{	O
if	O
(	O
setuid	(int)->(int)
(	O
(	O
uid_t	int
)	O
(	O
uid	int
)	O
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"setuid failed in"	*(char)
" shcmd_cmd_invoke, user=%s %s\n"	*(char)
,	O
cmd	*(void)
->	O
user_	array(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
}	O
}	O
else	O
if	O
(	O
uid	int
==	O
-	O
2	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"shcmd_getuid failed:"	*(char)
" uid not found for user=%s"	*(char)
,	O
cmd	*(void)
->	O
user_	array(char)
)	O
;	O
}	O
else	O
{	O
;	O
}	O
internal_redirect	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),int,*(char),int,*(char),int,int,*(char),int)->(void)
(	O
cmd	*(void)
,	O
srcfd	int
,	O
cmd	*(void)
->	O
srcfile_	*(char)
,	O
dstfd	int
,	O
cmd	*(void)
->	O
dstfile_	*(char)
,	O
cmd	*(void)
->	O
append1_	int
,	O
cmd	*(void)
->	O
errfd_	int
,	O
cmd	*(void)
->	O
errfile_	*(char)
,	O
cmd	*(void)
->	O
append2_	int
)	O
;	O
umask	(int)->(int)
(	O
cmd	*(void)
->	O
umask_	int
)	O
;	O
if	O
(	O
cmd	*(void)
->	O
argv_	*(*(char))
&&	O
cmd	*(void)
->	O
argv_	*(*(char))
[	O
0	int
]	O
&&	O
strcmp	(*(char),*(char))->(int)
(	O
cmd	*(void)
->	O
argv_	*(*(char))
[	O
0	int
]	O
,	O
SHCMD_INTERNAL_FILTER	*(char)
)	O
==	O
0	int
)	O
{	O
int	O
ret	int
;	O
if	O
(	O
cmd	*(void)
->	O
f_filter_	*((int,int,*(void))->(int))
)	O
{	O
ret	int
=	O
(	O
*	O
(	O
cmd	*(void)
->	O
f_filter_	*((int,int,*(void))->(int))
)	O
)	O
(	O
STDOUT_FILENO	int
,	O
STDIN_FILENO	int
,	O
cmd	*(void)
->	O
f_filter_ctrl_	*(void)
)	O
;	O
}	O
else	O
{	O
ret	int
=	O
swlib_pipe_pump	(int,int)->(int)
(	O
STDOUT_FILENO	int
,	O
STDIN_FILENO	int
)	O
;	O
}	O
child_exitval	int
=	O
ret	int
<	O
0	int
?	O
1	int
:	O
0	int
;	O
}	O
else	O
if	O
(	O
cmd	*(void)
->	O
argv_	*(*(char))
&&	O
cmd	*(void)
->	O
argv_	*(*(char))
[	O
0	int
]	O
&&	O
strlen	(*(char))->(long)
(	O
cmd	*(void)
->	O
argv_	*(*(char))
[	O
0	int
]	O
)	O
)	O
{	O
(	O
*	O
(	O
cmd	*(void)
->	O
f_exec_	*((*(void))->(int))
)	O
)	O
(	O
cmd	*(void)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: unable to execute %s\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
cmd	*(void)
->	O
argv_	*(*(char))
[	O
0	int
]	O
)	O
;	O
child_exitval	int
=	O
126	int
;	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"shcmd.c: illegal or null command name\n"	*(char)
)	O
;	O
child_exitval	int
=	O
1	int
;	O
}	O
_exit	(int)->(void)
(	O
child_exitval	int
)	O
;	O
}	O
else	O
{	O
if	O
(	O
srcfd	int
>	O
0	int
)	O
close	*((*(void))->(int))
(	O
srcfd	int
)	O
;	O
if	O
(	O
dstfd	int
>	O
1	int
)	O
close	*((*(void))->(int))
(	O
dstfd	int
)	O
;	O
cmd	*(void)
->	O
pid_	int
=	O
child_pid	int
;	O
return	O
child_pid	int
;	O
}	O
return	O
(	O
-	O
1	int
)	O
;	O
}	O
static	O
int	O
command_recurse	(*(*(struct(*(char),*(char),*(struct`),*(*`),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*`),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int))),*(int),int,*(int))->(int)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
*	O
cmd_vector	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
,	O
int	O
*	O
wpid	*(int)
,	O
int	O
makepipe	int
,	O
int	O
*	O
pipefd	*(int)
)	O
{	O
int	O
pid	int
;	O
int	O
pfd	array(int)
[	O
2	int
]	O
;	O
for	O
(	O
;	O
;	O
)	O
{	O
if	O
(	O
*	O
(	O
cmd_vector	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
+	O
1	int
)	O
!=	O
NULL	O
)	O
{	O
command_recurse	(*(*(struct(*(char),*(char),*(struct`),*(*`),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*`),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int))),*(int),int,*(int))->(int)
(	O
cmd_vector	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
+	O
1	int
,	O
wpid	*(int)
,	O
1	int
,	O
&	O
(	O
cmd_vector	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
[	O
0	int
]	O
->	O
dstfd_	int
)	O
)	O
;	O
}	O
if	O
(	O
makepipe	int
)	O
{	O
pipe	(array(int))->(int)
(	O
pfd	array(int)
)	O
;	O
*	O
pipefd	*(int)
=	O
pfd	array(int)
[	O
1	int
]	O
;	O
cmd_vector	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
[	O
0	int
]	O
->	O
srcfd_	int
=	O
pfd	array(int)
[	O
0	int
]	O
;	O
cmd_vector	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
[	O
0	int
]	O
->	O
closefd_	int
=	O
pfd	array(int)
[	O
1	int
]	O
;	O
}	O
pid	int
=	O
cmd_invoke	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(int)
(	O
*	O
cmd_vector	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
)	O
;	O
if	O
(	O
*	O
wpid	*(int)
==	O
0	int
)	O
*	O
wpid	*(int)
=	O
pid	int
;	O
return	O
*	O
wpid	*(int)
;	O
}	O
}	O
void	O
shcmd_add_close_fd	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),int)->(void)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
,	O
int	O
ifd	int
)	O
{	O
int	O
fd	int
;	O
int	O
i	int
=	O
0	int
;	O
fd	int
=	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
close_list_	array(int)
[	O
i	int
]	O
;	O
while	O
(	O
fd	int
>=	O
0	int
&&	O
i	int
<	O
CLOSE_LIST_LEN	O
)	O
{	O
fd	int
=	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
close_list_	array(int)
[	O
++	O
i	int
]	O
;	O
}	O
if	O
(	O
i	int
<	O
CLOSE_LIST_LEN	O
)	O
{	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
close_list_	array(int)
[	O
i	int
]	O
=	O
ifd	int
;	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"shcmd_add_close_fd() internal error\n"	*(char)
)	O
;	O
}	O
}	O
char	O
*	O
shcmd_find_in_path	(*(char),*(char))->(*(char))
(	O
char	O
*	O
ppath	*(char)
,	O
char	O
*	O
pgm	*(char)
)	O
{	O
char	O
*	O
retval	*(char)
=	O
NULL	O
;	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
st	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
;	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
;	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
name	*(char)
;	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
int	O
ret	int
;	O
if	O
(	O
strchr	(*(char),int)->(*(char))
(	O
pgm	*(char)
,	O
'/'	O
)	O
)	O
{	O
ret	int
=	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
(	O
pgm	*(char)
,	O
&	O
st	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
)	O
;	O
if	O
(	O
ret	int
<	O
0	int
)	O
return	O
NULL	O
;	O
if	O
(	O
!	O
S_ISREG	O
(	O
st	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
.	O
st_mode	int
)	O
)	O
return	O
NULL	O
;	O
return	O
pgm	*(char)
;	O
}	O
if	O
(	O
!	O
ppath	*(char)
)	O
return	O
(	O
char	O
*	O
)	O
NULL	O
;	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
10	int
)	O
;	O
name	*(char)
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
10	int
)	O
;	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_strtok	(*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char))->(*(char))
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
ppath	*(char)
,	O
":"	*(char)
)	O
;	O
while	O
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
name	*(char)
,	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
name	*(char)
,	O
"/"	*(char)
)	O
;	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
name	*(char)
,	O
pgm	*(char)
)	O
;	O
if	O
(	O
access	(*(char),int)->(int)
(	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
name	*(char)
)	O
,	O
X_OK	int
)	O
==	O
0	int
)	O
{	O
retval	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
name	*(char)
)	O
)	O
;	O
break	O
;	O
}	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_strtok	(*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char))->(*(char))
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
NULL	O
,	O
":"	*(char)
)	O
;	O
}	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
name	*(char)
)	O
;	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
return	O
retval	*(char)
;	O
}	O
int	O
shcmd_apply_redirection	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(int)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
cmd	*(void)
)	O
{	O
internal_redirect	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),int,*(char),int,*(char),int,int,*(char),int)->(void)
(	O
cmd	*(void)
,	O
cmd	*(void)
->	O
srcfd_	int
,	O
cmd	*(void)
->	O
srcfile_	*(char)
,	O
cmd	*(void)
->	O
dstfd_	int
,	O
cmd	*(void)
->	O
dstfile_	*(char)
,	O
cmd	*(void)
->	O
append1_	int
,	O
cmd	*(void)
->	O
errfd_	int
,	O
cmd	*(void)
->	O
errfile_	*(char)
,	O
cmd	*(void)
->	O
append2_	int
)	O
;	O
return	O
0	int
;	O
}	O
int	O
shcmd_reap_child	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),int)->(int)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
cmd	*(void)
,	O
int	O
flag	int
)	O
{	O
pid_t	int
pid	int
;	O
if	O
(	O
cmd	*(void)
->	O
status_	int
||	O
cmd	*(void)
->	O
child_gone_	int
)	O
{	O
cmd	*(void)
->	O
child_gone_	int
=	O
1	int
;	O
return	O
0	int
;	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
pid	int
=	O
waitpid	(int,*(int),int)->(int)
(	O
cmd	*(void)
->	O
pid_	int
,	O
&	O
(	O
cmd	*(void)
->	O
status_	int
)	O
,	O
flag	int
)	O
;	O
if	O
(	O
pid	int
<	O
0	int
)	O
{	O
E_DEBUG	O
(	O
"ERROR"	*(char)
)	O
;	O
if	O
(	O
errno	O
==	O
ECHILD	int
)	O
{	O
E_DEBUG	O
(	O
"ECHILD"	*(char)
)	O
;	O
cmd	*(void)
->	O
child_gone_	int
=	O
1	int
;	O
}	O
cmd	*(void)
->	O
proc_error_	int
=	O
1	int
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"shcmd: waitpid return error (pid=%d) for %s: %s\n"	*(char)
,	O
(	O
int	O
)	O
(	O
cmd	*(void)
->	O
pid_	int
)	O
,	O
cmd	*(void)
->	O
argv_	*(*(char))
[	O
0	int
]	O
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
}	O
else	O
if	O
(	O
pid	int
>	O
0	int
)	O
{	O
E_DEBUG3	O
(	O
"Normal stop: pid=%d: %s"	*(char)
,	O
(	O
int	O
)	O
(	O
cmd	*(void)
->	O
pid_	int
)	O
,	O
cmd	*(void)
->	O
argv_	*(*(char))
[	O
0	int
]	O
)	O
;	O
E_DEBUG3	O
(	O
"exit value for %s is %d"	*(char)
,	O
cmd	*(void)
->	O
argv_	*(*(char))
[	O
0	int
]	O
,	O
shcmd_get_exitval	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(int)
(	O
cmd	*(void)
)	O
)	O
;	O
cmd	*(void)
->	O
child_gone_	int
=	O
1	int
;	O
}	O
return	O
pid	int
;	O
}	O
int	O
shcmd_cmdvec_wait	(*(*(struct(*(char),*(char),*(struct`),*(*`),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*`),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int))))->(int)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
*	O
cmd_vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
)	O
{	O
return	O
shcmd_wait	(*(*(struct(*(char),*(char),*(struct`),*(*`),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*`),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int))))->(int)
(	O
cmd_vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
)	O
;	O
}	O
int	O
shcmd_cmdvec_kill	(*(*(struct(*(char),*(char),*(struct`),*(*`),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*`),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int))),int,int)->(int)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
*	O
cmd_vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
,	O
int	O
from	int
,	O
int	O
direction	int
)	O
{	O
int	O
ret	int
=	O
0	int
;	O
int	O
i	int
=	O
from	int
;	O
while	O
(	O
i	int
>=	O
0	int
&&	O
cmd_vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
[	O
i	int
]	O
)	O
{	O
if	O
(	O
cmd_vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
[	O
i	int
]	O
->	O
status_	int
==	O
0	int
&&	O
cmd_vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
[	O
i	int
]	O
->	O
esrch_	int
==	O
0	int
&&	O
cmd_vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
[	O
i	int
]	O
->	O
child_gone_	int
==	O
0	int
)	O
{	O
ret	int
=	O
kill	(int,int)->(int)
(	O
cmd_vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
[	O
i	int
]	O
->	O
pid_	int
,	O
SIGTERM	int
)	O
;	O
if	O
(	O
ret	int
<	O
0	int
)	O
{	O
if	O
(	O
errno	O
==	O
ESRCH	int
)	O
{	O
cmd_vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
[	O
i	int
]	O
->	O
esrch_	int
=	O
1	int
;	O
}	O
}	O
}	O
if	O
(	O
direction	int
==	O
SHC_DIR_UP	int
)	O
i	int
++	O
;	O
else	O
i	int
--	O
;	O
}	O
return	O
ret	int
;	O
}	O
int	O
shcmd_cmdvec_wait2	(*(*(struct(*(char),*(char),*(struct`),*(*`),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*`),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int))))->(int)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
*	O
cmd_vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
)	O
{	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
*	O
cmdv	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
=	O
cmd_vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
;	O
int	O
ncmds	int
=	O
0	int
;	O
int	O
ncmds_exited	int
=	O
0	int
;	O
int	O
i	int
;	O
int	O
ret	int
;	O
int	O
highest_index_with_error	int
;	O
while	O
(	O
*	O
cmdv	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
)	O
{	O
cmdv	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
++	O
;	O
ncmds	int
++	O
;	O
}	O
E_DEBUG2	O
(	O
"No. of commands in pipeline: ncmds = [%d]"	*(char)
,	O
ncmds	int
)	O
;	O
i	int
=	O
0	int
;	O
highest_index_with_error	int
=	O
0	int
;	O
do	O
{	O
E_DEBUG	O
(	O
"Loop Begin"	*(char)
)	O
;	O
for	O
(	O
i	int
=	O
ncmds	int
-	O
1	int
;	O
i	int
>=	O
0	int
;	O
i	int
--	O
)	O
{	O
E_DEBUG3	O
(	O
"calling reap_child for for cmd_vec[%d]: %s"	*(char)
,	O
i	int
,	O
cmd_vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
[	O
i	int
]	O
->	O
argv_	*(*(char))
[	O
0	int
]	O
)	O
;	O
ret	int
=	O
shcmd_reap_child	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),int)->(int)
(	O
cmd_vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
[	O
i	int
]	O
,	O
WNOHANG	int
)	O
;	O
E_DEBUG3	O
(	O
"finished reap_child for for cmd_vec[%d]: ret=%d"	*(char)
,	O
i	int
,	O
ret	int
)	O
;	O
if	O
(	O
ret	int
>	O
0	int
)	O
{	O
E_DEBUG2	O
(	O
"good stop for %s"	*(char)
,	O
cmd_vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
[	O
i	int
]	O
->	O
argv_	*(*(char))
[	O
0	int
]	O
)	O
;	O
ncmds_exited	int
++	O
;	O
}	O
else	O
if	O
(	O
ret	int
==	O
0	int
)	O
{	O
if	O
(	O
cmd_vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
[	O
i	int
]	O
->	O
child_gone_	int
==	O
0	int
)	O
{	O
E_DEBUG2	O
(	O
"still waiting on pid %d"	*(char)
,	O
(	O
int	O
)	O
(	O
cmd_vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
[	O
i	int
]	O
->	O
pid_	int
)	O
)	O
;	O
;	O
}	O
;	O
}	O
else	O
{	O
if	O
(	O
errno	O
==	O
ECHILD	int
)	O
{	O
E_DEBUG2	O
(	O
"ECHILD on pid %d"	*(char)
,	O
(	O
int	O
)	O
(	O
cmd_vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
[	O
i	int
]	O
->	O
pid_	int
)	O
)	O
;	O
cmd_vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
[	O
i	int
]	O
->	O
proc_error_	int
=	O
1	int
;	O
ncmds_exited	int
++	O
;	O
}	O
else	O
{	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"shcmd: waitpid return error (line=%d) for [%d]: %s\n"	*(char)
,	O
__LINE__	O
,	O
(	O
int	O
)	O
(	O
cmd_vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
[	O
i	int
]	O
->	O
pid_	int
)	O
,	O
cmd_vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
[	O
i	int
]	O
->	O
argv_	*(*(char))
[	O
0	int
]	O
)	O
;	O
}	O
}	O
if	O
(	O
cmd_vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
[	O
i	int
]	O
->	O
proc_error_	int
)	O
{	O
if	O
(	O
i	int
>	O
highest_index_with_error	int
)	O
highest_index_with_error	int
=	O
i	int
;	O
}	O
}	O
if	O
(	O
highest_index_with_error	int
)	O
{	O
E_DEBUG2	O
(	O
"Killing commands at index=%d"	*(char)
,	O
highest_index_with_error	int
)	O
;	O
shcmd_cmdvec_kill	(*(*(struct(*(char),*(char),*(struct`),*(*`),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*`),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int))),int,int)->(int)
(	O
cmd_vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
,	O
highest_index_with_error	int
,	O
SHC_DIR_UP	int
)	O
;	O
}	O
highest_index_with_error	int
=	O
0	int
;	O
E_DEBUG	O
(	O
"Sleeping"	*(char)
)	O
;	O
usleep	(int)->(int)
(	O
100000	int
)	O
;	O
E_DEBUG	O
(	O
"Loop End"	*(char)
)	O
;	O
}	O
while	O
(	O
ncmds_exited	int
<	O
ncmds	int
)	O
;	O
E_DEBUG	O
(	O
"Done"	*(char)
)	O
;	O
return	O
shcmd_get_exitval	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(int)
(	O
cmd_vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
[	O
ncmds	int
-	O
1	int
]	O
)	O
;	O
}	O
int	O
shcmd_wait	(*(*(struct(*(char),*(char),*(struct`),*(*`),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*`),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int))))->(int)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
*	O
cmd_vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
)	O
{	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
*	O
cmdv	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
=	O
cmd_vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
;	O
pid_t	int
pid	int
;	O
int	O
ncmds	int
=	O
0	int
;	O
int	O
i	int
;	O
int	O
ret	int
;	O
while	O
(	O
*	O
cmdv	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
)	O
{	O
cmdv	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
++	O
;	O
ncmds	int
++	O
;	O
}	O
cmdv	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
--	O
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
shcmd_reap_child	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),int)->(int)
(	O
*	O
cmdv	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
,	O
0	int
)	O
>	O
0	int
)	O
{	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
ncmds	int
--	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
ncmds	int
;	O
i	int
++	O
)	O
{	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
pid	int
=	O
shcmd_reap_child	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),int)->(int)
(	O
cmd_vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
[	O
i	int
]	O
,	O
0	int
)	O
;	O
}	O
}	O
ret	int
=	O
shcmd_get_exitval	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(int)
(	O
*	O
cmdv	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
)	O
;	O
return	O
ret	int
;	O
}	O
int	O
shcmd_cmdvec_exec	(*(*(struct(*(char),*(char),*(struct`),*(*`),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*`),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int))))->(int)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
*	O
cmd_vector	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
)	O
{	O
return	O
shcmd_command	(*(*(struct(*(char),*(char),*(struct`),*(*`),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*`),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int))))->(int)
(	O
cmd_vector	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
)	O
;	O
}	O
int	O
shcmd_unix_exec	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(int)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
cmd	*(void)
)	O
{	O
if	O
(	O
(	O
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
)	O
cmd	*(void)
)	O
->	O
close_all_fd_	int
>=	O
0	int
)	O
swgp_close_all_fd	(int)->(int)
(	O
(	O
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
)	O
cmd	*(void)
)	O
->	O
close_all_fd_	int
)	O
;	O
return	O
execve	(*(char),array(*(char)),array(*(char)))->(int)
(	O
cmd	*(void)
->	O
argv_	*(*(char))
[	O
0	int
]	O
,	O
cmd	*(void)
->	O
argv_	*(*(char))
,	O
cmd	*(void)
->	O
envp_	*(*(char))
)	O
;	O
}	O
int	O
shcmd_unix_execvp	(*(void))->(int)
(	O
void	O
*	O
cmd	*(void)
)	O
{	O
if	O
(	O
(	O
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
)	O
cmd	*(void)
)	O
->	O
close_all_fd_	int
>=	O
0	int
)	O
swgp_close_all_fd	(int)->(int)
(	O
(	O
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
)	O
cmd	*(void)
)	O
->	O
close_all_fd_	int
)	O
;	O
return	O
execvp	(*(char),array(*(char)))->(int)
(	O
(	O
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
)	O
cmd	*(void)
)	O
->	O
argv_	*(*(char))
[	O
0	int
]	O
,	O
(	O
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
)	O
cmd	*(void)
)	O
->	O
argv_	*(*(char))
)	O
;	O
}	O
int	O
shcmd_unix_execve	(*(void))->(int)
(	O
void	O
*	O
cmd	*(void)
)	O
{	O
if	O
(	O
(	O
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
)	O
cmd	*(void)
)	O
->	O
close_all_fd_	int
>=	O
0	int
)	O
swgp_close_all_fd	(int)->(int)
(	O
(	O
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
)	O
cmd	*(void)
)	O
->	O
close_all_fd_	int
)	O
;	O
return	O
execve	(*(char),array(*(char)),array(*(char)))->(int)
(	O
(	O
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
)	O
cmd	*(void)
)	O
->	O
argv_	*(*(char))
[	O
0	int
]	O
,	O
(	O
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
)	O
cmd	*(void)
)	O
->	O
argv_	*(*(char))
,	O
(	O
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
)	O
cmd	*(void)
)	O
->	O
envp_	*(*(char))
)	O
;	O
}	O
int	O
shcmd_command	(*(*(struct(*(char),*(char),*(struct`),*(*`),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*`),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int))))->(int)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
*	O
cmd_vector	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
)	O
{	O
int	O
pids	int
=	O
0	int
;	O
return	O
command_recurse	(*(*(struct(*(char),*(char),*(struct`),*(*`),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*`),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int))),*(int),int,*(int))->(int)
(	O
cmd_vector	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
,	O
&	O
pids	int
,	O
0	int
,	O
NULL	O
)	O
;	O
}	O
int	O
shcmd_do_tainted_data_check	(*(char))->(int)
(	O
char	O
*	O
cmdstring	*(char)
)	O
{	O
if	O
(	O
strpbrk	(*(char),*(char))->(*(char))
(	O
cmdstring	*(char)
,	O
SHCMD_TAINTED_CHARS	*(char)
)	O
)	O
{	O
return	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
shcmd_open	()->(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
(	O
void	O
)	O
{	O
return	O
shcmd_common_open	()->(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
(	O
)	O
;	O
}	O
int	O
shcmd_cmdvec_debug_show_to_file	(*(*(struct(*(char),*(char),*(struct`),*(*`),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*`),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
*	O
vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
,	O
FILE	struct
*	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
*	O
pv	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
=	O
vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
;	O
while	O
(	O
*	O
pv	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
)	O
{	O
shcmd_debug_show_to_file	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
*	O
pv	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
,	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
pv	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
++	O
;	O
}	O
return	O
0	int
;	O
}	O
int	O
shcmd_debug_show	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(int)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
cmd	*(void)
)	O
{	O
return	O
shcmd_debug_show_to_file	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
cmd	*(void)
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
int	O
shcmd_debug_show_to_file	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
cmd	*(void)
,	O
FILE	struct
*	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
char	O
*	O
*	O
vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
=	O
cmd	*(void)
->	O
argv_	*(*(char))
;	O
if	O
(	O
cmd	*(void)
->	O
cmdstring_	*(char)
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%p: command string = [%s]\n"	*(char)
,	O
(	O
void	O
*	O
)	O
cmd	*(void)
,	O
cmd	*(void)
->	O
cmdstring_	*(char)
)	O
;	O
else	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%p: command string = nil\n"	*(char)
,	O
(	O
void	O
*	O
)	O
cmd	*(void)
)	O
;	O
if	O
(	O
vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
)	O
{	O
while	O
(	O
*	O
vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"<[%s]>"	*(char)
,	O
*	O
vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
)	O
;	O
vec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
++	O
;	O
}	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"nil\n"	*(char)
)	O
;	O
}	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n     pid=%d exit value=%d\n"	*(char)
,	O
(	O
int	O
)	O
(	O
cmd	*(void)
->	O
pid_	int
)	O
,	O
shcmd_get_exitval	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(int)
(	O
cmd	*(void)
)	O
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"     status=%d, srcfd=%d; dstfd=%d\n"	*(char)
,	O
cmd	*(void)
->	O
status_	int
,	O
cmd	*(void)
->	O
srcfd_	int
,	O
cmd	*(void)
->	O
dstfd_	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"     user=[%s] group=[%s]\n"	*(char)
,	O
cmd	*(void)
->	O
user_	array(char)
,	O
cmd	*(void)
->	O
group_	array(char)
)	O
;	O
return	O
0	int
;	O
}	O
int	O
shcmd_write_command_to_buf	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
cmd	*(void)
,	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
char	O
*	O
*	O
arg	*(char)
=	O
cmd	*(void)
->	O
argv_	*(*(char))
;	O
if	O
(	O
arg	*(char)
)	O
{	O
while	O
(	O
*	O
arg	*(char)
)	O
{	O
if	O
(	O
strpbrk	(*(char),*(char))->(*(char))
(	O
*	O
arg	*(char)
,	O
"; &*?$|<>`\""	*(char)
)	O
)	O
{	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
STROB_DO_APPEND	int
,	O
"'%s'"	*(char)
,	O
*	O
arg	*(char)
)	O
;	O
}	O
else	O
if	O
(	O
strlen	(*(char))->(long)
(	O
*	O
arg	*(char)
)	O
==	O
0	int
)	O
{	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
STROB_DO_APPEND	int
,	O
"''"	*(char)
)	O
;	O
}	O
else	O
{	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
STROB_DO_APPEND	int
,	O
"%s"	*(char)
,	O
*	O
arg	*(char)
)	O
;	O
}	O
arg	*(char)
++	O
;	O
if	O
(	O
*	O
arg	*(char)
)	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
STROB_DO_APPEND	int
,	O
" "	*(char)
)	O
;	O
}	O
}	O
return	O
0	int
;	O
}	O
int	O
shcmd_debug_show_command	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),int)->(int)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
cmd	*(void)
,	O
int	O
fd	int
)	O
{	O
int	O
ret	int
;	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
10	int
)	O
;	O
shcmd_write_command_to_buf	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
cmd	*(void)
,	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
STROB_DO_APPEND	int
,	O
"\n"	*(char)
)	O
;	O
ret	int
=	O
uxfio_write	(int,*(void),long)->(long)
(	O
fd	int
,	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
,	O
strob_strlen	(*(struct(*(char),*(char),int,int,int,char,int)))->(long)
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
;	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
return	O
ret	int
;	O
}	O
void	O
shcmd_close	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(void)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
)	O
{	O
cplob_close	(*(struct(*(*(char)),int,int,long,int)))->(void)
(	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
argvector_	*(struct(*(*(char)),int,int,long,int))
)	O
;	O
if	O
(	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
dstfile_	*(char)
)	O
swbis_free	O
(	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
dstfile_	*(char)
)	O
;	O
if	O
(	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
srcfile_	*(char)
)	O
swbis_free	O
(	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
srcfile_	*(char)
)	O
;	O
if	O
(	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
errfile_	*(char)
)	O
swbis_free	O
(	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
errfile_	*(char)
)	O
;	O
if	O
(	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
cmdstring_	*(char)
)	O
swbis_free	O
(	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
cmdstring_	*(char)
)	O
;	O
if	O
(	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
argv_	*(*(char))
&&	O
!	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
argv_set_	int
)	O
swbis_free	O
(	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
argv_	*(*(char))
)	O
;	O
if	O
(	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
argstring_	*(char)
)	O
swbis_free	O
(	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
argstring_	*(char)
)	O
;	O
swbis_free	O
(	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
)	O
;	O
}	O
void	O
shcmd_set_exec_function	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),*(char))->(void)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
,	O
char	O
*	O
form	*(char)
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
form	*(char)
,	O
"execvp"	*(char)
)	O
==	O
0	int
)	O
{	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
f_exec_	*((*(void))->(int))
=	O
shcmd_unix_execvp	(*(void))->(int)
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
form	*(char)
,	O
"execve"	*(char)
)	O
==	O
0	int
)	O
{	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
f_exec_	*((*(void))->(int))
=	O
shcmd_unix_execve	(*(void))->(int)
;	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"shcmd_set_exec_function:"	*(char)
" no effect, invalid function\n"	*(char)
)	O
;	O
}	O
}	O
void	O
shcmd_set_dstfd	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),int)->(void)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
,	O
int	O
fd	int
)	O
{	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
dstfd_	int
=	O
fd	int
;	O
}	O
void	O
shcmd_set_append	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),int)->(void)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
,	O
int	O
do_append	int
)	O
{	O
shcmd_set_append1	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),int)->(void)
(	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
,	O
do_append	int
)	O
;	O
}	O
void	O
shcmd_set_append1	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),int)->(void)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
,	O
int	O
do_append	int
)	O
{	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
append1_	int
=	O
do_append	int
;	O
}	O
void	O
shcmd_set_append2	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),int)->(void)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
,	O
int	O
do_append	int
)	O
{	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
append2_	int
=	O
do_append	int
;	O
}	O
void	O
shcmd_set_srcfile	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),*(char))->(void)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
,	O
char	O
*	O
name	*(char)
)	O
{	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
srcfile_	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
name	*(char)
)	O
;	O
}	O
void	O
shcmd_set_dstfile	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),*(char))->(void)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
,	O
char	O
*	O
name	*(char)
)	O
{	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
dstfile_	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
name	*(char)
)	O
;	O
}	O
void	O
shcmd_set_errfile	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),*(char))->(void)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
,	O
char	O
*	O
name	*(char)
)	O
{	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
errfile_	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
name	*(char)
)	O
;	O
}	O
void	O
shcmd_set_srcfd	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),int)->(void)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
,	O
int	O
fd	int
)	O
{	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
srcfd_	int
=	O
fd	int
;	O
}	O
void	O
shcmd_set_errfd	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),int)->(void)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
,	O
int	O
fd	int
)	O
{	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
errfd_	int
=	O
fd	int
;	O
}	O
int	O
shcmd_get_srcfd	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(int)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
)	O
{	O
return	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
srcfd_	int
;	O
}	O
int	O
shcmd_get_dstfd	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(int)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
)	O
{	O
return	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
dstfd_	int
;	O
}	O
int	O
shcmd_get_errfd	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(int)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
)	O
{	O
return	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
errfd_	int
;	O
}	O
pid_t	int
shcmd_get_pid	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(int)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
)	O
{	O
return	O
shcmd	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
->	O
pid_	int
;	O
}	O
int	O
shcmd_get_exitval	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(int)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
cmd	*(void)
)	O
{	O
if	O
(	O
cmd	*(void)
->	O
pid_	int
&&	O
WIFEXITED	O
(	O
cmd	*(void)
->	O
status_	int
)	O
)	O
{	O
return	O
WEXITSTATUS	O
(	O
cmd	*(void)
->	O
status_	int
)	O
;	O
}	O
else	O
{	O
return	O
SHCMD_UNSET_EXITVAL	int
;	O
}	O
}	O
char	O
*	O
*	O
shcmd_get_envp	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(*(*(char)))
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
cmd	*(void)
)	O
{	O
return	O
cmd	*(void)
->	O
envp_	*(*(char))
;	O
}	O
void	O
shcmd_set_envp	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),*(*(char)))->(void)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
cmd	*(void)
,	O
char	O
*	O
*	O
env	*(*(char))
)	O
{	O
cmd	*(void)
->	O
envp_	*(*(char))
=	O
env	*(*(char))
;	O
}	O
mode_t	int
shcmd_get_umask	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(int)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
cmd	*(void)
)	O
{	O
return	O
cmd	*(void)
->	O
umask_	int
;	O
}	O
void	O
shcmd_set_umask	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),int)->(void)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
cmd	*(void)
,	O
mode_t	int
mode	int
)	O
{	O
cmd	*(void)
->	O
umask_	int
=	O
(	O
int	O
)	O
mode	int
;	O
}	O
char	O
*	O
*	O
shcmd_get_argvector	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(*(*(char)))
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
cmd	*(void)
)	O
{	O
return	O
cplob_get_list	(*(struct(*(*(char)),int,int,long,int)))->(*(*(char)))
(	O
cmd	*(void)
->	O
argvector_	*(struct(*(*(char)),int,int,long,int))
)	O
;	O
}	O
char	O
*	O
*	O
shcmd_add_arg	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),*(char))->(*(*(char)))
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
cmd	*(void)
,	O
char	O
*	O
arg	*(char)
)	O
{	O
cplob_add_nta	(*(struct(*(*(char)),int,int,long,int)),*(char))->(void)
(	O
cmd	*(void)
->	O
argvector_	*(struct(*(*(char)),int,int,long,int))
,	O
strdup	(*(char))->(*(char))
(	O
arg	*(char)
)	O
)	O
;	O
cmd	*(void)
->	O
argv_set_	int
=	O
1	int
;	O
cmd	*(void)
->	O
argv_	*(*(char))
=	O
cplob_get_list	(*(struct(*(*(char)),int,int,long,int)))->(*(*(char)))
(	O
cmd	*(void)
->	O
argvector_	*(struct(*(*(char)),int,int,long,int))
)	O
;	O
return	O
cmd	*(void)
->	O
argv_	*(*(char))
;	O
}	O
void	O
shcmd_set_argv	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),*(*(char)))->(void)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
cmd	*(void)
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
cmd	*(void)
->	O
argv_set_	int
=	O
1	int
;	O
cmd	*(void)
->	O
argv_	*(*(char))
=	O
argv	*(*(char))
;	O
if	O
(	O
cmd	*(void)
->	O
cmdstring_	*(char)
)	O
swbis_free	O
(	O
cmd	*(void)
->	O
cmdstring_	*(char)
)	O
;	O
cmd	*(void)
->	O
cmdstring_	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
argv	*(*(char))
[	O
0	int
]	O
)	O
;	O
}	O
void	O
shcmd_set_user	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),*(char))->(void)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
cmd	*(void)
,	O
char	O
*	O
name	*(char)
)	O
{	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
cmd	*(void)
->	O
user_	array(char)
,	O
name	*(char)
,	O
sizeof	O
(	O
cmd	*(void)
->	O
user_	array(char)
)	O
-	O
1	int
)	O
;	O
cmd	*(void)
->	O
user_	array(char)
[	O
sizeof	O
(	O
cmd	*(void)
->	O
user_	array(char)
)	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
}	O
void	O
shcmd_set_group	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),*(char))->(void)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
cmd	*(void)
,	O
char	O
*	O
name	*(char)
)	O
{	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
cmd	*(void)
->	O
group_	array(char)
,	O
name	*(char)
,	O
sizeof	O
(	O
cmd	*(void)
->	O
group_	array(char)
)	O
-	O
1	int
)	O
;	O
cmd	*(void)
->	O
group_	array(char)
[	O
sizeof	O
(	O
cmd	*(void)
->	O
group_	array(char)
)	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
}	O
char	O
*	O
shcmd_get_user	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(*(char))
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
cmd	*(void)
)	O
{	O
return	O
cmd	*(void)
->	O
user_	array(char)
;	O
}	O
char	O
*	O
shcmd_get_group	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))->(*(char))
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
cmd	*(void)
)	O
{	O
return	O
cmd	*(void)
->	O
group_	array(char)
;	O
}	O
void	O
shcmd_set_lowest_close_fd	(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)),int)->(void)
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
cmd	*(void)
,	O
int	O
fd	int
)	O
{	O
cmd	*(void)
->	O
close_all_fd_	int
=	O
fd	int
;	O
}	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
shcmd_get_last_command	(*(*(struct(*(char),*(char),*(struct`),*(*`),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*`),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int))))->(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
(	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
*	O
cmdvec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
)	O
{	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
*	O
v	int
;	O
SHCMD	struct(*(char),*(char),*(struct(*(*(char)),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int)
*	O
last	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
;	O
last	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
=	O
NULL	O
;	O
v	int
=	O
cmdvec	*(*(struct(*(char),*(char),*(struct(*`,int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*`)->(int)),*((int,int,*`)->(int)),*(void),int,int,int,int)))
;	O
while	O
(	O
*	O
v	int
)	O
{	O
last	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
=	O
*	O
v	int
;	O
v	int
++	O
;	O
}	O
return	O
last	*(struct(*(char),*(char),*(struct(*(*`),int,int,long,int)),*(*(char)),int,int,int,int,int,*(char),*(char),*(char),int,int,int,int,int,*(*(char)),array(char),array(char),int,array(int),*((*(void))->(int)),*((int,int,*(void))->(int)),*(void),int,int,int,int))
;	O
}	O
