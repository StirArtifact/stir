static	O
int	O
col	int
=	O
0	int
;	O
static	O
int	O
out_row	int
=	O
1	int
;	O
static	O
int	O
in_row	int
=	O
0	int
;	O
static	O
int	O
no_split_flag	int
=	O
0	int
;	O
static	O
int	O
skip_flag	int
=	O
0	int
;	O
static	O
int	O
link_flag	int
=	O
0	int
;	O
static	O
int	O
verbatim_flag	int
=	O
0	int
;	O
static	O
int	O
node	*(struct)
=	O
0	int
;	O
static	O
const	O
char	O
*	O
c_out	*(char)
;	O
static	O
FILE	struct
*	O
f_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
static	O
const	O
char	O
*	O
c_in	*(char)
;	O
static	O
int	O
indentation	int
;	O
static	O
int	O
tp_flag	int
;	O
static	O
char	O
*	O
topics	*(char)
=	O
NULL	O
;	O
struct	O
node	*(struct)
{	O
char	O
*	O
node	*(struct)
;	O
char	O
*	O
lname	*(char)
;	O
struct	O
node	*(struct)
*	O
next	*(struct(*(void),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`)))))
;	O
int	O
heading_level	int
;	O
}	O
;	O
static	O
struct	O
node	*(struct)
nodes	struct(*(char),*(char),*(struct(*(char),*(char),*(struct(*`,*`,*`,int)),int)),int)
;	O
static	O
struct	O
node	*(struct)
*	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
;	O
static	O
size_t	long
persistent_fread	(*(void),long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
void	O
*	O
data	*(void)
,	O
size_t	long
len	int
,	O
FILE	struct
*	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
size_t	long
count	int
;	O
size_t	long
bytes_done	long
=	O
0	int
;	O
char	O
*	O
ptr	*(*(void))
=	O
(	O
char	O
*	O
)	O
data	*(void)
;	O
if	O
(	O
len	int
<=	O
0	int
)	O
return	O
0	int
;	O
while	O
(	O
bytes_done	long
<	O
len	int
)	O
{	O
count	int
=	O
len	int
-	O
bytes_done	long
;	O
if	O
(	O
count	int
>	O
MAX_STREAM_BLOCK	int
)	O
count	int
=	O
MAX_STREAM_BLOCK	int
;	O
count	int
=	O
fread	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
ptr	*(*(void))
,	O
1	int
,	O
count	int
,	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
count	int
<=	O
0	int
)	O
return	O
0	int
;	O
bytes_done	long
+=	O
count	int
;	O
ptr	*(*(void))
+=	O
count	int
;	O
}	O
return	O
bytes_done	long
;	O
}	O
static	O
size_t	long
persistent_fwrite	(*(void),long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
const	O
void	O
*	O
data	*(void)
,	O
size_t	long
len	int
,	O
FILE	struct
*	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
size_t	long
count	int
;	O
size_t	long
bytes_done	long
=	O
0	int
;	O
const	O
char	O
*	O
ptr	*(*(void))
=	O
(	O
const	O
char	O
*	O
)	O
data	*(void)
;	O
if	O
(	O
len	int
<=	O
0	int
)	O
return	O
0	int
;	O
while	O
(	O
bytes_done	long
<	O
len	int
)	O
{	O
count	int
=	O
len	int
-	O
bytes_done	long
;	O
if	O
(	O
count	int
>	O
MAX_STREAM_BLOCK	int
)	O
count	int
=	O
MAX_STREAM_BLOCK	int
;	O
count	int
=	O
fwrite	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
ptr	*(*(void))
,	O
1	int
,	O
count	int
,	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
count	int
<=	O
0	int
)	O
return	O
0	int
;	O
bytes_done	long
+=	O
count	int
;	O
ptr	*(*(void))
+=	O
count	int
;	O
}	O
return	O
bytes_done	long
;	O
}	O
static	O
void	O
print_error	(*(char))->(void)
(	O
const	O
char	O
*	O
message	*(char)
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"man2hlp: %s in file \"%s\" on line %d\n"	*(char)
,	O
message	*(char)
,	O
c_in	*(char)
,	O
in_row	int
)	O
;	O
}	O
static	O
FILE	struct
*	O
fopen_check	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
const	O
char	O
*	O
filename	*(char)
,	O
const	O
char	O
*	O
flags	enum(int,int,int,int)
)	O
{	O
char	O
tmp	array(char)
[	O
BUFFER_SIZE	int
]	O
;	O
FILE	struct
*	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
filename	*(char)
,	O
flags	enum(int,int,int,int)
)	O
;	O
if	O
(	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
==	O
NULL	O
)	O
{	O
g_snprintf	(*(char),long,*(char))->(int)
(	O
tmp	array(char)
,	O
sizeof	O
(	O
tmp	array(char)
)	O
,	O
"man2hlp: Cannot open file \"%s\""	*(char)
,	O
filename	*(char)
)	O
;	O
perror	(*(char))->(void)
(	O
tmp	array(char)
)	O
;	O
exit	(int)->(void)
(	O
3	int
)	O
;	O
}	O
return	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
}	O
static	O
void	O
fclose_check	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
FILE	struct
*	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
if	O
(	O
ferror	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
perror	(*(char))->(void)
(	O
"man2hlp: File error"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
3	int
)	O
;	O
}	O
if	O
(	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
perror	(*(char))->(void)
(	O
"man2hlp: Cannot close file"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
3	int
)	O
;	O
}	O
}	O
static	O
void	O
newline	()->(void)
(	O
void	O
)	O
{	O
out_row	int
++	O
;	O
col	int
=	O
0	int
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
f_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
}	O
static	O
int	O
string_len	long
(	O
const	O
char	O
*	O
buffer	*(char)
)	O
{	O
static	O
int	O
anchor_flag	int
=	O
0	int
;	O
static	O
int	O
link_flag	int
=	O
0	int
;	O
int	O
backslash_flag	int
=	O
0	int
;	O
int	O
c	int
;	O
int	O
len	int
=	O
0	int
;	O
while	O
(	O
*	O
(	O
buffer	*(char)
)	O
)	O
{	O
c	int
=	O
*	O
buffer	*(char)
++	O
;	O
if	O
(	O
c	int
==	O
CHAR_LINK_POINTER	char
)	O
link_flag	int
=	O
1	int
;	O
else	O
if	O
(	O
c	int
==	O
CHAR_LINK_END	char
)	O
link_flag	int
=	O
0	int
;	O
else	O
if	O
(	O
c	int
==	O
CHAR_NODE_END	char
)	O
{	O
anchor_flag	int
=	O
1	int
;	O
len	int
++	O
;	O
}	O
if	O
(	O
c	int
>=	O
0	int
&&	O
c	int
<	O
32	int
)	O
continue	O
;	O
if	O
(	O
c	int
==	O
'\\'	O
&&	O
!	O
backslash_flag	int
)	O
{	O
backslash_flag	int
=	O
1	int
;	O
continue	O
;	O
}	O
backslash_flag	int
=	O
0	int
;	O
if	O
(	O
!	O
anchor_flag	int
&&	O
!	O
link_flag	int
)	O
len	int
++	O
;	O
if	O
(	O
anchor_flag	int
&&	O
c	int
==	O
']'	O
)	O
{	O
anchor_flag	int
=	O
0	int
;	O
}	O
}	O
return	O
len	int
;	O
}	O
static	O
void	O
print_string	(*(char))->(void)
(	O
char	O
*	O
buffer	*(char)
)	O
{	O
int	O
len	int
;	O
int	O
c	int
;	O
int	O
backslash_flag	int
=	O
0	int
;	O
if	O
(	O
skip_flag	int
)	O
return	O
;	O
if	O
(	O
verbatim_flag	int
)	O
{	O
while	O
(	O
*	O
(	O
buffer	*(char)
)	O
)	O
{	O
c	int
=	O
*	O
buffer	*(char)
++	O
;	O
if	O
(	O
c	int
==	O
'\\'	O
&&	O
!	O
backslash_flag	int
)	O
{	O
backslash_flag	int
=	O
1	int
;	O
continue	O
;	O
}	O
backslash_flag	int
=	O
0	int
;	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
c	int
,	O
f_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
}	O
else	O
{	O
buffer	*(char)
=	O
strtok	(*(char),*(char))->(*(char))
(	O
buffer	*(char)
,	O
" \t\n"	*(char)
)	O
;	O
while	O
(	O
buffer	*(char)
)	O
{	O
if	O
(	O
*	O
(	O
buffer	*(char)
)	O
)	O
{	O
len	int
=	O
string_len	long
(	O
buffer	*(char)
)	O
;	O
if	O
(	O
col	int
+	O
len	int
>=	O
HELP_TEXT_WIDTH	int
)	O
newline	()->(void)
(	O
)	O
;	O
if	O
(	O
col	int
>	O
0	int
)	O
{	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
' '	O
,	O
f_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
col	int
++	O
;	O
}	O
else	O
if	O
(	O
indentation	int
)	O
{	O
while	O
(	O
col	int
++	O
<	O
indentation	int
)	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
' '	O
,	O
f_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
while	O
(	O
*	O
(	O
buffer	*(char)
)	O
)	O
{	O
c	int
=	O
*	O
buffer	*(char)
++	O
;	O
if	O
(	O
c	int
==	O
'\\'	O
&&	O
!	O
backslash_flag	int
)	O
{	O
backslash_flag	int
=	O
1	int
;	O
continue	O
;	O
}	O
backslash_flag	int
=	O
0	int
;	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
c	int
,	O
f_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
col	int
+=	O
len	int
;	O
}	O
buffer	*(char)
=	O
strtok	(*(char),*(char))->(*(char))
(	O
NULL	O
,	O
" \t\n"	*(char)
)	O
;	O
}	O
}	O
}	O
static	O
void	O
printf_string	(*(char))->(void)
(	O
const	O
char	O
*	O
format	*(char)
,	O
...	O
)	O
{	O
va_list	array(struct(int,int,*(void),*(void)))
args	array(struct(int,int,*(void),*(void)))
;	O
char	O
buffer	*(char)
[	O
BUFFER_SIZE	int
]	O
;	O
va_start	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
format	*(char)
)	O
;	O
g_vsnprintf	(*(char),long,*(char),array(struct(int,int,*(void),*(void))))->(int)
(	O
buffer	*(char)
,	O
sizeof	O
(	O
buffer	*(char)
)	O
,	O
format	*(char)
,	O
args	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
args	array(struct(int,int,*(void),*(void)))
)	O
;	O
print_string	(*(char))->(void)
(	O
buffer	*(char)
)	O
;	O
}	O
static	O
void	O
handle_node	(*(char),int)->(void)
(	O
char	O
*	O
buffer	*(char)
,	O
int	O
is_sh	int
)	O
{	O
int	O
len	int
,	O
heading_level	int
;	O
if	O
(	O
skip_flag	int
==	O
2	int
)	O
{	O
skip_flag	int
=	O
0	int
;	O
}	O
buffer	*(char)
=	O
strtok	(*(char),*(char))->(*(char))
(	O
NULL	O
,	O
""	*(char)
)	O
;	O
if	O
(	O
buffer	*(char)
==	O
NULL	O
)	O
{	O
print_error	(*(char))->(void)
(	O
"Syntax error: .SH: no title"	*(char)
)	O
;	O
return	O
;	O
}	O
else	O
{	O
if	O
(	O
buffer	*(char)
[	O
0	int
]	O
==	O
'"'	O
)	O
{	O
buffer	*(char)
++	O
;	O
len	int
=	O
strlen	(*(char))->(long)
(	O
buffer	*(char)
)	O
;	O
if	O
(	O
buffer	*(char)
[	O
len	int
-	O
1	int
]	O
==	O
'"'	O
)	O
{	O
len	int
--	O
;	O
buffer	*(char)
[	O
len	int
]	O
=	O
0	int
;	O
}	O
}	O
heading_level	int
=	O
0	int
;	O
while	O
(	O
buffer	*(char)
[	O
heading_level	int
]	O
==	O
' '	O
)	O
heading_level	int
++	O
;	O
if	O
(	O
heading_level	int
&	O
1	int
)	O
print_error	(*(char))->(void)
(	O
"Syntax error: .SH: odd heading level"	*(char)
)	O
;	O
if	O
(	O
no_split_flag	int
)	O
{	O
newline	()->(void)
(	O
)	O
;	O
print_string	(*(char))->(void)
(	O
buffer	*(char)
)	O
;	O
newline	()->(void)
(	O
)	O
;	O
newline	()->(void)
(	O
)	O
;	O
no_split_flag	int
=	O
0	int
;	O
}	O
else	O
if	O
(	O
skip_flag	int
)	O
{	O
skip_flag	int
=	O
2	int
;	O
}	O
else	O
{	O
buffer	*(char)
+=	O
heading_level	int
;	O
if	O
(	O
!	O
is_sh	int
||	O
!	O
node	*(struct)
)	O
{	O
if	O
(	O
*	O
buffer	*(char)
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
f_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%c[%s]"	*(char)
,	O
CHAR_NODE_END	char
,	O
buffer	*(char)
)	O
;	O
col	int
++	O
;	O
newline	()->(void)
(	O
)	O
;	O
}	O
if	O
(	O
!	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
)	O
{	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
=	O
&	O
nodes	struct(*(char),*(char),*(struct(*(char),*(char),*(struct(*`,*`,*`,int)),int)),int)
;	O
}	O
else	O
{	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
next	*(struct(*(void),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`)))))
=	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
nodes	struct(*(char),*(char),*(struct(*(char),*(char),*(struct(*`,*`,*`,int)),int)),int)
)	O
)	O
;	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
=	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
next	*(struct(*(void),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`)))))
;	O
}	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
node	*(struct)
=	O
strdup	(*(char))->(*(char))
(	O
buffer	*(char)
)	O
;	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
lname	*(char)
=	O
NULL	O
;	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
next	*(struct(*(void),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`)))))
=	O
NULL	O
;	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
heading_level	int
=	O
heading_level	int
;	O
}	O
if	O
(	O
is_sh	int
)	O
{	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
lname	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
buffer	*(char)
)	O
;	O
print_string	(*(char))->(void)
(	O
buffer	*(char)
)	O
;	O
newline	()->(void)
(	O
)	O
;	O
newline	()->(void)
(	O
)	O
;	O
}	O
}	O
}	O
node	*(struct)
=	O
!	O
is_sh	int
;	O
}	O
static	O
inline	O
char	O
char_to_font	(char)->(char)
(	O
char	O
c	int
)	O
{	O
switch	O
(	O
c	int
)	O
{	O
case	O
'R'	O
:	O
return	O
CHAR_FONT_NORMAL	char
;	O
case	O
'B'	O
:	O
return	O
CHAR_FONT_BOLD	char
;	O
case	O
'I'	O
:	O
return	O
CHAR_FONT_ITALIC	char
;	O
default	O
:	O
return	O
0	int
;	O
}	O
}	O
static	O
int	O
handle_alt_font	(*(char))->(int)
(	O
char	O
*	O
buffer	*(char)
)	O
{	O
char	O
*	O
p	*(void)
;	O
char	O
*	O
w	*(char)
;	O
char	O
font	array(char)
[	O
2	int
]	O
;	O
int	O
in_quotes	int
=	O
0	int
;	O
int	O
alt_state	int
=	O
0	int
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
buffer	*(char)
)	O
!=	O
3	int
)	O
return	O
0	int
;	O
if	O
(	O
buffer	*(char)
[	O
0	int
]	O
!=	O
'.'	O
)	O
return	O
0	int
;	O
font	array(char)
[	O
0	int
]	O
=	O
char_to_font	(char)->(char)
(	O
buffer	*(char)
[	O
1	int
]	O
)	O
;	O
font	array(char)
[	O
1	int
]	O
=	O
char_to_font	(char)->(char)
(	O
buffer	*(char)
[	O
2	int
]	O
)	O
;	O
if	O
(	O
font	array(char)
[	O
0	int
]	O
==	O
0	int
||	O
font	array(char)
[	O
1	int
]	O
==	O
0	int
||	O
font	array(char)
[	O
0	int
]	O
==	O
font	array(char)
[	O
1	int
]	O
)	O
return	O
0	int
;	O
p	*(void)
=	O
strtok	(*(char),*(char))->(*(char))
(	O
NULL	O
,	O
""	*(char)
)	O
;	O
if	O
(	O
p	*(void)
==	O
NULL	O
)	O
{	O
return	O
1	int
;	O
}	O
w	*(char)
=	O
buffer	*(char)
;	O
*	O
w	*(char)
++	O
=	O
font	array(char)
[	O
0	int
]	O
;	O
while	O
(	O
*	O
p	*(void)
)	O
{	O
if	O
(	O
*	O
p	*(void)
==	O
'"'	O
)	O
{	O
in_quotes	int
=	O
!	O
in_quotes	int
;	O
p	*(void)
++	O
;	O
continue	O
;	O
}	O
if	O
(	O
*	O
p	*(void)
==	O
' '	O
&&	O
!	O
in_quotes	int
)	O
{	O
p	*(void)
++	O
;	O
if	O
(	O
*	O
p	*(void)
!=	O
0	int
)	O
{	O
alt_state	int
=	O
!	O
alt_state	int
;	O
*	O
w	*(char)
++	O
=	O
font	array(char)
[	O
alt_state	int
]	O
;	O
}	O
while	O
(	O
*	O
p	*(void)
==	O
' '	O
)	O
p	*(void)
++	O
;	O
continue	O
;	O
}	O
*	O
w	*(char)
++	O
=	O
*	O
p	*(void)
++	O
;	O
}	O
if	O
(	O
font	array(char)
[	O
alt_state	int
]	O
!=	O
CHAR_FONT_NORMAL	char
)	O
*	O
w	*(char)
++	O
=	O
CHAR_FONT_NORMAL	char
;	O
*	O
w	*(char)
=	O
0	int
;	O
print_string	(*(char))->(void)
(	O
buffer	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
static	O
void	O
handle_tp_ip	(int)->(void)
(	O
int	O
is_tp	int
)	O
{	O
if	O
(	O
col	int
>	O
0	int
)	O
newline	()->(void)
(	O
)	O
;	O
newline	()->(void)
(	O
)	O
;	O
if	O
(	O
is_tp	int
)	O
{	O
tp_flag	int
=	O
1	int
;	O
indentation	int
=	O
0	int
;	O
}	O
else	O
indentation	int
=	O
8	int
;	O
}	O
static	O
void	O
handle_command	(*(char))->(void)
(	O
char	O
*	O
buffer	*(char)
)	O
{	O
int	O
len	int
;	O
strtok	(*(char),*(char))->(*(char))
(	O
buffer	*(char)
,	O
" \t"	*(char)
)	O
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
buffer	*(char)
,	O
".SH"	*(char)
)	O
==	O
0	int
)	O
{	O
indentation	int
=	O
0	int
;	O
handle_node	(*(char),int)->(void)
(	O
buffer	*(char)
,	O
1	int
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
buffer	*(char)
,	O
".\\\"NODE"	*(char)
)	O
==	O
0	int
)	O
{	O
handle_node	(*(char),int)->(void)
(	O
buffer	*(char)
,	O
0	int
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
buffer	*(char)
,	O
".\\\"DONT_SPLIT\""	*(char)
)	O
==	O
0	int
)	O
{	O
no_split_flag	int
=	O
1	int
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
buffer	*(char)
,	O
".\\\"SKIP_SECTION\""	*(char)
)	O
==	O
0	int
)	O
{	O
skip_flag	int
=	O
1	int
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
buffer	*(char)
,	O
".\\\"LINK2\""	*(char)
)	O
==	O
0	int
)	O
{	O
link_flag	int
=	O
2	int
;	O
}	O
else	O
if	O
(	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
buffer	*(char)
,	O
".PP"	*(char)
)	O
==	O
0	int
)	O
||	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
buffer	*(char)
,	O
".P"	*(char)
)	O
==	O
0	int
)	O
||	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
buffer	*(char)
,	O
".LP"	*(char)
)	O
==	O
0	int
)	O
)	O
{	O
indentation	int
=	O
0	int
;	O
if	O
(	O
col	int
>	O
0	int
)	O
newline	()->(void)
(	O
)	O
;	O
newline	()->(void)
(	O
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
buffer	*(char)
,	O
".nf"	*(char)
)	O
==	O
0	int
)	O
{	O
verbatim_flag	int
=	O
1	int
;	O
if	O
(	O
col	int
>	O
0	int
)	O
newline	()->(void)
(	O
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
buffer	*(char)
,	O
".I"	*(char)
)	O
==	O
0	int
||	O
strcmp	(*(char),*(char))->(int)
(	O
buffer	*(char)
,	O
".B"	*(char)
)	O
==	O
0	int
||	O
strcmp	(*(char),*(char))->(int)
(	O
buffer	*(char)
,	O
".SB"	*(char)
)	O
==	O
0	int
)	O
{	O
char	O
*	O
p	*(void)
;	O
char	O
*	O
w	*(char)
;	O
int	O
backslash_flag	int
=	O
0	int
;	O
p	*(void)
=	O
strtok	(*(char),*(char))->(*(char))
(	O
NULL	O
,	O
""	*(char)
)	O
;	O
if	O
(	O
p	*(void)
==	O
NULL	O
)	O
{	O
print_error	(*(char))->(void)
(	O
"Syntax error: .I | .B | .SB : no text"	*(char)
)	O
;	O
return	O
;	O
}	O
*	O
buffer	*(char)
=	O
(	O
buffer	*(char)
[	O
1	int
]	O
==	O
'I'	O
)	O
?	O
CHAR_FONT_ITALIC	char
:	O
CHAR_FONT_BOLD	char
;	O
for	O
(	O
w	*(char)
=	O
&	O
buffer	*(char)
[	O
1	int
]	O
;	O
*	O
p	*(void)
;	O
p	*(void)
++	O
)	O
{	O
if	O
(	O
*	O
p	*(void)
==	O
'\\'	O
&&	O
!	O
backslash_flag	int
)	O
{	O
backslash_flag	int
=	O
1	int
;	O
continue	O
;	O
}	O
backslash_flag	int
=	O
0	int
;	O
*	O
w	*(char)
++	O
=	O
*	O
p	*(void)
;	O
}	O
*	O
w	*(char)
++	O
=	O
CHAR_FONT_NORMAL	char
;	O
*	O
w	*(char)
=	O
0	int
;	O
print_string	(*(char))->(void)
(	O
buffer	*(char)
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
buffer	*(char)
,	O
".TP"	*(char)
)	O
==	O
0	int
)	O
{	O
handle_tp_ip	(int)->(void)
(	O
1	int
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
buffer	*(char)
,	O
".IP"	*(char)
)	O
==	O
0	int
)	O
{	O
handle_tp_ip	(int)->(void)
(	O
0	int
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
buffer	*(char)
,	O
".\\\"TOPICS"	*(char)
)	O
==	O
0	int
)	O
{	O
if	O
(	O
out_row	int
>	O
1	int
)	O
{	O
print_error	(*(char))->(void)
(	O
"Syntax error: .\\\"TOPICS must be first command"	*(char)
)	O
;	O
return	O
;	O
}	O
buffer	*(char)
=	O
strtok	(*(char),*(char))->(*(char))
(	O
NULL	O
,	O
""	*(char)
)	O
;	O
if	O
(	O
buffer	*(char)
==	O
NULL	O
)	O
{	O
print_error	(*(char))->(void)
(	O
"Syntax error: .\\\"TOPICS: no text"	*(char)
)	O
;	O
return	O
;	O
}	O
if	O
(	O
buffer	*(char)
[	O
0	int
]	O
==	O
'"'	O
)	O
{	O
buffer	*(char)
++	O
;	O
len	int
=	O
strlen	(*(char))->(long)
(	O
buffer	*(char)
)	O
;	O
if	O
(	O
buffer	*(char)
[	O
len	int
-	O
1	int
]	O
==	O
'"'	O
)	O
{	O
len	int
--	O
;	O
buffer	*(char)
[	O
len	int
]	O
=	O
0	int
;	O
}	O
}	O
topics	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
buffer	*(char)
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
buffer	*(char)
,	O
".br"	*(char)
)	O
==	O
0	int
)	O
{	O
if	O
(	O
col	int
)	O
newline	()->(void)
(	O
)	O
;	O
}	O
else	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
buffer	*(char)
,	O
".\\\""	*(char)
,	O
3	int
)	O
==	O
0	int
)	O
{	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
buffer	*(char)
,	O
".TH"	*(char)
)	O
==	O
0	int
)	O
{	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
buffer	*(char)
,	O
".SM"	*(char)
)	O
==	O
0	int
)	O
{	O
buffer	*(char)
=	O
strtok	(*(char),*(char))->(*(char))
(	O
NULL	O
,	O
""	*(char)
)	O
;	O
if	O
(	O
buffer	*(char)
)	O
print_string	(*(char))->(void)
(	O
buffer	*(char)
)	O
;	O
}	O
else	O
if	O
(	O
handle_alt_font	(*(char))->(int)
(	O
buffer	*(char)
)	O
==	O
1	int
)	O
{	O
return	O
;	O
}	O
else	O
{	O
char	O
warn_str	array(char)
[	O
BUFFER_SIZE	int
]	O
;	O
g_snprintf	(*(char),long,*(char))->(int)
(	O
warn_str	array(char)
,	O
sizeof	O
(	O
warn_str	array(char)
)	O
,	O
"Warning: unsupported command %s"	*(char)
,	O
buffer	*(char)
)	O
;	O
print_error	(*(char))->(void)
(	O
warn_str	array(char)
)	O
;	O
return	O
;	O
}	O
}	O
static	O
struct	O
links	struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`))))))
{	O
char	O
*	O
linkname	*(char)
;	O
int	O
line	int
;	O
const	O
char	O
*	O
filename	*(char)
;	O
struct	O
links	struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`))))))
*	O
next	*(struct(*(void),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`)))))
;	O
}	O
links	struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`))))))
,	O
*	O
current_link	*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`)))))
;	O
static	O
void	O
handle_link	(*(char))->(void)
(	O
char	O
*	O
buffer	*(char)
)	O
{	O
static	O
char	O
old	array(char)
[	O
80	int
]	O
;	O
int	O
len	int
;	O
char	O
*	O
amp	*(char)
;	O
const	O
char	O
*	O
amp_arg	*(char)
;	O
switch	O
(	O
link_flag	int
)	O
{	O
case	O
1	int
:	O
break	O
;	O
case	O
2	int
:	O
if	O
(	O
buffer	*(char)
[	O
0	int
]	O
==	O
'.'	O
&&	O
(	O
buffer	*(char)
[	O
1	int
]	O
==	O
'I'	O
||	O
buffer	*(char)
[	O
1	int
]	O
==	O
'B'	O
)	O
)	O
for	O
(	O
buffer	*(char)
+=	O
2	int
;	O
*	O
buffer	*(char)
==	O
' '	O
||	O
*	O
buffer	*(char)
==	O
'\t'	O
;	O
buffer	*(char)
++	O
)	O
;	O
g_strlcpy	(*(char),*(char),long)->(long)
(	O
old	array(char)
,	O
buffer	*(char)
,	O
sizeof	O
(	O
old	array(char)
)	O
)	O
;	O
link_flag	int
=	O
3	int
;	O
break	O
;	O
case	O
3	int
:	O
if	O
(	O
buffer	*(char)
[	O
0	int
]	O
==	O
'.'	O
)	O
buffer	*(char)
++	O
;	O
if	O
(	O
buffer	*(char)
[	O
0	int
]	O
==	O
'\\'	O
)	O
buffer	*(char)
++	O
;	O
if	O
(	O
buffer	*(char)
[	O
0	int
]	O
==	O
'"'	O
)	O
buffer	*(char)
++	O
;	O
len	int
=	O
strlen	(*(char))->(long)
(	O
buffer	*(char)
)	O
;	O
if	O
(	O
len	int
&&	O
buffer	*(char)
[	O
len	int
-	O
1	int
]	O
==	O
'"'	O
)	O
{	O
buffer	*(char)
[	O
--	O
len	int
]	O
=	O
0	int
;	O
}	O
amp	*(char)
=	O
strstr	(*(char),*(char))->(*(char))
(	O
old	array(char)
,	O
"\\&"	*(char)
)	O
;	O
if	O
(	O
amp	*(char)
)	O
{	O
*	O
amp	*(char)
=	O
0	int
;	O
amp	*(char)
+=	O
2	int
;	O
amp_arg	*(char)
=	O
amp	*(char)
;	O
}	O
else	O
{	O
amp_arg	*(char)
=	O
""	*(char)
;	O
}	O
printf_string	(*(char))->(void)
(	O
"%c%s%c%s%c%s\n"	*(char)
,	O
CHAR_LINK_START	char
,	O
old	array(char)
,	O
CHAR_LINK_POINTER	char
,	O
buffer	*(char)
,	O
CHAR_LINK_END	char
,	O
amp_arg	*(char)
)	O
;	O
link_flag	int
=	O
0	int
;	O
if	O
(	O
current_link	*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`)))))
)	O
{	O
current_link	*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`)))))
->	O
next	*(struct(*(void),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`)))))
=	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
links	struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`))))))
)	O
)	O
;	O
current_link	*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`)))))
=	O
current_link	*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`)))))
->	O
next	*(struct(*(void),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`)))))
;	O
current_link	*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`)))))
->	O
next	*(struct(*(void),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`)))))
=	O
NULL	O
;	O
}	O
else	O
{	O
current_link	*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`)))))
=	O
&	O
links	struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`))))))
;	O
}	O
current_link	*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`)))))
->	O
linkname	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
buffer	*(char)
)	O
;	O
current_link	*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`)))))
->	O
filename	*(char)
=	O
c_in	*(char)
;	O
current_link	*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`)))))
->	O
line	int
=	O
in_row	int
;	O
break	O
;	O
}	O
}	O
int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	*(int)
,	O
char	O
*	O
*	O
argv	*(*(*(char)))
)	O
{	O
int	O
len	int
;	O
const	O
char	O
*	O
c_man	*(char)
;	O
const	O
char	O
*	O
c_tmpl	*(char)
;	O
FILE	struct
*	O
f_man	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
FILE	struct
*	O
f_tmpl	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
char	O
buffer	*(char)
[	O
BUFFER_SIZE	int
]	O
;	O
char	O
*	O
node	*(struct)
=	O
NULL	O
;	O
char	O
*	O
outfile_buffer	*(char)
;	O
long	O
cont_start	long
;	O
long	O
file_end	long
;	O
if	O
(	O
argc	*(int)
!=	O
4	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Usage: man2hlp file.man template_file helpfile\n"	*(char)
)	O
;	O
return	O
3	int
;	O
}	O
c_man	*(char)
=	O
argv	*(*(*(char)))
[	O
1	int
]	O
;	O
c_tmpl	*(char)
=	O
argv	*(*(*(char)))
[	O
2	int
]	O
;	O
c_out	*(char)
=	O
argv	*(*(*(char)))
[	O
3	int
]	O
;	O
f_man	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen_check	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
c_man	*(char)
,	O
"r"	*(char)
)	O
;	O
f_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen_check	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
c_out	*(char)
,	O
"w"	*(char)
)	O
;	O
c_in	*(char)
=	O
c_man	*(char)
;	O
while	O
(	O
fgets	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
buffer	*(char)
,	O
BUFFER_SIZE	int
,	O
f_man	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
char	O
*	O
input_line	*(char)
;	O
if	O
(	O
buffer	*(char)
[	O
0	int
]	O
==	O
'\\'	O
&&	O
buffer	*(char)
[	O
1	int
]	O
==	O
'&'	O
)	O
input_line	*(char)
=	O
buffer	*(char)
+	O
2	int
;	O
else	O
input_line	*(char)
=	O
buffer	*(char)
;	O
in_row	int
++	O
;	O
len	int
=	O
strlen	(*(char))->(long)
(	O
input_line	*(char)
)	O
;	O
if	O
(	O
input_line	*(char)
[	O
len	int
-	O
1	int
]	O
==	O
'\n'	O
)	O
{	O
len	int
--	O
;	O
input_line	*(char)
[	O
len	int
]	O
=	O
0	int
;	O
}	O
if	O
(	O
verbatim_flag	int
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
input_line	*(char)
,	O
".fi"	*(char)
)	O
==	O
0	int
)	O
{	O
verbatim_flag	int
=	O
0	int
;	O
}	O
else	O
{	O
print_string	(*(char))->(void)
(	O
input_line	*(char)
)	O
;	O
newline	()->(void)
(	O
)	O
;	O
}	O
}	O
else	O
if	O
(	O
link_flag	int
)	O
{	O
handle_link	(*(char))->(void)
(	O
input_line	*(char)
)	O
;	O
}	O
else	O
if	O
(	O
buffer	*(char)
[	O
0	int
]	O
==	O
'.'	O
)	O
{	O
handle_command	(*(char))->(void)
(	O
input_line	*(char)
)	O
;	O
}	O
else	O
{	O
print_string	(*(char))->(void)
(	O
input_line	*(char)
)	O
;	O
}	O
if	O
(	O
tp_flag	int
)	O
{	O
if	O
(	O
tp_flag	int
==	O
1	int
)	O
{	O
tp_flag	int
=	O
2	int
;	O
}	O
else	O
{	O
tp_flag	int
=	O
0	int
;	O
indentation	int
=	O
8	int
;	O
if	O
(	O
col	int
>=	O
indentation	int
)	O
newline	()->(void)
(	O
)	O
;	O
else	O
while	O
(	O
++	O
col	int
<	O
indentation	int
)	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
' '	O
,	O
f_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
}	O
}	O
newline	()->(void)
(	O
)	O
;	O
fclose_check	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
f_man	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
f_tmpl	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen_check	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
c_tmpl	*(char)
,	O
"r"	*(char)
)	O
;	O
c_in	*(char)
=	O
c_tmpl	*(char)
;	O
while	O
(	O
fgets	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
buffer	*(char)
,	O
BUFFER_SIZE	int
,	O
f_tmpl	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
if	O
(	O
node	*(struct)
)	O
{	O
if	O
(	O
*	O
buffer	*(char)
&&	O
*	O
buffer	*(char)
!=	O
'\n'	O
)	O
{	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
lname	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
buffer	*(char)
)	O
;	O
node	*(struct)
=	O
strchr	(*(char),int)->(*(char))
(	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
lname	*(char)
,	O
'\n'	O
)	O
;	O
if	O
(	O
node	*(struct)
)	O
*	O
node	*(struct)
=	O
0	int
;	O
}	O
node	*(struct)
=	O
NULL	O
;	O
}	O
else	O
{	O
node	*(struct)
=	O
strchr	(*(char),int)->(*(char))
(	O
buffer	*(char)
,	O
CHAR_NODE_END	char
)	O
;	O
if	O
(	O
node	*(struct)
&&	O
(	O
node	*(struct)
[	O
1	int
]	O
==	O
'['	O
)	O
)	O
{	O
char	O
*	O
p	*(void)
=	O
strchr	(*(char),int)->(*(char))
(	O
node	*(struct)
,	O
']'	O
)	O
;	O
if	O
(	O
p	*(void)
)	O
{	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
node	*(struct)
+	O
1	int
,	O
"[main]"	*(char)
,	O
6	int
)	O
==	O
0	int
)	O
{	O
node	*(struct)
=	O
NULL	O
;	O
}	O
else	O
{	O
if	O
(	O
!	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
)	O
{	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
=	O
&	O
nodes	struct(*(char),*(char),*(struct(*(char),*(char),*(struct(*`,*`,*`,int)),int)),int)
;	O
}	O
else	O
{	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
next	*(struct(*(void),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`)))))
=	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
nodes	struct(*(char),*(char),*(struct(*(char),*(char),*(struct(*`,*`,*`,int)),int)),int)
)	O
)	O
;	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
=	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
next	*(struct(*(void),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`)))))
;	O
}	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
node	*(struct)
=	O
strdup	(*(char))->(*(char))
(	O
node	*(struct)
+	O
2	int
)	O
;	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
node	*(struct)
[	O
p	*(void)
-	O
node	*(struct)
-	O
2	int
]	O
=	O
0	int
;	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
lname	*(char)
=	O
NULL	O
;	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
next	*(struct(*(void),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`)))))
=	O
NULL	O
;	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
heading_level	int
=	O
0	int
;	O
}	O
}	O
else	O
node	*(struct)
=	O
NULL	O
;	O
}	O
else	O
node	*(struct)
=	O
NULL	O
;	O
}	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
buffer	*(char)
,	O
f_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
cont_start	long
=	O
ftell	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
f_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
cont_start	long
<=	O
0	int
)	O
{	O
perror	(*(char))->(void)
(	O
c_out	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
if	O
(	O
topics	*(char)
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
f_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\004[Contents]\n%s\n\n"	*(char)
,	O
topics	*(char)
)	O
;	O
else	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
f_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\004[Contents]\n"	*(char)
)	O
;	O
for	O
(	O
current_link	*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`)))))
=	O
&	O
links	struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`))))))
;	O
current_link	*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`)))))
&&	O
current_link	*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`)))))
->	O
linkname	*(char)
;	O
)	O
{	O
int	O
found	int
=	O
0	int
;	O
struct	O
links	struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`))))))
*	O
next	*(struct(*(void),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`)))))
=	O
current_link	*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`)))))
->	O
next	*(struct(*(void),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`)))))
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
current_link	*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`)))))
->	O
linkname	*(char)
,	O
"Contents"	*(char)
)	O
==	O
0	int
)	O
{	O
found	int
=	O
1	int
;	O
}	O
else	O
{	O
for	O
(	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
=	O
&	O
nodes	struct(*(char),*(char),*(struct(*(char),*(char),*(struct(*`,*`,*`,int)),int)),int)
;	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
&&	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
node	*(struct)
;	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
=	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
next	*(struct(*(void),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`)))))
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
node	*(struct)
,	O
current_link	*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`)))))
->	O
linkname	*(char)
)	O
==	O
0	int
)	O
{	O
found	int
=	O
1	int
;	O
break	O
;	O
}	O
}	O
}	O
if	O
(	O
!	O
found	int
)	O
{	O
g_snprintf	(*(char),long,*(char))->(int)
(	O
buffer	*(char)
,	O
sizeof	O
(	O
buffer	*(char)
)	O
,	O
"Stale link \"%s\""	*(char)
,	O
current_link	*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`)))))
->	O
linkname	*(char)
)	O
;	O
c_in	*(char)
=	O
current_link	*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`)))))
->	O
filename	*(char)
;	O
in_row	int
=	O
current_link	*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`)))))
->	O
line	int
;	O
print_error	(*(char))->(void)
(	O
buffer	*(char)
)	O
;	O
}	O
free	(*(void))->(void)
(	O
current_link	*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`)))))
->	O
linkname	*(char)
)	O
;	O
if	O
(	O
current_link	*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`)))))
!=	O
&	O
links	struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`))))))
)	O
free	(*(void))->(void)
(	O
current_link	*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`)))))
)	O
;	O
current_link	*(struct(*(char),int,*(char),*(struct(*(char),int,*(char),*(struct`)))))
=	O
next	*(struct(*(void),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`)))))
;	O
}	O
for	O
(	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
=	O
&	O
nodes	struct(*(char),*(char),*(struct(*(char),*(char),*(struct(*`,*`,*`,int)),int)),int)
;	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
&&	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
node	*(struct)
;	O
)	O
{	O
char	O
*	O
node	*(struct)
=	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
node	*(struct)
;	O
struct	O
node	*(struct)
*	O
next	*(struct(*(void),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`)))))
=	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
next	*(struct(*(void),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`)))))
;	O
if	O
(	O
*	O
node	*(struct)
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
f_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"  %*s\001%s\002%s\003"	*(char)
,	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
heading_level	int
,	O
""	*(char)
,	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
lname	*(char)
?	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
lname	*(char)
:	O
node	*(struct)
,	O
node	*(struct)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
f_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
node	*(struct)
)	O
;	O
if	O
(	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
lname	*(char)
)	O
free	(*(void))->(void)
(	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
->	O
lname	*(char)
)	O
;	O
if	O
(	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
!=	O
&	O
nodes	struct(*(char),*(char),*(struct(*(char),*(char),*(struct(*`,*`,*`,int)),int)),int)
)	O
free	(*(void))->(void)
(	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
)	O
;	O
cnode	*(struct(*(char),*(char),*(struct(*(char),*(char),*(struct`),int)),int))
=	O
next	*(struct(*(void),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`),*(struct`),*(struct`)))))
;	O
}	O
file_end	long
=	O
ftell	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
f_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
(	O
file_end	long
<=	O
0	int
)	O
||	O
(	O
file_end	long
-	O
cont_start	long
<=	O
0	int
)	O
)	O
{	O
perror	(*(char))->(void)
(	O
c_out	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
fclose_check	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
f_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fclose_check	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
f_tmpl	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
f_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen_check	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
c_out	*(char)
,	O
"r"	*(char)
)	O
;	O
outfile_buffer	*(char)
=	O
malloc	(long)->(*(void))
(	O
file_end	long
)	O
;	O
if	O
(	O
!	O
outfile_buffer	*(char)
)	O
return	O
1	int
;	O
if	O
(	O
!	O
persistent_fread	(*(void),long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
outfile_buffer	*(char)
,	O
file_end	long
,	O
f_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
perror	(*(char))->(void)
(	O
c_out	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
fclose_check	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
f_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
f_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen_check	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
c_out	*(char)
,	O
"w"	*(char)
)	O
;	O
if	O
(	O
!	O
persistent_fwrite	(*(void),long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
outfile_buffer	*(char)
+	O
cont_start	long
,	O
file_end	long
-	O
cont_start	long
,	O
f_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
perror	(*(char))->(void)
(	O
c_out	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
if	O
(	O
!	O
persistent_fwrite	(*(void),long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
outfile_buffer	*(char)
,	O
cont_start	long
,	O
f_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
perror	(*(char))->(void)
(	O
c_out	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
free	(*(void))->(void)
(	O
outfile_buffer	*(char)
)	O
;	O
fclose_check	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
f_out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
return	O
0	int
;	O
}	O
