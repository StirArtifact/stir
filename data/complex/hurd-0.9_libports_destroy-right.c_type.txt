error_t	(*(int))->(int)
ports_destroy_right	(*(void))->(int)
(	O
void	O
*	O
portstruct	*(void)
)	O
{	O
struct	O
port_info	struct(*(struct),int,int,int,int,int,*(struct),*(struct),int,int)
*	O
pi	*(struct(*(struct(int,int,int,*((*`)->(void)),*((*`)->(void)),*(struct`))),int,int,int,int,int,*(struct(int,*(struct`),*(*`),*(struct`),*(struct`))),*(struct(int,struct,int,int,int,struct)),int,int))
=	O
portstruct	*(void)
;	O
mach_port_t	O
port_right	int
;	O
int	O
defer	int
=	O
0	int
;	O
error_t	(*(int))->(int)
err	O
;	O
pthread_mutex_lock	()->(int)
(	O
&	O
_ports_lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
port_right	int
=	O
pi	*(struct(*(struct(int,int,int,*((*`)->(void)),*((*`)->(void)),*(struct`))),int,int,int,int,int,*(struct(int,*(struct`),*(*`),*(struct`),*(struct`))),*(struct(int,struct,int,int,int,struct)),int,int))
->	O
port_right	int
;	O
pi	*(struct(*(struct(int,int,int,*((*`)->(void)),*((*`)->(void)),*(struct`))),int,int,int,int,int,*(struct(int,*(struct`),*(*`),*(struct`),*(struct`))),*(struct(int,struct,int,int,int,struct)),int,int))
->	O
port_right	int
=	O
MACH_PORT_DEAD	O
;	O
if	O
(	O
pi	*(struct(*(struct(int,int,int,*((*`)->(void)),*((*`)->(void)),*(struct`))),int,int,int,int,int,*(struct(int,*(struct`),*(*`),*(struct`),*(struct`))),*(struct(int,struct,int,int,int,struct)),int,int))
->	O
flags	int
&	O
PORT_HAS_SENDRIGHTS	int
)	O
{	O
pi	*(struct(*(struct(int,int,int,*((*`)->(void)),*((*`)->(void)),*(struct`))),int,int,int,int,int,*(struct(int,*(struct`),*(*`),*(struct`),*(struct`))),*(struct(int,struct,int,int,int,struct)),int,int))
->	O
flags	int
&=	O
~	O
PORT_HAS_SENDRIGHTS	int
;	O
defer	int
=	O
1	int
;	O
}	O
if	O
(	O
MACH_PORT_VALID	()->(int)
(	O
port_right	int
)	O
)	O
{	O
mach_port_clear_protected_payload	()->(int)
(	O
mach_task_self	()->(int)
(	O
)	O
,	O
port_right	int
)	O
;	O
pthread_rwlock_wrlock	()->(int)
(	O
&	O
_ports_htable_lock	union(struct(int,int,int,int,int,int,int,int,char,array(char),long,int),array(char),long)
)	O
;	O
hurd_ihash_locp_remove	()->(int)
(	O
&	O
_ports_htable	struct
,	O
pi	*(struct(*(struct(int,int,int,*((*`)->(void)),*((*`)->(void)),*(struct`))),int,int,int,int,int,*(struct(int,*(struct`),*(*`),*(struct`),*(struct`))),*(struct(int,struct,int,int,int,struct)),int,int))
->	O
ports_htable_entry	int
)	O
;	O
hurd_ihash_locp_remove	()->(int)
(	O
&	O
pi	*(struct(*(struct(int,int,int,*((*`)->(void)),*((*`)->(void)),*(struct`))),int,int,int,int,int,*(struct(int,*(struct`),*(*`),*(struct`),*(struct`))),*(struct(int,struct,int,int,int,struct)),int,int))
->	O
bucket	*(struct)
->	O
htable	struct
,	O
pi	*(struct(*(struct(int,int,int,*((*`)->(void)),*((*`)->(void)),*(struct`))),int,int,int,int,int,*(struct(int,*(struct`),*(*`),*(struct`),*(struct`))),*(struct(int,struct,int,int,int,struct)),int,int))
->	O
hentry	int
)	O
;	O
pthread_rwlock_unlock	()->(int)
(	O
&	O
_ports_htable_lock	union(struct(int,int,int,int,int,int,int,int,char,array(char),long,int),array(char),long)
)	O
;	O
}	O
pthread_mutex_unlock	()->(int)
(	O
&	O
_ports_lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
if	O
(	O
MACH_PORT_VALID	()->(int)
(	O
port_right	int
)	O
)	O
{	O
err	O
=	O
mach_port_mod_refs	()->(int)
(	O
mach_task_self	()->(int)
(	O
)	O
,	O
port_right	int
,	O
MACH_PORT_RIGHT_RECEIVE	O
,	O
-	O
1	int
)	O
;	O
assert_perror	()->(int)
(	O
err	O
)	O
;	O
}	O
if	O
(	O
defer	int
)	O
_ports_port_deref_deferred	()->(int)
(	O
pi	*(struct(*(struct(int,int,int,*((*`)->(void)),*((*`)->(void)),*(struct`))),int,int,int,int,int,*(struct(int,*(struct`),*(*`),*(struct`),*(struct`))),*(struct(int,struct,int,int,int,struct)),int,int))
)	O
;	O
return	O
0	int
;	O
}	O
