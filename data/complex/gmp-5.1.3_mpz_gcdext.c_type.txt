void	O
mpz_gcdext	O
(	O
mpz_ptr	*(struct(int,int,*(long)))
g	*(struct(int,int,*(long)))
,	O
mpz_ptr	*(struct(int,int,*(long)))
s	array(char)
,	O
mpz_ptr	*(struct(int,int,*(long)))
t	*(struct(int,int,*(long)))
,	O
mpz_srcptr	*(struct(int,int,*(long)))
a	int
,	O
mpz_srcptr	*(struct(int,int,*(long)))
b	int
)	O
{	O
mp_size_t	long
asize	long
,	O
bsize	long
;	O
mp_ptr	*(long)
tmp_ap	*(long)
,	O
tmp_bp	*(long)
;	O
mp_size_t	long
gsize	long
,	O
ssize	long
,	O
tmp_ssize	long
;	O
mp_ptr	*(long)
gp	*(long)
,	O
tmp_gp	*(long)
,	O
tmp_sp	*(long)
;	O
TMP_DECL	O
;	O
asize	long
=	O
ABSIZ	O
(	O
a	int
)	O
;	O
bsize	long
=	O
ABSIZ	O
(	O
b	int
)	O
;	O
if	O
(	O
asize	long
<	O
bsize	long
)	O
{	O
MPZ_SRCPTR_SWAP	O
(	O
a	int
,	O
b	int
)	O
;	O
MP_SIZE_T_SWAP	O
(	O
asize	long
,	O
bsize	long
)	O
;	O
MPZ_PTR_SWAP	O
(	O
s	array(char)
,	O
t	*(struct(int,int,*(long)))
)	O
;	O
}	O
if	O
(	O
bsize	long
==	O
0	int
)	O
{	O
ssize	long
=	O
SIZ	O
(	O
a	int
)	O
>=	O
0	int
?	O
(	O
asize	long
!=	O
0	int
)	O
:	O
-	O
1	int
;	O
gp	*(long)
=	O
MPZ_REALLOC	O
(	O
g	*(struct(int,int,*(long)))
,	O
asize	long
)	O
;	O
MPN_COPY	O
(	O
gp	*(long)
,	O
PTR	O
(	O
a	int
)	O
,	O
asize	long
)	O
;	O
SIZ	O
(	O
g	*(struct(int,int,*(long)))
)	O
=	O
asize	long
;	O
if	O
(	O
t	*(struct(int,int,*(long)))
!=	O
NULL	O
)	O
SIZ	O
(	O
t	*(struct(int,int,*(long)))
)	O
=	O
0	int
;	O
if	O
(	O
s	array(char)
!=	O
NULL	O
)	O
{	O
SIZ	O
(	O
s	array(char)
)	O
=	O
ssize	long
;	O
PTR	O
(	O
s	array(char)
)	O
[	O
0	int
]	O
=	O
1	int
;	O
}	O
return	O
;	O
}	O
TMP_MARK	O
;	O
TMP_ALLOC_LIMBS_2	O
(	O
tmp_ap	*(long)
,	O
asize	long
,	O
tmp_bp	*(long)
,	O
bsize	long
)	O
;	O
MPN_COPY	O
(	O
tmp_ap	*(long)
,	O
PTR	O
(	O
a	int
)	O
,	O
asize	long
)	O
;	O
MPN_COPY	O
(	O
tmp_bp	*(long)
,	O
PTR	O
(	O
b	int
)	O
,	O
bsize	long
)	O
;	O
TMP_ALLOC_LIMBS_2	O
(	O
tmp_gp	*(long)
,	O
bsize	long
,	O
tmp_sp	*(long)
,	O
bsize	long
+	O
1	int
)	O
;	O
gsize	long
=	O
mpn_gcdext	O
(	O
tmp_gp	*(long)
,	O
tmp_sp	*(long)
,	O
&	O
tmp_ssize	long
,	O
tmp_ap	*(long)
,	O
asize	long
,	O
tmp_bp	*(long)
,	O
bsize	long
)	O
;	O
ssize	long
=	O
ABS	O
(	O
tmp_ssize	long
)	O
;	O
tmp_ssize	long
=	O
SIZ	O
(	O
a	int
)	O
>=	O
0	int
?	O
tmp_ssize	long
:	O
-	O
tmp_ssize	long
;	O
if	O
(	O
t	*(struct(int,int,*(long)))
!=	O
NULL	O
)	O
{	O
mpz_t	array(struct(int,int,*(long)))
x	array(struct(int,int,*(long)))
;	O
__mpz_struct	struct(int,int,*(long))
gtmp	struct(int,int,*(long))
,	O
stmp	struct(int,int,*(long))
;	O
PTR	O
(	O
&	O
gtmp	struct(int,int,*(long))
)	O
=	O
tmp_gp	*(long)
;	O
SIZ	O
(	O
&	O
gtmp	struct(int,int,*(long))
)	O
=	O
gsize	long
;	O
PTR	O
(	O
&	O
stmp	struct(int,int,*(long))
)	O
=	O
tmp_sp	*(long)
;	O
SIZ	O
(	O
&	O
stmp	struct(int,int,*(long))
)	O
=	O
tmp_ssize	long
;	O
MPZ_TMP_INIT	O
(	O
x	array(struct(int,int,*(long)))
,	O
ssize	long
+	O
asize	long
+	O
1	int
)	O
;	O
mpz_mul	O
(	O
x	array(struct(int,int,*(long)))
,	O
&	O
stmp	struct(int,int,*(long))
,	O
a	int
)	O
;	O
mpz_sub	O
(	O
x	array(struct(int,int,*(long)))
,	O
&	O
gtmp	struct(int,int,*(long))
,	O
x	array(struct(int,int,*(long)))
)	O
;	O
mpz_divexact	O
(	O
t	*(struct(int,int,*(long)))
,	O
x	array(struct(int,int,*(long)))
,	O
b	int
)	O
;	O
}	O
if	O
(	O
s	array(char)
!=	O
NULL	O
)	O
{	O
mp_ptr	*(long)
sp	*(long)
;	O
sp	*(long)
=	O
MPZ_REALLOC	O
(	O
s	array(char)
,	O
ssize	long
)	O
;	O
MPN_COPY	O
(	O
sp	*(long)
,	O
tmp_sp	*(long)
,	O
ssize	long
)	O
;	O
SIZ	O
(	O
s	array(char)
)	O
=	O
tmp_ssize	long
;	O
}	O
gp	*(long)
=	O
MPZ_REALLOC	O
(	O
g	*(struct(int,int,*(long)))
,	O
gsize	long
)	O
;	O
MPN_COPY	O
(	O
gp	*(long)
,	O
tmp_gp	*(long)
,	O
gsize	long
)	O
;	O
SIZ	O
(	O
g	*(struct(int,int,*(long)))
)	O
=	O
gsize	long
;	O
TMP_FREE	O
;	O
}	O
