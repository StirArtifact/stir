struct	O
mu_ident_ref	(*(char),*(*(char)))->(int)
{	O
size_t	long
count	long
;	O
}	O
;	O
static	O
mu_assoc_t	*(struct)
nametab	*(struct)
;	O
int	O
mu_ident_ref	(*(char),*(*(char)))->(int)
(	O
char	O
const	O
*	O
name	*(char)
,	O
char	O
const	O
*	O
*	O
refname	*(*(char))
)	O
{	O
int	O
rc	int
;	O
struct	O
mu_ident_ref	(*(char),*(*(char)))->(int)
*	O
ref	*(struct(long))
,	O
*	O
*	O
refptr	*(*(struct(long)))
;	O
if	O
(	O
!	O
refname	*(*(char))
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
if	O
(	O
!	O
name	*(char)
)	O
{	O
*	O
refname	*(*(char))
=	O
NULL	O
;	O
return	O
0	int
;	O
}	O
if	O
(	O
!	O
nametab	*(struct)
)	O
{	O
rc	int
=	O
mu_assoc_create	(*(*(struct)),int)->(int)
(	O
&	O
nametab	*(struct)
,	O
0	int
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_diag_funcall	(int,*(char),*(char),int)->(void)
(	O
MU_DIAG_ERROR	O
,	O
"mu_assoc_create"	*(char)
,	O
NULL	O
,	O
rc	int
)	O
;	O
return	O
rc	int
;	O
}	O
mu_assoc_set_destroy_item	(*(struct),*((*(void))->(void)))->(int)
(	O
nametab	*(struct)
,	O
mu_list_free_item	(*(void))->(void)
)	O
;	O
}	O
rc	int
=	O
mu_assoc_install_ref2	(*(struct),*(char),*(void),*(*(char)))->(int)
(	O
nametab	*(struct)
,	O
name	*(char)
,	O
&	O
refptr	*(*(struct(long)))
,	O
refname	*(*(char))
)	O
;	O
switch	O
(	O
rc	int
)	O
{	O
case	O
0	int
:	O
ref	*(struct(long))
=	O
malloc	(long)->(*(void))
(	O
sizeof	O
*	O
ref	*(struct(long))
)	O
;	O
if	O
(	O
!	O
ref	*(struct(long))
)	O
{	O
rc	int
=	O
errno	O
;	O
mu_assoc_remove	(*(struct),*(char))->(int)
(	O
nametab	*(struct)
,	O
name	*(char)
)	O
;	O
return	O
rc	int
;	O
}	O
*	O
refptr	*(*(struct(long)))
=	O
ref	*(struct(long))
;	O
ref	*(struct(long))
->	O
count	long
=	O
0	int
;	O
break	O
;	O
case	O
MU_ERR_EXISTS	O
:	O
ref	*(struct(long))
=	O
*	O
refptr	*(*(struct(long)))
;	O
break	O
;	O
default	O
:	O
mu_diag_funcall	(int,*(char),*(char),int)->(void)
(	O
MU_DIAG_ERROR	O
,	O
"mu_assoc_install_ref2"	*(char)
,	O
name	*(char)
,	O
rc	int
)	O
;	O
return	O
rc	int
;	O
}	O
ref	*(struct(long))
->	O
count	long
++	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_ident_deref	(*(char))->(int)
(	O
char	O
const	O
*	O
name	*(char)
)	O
{	O
struct	O
mu_ident_ref	(*(char),*(*(char)))->(int)
*	O
ref	*(struct(long))
;	O
int	O
rc	int
;	O
if	O
(	O
!	O
name	*(char)
||	O
!	O
nametab	*(struct)
)	O
return	O
0	int
;	O
rc	int
=	O
mu_assoc_lookup	(*(struct),*(char),*(void))->(int)
(	O
nametab	*(struct)
,	O
name	*(char)
,	O
&	O
ref	*(struct(long))
)	O
;	O
switch	O
(	O
rc	int
)	O
{	O
case	O
0	int
:	O
if	O
(	O
--	O
ref	*(struct(long))
->	O
count	long
==	O
0	int
)	O
mu_assoc_remove	(*(struct),*(char))->(int)
(	O
nametab	*(struct)
,	O
name	*(char)
)	O
;	O
break	O
;	O
case	O
MU_ERR_NOENT	O
:	O
break	O
;	O
default	O
:	O
mu_diag_funcall	(int,*(char),*(char),int)->(void)
(	O
MU_DIAG_ERROR	O
,	O
"mu_assoc_lookup"	*(char)
,	O
name	*(char)
,	O
rc	int
)	O
;	O
return	O
rc	int
;	O
}	O
return	O
0	int
;	O
}	O
void	O
mu_ident_stat	(*(struct))->(void)
(	O
mu_stream_t	*(struct)
str	*(struct)
)	O
{	O
size_t	long
count	long
,	O
i	long
;	O
mu_iterator_t	*(struct)
itr	*(struct)
;	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
str	*(struct)
,	O
"BEGIN IDENT STAT\n"	*(char)
)	O
;	O
mu_assoc_count	(*(struct),*(long))->(int)
(	O
nametab	*(struct)
,	O
&	O
count	long
)	O
;	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
str	*(struct)
,	O
"N=%zu\n"	*(char)
,	O
count	long
)	O
;	O
if	O
(	O
count	long
>	O
0	int
)	O
{	O
int	O
rc	int
=	O
mu_assoc_get_iterator	(*(struct),*(*(struct)))->(int)
(	O
nametab	*(struct)
,	O
&	O
itr	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
str	*(struct)
,	O
"mu_assoc_get_iterator: %s\n"	*(char)
,	O
mu_strerror	(int)->(*(char))
(	O
rc	int
)	O
)	O
;	O
else	O
{	O
i	long
=	O
0	int
;	O
for	O
(	O
mu_iterator_first	(*(struct))->(int)
(	O
itr	*(struct)
)	O
;	O
!	O
mu_iterator_is_done	(*(struct))->(int)
(	O
itr	*(struct)
)	O
;	O
mu_iterator_next	(*(struct))->(int)
(	O
itr	*(struct)
)	O
,	O
i	long
++	O
)	O
{	O
const	O
char	O
*	O
key	*(*(void))
;	O
struct	O
mu_ident_ref	(*(char),*(*(char)))->(int)
*	O
ref	*(struct(long))
;	O
mu_iterator_current_kv	(*(struct),*(*(void)),*(*(void)))->(int)
(	O
itr	*(struct)
,	O
(	O
const	O
void	O
*	O
*	O
)	O
&	O
key	*(*(void))
,	O
(	O
void	O
*	O
*	O
)	O
&	O
ref	*(struct(long))
)	O
;	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
str	*(struct)
,	O
"%04zu: %s: %zu\n"	*(char)
,	O
i	long
,	O
key	*(*(void))
,	O
ref	*(struct(long))
->	O
count	long
)	O
;	O
}	O
}	O
mu_iterator_destroy	(*(*(struct)))->(void)
(	O
&	O
itr	*(struct)
)	O
;	O
}	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
str	*(struct)
,	O
"END IDENT STAT\n"	*(char)
)	O
;	O
}	O
