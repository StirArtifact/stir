static	O
const	O
char	O
revid	array(char)
[	O
]	O
=	O
"$Id: os_method.c,v 1.4 2000/06/28 16:47:02 loic Exp $"	*(char)
;	O
struct	O
__db_jumptab	struct(*((int)->(int)),*((*(*(char)),int)->(void)),*((*(char),*(*(*(char))),*(int))->(int)),*((*(char),*(int))->(int)),*((*(void))->(void)),*((int)->(int)),*((*(char),int,*(int),*(int),*(int))->(int)),*((long)->(*(void))),*((*(char),long,int,int,*(*(void)))->(int)),*((*(char),int)->(int)),*((int,*(void),long)->(long)),*((*(void),long)->(*(void))),*((*(char),*(char))->(int)),*((int,long,int,int,int,int)->(int)),*((long,long)->(int)),*((*(char))->(int)),*((*(void),long)->(int)),*((int,*(void),long)->(long)),*(()->(int)))
CDB___db_jump	struct(*((int)->(int)),*((*(*(char)),int)->(void)),*((*(char),*(*(*`)),*(int))->(int)),*((*(char),*(int))->(int)),*((*(void))->(void)),*((int)->(int)),*((*(char),int,*(int),*(int),*(int))->(int)),*((long)->(*(void))),*((*(char),long,int,int,*(*(void)))->(int)),*((*(char),int)->(int)),*((int,*(void),long)->(long)),*((*(void),long)->(*(void))),*((*(char),*(char))->(int)),*((int,long,int,int,int,int)->(int)),*((long,long)->(int)),*((*(char))->(int)),*((*(void),long)->(int)),*((int,*(void),long)->(long)),*(()->(int)))
;	O
int	O
CDB_db_env_set_func_close	(*((int)->(int)))->(int)
(	O
func_close	*((int)->(int))
)	O
int	O
(	O
*	O
func_close	*((int)->(int))
)	O
__P	O
(	O
(	O
int	O
)	O
)	O
;	O
{	O
CDB___db_jump	struct(*((int)->(int)),*((*(*(char)),int)->(void)),*((*(char),*(*(*`)),*(int))->(int)),*((*(char),*(int))->(int)),*((*(void))->(void)),*((int)->(int)),*((*(char),int,*(int),*(int),*(int))->(int)),*((long)->(*(void))),*((*(char),long,int,int,*(*(void)))->(int)),*((*(char),int)->(int)),*((int,*(void),long)->(long)),*((*(void),long)->(*(void))),*((*(char),*(char))->(int)),*((int,long,int,int,int,int)->(int)),*((long,long)->(int)),*((*(char))->(int)),*((*(void),long)->(int)),*((int,*(void),long)->(long)),*(()->(int)))
.	O
j_close	*((int)->(int))
=	O
func_close	*((int)->(int))
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB_db_env_set_func_dirfree	(*((*(*(char)),int)->(void)))->(int)
(	O
func_dirfree	*((*(*(char)),int)->(void))
)	O
void	O
(	O
*	O
func_dirfree	*((*(*(char)),int)->(void))
)	O
__P	O
(	O
(	O
char	O
*	O
*	O
,	O
int	O
)	O
)	O
;	O
{	O
CDB___db_jump	struct(*((int)->(int)),*((*(*(char)),int)->(void)),*((*(char),*(*(*`)),*(int))->(int)),*((*(char),*(int))->(int)),*((*(void))->(void)),*((int)->(int)),*((*(char),int,*(int),*(int),*(int))->(int)),*((long)->(*(void))),*((*(char),long,int,int,*(*(void)))->(int)),*((*(char),int)->(int)),*((int,*(void),long)->(long)),*((*(void),long)->(*(void))),*((*(char),*(char))->(int)),*((int,long,int,int,int,int)->(int)),*((long,long)->(int)),*((*(char))->(int)),*((*(void),long)->(int)),*((int,*(void),long)->(long)),*(()->(int)))
.	O
j_dirfree	*((*(*(char)),int)->(void))
=	O
func_dirfree	*((*(*(char)),int)->(void))
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB_db_env_set_func_dirlist	(*((*(char),*(*(*`)),*(int))->(int)))->(int)
(	O
func_dirlist	*((*(char),*(*(*(char))),*(int))->(int))
)	O
int	O
(	O
*	O
func_dirlist	*((*(char),*(*(*(char))),*(int))->(int))
)	O
__P	O
(	O
(	O
const	O
char	O
*	O
,	O
char	O
*	O
*	O
*	O
,	O
int	O
*	O
)	O
)	O
;	O
{	O
CDB___db_jump	struct(*((int)->(int)),*((*(*(char)),int)->(void)),*((*(char),*(*(*`)),*(int))->(int)),*((*(char),*(int))->(int)),*((*(void))->(void)),*((int)->(int)),*((*(char),int,*(int),*(int),*(int))->(int)),*((long)->(*(void))),*((*(char),long,int,int,*(*(void)))->(int)),*((*(char),int)->(int)),*((int,*(void),long)->(long)),*((*(void),long)->(*(void))),*((*(char),*(char))->(int)),*((int,long,int,int,int,int)->(int)),*((long,long)->(int)),*((*(char))->(int)),*((*(void),long)->(int)),*((int,*(void),long)->(long)),*(()->(int)))
.	O
j_dirlist	*((*(char),*(*(*(char))),*(int))->(int))
=	O
func_dirlist	*((*(char),*(*(*(char))),*(int))->(int))
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB_db_env_set_func_exists	(*((*(char),*(int))->(int)))->(int)
(	O
func_exists	*((*(char),*(int))->(int))
)	O
int	O
(	O
*	O
func_exists	*((*(char),*(int))->(int))
)	O
__P	O
(	O
(	O
const	O
char	O
*	O
,	O
int	O
*	O
)	O
)	O
;	O
{	O
CDB___db_jump	struct(*((int)->(int)),*((*(*(char)),int)->(void)),*((*(char),*(*(*`)),*(int))->(int)),*((*(char),*(int))->(int)),*((*(void))->(void)),*((int)->(int)),*((*(char),int,*(int),*(int),*(int))->(int)),*((long)->(*(void))),*((*(char),long,int,int,*(*(void)))->(int)),*((*(char),int)->(int)),*((int,*(void),long)->(long)),*((*(void),long)->(*(void))),*((*(char),*(char))->(int)),*((int,long,int,int,int,int)->(int)),*((long,long)->(int)),*((*(char))->(int)),*((*(void),long)->(int)),*((int,*(void),long)->(long)),*(()->(int)))
.	O
j_exists	*((*(char),*(int))->(int))
=	O
func_exists	*((*(char),*(int))->(int))
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB_db_env_set_func_free	(*((*(void))->(void)))->(int)
(	O
func_free	*((*(void))->(void))
)	O
void	O
(	O
*	O
func_free	*((*(void))->(void))
)	O
__P	O
(	O
(	O
void	O
*	O
)	O
)	O
;	O
{	O
CDB___db_jump	struct(*((int)->(int)),*((*(*(char)),int)->(void)),*((*(char),*(*(*`)),*(int))->(int)),*((*(char),*(int))->(int)),*((*(void))->(void)),*((int)->(int)),*((*(char),int,*(int),*(int),*(int))->(int)),*((long)->(*(void))),*((*(char),long,int,int,*(*(void)))->(int)),*((*(char),int)->(int)),*((int,*(void),long)->(long)),*((*(void),long)->(*(void))),*((*(char),*(char))->(int)),*((int,long,int,int,int,int)->(int)),*((long,long)->(int)),*((*(char))->(int)),*((*(void),long)->(int)),*((int,*(void),long)->(long)),*(()->(int)))
.	O
j_free	*((*(void))->(void))
=	O
func_free	*((*(void))->(void))
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB_db_env_set_func_fsync	(*((int)->(int)))->(int)
(	O
func_fsync	*((int)->(int))
)	O
int	O
(	O
*	O
func_fsync	*((int)->(int))
)	O
__P	O
(	O
(	O
int	O
)	O
)	O
;	O
{	O
CDB___db_jump	struct(*((int)->(int)),*((*(*(char)),int)->(void)),*((*(char),*(*(*`)),*(int))->(int)),*((*(char),*(int))->(int)),*((*(void))->(void)),*((int)->(int)),*((*(char),int,*(int),*(int),*(int))->(int)),*((long)->(*(void))),*((*(char),long,int,int,*(*(void)))->(int)),*((*(char),int)->(int)),*((int,*(void),long)->(long)),*((*(void),long)->(*(void))),*((*(char),*(char))->(int)),*((int,long,int,int,int,int)->(int)),*((long,long)->(int)),*((*(char))->(int)),*((*(void),long)->(int)),*((int,*(void),long)->(long)),*(()->(int)))
.	O
j_fsync	*((int)->(int))
=	O
func_fsync	*((int)->(int))
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB_db_env_set_func_ioinfo	(*((*(char),int,*(int),*(int),*(int))->(int)))->(int)
(	O
func_ioinfo	*((*(char),int,*(int),*(int),*(int))->(int))
)	O
int	O
(	O
*	O
func_ioinfo	*((*(char),int,*(int),*(int),*(int))->(int))
)	O
__P	O
(	O
(	O
const	O
char	O
*	O
,	O
int	O
,	O
u_int32_t	int
*	O
,	O
u_int32_t	int
*	O
,	O
u_int32_t	int
*	O
)	O
)	O
;	O
{	O
CDB___db_jump	struct(*((int)->(int)),*((*(*(char)),int)->(void)),*((*(char),*(*(*`)),*(int))->(int)),*((*(char),*(int))->(int)),*((*(void))->(void)),*((int)->(int)),*((*(char),int,*(int),*(int),*(int))->(int)),*((long)->(*(void))),*((*(char),long,int,int,*(*(void)))->(int)),*((*(char),int)->(int)),*((int,*(void),long)->(long)),*((*(void),long)->(*(void))),*((*(char),*(char))->(int)),*((int,long,int,int,int,int)->(int)),*((long,long)->(int)),*((*(char))->(int)),*((*(void),long)->(int)),*((int,*(void),long)->(long)),*(()->(int)))
.	O
j_ioinfo	*((*(char),int,*(int),*(int),*(int))->(int))
=	O
func_ioinfo	*((*(char),int,*(int),*(int),*(int))->(int))
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB_db_env_set_func_malloc	(*((long)->(*(void))))->(int)
(	O
func_malloc	*((long)->(*(void)))
)	O
void	O
*	O
(	O
*	O
func_malloc	*((long)->(*(void)))
)	O
__P	O
(	O
(	O
size_t	long
)	O
)	O
;	O
{	O
CDB___db_jump	struct(*((int)->(int)),*((*(*(char)),int)->(void)),*((*(char),*(*(*`)),*(int))->(int)),*((*(char),*(int))->(int)),*((*(void))->(void)),*((int)->(int)),*((*(char),int,*(int),*(int),*(int))->(int)),*((long)->(*(void))),*((*(char),long,int,int,*(*(void)))->(int)),*((*(char),int)->(int)),*((int,*(void),long)->(long)),*((*(void),long)->(*(void))),*((*(char),*(char))->(int)),*((int,long,int,int,int,int)->(int)),*((long,long)->(int)),*((*(char))->(int)),*((*(void),long)->(int)),*((int,*(void),long)->(long)),*(()->(int)))
.	O
j_malloc	*((long)->(*(void)))
=	O
func_malloc	*((long)->(*(void)))
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB_db_env_set_func_map	(*((*(char),long,int,int,*(*(void)))->(int)))->(int)
(	O
func_map	*((*(char),long,int,int,*(*(void)))->(int))
)	O
int	O
(	O
*	O
func_map	*((*(char),long,int,int,*(*(void)))->(int))
)	O
__P	O
(	O
(	O
char	O
*	O
,	O
size_t	long
,	O
int	O
,	O
int	O
,	O
void	O
*	O
*	O
)	O
)	O
;	O
{	O
CDB___db_jump	struct(*((int)->(int)),*((*(*(char)),int)->(void)),*((*(char),*(*(*`)),*(int))->(int)),*((*(char),*(int))->(int)),*((*(void))->(void)),*((int)->(int)),*((*(char),int,*(int),*(int),*(int))->(int)),*((long)->(*(void))),*((*(char),long,int,int,*(*(void)))->(int)),*((*(char),int)->(int)),*((int,*(void),long)->(long)),*((*(void),long)->(*(void))),*((*(char),*(char))->(int)),*((int,long,int,int,int,int)->(int)),*((long,long)->(int)),*((*(char))->(int)),*((*(void),long)->(int)),*((int,*(void),long)->(long)),*(()->(int)))
.	O
j_map	*((*(char),long,int,int,*(*(void)))->(int))
=	O
func_map	*((*(char),long,int,int,*(*(void)))->(int))
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB_db_env_set_func_open	(*((*(char),int)->(int)))->(int)
(	O
func_open	*((*(char),int)->(int))
)	O
int	O
(	O
*	O
func_open	*((*(char),int)->(int))
)	O
__P	O
(	O
(	O
const	O
char	O
*	O
,	O
int	O
,	O
...	O
)	O
)	O
;	O
{	O
CDB___db_jump	struct(*((int)->(int)),*((*(*(char)),int)->(void)),*((*(char),*(*(*`)),*(int))->(int)),*((*(char),*(int))->(int)),*((*(void))->(void)),*((int)->(int)),*((*(char),int,*(int),*(int),*(int))->(int)),*((long)->(*(void))),*((*(char),long,int,int,*(*(void)))->(int)),*((*(char),int)->(int)),*((int,*(void),long)->(long)),*((*(void),long)->(*(void))),*((*(char),*(char))->(int)),*((int,long,int,int,int,int)->(int)),*((long,long)->(int)),*((*(char))->(int)),*((*(void),long)->(int)),*((int,*(void),long)->(long)),*(()->(int)))
.	O
j_open	*((*(char),int)->(int))
=	O
func_open	*((*(char),int)->(int))
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB_db_env_set_func_read	(*((int,*(void),long)->(long)))->(int)
(	O
func_read	*((int,*(void),long)->(long))
)	O
ssize_t	long
(	O
*	O
func_read	*((int,*(void),long)->(long))
)	O
__P	O
(	O
(	O
int	O
,	O
void	O
*	O
,	O
size_t	long
)	O
)	O
;	O
{	O
CDB___db_jump	struct(*((int)->(int)),*((*(*(char)),int)->(void)),*((*(char),*(*(*`)),*(int))->(int)),*((*(char),*(int))->(int)),*((*(void))->(void)),*((int)->(int)),*((*(char),int,*(int),*(int),*(int))->(int)),*((long)->(*(void))),*((*(char),long,int,int,*(*(void)))->(int)),*((*(char),int)->(int)),*((int,*(void),long)->(long)),*((*(void),long)->(*(void))),*((*(char),*(char))->(int)),*((int,long,int,int,int,int)->(int)),*((long,long)->(int)),*((*(char))->(int)),*((*(void),long)->(int)),*((int,*(void),long)->(long)),*(()->(int)))
.	O
j_read	*((int,*(void),long)->(long))
=	O
func_read	*((int,*(void),long)->(long))
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB_db_env_set_func_realloc	(*((*(void),long)->(*(void))))->(int)
(	O
func_realloc	*((*(void),long)->(*(void)))
)	O
void	O
*	O
(	O
*	O
func_realloc	*((*(void),long)->(*(void)))
)	O
__P	O
(	O
(	O
void	O
*	O
,	O
size_t	long
)	O
)	O
;	O
{	O
CDB___db_jump	struct(*((int)->(int)),*((*(*(char)),int)->(void)),*((*(char),*(*(*`)),*(int))->(int)),*((*(char),*(int))->(int)),*((*(void))->(void)),*((int)->(int)),*((*(char),int,*(int),*(int),*(int))->(int)),*((long)->(*(void))),*((*(char),long,int,int,*(*(void)))->(int)),*((*(char),int)->(int)),*((int,*(void),long)->(long)),*((*(void),long)->(*(void))),*((*(char),*(char))->(int)),*((int,long,int,int,int,int)->(int)),*((long,long)->(int)),*((*(char))->(int)),*((*(void),long)->(int)),*((int,*(void),long)->(long)),*(()->(int)))
.	O
j_realloc	*((*(void),long)->(*(void)))
=	O
func_realloc	*((*(void),long)->(*(void)))
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB_db_env_set_func_rename	(*((*(char),*(char))->(int)))->(int)
(	O
func_rename	*((*(char),*(char))->(int))
)	O
int	O
(	O
*	O
func_rename	*((*(char),*(char))->(int))
)	O
__P	O
(	O
(	O
const	O
char	O
*	O
,	O
const	O
char	O
*	O
)	O
)	O
;	O
{	O
CDB___db_jump	struct(*((int)->(int)),*((*(*(char)),int)->(void)),*((*(char),*(*(*`)),*(int))->(int)),*((*(char),*(int))->(int)),*((*(void))->(void)),*((int)->(int)),*((*(char),int,*(int),*(int),*(int))->(int)),*((long)->(*(void))),*((*(char),long,int,int,*(*(void)))->(int)),*((*(char),int)->(int)),*((int,*(void),long)->(long)),*((*(void),long)->(*(void))),*((*(char),*(char))->(int)),*((int,long,int,int,int,int)->(int)),*((long,long)->(int)),*((*(char))->(int)),*((*(void),long)->(int)),*((int,*(void),long)->(long)),*(()->(int)))
.	O
j_rename	*((*(char),*(char))->(int))
=	O
func_rename	*((*(char),*(char))->(int))
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB_db_env_set_func_seek	(*((int,long,int,int,int,int)->(int)))->(int)
(	O
func_seek	*((int,long,int,int,int,int)->(int))
)	O
int	O
(	O
*	O
func_seek	*((int,long,int,int,int,int)->(int))
)	O
__P	O
(	O
(	O
int	O
,	O
size_t	long
,	O
db_pgno_t	int
,	O
u_int32_t	int
,	O
int	O
,	O
int	O
)	O
)	O
;	O
{	O
CDB___db_jump	struct(*((int)->(int)),*((*(*(char)),int)->(void)),*((*(char),*(*(*`)),*(int))->(int)),*((*(char),*(int))->(int)),*((*(void))->(void)),*((int)->(int)),*((*(char),int,*(int),*(int),*(int))->(int)),*((long)->(*(void))),*((*(char),long,int,int,*(*(void)))->(int)),*((*(char),int)->(int)),*((int,*(void),long)->(long)),*((*(void),long)->(*(void))),*((*(char),*(char))->(int)),*((int,long,int,int,int,int)->(int)),*((long,long)->(int)),*((*(char))->(int)),*((*(void),long)->(int)),*((int,*(void),long)->(long)),*(()->(int)))
.	O
j_seek	*((int,long,int,int,int,int)->(int))
=	O
func_seek	*((int,long,int,int,int,int)->(int))
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB_db_env_set_func_sleep	(*((long,long)->(int)))->(int)
(	O
func_sleep	*((long,long)->(int))
)	O
int	O
(	O
*	O
func_sleep	*((long,long)->(int))
)	O
__P	O
(	O
(	O
u_long	long
,	O
u_long	long
)	O
)	O
;	O
{	O
CDB___db_jump	struct(*((int)->(int)),*((*(*(char)),int)->(void)),*((*(char),*(*(*`)),*(int))->(int)),*((*(char),*(int))->(int)),*((*(void))->(void)),*((int)->(int)),*((*(char),int,*(int),*(int),*(int))->(int)),*((long)->(*(void))),*((*(char),long,int,int,*(*(void)))->(int)),*((*(char),int)->(int)),*((int,*(void),long)->(long)),*((*(void),long)->(*(void))),*((*(char),*(char))->(int)),*((int,long,int,int,int,int)->(int)),*((long,long)->(int)),*((*(char))->(int)),*((*(void),long)->(int)),*((int,*(void),long)->(long)),*(()->(int)))
.	O
j_sleep	*((long,long)->(int))
=	O
func_sleep	*((long,long)->(int))
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB_db_env_set_func_unlink	(*((*(char))->(int)))->(int)
(	O
func_unlink	*((*(char))->(int))
)	O
int	O
(	O
*	O
func_unlink	*((*(char))->(int))
)	O
__P	O
(	O
(	O
const	O
char	O
*	O
)	O
)	O
;	O
{	O
CDB___db_jump	struct(*((int)->(int)),*((*(*(char)),int)->(void)),*((*(char),*(*(*`)),*(int))->(int)),*((*(char),*(int))->(int)),*((*(void))->(void)),*((int)->(int)),*((*(char),int,*(int),*(int),*(int))->(int)),*((long)->(*(void))),*((*(char),long,int,int,*(*(void)))->(int)),*((*(char),int)->(int)),*((int,*(void),long)->(long)),*((*(void),long)->(*(void))),*((*(char),*(char))->(int)),*((int,long,int,int,int,int)->(int)),*((long,long)->(int)),*((*(char))->(int)),*((*(void),long)->(int)),*((int,*(void),long)->(long)),*(()->(int)))
.	O
j_unlink	*((*(char))->(int))
=	O
func_unlink	*((*(char))->(int))
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB_db_env_set_func_unmap	(*((*(void),long)->(int)))->(int)
(	O
func_unmap	*((*(void),long)->(int))
)	O
int	O
(	O
*	O
func_unmap	*((*(void),long)->(int))
)	O
__P	O
(	O
(	O
void	O
*	O
,	O
size_t	long
)	O
)	O
;	O
{	O
CDB___db_jump	struct(*((int)->(int)),*((*(*(char)),int)->(void)),*((*(char),*(*(*`)),*(int))->(int)),*((*(char),*(int))->(int)),*((*(void))->(void)),*((int)->(int)),*((*(char),int,*(int),*(int),*(int))->(int)),*((long)->(*(void))),*((*(char),long,int,int,*(*(void)))->(int)),*((*(char),int)->(int)),*((int,*(void),long)->(long)),*((*(void),long)->(*(void))),*((*(char),*(char))->(int)),*((int,long,int,int,int,int)->(int)),*((long,long)->(int)),*((*(char))->(int)),*((*(void),long)->(int)),*((int,*(void),long)->(long)),*(()->(int)))
.	O
j_unmap	*((*(void),long)->(int))
=	O
func_unmap	*((*(void),long)->(int))
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB_db_env_set_func_write	(*((int,*(void),long)->(long)))->(int)
(	O
func_write	*((int,*(void),long)->(long))
)	O
ssize_t	long
(	O
*	O
func_write	*((int,*(void),long)->(long))
)	O
__P	O
(	O
(	O
int	O
,	O
const	O
void	O
*	O
,	O
size_t	long
)	O
)	O
;	O
{	O
CDB___db_jump	struct(*((int)->(int)),*((*(*(char)),int)->(void)),*((*(char),*(*(*`)),*(int))->(int)),*((*(char),*(int))->(int)),*((*(void))->(void)),*((int)->(int)),*((*(char),int,*(int),*(int),*(int))->(int)),*((long)->(*(void))),*((*(char),long,int,int,*(*(void)))->(int)),*((*(char),int)->(int)),*((int,*(void),long)->(long)),*((*(void),long)->(*(void))),*((*(char),*(char))->(int)),*((int,long,int,int,int,int)->(int)),*((long,long)->(int)),*((*(char))->(int)),*((*(void),long)->(int)),*((int,*(void),long)->(long)),*(()->(int)))
.	O
j_write	*((int,*(void),long)->(long))
=	O
func_write	*((int,*(void),long)->(long))
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB_db_env_set_func_yield	(*(()->(int)))->(int)
(	O
func_yield	*(()->(int))
)	O
int	O
(	O
*	O
func_yield	*(()->(int))
)	O
__P	O
(	O
(	O
void	O
)	O
)	O
;	O
{	O
CDB___db_jump	struct(*((int)->(int)),*((*(*(char)),int)->(void)),*((*(char),*(*(*`)),*(int))->(int)),*((*(char),*(int))->(int)),*((*(void))->(void)),*((int)->(int)),*((*(char),int,*(int),*(int),*(int))->(int)),*((long)->(*(void))),*((*(char),long,int,int,*(*(void)))->(int)),*((*(char),int)->(int)),*((int,*(void),long)->(long)),*((*(void),long)->(*(void))),*((*(char),*(char))->(int)),*((int,long,int,int,int,int)->(int)),*((long,long)->(int)),*((*(char))->(int)),*((*(void),long)->(int)),*((int,*(void),long)->(long)),*(()->(int)))
.	O
j_yield	*(()->(int))
=	O
func_yield	*(()->(int))
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB_db_env_set_mutexlocks	(int)->(int)
(	O
onoff	int
)	O
int	O
onoff	int
;	O
{	O
DB_GLOBAL	O
(	O
db_mutexlocks	int
)	O
=	O
onoff	int
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB_db_env_set_pageyield	(int)->(int)
(	O
onoff	int
)	O
int	O
onoff	int
;	O
{	O
DB_GLOBAL	O
(	O
db_pageyield	int
)	O
=	O
onoff	int
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB_db_env_set_panicstate	(int)->(int)
(	O
onoff	int
)	O
int	O
onoff	int
;	O
{	O
DB_GLOBAL	O
(	O
db_panic	int
)	O
=	O
onoff	int
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB_db_env_set_region_init	(int)->(int)
(	O
onoff	int
)	O
int	O
onoff	int
;	O
{	O
DB_GLOBAL	O
(	O
db_region_init	int
)	O
=	O
onoff	int
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB_db_env_set_tas_spins	(int)->(int)
(	O
tas_spins	int
)	O
u_int32_t	int
tas_spins	int
;	O
{	O
DB_GLOBAL	O
(	O
db_tas_spins	int
)	O
=	O
tas_spins	int
;	O
return	O
(	O
0	int
)	O
;	O
}	O
