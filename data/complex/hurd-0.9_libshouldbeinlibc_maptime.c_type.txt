error_t	O
maptime_map	(int,*(char),*(*(struct)))->(int)
(	O
int	O
use_mach_dev	int
,	O
char	O
*	O
dev_name	*(char)
,	O
volatile	O
struct	O
mapped_time_value	O
*	O
*	O
mtime	*(*(struct))
)	O
{	O
error_t	O
err	O
;	O
mach_port_t	O
memobj	O
;	O
if	O
(	O
use_mach_dev	int
)	O
{	O
device_t	O
device	O
;	O
mach_port_t	O
device_master	O
;	O
err	O
=	O
get_privileged_ports	()->(int)
(	O
0	int
,	O
&	O
device_master	O
)	O
;	O
if	O
(	O
err	O
)	O
return	O
err	O
;	O
err	O
=	O
device_open	()->(int)
(	O
device_master	O
,	O
0	int
,	O
dev_name	*(char)
?	O
:	O
"time"	*(char)
,	O
&	O
device	O
)	O
;	O
mach_port_deallocate	()->(int)
(	O
mach_task_self	()->(int)
(	O
)	O
,	O
device_master	O
)	O
;	O
if	O
(	O
err	O
)	O
return	O
err	O
;	O
err	O
=	O
device_map	()->(int)
(	O
device	O
,	O
VM_PROT_READ	O
,	O
0	int
,	O
sizeof	O
*	O
mtime	*(*(struct))
,	O
&	O
memobj	O
,	O
0	int
)	O
;	O
mach_port_deallocate	()->(int)
(	O
mach_task_self	()->(int)
(	O
)	O
,	O
device	O
)	O
;	O
}	O
else	O
{	O
mach_port_t	O
wr_memobj	O
;	O
file_t	O
node	O
=	O
file_name_lookup	O
(	O
dev_name	*(char)
?	O
:	O
"/dev/time"	*(char)
,	O
O_RDONLY	int
,	O
0	int
)	O
;	O
if	O
(	O
node	O
==	O
MACH_PORT_NULL	O
)	O
return	O
errno	O
;	O
err	O
=	O
io_map	()->(int)
(	O
node	O
,	O
&	O
memobj	O
,	O
&	O
wr_memobj	O
)	O
;	O
if	O
(	O
!	O
err	O
&&	O
wr_memobj	O
!=	O
MACH_PORT_NULL	O
)	O
mach_port_deallocate	()->(int)
(	O
mach_task_self	()->(int)
(	O
)	O
,	O
wr_memobj	O
)	O
;	O
mach_port_deallocate	()->(int)
(	O
mach_task_self	()->(int)
(	O
)	O
,	O
node	O
)	O
;	O
}	O
if	O
(	O
!	O
err	O
)	O
{	O
*	O
mtime	*(*(struct))
=	O
0	int
;	O
err	O
=	O
vm_map	()->(int)
(	O
mach_task_self	()->(int)
(	O
)	O
,	O
(	O
vm_address_t	O
*	O
)	O
mtime	*(*(struct))
,	O
sizeof	O
*	O
mtime	*(*(struct))
,	O
0	int
,	O
1	int
,	O
memobj	O
,	O
0	int
,	O
0	int
,	O
VM_PROT_READ	O
,	O
VM_PROT_READ	O
,	O
VM_INHERIT_NONE	O
)	O
;	O
mach_port_deallocate	()->(int)
(	O
mach_task_self	()->(int)
(	O
)	O
,	O
memobj	O
)	O
;	O
}	O
return	O
err	O
;	O
}	O
