static	O
struct	O
port_bucket	O
*	O
pf_port_bucket	*(struct)
;	O
int	O
trivfs_fstype	int
=	O
FSTYPE_MISC	int
;	O
int	O
trivfs_fsid	int
=	O
0	int
;	O
int	O
trivfs_support_read	int
=	O
0	int
;	O
int	O
trivfs_support_write	int
=	O
0	int
;	O
int	O
trivfs_support_exec	int
=	O
0	int
;	O
int	O
trivfs_allow_open	int
=	O
0	int
;	O
static	O
int	O
pf_demuxer	(*(int),*(int))->(int)
(	O
mach_msg_header_t	O
*	O
inp	*(int)
,	O
mach_msg_header_t	O
*	O
outp	*(int)
)	O
{	O
mig_routine_t	O
routine	O
;	O
if	O
(	O
(	O
routine	O
=	O
socket_server_routine	()->(int)
(	O
inp	*(int)
)	O
)	O
||	O
(	O
routine	O
=	O
NULL	O
,	O
trivfs_demuxer	()->(int)
(	O
inp	*(int)
,	O
outp	*(int)
)	O
)	O
)	O
{	O
if	O
(	O
routine	O
)	O
(	O
*	O
routine	O
)	O
(	O
inp	*(int)
,	O
outp	*(int)
)	O
;	O
return	O
TRUE	O
;	O
}	O
else	O
return	O
FALSE	O
;	O
}	O
int	O
main	(int,array(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
error_t	O
err	O
;	O
mach_port_t	O
bootstrap	O
;	O
struct	O
trivfs_control	O
*	O
fsys	*(struct)
;	O
if	O
(	O
argc	int
>	O
1	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Usage: %s\n"	*(char)
,	O
program_invocation_name	O
)	O
;	O
exit	O
(	O
1	int
)	O
;	O
}	O
task_get_bootstrap_port	()->(int)
(	O
mach_task_self	()->(int)
(	O
)	O
,	O
&	O
bootstrap	O
)	O
;	O
if	O
(	O
bootstrap	O
==	O
MACH_PORT_NULL	O
)	O
error	(int,int,*(char))->(void)
(	O
2	int
,	O
0	int
,	O
"Must be started as a translator"	*(char)
)	O
;	O
err	O
=	O
sock_global_init	()->(int)
(	O
)	O
;	O
if	O
(	O
err	O
)	O
error	(int,int,*(char))->(void)
(	O
3	int
,	O
err	O
,	O
"Initializing"	*(char)
)	O
;	O
err	O
=	O
trivfs_startup	()->(int)
(	O
bootstrap	O
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
&	O
fsys	*(struct)
)	O
;	O
if	O
(	O
err	O
)	O
error	(int,int,*(char))->(void)
(	O
3	int
,	O
err	O
,	O
"Contacting parent"	*(char)
)	O
;	O
pf_port_bucket	*(struct)
=	O
fsys	*(struct)
->	O
pi	O
.	O
bucket	O
;	O
do	O
ports_manage_port_operations_multithread	()->(int)
(	O
pf_port_bucket	*(struct)
,	O
pf_demuxer	(*(int),*(int))->(int)
,	O
30	int
*	O
1000	int
,	O
5	int
*	O
60	int
*	O
1000	int
,	O
0	int
)	O
;	O
while	O
(	O
sock_global_shutdown	()->(int)
(	O
)	O
!=	O
0	int
)	O
;	O
return	O
0	int
;	O
}	O
void	O
trivfs_modify_stat	(*(struct),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(void)
(	O
struct	O
trivfs_protid	O
*	O
cred	*(struct)
,	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
st	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
)	O
{	O
st	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_fstype	O
=	O
FSTYPE_MISC	int
;	O
}	O
error_t	O
trivfs_goaway	(*(struct),int)->(int)
(	O
struct	O
trivfs_control	O
*	O
fsys	*(struct)
,	O
int	O
flags	int
)	O
{	O
int	O
force	int
=	O
(	O
flags	int
&	O
FSYS_GOAWAY_FORCE	int
)	O
;	O
error_t	O
err	O
=	O
ports_inhibit_bucket_rpcs	O
(	O
pf_port_bucket	*(struct)
)	O
;	O
if	O
(	O
err	O
==	O
0	int
||	O
(	O
err	O
!=	O
EINTR	O
&&	O
force	int
)	O
)	O
{	O
err	O
=	O
sock_global_shutdown	()->(int)
(	O
)	O
;	O
if	O
(	O
err	O
==	O
0	int
||	O
force	int
)	O
exit	O
(	O
0	int
)	O
;	O
ports_resume_bucket_rpcs	()->(int)
(	O
pf_port_bucket	*(struct)
)	O
;	O
}	O
return	O
err	O
;	O
}	O
