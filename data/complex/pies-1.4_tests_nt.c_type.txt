typedef	O
struct	O
netcat_server	struct(*(char),*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long)))),*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))))->(int)),*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long)))),array(struct(array(char),long,long)))
netcat_server_t	struct
;	O
typedef	O
struct	O
netcat_stream	O
netcat_stream_t	struct
;	O
typedef	O
ssize_t	long
(	O
*	O
netcat_stream_io_t	*((*(struct))->(long))
)	O
(	O
netcat_server_t	struct
*	O
srv	*(struct)
)	O
;	O
typedef	O
int	O
(	O
*	O
netcat_stream_disconnect_t	*((*(struct))->(int))
)	O
(	O
netcat_server_t	struct
*	O
srv	*(struct)
)	O
;	O
enum	O
{	O
IN	int
,	O
OUT	int
}	O
;	O
struct	O
netcat_server	struct(*(char),*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long)))),*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))))->(int)),*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long)))),array(struct(array(char),long,long)))
{	O
char	O
const	O
*	O
id	*(char)
;	O
netcat_server_t	struct
*	O
next	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
,	O
*	O
prev	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
;	O
struct	O
pollfd	struct(int,short,short)
*	O
pollfd	struct(int,short,short)
;	O
int	O
state	*(int)
;	O
netcat_stream_disconnect_t	*((*(struct))->(int))
disconnect	*((*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))))->(int))
;	O
netcat_server_t	struct
*	O
peer	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
;	O
struct	O
iobuf	struct(array(char),long,long)
buf	*(char)
[	O
2	int
]	O
;	O
}	O
;	O
static	O
netcat_server_t	struct
*	O
server_head	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
,	O
*	O
server_tail	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
;	O
netcat_server_t	struct
*	O
netcat_server_create	(*(char),*(struct(int,short,short)),int,*((*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))))->(int)),*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))))->(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))))
(	O
char	O
const	O
*	O
id	*(char)
,	O
struct	O
pollfd	struct(int,short,short)
*	O
pfd	*(struct(int,short,short))
,	O
int	O
state	*(int)
,	O
netcat_stream_disconnect_t	*((*(struct))->(int))
dis	*((*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))))->(int))
,	O
netcat_server_t	struct
*	O
peer	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
)	O
{	O
netcat_server_t	struct
*	O
srv	*(struct)
=	O
grecs_zalloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
srv	*(struct)
)	O
)	O
;	O
srv	*(struct)
->	O
id	*(char)
=	O
id	*(char)
;	O
srv	*(struct)
->	O
pollfd	struct(int,short,short)
=	O
pfd	*(struct(int,short,short))
;	O
srv	*(struct)
->	O
state	*(int)
=	O
state	*(int)
;	O
srv	*(struct)
->	O
pollfd	struct(int,short,short)
->	O
events	short
|=	O
srv	*(struct)
->	O
state	*(int)
;	O
srv	*(struct)
->	O
disconnect	*((*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))))->(int))
=	O
dis	*((*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))))->(int))
;	O
srv	*(struct)
->	O
peer	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
=	O
peer	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
;	O
if	O
(	O
peer	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
)	O
srv	*(struct)
->	O
peer	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
->	O
peer	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
=	O
srv	*(struct)
;	O
iobuf_reset	(*(struct(array(char),long,long)))->(void)
(	O
&	O
srv	*(struct)
->	O
buf	*(char)
[	O
IN	int
]	O
)	O
;	O
iobuf_reset	(*(struct(array(char),long,long)))->(void)
(	O
&	O
srv	*(struct)
->	O
buf	*(char)
[	O
OUT	int
]	O
)	O
;	O
srv	*(struct)
->	O
prev	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
=	O
server_tail	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
;	O
srv	*(struct)
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
=	O
NULL	O
;	O
if	O
(	O
server_tail	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
)	O
server_tail	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
=	O
srv	*(struct)
;	O
else	O
server_head	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
=	O
srv	*(struct)
;	O
server_tail	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
=	O
srv	*(struct)
;	O
return	O
srv	*(struct)
;	O
}	O
void	O
netcat_server_remove	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))))->(void)
(	O
netcat_server_t	struct
*	O
srv	*(struct)
)	O
{	O
netcat_server_t	struct
*	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct(short,array(char)))))
;	O
if	O
(	O
(	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct(short,array(char)))))
=	O
srv	*(struct)
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
)	O
!=	O
NULL	O
)	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct(short,array(char)))))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
=	O
srv	*(struct)
->	O
prev	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
;	O
else	O
server_tail	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
=	O
srv	*(struct)
->	O
prev	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
;	O
if	O
(	O
(	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct(short,array(char)))))
=	O
srv	*(struct)
->	O
prev	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
)	O
!=	O
NULL	O
)	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct(short,array(char)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
=	O
srv	*(struct)
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
;	O
else	O
server_head	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
=	O
srv	*(struct)
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
;	O
if	O
(	O
srv	*(struct)
->	O
peer	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
)	O
srv	*(struct)
->	O
peer	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
->	O
peer	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
=	O
NULL	O
;	O
free	(*(void))->(void)
(	O
srv	*(struct)
)	O
;	O
}	O
static	O
inline	O
int	O
peer_is_state	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))),int)->(int)
(	O
netcat_server_t	struct
*	O
srv	*(struct)
,	O
int	O
state	*(int)
)	O
{	O
return	O
srv	*(struct)
->	O
peer	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
&&	O
(	O
srv	*(struct)
->	O
peer	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
->	O
state	*(int)
&	O
state	*(int)
)	O
;	O
}	O
static	O
void	O
netcat_stream_disconnect	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))),int)->(void)
(	O
netcat_server_t	struct
*	O
srv	*(struct)
,	O
int	O
mask	int
)	O
{	O
srv	*(struct)
->	O
disconnect	*((*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))))->(int))
(	O
srv	*(struct)
)	O
;	O
srv	*(struct)
->	O
state	*(int)
&=	O
~	O
mask	int
;	O
srv	*(struct)
->	O
pollfd	struct(int,short,short)
->	O
events	short
&=	O
~	O
mask	int
;	O
if	O
(	O
srv	*(struct)
->	O
pollfd	struct(int,short,short)
->	O
events	short
==	O
0	int
)	O
srv	*(struct)
->	O
pollfd	struct(int,short,short)
->	O
fd	int
=	O
-	O
1	int
;	O
}	O
ssize_t	long
netcat_stream_read	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))))->(long)
(	O
netcat_server_t	struct
*	O
srv	*(struct)
)	O
{	O
ssize_t	long
n	long
;	O
if	O
(	O
iobuf_avail_size	(*(struct(array(char),long,long)))->(long)
(	O
&	O
srv	*(struct)
->	O
buf	*(char)
[	O
IN	int
]	O
)	O
)	O
{	O
n	long
=	O
iobuf_fill	(*(struct(array(char),long,long)),int)->(long)
(	O
&	O
srv	*(struct)
->	O
buf	*(char)
[	O
IN	int
]	O
,	O
srv	*(struct)
->	O
pollfd	struct(int,short,short)
->	O
fd	int
)	O
;	O
if	O
(	O
n	long
==	O
-	O
1	int
)	O
{	O
if	O
(	O
errno	O
==	O
EINTR	int
)	O
return	O
0	int
;	O
grecs_error	(*(struct(struct(*(char),int,int),struct(*(char),int,int))),int,*(char))->(void)
(	O
NULL	O
,	O
errno	O
,	O
"%s: read"	*(char)
,	O
srv	*(struct)
->	O
id	*(char)
)	O
;	O
netcat_stream_disconnect	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))),int)->(void)
(	O
srv	*(struct)
,	O
POLLIN	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
n	long
==	O
0	int
||	O
!	O
peer_is_state	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))),int)->(int)
(	O
srv	*(struct)
,	O
POLLOUT	int
)	O
)	O
{	O
netcat_stream_disconnect	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))),int)->(void)
(	O
srv	*(struct)
,	O
POLLIN	int
)	O
;	O
if	O
(	O
srv	*(struct)
->	O
peer	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
)	O
netcat_stream_disconnect	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))),int)->(void)
(	O
srv	*(struct)
->	O
peer	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
,	O
POLLOUT	int
)	O
;	O
return	O
0	int
;	O
}	O
else	O
srv	*(struct)
->	O
peer	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
->	O
pollfd	struct(int,short,short)
->	O
events	short
|=	O
POLLOUT	int
;	O
}	O
else	O
{	O
srv	*(struct)
->	O
pollfd	struct(int,short,short)
->	O
events	short
&=	O
~	O
POLLIN	int
;	O
n	long
=	O
0	int
;	O
}	O
return	O
n	long
;	O
}	O
ssize_t	long
netcat_stream_write	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))))->(long)
(	O
netcat_server_t	struct
*	O
srv	*(struct)
)	O
{	O
ssize_t	long
n	long
;	O
if	O
(	O
iobuf_data_size	(*(struct(array(char),long,long)))->(long)
(	O
&	O
srv	*(struct)
->	O
buf	*(char)
[	O
OUT	int
]	O
)	O
==	O
0	int
)	O
{	O
if	O
(	O
!	O
peer_is_state	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))),int)->(int)
(	O
srv	*(struct)
,	O
POLLIN	int
)	O
)	O
{	O
netcat_stream_disconnect	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))),int)->(void)
(	O
srv	*(struct)
,	O
POLLOUT	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
iobuf_copy	(*(struct(array(char),long,long)),*(struct(array(char),long,long)))->(long)
(	O
&	O
srv	*(struct)
->	O
buf	*(char)
[	O
OUT	int
]	O
,	O
&	O
srv	*(struct)
->	O
peer	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
->	O
buf	*(char)
[	O
IN	int
]	O
)	O
==	O
0	int
)	O
{	O
srv	*(struct)
->	O
peer	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
->	O
pollfd	struct(int,short,short)
->	O
events	short
|=	O
POLLIN	int
;	O
srv	*(struct)
->	O
pollfd	struct(int,short,short)
->	O
events	short
&=	O
~	O
POLLOUT	int
;	O
return	O
0	int
;	O
}	O
}	O
n	long
=	O
iobuf_flush	(*(struct(array(char),long,long)),int)->(long)
(	O
&	O
srv	*(struct)
->	O
buf	*(char)
[	O
OUT	int
]	O
,	O
srv	*(struct)
->	O
pollfd	struct(int,short,short)
->	O
fd	int
)	O
;	O
if	O
(	O
n	long
==	O
-	O
1	int
)	O
{	O
if	O
(	O
errno	O
==	O
EINTR	int
)	O
return	O
0	int
;	O
grecs_error	(*(struct(struct(*(char),int,int),struct(*(char),int,int))),int,*(char))->(void)
(	O
NULL	O
,	O
errno	O
,	O
"%s: write"	*(char)
,	O
srv	*(struct)
->	O
id	*(char)
)	O
;	O
netcat_stream_disconnect	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))),int)->(void)
(	O
srv	*(struct)
,	O
POLLOUT	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
n	long
==	O
0	int
)	O
{	O
netcat_stream_disconnect	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))),int)->(void)
(	O
srv	*(struct)
,	O
POLLOUT	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
int	O
disconnect_in	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))))->(int)
(	O
netcat_server_t	struct
*	O
srv	*(struct)
)	O
{	O
return	O
shutdown	(int,int)->(int)
(	O
srv	*(struct)
->	O
pollfd	struct(int,short,short)
->	O
fd	int
,	O
SHUT_RD	int
)	O
;	O
}	O
int	O
disconnect_out	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))))->(int)
(	O
netcat_server_t	struct
*	O
srv	*(struct)
)	O
{	O
return	O
shutdown	(int,int)->(int)
(	O
srv	*(struct)
->	O
pollfd	struct(int,short,short)
->	O
fd	int
,	O
SHUT_WR	int
)	O
;	O
}	O
int	O
disconnect_stdin	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))))->(int)
(	O
netcat_server_t	struct
*	O
srv	*(struct)
)	O
{	O
return	O
close	*((*(void))->(int))
(	O
srv	*(struct)
->	O
pollfd	struct(int,short,short)
->	O
fd	int
)	O
;	O
}	O
int	O
disconnect_stdout	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))))->(int)
(	O
netcat_server_t	struct
*	O
srv	*(struct)
)	O
{	O
close	*((*(void))->(int))
(	O
srv	*(struct)
->	O
pollfd	struct(int,short,short)
->	O
fd	int
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
void	O
fd_write	(int,*(char),long)->(void)
(	O
int	O
fd	int
,	O
char	O
const	O
*	O
str	*(char)
,	O
size_t	long
len	long
)	O
{	O
while	O
(	O
len	long
)	O
{	O
ssize_t	long
n	long
=	O
write	*((*(void),*(char),long)->(long))
(	O
fd	int
,	O
str	*(char)
,	O
len	long
)	O
;	O
if	O
(	O
n	long
==	O
-	O
1	int
)	O
{	O
perror	(*(char))->(void)
(	O
"socket write"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
if	O
(	O
n	long
==	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"zero write\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
len	long
-=	O
n	long
;	O
str	*(char)
+=	O
n	long
;	O
}	O
}	O
void	O
fd_writeln	(int,*(char))->(void)
(	O
int	O
fd	int
,	O
char	O
const	O
*	O
str	*(char)
)	O
{	O
fd_write	(int,*(char),long)->(void)
(	O
fd	int
,	O
str	*(char)
,	O
strlen	(*(char))->(long)
(	O
str	*(char)
)	O
)	O
;	O
fd_write	(int,*(char),long)->(void)
(	O
fd	int
,	O
"\r\n"	*(char)
,	O
2	int
)	O
;	O
}	O
int	O
fd_getc	(int)->(int)
(	O
int	O
fd	int
)	O
{	O
char	O
c	long
;	O
ssize_t	long
n	long
=	O
read	*((*(void),*(char),long)->(long))
(	O
fd	int
,	O
&	O
c	long
,	O
1	int
)	O
;	O
if	O
(	O
n	long
==	O
-	O
1	int
)	O
{	O
perror	(*(char))->(void)
(	O
"socket read"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
if	O
(	O
n	long
==	O
0	int
)	O
c	long
=	O
EOF	O
;	O
return	O
c	long
;	O
}	O
static	O
void	O
tcpmux_init	(int,*(char))->(void)
(	O
int	O
fd	int
,	O
char	O
const	O
*	O
service	*(char)
)	O
{	O
int	O
c	long
;	O
fd_writeln	(int,*(char))->(void)
(	O
fd	int
,	O
service	*(char)
)	O
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
service	*(char)
,	O
"help"	*(char)
)	O
==	O
0	int
)	O
{	O
while	O
(	O
(	O
c	long
=	O
fd_getc	(int)->(int)
(	O
fd	int
)	O
)	O
!=	O
EOF	O
)	O
{	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
c	long
,	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
close	*((*(void))->(int))
(	O
fd	int
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
c	long
=	O
fd_getc	(int)->(int)
(	O
fd	int
)	O
;	O
if	O
(	O
c	long
==	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"socket read: unexpected eof\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
if	O
(	O
c	long
==	O
'+'	O
)	O
{	O
while	O
(	O
(	O
c	long
=	O
fd_getc	(int)->(int)
(	O
fd	int
)	O
)	O
!=	O
'\n'	O
)	O
{	O
if	O
(	O
c	long
==	O
EOF	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"socket read: unexpected eof\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
}	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"service rejected: "	*(char)
)	O
;	O
do	O
{	O
if	O
(	O
c	long
!=	O
'\r'	O
)	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
c	long
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
while	O
(	O
(	O
c	long
=	O
fd_getc	(int)->(int)
(	O
fd	int
)	O
)	O
!=	O
0	int
&&	O
c	long
!=	O
'\n'	O
)	O
;	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\n'	O
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
}	O
static	O
int	O
netcat	(*(char),*(char))->(int)
(	O
char	O
const	O
*	O
urlstr	*(char)
,	O
char	O
const	O
*	O
tcpmux_service	*(char)
)	O
{	O
int	O
fd	int
;	O
struct	O
pies_url	struct(*(char),*(char),*(char),*(char),int,*(char),int,*(char),*(char),*(char),int,*(*(char)))
*	O
url	*(struct(*(char),*(char),*(char),*(char),int,*(char),int,*(char),*(char),*(char),int,*(*(char))))
;	O
struct	O
pollfd	struct(int,short,short)
pfd	*(struct(int,short,short))
[	O
3	int
]	O
;	O
int	O
nfd	int
=	O
sizeof	O
(	O
pfd	*(struct(int,short,short))
)	O
/	O
sizeof	O
(	O
pfd	*(struct(int,short,short))
[	O
0	int
]	O
)	O
;	O
netcat_server_t	struct
*	O
srvin	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
,	O
*	O
srvout	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
,	O
*	O
srv	*(struct)
;	O
if	O
(	O
pies_url_create	(*(*(struct(*(char),*(char),*(char),*(char),int,*(char),int,*(char),*(char),*(char),int,*(*`)))),*(char))->(int)
(	O
&	O
url	*(struct(*(char),*(char),*(char),*(char),int,*(char),int,*(char),*(char),*(char),int,*(*(char))))
,	O
urlstr	*(char)
)	O
)	O
{	O
perror	(*(char))->(void)
(	O
urlstr	*(char)
)	O
;	O
return	O
64	int
;	O
}	O
fd	int
=	O
url_connect	(*(struct(*(char),*(char),*(char),*(char),int,*(char),int,*(char),*(char),*(char),int,*(*(char)))),*(struct(*(struct(*`,*`,int,*`)),*(char),int,*(struct(short,array(char))))))->(int)
(	O
url	*(struct(*(char),*(char),*(char),*(char),int,*(char),int,*(char),*(char),*(char),int,*(*(char))))
,	O
NULL	O
)	O
;	O
if	O
(	O
fd	int
==	O
-	O
1	int
)	O
return	O
1	int
;	O
if	O
(	O
tcpmux_service	*(char)
)	O
tcpmux_init	(int,*(char))->(void)
(	O
fd	int
,	O
tcpmux_service	*(char)
)	O
;	O
pfd	*(struct(int,short,short))
[	O
0	int
]	O
.	O
fd	int
=	O
0	int
;	O
pfd	*(struct(int,short,short))
[	O
0	int
]	O
.	O
events	short
=	O
0	int
;	O
srvin	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
=	O
netcat_server_create	(*(char),*(struct(int,short,short)),int,*((*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))))->(int)),*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))))->(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))))
(	O
"stdin"	*(char)
,	O
&	O
pfd	*(struct(int,short,short))
[	O
0	int
]	O
,	O
POLLIN	int
,	O
disconnect_stdin	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))))->(int)
,	O
NULL	O
)	O
;	O
pfd	*(struct(int,short,short))
[	O
1	int
]	O
.	O
fd	int
=	O
1	int
;	O
pfd	*(struct(int,short,short))
[	O
1	int
]	O
.	O
events	short
=	O
0	int
;	O
srvout	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
=	O
netcat_server_create	(*(char),*(struct(int,short,short)),int,*((*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))))->(int)),*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))))->(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))))
(	O
"stdout"	*(char)
,	O
&	O
pfd	*(struct(int,short,short))
[	O
1	int
]	O
,	O
POLLOUT	int
,	O
disconnect_stdout	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))))->(int)
,	O
NULL	O
)	O
;	O
pfd	*(struct(int,short,short))
[	O
2	int
]	O
.	O
fd	int
=	O
fd	int
;	O
pfd	*(struct(int,short,short))
[	O
2	int
]	O
.	O
events	short
=	O
0	int
;	O
netcat_server_create	(*(char),*(struct(int,short,short)),int,*((*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))))->(int)),*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))))->(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))))
(	O
"netread"	*(char)
,	O
&	O
pfd	*(struct(int,short,short))
[	O
2	int
]	O
,	O
POLLIN	int
,	O
disconnect_in	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))))->(int)
,	O
srvout	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
)	O
;	O
netcat_server_create	(*(char),*(struct(int,short,short)),int,*((*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))))->(int)),*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))))->(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))))
(	O
"netwrite"	*(char)
,	O
&	O
pfd	*(struct(int,short,short))
[	O
2	int
]	O
,	O
POLLOUT	int
,	O
disconnect_out	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))))->(int)
,	O
srvin	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
)	O
;	O
while	O
(	O
server_head	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
)	O
{	O
ssize_t	long
n	long
=	O
poll	(*(struct(int,short,short)),long,int)->(int)
(	O
pfd	*(struct(int,short,short))
,	O
nfd	int
,	O
-	O
1	int
)	O
;	O
if	O
(	O
n	long
==	O
-	O
1	int
)	O
{	O
if	O
(	O
errno	O
!=	O
EINTR	int
)	O
grecs_error	(*(struct(struct(*(char),int,int),struct(*(char),int,int))),int,*(char))->(void)
(	O
NULL	O
,	O
errno	O
,	O
"poll"	*(char)
)	O
;	O
continue	O
;	O
}	O
for	O
(	O
srv	*(struct)
=	O
server_head	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
;	O
srv	*(struct)
;	O
)	O
{	O
netcat_server_t	struct
*	O
next	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
=	O
srv	*(struct)
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
;	O
if	O
(	O
(	O
srv	*(struct)
->	O
pollfd	struct(int,short,short)
->	O
revents	short
&	O
srv	*(struct)
->	O
state	*(int)
)	O
&	O
POLLIN	int
)	O
netcat_stream_read	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))))->(long)
(	O
srv	*(struct)
)	O
;	O
if	O
(	O
(	O
srv	*(struct)
->	O
pollfd	struct(int,short,short)
->	O
revents	short
&	O
srv	*(struct)
->	O
state	*(int)
)	O
&	O
POLLOUT	int
)	O
netcat_stream_write	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))))->(long)
(	O
srv	*(struct)
)	O
;	O
if	O
(	O
(	O
srv	*(struct)
->	O
state	*(int)
&	O
POLLOUT	int
)	O
&&	O
(	O
srv	*(struct)
->	O
pollfd	struct(int,short,short)
->	O
revents	short
&	O
POLLHUP	int
)	O
)	O
{	O
netcat_stream_disconnect	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))),int)->(void)
(	O
srv	*(struct)
,	O
srv	*(struct)
->	O
state	*(int)
)	O
;	O
}	O
if	O
(	O
srv	*(struct)
->	O
state	*(int)
==	O
0	int
||	O
srv	*(struct)
->	O
pollfd	struct(int,short,short)
->	O
fd	int
==	O
-	O
1	int
)	O
{	O
netcat_server_t	struct
*	O
peer	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
=	O
srv	*(struct)
->	O
peer	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
;	O
if	O
(	O
peer	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
&&	O
peer	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
->	O
pollfd	struct(int,short,short)
->	O
events	short
==	O
0	int
)	O
{	O
netcat_stream_disconnect	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))),int)->(void)
(	O
peer	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
,	O
peer	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
->	O
state	*(int)
)	O
;	O
netcat_server_remove	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))))->(void)
(	O
peer	*(struct(*(char),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*(struct`))->(int)),*(struct(*(char),*(struct`),*(struct`),*(struct`),int,*((*`)->(int)),*(struct`),array(struct(array(char),long,long)))),array(struct(array(char),long,long))))
)	O
;	O
}	O
netcat_server_remove	(*(struct(*(char),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),*(struct(int,short,short)),int,*((*`)->(int)),*(struct(*`,*`,*`,*`,int,*`,*`,array(struct(array(char),long,long)))),array(struct(array(char),long,long)))))->(void)
(	O
srv	*(struct)
)	O
;	O
}	O
srv	*(struct)
=	O
next	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
;	O
}	O
}	O
return	O
0	int
;	O
}	O
static	O
void	O
redirect	(int,*(char))->(void)
(	O
int	O
sfd	int
,	O
char	O
const	O
*	O
name	*(char)
)	O
{	O
int	O
fd	int
;	O
fd	int
=	O
open	(*(char),int)->(int)
(	O
name	*(char)
,	O
sfd	int
?	O
(	O
O_CREAT	int
|	O
O_TRUNC	int
|	O
O_WRONLY	int
)	O
:	O
O_RDONLY	int
,	O
0644	int
)	O
;	O
if	O
(	O
fd	int
==	O
-	O
1	int
)	O
{	O
perror	(*(char))->(void)
(	O
name	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
if	O
(	O
dup2	(int,int)->(int)
(	O
fd	int
,	O
sfd	int
)	O
==	O
-	O
1	int
)	O
{	O
perror	(*(char))->(void)
(	O
"dup2"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
}	O
static	O
void	O
usage	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
FILE	struct
*	O
fp	*(struct(*((*(char),*(void))->(int)),*(void)))
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(*((*(char),*(void))->(int)),*(void)))
,	O
"usage: nt [-i IFILE] [-o OFILE] [-t SERVICE] URL\n"	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(*((*(char),*(void))->(int)),*(void)))
,	O
"Reads data from stdin (or IFILE) and sends them to URL.\n"	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(*((*(char),*(void))->(int)),*(void)))
,	O
"Reads replies from URL and sends them to stdout (or OFILE).\n"	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(*((*(char),*(void))->(int)),*(void)))
,	O
"\nOPTIONS\n\n"	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(*((*(char),*(void))->(int)),*(void)))
,	O
"   -t SERVICE            use TCPMUX service\n"	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(*((*(char),*(void))->(int)),*(void)))
,	O
"   -i IFILE              read input from IFILE\n"	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(*((*(char),*(void))->(int)),*(void)))
,	O
"   -o OFILE              write output to OFILE\n"	*(char)
)	O
;	O
}	O
int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
int	O
c	long
;	O
char	O
const	O
*	O
tcpmux_service	*(char)
=	O
NULL	O
;	O
while	O
(	O
(	O
c	long
=	O
getopt	(int,*(*(char)),*(char))->(int)
(	O
argc	int
,	O
argv	*(*(char))
,	O
"i:o:t:"	*(char)
)	O
)	O
!=	O
EOF	O
)	O
{	O
switch	O
(	O
c	long
)	O
{	O
case	O
'i'	O
:	O
redirect	(int,*(char))->(void)
(	O
0	int
,	O
optarg	*(char)
)	O
;	O
break	O
;	O
case	O
'o'	O
:	O
redirect	(int,*(char))->(void)
(	O
1	int
,	O
optarg	*(char)
)	O
;	O
break	O
;	O
case	O
't'	O
:	O
tcpmux_service	*(char)
=	O
optarg	*(char)
;	O
break	O
;	O
default	O
:	O
exit	(int)->(void)
(	O
64	int
)	O
;	O
}	O
}	O
argc	int
-=	O
optind	int
;	O
argv	*(*(char))
+=	O
optind	int
;	O
if	O
(	O
argc	int
!=	O
1	int
)	O
{	O
usage	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
exit	(int)->(void)
(	O
64	int
)	O
;	O
}	O
return	O
netcat	(*(char),*(char))->(int)
(	O
argv	*(*(char))
[	O
0	int
]	O
,	O
tcpmux_service	*(char)
)	O
;	O
}	O
