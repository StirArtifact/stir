static	O
int	O
print_out_key	(*(void),enum(int,int,int,int,int,int),*(char),*(char))->(int)
(	O
void	O
*	O
cls	*(void)
,	O
enum	O
MHD_ValueKind	enum(int,int,int,int,int,int)
kind	enum(int,int,int,int,int,int)
,	O
const	O
char	O
*	O
key	*(char)
,	O
const	O
char	O
*	O
value	long
)	O
{	O
(	O
void	O
)	O
cls	*(void)
;	O
(	O
void	O
)	O
kind	enum(int,int,int,int,int,int)
;	O
printf	(*(char))->(int)
(	O
"%s: %s\n"	*(char)
,	O
key	*(char)
,	O
value	long
)	O
;	O
return	O
MHD_YES	int
;	O
}	O
static	O
int	O
answer_to_connection	(*(void),*(struct),*(char),*(char),*(char),*(char),*(long),*(*(void)))->(int)
(	O
void	O
*	O
cls	*(void)
,	O
struct	O
MHD_Connection	O
*	O
connection	*(struct)
,	O
const	O
char	O
*	O
url	*(char)
,	O
const	O
char	O
*	O
method	*(char)
,	O
const	O
char	O
*	O
version	*(char)
,	O
const	O
char	O
*	O
upload_data	*(char)
,	O
size_t	long
*	O
upload_data_size	*(long)
,	O
void	O
*	O
*	O
con_cls	*(*(void))
)	O
{	O
(	O
void	O
)	O
cls	*(void)
;	O
(	O
void	O
)	O
version	*(char)
;	O
(	O
void	O
)	O
upload_data	*(char)
;	O
(	O
void	O
)	O
upload_data_size	*(long)
;	O
(	O
void	O
)	O
con_cls	*(*(void))
;	O
printf	(*(char))->(int)
(	O
"New %s request for %s using version %s\n"	*(char)
,	O
method	*(char)
,	O
url	*(char)
,	O
version	*(char)
)	O
;	O
MHD_get_connection_values	(*(struct),enum(int,int,int,int,int,int),*((*(void),enum(int,int,int,int,int,int),*(char),*(char))->(int)),*(void))->(int)
(	O
connection	*(struct)
,	O
MHD_HEADER_KIND	int
,	O
print_out_key	(*(void),enum(int,int,int,int,int,int),*(char),*(char))->(int)
,	O
NULL	O
)	O
;	O
return	O
MHD_NO	int
;	O
}	O
int	O
main	()->(int)
(	O
)	O
{	O
struct	O
MHD_Daemon	O
*	O
daemon	(int,int)->(int)
;	O
daemon	(int,int)->(int)
=	O
MHD_start_daemon	(int,short,*((*(void),*(struct(short,array(char))),int)->(int)),*(void),*((*(void),*(struct),*(char),*(char),*(char),*(char),*(long),*(*(void)))->(int)),*(void))->(*(struct))
(	O
MHD_USE_INTERNAL_POLLING_THREAD	int
,	O
PORT	int
,	O
NULL	O
,	O
NULL	O
,	O
&	O
answer_to_connection	(*(void),*(struct),*(char),*(char),*(char),*(char),*(long),*(*(void)))->(int)
,	O
NULL	O
,	O
MHD_OPTION_END	int
)	O
;	O
if	O
(	O
NULL	O
==	O
daemon	(int,int)->(int)
)	O
return	O
1	int
;	O
(	O
void	O
)	O
getchar	()->(int)
(	O
)	O
;	O
MHD_stop_daemon	(*(struct))->(void)
(	O
daemon	(int,int)->(int)
)	O
;	O
return	O
0	int
;	O
}	O
