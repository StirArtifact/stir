struct	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
*	O
*	O
make_segment	(*(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`)))),*(char),int,int,char,char,*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct`),struct(bool,struct`,struct`,*`,int,bool,*`,int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct`),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*`,*`,*`,bool,*`),*(char)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*`,*`,*`)))))->(*(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`)))))
(	O
struct	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
*	O
*	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
,	O
char	O
*	O
format	*(char)
,	O
int	O
len	long
,	O
int	O
kind	enum(int,int,int)
,	O
char	O
format_char	array(char)
,	O
char	O
aux_format_char	char
,	O
struct	O
predicate	struct(*((*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*(struct),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*(char),long,*((*`,*`,int,*`)->(int)),long,long),struct(long,*(*(char)),long,*(char),long,long,*(void),int,int,long,long),*(*(char)),int,bool,*(struct),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)),*(char)),*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct))),*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct))),*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct))),struct(long,long),*(struct))
*	O
pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
)	O
{	O
enum	O
EvaluationCost	enum(int,int,int,int,int,int,int,int,int,int,int,int)
mycost	enum(int,int,int,int,int,int,int,int,int,int,int,int)
=	O
NeedsNothing	int
;	O
char	O
*	O
fmt	*(char)
;	O
assert	O
(	O
format_char	array(char)
!=	O
'{'	O
)	O
;	O
assert	O
(	O
format_char	array(char)
!=	O
'['	O
)	O
;	O
assert	O
(	O
format_char	array(char)
!=	O
'('	O
)	O
;	O
*	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
=	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
)	O
)	O
;	O
(	O
*	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
)	O
->	O
segkind	enum(int,int,int)
=	O
kind	enum(int,int,int)
;	O
(	O
*	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
)	O
->	O
format_char	array(char)
[	O
0	int
]	O
=	O
format_char	array(char)
;	O
(	O
*	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
)	O
->	O
format_char	array(char)
[	O
1	int
]	O
=	O
aux_format_char	char
;	O
(	O
*	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
)	O
->	O
next	*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`)))))
=	O
NULL	O
;	O
(	O
*	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
)	O
->	O
text_len	int
=	O
len	long
;	O
fmt	*(char)
=	O
(	O
*	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
)	O
->	O
text	*(char)
=	O
xmalloc	(long)->(*(void))
(	O
len	long
+	O
sizeof	O
"d"	*(char)
)	O
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
fmt	*(char)
,	O
format	*(char)
,	O
len	long
)	O
;	O
fmt	*(char)
+=	O
len	long
;	O
if	O
(	O
kind	enum(int,int,int)
==	O
KIND_PLAIN	int
||	O
kind	enum(int,int,int)
==	O
KIND_STOP	int
)	O
{	O
assert	O
(	O
0	int
==	O
format_char	array(char)
)	O
;	O
assert	O
(	O
0	int
==	O
aux_format_char	char
)	O
;	O
*	O
fmt	*(char)
=	O
'\0'	O
;	O
if	O
(	O
mycost	enum(int,int,int,int,int,int,int,int,int,int,int,int)
>	O
pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
->	O
p_cost	enum(int,int,int,int,int,int,int,int,int,int,int,int)
)	O
pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
->	O
p_cost	enum(int,int,int,int,int,int,int,int,int,int,int,int)
=	O
NeedsNothing	int
;	O
return	O
&	O
(	O
*	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
)	O
->	O
next	*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`)))))
;	O
}	O
assert	O
(	O
kind	enum(int,int,int)
==	O
KIND_FORMAT	int
)	O
;	O
switch	O
(	O
format_char	array(char)
)	O
{	O
case	O
'%'	O
:	O
*	O
fmt	*(char)
++	O
=	O
'%'	O
;	O
break	O
;	O
case	O
'l'	O
:	O
pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
->	O
need_stat	bool
=	O
true	int
;	O
mycost	enum(int,int,int,int,int,int,int,int,int,int,int,int)
=	O
NeedsLinkName	int
;	O
*	O
fmt	*(char)
++	O
=	O
's'	O
;	O
break	O
;	O
case	O
'y'	O
:	O
pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
->	O
need_type	bool
=	O
true	int
;	O
mycost	enum(int,int,int,int,int,int,int,int,int,int,int,int)
=	O
NeedsType	int
;	O
*	O
fmt	*(char)
++	O
=	O
's'	O
;	O
break	O
;	O
case	O
'i'	O
:	O
pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
->	O
need_inum	bool
=	O
true	int
;	O
mycost	enum(int,int,int,int,int,int,int,int,int,int,int,int)
=	O
NeedsInodeNumber	int
;	O
*	O
fmt	*(char)
++	O
=	O
's'	O
;	O
break	O
;	O
case	O
'a'	O
:	O
case	O
'A'	O
:	O
case	O
'B'	O
:	O
case	O
'c'	O
:	O
case	O
'C'	O
:	O
case	O
'F'	O
:	O
case	O
'g'	O
:	O
case	O
'M'	O
:	O
case	O
's'	O
:	O
case	O
't'	O
:	O
case	O
'T'	O
:	O
case	O
'u'	O
:	O
pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
->	O
need_stat	bool
=	O
true	int
;	O
mycost	enum(int,int,int,int,int,int,int,int,int,int,int,int)
=	O
NeedsStatInfo	int
;	O
*	O
fmt	*(char)
++	O
=	O
's'	O
;	O
break	O
;	O
case	O
'S'	O
:	O
pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
->	O
need_stat	bool
=	O
true	int
;	O
mycost	enum(int,int,int,int,int,int,int,int,int,int,int,int)
=	O
NeedsStatInfo	int
;	O
*	O
fmt	*(char)
++	O
=	O
'g'	O
;	O
break	O
;	O
case	O
'Y'	O
:	O
pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
->	O
need_stat	bool
=	O
true	int
;	O
mycost	enum(int,int,int,int,int,int,int,int,int,int,int,int)
=	O
NeedsType	int
;	O
*	O
fmt	*(char)
++	O
=	O
's'	O
;	O
break	O
;	O
case	O
'f'	O
:	O
case	O
'h'	O
:	O
case	O
'p'	O
:	O
case	O
'P'	O
:	O
*	O
fmt	*(char)
++	O
=	O
's'	O
;	O
break	O
;	O
case	O
'Z'	O
:	O
mycost	enum(int,int,int,int,int,int,int,int,int,int,int,int)
=	O
NeedsAccessInfo	int
;	O
*	O
fmt	*(char)
++	O
=	O
's'	O
;	O
break	O
;	O
case	O
'H'	O
:	O
*	O
fmt	*(char)
++	O
=	O
's'	O
;	O
break	O
;	O
case	O
'G'	O
:	O
case	O
'U'	O
:	O
case	O
'b'	O
:	O
case	O
'D'	O
:	O
case	O
'k'	O
:	O
case	O
'n'	O
:	O
pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
->	O
need_stat	bool
=	O
true	int
;	O
mycost	enum(int,int,int,int,int,int,int,int,int,int,int,int)
=	O
NeedsStatInfo	int
;	O
*	O
fmt	*(char)
++	O
=	O
's'	O
;	O
break	O
;	O
case	O
'd'	O
:	O
*	O
fmt	*(char)
++	O
=	O
'd'	O
;	O
break	O
;	O
case	O
'm'	O
:	O
*	O
fmt	*(char)
++	O
=	O
'o'	O
;	O
pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
->	O
need_stat	bool
=	O
true	int
;	O
mycost	enum(int,int,int,int,int,int,int,int,int,int,int,int)
=	O
NeedsStatInfo	int
;	O
break	O
;	O
}	O
*	O
fmt	*(char)
=	O
'\0'	O
;	O
if	O
(	O
mycost	enum(int,int,int,int,int,int,int,int,int,int,int,int)
>	O
pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
->	O
p_cost	enum(int,int,int,int,int,int,int,int,int,int,int,int)
)	O
pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
->	O
p_cost	enum(int,int,int,int,int,int,int,int,int,int,int,int)
=	O
mycost	enum(int,int,int,int,int,int,int,int,int,int,int,int)
;	O
return	O
&	O
(	O
*	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
)	O
->	O
next	*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`)))))
;	O
}	O
static	O
bool	bool
is_octal_char	(char)->(bool)
(	O
char	O
ch	char
)	O
{	O
return	O
ch	char
>=	O
'0'	O
&&	O
ch	char
<=	O
'7'	O
;	O
}	O
static	O
char	O
parse_octal_escape	(*(char),*(long))->(char)
(	O
const	O
char	O
*	O
p	*(void)
,	O
size_t	long
*	O
consumed	*(long)
)	O
{	O
register	O
int	O
n	long
,	O
i	int
;	O
size_t	long
pos	long
=	O
0	int
;	O
for	O
(	O
i	int
=	O
n	long
=	O
0	int
;	O
i	int
<	O
3	int
&&	O
is_octal_char	(char)->(bool)
(	O
p	*(void)
[	O
pos	long
]	O
)	O
;	O
i	int
++	O
,	O
pos	long
++	O
)	O
{	O
n	long
=	O
8	int
*	O
n	long
+	O
p	*(void)
[	O
pos	long
]	O
-	O
'0'	O
;	O
}	O
--	O
pos	long
;	O
*	O
consumed	*(long)
=	O
pos	long
;	O
return	O
n	long
;	O
}	O
static	O
int	O
parse_escape_char	(char)->(int)
(	O
const	O
char	O
ch	char
)	O
{	O
char	O
value	*(char)
=	O
0	int
;	O
switch	O
(	O
ch	char
)	O
{	O
case	O
'a'	O
:	O
value	*(char)
=	O
'\a'	O
;	O
break	O
;	O
case	O
'b'	O
:	O
value	*(char)
=	O
'\b'	O
;	O
break	O
;	O
case	O
'f'	O
:	O
value	*(char)
=	O
'\f'	O
;	O
break	O
;	O
case	O
'n'	O
:	O
value	*(char)
=	O
'\n'	O
;	O
break	O
;	O
case	O
'r'	O
:	O
value	*(char)
=	O
'\r'	O
;	O
break	O
;	O
case	O
't'	O
:	O
value	*(char)
=	O
'\t'	O
;	O
break	O
;	O
case	O
'v'	O
:	O
value	*(char)
=	O
'\v'	O
;	O
break	O
;	O
case	O
'\\'	O
:	O
value	*(char)
=	O
'\\'	O
;	O
break	O
;	O
}	O
return	O
value	*(char)
;	O
}	O
static	O
size_t	long
get_format_flags_length	(*(char))->(long)
(	O
const	O
char	O
*	O
p	*(void)
)	O
{	O
size_t	long
n	long
=	O
0	int
;	O
for	O
(	O
;	O
p	*(void)
[	O
++	O
n	long
]	O
&&	O
strchr	(*(char),int)->(*(char))
(	O
"-+ #"	*(char)
,	O
p	*(void)
[	O
n	long
]	O
)	O
;	O
)	O
{	O
}	O
while	O
(	O
ISDIGIT	O
(	O
p	*(void)
[	O
n	long
]	O
)	O
)	O
n	long
++	O
;	O
if	O
(	O
p	*(void)
[	O
n	long
]	O
==	O
'.'	O
)	O
for	O
(	O
n	long
++	O
;	O
ISDIGIT	O
(	O
p	*(void)
[	O
n	long
]	O
)	O
;	O
n	long
++	O
)	O
;	O
return	O
n	long
;	O
}	O
static	O
size_t	long
get_format_specifer_length	(char)->(long)
(	O
char	O
ch	char
)	O
{	O
if	O
(	O
strchr	(*(char),int)->(*(char))
(	O
"abcdDfFgGhHiklmMnpPsStuUyYZ%"	*(char)
,	O
ch	char
)	O
)	O
{	O
return	O
1	int
;	O
}	O
else	O
if	O
(	O
strchr	(*(char),int)->(*(char))
(	O
"ABCT"	*(char)
,	O
ch	char
)	O
)	O
{	O
return	O
2	int
;	O
}	O
else	O
{	O
return	O
0	int
;	O
}	O
}	O
bool	bool
insert_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool)))),*(char))->(bool)
(	O
struct	O
format_val	struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),*(char),bool,*(struct))
*	O
vec	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
const	O
struct	O
parser_table	struct(enum(int,int,int,int,int,int,int),*(char),*((*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool)))),array(*(char)),*(int))->(bool)),*((*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))))->(bool)))
*	O
entry	*(struct(enum(int,int,int,int,int,int,int),*(char),*((*(struct`),array(*(char)),*(int))->(bool)),*((*(char),*(struct`),*(struct`))->(bool))))
,	O
char	O
*	O
format	*(char)
)	O
{	O
char	O
*	O
segstart	*(char)
=	O
format	*(char)
;	O
char	O
*	O
fmt_editpos	*(char)
;	O
struct	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
*	O
*	O
segmentp	*(*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*`,int,*`)))))
;	O
struct	O
predicate	struct(*((*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*(struct),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*(char),long,*((*`,*`,int,*`)->(int)),long,long),struct(long,*(*(char)),long,*(char),long,long,*(void),int,int,long,long),*(*(char)),int,bool,*(struct),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)),*(char)),*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct))),*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct))),*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct))),struct(long,long),*(struct))
*	O
our_pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
;	O
our_pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
=	O
insert_primary_withpred	(*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool)))),*((*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct`,struct`,struct`,array(long))),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)))->(bool)),*(char))->(*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct`),struct(bool,struct`,struct`,*`,int,bool,*`,int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct`),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*`,*`,*`,bool,*`),*(char)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*`,*`,*`)))))
(	O
entry	*(struct(enum(int,int,int,int,int,int,int),*(char),*((*(struct`),array(*(char)),*(int))->(bool)),*((*(char),*(struct`),*(struct`))->(bool))))
,	O
pred_fprintf	(*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct`),struct(bool,struct`,struct`,*`,int,bool,*`,int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct`),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*`,*`,*`,bool,*`),*(char)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*`,*`,*`)))))->(bool)
,	O
format	*(char)
)	O
;	O
our_pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
->	O
side_effects	bool
=	O
our_pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
->	O
no_default_print	bool
=	O
true	int
;	O
our_pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
->	O
args	union(*(char),*(struct(*(struct),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*(char),long,*((*`,*`,int,*`)->(int)),long,long),struct(long,*(*(char)),long,*(char),long,long,*(void),int,int,long,long),*(*(char)),int,bool,*(struct),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)),*(char))
.	O
printf_vec	struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*`,int,*`)))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),bool,*(struct))
=	O
*	O
vec	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
;	O
our_pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
->	O
need_type	bool
=	O
false	int
;	O
our_pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
->	O
need_stat	bool
=	O
false	int
;	O
our_pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
->	O
p_cost	enum(int,int,int,int,int,int,int,int,int,int,int,int)
=	O
NeedsNothing	int
;	O
segmentp	*(*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*`,int,*`)))))
=	O
&	O
our_pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
->	O
args	union(*(char),*(struct(*(struct),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*(char),long,*((*`,*`,int,*`)->(int)),long,long),struct(long,*(*(char)),long,*(char),long,long,*(void),int,int,long,long),*(*(char)),int,bool,*(struct),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)),*(char))
.	O
printf_vec	struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*`,int,*`)))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),bool,*(struct))
.	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
;	O
*	O
segmentp	*(*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*`,int,*`)))))
=	O
NULL	O
;	O
for	O
(	O
fmt_editpos	*(char)
=	O
segstart	*(char)
;	O
*	O
fmt_editpos	*(char)
;	O
fmt_editpos	*(char)
++	O
)	O
{	O
if	O
(	O
fmt_editpos	*(char)
[	O
0	int
]	O
==	O
'\\'	O
&&	O
fmt_editpos	*(char)
[	O
1	int
]	O
==	O
'c'	O
)	O
{	O
make_segment	(*(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`)))),*(char),int,int,char,char,*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct`),struct(bool,struct`,struct`,*`,int,bool,*`,int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct`),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*`,*`,*`,bool,*`),*(char)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*`,*`,*`)))))->(*(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`)))))
(	O
segmentp	*(*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*`,int,*`)))))
,	O
segstart	*(char)
,	O
fmt_editpos	*(char)
-	O
segstart	*(char)
,	O
KIND_STOP	int
,	O
0	int
,	O
0	int
,	O
our_pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
)	O
;	O
if	O
(	O
our_pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
->	O
need_stat	bool
&&	O
(	O
our_pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
->	O
p_cost	enum(int,int,int,int,int,int,int,int,int,int,int,int)
<	O
NeedsStatInfo	int
)	O
)	O
our_pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
->	O
p_cost	enum(int,int,int,int,int,int,int,int,int,int,int,int)
=	O
NeedsStatInfo	int
;	O
return	O
true	int
;	O
}	O
else	O
if	O
(	O
*	O
fmt_editpos	*(char)
==	O
'\\'	O
)	O
{	O
size_t	long
readpos	long
=	O
1	int
;	O
if	O
(	O
!	O
fmt_editpos	*(char)
[	O
readpos	long
]	O
)	O
{	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"warning: escape `\\' followed by nothing at all"	*(char)
)	O
)	O
;	O
--	O
readpos	long
;	O
}	O
else	O
if	O
(	O
is_octal_char	(char)->(bool)
(	O
fmt_editpos	*(char)
[	O
readpos	long
]	O
)	O
)	O
{	O
size_t	long
consumed	*(long)
=	O
0	int
;	O
*	O
fmt_editpos	*(char)
=	O
parse_octal_escape	(*(char),*(long))->(char)
(	O
fmt_editpos	*(char)
+	O
readpos	long
,	O
&	O
consumed	*(long)
)	O
;	O
readpos	long
+=	O
consumed	*(long)
;	O
}	O
else	O
{	O
const	O
char	O
val	array(int)
=	O
parse_escape_char	(char)->(int)
(	O
fmt_editpos	*(char)
[	O
readpos	long
]	O
)	O
;	O
if	O
(	O
val	array(int)
)	O
{	O
fmt_editpos	*(char)
[	O
0	int
]	O
=	O
val	array(int)
;	O
}	O
else	O
{	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"warning: unrecognized escape `\\%c'"	*(char)
)	O
,	O
fmt_editpos	*(char)
[	O
readpos	long
]	O
)	O
;	O
fmt_editpos	*(char)
+=	O
readpos	long
;	O
continue	O
;	O
}	O
}	O
segmentp	*(*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*`,int,*`)))))
=	O
make_segment	(*(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`)))),*(char),int,int,char,char,*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct`),struct(bool,struct`,struct`,*`,int,bool,*`,int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct`),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*`,*`,*`,bool,*`),*(char)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*`,*`,*`)))))->(*(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`)))))
(	O
segmentp	*(*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*`,int,*`)))))
,	O
segstart	*(char)
,	O
fmt_editpos	*(char)
-	O
segstart	*(char)
+	O
1	int
,	O
KIND_PLAIN	int
,	O
0	int
,	O
0	int
,	O
our_pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
)	O
;	O
segstart	*(char)
=	O
fmt_editpos	*(char)
+	O
readpos	long
+	O
1	int
;	O
fmt_editpos	*(char)
+=	O
readpos	long
;	O
}	O
else	O
if	O
(	O
fmt_editpos	*(char)
[	O
0	int
]	O
==	O
'%'	O
)	O
{	O
size_t	long
len	long
;	O
if	O
(	O
fmt_editpos	*(char)
[	O
1	int
]	O
==	O
0	int
)	O
{	O
error	(int,int,*(char))->(void)
(	O
EXIT_FAILURE	int
,	O
0	int
,	O
_	O
(	O
"error: %s at end of format string"	*(char)
)	O
,	O
fmt_editpos	*(char)
)	O
;	O
}	O
if	O
(	O
fmt_editpos	*(char)
[	O
1	int
]	O
==	O
'%'	O
)	O
len	long
=	O
1	int
;	O
else	O
len	long
=	O
get_format_flags_length	(*(char))->(long)
(	O
fmt_editpos	*(char)
)	O
;	O
fmt_editpos	*(char)
+=	O
len	long
;	O
len	long
=	O
get_format_specifer_length	(char)->(long)
(	O
fmt_editpos	*(char)
[	O
0	int
]	O
)	O
;	O
if	O
(	O
len	long
&&	O
(	O
fmt_editpos	*(char)
[	O
len	long
-	O
1	int
]	O
)	O
)	O
{	O
const	O
char	O
fmt2	char
=	O
(	O
len	long
==	O
2	int
)	O
?	O
fmt_editpos	*(char)
[	O
1	int
]	O
:	O
0	int
;	O
segmentp	*(*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*`,int,*`)))))
=	O
make_segment	(*(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`)))),*(char),int,int,char,char,*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct`),struct(bool,struct`,struct`,*`,int,bool,*`,int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct`),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*`,*`,*`,bool,*`),*(char)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*`,*`,*`)))))->(*(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`)))))
(	O
segmentp	*(*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*`,int,*`)))))
,	O
segstart	*(char)
,	O
fmt_editpos	*(char)
-	O
segstart	*(char)
,	O
KIND_FORMAT	int
,	O
fmt_editpos	*(char)
[	O
0	int
]	O
,	O
fmt2	char
,	O
our_pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
)	O
;	O
fmt_editpos	*(char)
+=	O
(	O
len	long
-	O
1	int
)	O
;	O
}	O
else	O
{	O
if	O
(	O
strchr	(*(char),int)->(*(char))
(	O
"{[("	*(char)
,	O
fmt_editpos	*(char)
[	O
0	int
]	O
)	O
)	O
{	O
error	(int,int,*(char))->(void)
(	O
EXIT_FAILURE	int
,	O
0	int
,	O
_	O
(	O
"error: the format directive `%%%c' is reserved for future use"	*(char)
)	O
,	O
(	O
int	O
)	O
fmt_editpos	*(char)
[	O
0	int
]	O
)	O
;	O
}	O
if	O
(	O
len	long
==	O
2	int
&&	O
!	O
fmt_editpos	*(char)
[	O
1	int
]	O
)	O
{	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"warning: format directive `%%%c' "	*(char)
"should be followed by another character"	*(char)
)	O
,	O
fmt_editpos	*(char)
[	O
0	int
]	O
)	O
;	O
}	O
else	O
{	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"warning: unrecognized format directive `%%%c'"	*(char)
)	O
,	O
fmt_editpos	*(char)
[	O
0	int
]	O
)	O
;	O
}	O
segmentp	*(*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*`,int,*`)))))
=	O
make_segment	(*(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`)))),*(char),int,int,char,char,*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct`),struct(bool,struct`,struct`,*`,int,bool,*`,int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct`),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*`,*`,*`,bool,*`),*(char)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*`,*`,*`)))))->(*(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`)))))
(	O
segmentp	*(*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*`,int,*`)))))
,	O
segstart	*(char)
,	O
fmt_editpos	*(char)
+	O
1	int
-	O
segstart	*(char)
,	O
KIND_PLAIN	int
,	O
0	int
,	O
0	int
,	O
our_pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
)	O
;	O
}	O
segstart	*(char)
=	O
fmt_editpos	*(char)
+	O
1	int
;	O
}	O
}	O
if	O
(	O
fmt_editpos	*(char)
>	O
segstart	*(char)
)	O
make_segment	(*(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`)))),*(char),int,int,char,char,*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct`),struct(bool,struct`,struct`,*`,int,bool,*`,int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct`),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*`,*`,*`,bool,*`),*(char)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*`,*`,*`)))))->(*(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`)))))
(	O
segmentp	*(*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*`,int,*`)))))
,	O
segstart	*(char)
,	O
fmt_editpos	*(char)
-	O
segstart	*(char)
,	O
KIND_PLAIN	int
,	O
0	int
,	O
0	int
,	O
our_pred	*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*(char),*((*`,array(*(char)),*`)->(bool)),*((*`,*`,*`)->(bool))))))
)	O
;	O
return	O
true	int
;	O
}	O
static	O
bool	bool
scan_for_digit_differences	(*(char),*(char),*(long),*(long))->(bool)
(	O
const	O
char	O
*	O
p	*(void)
,	O
const	O
char	O
*	O
q	*(char)
,	O
size_t	long
*	O
first	*(long)
,	O
size_t	long
*	O
n	long
)	O
{	O
bool	bool
seen	bool
=	O
false	int
;	O
size_t	long
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
p	*(void)
[	O
i	int
]	O
&&	O
q	*(char)
[	O
i	int
]	O
;	O
i	int
++	O
)	O
{	O
if	O
(	O
p	*(void)
[	O
i	int
]	O
!=	O
q	*(char)
[	O
i	int
]	O
)	O
{	O
if	O
(	O
!	O
isdigit	(int)->(int)
(	O
(	O
unsigned	O
char	O
)	O
q	*(char)
[	O
i	int
]	O
)	O
||	O
!	O
isdigit	(int)->(int)
(	O
(	O
unsigned	O
char	O
)	O
q	*(char)
[	O
i	int
]	O
)	O
)	O
return	O
false	int
;	O
if	O
(	O
!	O
seen	bool
)	O
{	O
*	O
first	*(long)
=	O
i	int
;	O
*	O
n	long
=	O
1	int
;	O
seen	bool
=	O
1	int
;	O
}	O
else	O
{	O
if	O
(	O
i	int
-	O
*	O
first	*(long)
==	O
*	O
n	long
)	O
{	O
++	O
*	O
n	long
;	O
}	O
else	O
{	O
return	O
false	int
;	O
}	O
}	O
}	O
}	O
if	O
(	O
p	*(void)
[	O
i	int
]	O
||	O
q	*(char)
[	O
i	int
]	O
)	O
{	O
return	O
false	int
;	O
}	O
return	O
true	int
;	O
}	O
static	O
char	O
*	O
do_time_format	(*(char),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(char),long)->(*(char))
(	O
const	O
char	O
*	O
fmt	*(char)
,	O
const	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
*	O
p	*(void)
,	O
const	O
char	O
*	O
ns	long
,	O
size_t	long
ns_size	long
)	O
{	O
static	O
char	O
*	O
buf	*(char)
=	O
NULL	O
;	O
static	O
size_t	long
buf_size	long
;	O
char	O
*	O
timefmt	*(char)
=	O
NULL	O
;	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
altered_time	struct(int,int,int,int,int,int,int,int,int,long,*(char))
;	O
timefmt	*(char)
=	O
xmalloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
fmt	*(char)
)	O
+	O
2u	int
)	O
;	O
timefmt	*(char)
[	O
0	int
]	O
=	O
'_'	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
timefmt	*(char)
+	O
1	int
,	O
fmt	*(char)
,	O
strlen	(*(char))->(long)
(	O
fmt	*(char)
)	O
+	O
1	int
)	O
;	O
altered_time	struct(int,int,int,int,int,int,int,int,int,long,*(char))
=	O
*	O
p	*(void)
;	O
if	O
(	O
altered_time	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_sec	int
>=	O
11	int
)	O
altered_time	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_sec	int
-=	O
11	int
;	O
else	O
altered_time	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_sec	int
+=	O
11	int
;	O
if	O
(	O
buf	*(char)
==	O
NULL	O
)	O
{	O
buf_size	long
=	O
1u	int
;	O
buf	*(char)
=	O
xmalloc	(long)->(*(void))
(	O
buf_size	long
)	O
;	O
}	O
while	O
(	O
true	int
)	O
{	O
size_t	long
buf_used	long
=	O
strftime	(*(char),long,*(char),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))->(long)
(	O
buf	*(char)
,	O
buf_size	long
,	O
timefmt	*(char)
,	O
p	*(void)
)	O
;	O
if	O
(	O
buf_used	long
&&	O
(	O
buf_used	long
<	O
buf_size	long
)	O
)	O
{	O
char	O
*	O
altbuf	*(char)
;	O
size_t	long
i	int
=	O
0	int
,	O
n	long
=	O
0	int
;	O
size_t	long
final_len	long
=	O
(	O
buf_used	long
+	O
1u	int
+	O
ns_size	long
)	O
;	O
buf	*(char)
=	O
xrealloc	(*(void),long)->(*(void))
(	O
buf	*(char)
,	O
final_len	long
)	O
;	O
buf_size	long
=	O
final_len	long
;	O
altbuf	*(char)
=	O
xmalloc	(long)->(*(void))
(	O
final_len	long
)	O
;	O
strftime	(*(char),long,*(char),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))->(long)
(	O
altbuf	*(char)
,	O
buf_size	long
,	O
timefmt	*(char)
,	O
&	O
altered_time	struct(int,int,int,int,int,int,int,int,int,long,*(char))
)	O
;	O
if	O
(	O
scan_for_digit_differences	(*(char),*(char),*(long),*(long))->(bool)
(	O
buf	*(char)
,	O
altbuf	*(char)
,	O
&	O
i	int
,	O
&	O
n	long
)	O
&&	O
(	O
2	int
==	O
n	long
)	O
&&	O
!	O
isdigit	(int)->(int)
(	O
(	O
unsigned	O
char	O
)	O
buf	*(char)
[	O
i	int
+	O
n	long
]	O
)	O
)	O
{	O
const	O
size_t	long
end_of_seconds	long
=	O
i	int
+	O
n	long
;	O
const	O
size_t	long
suffix_len	long
=	O
buf_used	long
-	O
(	O
end_of_seconds	long
)	O
+	O
1	int
;	O
assert	O
(	O
end_of_seconds	long
+	O
ns_size	long
+	O
suffix_len	long
==	O
final_len	long
)	O
;	O
memmove	(*(void),*(void),long)->(*(void))
(	O
buf	*(char)
+	O
end_of_seconds	long
+	O
ns_size	long
,	O
buf	*(char)
+	O
end_of_seconds	long
,	O
suffix_len	long
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
buf	*(char)
+	O
i	int
+	O
n	long
,	O
ns	long
,	O
ns_size	long
)	O
;	O
}	O
else	O
{	O
}	O
free	(*(void))->(void)
(	O
timefmt	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
altbuf	*(char)
)	O
;	O
return	O
buf	*(char)
+	O
1	int
;	O
}	O
else	O
{	O
buf	*(char)
=	O
x2nrealloc	(*(void),*(long),long)->(*(void))
(	O
buf	*(char)
,	O
&	O
buf_size	long
,	O
sizeof	O
*	O
buf	*(char)
)	O
;	O
}	O
}	O
}	O
static	O
char	O
*	O
format_date	(struct(long,long),int)->(*(char))
(	O
struct	O
timespec	struct(long,long)
ts	struct(long,long)
,	O
int	O
kind	enum(int,int,int)
)	O
{	O
enum	O
{	O
NS_BUF_LEN	int
=	O
32	int
,	O
DATE_LEN_PERCENT_APLUS	int
=	O
21	int
}	O
;	O
static	O
char	O
buf	*(char)
[	O
128u	int
+	O
10u	int
+	O
MAX	O
(	O
DATE_LEN_PERCENT_APLUS	int
,	O
MAX	O
(	O
LONGEST_HUMAN_READABLE	O
+	O
2	int
,	O
NS_BUF_LEN	int
+	O
64	int
+	O
200	int
)	O
)	O
]	O
;	O
char	O
ns_buf	array(char)
[	O
NS_BUF_LEN	int
]	O
;	O
int	O
charsprinted	int
,	O
need_ns_suffix	int
;	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
*	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
;	O
char	O
fmt	*(char)
[	O
6	int
]	O
;	O
verify	O
(	O
sizeof	O
(	O
buf	*(char)
)	O
>=	O
LONGEST_HUMAN_READABLE	O
)	O
;	O
charsprinted	int
=	O
0	int
;	O
need_ns_suffix	int
=	O
0	int
;	O
if	O
(	O
kind	enum(int,int,int)
==	O
'+'	O
)	O
{	O
strcpy	(*(char),*(char))->(*(char))
(	O
fmt	*(char)
,	O
"%F+%T"	*(char)
)	O
;	O
need_ns_suffix	int
=	O
1	int
;	O
}	O
else	O
{	O
fmt	*(char)
[	O
0	int
]	O
=	O
'%'	O
;	O
fmt	*(char)
[	O
1	int
]	O
=	O
kind	enum(int,int,int)
;	O
fmt	*(char)
[	O
2	int
]	O
=	O
'\0'	O
;	O
switch	O
(	O
kind	enum(int,int,int)
)	O
{	O
case	O
'S'	O
:	O
case	O
'T'	O
:	O
case	O
'X'	O
:	O
case	O
'@'	O
:	O
need_ns_suffix	int
=	O
1	int
;	O
break	O
;	O
default	O
:	O
need_ns_suffix	int
=	O
0	int
;	O
break	O
;	O
}	O
}	O
if	O
(	O
need_ns_suffix	int
)	O
{	O
charsprinted	int
=	O
snprintf	(*(char),long,*(char))->(int)
(	O
ns_buf	array(char)
,	O
NS_BUF_LEN	int
,	O
".%09ld0"	*(char)
,	O
(	O
long	O
int	O
)	O
ts	struct(long,long)
.	O
tv_nsec	long
)	O
;	O
assert	O
(	O
charsprinted	int
<	O
NS_BUF_LEN	int
)	O
;	O
}	O
else	O
{	O
charsprinted	int
=	O
0	int
;	O
ns_buf	array(char)
[	O
0	int
]	O
=	O
0	int
;	O
}	O
if	O
(	O
kind	enum(int,int,int)
!=	O
'@'	O
)	O
{	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
=	O
localtime	(*(long))->(*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))
(	O
&	O
ts	struct(long,long)
.	O
tv_sec	long
)	O
;	O
if	O
(	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
)	O
{	O
char	O
*	O
s	enum(int,int,int,int,int,int,int,int,int,int,int)
=	O
do_time_format	(*(char),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(char),long)->(*(char))
(	O
fmt	*(char)
,	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
ns_buf	array(char)
,	O
charsprinted	int
)	O
;	O
if	O
(	O
s	enum(int,int,int,int,int,int,int,int,int,int,int)
)	O
return	O
s	enum(int,int,int,int,int,int,int,int,int,int,int)
;	O
}	O
}	O
if	O
(	O
1	int
)	O
{	O
uintmax_t	long
w	long
=	O
ts	struct(long,long)
.	O
tv_sec	long
;	O
size_t	long
used	long
,	O
len	long
,	O
remaining	long
;	O
char	O
*	O
p	*(void)
=	O
human_readable	(long,*(char),int,long,long)->(*(char))
(	O
ts	struct(long,long)
.	O
tv_sec	long
<	O
0	int
?	O
-	O
w	long
:	O
w	long
,	O
buf	*(char)
+	O
1	int
,	O
human_ceiling	int
,	O
1	int
,	O
1	int
)	O
;	O
assert	O
(	O
p	*(void)
>	O
buf	*(char)
)	O
;	O
assert	O
(	O
p	*(void)
<	O
(	O
buf	*(char)
+	O
(	O
sizeof	O
buf	*(char)
)	O
)	O
)	O
;	O
if	O
(	O
ts	struct(long,long)
.	O
tv_sec	long
<	O
0	int
)	O
*	O
--	O
p	*(void)
=	O
'-'	O
;	O
if	O
(	O
need_ns_suffix	int
)	O
{	O
len	long
=	O
strlen	(*(char))->(long)
(	O
p	*(void)
)	O
;	O
used	long
=	O
(	O
p	*(void)
-	O
buf	*(char)
)	O
+	O
len	long
;	O
assert	O
(	O
sizeof	O
buf	*(char)
>	O
used	long
)	O
;	O
remaining	long
=	O
sizeof	O
buf	*(char)
-	O
used	long
-	O
1u	int
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
ns_buf	array(char)
)	O
>=	O
remaining	long
)	O
{	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
"charsprinted=%ld but remaining=%lu: ns_buf=%s"	*(char)
,	O
(	O
long	O
)	O
charsprinted	int
,	O
(	O
unsigned	O
long	O
)	O
remaining	long
,	O
ns_buf	array(char)
)	O
;	O
}	O
assert	O
(	O
strlen	(*(char))->(long)
(	O
ns_buf	array(char)
)	O
<	O
remaining	long
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
p	*(void)
,	O
ns_buf	array(char)
)	O
;	O
}	O
return	O
p	*(void)
;	O
}	O
}	O
static	O
const	O
char	O
*	O
weekdays	array(*(char))
[	O
]	O
=	O
{	O
"Sun"	*(char)
,	O
"Mon"	*(char)
,	O
"Tue"	*(char)
,	O
"Wed"	*(char)
,	O
"Thu"	*(char)
,	O
"Fri"	*(char)
,	O
"Sat"	*(char)
}	O
;	O
static	O
const	O
char	O
*	O
months	array(*(char))
[	O
]	O
=	O
{	O
"Jan"	*(char)
,	O
"Feb"	*(char)
,	O
"Mar"	*(char)
,	O
"Apr"	*(char)
,	O
"May"	*(char)
,	O
"Jun"	*(char)
,	O
"Jul"	*(char)
,	O
"Aug"	*(char)
,	O
"Sep"	*(char)
,	O
"Oct"	*(char)
,	O
"Nov"	*(char)
,	O
"Dec"	*(char)
}	O
;	O
static	O
char	O
*	O
ctime_format	(struct(long,long))->(*(char))
(	O
struct	O
timespec	struct(long,long)
ts	struct(long,long)
)	O
{	O
const	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
*	O
ptm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
;	O
static	O
char	O
resultbuf	array(char)
[	O
TIME_BUF_LEN	int
]	O
;	O
int	O
nout	int
;	O
ptm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
=	O
localtime	(*(long))->(*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))
(	O
&	O
ts	struct(long,long)
.	O
tv_sec	long
)	O
;	O
if	O
(	O
ptm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
)	O
{	O
assert	O
(	O
ptm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_wday	int
>=	O
0	int
)	O
;	O
assert	O
(	O
ptm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_wday	int
<	O
7	int
)	O
;	O
assert	O
(	O
ptm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_mon	int
>=	O
0	int
)	O
;	O
assert	O
(	O
ptm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_mon	int
<	O
12	int
)	O
;	O
assert	O
(	O
ptm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_hour	int
>=	O
0	int
)	O
;	O
assert	O
(	O
ptm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_hour	int
<	O
24	int
)	O
;	O
assert	O
(	O
ptm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_min	int
<	O
60	int
)	O
;	O
assert	O
(	O
ptm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_sec	int
<=	O
61	int
)	O
;	O
nout	int
=	O
snprintf	(*(char),long,*(char))->(int)
(	O
resultbuf	array(char)
,	O
TIME_BUF_LEN	int
,	O
"%3s %3s %2d %02d:%02d:%02d.%09ld0 %04d"	*(char)
,	O
weekdays	array(*(char))
[	O
ptm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_wday	int
]	O
,	O
months	array(*(char))
[	O
ptm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_mon	int
]	O
,	O
ptm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_mday	int
,	O
ptm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_hour	int
,	O
ptm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_min	int
,	O
ptm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_sec	int
,	O
(	O
long	O
int	O
)	O
ts	struct(long,long)
.	O
tv_nsec	long
,	O
1900	int
+	O
ptm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_year	int
)	O
;	O
assert	O
(	O
nout	int
<	O
TIME_BUF_LEN	int
)	O
;	O
return	O
resultbuf	array(char)
;	O
}	O
else	O
{	O
return	O
format_date	(struct(long,long),int)->(*(char))
(	O
ts	struct(long,long)
,	O
'@'	O
)	O
;	O
}	O
}	O
static	O
double	O
file_sparseness	(*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(double)
(	O
const	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
p	*(void)
)	O
{	O
if	O
(	O
0	int
==	O
p	*(void)
->	O
st_size	long
)	O
{	O
if	O
(	O
0	int
==	O
ST_NBLOCKS	O
(	O
*	O
p	*(void)
)	O
)	O
return	O
1.0	int
;	O
else	O
return	O
ST_NBLOCKS	O
(	O
*	O
p	*(void)
)	O
<	O
0	int
?	O
-	O
HUGE_VAL	O
:	O
HUGE_VAL	O
;	O
}	O
else	O
{	O
double	O
blklen	double
=	O
ST_NBLOCKSIZE	O
*	O
(	O
double	O
)	O
ST_NBLOCKS	O
(	O
*	O
p	*(void)
)	O
;	O
return	O
blklen	double
/	O
p	*(void)
->	O
st_size	long
;	O
}	O
}	O
static	O
void	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
struct	O
format_val	struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),*(char),bool,*(struct))
*	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
const	O
char	O
*	O
fmt	*(char)
,	O
...	O
)	O
{	O
int	O
rv	int
;	O
va_list	array(struct(int,int,*(void),*(void)))
ap	array(struct(int,int,*(void),*(void)))
;	O
va_start	O
(	O
ap	array(struct(int,int,*(void),*(void)))
,	O
fmt	*(char)
)	O
;	O
rv	int
=	O
vfprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),array(struct(int,int,*(void),*(void))))->(int)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
->	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
fmt	*(char)
,	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
if	O
(	O
rv	int
<	O
0	int
)	O
nonfatal_nontarget_file_error	(int,*(char))->(void)
(	O
errno	O
,	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
->	O
filename	*(char)
)	O
;	O
}	O
static	O
void	O
checked_print_quoted	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char),*(char))->(void)
(	O
struct	O
format_val	struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),*(char),bool,*(struct))
*	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
const	O
char	O
*	O
format	*(char)
,	O
const	O
char	O
*	O
s	enum(int,int,int,int,int,int,int,int,int,int,int)
)	O
{	O
int	O
rv	int
=	O
print_quoted	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct),bool,*(char),*(char))->(int)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
->	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
->	O
quote_opts	*(struct)
,	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
->	O
dest_is_tty	bool
,	O
format	*(char)
,	O
s	enum(int,int,int,int,int,int,int,int,int,int,int)
)	O
;	O
if	O
(	O
rv	int
<	O
0	int
)	O
nonfatal_nontarget_file_error	(int,*(char))->(void)
(	O
errno	O
,	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
->	O
filename	*(char)
)	O
;	O
}	O
static	O
void	O
checked_fwrite	(*(void),long,long,*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))))->(void)
(	O
void	O
*	O
p	*(void)
,	O
size_t	long
siz	long
,	O
size_t	long
nmemb	long
,	O
struct	O
format_val	struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),*(char),bool,*(struct))
*	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
)	O
{	O
const	O
size_t	long
items_written	long
=	O
fwrite	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
p	*(void)
,	O
siz	long
,	O
nmemb	long
,	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
->	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
items_written	long
<	O
nmemb	long
)	O
nonfatal_nontarget_file_error	(int,*(char))->(void)
(	O
errno	O
,	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
->	O
filename	*(char)
)	O
;	O
}	O
static	O
void	O
checked_fflush	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))))->(void)
(	O
struct	O
format_val	struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),*(char),bool,*(struct))
*	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
)	O
{	O
if	O
(	O
0	int
!=	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
->	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
nonfatal_nontarget_file_error	(int,*(char))->(void)
(	O
errno	O
,	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
->	O
filename	*(char)
)	O
;	O
}	O
}	O
static	O
const	O
char	O
*	O
mode_to_filetype	(int)->(*(char))
(	O
mode_t	int
m	int
)	O
{	O
HANDLE_TYPE	O
(	O
S_IFREG	O
,	O
"f"	*(char)
)	O
;	O
HANDLE_TYPE	O
(	O
S_IFDIR	O
,	O
"d"	*(char)
)	O
;	O
HANDLE_TYPE	O
(	O
S_IFLNK	O
,	O
"l"	*(char)
)	O
;	O
HANDLE_TYPE	O
(	O
S_IFSOCK	O
,	O
"s"	*(char)
)	O
;	O
HANDLE_TYPE	O
(	O
S_IFBLK	O
,	O
"b"	*(char)
)	O
;	O
HANDLE_TYPE	O
(	O
S_IFCHR	O
,	O
"c"	*(char)
)	O
;	O
HANDLE_TYPE	O
(	O
S_IFIFO	O
,	O
"p"	*(char)
)	O
;	O
return	O
"U"	*(char)
;	O
}	O
static	O
void	O
do_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*`,int,*`)))),*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(void)
(	O
struct	O
format_val	struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),*(char),bool,*(struct))
*	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
struct	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
*	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
,	O
const	O
char	O
*	O
pathname	*(char)
,	O
const	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
)	O
{	O
char	O
hbuf	array(char)
[	O
LONGEST_HUMAN_READABLE	O
+	O
1	int
]	O
;	O
const	O
char	O
*	O
cp	*(char)
;	O
switch	O
(	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
segkind	enum(int,int,int)
)	O
{	O
case	O
KIND_PLAIN	int
:	O
checked_fwrite	(*(void),long,long,*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))))->(void)
(	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
1	int
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text_len	int
,	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
)	O
;	O
break	O
;	O
case	O
KIND_STOP	int
:	O
checked_fwrite	(*(void),long,long,*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))))->(void)
(	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
1	int
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text_len	int
,	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
)	O
;	O
checked_fflush	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
)	O
;	O
break	O
;	O
case	O
KIND_FORMAT	int
:	O
switch	O
(	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
format_char	array(char)
[	O
0	int
]	O
)	O
{	O
case	O
'a'	O
:	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
ctime_format	(struct(long,long))->(*(char))
(	O
get_stat_atime	(*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(struct(long,long))
(	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
)	O
)	O
)	O
;	O
break	O
;	O
case	O
'b'	O
:	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
human_readable	(long,*(char),int,long,long)->(*(char))
(	O
(	O
uintmax_t	long
)	O
ST_NBLOCKS	O
(	O
*	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
)	O
,	O
hbuf	array(char)
,	O
human_ceiling	int
,	O
ST_NBLOCKSIZE	O
,	O
512	int
)	O
)	O
;	O
break	O
;	O
case	O
'c'	O
:	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
ctime_format	(struct(long,long))->(*(char))
(	O
get_stat_ctime	(*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(struct(long,long))
(	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
)	O
)	O
)	O
;	O
break	O
;	O
case	O
'd'	O
:	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
state	*(int)
.	O
curdepth	int
)	O
;	O
break	O
;	O
case	O
'D'	O
:	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
human_readable	(long,*(char),int,long,long)->(*(char))
(	O
(	O
uintmax_t	long
)	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_dev	long
,	O
hbuf	array(char)
,	O
human_ceiling	int
,	O
1	int
,	O
1	int
)	O
)	O
;	O
break	O
;	O
case	O
'f'	O
:	O
{	O
char	O
*	O
base	int
=	O
base_name	(*(char))->(*(char))
(	O
pathname	*(char)
)	O
;	O
checked_print_quoted	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
base	int
)	O
;	O
free	(*(void))->(void)
(	O
base	int
)	O
;	O
}	O
break	O
;	O
case	O
'F'	O
:	O
checked_print_quoted	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
filesystem_type	(*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))),*(char))->(*(char))
(	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
,	O
pathname	*(char)
)	O
)	O
;	O
break	O
;	O
case	O
'g'	O
:	O
{	O
struct	O
group	struct(*(char),*(char),int,*(*(char)))
*	O
g	*(struct(*(char),*(char),int,*(*(char))))
;	O
g	*(struct(*(char),*(char),int,*(*(char))))
=	O
getgrgid	(int)->(*(struct(*(char),*(char),int,*(*(char)))))
(	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_gid	int
)	O
;	O
if	O
(	O
g	*(struct(*(char),*(char),int,*(*(char))))
)	O
{	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
[	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text_len	int
]	O
=	O
's'	O
;	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
g	*(struct(*(char),*(char),int,*(*(char))))
->	O
gr_name	*(char)
)	O
;	O
break	O
;	O
}	O
else	O
{	O
}	O
}	O
case	O
'G'	O
:	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
human_readable	(long,*(char),int,long,long)->(*(char))
(	O
(	O
uintmax_t	long
)	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_gid	int
,	O
hbuf	array(char)
,	O
human_ceiling	int
,	O
1	int
,	O
1	int
)	O
)	O
;	O
break	O
;	O
case	O
'h'	O
:	O
{	O
cp	*(char)
=	O
strrchr	(*(char),int)->(*(char))
(	O
pathname	*(char)
,	O
'/'	O
)	O
;	O
if	O
(	O
cp	*(char)
==	O
NULL	O
)	O
{	O
checked_print_quoted	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
"."	*(char)
)	O
;	O
}	O
else	O
{	O
char	O
*	O
s	enum(int,int,int,int,int,int,int,int,int,int,int)
=	O
strdup	(*(char))->(*(char))
(	O
pathname	*(char)
)	O
;	O
s	enum(int,int,int,int,int,int,int,int,int,int,int)
[	O
cp	*(char)
-	O
pathname	*(char)
]	O
=	O
0	int
;	O
checked_print_quoted	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
s	enum(int,int,int,int,int,int,int,int,int,int,int)
)	O
;	O
free	(*(void))->(void)
(	O
s	enum(int,int,int,int,int,int,int,int,int,int,int)
)	O
;	O
}	O
}	O
break	O
;	O
case	O
'H'	O
:	O
{	O
char	O
*	O
s	enum(int,int,int,int,int,int,int,int,int,int,int)
=	O
xmalloc	(long)->(*(void))
(	O
state	*(int)
.	O
starting_path_length	int
+	O
1	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
s	enum(int,int,int,int,int,int,int,int,int,int,int)
,	O
pathname	*(char)
,	O
state	*(int)
.	O
starting_path_length	int
)	O
;	O
s	enum(int,int,int,int,int,int,int,int,int,int,int)
[	O
state	*(int)
.	O
starting_path_length	int
]	O
=	O
0	int
;	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
s	enum(int,int,int,int,int,int,int,int,int,int,int)
)	O
;	O
free	(*(void))->(void)
(	O
s	enum(int,int,int,int,int,int,int,int,int,int,int)
)	O
;	O
}	O
break	O
;	O
case	O
'i'	O
:	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
human_readable	(long,*(char),int,long,long)->(*(char))
(	O
(	O
uintmax_t	long
)	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_ino	long
,	O
hbuf	array(char)
,	O
human_ceiling	int
,	O
1	int
,	O
1	int
)	O
)	O
;	O
break	O
;	O
case	O
'k'	O
:	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
human_readable	(long,*(char),int,long,long)->(*(char))
(	O
(	O
uintmax_t	long
)	O
ST_NBLOCKS	O
(	O
*	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
)	O
,	O
hbuf	array(char)
,	O
human_ceiling	int
,	O
ST_NBLOCKSIZE	O
,	O
1024	int
)	O
)	O
;	O
break	O
;	O
case	O
'l'	O
:	O
{	O
char	O
*	O
linkname	*(char)
=	O
0	int
;	O
if	O
(	O
S_ISLNK	O
(	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_mode	int
)	O
)	O
{	O
linkname	*(char)
=	O
areadlinkat	(int,*(char))->(*(char))
(	O
state	*(int)
.	O
cwd_dir_fd	int
,	O
state	*(int)
.	O
rel_pathname	*(char)
)	O
;	O
if	O
(	O
linkname	*(char)
==	O
NULL	O
)	O
{	O
nonfatal_target_file_error	(int,*(char))->(void)
(	O
errno	O
,	O
pathname	*(char)
)	O
;	O
state	*(int)
.	O
exit_status	int
=	O
1	int
;	O
}	O
}	O
if	O
(	O
linkname	*(char)
)	O
{	O
checked_print_quoted	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
linkname	*(char)
)	O
;	O
}	O
else	O
{	O
checked_print_quoted	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
""	*(char)
)	O
;	O
}	O
free	(*(void))->(void)
(	O
linkname	*(char)
)	O
;	O
}	O
break	O
;	O
case	O
'M'	O
:	O
{	O
char	O
modestring	array(char)
[	O
16	int
]	O
;	O
filemodestring	(*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))),*(char))->(void)
(	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
,	O
modestring	array(char)
)	O
;	O
modestring	array(char)
[	O
10	int
]	O
=	O
'\0'	O
;	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
modestring	array(char)
)	O
;	O
}	O
break	O
;	O
case	O
'm'	O
:	O
{	O
mode_t	int
m	int
=	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_mode	int
;	O
bool	bool
traditional_numbering_scheme	bool
=	O
(	O
S_ISUID	O
==	O
04000	int
&&	O
S_ISGID	O
==	O
02000	int
&&	O
S_ISVTX	O
==	O
01000	int
&&	O
S_IRUSR	O
==	O
00400	int
&&	O
S_IWUSR	O
==	O
00200	int
&&	O
S_IXUSR	O
==	O
00100	int
&&	O
S_IRGRP	O
==	O
00040	int
&&	O
S_IWGRP	O
==	O
00020	int
&&	O
S_IXGRP	O
==	O
00010	int
&&	O
S_IROTH	O
==	O
00004	int
&&	O
S_IWOTH	O
==	O
00002	int
&&	O
S_IXOTH	O
==	O
00001	int
)	O
;	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
(	O
traditional_numbering_scheme	bool
?	O
m	int
&	O
MODE_ALL	O
:	O
(	O
(	O
m	int
&	O
S_ISUID	O
?	O
04000	int
:	O
0	int
)	O
|	O
(	O
m	int
&	O
S_ISGID	O
?	O
02000	int
:	O
0	int
)	O
|	O
(	O
m	int
&	O
S_ISVTX	O
?	O
01000	int
:	O
0	int
)	O
|	O
(	O
m	int
&	O
S_IRUSR	O
?	O
00400	int
:	O
0	int
)	O
|	O
(	O
m	int
&	O
S_IWUSR	O
?	O
00200	int
:	O
0	int
)	O
|	O
(	O
m	int
&	O
S_IXUSR	O
?	O
00100	int
:	O
0	int
)	O
|	O
(	O
m	int
&	O
S_IRGRP	O
?	O
00040	int
:	O
0	int
)	O
|	O
(	O
m	int
&	O
S_IWGRP	O
?	O
00020	int
:	O
0	int
)	O
|	O
(	O
m	int
&	O
S_IXGRP	O
?	O
00010	int
:	O
0	int
)	O
|	O
(	O
m	int
&	O
S_IROTH	O
?	O
00004	int
:	O
0	int
)	O
|	O
(	O
m	int
&	O
S_IWOTH	O
?	O
00002	int
:	O
0	int
)	O
|	O
(	O
m	int
&	O
S_IXOTH	O
?	O
00001	int
:	O
0	int
)	O
)	O
)	O
)	O
;	O
}	O
break	O
;	O
case	O
'n'	O
:	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
human_readable	(long,*(char),int,long,long)->(*(char))
(	O
(	O
uintmax_t	long
)	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_nlink	long
,	O
hbuf	array(char)
,	O
human_ceiling	int
,	O
1	int
,	O
1	int
)	O
)	O
;	O
break	O
;	O
case	O
'p'	O
:	O
checked_print_quoted	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
pathname	*(char)
)	O
;	O
break	O
;	O
case	O
'P'	O
:	O
if	O
(	O
state	*(int)
.	O
curdepth	int
>	O
0	int
)	O
{	O
cp	*(char)
=	O
pathname	*(char)
+	O
state	*(int)
.	O
starting_path_length	int
;	O
if	O
(	O
*	O
cp	*(char)
==	O
'/'	O
)	O
cp	*(char)
++	O
;	O
}	O
else	O
{	O
cp	*(char)
=	O
""	*(char)
;	O
}	O
checked_print_quoted	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
cp	*(char)
)	O
;	O
break	O
;	O
case	O
's'	O
:	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
human_readable	(long,*(char),int,long,long)->(*(char))
(	O
(	O
uintmax_t	long
)	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_size	long
,	O
hbuf	array(char)
,	O
human_ceiling	int
,	O
1	int
,	O
1	int
)	O
)	O
;	O
break	O
;	O
case	O
'S'	O
:	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
file_sparseness	(*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(double)
(	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
)	O
)	O
;	O
break	O
;	O
case	O
't'	O
:	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
ctime_format	(struct(long,long))->(*(char))
(	O
get_stat_mtime	(*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(struct(long,long))
(	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
)	O
)	O
)	O
;	O
break	O
;	O
case	O
'u'	O
:	O
{	O
struct	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
*	O
p	*(void)
;	O
p	*(void)
=	O
getpwuid	(int)->(*(struct(*(char),*(char),int,int,*(char),*(char),*(char))))
(	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_uid	int
)	O
;	O
if	O
(	O
p	*(void)
)	O
{	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
[	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text_len	int
]	O
=	O
's'	O
;	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
p	*(void)
->	O
pw_name	*(char)
)	O
;	O
break	O
;	O
}	O
}	O
case	O
'U'	O
:	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
human_readable	(long,*(char),int,long,long)->(*(char))
(	O
(	O
uintmax_t	long
)	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_uid	int
,	O
hbuf	array(char)
,	O
human_ceiling	int
,	O
1	int
,	O
1	int
)	O
)	O
;	O
break	O
;	O
case	O
'Y'	O
:	O
{	O
if	O
(	O
S_ISLNK	O
(	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_mode	int
)	O
)	O
{	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
sbuf	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
;	O
if	O
(	O
(	O
following_links	()->(bool)
(	O
)	O
?	O
optionp_stat	(*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
:	O
optionl_stat	(*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
)	O
(	O
state	*(int)
.	O
rel_pathname	*(char)
,	O
&	O
sbuf	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
!=	O
0	int
)	O
{	O
if	O
(	O
errno	O
==	O
ENOENT	int
)	O
{	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
"N"	*(char)
)	O
;	O
break	O
;	O
}	O
else	O
if	O
(	O
errno	O
==	O
ELOOP	int
)	O
{	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
"L"	*(char)
)	O
;	O
break	O
;	O
}	O
else	O
{	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
"?"	*(char)
)	O
;	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
errno	O
,	O
"%s"	*(char)
,	O
safely_quote_err_filename	(int,*(char))->(*(char))
(	O
0	int
,	O
pathname	*(char)
)	O
)	O
;	O
break	O
;	O
}	O
}	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
mode_to_filetype	(int)->(*(char))
(	O
sbuf	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_mode	int
&	O
S_IFMT	O
)	O
)	O
;	O
}	O
else	O
{	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
mode_to_filetype	(int)->(*(char))
(	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_mode	int
&	O
S_IFMT	O
)	O
)	O
;	O
}	O
}	O
break	O
;	O
case	O
'y'	O
:	O
{	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
mode_to_filetype	(int)->(*(char))
(	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_mode	int
&	O
S_IFMT	O
)	O
)	O
;	O
}	O
break	O
;	O
case	O
'Z'	O
:	O
{	O
security_context_t	*(char)
scontext	*(char)
;	O
int	O
rv	int
=	O
(	O
*	O
options	struct(bool,bool,int,int,bool,bool,bool,bool,bool,bool,struct(long,long),struct(long,long),bool,int,long,enum(int,int,int),*((*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)),bool,int,*((int,*(char),*(*(char)))->(int)),short,enum(int,int,int,int,int,int,int,int,int,int,int))
.	O
x_getfilecon	*((int,*(char),*(*(char)))->(int))
)	O
(	O
state	*(int)
.	O
cwd_dir_fd	int
,	O
state	*(int)
.	O
rel_pathname	*(char)
,	O
&	O
scontext	*(char)
)	O
;	O
if	O
(	O
rv	int
<	O
0	int
)	O
{	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
""	*(char)
)	O
;	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
errno	O
,	O
_	O
(	O
"getfilecon failed: %s"	*(char)
)	O
,	O
safely_quote_err_filename	(int,*(char))->(*(char))
(	O
0	int
,	O
pathname	*(char)
)	O
)	O
;	O
state	*(int)
.	O
exit_status	int
=	O
1	int
;	O
}	O
else	O
{	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
scontext	*(char)
)	O
;	O
freecon	(*(char))->(void)
(	O
scontext	*(char)
)	O
;	O
}	O
}	O
break	O
;	O
case	O
0	int
:	O
case	O
'%'	O
:	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
)	O
;	O
break	O
;	O
}	O
break	O
;	O
}	O
}	O
bool	bool
pred_fprintf	(*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct`),struct(bool,struct`,struct`,*`,int,bool,*`,int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct`),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*`,*`,*`,bool,*`),*(char)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),*(struct(*`,*`,enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*`,union`,*`,*`,*`,struct`,*`)),struct(long,long),*(struct(enum(int,int,int,int,int,int,int),*`,*`,*`)))))->(bool)
(	O
const	O
char	O
*	O
pathname	*(char)
,	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
,	O
struct	O
predicate	struct(*((*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*(struct),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*(char),long,*((*`,*`,int,*`)->(int)),long,long),struct(long,*(*(char)),long,*(char),long,long,*(void),int,int,long,long),*(*(char)),int,bool,*(struct),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)),*(char)),*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct))),*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct))),*(struct(*((*(char),*(struct`),*(struct`))->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*(char),*(struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*`,long,*`,long,long),struct(long,*`,long,*`,long,long,*`,int,int,long,long),*(*`),int,bool,*(struct`),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct`),*(struct`),*(char),bool,*(struct`)),*(char)),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),*(struct(*((*`,*`,*`)->(bool)),*(char),enum(int,int,int,int,int,int),enum(int,int,int,int,int,int),bool,bool,bool,bool,bool,enum(int,int,int,int,int,int,int,int,int,int,int,int),float,bool,bool,*(char),union(*`,*`,struct`,struct`,struct`,int,int,struct`,struct`,struct`,int,struct`,*`),*(struct`),*(struct`),*(struct`),struct(long,long),*(struct`))),struct(long,long),*(struct))),struct(long,long),*(struct))
*	O
pred_ptr	*(struct)
)	O
{	O
struct	O
format_val	struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),*(char),bool,*(struct))
*	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
=	O
&	O
pred_ptr	*(struct)
->	O
args	union(*(char),*(struct(*(struct),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)),struct(bool,struct(int,long,long,long,long,long,*(char),long,*((*`,*`,int,*`)->(int)),long,long),struct(long,*(*(char)),long,*(char),long,long,*(void),int,int,long,long),*(*(char)),int,bool,*(struct),int),struct(enum(int,int,int),bool,long),struct(enum(int,int,int),int,long),int,int,struct(enum(int,int,int,int,int),enum(int,int,int),struct(long,long)),struct(enum(int,int,int),array(int)),struct(long,long,int),int,struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)),*(char))
.	O
printf_vec	struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*`,int,*`)))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),bool,*(struct))
;	O
struct	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
*	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
;	O
for	O
(	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
=	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
->	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
;	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
;	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
=	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
next	*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`)))))
)	O
{	O
if	O
(	O
(	O
KIND_FORMAT	int
==	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
segkind	enum(int,int,int)
)	O
&&	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
format_char	array(char)
[	O
1	int
]	O
)	O
{	O
struct	O
timespec	struct(long,long)
ts	struct(long,long)
;	O
int	O
valid	int
=	O
0	int
;	O
switch	O
(	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
format_char	array(char)
[	O
0	int
]	O
)	O
{	O
case	O
'A'	O
:	O
ts	struct(long,long)
=	O
get_stat_atime	(*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(struct(long,long))
(	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
)	O
;	O
valid	int
=	O
1	int
;	O
break	O
;	O
case	O
'B'	O
:	O
ts	struct(long,long)
=	O
get_stat_birthtime	(*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(struct(long,long))
(	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
)	O
;	O
if	O
(	O
'@'	O
==	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
format_char	array(char)
[	O
1	int
]	O
)	O
valid	int
=	O
1	int
;	O
else	O
valid	int
=	O
(	O
ts	struct(long,long)
.	O
tv_nsec	long
>=	O
0	int
)	O
;	O
break	O
;	O
case	O
'C'	O
:	O
ts	struct(long,long)
=	O
get_stat_ctime	(*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(struct(long,long))
(	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
)	O
;	O
valid	int
=	O
1	int
;	O
break	O
;	O
case	O
'T'	O
:	O
ts	struct(long,long)
=	O
get_stat_mtime	(*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(struct(long,long))
(	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
)	O
;	O
valid	int
=	O
1	int
;	O
break	O
;	O
default	O
:	O
assert	O
(	O
0	int
)	O
;	O
abort	()->(void)
(	O
)	O
;	O
}	O
if	O
(	O
valid	int
)	O
{	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
format_date	(struct(long,long),int)->(*(char))
(	O
ts	struct(long,long)
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
format_char	array(char)
[	O
1	int
]	O
)	O
)	O
;	O
}	O
else	O
{	O
checked_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(char))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
->	O
text	*(char)
,	O
""	*(char)
)	O
;	O
}	O
}	O
else	O
{	O
do_fprintf	(*(struct(*(struct(enum(int,int,int),array(char),*`,int,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),bool,*(struct))),*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*`,int,*`)))),*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(void)
(	O
dest	*(struct(*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),bool,*(struct)))
,	O
segment	struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct(enum(int,int,int),array(char),*(char),int,*(struct`))))))
,	O
pathname	*(char)
,	O
stat_buf	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
)	O
;	O
}	O
}	O
return	O
true	int
;	O
}	O
