const	O
char	O
protj_rcsid	array(char)
[	O
]	O
=	O
"$Id: protj.c,v 1.9 2002/03/05 19:10:41 ian Rel $"	*(char)
;	O
static	O
char	O
*	O
zJavoid	*(char)
;	O
static	O
size_t	long
cJavoid	long
;	O
static	O
char	O
*	O
zJbuf	*(char)
;	O
static	O
int	O
iJrecend	int
;	O
static	O
boolean	int
fjsend_data	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long,int)->(int)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
const	O
char	O
*	O
zsend	*(char)
,	O
size_t	long
csend	long
,	O
boolean	int
fdoread	int
)	O
)	O
;	O
static	O
boolean	int
fjreceive_data	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),long,*(long),int,int)->(int)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
size_t	long
cneed	long
,	O
size_t	long
*	O
pcrec	*(long)
,	O
int	O
ctimeout	int
,	O
boolean	int
freport	int
)	O
)	O
;	O
static	O
boolean	int
fjprocess_data	(*(long))->(int)
P	O
(	O
(	O
size_t	long
*	O
pcneed	*(long)
)	O
)	O
;	O
boolean	int
fjstart	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),*(*(char)))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
pzlog	*(*(char))
)	O
struct	O
sdaemon	struct(*(void),*(char),int,*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)
*	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
;	O
char	O
*	O
*	O
pzlog	*(*(char))
;	O
{	O
size_t	long
clen	long
;	O
char	O
*	O
zsend	*(char)
;	O
int	O
b	int
;	O
size_t	long
cbuf	long
,	O
cgot	long
;	O
char	O
*	O
zbuf	*(char)
;	O
size_t	long
i	long
;	O
clen	long
=	O
strlen	(*(char))->(long)
(	O
zJavoid_parameter	*(char)
)	O
;	O
zsend	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
clen	long
+	O
3	int
)	O
;	O
zsend	*(char)
[	O
0	int
]	O
=	O
FIRST	char
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
zsend	*(char)
+	O
1	int
,	O
zJavoid_parameter	*(char)
,	O
clen	long
)	O
;	O
zsend	*(char)
[	O
clen	long
+	O
1	int
]	O
=	O
TRAILER	char
;	O
zsend	*(char)
[	O
clen	long
+	O
2	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
!	O
fsend_data	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
->	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zsend	*(char)
,	O
clen	long
+	O
2	int
,	O
TRUE	O
)	O
)	O
{	O
ubuffree	(*(char))->(void)
(	O
zsend	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
ubuffree	(*(char))->(void)
(	O
zsend	*(char)
)	O
;	O
while	O
(	O
(	O
b	int
=	O
breceive_char	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
->	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
cIsync_timeout	int
,	O
TRUE	O
)	O
)	O
!=	O
FIRST	char
)	O
{	O
if	O
(	O
b	int
<	O
0	int
)	O
{	O
if	O
(	O
b	int
==	O
-	O
1	int
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Timed out in 'j' protocol startup"	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
cbuf	long
=	O
20	int
;	O
zbuf	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
cbuf	long
)	O
;	O
cgot	long
=	O
0	int
;	O
while	O
(	O
(	O
b	int
=	O
breceive_char	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int,int)->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
->	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
cIsync_timeout	int
,	O
TRUE	O
)	O
)	O
!=	O
TRAILER	char
)	O
{	O
if	O
(	O
b	int
<	O
0	int
)	O
{	O
ubuffree	(*(char))->(void)
(	O
zbuf	*(char)
)	O
;	O
if	O
(	O
b	int
==	O
-	O
1	int
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Timed out in 'j' protocol startup"	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
cgot	long
+	O
1	int
>=	O
cbuf	long
)	O
{	O
char	O
*	O
znew	*(char)
;	O
cbuf	long
+=	O
20	int
;	O
znew	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
cbuf	long
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
znew	*(char)
,	O
zbuf	*(char)
,	O
cgot	long
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zbuf	*(char)
)	O
;	O
zbuf	*(char)
=	O
znew	*(char)
;	O
}	O
zbuf	*(char)
[	O
cgot	long
]	O
=	O
b	int
;	O
++	O
cgot	long
;	O
}	O
zbuf	*(char)
[	O
cgot	long
]	O
=	O
'\0'	O
;	O
cgot	long
=	O
cescape	(*(char))->(long)
(	O
zbuf	*(char)
)	O
;	O
clen	long
=	O
strlen	(*(char))->(long)
(	O
zJavoid_parameter	*(char)
)	O
;	O
zJavoid	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
clen	long
+	O
cgot	long
+	O
1	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
zJavoid	*(char)
,	O
zJavoid_parameter	*(char)
,	O
clen	long
+	O
1	int
)	O
;	O
cJavoid	long
=	O
cescape	(*(char))->(long)
(	O
zJavoid	*(char)
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
cgot	long
;	O
i	long
++	O
)	O
{	O
if	O
(	O
memchr	(*(void),int,long)->(*(void))
(	O
zJavoid	*(char)
,	O
zbuf	*(char)
[	O
i	long
]	O
,	O
cJavoid	long
)	O
==	O
NULL	O
)	O
{	O
zJavoid	*(char)
[	O
cJavoid	long
]	O
=	O
zbuf	*(char)
[	O
i	long
]	O
;	O
++	O
cJavoid	long
;	O
}	O
}	O
ubuffree	(*(char))->(void)
(	O
zbuf	*(char)
)	O
;	O
if	O
(	O
cJavoid	long
==	O
0	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"No characters to avoid in 'j' protocol"	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
cJavoid	long
;	O
i	long
++	O
)	O
{	O
if	O
(	O
zJavoid	*(char)
[	O
i	long
]	O
>=	O
32	int
&&	O
zJavoid	*(char)
[	O
i	long
]	O
<=	O
126	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"'j' protocol can't avoid character '\\%03o'"	*(char)
,	O
zJavoid	*(char)
[	O
i	long
]	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
if	O
(	O
memchr	(*(void),int,long)->(*(void))
(	O
zJavoid	*(char)
,	O
'\021'	O
,	O
cJavoid	long
)	O
!=	O
NULL	O
&&	O
memchr	(*(void),int,long)->(*(void))
(	O
zJavoid	*(char)
,	O
'\023'	O
,	O
cJavoid	long
)	O
!=	O
NULL	O
)	O
{	O
if	O
(	O
!	O
fconn_set	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
->	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
PARITYSETTING_NONE	int
,	O
STRIPSETTING_EIGHTBITS	int
,	O
XONXOFF_ON	int
)	O
)	O
return	O
FALSE	O
;	O
}	O
usysdep_sleep	(int)->(void)
(	O
2	int
)	O
;	O
zJbuf	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
CHDRLEN	O
+	O
IMAXPACKSIZE	O
*	O
3	int
+	O
1	int
)	O
;	O
zJbuf	*(char)
[	O
0	int
]	O
=	O
FIRST	char
;	O
zJbuf	*(char)
[	O
3	int
]	O
=	O
FOURTH	char
;	O
zJbuf	*(char)
[	O
6	int
]	O
=	O
SEVENTH	char
;	O
iJrecend	int
=	O
iPrecend	int
;	O
iPrecend	int
=	O
iPrecstart	int
;	O
return	O
fijstart	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)),*(*(char)),int,*((*(struct(*`,*`,*`)),*(char),long,int)->(int)),*((*(struct(*`,*`,*`)),long,*(long),int,int)->(int)))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
,	O
pzlog	*(*(char))
,	O
IMAXPACKSIZE	O
,	O
fjsend_data	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long,int)->(int)
,	O
fjreceive_data	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),long,*(long),int,int)->(int)
)	O
;	O
}	O
boolean	int
fjshutdown	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
)	O
struct	O
sdaemon	struct(*(void),*(char),int,*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`))))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)
*	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
;	O
{	O
boolean	int
fret	int
;	O
fret	int
=	O
fishutdown	(*(struct(*(void),*(char),int,*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,*`,*`)),*(struct(char,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char)))->(int)
(	O
qdaemon	*(struct(*(void),*(char),int,*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(struct`),*(void),*(struct`))),*(struct),int,long,long,long,long,long,long,long,int,int,int,int,int,int,int,char))
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zJavoid	*(char)
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zJbuf	*(char)
)	O
;	O
return	O
fret	int
;	O
}	O
static	O
boolean	int
fjsend_data	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long,int)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zsend	*(char)
,	O
csend	long
,	O
fdoread	int
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
;	O
const	O
char	O
*	O
zsend	*(char)
;	O
size_t	long
csend	long
;	O
boolean	int
fdoread	int
;	O
{	O
char	O
*	O
zput	*(char)
,	O
*	O
zindex	*(char)
;	O
const	O
char	O
*	O
zfrom	*(char)
,	O
*	O
zend	*(char)
;	O
char	O
bfirst	char
,	O
bsecond	char
;	O
int	O
iprecendhold	int
;	O
boolean	int
fret	int
;	O
zput	*(char)
=	O
zJbuf	*(char)
+	O
CHDRLEN	O
;	O
zindex	*(char)
=	O
zput	*(char)
+	O
csend	long
;	O
zfrom	*(char)
=	O
zsend	*(char)
;	O
zend	*(char)
=	O
zsend	*(char)
+	O
csend	long
;	O
bfirst	char
=	O
zJavoid	*(char)
[	O
0	int
]	O
;	O
if	O
(	O
cJavoid	long
<=	O
1	int
)	O
bsecond	char
=	O
bfirst	char
;	O
else	O
bsecond	char
=	O
zJavoid	*(char)
[	O
1	int
]	O
;	O
while	O
(	O
zfrom	*(char)
<	O
zend	*(char)
)	O
{	O
char	O
b	int
;	O
boolean	int
f128	int
,	O
f32	int
;	O
int	O
i	long
,	O
ihigh	int
,	O
ilow	int
;	O
b	int
=	O
*	O
zfrom	*(char)
++	O
;	O
if	O
(	O
b	int
!=	O
bfirst	char
&&	O
b	int
!=	O
bsecond	char
)	O
{	O
int	O
ca	int
;	O
char	O
*	O
za	*(char)
;	O
if	O
(	O
cJavoid	long
<=	O
2	int
)	O
{	O
*	O
zput	*(char)
++	O
=	O
b	int
;	O
continue	O
;	O
}	O
ca	int
=	O
cJavoid	long
-	O
2	int
;	O
za	*(char)
=	O
zJavoid	*(char)
+	O
2	int
;	O
while	O
(	O
ca	int
--	O
!=	O
0	int
)	O
if	O
(	O
*	O
za	*(char)
++	O
==	O
b	int
)	O
break	O
;	O
if	O
(	O
ca	int
<	O
0	int
)	O
{	O
*	O
zput	*(char)
++	O
=	O
b	int
;	O
continue	O
;	O
}	O
}	O
if	O
(	O
(	O
b	int
&	O
0x80	int
)	O
==	O
0	int
)	O
f128	int
=	O
FALSE	O
;	O
else	O
{	O
b	int
&=	O
~	O
0x80	int
;	O
f128	int
=	O
TRUE	O
;	O
}	O
if	O
(	O
b	int
>=	O
32	int
&&	O
b	int
!=	O
127	int
)	O
f32	int
=	O
FALSE	O
;	O
else	O
{	O
b	int
^=	O
0x20	int
;	O
f32	int
=	O
TRUE	O
;	O
}	O
i	long
=	O
zput	*(char)
-	O
(	O
zJbuf	*(char)
+	O
CHDRLEN	O
)	O
;	O
ihigh	int
=	O
i	long
/	O
INDEX_MAX_LOW	O
;	O
ilow	int
=	O
i	long
%	O
INDEX_MAX_LOW	O
;	O
if	O
(	O
f128	int
&&	O
!	O
f32	int
)	O
;	O
else	O
if	O
(	O
f32	int
&&	O
!	O
f128	int
)	O
ilow	int
+=	O
INDEX_MAX_LOW	O
;	O
else	O
{	O
if	O
(	O
ilow	int
!=	O
INDEX_MAX_LOW	O
-	O
1	int
)	O
ilow	int
+=	O
2	int
*	O
INDEX_MAX_LOW	O
;	O
else	O
{	O
ilow	int
=	O
ihigh	int
;	O
ihigh	int
=	O
INDEX_MAX_HIGH	O
;	O
}	O
}	O
*	O
zindex	*(char)
++	O
=	O
ihigh	int
+	O
INDEX_OFFSET	O
;	O
*	O
zindex	*(char)
++	O
=	O
ilow	int
+	O
INDEX_OFFSET	O
;	O
*	O
zput	*(char)
++	O
=	O
b	int
;	O
}	O
*	O
zindex	*(char)
++	O
=	O
TRAILER	char
;	O
zJbuf	*(char)
[	O
1	int
]	O
=	O
ISETLENGTH_FIRST	O
(	O
zindex	*(char)
-	O
zJbuf	*(char)
)	O
;	O
zJbuf	*(char)
[	O
2	int
]	O
=	O
ISETLENGTH_SECOND	O
(	O
zindex	*(char)
-	O
zJbuf	*(char)
)	O
;	O
zJbuf	*(char)
[	O
4	int
]	O
=	O
ISETLENGTH_FIRST	O
(	O
csend	long
)	O
;	O
zJbuf	*(char)
[	O
5	int
]	O
=	O
ISETLENGTH_SECOND	O
(	O
csend	long
)	O
;	O
iprecendhold	int
=	O
iPrecend	int
;	O
iPrecend	int
=	O
iJrecend	int
;	O
fret	int
=	O
fsend_data	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long,int)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zJbuf	*(char)
,	O
(	O
size_t	long
)	O
(	O
zindex	*(char)
-	O
zJbuf	*(char)
)	O
,	O
fdoread	int
)	O
;	O
iJrecend	int
=	O
iPrecend	int
;	O
iPrecend	int
=	O
iprecendhold	int
;	O
if	O
(	O
fret	int
&&	O
iPrecend	int
!=	O
iJrecend	int
)	O
{	O
if	O
(	O
!	O
fjprocess_data	(*(long))->(int)
(	O
(	O
size_t	long
*	O
)	O
NULL	O
)	O
)	O
return	O
FALSE	O
;	O
}	O
return	O
fret	int
;	O
}	O
static	O
boolean	int
fjreceive_data	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),long,*(long),int,int)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
cineed	long
,	O
pcrec	*(long)
,	O
ctimeout	int
,	O
freport	int
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
;	O
size_t	long
cineed	long
;	O
size_t	long
*	O
pcrec	*(long)
;	O
int	O
ctimeout	int
;	O
boolean	int
freport	int
;	O
{	O
int	O
iprecendstart	int
;	O
size_t	long
cjneed	long
;	O
size_t	long
crec	long
;	O
int	O
cnew	int
;	O
iprecendstart	int
=	O
iPrecend	int
;	O
if	O
(	O
!	O
fjprocess_data	(*(long))->(int)
(	O
&	O
cjneed	long
)	O
)	O
return	O
FALSE	O
;	O
do	O
{	O
int	O
iprecendhold	int
;	O
size_t	long
cneed	long
;	O
if	O
(	O
cjneed	long
>	O
cineed	long
)	O
cneed	long
=	O
cjneed	long
;	O
else	O
cneed	long
=	O
cineed	long
;	O
iprecendhold	int
=	O
iPrecend	int
;	O
iPrecend	int
=	O
iJrecend	int
;	O
if	O
(	O
!	O
freceive_data	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),long,*(long),int,int)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
cneed	long
,	O
&	O
crec	long
,	O
ctimeout	int
,	O
freport	int
)	O
)	O
return	O
FALSE	O
;	O
iJrecend	int
=	O
iPrecend	int
;	O
iPrecend	int
=	O
iprecendhold	int
;	O
if	O
(	O
!	O
fjprocess_data	(*(long))->(int)
(	O
&	O
cjneed	long
)	O
)	O
return	O
FALSE	O
;	O
cnew	int
=	O
iPrecend	int
-	O
iprecendstart	int
;	O
if	O
(	O
cnew	int
<	O
0	int
)	O
cnew	int
+=	O
CRECBUFLEN	O
;	O
if	O
(	O
(	O
size_t	long
)	O
cnew	int
>	O
cineed	long
)	O
cineed	long
=	O
0	int
;	O
else	O
cineed	long
-=	O
cnew	int
;	O
--	O
ctimeout	int
;	O
}	O
while	O
(	O
cnew	int
==	O
0	int
&&	O
crec	long
>	O
0	int
&&	O
ctimeout	int
>	O
0	int
)	O
;	O
DEBUG_MESSAGE1	O
(	O
DEBUG_PROTO	O
,	O
"fjreceive_data: Got %d decoded bytes"	*(char)
,	O
cnew	int
)	O
;	O
*	O
pcrec	*(long)
=	O
cnew	int
;	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
fjprocess_data	(*(long))->(int)
(	O
pcneed	*(long)
)	O
size_t	long
*	O
pcneed	*(long)
;	O
{	O
int	O
istart	int
;	O
istart	int
=	O
iPrecend	int
;	O
while	O
(	O
istart	int
!=	O
iJrecend	int
)	O
{	O
int	O
i	long
,	O
iget	int
;	O
char	O
ab	array(char)
[	O
CHDRLEN	O
]	O
;	O
int	O
cpacket	int
,	O
cdata	long
,	O
chave	int
;	O
int	O
iindex	int
,	O
iendindex	int
;	O
if	O
(	O
abPrecbuf	array(char)
[	O
istart	int
]	O
!=	O
FIRST	char
)	O
{	O
int	O
cintro	int
;	O
char	O
*	O
zintro	*(char)
;	O
size_t	long
cskipped	long
;	O
cintro	int
=	O
iJrecend	int
-	O
istart	int
;	O
if	O
(	O
cintro	int
<	O
0	int
)	O
cintro	int
=	O
CRECBUFLEN	O
-	O
istart	int
;	O
zintro	*(char)
=	O
memchr	(*(void),int,long)->(*(void))
(	O
abPrecbuf	array(char)
+	O
istart	int
,	O
FIRST	char
,	O
(	O
size_t	long
)	O
cintro	int
)	O
;	O
if	O
(	O
zintro	*(char)
==	O
NULL	O
)	O
{	O
bzero	(*(void),long)->(void)
(	O
abPrecbuf	array(char)
+	O
istart	int
,	O
(	O
size_t	long
)	O
cintro	int
)	O
;	O
istart	int
=	O
(	O
istart	int
+	O
cintro	int
)	O
%	O
CRECBUFLEN	O
;	O
iPrecend	int
=	O
istart	int
;	O
continue	O
;	O
}	O
cskipped	long
=	O
zintro	*(char)
-	O
(	O
abPrecbuf	array(char)
+	O
istart	int
)	O
;	O
bzero	(*(void),long)->(void)
(	O
abPrecbuf	array(char)
+	O
istart	int
,	O
cskipped	long
)	O
;	O
istart	int
+=	O
cskipped	long
;	O
iPrecend	int
=	O
istart	int
;	O
}	O
for	O
(	O
i	long
=	O
0	int
,	O
iget	int
=	O
istart	int
;	O
i	long
<	O
CHDRLEN	O
&&	O
iget	int
!=	O
iJrecend	int
;	O
++	O
i	long
,	O
iget	int
=	O
(	O
iget	int
+	O
1	int
)	O
%	O
CRECBUFLEN	O
)	O
ab	array(char)
[	O
i	long
]	O
=	O
abPrecbuf	array(char)
[	O
iget	int
]	O
;	O
if	O
(	O
i	long
<	O
CHDRLEN	O
)	O
{	O
if	O
(	O
pcneed	*(long)
!=	O
NULL	O
)	O
*	O
pcneed	*(long)
=	O
CHDRLEN	O
-	O
i	long
;	O
return	O
TRUE	O
;	O
}	O
cpacket	int
=	O
CGETLENGTH	O
(	O
ab	array(char)
[	O
1	int
]	O
,	O
ab	array(char)
[	O
2	int
]	O
)	O
;	O
cdata	long
=	O
CGETLENGTH	O
(	O
ab	array(char)
[	O
4	int
]	O
,	O
ab	array(char)
[	O
5	int
]	O
)	O
;	O
if	O
(	O
ab	array(char)
[	O
3	int
]	O
!=	O
FOURTH	char
||	O
ab	array(char)
[	O
6	int
]	O
!=	O
SEVENTH	char
||	O
cdata	long
>	O
cpacket	int
-	O
CHDRLEN	O
-	O
1	int
||	O
(	O
cpacket	int
-	O
cdata	long
-	O
CHDRLEN	O
-	O
1	int
)	O
%	O
2	int
==	O
1	int
)	O
{	O
istart	int
=	O
(	O
istart	int
+	O
1	int
)	O
%	O
CRECBUFLEN	O
;	O
continue	O
;	O
}	O
chave	int
=	O
iJrecend	int
-	O
istart	int
;	O
if	O
(	O
chave	int
<	O
0	int
)	O
chave	int
+=	O
CRECBUFLEN	O
;	O
if	O
(	O
chave	int
<	O
cpacket	int
)	O
{	O
if	O
(	O
pcneed	*(long)
!=	O
NULL	O
)	O
*	O
pcneed	*(long)
=	O
cpacket	int
-	O
chave	int
;	O
return	O
TRUE	O
;	O
}	O
iindex	int
=	O
(	O
istart	int
+	O
CHDRLEN	O
+	O
cdata	long
)	O
%	O
CRECBUFLEN	O
;	O
iendindex	int
=	O
(	O
istart	int
+	O
cpacket	int
-	O
1	int
)	O
%	O
CRECBUFLEN	O
;	O
if	O
(	O
abPrecbuf	array(char)
[	O
iendindex	int
]	O
!=	O
TRAILER	char
)	O
{	O
istart	int
=	O
(	O
istart	int
+	O
1	int
)	O
%	O
CRECBUFLEN	O
;	O
continue	O
;	O
}	O
while	O
(	O
iindex	int
!=	O
iendindex	int
)	O
{	O
int	O
ihigh	int
,	O
ilow	int
;	O
boolean	int
f32	int
,	O
f128	int
;	O
int	O
iset	int
;	O
ihigh	int
=	O
abPrecbuf	array(char)
[	O
iindex	int
]	O
-	O
INDEX_OFFSET	O
;	O
abPrecbuf	array(char)
[	O
iindex	int
]	O
=	O
0	int
;	O
iindex	int
=	O
(	O
iindex	int
+	O
1	int
)	O
%	O
CRECBUFLEN	O
;	O
ilow	int
=	O
abPrecbuf	array(char)
[	O
iindex	int
]	O
-	O
INDEX_OFFSET	O
;	O
abPrecbuf	array(char)
[	O
iindex	int
]	O
=	O
0	int
;	O
iindex	int
=	O
(	O
iindex	int
+	O
1	int
)	O
%	O
CRECBUFLEN	O
;	O
f128	int
=	O
TRUE	O
;	O
f32	int
=	O
TRUE	O
;	O
if	O
(	O
ihigh	int
==	O
INDEX_MAX_HIGH	O
)	O
iset	int
=	O
ilow	int
*	O
INDEX_MAX_LOW	O
+	O
INDEX_MAX_LOW	O
-	O
1	int
;	O
else	O
{	O
iset	int
=	O
ihigh	int
*	O
INDEX_MAX_LOW	O
+	O
ilow	int
%	O
INDEX_MAX_LOW	O
;	O
if	O
(	O
ilow	int
<	O
INDEX_MAX_LOW	O
)	O
f32	int
=	O
FALSE	O
;	O
else	O
if	O
(	O
ilow	int
<	O
2	int
*	O
INDEX_MAX_LOW	O
)	O
f128	int
=	O
FALSE	O
;	O
}	O
iset	int
=	O
(	O
istart	int
+	O
CHDRLEN	O
+	O
iset	int
)	O
%	O
CRECBUFLEN	O
;	O
if	O
(	O
f128	int
)	O
abPrecbuf	array(char)
[	O
iset	int
]	O
|=	O
0x80	int
;	O
if	O
(	O
f32	int
)	O
abPrecbuf	array(char)
[	O
iset	int
]	O
^=	O
0x20	int
;	O
}	O
for	O
(	O
i	long
=	O
0	int
,	O
iget	int
=	O
istart	int
;	O
i	long
<	O
CHDRLEN	O
&&	O
iget	int
!=	O
iJrecend	int
;	O
++	O
i	long
,	O
iget	int
=	O
(	O
iget	int
+	O
1	int
)	O
%	O
CRECBUFLEN	O
)	O
abPrecbuf	array(char)
[	O
iget	int
]	O
=	O
0	int
;	O
abPrecbuf	array(char)
[	O
iendindex	int
]	O
=	O
0	int
;	O
iPrecend	int
=	O
(	O
iendindex	int
+	O
1	int
)	O
%	O
CRECBUFLEN	O
;	O
istart	int
=	O
iPrecend	int
;	O
}	O
if	O
(	O
pcneed	*(long)
!=	O
NULL	O
)	O
*	O
pcneed	*(long)
=	O
CHDRLEN	O
+	O
1	int
;	O
return	O
TRUE	O
;	O
}	O
