void	O
*	O
wget_memdup	(*(void),long)->(*(void))
(	O
const	O
void	O
*	O
m	*(void)
,	O
size_t	long
n	long
)	O
{	O
if	O
(	O
!	O
m	*(void)
)	O
return	O
NULL	O
;	O
void	O
*	O
d	*(void)
=	O
wget_malloc	(long)->(*(void))
(	O
n	long
)	O
;	O
if	O
(	O
!	O
d	*(void)
)	O
return	O
NULL	O
;	O
return	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
d	*(void)
,	O
m	*(void)
,	O
n	long
)	O
;	O
}	O
char	O
*	O
wget_strdup	(*(char))->(*(char))
(	O
const	O
char	O
*	O
s	*(char)
)	O
{	O
return	O
s	*(char)
?	O
wget_memdup	(*(void),long)->(*(void))
(	O
s	*(char)
,	O
strlen	(*(char))->(long)
(	O
s	*(char)
)	O
+	O
1	int
)	O
:	O
NULL	O
;	O
}	O
char	O
*	O
wget_strmemdup	(*(void),long)->(*(char))
(	O
const	O
void	O
*	O
m	*(void)
,	O
size_t	long
n	long
)	O
{	O
if	O
(	O
!	O
m	*(void)
)	O
return	O
NULL	O
;	O
void	O
*	O
d	*(void)
=	O
wget_malloc	(long)->(*(void))
(	O
n	long
+	O
1	int
)	O
;	O
if	O
(	O
!	O
d	*(void)
)	O
return	O
NULL	O
;	O
char	O
*	O
ret	*(char)
=	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
d	*(void)
,	O
m	*(void)
,	O
n	long
)	O
;	O
ret	*(char)
[	O
n	long
]	O
=	O
0	int
;	O
return	O
ret	*(char)
;	O
}	O
void	O
wget_strmemcpy	(*(char),long,*(void),long)->(void)
(	O
char	O
*	O
s	*(char)
,	O
size_t	long
ssize	long
,	O
const	O
void	O
*	O
m	*(void)
,	O
size_t	long
n	long
)	O
{	O
if	O
(	O
!	O
s	*(char)
||	O
!	O
ssize	long
)	O
return	O
;	O
if	O
(	O
likely	O
(	O
n	long
>	O
0	int
)	O
)	O
{	O
if	O
(	O
n	long
>=	O
ssize	long
)	O
n	long
=	O
ssize	long
-	O
1	int
;	O
if	O
(	O
m	*(void)
)	O
memmove	(*(void),*(void),long)->(*(void))
(	O
s	*(char)
,	O
m	*(void)
,	O
n	long
)	O
;	O
else	O
n	long
=	O
0	int
;	O
}	O
s	*(char)
[	O
n	long
]	O
=	O
0	int
;	O
}	O
