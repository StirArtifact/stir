char	O
stat_docstring	array(char)
[	O
]	O
=	O
N_	O
(	O
"display mailbox status"	*(char)
)	O
;	O
char	O
stat_args_doc	array(char)
[	O
]	O
=	O
N_	O
(	O
"[MAILBOX]"	*(char)
)	O
;	O
char	O
*	O
format_string	*(char)
=	O
"%:t\n%:p\n%:U\n%:s\n%:c\n%:r\n%:u\n%:v\n%:n\n%:A\n"	*(char)
;	O
static	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
stat_options	array(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct(int,*`,long,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,int,*`,int,int,int,long,*`)),*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`)),*(char))->(void)),*(char)))
[	O
]	O
=	O
{	O
{	O
"format"	*(char)
,	O
'c'	O
,	O
N_	O
(	O
"STRING"	*(char)
)	O
,	O
MU_OPTION_DEFAULT	int
,	O
N_	O
(	O
"defines output format"	*(char)
)	O
,	O
mu_c_string	int
,	O
&	O
format_string	*(char)
}	O
,	O
MU_OPTION_END	O
}	O
;	O
PR_C	O
(	O
c_string	*(char)
,	O
"%s"	*(char)
)	O
PR_C	O
(	O
c_short	short
,	O
"%hd"	*(char)
)	O
PR_C	O
(	O
c_ushort	short
,	O
"%hu"	*(char)
)	O
PR_C	O
(	O
c_int	int
,	O
"%d"	*(char)
)	O
PR_C	O
(	O
c_uint	int
,	O
"%u"	*(char)
)	O
PR_C	O
(	O
c_long	long
,	O
"%ld"	*(char)
)	O
PR_C	O
(	O
c_ulong	long
,	O
"%lu"	*(char)
)	O
PR_C	O
(	O
c_size	long
,	O
"%zu"	*(char)
)	O
PR_C	O
(	O
c_off	long
,	O
"%"	*(char)
MU_PRI_OFF_T	*(char)
)	O
static	O
void	O
pr_c_time	(*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(void)
(	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
stor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
)	O
{	O
mu_printf	(*(char))->(int)
(	O
"%lu"	*(char)
,	O
(	O
unsigned	O
long	O
)	O
stor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
->	O
c_time	long
)	O
;	O
}	O
static	O
void	O
pr_c_time_h	(*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(void)
(	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
stor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
)	O
{	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
*	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
=	O
localtime	(*(long))->(*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))
(	O
&	O
stor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
->	O
c_time	long
)	O
;	O
mu_c_streamftime	(*(struct),*(char),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))))->(int)
(	O
mu_strout	*(struct)
,	O
"%Y-%m-%d %H:%M:%S %Z"	*(char)
,	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
NULL	O
)	O
;	O
}	O
static	O
void	O
(	O
*	O
c_fmt	array(*((*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(void)))
[	O
]	O
)	O
(	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
stor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
)	O
=	O
{	O
D	O
(	O
c_string	*(char)
)	O
,	O
D	O
(	O
c_short	short
)	O
,	O
D	O
(	O
c_ushort	short
)	O
,	O
D	O
(	O
c_int	int
)	O
,	O
D	O
(	O
c_uint	int
)	O
,	O
D	O
(	O
c_long	long
)	O
,	O
D	O
(	O
c_ulong	long
)	O
,	O
D	O
(	O
c_size	long
)	O
,	O
D	O
(	O
c_off	long
)	O
,	O
D	O
(	O
c_time	long
)	O
}	O
;	O
static	O
void	O
mu_c_output	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(void)
(	O
mu_c_type_t	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
type	int
,	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
)	O
{	O
if	O
(	O
c_fmt	array(*((*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(void)))
[	O
type	int
]	O
)	O
c_fmt	array(*((*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(void)))
[	O
type	int
]	O
(	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
)	O
;	O
else	O
abort	()->(void)
(	O
)	O
;	O
}	O
struct	O
mbox_property	struct(char,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)),*((*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(void)))
{	O
char	O
fmt	*(char)
;	O
char	O
*	O
title	*(char)
;	O
mu_c_type_t	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
type	int
;	O
int	O
(	O
*	O
fun	*((*(char),*(void))->(int))
)	O
(	O
mu_mailbox_t	*(struct)
,	O
char	O
const	O
*	O
,	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
)	O
;	O
void	O
(	O
*	O
prt	*((*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(void))
)	O
(	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
stor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
)	O
;	O
}	O
;	O
static	O
int	O
get_type	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
(	O
mu_mailbox_t	*(struct)
,	O
char	O
const	O
*	O
,	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
)	O
;	O
static	O
int	O
get_path	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
(	O
mu_mailbox_t	*(struct)
,	O
char	O
const	O
*	O
,	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
)	O
;	O
static	O
int	O
get_url	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
(	O
mu_mailbox_t	*(struct)
,	O
char	O
const	O
*	O
,	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
)	O
;	O
static	O
int	O
get_size	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
(	O
mu_mailbox_t	*(struct)
,	O
char	O
const	O
*	O
,	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
)	O
;	O
static	O
int	O
get_count	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
(	O
mu_mailbox_t	*(struct)
,	O
char	O
const	O
*	O
,	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
)	O
;	O
static	O
int	O
get_recent	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
(	O
mu_mailbox_t	*(struct)
,	O
char	O
const	O
*	O
,	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
)	O
;	O
static	O
int	O
get_unseen	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
(	O
mu_mailbox_t	*(struct)
,	O
char	O
const	O
*	O
,	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
)	O
;	O
static	O
int	O
get_uidvalidity	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
(	O
mu_mailbox_t	*(struct)
,	O
char	O
const	O
*	O
,	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
)	O
;	O
static	O
int	O
get_uidnext	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
(	O
mu_mailbox_t	*(struct)
,	O
char	O
const	O
*	O
,	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
)	O
;	O
static	O
int	O
get_atime	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
(	O
mu_mailbox_t	*(struct)
,	O
char	O
const	O
*	O
,	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
)	O
;	O
static	O
int	O
get_name	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
(	O
mu_mailbox_t	*(struct)
,	O
char	O
const	O
*	O
,	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
)	O
;	O
static	O
struct	O
mbox_property	struct(char,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)),*((*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(void)))
proptab	array(struct(char,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct),*(char),*(union(*`,short,short,int,int,long,long,long,long,long,int,struct`)))->(int)),*((*(union(*`,short,short,int,int,long,long,long,long,long,int,struct`)))->(void))))
[	O
]	O
=	O
{	O
{	O
't'	O
,	O
N_	O
(	O
"type"	*(char)
)	O
,	O
mu_c_string	int
,	O
get_type	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
}	O
,	O
{	O
'p'	O
,	O
N_	O
(	O
"path"	*(char)
)	O
,	O
mu_c_string	int
,	O
get_path	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
}	O
,	O
{	O
'U'	O
,	O
N_	O
(	O
"URL"	*(char)
)	O
,	O
mu_c_string	int
,	O
get_url	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
}	O
,	O
{	O
's'	O
,	O
N_	O
(	O
"size"	*(char)
)	O
,	O
mu_c_off	int
,	O
get_size	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
}	O
,	O
{	O
'c'	O
,	O
N_	O
(	O
"messages"	*(char)
)	O
,	O
mu_c_size	int
,	O
get_count	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
}	O
,	O
{	O
'r'	O
,	O
N_	O
(	O
"recent messages"	*(char)
)	O
,	O
mu_c_size	int
,	O
get_recent	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
}	O
,	O
{	O
'u'	O
,	O
N_	O
(	O
"first unseen"	*(char)
)	O
,	O
mu_c_size	int
,	O
get_unseen	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
}	O
,	O
{	O
'v'	O
,	O
N_	O
(	O
"uidvalidity"	*(char)
)	O
,	O
mu_c_ulong	int
,	O
get_uidvalidity	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
}	O
,	O
{	O
'n'	O
,	O
N_	O
(	O
"next uid"	*(char)
)	O
,	O
mu_c_size	int
,	O
get_uidnext	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
}	O
,	O
{	O
'a'	O
,	O
N_	O
(	O
"access"	*(char)
)	O
,	O
mu_c_time	int
,	O
get_atime	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
}	O
,	O
{	O
'A'	O
,	O
N_	O
(	O
"access"	*(char)
)	O
,	O
mu_c_time	int
,	O
get_atime	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
,	O
pr_c_time_h	(*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(void)
}	O
,	O
{	O
'f'	O
,	O
N_	O
(	O
"name"	*(char)
)	O
,	O
mu_c_string	int
,	O
get_name	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
}	O
,	O
{	O
0	int
}	O
}	O
;	O
static	O
struct	O
mbox_property	struct(char,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)),*((*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(void)))
*	O
propfmt	(int)->(*(struct(char,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`)->(int)),*((*`)->(void)))))
(	O
int	O
fmt	*(char)
)	O
{	O
struct	O
mbox_property	struct(char,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)),*((*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(void)))
*	O
p	*(char)
;	O
for	O
(	O
p	*(char)
=	O
proptab	array(struct(char,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct),*(char),*(union(*`,short,short,int,int,long,long,long,long,long,int,struct`)))->(int)),*((*(union(*`,short,short,int,int,long,long,long,long,long,int,struct`)))->(void))))
;	O
p	*(char)
->	O
fmt	*(char)
;	O
p	*(char)
++	O
)	O
if	O
(	O
p	*(char)
->	O
fmt	*(char)
==	O
fmt	*(char)
)	O
return	O
p	*(char)
;	O
return	O
NULL	O
;	O
}	O
static	O
char	O
const	O
*	O
fmtspec	(*(char),*(struct),*(char))->(*(char))
(	O
char	O
const	O
*	O
fmt	*(char)
,	O
mu_mailbox_t	*(struct)
mbx	*(struct)
,	O
const	O
char	O
*	O
name	*(char)
)	O
{	O
int	O
c	char
;	O
int	O
title	*(char)
=	O
0	int
;	O
struct	O
mbox_property	struct(char,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)),*((*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(void)))
*	O
prop	*(struct)
;	O
if	O
(	O
!	O
*	O
++	O
fmt	*(char)
)	O
{	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
mu_strout	*(struct)
,	O
fmt	*(char)
-	O
1	int
,	O
1	int
,	O
NULL	O
)	O
;	O
return	O
fmt	*(char)
;	O
}	O
c	char
=	O
*	O
fmt	*(char)
++	O
;	O
if	O
(	O
c	char
==	O
'%'	O
)	O
{	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
mu_strout	*(struct)
,	O
fmt	*(char)
-	O
1	int
,	O
1	int
,	O
NULL	O
)	O
;	O
return	O
fmt	*(char)
;	O
}	O
if	O
(	O
c	char
==	O
':'	O
)	O
{	O
if	O
(	O
*	O
fmt	*(char)
==	O
0	int
)	O
{	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
mu_strout	*(struct)
,	O
fmt	*(char)
-	O
2	int
,	O
2	int
,	O
NULL	O
)	O
;	O
return	O
fmt	*(char)
;	O
}	O
c	char
=	O
*	O
fmt	*(char)
++	O
;	O
title	*(char)
=	O
1	int
;	O
}	O
prop	*(struct)
=	O
propfmt	(int)->(*(struct(char,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`)->(int)),*((*`)->(void)))))
(	O
c	char
)	O
;	O
if	O
(	O
prop	*(struct)
)	O
{	O
int	O
rc	int
;	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
;	O
if	O
(	O
title	*(char)
)	O
mu_printf	(*(char))->(int)
(	O
"%s: "	*(char)
,	O
gettext	(*(char))->(*(char))
(	O
prop	*(struct)
->	O
title	*(char)
)	O
)	O
;	O
rc	int
=	O
prop	*(struct)
->	O
fun	*((*(char),*(void))->(int))
(	O
mbx	*(struct)
,	O
name	*(char)
,	O
&	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
)	O
;	O
switch	O
(	O
rc	int
)	O
{	O
case	O
0	int
:	O
if	O
(	O
prop	*(struct)
->	O
prt	*((*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(void))
)	O
prop	*(struct)
->	O
prt	*((*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(void))
(	O
&	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
)	O
;	O
else	O
mu_c_output	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(void)
(	O
prop	*(struct)
->	O
type	int
,	O
&	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
)	O
;	O
if	O
(	O
prop	*(struct)
->	O
type	int
==	O
mu_c_string	int
)	O
free	(*(void))->(void)
(	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
.	O
c_string	*(char)
)	O
;	O
break	O
;	O
case	O
MU_ERR_EMPTY_VFN	O
:	O
case	O
ENOSYS	int
:	O
mu_printf	(*(char))->(int)
(	O
_	O
(	O
"N/A"	*(char)
)	O
)	O
;	O
break	O
;	O
default	O
:	O
mu_printf	(*(char))->(int)
(	O
"[%s]"	*(char)
,	O
mu_strerror	(int)->(*(char))
(	O
rc	int
)	O
)	O
;	O
}	O
}	O
else	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
mu_strout	*(struct)
,	O
"?"	*(char)
,	O
1	int
,	O
NULL	O
)	O
;	O
return	O
fmt	*(char)
;	O
}	O
void	O
format_stat	(*(char),*(struct),*(char))->(void)
(	O
char	O
const	O
*	O
fmt	*(char)
,	O
mu_mailbox_t	*(struct)
mbx	*(struct)
,	O
const	O
char	O
*	O
name	*(char)
)	O
{	O
int	O
c	char
;	O
while	O
(	O
*	O
fmt	*(char)
)	O
{	O
switch	O
(	O
*	O
fmt	*(char)
)	O
{	O
case	O
'%'	O
:	O
fmt	*(char)
=	O
fmtspec	(*(char),*(struct),*(char))->(*(char))
(	O
fmt	*(char)
,	O
mbx	*(struct)
,	O
name	*(char)
)	O
;	O
break	O
;	O
case	O
'\\'	O
:	O
if	O
(	O
fmt	*(char)
[	O
1	int
]	O
&&	O
(	O
c	char
=	O
mu_wordsplit_c_unquote_char	(int)->(int)
(	O
fmt	*(char)
[	O
1	int
]	O
)	O
)	O
)	O
{	O
mu_printf	(*(char))->(int)
(	O
"%c"	*(char)
,	O
c	char
)	O
;	O
fmt	*(char)
+=	O
2	int
;	O
break	O
;	O
}	O
default	O
:	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
mu_strout	*(struct)
,	O
fmt	*(char)
,	O
1	int
,	O
NULL	O
)	O
;	O
if	O
(	O
*	O
fmt	*(char)
==	O
'\n'	O
&&	O
fmt	*(char)
[	O
1	int
]	O
==	O
0	int
)	O
return	O
;	O
fmt	*(char)
++	O
;	O
}	O
}	O
mu_printf	(*(char))->(int)
(	O
"\n"	*(char)
)	O
;	O
}	O
int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
int	O
rc	int
;	O
mu_mailbox_t	*(struct)
mbox	*(struct)
;	O
const	O
char	O
*	O
name	*(char)
;	O
mu_register_all_mbox_formats	O
(	O
)	O
;	O
mu_action_getopt	(*(int),*(*(*(char))),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char),*(char))->(void)
(	O
&	O
argc	long
,	O
&	O
argv	*(*(char))
,	O
stat_options	array(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct(int,*`,long,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,int,*`,int,int,int,long,*`)),*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`)),*(char))->(void)),*(char)))
,	O
stat_docstring	array(char)
,	O
stat_args_doc	array(char)
)	O
;	O
if	O
(	O
argc	long
>	O
1	int
)	O
{	O
mu_error	(*(char))->(int)
(	O
_	O
(	O
"too many arguments"	*(char)
)	O
)	O
;	O
return	O
EX_USAGE	int
;	O
}	O
name	*(char)
=	O
argv	*(*(char))
[	O
0	int
]	O
;	O
rc	int
=	O
mu_mailbox_create_default	(*(*(struct)),*(char))->(int)
(	O
&	O
mbox	*(struct)
,	O
name	*(char)
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_diag_funcall	(int,*(char),*(char),int)->(void)
(	O
MU_DIAG_ERROR	O
,	O
"mu_mailbox_create_default"	*(char)
,	O
name	*(char)
,	O
rc	int
)	O
;	O
return	O
EX_UNAVAILABLE	int
;	O
}	O
rc	int
=	O
mu_mailbox_open	(*(struct),int)->(int)
(	O
mbox	*(struct)
,	O
MU_STREAM_READ	int
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_diag_funcall	(int,*(char),*(char),int)->(void)
(	O
MU_DIAG_ERROR	O
,	O
"mu_mailbox_open"	*(char)
,	O
name	*(char)
,	O
rc	int
)	O
;	O
return	O
EX_UNAVAILABLE	int
;	O
}	O
if	O
(	O
!	O
name	*(char)
)	O
{	O
mu_url_t	*(struct)
url	*(struct)
;	O
mu_mailbox_get_url	(*(struct),*(*(struct)))->(int)
(	O
mbox	*(struct)
,	O
&	O
url	*(struct)
)	O
;	O
name	*(char)
=	O
mu_url_to_string	(*(struct))->(*(char))
(	O
url	*(struct)
)	O
;	O
}	O
format_stat	(*(char),*(struct),*(char))->(void)
(	O
format_string	*(char)
,	O
mbox	*(struct)
,	O
name	*(char)
)	O
;	O
mu_mailbox_close	(*(struct))->(int)
(	O
mbox	*(struct)
)	O
;	O
mu_mailbox_destroy	(*(*(struct)))->(void)
(	O
&	O
mbox	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
get_type	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
char	O
const	O
*	O
mbname	*(char)
,	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
)	O
{	O
mu_url_t	*(struct)
url	*(struct)
;	O
int	O
rc	int
;	O
rc	int
=	O
mu_mailbox_get_url	(*(struct),*(*(struct)))->(int)
(	O
mbox	*(struct)
,	O
&	O
url	*(struct)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
rc	int
=	O
mu_url_aget_scheme	(*(struct),*(*(char)))->(int)
(	O
url	*(struct)
,	O
&	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
->	O
c_string	*(char)
)	O
;	O
return	O
rc	int
;	O
}	O
static	O
int	O
get_path	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
char	O
const	O
*	O
mbname	*(char)
,	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
)	O
{	O
int	O
rc	int
;	O
mu_url_t	*(struct)
url	*(struct)
;	O
rc	int
=	O
mu_mailbox_get_url	(*(struct),*(*(struct)))->(int)
(	O
mbox	*(struct)
,	O
&	O
url	*(struct)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
rc	int
=	O
mu_url_aget_path	(*(struct),*(*(char)))->(int)
(	O
url	*(struct)
,	O
&	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
->	O
c_string	*(char)
)	O
;	O
return	O
rc	int
;	O
}	O
static	O
int	O
get_url	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
char	O
const	O
*	O
mbname	*(char)
,	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
)	O
{	O
mu_url_t	*(struct)
url	*(struct)
;	O
int	O
rc	int
;	O
rc	int
=	O
mu_mailbox_get_url	(*(struct),*(*(struct)))->(int)
(	O
mbox	*(struct)
,	O
&	O
url	*(struct)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
->	O
c_string	*(char)
=	O
mu_strdup	(*(char))->(*(char))
(	O
mu_url_to_string	(*(struct))->(*(char))
(	O
url	*(struct)
)	O
)	O
;	O
return	O
rc	int
;	O
}	O
static	O
int	O
get_size	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
char	O
const	O
*	O
mbname	*(char)
,	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
)	O
{	O
return	O
mu_mailbox_get_size	(*(struct),*(long))->(int)
(	O
mbox	*(struct)
,	O
&	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
->	O
c_off	long
)	O
;	O
}	O
static	O
int	O
get_count	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
char	O
const	O
*	O
mbname	*(char)
,	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
)	O
{	O
return	O
mu_mailbox_messages_count	(*(struct),*(long))->(int)
(	O
mbox	*(struct)
,	O
&	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
->	O
c_size	long
)	O
;	O
}	O
static	O
int	O
get_recent	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
char	O
const	O
*	O
mbname	*(char)
,	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
)	O
{	O
return	O
mu_mailbox_messages_recent	(*(struct),*(long))->(int)
(	O
mbox	*(struct)
,	O
&	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
->	O
c_size	long
)	O
;	O
}	O
static	O
int	O
get_unseen	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
char	O
const	O
*	O
mbname	*(char)
,	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
)	O
{	O
return	O
mu_mailbox_message_unseen	(*(struct),*(long))->(int)
(	O
mbox	*(struct)
,	O
&	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
->	O
c_size	long
)	O
;	O
}	O
static	O
int	O
get_uidvalidity	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
char	O
const	O
*	O
mbname	*(char)
,	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
)	O
{	O
return	O
mu_mailbox_uidvalidity	(*(struct),*(long))->(int)
(	O
mbox	*(struct)
,	O
&	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
->	O
c_ulong	long
)	O
;	O
}	O
static	O
int	O
get_uidnext	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
char	O
const	O
*	O
mbname	*(char)
,	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
)	O
{	O
return	O
mu_mailbox_uidnext	(*(struct),*(long))->(int)
(	O
mbox	*(struct)
,	O
&	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
->	O
c_size	long
)	O
;	O
}	O
static	O
int	O
get_atime	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
char	O
const	O
*	O
mbname	*(char)
,	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
)	O
{	O
return	O
mu_mailbox_access_time	(*(struct),*(long))->(int)
(	O
mbox	*(struct)
,	O
&	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
->	O
c_time	long
)	O
;	O
}	O
static	O
int	O
get_name	(*(struct),*(char),*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
char	O
const	O
*	O
mbname	*(char)
,	O
mu_c_storage_t	union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char)))
*	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
)	O
{	O
cstor	*(union(*(char),short,short,int,int,long,long,long,long,long,int,struct(int,int,array(char),array(char))))
->	O
c_string	*(char)
=	O
mu_strdup	(*(char))->(*(char))
(	O
mbname	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
