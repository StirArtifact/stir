struct	O
timespec	struct(long,long)
cgt_start	struct(long,long)
;	O
static	O
void	O
NORETURN	O
PRINTF_STYLE	O
(	O
1	int
,	O
2	int
)	O
die	(*(char))->(void)
(	O
const	O
char	O
*	O
format	*(char)
,	O
...	O
)	O
{	O
va_list	array(struct(int,int,*(void),*(void)))
args	array(struct(int,int,*(void),*(void)))
;	O
va_start	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
format	*(char)
)	O
;	O
vfprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),array(struct(int,int,*(void),*(void))))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
format	*(char)
,	O
args	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
args	array(struct(int,int,*(void),*(void)))
)	O
;	O
exit	(int)->(void)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
static	O
int	O
cgt_works_p	()->(int)
(	O
void	O
)	O
{	O
struct	O
timespec	struct(long,long)
now	struct(long,long)
;	O
return	O
clock_gettime	(int,*(struct(long,long)))->(int)
(	O
CLOCK_PROCESS_CPUTIME_ID	int
,	O
&	O
now	struct(long,long)
)	O
==	O
0	int
;	O
}	O
static	O
void	O
cgt_time_start	()->(void)
(	O
void	O
)	O
{	O
if	O
(	O
clock_gettime	(int,*(struct(long,long)))->(int)
(	O
CLOCK_PROCESS_CPUTIME_ID	int
,	O
&	O
cgt_start	struct(long,long)
)	O
<	O
0	int
)	O
die	(*(char))->(void)
(	O
"clock_gettime failed: %s\n"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
}	O
static	O
double	O
cgt_time_end	()->(double)
(	O
void	O
)	O
{	O
struct	O
timespec	struct(long,long)
end	struct(long,long)
;	O
if	O
(	O
clock_gettime	(int,*(struct(long,long)))->(int)
(	O
CLOCK_PROCESS_CPUTIME_ID	int
,	O
&	O
end	struct(long,long)
)	O
<	O
0	int
)	O
die	(*(char))->(void)
(	O
"clock_gettime failed: %s\n"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
end	struct(long,long)
.	O
tv_sec	long
-	O
cgt_start	struct(long,long)
.	O
tv_sec	long
+	O
1e-9	int
*	O
(	O
end	struct(long,long)
.	O
tv_nsec	long
-	O
cgt_start	struct(long,long)
.	O
tv_nsec	long
)	O
;	O
}	O
static	O
clock_t	long
clock_start	long
;	O
static	O
void	O
clock_time_start	()->(void)
(	O
void	O
)	O
{	O
clock_start	long
=	O
clock	()->(long)
(	O
)	O
;	O
}	O
static	O
double	O
clock_time_end	()->(double)
(	O
void	O
)	O
{	O
return	O
(	O
double	O
)	O
(	O
clock	()->(long)
(	O
)	O
-	O
(	O
clock_start	long
)	O
)	O
/	O
CLOCKS_PER_SEC	O
;	O
}	O
void	O
(	O
*	O
time_start	*(()->(void))
)	O
(	O
void	O
)	O
=	O
clock_time_start	()->(void)
;	O
double	O
(	O
*	O
time_end	*(()->(double))
)	O
(	O
void	O
)	O
=	O
clock_time_end	()->(double)
;	O
void	O
time_init	()->(void)
(	O
void	O
)	O
{	O
if	O
(	O
cgt_works_p	()->(int)
(	O
)	O
)	O
{	O
time_start	*(()->(void))
=	O
cgt_time_start	()->(void)
;	O
time_end	*(()->(double))
=	O
cgt_time_end	()->(double)
;	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"clock_gettime not working, falling back to clock\n"	*(char)
)	O
;	O
time_start	*(()->(void))
=	O
clock_time_start	()->(void)
;	O
time_end	*(()->(double))
=	O
clock_time_end	()->(double)
;	O
}	O
}	O
