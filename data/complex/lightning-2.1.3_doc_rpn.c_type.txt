typedef	O
int	O
(	O
*	O
pifi	*((int)->(int))
)	O
(	O
int	O
)	O
;	O
static	O
jit_state_t	struct
*	O
_jit	*(struct)
;	O
void	O
stack_push	(int,*(int))->(void)
(	O
int	O
reg	int
,	O
int	O
*	O
sp	*(int)
)	O
{	O
jit_stxi_i	O
(	O
*	O
sp	*(int)
,	O
JIT_FP	O
,	O
reg	int
)	O
;	O
*	O
sp	*(int)
+=	O
sizeof	O
(	O
int	O
)	O
;	O
}	O
void	O
stack_pop	(int,*(int))->(void)
(	O
int	O
reg	int
,	O
int	O
*	O
sp	*(int)
)	O
{	O
*	O
sp	*(int)
-=	O
sizeof	O
(	O
int	O
)	O
;	O
jit_ldxi_i	O
(	O
reg	int
,	O
JIT_FP	O
,	O
*	O
sp	*(int)
)	O
;	O
}	O
jit_node_t	struct
*	O
compile_rpn	(*(char))->(*(struct))
(	O
char	O
*	O
expr	*(char)
)	O
{	O
jit_node_t	struct
*	O
in	*(struct)
,	O
*	O
fn	*(struct)
;	O
int	O
stack_base	int
,	O
stack_ptr	int
;	O
fn	*(struct)
=	O
jit_note	O
(	O
NULL	O
,	O
0	int
)	O
;	O
jit_prolog	O
(	O
)	O
;	O
in	*(struct)
=	O
jit_arg	O
(	O
)	O
;	O
stack_ptr	int
=	O
stack_base	int
=	O
jit_allocai	O
(	O
32	int
*	O
sizeof	O
(	O
int	O
)	O
)	O
;	O
jit_getarg_i	O
(	O
JIT_R2	O
,	O
in	*(struct)
)	O
;	O
while	O
(	O
*	O
expr	*(char)
)	O
{	O
char	O
buf	array(char)
[	O
32	int
]	O
;	O
int	O
n	int
;	O
if	O
(	O
sscanf	(*(char),*(char))->(int)
(	O
expr	*(char)
,	O
"%[0-9]%n"	*(char)
,	O
buf	array(char)
,	O
&	O
n	int
)	O
)	O
{	O
expr	*(char)
+=	O
n	int
-	O
1	int
;	O
stack_push	(int,*(int))->(void)
(	O
JIT_R0	O
,	O
&	O
stack_ptr	int
)	O
;	O
jit_movi	O
(	O
JIT_R0	O
,	O
atoi	(*(char))->(int)
(	O
buf	array(char)
)	O
)	O
;	O
}	O
else	O
if	O
(	O
*	O
expr	*(char)
==	O
'x'	O
)	O
{	O
stack_push	(int,*(int))->(void)
(	O
JIT_R0	O
,	O
&	O
stack_ptr	int
)	O
;	O
jit_movr	O
(	O
JIT_R0	O
,	O
JIT_R2	O
)	O
;	O
}	O
else	O
if	O
(	O
*	O
expr	*(char)
==	O
'+'	O
)	O
{	O
stack_pop	(int,*(int))->(void)
(	O
JIT_R1	O
,	O
&	O
stack_ptr	int
)	O
;	O
jit_addr	O
(	O
JIT_R0	O
,	O
JIT_R1	O
,	O
JIT_R0	O
)	O
;	O
}	O
else	O
if	O
(	O
*	O
expr	*(char)
==	O
'-'	O
)	O
{	O
stack_pop	(int,*(int))->(void)
(	O
JIT_R1	O
,	O
&	O
stack_ptr	int
)	O
;	O
jit_subr	O
(	O
JIT_R0	O
,	O
JIT_R1	O
,	O
JIT_R0	O
)	O
;	O
}	O
else	O
if	O
(	O
*	O
expr	*(char)
==	O
'*'	O
)	O
{	O
stack_pop	(int,*(int))->(void)
(	O
JIT_R1	O
,	O
&	O
stack_ptr	int
)	O
;	O
jit_mulr	O
(	O
JIT_R0	O
,	O
JIT_R1	O
,	O
JIT_R0	O
)	O
;	O
}	O
else	O
if	O
(	O
*	O
expr	*(char)
==	O
'/'	O
)	O
{	O
stack_pop	(int,*(int))->(void)
(	O
JIT_R1	O
,	O
&	O
stack_ptr	int
)	O
;	O
jit_divr	O
(	O
JIT_R0	O
,	O
JIT_R1	O
,	O
JIT_R0	O
)	O
;	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"cannot compile: %s\n"	*(char)
,	O
expr	*(char)
)	O
;	O
abort	()->(void)
(	O
)	O
;	O
}	O
++	O
expr	*(char)
;	O
}	O
jit_retr	O
(	O
JIT_R0	O
)	O
;	O
jit_epilog	O
(	O
)	O
;	O
return	O
fn	*(struct)
;	O
}	O
int	O
main	(int,array(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
jit_node_t	struct
*	O
nc	*(struct)
,	O
*	O
nf	*(struct)
;	O
pifi	*((int)->(int))
c2f	*((int)->(int))
,	O
f2c	*((int)->(int))
;	O
int	O
i	int
;	O
init_jit	(*(char))->(void)
(	O
argv	array(*(char))
[	O
0	int
]	O
)	O
;	O
_jit	*(struct)
=	O
jit_new_state	()->(*(struct))
(	O
)	O
;	O
nc	*(struct)
=	O
compile_rpn	(*(char))->(*(struct))
(	O
"32x9*5/+"	*(char)
)	O
;	O
nf	*(struct)
=	O
compile_rpn	(*(char))->(*(struct))
(	O
"x32-5*9/"	*(char)
)	O
;	O
(	O
void	O
)	O
jit_emit	O
(	O
)	O
;	O
c2f	*((int)->(int))
=	O
(	O
pifi	*((int)->(int))
)	O
jit_address	O
(	O
nc	*(struct)
)	O
;	O
f2c	*((int)->(int))
=	O
(	O
pifi	*((int)->(int))
)	O
jit_address	O
(	O
nf	*(struct)
)	O
;	O
jit_clear_state	O
(	O
)	O
;	O
printf	(*(char))->(int)
(	O
"\nC:"	*(char)
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<=	O
100	int
;	O
i	int
+=	O
10	int
)	O
printf	(*(char))->(int)
(	O
"%3d "	*(char)
,	O
i	int
)	O
;	O
printf	(*(char))->(int)
(	O
"\nF:"	*(char)
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<=	O
100	int
;	O
i	int
+=	O
10	int
)	O
printf	(*(char))->(int)
(	O
"%3d "	*(char)
,	O
c2f	*((int)->(int))
(	O
i	int
)	O
)	O
;	O
printf	(*(char))->(int)
(	O
"\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"\nF:"	*(char)
)	O
;	O
for	O
(	O
i	int
=	O
32	int
;	O
i	int
<=	O
212	int
;	O
i	int
+=	O
18	int
)	O
printf	(*(char))->(int)
(	O
"%3d "	*(char)
,	O
i	int
)	O
;	O
printf	(*(char))->(int)
(	O
"\nC:"	*(char)
)	O
;	O
for	O
(	O
i	int
=	O
32	int
;	O
i	int
<=	O
212	int
;	O
i	int
+=	O
18	int
)	O
printf	(*(char))->(int)
(	O
"%3d "	*(char)
,	O
f2c	*((int)->(int))
(	O
i	int
)	O
)	O
;	O
printf	(*(char))->(int)
(	O
"\n"	*(char)
)	O
;	O
jit_destroy_state	O
(	O
)	O
;	O
finish_jit	()->(void)
(	O
)	O
;	O
return	O
0	int
;	O
}	O
