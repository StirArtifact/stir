static	O
int	O
mh_message_name_p	O
(	O
const	O
char	O
*	O
name	*(char)
)	O
{	O
for	O
(	O
;	O
*	O
name	*(char)
;	O
name	*(char)
++	O
)	O
if	O
(	O
!	O
mu_isdigit	O
(	O
*	O
name	*(char)
)	O
)	O
return	O
0	int
;	O
return	O
1	int
;	O
}	O
static	O
int	O
mh_dir_p	O
(	O
const	O
char	O
*	O
name	*(char)
)	O
{	O
DIR	struct
*	O
dir	O
;	O
struct	O
dirent	struct(long,long,short,char,array(char))
*	O
entry	O
;	O
int	O
result	*(struct)
=	O
0	int
;	O
dir	O
=	O
opendir	(*(char))->(*(struct))
(	O
name	*(char)
)	O
;	O
if	O
(	O
!	O
dir	O
)	O
return	O
1	int
;	O
while	O
(	O
!	O
result	*(struct)
&&	O
(	O
entry	O
=	O
readdir	(*(struct))->(*(struct(long,long,short,char,array(char))))
(	O
dir	O
)	O
)	O
)	O
{	O
char	O
*	O
pname	O
;	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
st	O
;	O
int	O
rc	O
;	O
if	O
(	O
entry	O
->	O
d_name	array(char)
[	O
0	int
]	O
==	O
'.'	O
&&	O
(	O
entry	O
->	O
d_name	array(char)
[	O
1	int
]	O
==	O
0	int
||	O
(	O
entry	O
->	O
d_name	array(char)
[	O
1	int
]	O
==	O
'.'	O
&&	O
entry	O
->	O
d_name	array(char)
[	O
2	int
]	O
==	O
0	int
)	O
)	O
)	O
continue	O
;	O
pname	O
=	O
mu_make_file_name	O
(	O
name	*(char)
,	O
entry	O
->	O
d_name	array(char)
)	O
;	O
if	O
(	O
!	O
pname	O
)	O
continue	O
;	O
rc	O
=	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
(	O
pname	O
,	O
&	O
st	O
)	O
;	O
free	(*(void))->(void)
(	O
pname	O
)	O
;	O
if	O
(	O
rc	O
||	O
!	O
S_ISREG	O
(	O
st	O
.	O
st_mode	int
)	O
)	O
continue	O
;	O
switch	O
(	O
entry	O
->	O
d_name	array(char)
[	O
0	int
]	O
)	O
{	O
case	O
'.'	O
:	O
result	*(struct)
=	O
strcmp	(*(char),*(char))->(int)
(	O
entry	O
->	O
d_name	array(char)
,	O
".mh_sequences"	*(char)
)	O
==	O
0	int
;	O
break	O
;	O
case	O
','	O
:	O
result	*(struct)
=	O
mh_message_name_p	O
(	O
entry	O
->	O
d_name	array(char)
+	O
1	int
)	O
;	O
break	O
;	O
default	O
:	O
result	*(struct)
=	O
mh_message_name_p	O
(	O
entry	O
->	O
d_name	array(char)
)	O
;	O
break	O
;	O
}	O
}	O
closedir	(*(struct))->(int)
(	O
dir	O
)	O
;	O
return	O
result	*(struct)
;	O
}	O
static	O
int	O
_mh_is_scheme	O
(	O
mu_record_t	*(struct)
record	*(struct(int,*(char),int,int,int,*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*(void),*((*(struct`),*(struct`),int)->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(char),int)->(int))))
,	O
mu_url_t	*(struct)
url	*(struct)
,	O
int	O
flags	int
)	O
{	O
int	O
rc	O
=	O
0	int
;	O
int	O
scheme_matched	O
=	O
mu_url_is_scheme	(*(struct),*(char))->(int)
(	O
url	*(struct)
,	O
record	*(struct(int,*(char),int,int,int,*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*(void),*((*(struct`),*(struct`),int)->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(char),int)->(int))))
->	O
scheme	*(char)
)	O
;	O
if	O
(	O
scheme_matched	O
||	O
mu_scheme_autodetect_p	(*(struct))->(int)
(	O
url	*(struct)
)	O
)	O
{	O
const	O
char	O
*	O
path	*(char)
;	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
st	O
;	O
if	O
(	O
mu_url_sget_path	(*(struct),*(*(char)))->(int)
(	O
url	*(struct)
,	O
&	O
path	*(char)
)	O
)	O
return	O
0	int
;	O
if	O
(	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
(	O
path	*(char)
,	O
&	O
st	O
)	O
<	O
0	int
)	O
{	O
if	O
(	O
errno	O
==	O
ENOENT	O
&&	O
scheme_matched	O
)	O
return	O
MU_FOLDER_ATTRIBUTE_ALL	O
&	O
flags	int
;	O
return	O
0	int
;	O
}	O
if	O
(	O
!	O
S_ISDIR	O
(	O
st	O
.	O
st_mode	int
)	O
)	O
return	O
0	int
;	O
if	O
(	O
scheme_matched	O
)	O
rc	O
=	O
MU_FOLDER_ATTRIBUTE_ALL	O
;	O
else	O
{	O
rc	O
|=	O
MU_FOLDER_ATTRIBUTE_DIRECTORY	O
;	O
if	O
(	O
(	O
flags	int
&	O
MU_FOLDER_ATTRIBUTE_FILE	O
)	O
&&	O
mh_dir_p	O
(	O
path	*(char)
)	O
)	O
rc	O
|=	O
MU_FOLDER_ATTRIBUTE_FILE	O
;	O
}	O
}	O
return	O
rc	O
&	O
flags	int
;	O
}	O
static	O
int	O
_mh_list_p	O
(	O
mu_record_t	*(struct)
record	*(struct(int,*(char),int,int,int,*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*(void),*((*(struct`),*(struct`),int)->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(char),int)->(int))))
,	O
const	O
char	O
*	O
name	*(char)
,	O
int	O
flags	int
)	O
{	O
if	O
(	O
name	*(char)
[	O
0	int
]	O
==	O
','	O
||	O
(	O
(	O
strlen	(*(char))->(long)
(	O
name	*(char)
)	O
>	O
3	int
)	O
&&	O
(	O
memcmp	(*(void),*(void),long)->(int)
(	O
name	*(char)
,	O
".mh"	*(char)
,	O
3	int
)	O
==	O
0	int
||	O
memcmp	(*(void),*(void),long)->(int)
(	O
name	*(char)
,	O
".mu"	*(char)
,	O
3	int
)	O
==	O
0	int
)	O
)	O
)	O
return	O
0	int
;	O
if	O
(	O
flags	int
==	O
MU_FOLDER_ATTRIBUTE_DIRECTORY	O
)	O
return	O
1	int
;	O
for	O
(	O
;	O
*	O
name	*(char)
;	O
name	*(char)
++	O
)	O
if	O
(	O
!	O
mu_isdigit	O
(	O
*	O
name	*(char)
)	O
)	O
return	O
1	int
;	O
return	O
0	int
;	O
}	O
static	O
struct	O
_mu_record	struct(int,*(char),int,int,int,*((*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))))->(int)),*((*(struct))->(int)),*((*(struct))->(int)),*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,long,*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))))->(int)),*(void),*((*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)))),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),int)->(int)),*((*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)))),*(*((*`)->(int))))->(int)),*((*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)))),*(*((*`)->(int))))->(int)),*((*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)))),*(*((*`)->(int))))->(int)),*((*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)))),*(*((*`)->(int))))->(int)),*((*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)))),*(char),int)->(int)))
_mh_record	O
=	O
{	O
MU_MH_PRIO	O
,	O
MU_MH_SCHEME	O
,	O
MU_RECORD_LOCAL	O
,	O
MU_URL_SCHEME	O
|	O
MU_URL_PATH	O
|	O
MU_URL_PARAM	O
,	O
MU_URL_PATH	O
,	O
mu_url_expand_path	(*(struct))->(int)
,	O
_mailbox_mh_init	(*(struct))->(int)
,	O
NULL	O
,	O
_mu_fsfolder_init	(*(struct))->(int)
,	O
NULL	O
,	O
_mh_is_scheme	O
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
,	O
_mh_list_p	O
}	O
;	O
mu_record_t	*(struct)
mu_mh_record	*(struct(int,*(char),int,int,int,*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*(void),*((*(struct`),*(struct`),int)->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(char),int)->(int))))
=	O
&	O
_mh_record	O
;	O
