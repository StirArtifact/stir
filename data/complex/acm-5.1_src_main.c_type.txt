static	O
char	O
sccsid	array(char)
[	O
]	O
=	O
"@(#) acm by Riley Rainey; Revision 5.0"	*(char)
;	O
extern	O
struct	O
servent	struct(*(char),*(*(char)),int,*(char))
*	O
getservent	()->(*(struct(*(char),*(*(char)),int,*(char))))
(	O
)	O
;	O
int	O
sdebug	int
=	O
1	int
;	O
int	O
listen_socket	int
;	O
char	O
*	O
sceneFile	*(char)
=	O
(	O
char	O
*	O
)	O
NULL	O
;	O
extern	O
double	O
atof	(*(char))->(double)
(	O
const	O
char	O
*	O
)	O
;	O
extern	O
void	O
SetJoystickPort	(*(char))->(void)
PARAMS	O
(	O
(	O
char	O
*	O
)	O
)	O
;	O
int	O
processCommandFile	(*(char),*(int),array(*(char)),*(char),*(char),*(char))->(int)
(	O
const	O
char	O
*	O
fname	*(char)
,	O
int	O
*	O
argc	*(int)
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
,	O
char	O
*	O
display	*(struct)
,	O
char	O
*	O
name	*(char)
,	O
char	O
*	O
switches	*(char)
)	O
;	O
int	O
processCommandSwitches	(int,array(*(char)),*(char),*(char),*(char))->(int)
(	O
int	O
argc	*(int)
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
,	O
char	O
*	O
display	*(struct)
,	O
char	O
*	O
name	*(char)
,	O
char	O
*	O
switches	*(char)
)	O
;	O
int	O
dis_site	int
=	O
DIS_SITE	int
;	O
int	O
dis_application	int
=	O
DIS_APPLICATION	int
;	O
int	O
dis_exercise	int
=	O
DIS_EXERCISE	int
;	O
void	O
disEntityEnterCb	(int,*(struct(char,char,short,char,char,char,char)),int,*(*(struct(int,int,int,double,*(struct`),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct`),double,*(struct`),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct`),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double)))))->(void)
(	O
int	O
eid	int
,	O
dis_entity_type	struct(char,char,short,char,char,char,char)
*	O
etype	*(struct(char,char,short,char,char,char,char))
,	O
int	O
force	int
,	O
craft	struct(int,int,int,double,*(struct(*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),int,*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),*(struct),*(*(char)),array(char),array(char),array(char),long,*(struct),*(struct),*(struct(*`,long,int,int,int,int,int,int,int,int,*`,struct`,struct`,*`,int,int)),*(struct(*`,long,int,int,int,int,int,int,int,int,*`,struct`,struct`,*`,int,int)),long,array(long),array(long),array(long),long,long,long,int,*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),int,int,int,int,int,int,short,short,int,int,int,struct(*(struct`)),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),int,int,int,int,int,double,struct(short,long,*(struct`),*(struct`)),struct(short,long,*(struct`),*(struct`)),array(struct(short,short,short,short)),int,int,int,long,struct(double,double,double),struct(double,double,double))),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*(char),*(char),*(char),double,double,double,double,double,double,double,double,*(struct(int,float,*`)),*(struct(int,float,*`)),*(struct(int,float,*`)),*(struct(int,float,*`)),double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct(array(array(double))),double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*((*`)->(double)),*(struct(int,float,*`)),*(struct(int,float,*`)),double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,struct(double,double,double),double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*((*`,*`,*`,*`,*`)->(int)),*(char),*(struct(*`,struct`,struct`,struct`,struct`,double,int,*`,*`)),*((*`)->(void)),struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),*(void))),double,*(struct(int,int,int,double,*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*`,*`,*`,double,double,double,double,double,double,double,double,*`,*`,*`,*`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*`,*`,*`,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,struct`,double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*`,*`,*`,*`,struct`,struct`,*`)),double,*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*`)),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)))),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))
*	O
*	O
cptr	*(*(struct(int,int,int,double,*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*`,*`,*`,double,double,double,double,double,double,double,double,*`,*`,*`,*`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*`,*`,*`,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,struct`,double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*`,*`,*`,*`,struct`,struct`,*`)),double,*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*`)),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))))
)	O
{	O
int	O
i	int
,	O
j	int
,	O
top	int
,	O
mtype	int
;	O
craft	struct(int,int,int,double,*(struct(*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),int,*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),*(struct),*(*(char)),array(char),array(char),array(char),long,*(struct),*(struct),*(struct(*`,long,int,int,int,int,int,int,int,int,*`,struct`,struct`,*`,int,int)),*(struct(*`,long,int,int,int,int,int,int,int,int,*`,struct`,struct`,*`,int,int)),long,array(long),array(long),array(long),long,long,long,int,*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),int,int,int,int,int,int,short,short,int,int,int,struct(*(struct`)),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),int,int,int,int,int,double,struct(short,long,*(struct`),*(struct`)),struct(short,long,*(struct`),*(struct`)),array(struct(short,short,short,short)),int,int,int,long,struct(double,double,double),struct(double,double,double))),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*(char),*(char),*(char),double,double,double,double,double,double,double,double,*(struct(int,float,*`)),*(struct(int,float,*`)),*(struct(int,float,*`)),*(struct(int,float,*`)),double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct(array(array(double))),double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*((*`)->(double)),*(struct(int,float,*`)),*(struct(int,float,*`)),double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,struct(double,double,double),double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*((*`,*`,*`,*`,*`)->(int)),*(char),*(struct(*`,struct`,struct`,struct`,struct`,double,int,*`,*`)),*((*`)->(void)),struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),*(void))),double,*(struct(int,int,int,double,*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*`,*`,*`,double,double,double,double,double,double,double,double,*`,*`,*`,*`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*`,*`,*`,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,struct`,double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*`,*`,*`,*`,struct`,struct`,*`)),double,*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*`)),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)))),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))
*	O
c	*(struct(long,short,short,short,char,char))
;	O
char	O
*	O
type	*(char)
;	O
int	O
team	int
;	O
craft	struct(int,int,int,double,*(struct(*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),int,*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),*(struct),*(*(char)),array(char),array(char),array(char),long,*(struct),*(struct),*(struct(*`,long,int,int,int,int,int,int,int,int,*`,struct`,struct`,*`,int,int)),*(struct(*`,long,int,int,int,int,int,int,int,int,*`,struct`,struct`,*`,int,int)),long,array(long),array(long),array(long),long,long,long,int,*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),int,int,int,int,int,int,short,short,int,int,int,struct(*(struct`)),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),int,int,int,int,int,double,struct(short,long,*(struct`),*(struct`)),struct(short,long,*(struct`),*(struct`)),array(struct(short,short,short,short)),int,int,int,long,struct(double,double,double),struct(double,double,double))),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*(char),*(char),*(char),double,double,double,double,double,double,double,double,*(struct(int,float,*`)),*(struct(int,float,*`)),*(struct(int,float,*`)),*(struct(int,float,*`)),double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct(array(array(double))),double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*((*`)->(double)),*(struct(int,float,*`)),*(struct(int,float,*`)),double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,struct(double,double,double),double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*((*`,*`,*`,*`,*`)->(int)),*(char),*(struct(*`,struct`,struct`,struct`,struct`,double,int,*`,*`)),*((*`)->(void)),struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),*(void))),double,*(struct(int,int,int,double,*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*`,*`,*`,double,double,double,double,double,double,double,double,*`,*`,*`,*`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*`,*`,*`,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,struct`,double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*`,*`,*`,*`,struct`,struct`,*`)),double,*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*`)),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)))),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))
*	O
tbl	*(struct(int,int,int,double,*(struct(*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(*`),array(char),array(char),array(char),long,*(struct`),*(struct`),*(struct`),*(struct`),long,array(long),array(long),array(long),long,long,long,int,*(struct`),int,int,int,int,int,int,short,short,int,int,int,struct(*`),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),int,int,int,int,int,double,struct(short,long,*`,*`),struct(short,long,*`,*`),array(struct(short,short,short,short)),int,int,int,long,struct(double,double,double),struct(double,double,double))),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*(char),*(char),*(char),double,double,double,double,double,double,double,double,*(struct`),*(struct`),*(struct`),*(struct`),double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct(array(array(double))),double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*((*`)->(double)),*(struct`),*(struct`),double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,struct(double,double,double),double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*((*`,*`,*`,*`,*`)->(int)),*(char),*(struct`),*((*`)->(void)),struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),*(void))),double,*(struct(int,int,int,double,*(struct`),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct`),double,*(struct`),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct`),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*(struct`))),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double)))
;	O
*	O
cptr	*(*(struct(int,int,int,double,*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*`,*`,*`,double,double,double,double,double,double,double,double,*`,*`,*`,*`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*`,*`,*`,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,struct`,double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*`,*`,*`,*`,struct`,struct`,*`)),double,*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*`)),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))))
=	O
NULL	O
;	O
if	O
(	O
etype	*(struct(char,char,short,char,char,char,char))
->	O
kind	char
==	O
DISKindPlatform	int
)	O
{	O
tbl	*(struct(int,int,int,double,*(struct(*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(*`),array(char),array(char),array(char),long,*(struct`),*(struct`),*(struct`),*(struct`),long,array(long),array(long),array(long),long,long,long,int,*(struct`),int,int,int,int,int,int,short,short,int,int,int,struct(*`),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),int,int,int,int,int,double,struct(short,long,*`,*`),struct(short,long,*`,*`),array(struct(short,short,short,short)),int,int,int,long,struct(double,double,double),struct(double,double,double))),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*(char),*(char),*(char),double,double,double,double,double,double,double,double,*(struct`),*(struct`),*(struct`),*(struct`),double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct(array(array(double))),double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*((*`)->(double)),*(struct`),*(struct`),double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,struct(double,double,double),double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*((*`,*`,*`,*`,*`)->(int)),*(char),*(struct`),*((*`)->(void)),struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),*(void))),double,*(struct(int,int,int,double,*(struct`),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct`),double,*(struct`),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct`),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*(struct`))),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double)))
=	O
ptbl	array(struct(int,int,int,double,*(struct(*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),int,*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),*(struct),*(*(char)),array(char),array(char),array(char),long,*(struct),*(struct),*(struct(*`,long,int,int,int,int,int,int,int,int,*`,struct`,struct`,*`,int,int)),*(struct(*`,long,int,int,int,int,int,int,int,int,*`,struct`,struct`,*`,int,int)),long,array(long),array(long),array(long),long,long,long,int,*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),int,int,int,int,int,int,short,short,int,int,int,struct(*(struct`)),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),int,int,int,int,int,double,struct(short,long,*(struct`),*(struct`)),struct(short,long,*(struct`),*(struct`)),array(struct(short,short,short,short)),int,int,int,long,struct(double,double,double),struct(double,double,double))),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*(char),*(char),*(char),double,double,double,double,double,double,double,double,*(struct(int,float,*`)),*(struct(int,float,*`)),*(struct(int,float,*`)),*(struct(int,float,*`)),double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct(array(array(double))),double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*((*`)->(double)),*(struct(int,float,*`)),*(struct(int,float,*`)),double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,struct(double,double,double),double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*((*`,*`,*`,*`,*`)->(int)),*(char),*(struct(*`,struct`,struct`,struct`,struct`,double,int,*`,*`)),*((*`)->(void)),struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),*(void))),double,*(struct(int,int,int,double,*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*`,*`,*`,double,double,double,double,double,double,double,double,*`,*`,*`,*`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*`,*`,*`,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,struct`,double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*`,*`,*`,*`,struct`,struct`,*`)),double,*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*`)),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)))),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double)))
;	O
top	int
=	O
MAXPLAYERS	int
;	O
mtype	int
=	O
CT_DIS_PLANE	int
;	O
}	O
else	O
if	O
(	O
etype	*(struct(char,char,short,char,char,char,char))
->	O
kind	char
==	O
DISKindMunition	int
)	O
{	O
tbl	*(struct(int,int,int,double,*(struct(*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(*`),array(char),array(char),array(char),long,*(struct`),*(struct`),*(struct`),*(struct`),long,array(long),array(long),array(long),long,long,long,int,*(struct`),int,int,int,int,int,int,short,short,int,int,int,struct(*`),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),int,int,int,int,int,double,struct(short,long,*`,*`),struct(short,long,*`,*`),array(struct(short,short,short,short)),int,int,int,long,struct(double,double,double),struct(double,double,double))),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*(char),*(char),*(char),double,double,double,double,double,double,double,double,*(struct`),*(struct`),*(struct`),*(struct`),double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct(array(array(double))),double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*((*`)->(double)),*(struct`),*(struct`),double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,struct(double,double,double),double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*((*`,*`,*`,*`,*`)->(int)),*(char),*(struct`),*((*`)->(void)),struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),*(void))),double,*(struct(int,int,int,double,*(struct`),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct`),double,*(struct`),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct`),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*(struct`))),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double)))
=	O
mtbl	array(struct(int,int,int,double,*(struct(*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),int,*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),*(struct),*(*(char)),array(char),array(char),array(char),long,*(struct),*(struct),*(struct(*`,long,int,int,int,int,int,int,int,int,*`,struct`,struct`,*`,int,int)),*(struct(*`,long,int,int,int,int,int,int,int,int,*`,struct`,struct`,*`,int,int)),long,array(long),array(long),array(long),long,long,long,int,*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),int,int,int,int,int,int,short,short,int,int,int,struct(*(struct`)),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),int,int,int,int,int,double,struct(short,long,*(struct`),*(struct`)),struct(short,long,*(struct`),*(struct`)),array(struct(short,short,short,short)),int,int,int,long,struct(double,double,double),struct(double,double,double))),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*(char),*(char),*(char),double,double,double,double,double,double,double,double,*(struct(int,float,*`)),*(struct(int,float,*`)),*(struct(int,float,*`)),*(struct(int,float,*`)),double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct(array(array(double))),double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*((*`)->(double)),*(struct(int,float,*`)),*(struct(int,float,*`)),double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,struct(double,double,double),double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*((*`,*`,*`,*`,*`)->(int)),*(char),*(struct(*`,struct`,struct`,struct`,struct`,double,int,*`,*`)),*((*`)->(void)),struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),*(void))),double,*(struct(int,int,int,double,*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*`,*`,*`,double,double,double,double,double,double,double,double,*`,*`,*`,*`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*`,*`,*`,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,struct`,double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*`,*`,*`,*`,struct`,struct`,*`)),double,*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*`)),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)))),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double)))
;	O
top	int
=	O
MAXPROJECTILES	O
;	O
mtype	int
=	O
CT_DIS_MUNITION	int
;	O
}	O
else	O
{	O
return	O
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
top	int
;	O
++	O
i	int
)	O
{	O
if	O
(	O
tbl	*(struct(int,int,int,double,*(struct(*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(*`),array(char),array(char),array(char),long,*(struct`),*(struct`),*(struct`),*(struct`),long,array(long),array(long),array(long),long,long,long,int,*(struct`),int,int,int,int,int,int,short,short,int,int,int,struct(*`),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),int,int,int,int,int,double,struct(short,long,*`,*`),struct(short,long,*`,*`),array(struct(short,short,short,short)),int,int,int,long,struct(double,double,double),struct(double,double,double))),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*(char),*(char),*(char),double,double,double,double,double,double,double,double,*(struct`),*(struct`),*(struct`),*(struct`),double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct(array(array(double))),double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*((*`)->(double)),*(struct`),*(struct`),double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,struct(double,double,double),double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*((*`,*`,*`,*`,*`)->(int)),*(char),*(struct`),*((*`)->(void)),struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),*(void))),double,*(struct(int,int,int,double,*(struct`),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct`),double,*(struct`),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct`),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*(struct`))),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double)))
[	O
i	int
]	O
.	O
type	*(char)
==	O
CT_FREE	int
)	O
{	O
if	O
(	O
force	int
==	O
DISForceFriendly	int
)	O
{	O
team	int
=	O
1	int
;	O
}	O
else	O
{	O
team	int
=	O
2	int
;	O
}	O
c	*(struct(long,short,short,short,char,char))
=	O
&	O
tbl	*(struct(int,int,int,double,*(struct(*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(*`),array(char),array(char),array(char),long,*(struct`),*(struct`),*(struct`),*(struct`),long,array(long),array(long),array(long),long,long,long,int,*(struct`),int,int,int,int,int,int,short,short,int,int,int,struct(*`),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),int,int,int,int,int,double,struct(short,long,*`,*`),struct(short,long,*`,*`),array(struct(short,short,short,short)),int,int,int,long,struct(double,double,double),struct(double,double,double))),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*(char),*(char),*(char),double,double,double,double,double,double,double,double,*(struct`),*(struct`),*(struct`),*(struct`),double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct(array(array(double))),double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*((*`)->(double)),*(struct`),*(struct`),double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,struct(double,double,double),double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*((*`,*`,*`,*`,*`)->(int)),*(char),*(struct`),*((*`)->(void)),struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),*(void))),double,*(struct(int,int,int,double,*(struct`),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct`),double,*(struct`),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct`),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*(struct`))),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double)))
[	O
i	int
]	O
;	O
*	O
cptr	*(*(struct(int,int,int,double,*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*`,*`,*`,double,double,double,double,double,double,double,double,*`,*`,*`,*`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*`,*`,*`,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,struct`,double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*`,*`,*`,*`,struct`,struct`,*`)),double,*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*`)),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))))
=	O
c	*(struct(long,short,short,short,char,char))
;	O
c	*(struct(long,short,short,short,char,char))
->	O
createTime	double
=	O
curTime	double
;	O
c	*(struct(long,short,short,short,char,char))
->	O
vl	*(struct(*(struct(*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(*`),array(char),array(char),array(char),long,*(struct`),*(struct`),*(struct`),*(struct`),long,array(long),array(long),array(long),long,long,long,int,*(struct`),int,int,int,int,int,int,short,short,int,int,int,struct(*`),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),int,int,int,int,int,double,struct(short,long,*`,*`),struct(short,long,*`,*`),array(struct(short,short,short,short)),int,int,int,long,struct(double,double,double),struct(double,double,double))),int,*(struct(*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(*`),array(char),array(char),array(char),long,*(struct`),*(struct`),*(struct`),*(struct`),long,array(long),array(long),array(long),long,long,long,int,*(struct`),int,int,int,int,int,int,short,short,int,int,int,struct(*`),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),int,int,int,int,int,double,struct(short,long,*`,*`),struct(short,long,*`,*`),array(struct(short,short,short,short)),int,int,int,long,struct(double,double,double),struct(double,double,double))),*(struct(*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(*`),array(char),array(char),array(char),long,*(struct`),*(struct`),*(struct`),*(struct`),long,array(long),array(long),array(long),long,long,long,int,*(struct`),int,int,int,int,int,int,short,short,int,int,int,struct(*`),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),int,int,int,int,int,double,struct(short,long,*`,*`),struct(short,long,*`,*`),array(struct(short,short,short,short)),int,int,int,long,struct(double,double,double),struct(double,double,double))),*(struct(int,int,int,double,*(struct`),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct`),double,*(struct`),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct`),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))),*(struct(int,int,int,double,*(struct`),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct`),double,*(struct`),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct`),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))),*(struct),*(*(char)),array(char),array(char),array(char),long,*(struct),*(struct),*(struct(*(struct`),long,int,int,int,int,int,int,int,int,*(struct`),struct(short,short,short,short,short,short),struct(short,short,short,short,short,short),*(struct`),int,int)),*(struct(*(struct`),long,int,int,int,int,int,int,int,int,*(struct`),struct(short,short,short,short,short,short),struct(short,short,short,short,short,short),*(struct`),int,int)),long,array(long),array(long),array(long),long,long,long,int,*(struct(*(struct`),long,long,struct(array(array(double))),*(struct`),array(struct(double,double,double)),double,double,double,double,int,int,struct(short,short),struct(double,double,double),*(struct`),int,long,long,long,*(struct`),array(long),int,int,long,long,long,*(short),*(short),array(short),struct(long,short,short,short,char,char),array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*(struct`),*(struct`),long,long,*(()->(void)),*((*`,long,*`)->(int)),*((*`,int,int,int,int,short)->(void)),*((*`,*`,int,short)->(void)),*((*`,long,*`,*`)->(void)),*((*`,int,int,int,int,short)->(void)),*((*`,*`)->(void)),*((*`,int,int,int,int)->(void)),*((*`)->(void)),long)),int,int,int,int,int,int,short,short,int,int,int,struct(*(struct(*`,int))),struct(*(struct(*`,int)),int),struct(*(struct(*`,int)),int),struct(*(struct(*`,int)),int),struct(*(struct(*`,int)),int),struct(*(struct(*`,int)),int),struct(*(struct(*`,int)),int),struct(*(struct(*`,int)),int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),int,int,int,int,int,double,struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`))),struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`))),array(struct(short,short,short,short)),int,int,int,long,struct(double,double,double),struct(double,double,double)))
=	O
NULL	O
;	O
c	*(struct(long,short,short,short,char,char))
->	O
disId	int
=	O
eid	int
;	O
c	*(struct(long,short,short,short,char,char))
->	O
team	int
=	O
team	int
;	O
c	*(struct(long,short,short,short,char,char))
->	O
curOpponent	short
=	O
-	O
1	int
;	O
c	*(struct(long,short,short,short,char,char))
->	O
holdCount	short
=	O
0	int
;	O
c	*(struct(long,short,short,short,char,char))
->	O
vl	*(struct(*(struct(*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(*`),array(char),array(char),array(char),long,*(struct`),*(struct`),*(struct`),*(struct`),long,array(long),array(long),array(long),long,long,long,int,*(struct`),int,int,int,int,int,int,short,short,int,int,int,struct(*`),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),int,int,int,int,int,double,struct(short,long,*`,*`),struct(short,long,*`,*`),array(struct(short,short,short,short)),int,int,int,long,struct(double,double,double),struct(double,double,double))),int,*(struct(*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(*`),array(char),array(char),array(char),long,*(struct`),*(struct`),*(struct`),*(struct`),long,array(long),array(long),array(long),long,long,long,int,*(struct`),int,int,int,int,int,int,short,short,int,int,int,struct(*`),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),int,int,int,int,int,double,struct(short,long,*`,*`),struct(short,long,*`,*`),array(struct(short,short,short,short)),int,int,int,long,struct(double,double,double),struct(double,double,double))),*(struct(*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(*`),array(char),array(char),array(char),long,*(struct`),*(struct`),*(struct`),*(struct`),long,array(long),array(long),array(long),long,long,long,int,*(struct`),int,int,int,int,int,int,short,short,int,int,int,struct(*`),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(*`,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*`,int,int),int,int,int,int,int,double,struct(short,long,*`,*`),struct(short,long,*`,*`),array(struct(short,short,short,short)),int,int,int,long,struct(double,double,double),struct(double,double,double))),*(struct(int,int,int,double,*(struct`),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct`),double,*(struct`),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct`),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))),*(struct(int,int,int,double,*(struct`),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct`),double,*(struct`),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct`),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))),*(struct),*(*(char)),array(char),array(char),array(char),long,*(struct),*(struct),*(struct(*(struct`),long,int,int,int,int,int,int,int,int,*(struct`),struct(short,short,short,short,short,short),struct(short,short,short,short,short,short),*(struct`),int,int)),*(struct(*(struct`),long,int,int,int,int,int,int,int,int,*(struct`),struct(short,short,short,short,short,short),struct(short,short,short,short,short,short),*(struct`),int,int)),long,array(long),array(long),array(long),long,long,long,int,*(struct(*(struct`),long,long,struct(array(array(double))),*(struct`),array(struct(double,double,double)),double,double,double,double,int,int,struct(short,short),struct(double,double,double),*(struct`),int,long,long,long,*(struct`),array(long),int,int,long,long,long,*(short),*(short),array(short),struct(long,short,short,short,char,char),array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*(struct`),*(struct`),long,long,*(()->(void)),*((*`,long,*`)->(int)),*((*`,int,int,int,int,short)->(void)),*((*`,*`,int,short)->(void)),*((*`,long,*`,*`)->(void)),*((*`,int,int,int,int,short)->(void)),*((*`,*`)->(void)),*((*`,int,int,int,int)->(void)),*((*`)->(void)),long)),int,int,int,int,int,int,short,short,int,int,int,struct(*(struct(*`,int))),struct(*(struct(*`,int)),int),struct(*(struct(*`,int)),int),struct(*(struct(*`,int)),int),struct(*(struct(*`,int)),int),struct(*(struct(*`,int)),int),struct(*(struct(*`,int)),int),struct(*(struct(*`,int)),int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),int,int,int,int,int,double,struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`))),struct(short,long,*(struct(short,long,*`,*`)),*(struct(short,long,*`,*`))),array(struct(short,short,short,short)),int,int,int,long,struct(double,double,double),struct(double,double,double)))
=	O
NULL	O
;	O
c	*(struct(long,short,short,short,char,char))
->	O
type	*(char)
=	O
mtype	int
;	O
c	*(struct(long,short,short,short,char,char))
->	O
cinfo	*(struct(*(char),*(char),*(char),double,double,double,double,double,double,double,double,*(struct(int,float,*(struct`))),*(struct(int,float,*(struct`))),*(struct(int,float,*(struct`))),*(struct(int,float,*(struct`))),double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct(array(array(double))),double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*((*(struct`))->(double)),*(struct(int,float,*(struct`))),*(struct(int,float,*(struct`))),double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,struct(double,double,double),double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*((*(struct`),*(struct`),*(struct`),*(*`),*(long))->(int)),*(char),*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*`),*(short))),*((*(struct`))->(void)),struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),*(void)))
=	O
lookupCraftByEntityType	(*(struct(char,char,short,char,char,char,char)))->(*(struct(*(char),*(char),*(char),double,double,double,double,double,double,double,double,*(struct(int,float,*`)),*(struct(int,float,*`)),*(struct(int,float,*`)),*(struct(int,float,*`)),double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct(array(array(double))),double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*((*`)->(double)),*(struct(int,float,*`)),*(struct(int,float,*`)),double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,struct(double,double,double),double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*((*`,*`,*`,*`,*`)->(int)),*(char),*(struct(*`,struct`,struct`,struct`,struct`,double,int,*`,*`)),*((*`)->(void)),struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),*(void))))
(	O
etype	*(struct(char,char,short,char,char,char,char))
)	O
;	O
if	O
(	O
!	O
c	*(struct(long,short,short,short,char,char))
->	O
cinfo	*(struct(*(char),*(char),*(char),double,double,double,double,double,double,double,double,*(struct(int,float,*(struct`))),*(struct(int,float,*(struct`))),*(struct(int,float,*(struct`))),*(struct(int,float,*(struct`))),double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct(array(array(double))),double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*((*(struct`))->(double)),*(struct(int,float,*(struct`))),*(struct(int,float,*(struct`))),double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,struct(double,double,double),double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*((*(struct`),*(struct`),*(struct`),*(*`),*(long))->(int)),*(char),*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*`),*(short))),*((*(struct`))->(void)),struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),*(void)))
)	O
{	O
*	O
cptr	*(*(struct(int,int,int,double,*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*`,*`,*`,double,double,double,double,double,double,double,double,*`,*`,*`,*`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*`,*`,*`,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,struct`,double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*`,*`,*`,*`,struct`,struct`,*`)),double,*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*`)),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))))
=	O
NULL	O
;	O
c	*(struct(long,short,short,short,char,char))
->	O
type	*(char)
=	O
CT_FREE	int
;	O
return	O
;	O
}	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
c	*(struct(long,short,short,short,char,char))
->	O
name	*(char)
,	O
"DIS"	*(char)
,	O
sizeof	O
(	O
c	*(struct(long,short,short,short,char,char))
->	O
name	*(char)
)	O
)	O
;	O
c	*(struct(long,short,short,short,char,char))
->	O
curNWDef	double
=	O
0.0	int
;	O
c	*(struct(long,short,short,short,char,char))
->	O
flags	short
=	O
0	int
;	O
c	*(struct(long,short,short,short,char,char))
->	O
radarMode	int
=	O
RM_NORMAL	int
;	O
c	*(struct(long,short,short,short,char,char))
->	O
curRadarTarget	short
=	O
-	O
1	int
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
6	int
;	O
++	O
j	int
)	O
{	O
c	*(struct(long,short,short,short,char,char))
->	O
leftHUD	array(*(char))
[	O
j	int
]	O
=	O
Vmalloc	(int)->(*(char))
(	O
32	int
)	O
;	O
c	*(struct(long,short,short,short,char,char))
->	O
rightHUD	array(*(char))
[	O
j	int
]	O
=	O
Vmalloc	(int)->(*(char))
(	O
32	int
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
c	*(struct(long,short,short,short,char,char))
->	O
leftHUD	array(*(char))
[	O
j	int
]	O
,	O
""	*(char)
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
c	*(struct(long,short,short,short,char,char))
->	O
rightHUD	array(*(char))
[	O
j	int
]	O
,	O
""	*(char)
)	O
;	O
}	O
break	O
;	O
}	O
}	O
if	O
(	O
i	int
==	O
top	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Out of players (increase MAXPLAYERS)\n"	*(char)
)	O
;	O
}	O
void	O
disDetonationCb	(int,int,int,double,*(double),*(double),*(struct(int,int,int,double,*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*`,*`,*`,double,double,double,double,double,double,double,double,*`,*`,*`,*`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*`,*`,*`,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,struct`,double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*`,*`,*`,*`,struct`,struct`,*`)),double,*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*`)),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),char,char,short,*(struct(char,char,short,long,union`)))))->(void)
(	O
int	O
ftype	int
,	O
int	O
firingEid	int
,	O
int	O
targetEid	int
,	O
double	O
time	long
,	O
double	O
*	O
worldLocation	array(double)
,	O
double	O
*	O
entityLocation	array(double)
,	O
craft	struct(int,int,int,double,*(struct(*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),int,*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),*(struct),*(*(char)),array(char),array(char),array(char),long,*(struct),*(struct),*(struct(*`,long,int,int,int,int,int,int,int,int,*`,struct`,struct`,*`,int,int)),*(struct(*`,long,int,int,int,int,int,int,int,int,*`,struct`,struct`,*`,int,int)),long,array(long),array(long),array(long),long,long,long,int,*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),int,int,int,int,int,int,short,short,int,int,int,struct(*(struct`)),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),int,int,int,int,int,double,struct(short,long,*(struct`),*(struct`)),struct(short,long,*(struct`),*(struct`)),array(struct(short,short,short,short)),int,int,int,long,struct(double,double,double),struct(double,double,double))),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*(char),*(char),*(char),double,double,double,double,double,double,double,double,*(struct(int,float,*`)),*(struct(int,float,*`)),*(struct(int,float,*`)),*(struct(int,float,*`)),double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct(array(array(double))),double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*((*`)->(double)),*(struct(int,float,*`)),*(struct(int,float,*`)),double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,struct(double,double,double),double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*((*`,*`,*`,*`,*`)->(int)),*(char),*(struct(*`,struct`,struct`,struct`,struct`,double,int,*`,*`)),*((*`)->(void)),struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),*(void))),double,*(struct(int,int,int,double,*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*`,*`,*`,double,double,double,double,double,double,double,double,*`,*`,*`,*`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*`,*`,*`,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,struct`,double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*`,*`,*`,*`,struct`,struct`,*`)),double,*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*`)),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)))),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))
*	O
m	float
,	O
dis_detonation_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),char,char,short,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short)))))
*	O
dpdu	*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),char,char,short,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))))
)	O
{	O
craft	struct(int,int,int,double,*(struct(*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),int,*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),*(struct),*(*(char)),array(char),array(char),array(char),long,*(struct),*(struct),*(struct(*`,long,int,int,int,int,int,int,int,int,*`,struct`,struct`,*`,int,int)),*(struct(*`,long,int,int,int,int,int,int,int,int,*`,struct`,struct`,*`,int,int)),long,array(long),array(long),array(long),long,long,long,int,*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),int,int,int,int,int,int,short,short,int,int,int,struct(*(struct`)),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),int,int,int,int,int,double,struct(short,long,*(struct`),*(struct`)),struct(short,long,*(struct`),*(struct`)),array(struct(short,short,short,short)),int,int,int,long,struct(double,double,double),struct(double,double,double))),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*(char),*(char),*(char),double,double,double,double,double,double,double,double,*(struct(int,float,*`)),*(struct(int,float,*`)),*(struct(int,float,*`)),*(struct(int,float,*`)),double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct(array(array(double))),double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*((*`)->(double)),*(struct(int,float,*`)),*(struct(int,float,*`)),double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,struct(double,double,double),double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*((*`,*`,*`,*`,*`)->(int)),*(char),*(struct(*`,struct`,struct`,struct`,struct`,double,int,*`,*`)),*((*`)->(void)),struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),*(void))),double,*(struct(int,int,int,double,*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*`,*`,*`,double,double,double,double,double,double,double,double,*`,*`,*`,*`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*`,*`,*`,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,struct`,double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*`,*`,*`,*`,struct`,struct`,*`)),double,*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*`)),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)))),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))
*	O
c	*(struct(long,short,short,short,char,char))
;	O
int	O
j	int
;	O
VPoint	struct(double,double,double)
Sg	struct(double,double,double)
,	O
rloc	struct(double,double,double)
,	O
rvel	struct(double,double,double)
,	O
tmp	struct(double,double,double)
;	O
double	O
exp_diameter	double
,	O
dist_meters	double
,	O
vel_meters_per_sec	double
;	O
if	O
(	O
m	float
)	O
{	O
killMissile	()->(int)
(	O
m	float
,	O
(	O
craft	struct(int,int,int,double,*(struct(*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),int,*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),*(struct),*(*(char)),array(char),array(char),array(char),long,*(struct),*(struct),*(struct(*`,long,int,int,int,int,int,int,int,int,*`,struct`,struct`,*`,int,int)),*(struct(*`,long,int,int,int,int,int,int,int,int,*`,struct`,struct`,*`,int,int)),long,array(long),array(long),array(long),long,long,long,int,*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),int,int,int,int,int,int,short,short,int,int,int,struct(*(struct`)),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),int,int,int,int,int,double,struct(short,long,*(struct`),*(struct`)),struct(short,long,*(struct`),*(struct`)),array(struct(short,short,short,short)),int,int,int,long,struct(double,double,double),struct(double,double,double))),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*(char),*(char),*(char),double,double,double,double,double,double,double,double,*(struct(int,float,*`)),*(struct(int,float,*`)),*(struct(int,float,*`)),*(struct(int,float,*`)),double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct(array(array(double))),double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*((*`)->(double)),*(struct(int,float,*`)),*(struct(int,float,*`)),double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,struct(double,double,double),double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*((*`,*`,*`,*`,*`)->(int)),*(char),*(struct(*`,struct`,struct`,struct`,struct`,double,int,*`,*`)),*((*`)->(void)),struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),*(void))),double,*(struct(int,int,int,double,*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*`,*`,*`,double,double,double,double,double,double,double,double,*`,*`,*`,*`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*`,*`,*`,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,struct`,double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*`,*`,*`,*`,struct`,struct`,*`)),double,*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*`)),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)))),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))
*	O
)	O
NULL	O
)	O
;	O
}	O
Sg	struct(double,double,double)
.	O
x	float
=	O
worldLocation	array(double)
[	O
0	int
]	O
;	O
Sg	struct(double,double,double)
.	O
y	short
=	O
worldLocation	array(double)
[	O
1	int
]	O
;	O
Sg	struct(double,double,double)
.	O
z	short
=	O
worldLocation	array(double)
[	O
2	int
]	O
;	O
for	O
(	O
c	*(struct(long,short,short,short,char,char))
=	O
ptbl	array(struct(int,int,int,double,*(struct(*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),int,*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),*(struct),*(*(char)),array(char),array(char),array(char),long,*(struct),*(struct),*(struct(*`,long,int,int,int,int,int,int,int,int,*`,struct`,struct`,*`,int,int)),*(struct(*`,long,int,int,int,int,int,int,int,int,*`,struct`,struct`,*`,int,int)),long,array(long),array(long),array(long),long,long,long,int,*(struct(*`,long,long,struct`,*`,array(struct(double,double,double)),double,double,double,double,int,int,struct`,struct`,*`,int,long,long,long,*`,array(long),int,int,long,long,long,*`,*`,array(short),struct`,array(struct(long,short,short,short,char,char)),array(struct(long,short,short,short,char,char)),long,*`,*`,long,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,long)),int,int,int,int,int,int,short,short,int,int,int,struct(*(struct`)),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(*(struct`),int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),struct(int,int,int,int,double,int,int,int,int,int,double,*(char),int,int),int,int,int,int,int,double,struct(short,long,*(struct`),*(struct`)),struct(short,long,*(struct`),*(struct`)),array(struct(short,short,short,short)),int,int,int,long,struct(double,double,double),struct(double,double,double))),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*(char),*(char),*(char),double,double,double,double,double,double,double,double,*(struct(int,float,*`)),*(struct(int,float,*`)),*(struct(int,float,*`)),*(struct(int,float,*`)),double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct(array(array(double))),double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*((*`)->(double)),*(struct(int,float,*`)),*(struct(int,float,*`)),double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,double,struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,double,double,struct(double,double,double),double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*((*`,*`,*`,*`,*`)->(int)),*(char),*(struct(*`,struct`,struct`,struct`,struct`,double,int,*`,*`)),*((*`)->(void)),struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),*(void))),double,*(struct(int,int,int,double,*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*`,*`,*`,double,double,double,double,double,double,double,double,*`,*`,*`,*`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*`,*`,*`,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,struct`,double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*`,*`,*`,*`,struct`,struct`,*`)),double,*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*`)),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)))),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double)))
,	O
j	int
=	O
0	int
;	O
j	int
<	O
MAXPLAYERS	int
;	O
++	O
j	int
,	O
++	O
c	*(struct(long,short,short,short,char,char))
)	O
if	O
(	O
c	*(struct(long,short,short,short,char,char))
->	O
type	*(char)
!=	O
CT_FREE	int
&&	O
c	*(struct(long,short,short,short,char,char))
->	O
disId	int
==	O
targetEid	int
)	O
{	O
if	O
(	O
c	*(struct(long,short,short,short,char,char))
->	O
type	*(char)
!=	O
CT_DIS_PLANE	int
)	O
{	O
rloc	struct(double,double,double)
.	O
x	float
=	O
c	*(struct(long,short,short,short,char,char))
->	O
Sg	struct(double,double,double)
.	O
x	float
-	O
Sg	struct(double,double,double)
.	O
x	float
;	O
rloc	struct(double,double,double)
.	O
y	short
=	O
c	*(struct(long,short,short,short,char,char))
->	O
Sg	struct(double,double,double)
.	O
y	short
-	O
Sg	struct(double,double,double)
.	O
y	short
;	O
rloc	struct(double,double,double)
.	O
z	short
=	O
c	*(struct(long,short,short,short,char,char))
->	O
Sg	struct(double,double,double)
.	O
z	short
-	O
Sg	struct(double,double,double)
.	O
z	short
;	O
dist_meters	double
=	O
mag	O
(	O
rloc	struct(double,double,double)
)	O
;	O
tmp	struct(double,double,double)
.	O
x	float
=	O
FEETtoMETERS	O
(	O
c	*(struct(long,short,short,short,char,char))
->	O
Cg	struct(double,double,double)
.	O
x	float
)	O
;	O
tmp	struct(double,double,double)
.	O
y	short
=	O
FEETtoMETERS	O
(	O
c	*(struct(long,short,short,short,char,char))
->	O
Cg	struct(double,double,double)
.	O
y	short
)	O
;	O
tmp	struct(double,double,double)
.	O
z	short
=	O
FEETtoMETERS	O
(	O
c	*(struct(long,short,short,short,char,char))
->	O
Cg	struct(double,double,double)
.	O
z	short
)	O
;	O
VReverseTransform_	(*(struct(double,double,double)),*(struct(array(array(double)))),*(struct(double,double,double)))->(void)
(	O
&	O
tmp	struct(double,double,double)
,	O
&	O
c	*(struct(long,short,short,short,char,char))
->	O
XYZtoNED	struct(array(array(double)))
,	O
&	O
rvel	struct(double,double,double)
)	O
;	O
rvel	struct(double,double,double)
.	O
x	float
=	O
dpdu	*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),char,char,short,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))))
->	O
vel	struct(float,float,float)
.	O
x	float
-	O
rvel	struct(double,double,double)
.	O
x	float
;	O
rvel	struct(double,double,double)
.	O
y	short
=	O
dpdu	*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),char,char,short,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))))
->	O
vel	struct(float,float,float)
.	O
y	short
-	O
rvel	struct(double,double,double)
.	O
y	short
;	O
rvel	struct(double,double,double)
.	O
z	short
=	O
dpdu	*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),char,char,short,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))))
->	O
vel	struct(float,float,float)
.	O
z	short
-	O
rvel	struct(double,double,double)
.	O
z	short
;	O
vel_meters_per_sec	double
=	O
mag	O
(	O
rvel	struct(double,double,double)
)	O
;	O
if	O
(	O
absorbDISDamage	(*(struct(int,int,int,double,*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*`,*`,*`,double,double,double,double,double,double,double,double,*`,*`,*`,*`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*`,*`,*`,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,struct`,double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*`,*`,*`,*`,struct`,struct`,*`)),double,*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*`)),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))),*(struct(char,char,short,char,char,char,char)),short,short,double,double,*(double))->(int)
(	O
c	*(struct(long,short,short,short,char,char))
,	O
&	O
dpdu	*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),char,char,short,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))))
->	O
burst	struct(struct(char,char,short,char,char,char,char),short,short,short,short)
.	O
munition	struct(char,char,short,char,char,char,char)
,	O
dpdu	*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),char,char,short,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))))
->	O
burst	struct(struct(char,char,short,char,char,char,char),short,short,short,short)
.	O
warhead	short
,	O
dpdu	*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),char,char,short,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))))
->	O
burst	struct(struct(char,char,short,char,char,char,char),short,short,short,short)
.	O
fuze	short
,	O
dist_meters	double
,	O
vel_meters_per_sec	double
,	O
&	O
exp_diameter	double
)	O
==	O
0	int
)	O
{	O
killPlayerEx	(*(struct(int,int,int,double,*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*`,*`,*`,double,double,double,double,double,double,double,double,*`,*`,*`,*`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*`,*`,*`,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,struct`,double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*`,*`,*`,*`,struct`,struct`,*`)),double,*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*`)),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))))->(int)
(	O
c	*(struct(long,short,short,short,char,char))
,	O
"Your aircraft has been destroyed."	*(char)
,	O
(	O
ftype	int
==	O
DIS_FIRE_M61A1	int
?	O
"You were struck by cannon fire."	*(char)
:	O
"Something (presumably a missile) detotated close enough to your aircraft to destroy it."	*(char)
)	O
)	O
;	O
}	O
if	O
(	O
exp_diameter	double
>	O
0.0	int
)	O
{	O
VPoint	struct(double,double,double)
vel	struct(float,float,float)
=	O
{	O
0	int
,	O
0	int
,	O
0	int
}	O
;	O
newExplosion	(*(struct(double,double,double)),*(struct(double,double,double)),double,double,double)->(void)
(	O
&	O
Sg	struct(double,double,double)
,	O
&	O
vel	struct(float,float,float)
,	O
exp_diameter	double
*	O
0.3	int
,	O
exp_diameter	double
,	O
3.0	int
)	O
;	O
}	O
}	O
break	O
;	O
}	O
}	O
int	O
disInit	()->(int)
(	O
void	O
)	O
{	O
int	O
err	long
,	O
count	int
;	O
char	O
name	*(char)
[	O
32	int
]	O
;	O
struct	O
sockaddr_in	struct(short,short,struct(int),array(char))
sin	(double)->(double)
;	O
err	long
=	O
dis_init	(int,int,int,*((int,*(struct(char,char,short,char,char,char,char)),int,*(*(struct`)))->(void)),*((int,int,int,double,array(double),array(double),*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),*(struct(struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,char,char,short,*`)))->(void)))->(int)
(	O
dis_exercise	int
,	O
dis_site	int
,	O
dis_application	int
,	O
disEntityEnterCb	(int,*(struct(char,char,short,char,char,char,char)),int,*(*(struct(int,int,int,double,*(struct`),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct`),double,*(struct`),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct`),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double)))))->(void)
,	O
disDetonationCb	(int,int,int,double,*(double),*(double),*(struct(int,int,int,double,*(struct(*`,int,*`,*`,*`,*`,*`,*`,array(char),array(char),array(char),long,*`,*`,*`,*`,long,array(long),array(long),array(long),long,long,long,int,*`,int,int,int,int,int,int,short,short,int,int,int,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,int,int,int,int,int,double,struct`,struct`,array(struct(short,short,short,short)),int,int,int,long,struct`,struct`)),struct(array(array(double))),struct(double,double,double),double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,struct(array(array(double))),double,double,double,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*(struct(*`,*`,*`,double,double,double,double,double,double,double,double,*`,*`,*`,*`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,struct`,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,*`,*`,*`,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,double,struct`,struct`,double,double,double,double,double,double,double,double,struct`,double,long,long,double,double,double,double,long,array(struct(double,double,double)),array(struct(*(char),int,int,int,double)),*`,*`,*`,*`,struct`,struct`,*`)),double,*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),struct(double,double,double),struct(double,double,double),array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*(struct(short,short,short,array(char),array(char),*`)),array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct(double,double,double),double,*(void),*(void),*(void),struct(double,double,double))),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),char,char,short,*(struct(char,char,short,long,union`)))))->(void)
)	O
;	O
dis_setDRThresholds	(double,double)->(int)
(	O
DIS_LOCATION_THRESHOLD	int
,	O
DIS_ORIENTATION_THRESHOLD	O
)	O
;	O
return	O
err	long
;	O
}	O
void	O
parseinfo	(*(char),*(char),*(char),*(char))->(void)
(	O
char	O
*	O
s	double
,	O
char	O
*	O
a	*(struct(double,double,double))
,	O
char	O
*	O
b	float
,	O
char	O
*	O
c	*(struct(long,short,short,short,char,char))
)	O
{	O
char	O
*	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
;	O
for	O
(	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
=	O
a	*(struct(double,double,double))
;	O
*	O
s	double
;	O
++	O
s	double
,	O
++	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
)	O
if	O
(	O
(	O
*	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
=	O
*	O
s	double
)	O
==	O
' '	O
)	O
{	O
*	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
=	O
'\0'	O
;	O
break	O
;	O
}	O
++	O
s	double
;	O
for	O
(	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
=	O
b	float
;	O
*	O
s	double
;	O
++	O
s	double
,	O
++	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
)	O
if	O
(	O
(	O
*	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
=	O
*	O
s	double
)	O
==	O
' '	O
)	O
{	O
*	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
=	O
'\0'	O
;	O
break	O
;	O
}	O
++	O
s	double
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
c	*(struct(long,short,short,short,char,char))
,	O
s	double
)	O
;	O
return	O
;	O
}	O
static	O
char	O
switches	*(char)
[	O
1024	int
]	O
;	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	*(int)
,	O
char	O
*	O
*	O
argv	array(*(char))
)	O
{	O
struct	O
sockaddr_in	struct(short,short,struct(int),array(char))
sin	(double)->(double)
;	O
int	O
on	int
=	O
1	int
;	O
int	O
i	int
,	O
news	int
;	O
char	O
name	*(char)
[	O
64	int
]	O
;	O
char	O
display	*(struct)
[	O
64	int
]	O
;	O
char	O
*	O
sargv	array(*(char))
[	O
2	int
]	O
;	O
Display	struct
*	O
dpy	*(struct)
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
display	*(struct)
,	O
""	*(char)
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
name	*(char)
,	O
""	*(char)
)	O
;	O
curTime	double
=	O
0.0	int
;	O
real_delta_t	int
=	O
1	int
;	O
depth_cue_steps	int
=	O
8	int
;	O
end_game_threshold_meters	double
=	O
-	O
1.0	int
;	O
end_game_mode	int
=	O
0	int
;	O
transferEntityIdBits	int
=	O
0x4	int
;	O
update_interval_millisec	double
=	O
1000.0	int
/	O
50.0	int
;	O
frame_interval_millisec	double
=	O
1000.0	int
/	O
15.0	int
;	O
watch_frame_rate	int
=	O
0	int
;	O
droneAggressiveness	double
=	O
DEFAULT_DRONE_FACTOR	int
;	O
disAbsoluteTime	int
=	O
0	int
;	O
ptblCount	int
=	O
ctblCount	int
=	O
0	int
;	O
visibility	double
=	O
FEETtoMETERS	O
(	O
50.0	int
*	O
NM	int
)	O
;	O
dis_setTransferControlRequestCallback	(*((*(struct(int,int,int,double,int,*`,double,char,struct`,struct`,struct`,struct`,*`,array(char),int,array(double),array(double),array(double),array(double),array(double),array(double),array(double),array(double),array(double),array(double),*`,*`)),*(struct(struct`,struct`,struct`,long,char,char,struct`,long)))->(int)))->(void)
(	O
transferControlRequestHandler	(*(struct(int,int,int,double,int,*(struct(int,int,int,double,*`,struct`,struct`,double,struct`,struct`,struct`,double,struct`,double,double,double,struct`,struct`,struct`,double,double,double,double,double,double,int,double,double,double,double,double,double,double,double,double,double,double,double,double,array(double),int,double,double,double,double,long,long,long,double,double,double,double,int,double,double,*`,double,*`,struct`,struct`,array(char),array(char),short,double,double,array(short),short,short,short,array(struct(double,double,double)),array(double),array(*(char)),array(*(char)),int,array(struct(*(char),int,int,int,double)),array(struct(short,short,short,array(char),array(char),*(struct(*(struct(*`,array(char),short,double,short,struct`,struct`,struct`,double,double,double,struct`,struct`)),array(char),short,double,short,struct(double,double,double),struct(double,double,double),struct(double,double,double),double,double,double,struct(array(array(double))),struct(array(array(double))))))),*`,array(char),array(char),array(char),array(char),array(char),array(struct(int,struct(double,double,double),double,int,int,int,int,int,int)),int,int,int,int,int,int,struct`,double,*`,*`,*`,struct`)),double,char,struct(struct(short,short),short),struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(double,double,double,double,struct(array(array(double))),struct(array(array(double))),struct(array(array(double))),struct(struct`,struct`,char,char,struct`,struct`,struct`,struct`,struct`,long,struct`,struct`,long,*`)),*(struct(int,int,double,struct`,*`,*`,*`)),array(char),int,array(double),array(double),array(double),array(double),array(double),array(double),array(double),array(double),array(double),array(double),*((*`,*`)->(int)),*(void))),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,char,char,struct(struct(short,short),short),long)))->(int)
)	O
;	O
switches	*(char)
[	O
0	int
]	O
=	O
'\0'	O
;	O
processCommandSwitches	(int,array(*(char)),*(char),*(char),*(char))->(int)
(	O
argc	*(int)
,	O
argv	array(*(char))
,	O
display	*(struct)
,	O
name	*(char)
,	O
switches	*(char)
)	O
;	O
{	O
char	O
name	*(char)
[	O
256	int
]	O
,	O
*	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
;	O
struct	O
hostent	struct(*(char),*(*(char)),int,int,*(*(char)))
*	O
h	int
;	O
gethostname	(*(char),long)->(int)
(	O
name	*(char)
,	O
sizeof	O
(	O
name	*(char)
)	O
)	O
;	O
if	O
(	O
dis_application	int
==	O
DIS_APPLICATION	int
)	O
{	O
if	O
(	O
(	O
h	int
=	O
gethostbyname	(*(char))->(*(struct(*(char),*(*(char)),int,int,*(*(char)))))
(	O
name	*(char)
)	O
)	O
!=	O
(	O
struct	O
hostent	struct(*(char),*(*(char)),int,int,*(*(char)))
*	O
)	O
NULL	O
)	O
{	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
=	O
h	int
->	O
h_addr	O
;	O
dis_application	int
=	O
(	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
[	O
2	int
]	O
<<	O
8	int
)	O
|	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
[	O
3	int
]	O
;	O
}	O
}	O
}	O
if	O
(	O
real_delta_t	int
==	O
0	int
)	O
{	O
redraw_interval	int
=	O
(	O
int	O
)	O
(	O
frame_interval_millisec	double
/	O
update_interval_millisec	double
+	O
0.5	int
)	O
;	O
deltaT	double
=	O
update_interval_millisec	double
/	O
1000.0	int
;	O
halfDeltaTSquared	double
=	O
0.5	int
*	O
deltaT	double
*	O
deltaT	double
;	O
}	O
if	O
(	O
disInit	()->(int)
(	O
)	O
==	O
0	int
)	O
disInUse	int
=	O
1	int
;	O
else	O
disInUse	int
=	O
0	int
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
display	*(struct)
)	O
==	O
0	int
)	O
{	O
if	O
(	O
getenv	(*(char))->(*(char))
(	O
"DISPLAY"	*(char)
)	O
)	O
{	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
display	*(struct)
,	O
getenv	(*(char))->(*(char))
(	O
"DISPLAY"	*(char)
)	O
,	O
sizeof	O
(	O
display	*(struct)
)	O
)	O
;	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Excuse me, but you have no DISPLAY.\n"	*(char)
"How do you use X, anyway?\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
}	O
printf	(*(char))->(int)
(	O
"ACM version %s,  Copyright (C) 1991-1998   Riley Rainey (rrainey@ix.netcom.com)\n                  Copyright (C) 2010        Sergio Lopez (slp@sinrega.org)\n\nThis program is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program; if not, write to the Free Software Foundaation,\nInc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n"	*(char)
,	O
REVISION_STRING	*(char)
)	O
;	O
if	O
(	O
disInUse	int
)	O
printf	(*(char))->(int)
(	O
"DIS protocol active.\n\n"	*(char)
)	O
;	O
init	()->(int)
(	O
"."	*(char)
)	O
;	O
dpy	*(struct)
=	O
XOpenDisplay	(*(char))->(*(struct))
(	O
display	*(struct)
)	O
;	O
news	int
=	O
2	int
;	O
if	O
(	O
newPlayer	()->(int)
(	O
news	int
,	O
display	*(struct)
,	O
name	*(char)
,	O
switches	*(char)
)	O
==	O
0	int
)	O
{	O
}	O
input	()->(int)
(	O
)	O
;	O
}	O
static	O
struct	O
sigvec	()->(int)
alrm	struct
;	O
int	O
doUpdate	int
=	O
0	int
;	O
acm_sig_t	int
myalarm	(int)->(int)
(	O
int	O
s	double
)	O
{	O
doUpdate	int
++	O
;	O
sigvec	()->(int)
(	O
SIGALRM	int
,	O
&	O
alrm	struct
,	O
(	O
struct	O
sigvec	()->(int)
*	O
)	O
0	int
)	O
;	O
}	O
acm_sig_t	int
killed	(int)->(int)
(	O
int	O
i	int
)	O
{	O
printf	(*(char))->(int)
(	O
"\ninterrupt\n"	*(char)
)	O
;	O
shutdown	(int,int)->(int)
(	O
listen_socket	int
,	O
2	int
)	O
;	O
close	(int)->(int)
(	O
listen_socket	int
)	O
;	O
dis_close	()->(int)
(	O
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
input	()->(int)
(	O
void	O
)	O
{	O
fd_set	struct(array(long))
fdset	struct(array(long))
,	O
ofdset	struct(array(long))
;	O
int	O
news	int
=	O
-	O
1	int
,	O
playerchange	int
=	O
0	int
,	O
n	int
,	O
pno	int
,	O
addrlen	int
;	O
int	O
on	int
=	O
1	int
;	O
struct	O
sockaddr	struct(short,array(char))
addr	struct(short,short,struct(int),array(char))
;	O
struct	O
itimerval	struct(struct(long,long),struct(long,long))
update	*((*(struct))->(int))
;	O
char	O
*	O
bp	*(char)
,	O
buf	*(char)
[	O
128	int
]	O
,	O
name	*(char)
[	O
64	int
]	O
,	O
display	*(struct)
[	O
64	int
]	O
,	O
args	array(char)
[	O
256	int
]	O
;	O
struct	O
timeval	struct(long,long)
zero_timeout	struct(long,long)
,	O
update_timeout	struct(long,long)
;	O
signal	(int,*((int)->(void)))->(*((int)->(void)))
(	O
SIGINT	int
,	O
killed	(int)->(int)
)	O
;	O
signal	(int,*((int)->(void)))->(*((int)->(void)))
(	O
SIGQUIT	int
,	O
killed	(int)->(int)
)	O
;	O
zero_timeout	struct(long,long)
.	O
tv_sec	long
=	O
0	int
;	O
zero_timeout	struct(long,long)
.	O
tv_usec	long
=	O
0	int
;	O
update_timeout	struct(long,long)
.	O
tv_sec	long
=	O
0	int
;	O
update_timeout	struct(long,long)
.	O
tv_usec	long
=	O
(	O
long	O
)	O
(	O
update_interval_millisec	double
*	O
1000	int
)	O
;	O
if	O
(	O
real_delta_t	int
==	O
0	int
)	O
{	O
alrm	struct
.	O
sv_handler	O
=	O
myalarm	(int)->(int)
;	O
sigemptyset	(*(struct(array(long))))->(int)
(	O
&	O
alrm	struct
.	O
sv_mask	O
)	O
;	O
alrm	struct
.	O
sv_flags	O
=	O
SV_INTERRUPT	O
;	O
sigvec	()->(int)
(	O
SIGALRM	int
,	O
&	O
alrm	struct
,	O
(	O
struct	O
sigvec	()->(int)
*	O
)	O
0	int
)	O
;	O
update	*((*(struct))->(int))
.	O
it_interval	struct(long,long)
.	O
tv_sec	long
=	O
0	int
;	O
update	*((*(struct))->(int))
.	O
it_interval	struct(long,long)
.	O
tv_usec	long
=	O
(	O
long	O
)	O
(	O
update_interval_millisec	double
*	O
1000	int
)	O
;	O
update	*((*(struct))->(int))
.	O
it_value	struct(long,long)
.	O
tv_sec	long
=	O
0	int
;	O
update	*((*(struct))->(int))
.	O
it_value	struct(long,long)
.	O
tv_usec	long
=	O
(	O
long	O
)	O
(	O
update_interval_millisec	double
*	O
1000	int
)	O
;	O
setitimer	(int,*(struct(struct(long,long),struct(long,long))),*(struct(struct(long,long),struct(long,long))))->(int)
(	O
ITIMER_REAL	int
,	O
&	O
update	*((*(struct))->(int))
,	O
0	int
)	O
;	O
}	O
FD_ZERO	O
(	O
&	O
ofdset	struct(array(long))
)	O
;	O
FD_ZERO	O
(	O
&	O
fdset	struct(array(long))
)	O
;	O
FD_SET	O
(	O
listen_socket	int
,	O
&	O
ofdset	struct(array(long))
)	O
;	O
for	O
(	O
;	O
;	O
)	O
{	O
sigsetmask	(int)->(int)
(	O
0	int
)	O
;	O
fdset	struct(array(long))
=	O
ofdset	struct(array(long))
;	O
if	O
(	O
real_delta_t	int
==	O
0	int
)	O
{	O
pno	int
=	O
select	(int,*(struct(array(long))),*(struct(array(long))),*(struct(array(long))),*(struct(long,long)))->(int)
(	O
32	int
,	O
&	O
fdset	struct(array(long))
,	O
(	O
fd_set	struct(array(long))
*	O
)	O
NULL	O
,	O
(	O
fd_set	struct(array(long))
*	O
)	O
NULL	O
,	O
(	O
struct	O
timeval	struct(long,long)
*	O
)	O
NULL	O
)	O
;	O
}	O
else	O
{	O
if	O
(	O
ptblCount	int
==	O
0	int
)	O
{	O
pno	int
=	O
select	(int,*(struct(array(long))),*(struct(array(long))),*(struct(array(long))),*(struct(long,long)))->(int)
(	O
32	int
,	O
&	O
fdset	struct(array(long))
,	O
(	O
fd_set	struct(array(long))
*	O
)	O
NULL	O
,	O
(	O
fd_set	struct(array(long))
*	O
)	O
NULL	O
,	O
&	O
update_timeout	struct(long,long)
)	O
;	O
}	O
else	O
{	O
pno	int
=	O
select	(int,*(struct(array(long))),*(struct(array(long))),*(struct(array(long))),*(struct(long,long)))->(int)
(	O
32	int
,	O
&	O
fdset	struct(array(long))
,	O
(	O
fd_set	struct(array(long))
*	O
)	O
NULL	O
,	O
(	O
fd_set	struct(array(long))
*	O
)	O
NULL	O
,	O
&	O
zero_timeout	struct(long,long)
)	O
;	O
}	O
doUpdate	int
++	O
;	O
}	O
sigblock	(int)->(int)
(	O
sigmask	O
(	O
SIGALRM	int
)	O
)	O
;	O
if	O
(	O
pno	int
<	O
0	int
)	O
{	O
FD_CLR	O
(	O
listen_socket	int
,	O
&	O
fdset	struct(array(long))
)	O
;	O
if	O
(	O
news	int
>	O
0	int
)	O
FD_CLR	O
(	O
news	int
,	O
&	O
fdset	struct(array(long))
)	O
;	O
}	O
if	O
(	O
doUpdate	int
)	O
{	O
doUpdate	int
=	O
0	int
;	O
redraw	int
(	O
)	O
;	O
}	O
}	O
}	O
int	O
processCommandFile	(*(char),*(int),array(*(char)),*(char),*(char),*(char))->(int)
(	O
const	O
char	O
*	O
fname	*(char)
,	O
int	O
*	O
argc	*(int)
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
,	O
char	O
*	O
display	*(struct)
,	O
char	O
*	O
name	*(char)
,	O
char	O
*	O
switches	*(char)
)	O
{	O
FILE	struct
*	O
f	struct(*((*(struct),*(struct(*`,long,int,long,long,long,int,int)),int,int,int,*(char),int,int,int,int)->(*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)))),*((*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)))->(int)),*((*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)),int,int)->(long)),*((*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)),int,int,long)->(int)),*((*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)),int,int,int,int)->(*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)))),*((*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)),long)->(int)))
;	O
char	O
commands	array(char)
[	O
4096	int
]	O
;	O
int	O
i	int
,	O
c	*(struct(long,short,short,short,char,char))
;	O
f	struct(*((*(struct),*(struct(*`,long,int,long,long,long,int,int)),int,int,int,*(char),int,int,int,int)->(*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)))),*((*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)))->(int)),*((*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)),int,int)->(long)),*((*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)),int,int,long)->(int)),*((*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)),int,int,int,int)->(*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)))),*((*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)),long)->(int)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
fname	*(char)
,	O
"r"	*(char)
)	O
;	O
if	O
(	O
f	struct(*((*(struct),*(struct(*`,long,int,long,long,long,int,int)),int,int,int,*(char),int,int,int,int)->(*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)))),*((*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)))->(int)),*((*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)),int,int)->(long)),*((*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)),int,int,long)->(int)),*((*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)),int,int,int,int)->(*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)))),*((*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)),long)->(int)))
==	O
NULL	O
)	O
{	O
return	O
-	O
1	int
;	O
}	O
i	int
=	O
0	int
;	O
while	O
(	O
(	O
c	*(struct(long,short,short,short,char,char))
=	O
fgetc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
f	struct(*((*(struct),*(struct(*`,long,int,long,long,long,int,int)),int,int,int,*(char),int,int,int,int)->(*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)))),*((*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)))->(int)),*((*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)),int,int)->(long)),*((*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)),int,int,long)->(int)),*((*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)),int,int,int,int)->(*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)))),*((*(struct(int,int,int,int,*`,int,int,int,int,int,int,int,long,long,long,*`,struct`)),long)->(int)))
)	O
)	O
!=	O
EOF	O
)	O
{	O
if	O
(	O
i	int
>=	O
sizeof	O
(	O
commands	array(char)
)	O
)	O
{	O
return	O
-	O
2	int
;	O
}	O
if	O
(	O
c	*(struct(long,short,short,short,char,char))
==	O
'\n'	O
)	O
{	O
c	*(struct(long,short,short,short,char,char))
=	O
' '	O
;	O
}	O
commands	array(char)
[	O
i	int
++	O
]	O
=	O
c	*(struct(long,short,short,short,char,char))
;	O
}	O
commands	array(char)
[	O
i	int
]	O
=	O
'\0'	O
;	O
split	(*(char),*(int),array(*(char)))->(int)
(	O
commands	array(char)
,	O
argc	*(int)
,	O
&	O
argv	array(*(char))
[	O
1	int
]	O
)	O
;	O
processCommandSwitches	(int,array(*(char)),*(char),*(char),*(char))->(int)
(	O
*	O
argc	*(int)
,	O
argv	array(*(char))
,	O
display	*(struct)
,	O
name	*(char)
,	O
switches	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
int	O
processCommandSwitches	(int,array(*(char)),*(char),*(char),*(char))->(int)
(	O
int	O
argc	*(int)
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
,	O
char	O
*	O
display	*(struct)
,	O
char	O
*	O
name	*(char)
,	O
char	O
*	O
switches	*(char)
)	O
{	O
int	O
i	int
;	O
int	O
xargc	int
;	O
char	O
*	O
xargv	array(*(char))
[	O
128	int
]	O
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
argc	*(int)
;	O
++	O
i	int
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-simx"	*(char)
)	O
==	O
0	int
)	O
{	O
dis_site	int
=	O
0	int
;	O
dis_application	int
=	O
0	int
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-dis-site"	*(char)
)	O
==	O
0	int
&&	O
++	O
i	int
<	O
argc	*(int)
)	O
{	O
dis_site	int
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
(	O
char	O
*	O
*	O
)	O
NULL	O
,	O
0	int
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-dis-appl"	*(char)
)	O
==	O
0	int
&&	O
++	O
i	int
<	O
argc	*(int)
)	O
{	O
dis_application	int
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
(	O
char	O
*	O
*	O
)	O
NULL	O
,	O
0	int
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-dis-exercise"	*(char)
)	O
==	O
0	int
&&	O
++	O
i	int
<	O
argc	*(int)
)	O
{	O
dis_exercise	int
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
(	O
char	O
*	O
*	O
)	O
NULL	O
,	O
0	int
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-dis-absolute-time"	*(char)
)	O
==	O
0	int
)	O
{	O
disAbsoluteTime	int
=	O
1	int
;	O
}	O
else	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-dis"	*(char)
,	O
4	int
)	O
==	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Acm DIS arguments:\n"	*(char)
" -dis-exercise <exercise number> (default %d)\n"	*(char)
" -dis-site <site number> (default %d)\n"	*(char)
" -dis-appl <application number> (default %d)\n"	*(char)
" -dis-absolute-time\n"	*(char)
,	O
DIS_EXERCISE	int
,	O
DIS_SITE	int
,	O
DIS_APPLICATION	int
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-init"	*(char)
)	O
==	O
0	int
&&	O
++	O
i	int
<	O
argc	*(int)
)	O
{	O
processCommandFile	(*(char),*(int),array(*(char)),*(char),*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
&	O
xargc	int
,	O
xargv	array(*(char))
,	O
display	*(struct)
,	O
name	*(char)
,	O
switches	*(char)
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-arcade"	*(char)
)	O
==	O
0	int
)	O
{	O
arcadeMode	int
=	O
1	int
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-depth_steps"	*(char)
)	O
==	O
0	int
&&	O
++	O
i	int
<	O
argc	*(int)
)	O
{	O
depth_cue_steps	int
=	O
atoi	(*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
)	O
;	O
if	O
(	O
depth_cue_steps	int
<	O
1	int
)	O
{	O
depth_cue_steps	int
=	O
1	int
;	O
}	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-da"	*(char)
)	O
==	O
0	int
&&	O
++	O
i	int
<	O
argc	*(int)
)	O
{	O
droneAggressiveness	double
=	O
atof	(*(char))->(double)
(	O
argv	array(*(char))
[	O
i	int
]	O
)	O
*	O
NM	int
;	O
if	O
(	O
droneAggressiveness	double
<=	O
MIN_DRONE_FACTOR	int
)	O
{	O
droneAggressiveness	double
=	O
MIN_DRONE_FACTOR	int
;	O
}	O
else	O
if	O
(	O
droneAggressiveness	double
>	O
1.0	int
)	O
{	O
droneAggressiveness	double
=	O
1.0	int
;	O
}	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-display"	*(char)
)	O
==	O
0	int
&&	O
++	O
i	int
<	O
argc	*(int)
)	O
{	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
display	*(struct)
,	O
argv	array(*(char))
[	O
i	int
]	O
,	O
64	int
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-geometry"	*(char)
)	O
==	O
0	int
&&	O
++	O
i	int
<	O
argc	*(int)
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
&	O
switches	*(char)
[	O
strlen	(*(char))->(long)
(	O
switches	*(char)
)	O
]	O
,	O
"|-geometry|%s"	*(char)
,	O
argv	array(*(char))
[	O
i	int
]	O
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-js"	*(char)
)	O
==	O
0	int
)	O
{	O
if	O
(	O
argv	array(*(char))
[	O
i	int
+	O
1	int
]	O
&&	O
*	O
(	O
argv	array(*(char))
[	O
i	int
+	O
1	int
]	O
)	O
!=	O
'-'	O
)	O
{	O
SetJoystickPort	(*(char))->(void)
(	O
argv	array(*(char))
[	O
++	O
i	int
]	O
)	O
;	O
}	O
else	O
{	O
SetJoystickPort	(*(char))->(void)
(	O
"/dev/cua0"	*(char)
)	O
;	O
}	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-name"	*(char)
)	O
==	O
0	int
&&	O
++	O
i	int
<	O
argc	*(int)
)	O
{	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
name	*(char)
,	O
argv	array(*(char))
[	O
i	int
]	O
,	O
64	int
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-plane"	*(char)
)	O
==	O
0	int
&&	O
++	O
i	int
<	O
argc	*(int)
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
&	O
switches	*(char)
[	O
strlen	(*(char))->(long)
(	O
switches	*(char)
)	O
]	O
,	O
"|-plane|%s"	*(char)
,	O
argv	array(*(char))
[	O
i	int
]	O
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-scene"	*(char)
)	O
==	O
0	int
&&	O
++	O
i	int
<	O
argc	*(int)
)	O
{	O
sceneFile	*(char)
=	O
argv	array(*(char))
[	O
i	int
]	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-stealth"	*(char)
)	O
==	O
0	int
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
&	O
switches	*(char)
[	O
strlen	(*(char))->(long)
(	O
switches	*(char)
)	O
]	O
,	O
"|-stealth"	*(char)
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-end-game"	*(char)
)	O
==	O
0	int
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
&	O
switches	*(char)
[	O
strlen	(*(char))->(long)
(	O
switches	*(char)
)	O
]	O
,	O
"|-end-game"	*(char)
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-threshold-range"	*(char)
)	O
==	O
0	int
&&	O
++	O
i	int
<	O
argc	*(int)
)	O
{	O
double	O
end_game_threshold_nm	double
;	O
end_game_threshold_nm	double
=	O
atof	(*(char))->(double)
(	O
argv	array(*(char))
[	O
i	int
]	O
)	O
;	O
if	O
(	O
end_game_threshold_nm	double
<	O
1.0	int
)	O
{	O
end_game_threshold_nm	double
=	O
1.0	int
;	O
}	O
end_game_threshold_meters	double
=	O
FEETtoMETERS	O
(	O
end_game_threshold_nm	double
*	O
NM	int
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-control"	*(char)
)	O
==	O
0	int
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
&	O
switches	*(char)
[	O
strlen	(*(char))->(long)
(	O
switches	*(char)
)	O
]	O
,	O
"|-stealth"	*(char)
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-team"	*(char)
)	O
==	O
0	int
&&	O
++	O
i	int
<	O
argc	*(int)
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
&	O
switches	*(char)
[	O
strlen	(*(char))->(long)
(	O
switches	*(char)
)	O
]	O
,	O
"|-team|%s"	*(char)
,	O
argv	array(*(char))
[	O
i	int
]	O
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-latitude"	*(char)
)	O
==	O
0	int
&&	O
++	O
i	int
<	O
argc	*(int)
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
&	O
switches	*(char)
[	O
strlen	(*(char))->(long)
(	O
switches	*(char)
)	O
]	O
,	O
"|-altitude|%s"	*(char)
,	O
argv	array(*(char))
[	O
i	int
]	O
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-longitude"	*(char)
)	O
==	O
0	int
&&	O
++	O
i	int
<	O
argc	*(int)
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
&	O
switches	*(char)
[	O
strlen	(*(char))->(long)
(	O
switches	*(char)
)	O
]	O
,	O
"|-altitude|%s"	*(char)
,	O
argv	array(*(char))
[	O
i	int
]	O
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-altitude"	*(char)
)	O
==	O
0	int
&&	O
++	O
i	int
<	O
argc	*(int)
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
&	O
switches	*(char)
[	O
strlen	(*(char))->(long)
(	O
switches	*(char)
)	O
]	O
,	O
"|-altitude|%s"	*(char)
,	O
argv	array(*(char))
[	O
i	int
]	O
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-heading"	*(char)
)	O
==	O
0	int
&&	O
++	O
i	int
<	O
argc	*(int)
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
&	O
switches	*(char)
[	O
strlen	(*(char))->(long)
(	O
switches	*(char)
)	O
]	O
,	O
"|-heading|%s"	*(char)
,	O
argv	array(*(char))
[	O
i	int
]	O
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-airspeed-kts"	*(char)
)	O
==	O
0	int
&&	O
++	O
i	int
<	O
argc	*(int)
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
&	O
switches	*(char)
[	O
strlen	(*(char))->(long)
(	O
switches	*(char)
)	O
]	O
,	O
"|-airspeed-kts|%s"	*(char)
,	O
argv	array(*(char))
[	O
i	int
]	O
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-visibility"	*(char)
)	O
==	O
0	int
&&	O
++	O
i	int
<	O
argc	*(int)
)	O
{	O
visibility	double
=	O
atof	(*(char))->(double)
(	O
argv	array(*(char))
[	O
i	int
]	O
)	O
;	O
if	O
(	O
visibility	double
<	O
1.0	int
)	O
{	O
visibility	double
=	O
1.0	int
;	O
}	O
else	O
if	O
(	O
visibility	double
>	O
500.0	int
)	O
{	O
visibility	double
=	O
500.0	int
;	O
}	O
visibility	double
*=	O
NM	int
;	O
visibility	double
=	O
FEETtoMETERS	O
(	O
visibility	double
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-frame-rate"	*(char)
)	O
==	O
0	int
&&	O
++	O
i	int
<	O
argc	*(int)
)	O
{	O
double	O
val	array(int)
=	O
atof	(*(char))->(double)
(	O
argv	array(*(char))
[	O
i	int
]	O
)	O
;	O
frame_interval_millisec	double
=	O
1000.0	int
/	O
val	array(int)
;	O
real_delta_t	int
=	O
0	int
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-update-rate"	*(char)
)	O
==	O
0	int
&&	O
++	O
i	int
<	O
argc	*(int)
)	O
{	O
double	O
val	array(int)
=	O
atof	(*(char))->(double)
(	O
argv	array(*(char))
[	O
i	int
]	O
)	O
;	O
update_interval_millisec	double
=	O
1000.0	int
/	O
val	array(int)
;	O
real_delta_t	int
=	O
0	int
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-watch-frame-rate"	*(char)
)	O
==	O
0	int
)	O
{	O
watch_frame_rate	int
=	O
1	int
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-transfer-entity-mode"	*(char)
)	O
==	O
0	int
&&	O
++	O
i	int
<	O
argc	*(int)
)	O
{	O
transferEntityIdBits	int
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
NULL	O
,	O
0	int
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
i	int
]	O
,	O
"-subject-entity-id"	*(char)
)	O
==	O
0	int
&&	O
++	O
i	int
<	O
argc	*(int)
)	O
{	O
dis_entity_id	struct(struct(short,short),short)
id	char
;	O
if	O
(	O
DISParseEntityID	(*(struct(struct(short,short),short)),*(char),int,*(char))->(int)
(	O
&	O
id	char
,	O
argv	array(*(char))
[	O
i	int
]	O
,	O
strlen	(*(char))->(long)
(	O
argv	array(*(char))
[	O
i	int
]	O
)	O
+	O
1	int
,	O
":/."	*(char)
)	O
==	O
0	int
)	O
{	O
subjectEntityID	struct(struct(short,short),short)
=	O
id	char
;	O
subjectEntitySpecified	int
=	O
1	int
;	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Invalid entity ID \"%s\"\n"	*(char)
,	O
argv	array(*(char))
[	O
i	int
]	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Invalid switch \"%s\"\n"	*(char)
,	O
argv	array(*(char))
[	O
i	int
]	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
break	O
;	O
}	O
}	O
}	O
