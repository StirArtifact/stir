struct	O
rec_sex_parser_s	struct(*(char),long,*(void),bool,*(struct))
{	O
char	O
*	O
in	*(char)
;	O
size_t	long
index	(*(char),int)->(*(char))
;	O
void	O
*	O
scanner	*(void)
;	O
bool	bool
case_insensitive	bool
;	O
rec_sex_ast_t	*(struct)
ast	*(struct)
;	O
}	O
;	O
rec_sex_parser_t	*(struct)
rec_sex_parser_new	()->(*(struct))
(	O
void	O
)	O
{	O
rec_sex_parser_t	*(struct)
new	*(struct(*(char),long,*(void),bool,*(struct)))
;	O
new	*(struct(*(char),long,*(void),bool,*(struct)))
=	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
rec_sex_parser_s	struct(*(char),long,*(void),bool,*(struct))
)	O
)	O
;	O
if	O
(	O
new	*(struct(*(char),long,*(void),bool,*(struct)))
)	O
{	O
new	*(struct(*(char),long,*(void),bool,*(struct)))
->	O
in	*(char)
=	O
NULL	O
;	O
new	*(struct(*(char),long,*(void),bool,*(struct)))
->	O
index	(*(char),int)->(*(char))
=	O
0	int
;	O
new	*(struct(*(char),long,*(void),bool,*(struct)))
->	O
case_insensitive	bool
=	O
false	int
;	O
sexlex_init	()->(int)
(	O
&	O
(	O
new	*(struct(*(char),long,*(void),bool,*(struct)))
->	O
scanner	*(void)
)	O
)	O
;	O
sexset_extra	()->(int)
(	O
new	*(struct(*(char),long,*(void),bool,*(struct)))
,	O
new	*(struct(*(char),long,*(void),bool,*(struct)))
->	O
scanner	*(void)
)	O
;	O
}	O
return	O
new	*(struct(*(char),long,*(void),bool,*(struct)))
;	O
}	O
void	O
*	O
rec_sex_parser_scanner	(*(struct))->(*(void))
(	O
rec_sex_parser_t	*(struct)
parser	*(struct)
)	O
{	O
return	O
parser	*(struct)
->	O
scanner	*(void)
;	O
}	O
void	O
rec_sex_parser_destroy	(*(struct))->(void)
(	O
rec_sex_parser_t	*(struct)
parser	*(struct)
)	O
{	O
if	O
(	O
parser	*(struct)
->	O
scanner	*(void)
)	O
{	O
sexlex_destroy	()->(int)
(	O
parser	*(struct)
->	O
scanner	*(void)
)	O
;	O
}	O
free	(*(void))->(void)
(	O
parser	*(struct)
->	O
in	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
parser	*(struct)
)	O
;	O
}	O
rec_sex_ast_t	*(struct)
rec_sex_parser_ast	(*(struct))->(*(struct))
(	O
rec_sex_parser_t	*(struct)
parser	*(struct)
)	O
{	O
return	O
parser	*(struct)
->	O
ast	*(struct)
;	O
}	O
void	O
rec_sex_parser_set_ast	(*(struct),*(struct))->(void)
(	O
rec_sex_parser_t	*(struct)
parser	*(struct)
,	O
rec_sex_ast_t	*(struct)
ast	*(struct)
)	O
{	O
parser	*(struct)
->	O
ast	*(struct)
=	O
ast	*(struct)
;	O
}	O
bool	bool
rec_sex_parser_case_insensitive	(*(struct))->(bool)
(	O
rec_sex_parser_t	*(struct)
parser	*(struct)
)	O
{	O
return	O
parser	*(struct)
->	O
case_insensitive	bool
;	O
}	O
void	O
rec_sex_parser_set_case_insensitive	(*(struct),bool)->(void)
(	O
rec_sex_parser_t	*(struct)
parser	*(struct)
,	O
bool	bool
case_insensitive	bool
)	O
{	O
parser	*(struct)
->	O
case_insensitive	bool
=	O
case_insensitive	bool
;	O
}	O
void	O
rec_sex_parser_set_in	(*(struct),*(char))->(void)
(	O
rec_sex_parser_t	*(struct)
parser	*(struct)
,	O
const	O
char	O
*	O
str	*(char)
)	O
{	O
if	O
(	O
parser	*(struct)
->	O
in	*(char)
)	O
{	O
free	(*(void))->(void)
(	O
parser	*(struct)
->	O
in	*(char)
)	O
;	O
parser	*(struct)
->	O
in	*(char)
=	O
NULL	O
;	O
}	O
parser	*(struct)
->	O
in	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
str	*(char)
)	O
;	O
parser	*(struct)
->	O
index	(*(char),int)->(*(char))
=	O
0	int
;	O
}	O
int	O
rec_sex_parser_getc	(*(struct))->(int)
(	O
rec_sex_parser_t	*(struct)
parser	*(struct)
)	O
{	O
int	O
res	int
;	O
res	int
=	O
-	O
1	int
;	O
if	O
(	O
(	O
parser	*(struct)
->	O
in	*(char)
)	O
&&	O
(	O
parser	*(struct)
->	O
index	(*(char),int)->(*(char))
<	O
strlen	(*(char))->(long)
(	O
parser	*(struct)
->	O
in	*(char)
)	O
)	O
)	O
{	O
res	int
=	O
parser	*(struct)
->	O
in	*(char)
[	O
parser	*(struct)
->	O
index	(*(char),int)->(*(char))
++	O
]	O
;	O
}	O
return	O
res	int
;	O
}	O
bool	bool
rec_sex_parser_run	(*(struct),*(char))->(bool)
(	O
rec_sex_parser_t	*(struct)
parser	*(struct)
,	O
const	O
char	O
*	O
expr	*(char)
)	O
{	O
int	O
res	int
;	O
rec_sex_parser_set_in	(*(struct),*(char))->(void)
(	O
parser	*(struct)
,	O
expr	*(char)
)	O
;	O
if	O
(	O
!	O
sexparse	(*(struct))->(int)
(	O
parser	*(struct)
)	O
)	O
{	O
res	int
=	O
true	int
;	O
}	O
else	O
{	O
res	int
=	O
false	int
;	O
}	O
return	O
res	int
;	O
}	O
void	O
rec_sex_parser_print_ast	(*(struct))->(void)
(	O
rec_sex_parser_t	*(struct)
parser	*(struct)
)	O
{	O
rec_sex_ast_print	(*(struct))->(void)
(	O
parser	*(struct)
->	O
ast	*(struct)
)	O
;	O
}	O
