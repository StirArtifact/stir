double	O
gsl_ran_weibull	(*(struct(*(struct(*`,long,long,long,*`,*`,*`)),*(void))),double,double)->(double)
(	O
const	O
gsl_rng	struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void))
*	O
r	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
,	O
const	O
double	O
a	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
,	O
const	O
double	O
b	*(struct(long,*(long double)))
)	O
{	O
double	O
x	double
=	O
gsl_rng_uniform_pos	(*(struct(*(struct(*`,long,long,long,*`,*`,*`)),*(void))))->(double)
(	O
r	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
)	O
;	O
double	O
z	struct(array(long double))
=	O
pow	(double,double)->(double)
(	O
-	O
log	(double)->(double)
(	O
x	double
)	O
,	O
1	int
/	O
b	*(struct(long,*(long double)))
)	O
;	O
return	O
a	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
z	struct(array(long double))
;	O
}	O
double	O
gsl_ran_weibull_pdf	(double,double,double)->(double)
(	O
const	O
double	O
x	double
,	O
const	O
double	O
a	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
,	O
const	O
double	O
b	*(struct(long,*(long double)))
)	O
{	O
if	O
(	O
x	double
<	O
0	int
)	O
{	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
x	double
==	O
0	int
)	O
{	O
if	O
(	O
b	*(struct(long,*(long double)))
==	O
1	int
)	O
return	O
1	int
/	O
a	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
else	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
b	*(struct(long,*(long double)))
==	O
1	int
)	O
{	O
return	O
exp	(double)->(double)
(	O
-	O
x	double
/	O
a	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
)	O
/	O
a	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
}	O
else	O
{	O
double	O
p	int
=	O
(	O
b	*(struct(long,*(long double)))
/	O
a	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
)	O
*	O
exp	(double)->(double)
(	O
-	O
pow	(double,double)->(double)
(	O
x	double
/	O
a	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
,	O
b	*(struct(long,*(long double)))
)	O
+	O
(	O
b	*(struct(long,*(long double)))
-	O
1	int
)	O
*	O
log	(double)->(double)
(	O
x	double
/	O
a	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
)	O
)	O
;	O
return	O
p	int
;	O
}	O
}	O
