void	O
usage	(*(struct))->(void)
(	O
mu_stream_t	*(struct)
str	*(char)
)	O
{	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
str	*(char)
,	O
"usage: mcf [-l] TYPE/SUBTYPE FILE [FILE...]\n"	*(char)
)	O
;	O
}	O
int	O
selector	*((*(struct),*(void))->(int))
(	O
mu_mailcap_entry_t	*(struct)
entry	*(*(struct))
,	O
void	O
*	O
data	*(void)
)	O
{	O
char	O
const	O
*	O
type	int
=	O
data	*(void)
;	O
char	O
const	O
*	O
pattern	*(void)
;	O
MU_ASSERT	O
(	O
mu_mailcap_entry_sget_type	(*(struct),*(*(char)))->(int)
(	O
entry	*(*(struct))
,	O
&	O
pattern	*(void)
)	O
)	O
;	O
return	O
mu_mailcap_string_match	(*(char),int,*(char))->(int)
(	O
pattern	*(void)
,	O
0	int
,	O
type	int
)	O
;	O
}	O
static	O
void	O
list_entry	(*(struct),long)->(void)
(	O
mu_mailcap_entry_t	*(struct)
ent	*(struct)
,	O
unsigned	O
long	O
n	*(long)
)	O
;	O
int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
struct	O
mu_mailcap_selector_closure	struct(*((*(struct),*(void))->(int)),*(void),*((*(void))->(void)))
selcl	struct(*((*(struct),*(void))->(int)),*(void),*((*(void))->(void)))
;	O
char	O
*	O
type	int
;	O
int	O
rc	int
;	O
mu_mailcap_finder_t	*(struct)
finder	*(struct)
;	O
mu_mailcap_entry_t	*(struct)
entry	*(*(struct))
;	O
size_t	long
n	*(long)
;	O
int	O
flags	int
=	O
MU_MAILCAP_FLAG_DEFAULT	int
;	O
char	O
*	O
arg	*(char)
;	O
mu_stdstream_setup	(int)->(void)
(	O
MU_STDSTREAM_RESET_NONE	int
)	O
;	O
while	O
(	O
--	O
argc	long
&&	O
(	O
arg	*(char)
=	O
*	O
++	O
argv	*(*(char))
)	O
[	O
0	int
]	O
==	O
'-'	O
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"--"	*(char)
)	O
==	O
0	int
)	O
{	O
argc	long
--	O
;	O
argv	*(*(char))
++	O
;	O
break	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"-l"	*(char)
)	O
==	O
0	int
)	O
flags	int
|=	O
MU_MAILCAP_FLAG_LOCUS	int
;	O
else	O
{	O
mu_error	(*(char))->(int)
(	O
"unrecognized option: %s"	*(char)
,	O
arg	*(char)
)	O
;	O
usage	(*(struct))->(void)
(	O
mu_strerr	*(struct)
)	O
;	O
return	O
1	int
;	O
}	O
}	O
if	O
(	O
argc	long
<	O
2	int
)	O
{	O
usage	(*(struct))->(void)
(	O
mu_strerr	*(struct)
)	O
;	O
return	O
1	int
;	O
}	O
type	int
=	O
argv	*(*(char))
[	O
0	int
]	O
;	O
mu_printf	(*(char))->(int)
(	O
"%s\n"	*(char)
,	O
type	int
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
selcl	struct(*((*(struct),*(void))->(int)),*(void),*((*(void))->(void)))
,	O
0	int
,	O
sizeof	O
(	O
selcl	struct(*((*(struct),*(void))->(int)),*(void),*((*(void))->(void)))
)	O
)	O
;	O
selcl	struct(*((*(struct),*(void))->(int)),*(void),*((*(void))->(void)))
.	O
selector	*((*(struct),*(void))->(int))
=	O
selector	*((*(struct),*(void))->(int))
;	O
selcl	struct(*((*(struct),*(void))->(int)),*(void),*((*(void))->(void)))
.	O
data	*(void)
=	O
type	int
;	O
MU_ASSERT	O
(	O
mu_mailcap_finder_create	(*(*(struct)),int,*(struct(*((*`,*`)->(int)),*(void),*((*`)->(void)))),*(struct(*((*`,*`,*`)->(void)),*(void),*((*`)->(void)))),*(*(char)))->(int)
(	O
&	O
finder	*(struct)
,	O
flags	int
,	O
&	O
selcl	struct(*((*(struct),*(void))->(int)),*(void),*((*(void))->(void)))
,	O
&	O
mu_mailcap_default_error_closure	struct(*((*(void),*(struct(struct`,struct`)),*(char))->(void)),*(void),*((*(void))->(void)))
,	O
argv	*(*(char))
+	O
1	int
)	O
)	O
;	O
n	*(long)
=	O
1	int
;	O
while	O
(	O
(	O
rc	int
=	O
mu_mailcap_finder_next_match	(*(struct),*(*(struct)))->(int)
(	O
finder	*(struct)
,	O
&	O
entry	*(*(struct))
)	O
)	O
==	O
0	int
)	O
{	O
list_entry	(*(struct),long)->(void)
(	O
entry	*(*(struct))
,	O
n	*(long)
++	O
)	O
;	O
}	O
mu_mailcap_finder_destroy	(*(*(struct)))->(void)
(	O
&	O
finder	*(struct)
)	O
;	O
if	O
(	O
rc	int
!=	O
MU_ERR_NOENT	O
)	O
{	O
mu_diag_funcall	(int,*(char),*(char),int)->(void)
(	O
MU_DIAG_ERR	O
,	O
"mu_mailcap_finder_next_match"	*(char)
,	O
NULL	O
,	O
rc	int
)	O
;	O
}	O
return	O
0	int
;	O
}	O
struct	O
list_closure	struct(long)
{	O
unsigned	O
long	O
n	*(long)
;	O
}	O
;	O
static	O
int	O
list_field	(*(char),*(char),*(void))->(int)
(	O
char	O
const	O
*	O
name	*(char)
,	O
char	O
const	O
*	O
value	*(void)
,	O
void	O
*	O
data	*(void)
)	O
{	O
struct	O
list_closure	struct(long)
*	O
fc	*(struct(long))
=	O
data	*(void)
;	O
mu_printf	(*(char))->(int)
(	O
"\tfields[%lu]: "	*(char)
,	O
fc	*(struct(long))
->	O
n	*(long)
++	O
)	O
;	O
if	O
(	O
value	*(void)
)	O
mu_printf	(*(char))->(int)
(	O
"%s=%s"	*(char)
,	O
name	*(char)
,	O
value	*(void)
)	O
;	O
else	O
mu_printf	(*(char))->(int)
(	O
"%s"	*(char)
,	O
name	*(char)
)	O
;	O
mu_printf	(*(char))->(int)
(	O
"\n"	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
static	O
void	O
list_entry	(*(struct),long)->(void)
(	O
mu_mailcap_entry_t	*(struct)
ent	*(struct)
,	O
unsigned	O
long	O
n	*(long)
)	O
{	O
struct	O
mu_locus_range	struct(struct(*(char),int,int),struct(*(char),int,int))
lr	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
=	O
MU_LOCUS_RANGE_INITIALIZER	O
;	O
char	O
const	O
*	O
val	*(char)
;	O
struct	O
list_closure	struct(long)
fc	*(struct(long))
;	O
if	O
(	O
mu_mailcap_entry_get_locus	(*(struct),*(struct(struct(*(char),int,int),struct(*(char),int,int))))->(int)
(	O
ent	*(struct)
,	O
&	O
lr	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
)	O
==	O
0	int
)	O
{	O
mu_stream_lprintf	(*(struct),*(struct(struct(*(char),int,int),struct(*(char),int,int))),*(char))->(void)
(	O
mu_strout	*(struct)
,	O
&	O
lr	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
,	O
"entry[%lu]\n"	*(char)
,	O
n	*(long)
)	O
;	O
mu_locus_range_deinit	(*(struct(struct(*(char),int,int),struct(*(char),int,int))))->(void)
(	O
&	O
lr	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
)	O
;	O
}	O
else	O
mu_printf	(*(char))->(int)
(	O
"entry[%lu]\n"	*(char)
,	O
n	*(long)
)	O
;	O
MU_ASSERT	O
(	O
mu_mailcap_entry_sget_type	(*(struct),*(*(char)))->(int)
(	O
ent	*(struct)
,	O
&	O
val	*(char)
)	O
)	O
;	O
mu_printf	(*(char))->(int)
(	O
"\ttypefield: %s\n"	*(char)
,	O
val	*(char)
)	O
;	O
MU_ASSERT	O
(	O
mu_mailcap_entry_sget_command	(*(struct),*(*(char)))->(int)
(	O
ent	*(struct)
,	O
&	O
val	*(char)
)	O
)	O
;	O
mu_printf	(*(char))->(int)
(	O
"\tview-command: %s\n"	*(char)
,	O
val	*(char)
)	O
;	O
fc	*(struct(long))
.	O
n	*(long)
=	O
1	int
;	O
mu_mailcap_entry_fields_foreach	(*(struct),*((*(char),*(char),*(void))->(int)),*(void))->(int)
(	O
ent	*(struct)
,	O
list_field	(*(char),*(char),*(void))->(int)
,	O
&	O
fc	*(struct(long))
)	O
;	O
mu_printf	(*(char))->(int)
(	O
"\n"	*(char)
)	O
;	O
}	O
