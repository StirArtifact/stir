struct	O
_mu_debug_port	struct(*(struct),int)
{	O
mu_stream_t	*(struct)
stream	*(struct)
;	O
int	O
level	int
;	O
}	O
;	O
static	O
scm_t_port_type	O
*	O
scm_mu_debug_port_type	*(int)
;	O
SCM	(*(int))->((*(void),*(struct))->(int))
mu_scm_make_debug_port	(int)->(int)
(	O
int	O
level	int
)	O
{	O
struct	O
_mu_debug_port	struct(*(struct),int)
*	O
dp	*(struct(*(struct),int))
;	O
mu_stream_t	*(struct)
str	*(struct)
;	O
if	O
(	O
mu_dbgstream_create	(*(*(struct)),int)->(int)
(	O
&	O
str	*(struct)
,	O
level	int
)	O
)	O
return	O
SCM_BOOL_F	O
;	O
dp	*(struct(*(struct),int))
=	O
scm_gc_typed_calloc	()->(int)
(	O
struct	O
_mu_debug_port	struct(*(struct),int)
)	O
;	O
dp	*(struct(*(struct),int))
->	O
level	int
=	O
level	int
;	O
dp	*(struct(*(struct),int))
->	O
stream	*(struct)
=	O
str	*(struct)
;	O
return	O
scm_c_make_port	()->(int)
(	O
scm_mu_debug_port_type	*(int)
,	O
SCM_BUF0	O
|	O
SCM_WRTNG	O
,	O
(	O
scm_t_bits	O
)	O
dp	*(struct(*(struct),int))
)	O
;	O
}	O
static	O
void	O
_mu_debug_port_close	(int)->(void)
(	O
SCM	(*(int))->((*(void),*(struct))->(int))
port	int
)	O
{	O
struct	O
_mu_debug_port	struct(*(struct),int)
*	O
dp	*(struct(*(struct),int))
=	O
MU_DEBUG_PORT	O
(	O
port	int
)	O
;	O
if	O
(	O
dp	*(struct(*(struct),int))
&&	O
dp	*(struct(*(struct),int))
->	O
stream	*(struct)
)	O
{	O
mu_stream_flush	(*(struct))->(int)
(	O
dp	*(struct(*(struct),int))
->	O
stream	*(struct)
)	O
;	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
dp	*(struct(*(struct),int))
->	O
stream	*(struct)
)	O
;	O
}	O
}	O
static	O
size_t	long
_mu_debug_port_write	(int,int,long,long)->(long)
(	O
SCM	(*(int))->((*(void),*(struct))->(int))
port	int
,	O
SCM	(*(int))->((*(void),*(struct))->(int))
src	*(struct(*(char),int,int))
,	O
size_t	long
start	long
,	O
size_t	long
count	*(long)
)	O
{	O
struct	O
_mu_debug_port	struct(*(struct),int)
*	O
dp	*(struct(*(struct),int))
=	O
MU_DEBUG_PORT	O
(	O
port	int
)	O
;	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
dp	*(struct(*(struct),int))
->	O
stream	*(struct)
,	O
SCM_BYTEVECTOR_CONTENTS	()->(int)
(	O
src	*(struct(*(char),int,int))
)	O
+	O
start	long
,	O
count	*(long)
,	O
NULL	O
)	O
;	O
return	O
count	*(long)
;	O
}	O
static	O
int	O
_mu_debug_port_print	(int,int,*(int))->(int)
(	O
SCM	(*(int))->((*(void),*(struct))->(int))
exp	int
,	O
SCM	(*(int))->((*(void),*(struct))->(int))
port	int
,	O
scm_print_state	O
*	O
pstate	*(int)
)	O
{	O
scm_puts	()->(int)
(	O
"#<Mailutis debug port>"	*(char)
,	O
port	int
)	O
;	O
return	O
1	int
;	O
}	O
void	O
mu_scm_debug_port_init	()->(void)
(	O
void	O
)	O
{	O
scm_mu_debug_port_type	*(int)
=	O
scm_make_port_type	()->(int)
(	O
"mu-debug-port"	*(char)
,	O
NULL	O
,	O
_mu_debug_port_write	(int,int,long,long)->(long)
)	O
;	O
scm_set_port_print	()->(int)
(	O
scm_mu_debug_port_type	*(int)
,	O
_mu_debug_port_print	(int,int,*(int))->(int)
)	O
;	O
scm_set_port_close	()->(int)
(	O
scm_mu_debug_port_type	*(int)
,	O
_mu_debug_port_close	(int)->(void)
)	O
;	O
scm_set_port_needs_close_on_gc	()->(int)
(	O
scm_mu_debug_port_type	*(int)
,	O
1	int
)	O
;	O
}	O
