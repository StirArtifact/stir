static	O
void	O
xts_shift	(*(union(array(char),array(long),array(long))),*(union(array(char),array(long),array(long))))->(void)
(	O
union	O
nettle_block16	union(array(char),array(long),array(long))
*	O
dst	*(char)
,	O
const	O
union	O
nettle_block16	union(array(char),array(long),array(long))
*	O
src	*(char)
)	O
{	O
uint64_t	long
carry	long
=	O
src	*(char)
->	O
u64	array(long)
[	O
1	int
]	O
>>	O
63	int
;	O
dst	*(char)
->	O
u64	array(long)
[	O
1	int
]	O
=	O
(	O
src	*(char)
->	O
u64	array(long)
[	O
1	int
]	O
<<	O
1	int
)	O
|	O
(	O
src	*(char)
->	O
u64	array(long)
[	O
0	int
]	O
>>	O
63	int
)	O
;	O
dst	*(char)
->	O
u64	array(long)
[	O
0	int
]	O
=	O
(	O
src	*(char)
->	O
u64	array(long)
[	O
0	int
]	O
<<	O
1	int
)	O
^	O
(	O
0x87	int
&	O
-	O
carry	long
)	O
;	O
}	O
static	O
void	O
check_length	(long,*(char))->(void)
(	O
size_t	long
length	long
,	O
uint8_t	char
*	O
dst	*(char)
)	O
{	O
assert	O
(	O
length	long
>=	O
XTS_BLOCK_SIZE	int
)	O
;	O
if	O
(	O
length	long
<	O
XTS_BLOCK_SIZE	int
)	O
memset	(*(void),int,long)->(*(void))
(	O
dst	*(char)
,	O
'\0'	O
,	O
length	long
)	O
;	O
}	O
void	O
xts_encrypt_message	O
(	O
const	O
void	O
*	O
enc_ctx	*(void)
,	O
const	O
void	O
*	O
twk_ctx	*(void)
,	O
nettle_cipher_func	(*(void),long,*(char),*(char))->(void)
*	O
encf	*((*(void),long,*(char),*(char))->(void))
,	O
const	O
uint8_t	char
*	O
tweak	*(char)
,	O
size_t	long
length	long
,	O
uint8_t	char
*	O
dst	*(char)
,	O
const	O
uint8_t	char
*	O
src	*(char)
)	O
{	O
union	O
nettle_block16	union(array(char),array(long),array(long))
T	union(array(char),array(long),array(long))
;	O
union	O
nettle_block16	union(array(char),array(long),array(long))
P	union(array(char),array(long),array(long))
;	O
check_length	(long,*(char))->(void)
(	O
length	long
,	O
dst	*(char)
)	O
;	O
encf	*((*(void),long,*(char),*(char))->(void))
(	O
twk_ctx	*(void)
,	O
XTS_BLOCK_SIZE	int
,	O
T	union(array(char),array(long),array(long))
.	O
b	array(char)
,	O
tweak	*(char)
)	O
;	O
for	O
(	O
;	O
length	long
>=	O
2	int
*	O
XTS_BLOCK_SIZE	int
||	O
length	long
==	O
XTS_BLOCK_SIZE	int
;	O
length	long
-=	O
XTS_BLOCK_SIZE	int
,	O
src	*(char)
+=	O
XTS_BLOCK_SIZE	int
,	O
dst	*(char)
+=	O
XTS_BLOCK_SIZE	int
)	O
{	O
memxor3	O
(	O
P	union(array(char),array(long),array(long))
.	O
b	array(char)
,	O
src	*(char)
,	O
T	union(array(char),array(long),array(long))
.	O
b	array(char)
,	O
XTS_BLOCK_SIZE	int
)	O
;	O
encf	*((*(void),long,*(char),*(char))->(void))
(	O
enc_ctx	*(void)
,	O
XTS_BLOCK_SIZE	int
,	O
dst	*(char)
,	O
P	union(array(char),array(long),array(long))
.	O
b	array(char)
)	O
;	O
memxor	O
(	O
dst	*(char)
,	O
T	union(array(char),array(long),array(long))
.	O
b	array(char)
,	O
XTS_BLOCK_SIZE	int
)	O
;	O
if	O
(	O
length	long
>	O
XTS_BLOCK_SIZE	int
)	O
xts_shift	(*(union(array(char),array(long),array(long))),*(union(array(char),array(long),array(long))))->(void)
(	O
&	O
T	union(array(char),array(long),array(long))
,	O
&	O
T	union(array(char),array(long),array(long))
)	O
;	O
}	O
if	O
(	O
length	long
)	O
{	O
union	O
nettle_block16	union(array(char),array(long),array(long))
S	union(array(char),array(long),array(long))
;	O
memxor3	O
(	O
P	union(array(char),array(long),array(long))
.	O
b	array(char)
,	O
src	*(char)
,	O
T	union(array(char),array(long),array(long))
.	O
b	array(char)
,	O
XTS_BLOCK_SIZE	int
)	O
;	O
encf	*((*(void),long,*(char),*(char))->(void))
(	O
enc_ctx	*(void)
,	O
XTS_BLOCK_SIZE	int
,	O
S	union(array(char),array(long),array(long))
.	O
b	array(char)
,	O
P	union(array(char),array(long),array(long))
.	O
b	array(char)
)	O
;	O
memxor	O
(	O
S	union(array(char),array(long),array(long))
.	O
b	array(char)
,	O
T	union(array(char),array(long),array(long))
.	O
b	array(char)
,	O
XTS_BLOCK_SIZE	int
)	O
;	O
xts_shift	(*(union(array(char),array(long),array(long))),*(union(array(char),array(long),array(long))))->(void)
(	O
&	O
T	union(array(char),array(long),array(long))
,	O
&	O
T	union(array(char),array(long),array(long))
)	O
;	O
length	long
-=	O
XTS_BLOCK_SIZE	int
;	O
src	*(char)
+=	O
XTS_BLOCK_SIZE	int
;	O
memxor3	O
(	O
P	union(array(char),array(long),array(long))
.	O
b	array(char)
,	O
src	*(char)
,	O
T	union(array(char),array(long),array(long))
.	O
b	array(char)
,	O
length	long
)	O
;	O
memxor3	O
(	O
P	union(array(char),array(long),array(long))
.	O
b	array(char)
+	O
length	long
,	O
S	union(array(char),array(long),array(long))
.	O
b	array(char)
+	O
length	long
,	O
T	union(array(char),array(long),array(long))
.	O
b	array(char)
+	O
length	long
,	O
XTS_BLOCK_SIZE	int
-	O
length	long
)	O
;	O
encf	*((*(void),long,*(char),*(char))->(void))
(	O
enc_ctx	*(void)
,	O
XTS_BLOCK_SIZE	int
,	O
dst	*(char)
,	O
P	union(array(char),array(long),array(long))
.	O
b	array(char)
)	O
;	O
memxor	O
(	O
dst	*(char)
,	O
T	union(array(char),array(long),array(long))
.	O
b	array(char)
,	O
XTS_BLOCK_SIZE	int
)	O
;	O
dst	*(char)
+=	O
XTS_BLOCK_SIZE	int
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
dst	*(char)
,	O
S	union(array(char),array(long),array(long))
.	O
b	array(char)
,	O
length	long
)	O
;	O
}	O
}	O
void	O
xts_decrypt_message	O
(	O
const	O
void	O
*	O
dec_ctx	*(void)
,	O
const	O
void	O
*	O
twk_ctx	*(void)
,	O
nettle_cipher_func	(*(void),long,*(char),*(char))->(void)
*	O
decf	*((*(void),long,*(char),*(char))->(void))
,	O
nettle_cipher_func	(*(void),long,*(char),*(char))->(void)
*	O
encf	*((*(void),long,*(char),*(char))->(void))
,	O
const	O
uint8_t	char
*	O
tweak	*(char)
,	O
size_t	long
length	long
,	O
uint8_t	char
*	O
dst	*(char)
,	O
const	O
uint8_t	char
*	O
src	*(char)
)	O
{	O
union	O
nettle_block16	union(array(char),array(long),array(long))
T	union(array(char),array(long),array(long))
;	O
union	O
nettle_block16	union(array(char),array(long),array(long))
C	union(array(char),array(long),array(long))
;	O
check_length	(long,*(char))->(void)
(	O
length	long
,	O
dst	*(char)
)	O
;	O
encf	*((*(void),long,*(char),*(char))->(void))
(	O
twk_ctx	*(void)
,	O
XTS_BLOCK_SIZE	int
,	O
T	union(array(char),array(long),array(long))
.	O
b	array(char)
,	O
tweak	*(char)
)	O
;	O
for	O
(	O
;	O
length	long
>=	O
2	int
*	O
XTS_BLOCK_SIZE	int
||	O
length	long
==	O
XTS_BLOCK_SIZE	int
;	O
length	long
-=	O
XTS_BLOCK_SIZE	int
,	O
src	*(char)
+=	O
XTS_BLOCK_SIZE	int
,	O
dst	*(char)
+=	O
XTS_BLOCK_SIZE	int
)	O
{	O
memxor3	O
(	O
C	union(array(char),array(long),array(long))
.	O
b	array(char)
,	O
src	*(char)
,	O
T	union(array(char),array(long),array(long))
.	O
b	array(char)
,	O
XTS_BLOCK_SIZE	int
)	O
;	O
decf	*((*(void),long,*(char),*(char))->(void))
(	O
dec_ctx	*(void)
,	O
XTS_BLOCK_SIZE	int
,	O
dst	*(char)
,	O
C	union(array(char),array(long),array(long))
.	O
b	array(char)
)	O
;	O
memxor	O
(	O
dst	*(char)
,	O
T	union(array(char),array(long),array(long))
.	O
b	array(char)
,	O
XTS_BLOCK_SIZE	int
)	O
;	O
if	O
(	O
length	long
>	O
XTS_BLOCK_SIZE	int
)	O
xts_shift	(*(union(array(char),array(long),array(long))),*(union(array(char),array(long),array(long))))->(void)
(	O
&	O
T	union(array(char),array(long),array(long))
,	O
&	O
T	union(array(char),array(long),array(long))
)	O
;	O
}	O
if	O
(	O
length	long
)	O
{	O
union	O
nettle_block16	union(array(char),array(long),array(long))
T1	union(array(char),array(long),array(long))
;	O
union	O
nettle_block16	union(array(char),array(long),array(long))
S	union(array(char),array(long),array(long))
;	O
xts_shift	(*(union(array(char),array(long),array(long))),*(union(array(char),array(long),array(long))))->(void)
(	O
&	O
T1	union(array(char),array(long),array(long))
,	O
&	O
T	union(array(char),array(long),array(long))
)	O
;	O
memxor3	O
(	O
C	union(array(char),array(long),array(long))
.	O
b	array(char)
,	O
src	*(char)
,	O
T1	union(array(char),array(long),array(long))
.	O
b	array(char)
,	O
XTS_BLOCK_SIZE	int
)	O
;	O
decf	*((*(void),long,*(char),*(char))->(void))
(	O
dec_ctx	*(void)
,	O
XTS_BLOCK_SIZE	int
,	O
S	union(array(char),array(long),array(long))
.	O
b	array(char)
,	O
C	union(array(char),array(long),array(long))
.	O
b	array(char)
)	O
;	O
memxor	O
(	O
S	union(array(char),array(long),array(long))
.	O
b	array(char)
,	O
T1	union(array(char),array(long),array(long))
.	O
b	array(char)
,	O
XTS_BLOCK_SIZE	int
)	O
;	O
length	long
-=	O
XTS_BLOCK_SIZE	int
;	O
src	*(char)
+=	O
XTS_BLOCK_SIZE	int
;	O
memxor3	O
(	O
C	union(array(char),array(long),array(long))
.	O
b	array(char)
,	O
src	*(char)
,	O
T	union(array(char),array(long),array(long))
.	O
b	array(char)
,	O
length	long
)	O
;	O
memxor3	O
(	O
C	union(array(char),array(long),array(long))
.	O
b	array(char)
+	O
length	long
,	O
S	union(array(char),array(long),array(long))
.	O
b	array(char)
+	O
length	long
,	O
T	union(array(char),array(long),array(long))
.	O
b	array(char)
+	O
length	long
,	O
XTS_BLOCK_SIZE	int
-	O
length	long
)	O
;	O
decf	*((*(void),long,*(char),*(char))->(void))
(	O
dec_ctx	*(void)
,	O
XTS_BLOCK_SIZE	int
,	O
dst	*(char)
,	O
C	union(array(char),array(long),array(long))
.	O
b	array(char)
)	O
;	O
memxor	O
(	O
dst	*(char)
,	O
T	union(array(char),array(long),array(long))
.	O
b	array(char)
,	O
XTS_BLOCK_SIZE	int
)	O
;	O
dst	*(char)
+=	O
XTS_BLOCK_SIZE	int
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
dst	*(char)
,	O
S	union(array(char),array(long),array(long))
.	O
b	array(char)
,	O
length	long
)	O
;	O
}	O
}	O
