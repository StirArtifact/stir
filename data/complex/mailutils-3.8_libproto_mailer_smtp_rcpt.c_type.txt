int	O
mu_smtp_rcpt_basic	(*(struct),*(char),*(char))->(int)
(	O
mu_smtp_t	*(struct)
smtp	*(struct)
,	O
const	O
char	O
*	O
email	*(char)
,	O
const	O
char	O
*	O
fmt	*(char)
,	O
...	O
)	O
{	O
int	O
status	int
;	O
if	O
(	O
!	O
smtp	*(struct)
)	O
return	O
EINVAL	int
;	O
if	O
(	O
MU_SMTP_FISSET	O
(	O
smtp	*(struct)
,	O
_MU_SMTP_ERR	int
)	O
)	O
return	O
MU_ERR_FAILURE	O
;	O
if	O
(	O
smtp	*(struct)
->	O
state	*(int)
!=	O
MU_SMTP_RCPT	int
&&	O
smtp	*(struct)
->	O
state	*(int)
!=	O
MU_SMTP_MORE	int
)	O
return	O
MU_ERR_SEQ	O
;	O
status	int
=	O
mu_smtp_write	(*(struct),*(char))->(int)
(	O
smtp	*(struct)
,	O
"RCPT TO:<%s>"	*(char)
,	O
email	*(char)
)	O
;	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	*(struct)
,	O
status	int
)	O
;	O
if	O
(	O
fmt	*(char)
)	O
{	O
va_list	array(struct(int,int,*(void),*(void)))
ap	array(struct(int,int,*(void),*(void)))
;	O
status	int
=	O
mu_smtp_write	(*(struct),*(char))->(int)
(	O
smtp	*(struct)
,	O
" "	*(char)
)	O
;	O
va_start	O
(	O
ap	array(struct(int,int,*(void),*(void)))
,	O
fmt	*(char)
)	O
;	O
status	int
=	O
mu_stream_vprintf	(*(struct),*(char),array(struct(int,int,*(void),*(void))))->(int)
(	O
smtp	*(struct)
->	O
carrier	*(struct)
,	O
fmt	*(char)
,	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	*(struct)
,	O
status	int
)	O
;	O
}	O
status	int
=	O
mu_smtp_write	(*(struct),*(char))->(int)
(	O
smtp	*(struct)
,	O
"\r\n"	*(char)
)	O
;	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	*(struct)
,	O
status	int
)	O
;	O
status	int
=	O
mu_smtp_response	(*(struct))->(int)
(	O
smtp	*(struct)
)	O
;	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	*(struct)
,	O
status	int
)	O
;	O
if	O
(	O
smtp	*(struct)
->	O
replcode	array(char)
[	O
0	int
]	O
!=	O
'2'	O
)	O
return	O
MU_ERR_REPLY	O
;	O
smtp	*(struct)
->	O
state	*(int)
=	O
MU_SMTP_MORE	int
;	O
return	O
0	int
;	O
}	O
