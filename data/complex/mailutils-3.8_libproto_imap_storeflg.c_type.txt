int	O
mu_imap_store_flags	(*(struct),int,*(struct),int,int)->(int)
(	O
mu_imap_t	*(struct)
imap	*(struct)
,	O
int	O
uid	int
,	O
mu_msgset_t	*(struct)
msgset	*(struct)
,	O
int	O
op	int
,	O
int	O
flags	int
)	O
{	O
int	O
status	int
;	O
static	O
char	O
*	O
cmd	int
[	O
]	O
=	O
{	O
"FLAGS"	*(char)
,	O
"+FLAGS"	*(char)
,	O
"-FLAGS"	*(char)
}	O
;	O
if	O
(	O
imap	*(struct)
==	O
NULL	O
||	O
(	O
op	int
&	O
MU_IMAP_STORE_OPMASK	int
)	O
>=	O
MU_ARRAY_SIZE	O
(	O
cmd	int
)	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
!	O
imap	*(struct)
->	O
io	*(struct)
)	O
return	O
MU_ERR_NO_TRANSPORT	O
;	O
if	O
(	O
imap	*(struct)
->	O
session_state	enum(int,int,int,int)
<	O
MU_IMAP_SESSION_SELECTED	int
)	O
return	O
MU_ERR_SEQ	O
;	O
switch	O
(	O
imap	*(struct)
->	O
client_state	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
{	O
case	O
MU_IMAP_CLIENT_READY	int
:	O
status	int
=	O
_mu_imap_tag_next	(*(struct(int,enum(int,int,int),int,*(char),long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*(int),*(char),*(struct),*(struct),*(char),int,struct(int,int,int,long,long,long,long,long),array(struct(*((*(void),int,long,*(void))->(void)),*(void))))))->(int)
(	O
imap	*(struct)
)	O
;	O
MU_IMAP_CHECK_EAGAIN	O
(	O
imap	*(struct)
,	O
status	int
)	O
;	O
mu_imapio_printf	(*(struct),*(char))->(int)
(	O
imap	*(struct)
->	O
io	*(struct)
,	O
"%s "	*(char)
,	O
imap	*(struct)
->	O
tag_str	*(char)
)	O
;	O
if	O
(	O
uid	int
)	O
mu_imapio_printf	(*(struct),*(char))->(int)
(	O
imap	*(struct)
->	O
io	*(struct)
,	O
"UID "	*(char)
)	O
;	O
mu_imapio_printf	(*(struct),*(char))->(int)
(	O
imap	*(struct)
->	O
io	*(struct)
,	O
"STORE "	*(char)
)	O
;	O
mu_imapio_send_msgset	(*(struct),*(struct))->(int)
(	O
imap	*(struct)
->	O
io	*(struct)
,	O
msgset	*(struct)
)	O
;	O
mu_imapio_printf	(*(struct),*(char))->(int)
(	O
imap	*(struct)
->	O
io	*(struct)
,	O
" %s"	*(char)
,	O
cmd	int
[	O
op	int
&	O
MU_IMAP_STORE_OPMASK	int
]	O
)	O
;	O
if	O
(	O
op	int
&	O
MU_IMAP_STORE_SILENT	int
)	O
mu_imapio_printf	(*(struct),*(char))->(int)
(	O
imap	*(struct)
->	O
io	*(struct)
,	O
".SILENT"	*(char)
)	O
;	O
mu_imapio_printf	(*(struct),*(char))->(int)
(	O
imap	*(struct)
->	O
io	*(struct)
,	O
" "	*(char)
)	O
;	O
mu_imapio_send_flags	(*(struct),int)->(int)
(	O
imap	*(struct)
->	O
io	*(struct)
,	O
flags	int
)	O
;	O
mu_imapio_printf	(*(struct),*(char))->(int)
(	O
imap	*(struct)
->	O
io	*(struct)
,	O
"\r\n"	*(char)
)	O
;	O
status	int
=	O
mu_imapio_last_error	(*(struct))->(int)
(	O
imap	*(struct)
->	O
io	*(struct)
)	O
;	O
MU_IMAP_CHECK_ERROR	O
(	O
imap	*(struct)
,	O
status	int
)	O
;	O
MU_IMAP_FCLR	O
(	O
imap	*(struct)
,	O
MU_IMAP_RESP	int
)	O
;	O
imap	*(struct)
->	O
client_state	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
=	O
MU_IMAP_CLIENT_STORE_RX	int
;	O
case	O
MU_IMAP_CLIENT_STORE_RX	int
:	O
status	int
=	O
_mu_imap_response	(*(struct(int,enum(int,int,int),int,*(char),long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*(int),*(char),*(struct),*(struct),*(char),int,struct(int,int,int,long,long,long,long,long),array(struct(*((*(void),int,long,*(void))->(void)),*(void))))),*((*(struct(int,enum(int,int,int),int,*`,long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*`,*`,*`,*`,*`,int,struct`,array(struct(*((*(void),int,long,*(void))->(void)),*(void))))),*(struct),*(void))->(void)),*(void))->(int)
(	O
imap	*(struct)
,	O
NULL	O
,	O
NULL	O
)	O
;	O
MU_IMAP_CHECK_EAGAIN	O
(	O
imap	*(struct)
,	O
status	int
)	O
;	O
switch	O
(	O
imap	*(struct)
->	O
response	enum(int,int,int)
)	O
{	O
case	O
MU_IMAP_OK	int
:	O
status	int
=	O
0	int
;	O
break	O
;	O
case	O
MU_IMAP_NO	int
:	O
status	int
=	O
MU_ERR_FAILURE	O
;	O
break	O
;	O
case	O
MU_IMAP_BAD	int
:	O
status	int
=	O
MU_ERR_BADREPLY	O
;	O
break	O
;	O
}	O
imap	*(struct)
->	O
client_state	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
=	O
MU_IMAP_CLIENT_READY	int
;	O
break	O
;	O
default	O
:	O
status	int
=	O
EINPROGRESS	int
;	O
}	O
return	O
status	int
;	O
}	O
