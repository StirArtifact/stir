mu_property_t	*(struct)
mu_mh_profile	*(struct)
;	O
mu_property_t	*(struct)
mu_mh_context	*(struct)
;	O
const	O
char	O
*	O
mu_mhprop_get_value	(*(struct),*(char),*(char))->(*(char))
(	O
mu_property_t	*(struct)
prop	*(struct)
,	O
const	O
char	O
*	O
name	*(char)
,	O
const	O
char	O
*	O
defval	*(char)
)	O
{	O
const	O
char	O
*	O
p	*(char)
;	O
if	O
(	O
!	O
prop	*(struct)
||	O
mu_property_sget_value	(*(struct),*(char),*(*(char)))->(int)
(	O
prop	*(struct)
,	O
name	*(char)
,	O
&	O
p	*(char)
)	O
)	O
p	*(char)
=	O
defval	*(char)
;	O
return	O
p	*(char)
;	O
}	O
int	O
mu_mhprop_iterate	(*(struct),*((*(char),*(char),*(void))->(int)),*(void))->(int)
(	O
mu_property_t	*(struct)
prop	*(struct)
,	O
mu_mhprop_iterator_t	*((*(char),*(char),*(void))->(int))
fp	*((*(char),*(char),*(void))->(int))
,	O
void	O
*	O
data	*(void)
)	O
{	O
mu_iterator_t	*(struct)
itr	*(*(struct))
;	O
int	O
rc	int
;	O
if	O
(	O
!	O
prop	*(struct)
)	O
return	O
EINVAL	int
;	O
rc	int
=	O
mu_property_get_iterator	(*(struct),*(*(struct)))->(int)
(	O
prop	*(struct)
,	O
&	O
itr	*(*(struct))
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
for	O
(	O
mu_iterator_first	(*(struct))->(int)
(	O
itr	*(*(struct))
)	O
;	O
!	O
mu_iterator_is_done	(*(struct))->(int)
(	O
itr	*(*(struct))
)	O
;	O
mu_iterator_next	(*(struct))->(int)
(	O
itr	*(*(struct))
)	O
)	O
{	O
const	O
char	O
*	O
name	*(char)
,	O
*	O
val	*(char)
;	O
mu_iterator_current_kv	(*(struct),*(*(void)),*(*(void)))->(int)
(	O
itr	*(*(struct))
,	O
(	O
const	O
void	O
*	O
*	O
)	O
&	O
name	*(char)
,	O
(	O
void	O
*	O
*	O
)	O
&	O
val	*(char)
)	O
;	O
rc	int
=	O
fp	*((*(char),*(char),*(void))->(int))
(	O
name	*(char)
,	O
val	*(char)
,	O
data	*(void)
)	O
;	O
if	O
(	O
rc	int
)	O
break	O
;	O
}	O
mu_iterator_destroy	(*(*(struct)))->(void)
(	O
&	O
itr	*(*(struct))
)	O
;	O
return	O
rc	int
;	O
}	O
