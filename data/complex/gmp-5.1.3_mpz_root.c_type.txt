int	O
mpz_root	O
(	O
mpz_ptr	*(struct(int,int,*(long)))
root	*(struct(int,int,*(long)))
,	O
mpz_srcptr	*(struct(int,int,*(long)))
u	array(array(long))
,	O
unsigned	O
long	O
int	O
nth	long
)	O
{	O
mp_ptr	*(long)
rootp	*(long)
,	O
up	*(long)
;	O
mp_size_t	long
us	long
,	O
un	long
,	O
rootn	long
,	O
remn	long
;	O
TMP_DECL	O
;	O
us	long
=	O
SIZ	O
(	O
u	array(array(long))
)	O
;	O
if	O
(	O
UNLIKELY	O
(	O
us	long
<	O
0	int
&&	O
(	O
nth	long
&	O
1	int
)	O
==	O
0	int
)	O
)	O
SQRT_OF_NEGATIVE	O
;	O
if	O
(	O
UNLIKELY	O
(	O
nth	long
==	O
0	int
)	O
)	O
DIVIDE_BY_ZERO	O
;	O
if	O
(	O
us	long
==	O
0	int
)	O
{	O
if	O
(	O
root	*(struct(int,int,*(long)))
!=	O
NULL	O
)	O
SIZ	O
(	O
root	*(struct(int,int,*(long)))
)	O
=	O
0	int
;	O
return	O
1	int
;	O
}	O
un	long
=	O
ABS	O
(	O
us	long
)	O
;	O
rootn	long
=	O
(	O
un	long
-	O
1	int
)	O
/	O
nth	long
+	O
1	int
;	O
TMP_MARK	O
;	O
if	O
(	O
root	*(struct(int,int,*(long)))
!=	O
NULL	O
&&	O
u	array(array(long))
!=	O
root	*(struct(int,int,*(long)))
)	O
rootp	*(long)
=	O
MPZ_REALLOC	O
(	O
root	*(struct(int,int,*(long)))
,	O
rootn	long
)	O
;	O
else	O
rootp	*(long)
=	O
TMP_ALLOC_LIMBS	O
(	O
rootn	long
)	O
;	O
up	*(long)
=	O
PTR	O
(	O
u	array(array(long))
)	O
;	O
if	O
(	O
nth	long
==	O
1	int
)	O
{	O
MPN_COPY	O
(	O
rootp	*(long)
,	O
up	*(long)
,	O
un	long
)	O
;	O
remn	long
=	O
0	int
;	O
}	O
else	O
{	O
remn	long
=	O
mpn_rootrem	O
(	O
rootp	*(long)
,	O
NULL	O
,	O
up	*(long)
,	O
un	long
,	O
(	O
mp_limb_t	long
)	O
nth	long
)	O
;	O
}	O
if	O
(	O
root	*(struct(int,int,*(long)))
!=	O
NULL	O
)	O
{	O
SIZ	O
(	O
root	*(struct(int,int,*(long)))
)	O
=	O
us	long
>=	O
0	int
?	O
rootn	long
:	O
-	O
rootn	long
;	O
if	O
(	O
u	array(array(long))
==	O
root	*(struct(int,int,*(long)))
)	O
MPN_COPY	O
(	O
up	*(long)
,	O
rootp	*(long)
,	O
rootn	long
)	O
;	O
}	O
TMP_FREE	O
;	O
return	O
remn	long
==	O
0	int
;	O
}	O
