static	O
int	O
_mime_is_multipart_digest	(*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))->(int)
(	O
mu_mime_t	*(struct)
mime	*(struct)
)	O
{	O
if	O
(	O
mime	*(struct)
->	O
content_type	*(char)
)	O
return	O
mu_c_strncasecmp	(*(char),*(char),long)->(int)
(	O
CT_MULTIPART_DIGEST	*(char)
,	O
mime	*(struct)
->	O
content_type	*(char)
,	O
CT_MULTIPART_DIGEST_LEN	O
)	O
==	O
0	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_mime_append_part	(*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct),*(struct),*(struct),int,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*(struct(*`,*`,int,int)),*(struct(int,*`,*`,*`,int,*`,long,long,*`,*`,long,long,long,long,long,long,*`,*`,long,long,*`,long,*`,long,long,long,long,long,int)),*(struct),*(struct),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),long,long,long)->(int)
(	O
mu_mime_t	*(struct)
mime	*(struct)
,	O
mu_message_t	*(struct)
msg	*(struct)
,	O
size_t	long
offset	long
,	O
size_t	long
len	int
,	O
size_t	long
lines	long
)	O
{	O
struct	O
_mime_part	struct(*(struct(int,*(struct),*(struct),*(struct),int,*(char),long,long,*(*(struct(*`,*`,int,long,long,long))),*(char),long,long,long,long,long,long,*(struct),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct),int,long,long,long)
*	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
,	O
*	O
*	O
part_arr	*(*(struct(*(struct(int,*`,*`,*`,int,*`,long,long,*`,*`,long,long,long,long,long,long,*`,*`,long,long,*`,long,*`,long,long,long,long,long,int)),*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long)))
;	O
int	O
ret	int
;	O
size_t	long
size	long
;	O
mu_header_t	*(struct)
hdr	*(struct)
;	O
if	O
(	O
(	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
=	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
*	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
)	O
)	O
)	O
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
if	O
(	O
mime	*(struct)
->	O
nmtp_parts	long
>=	O
mime	*(struct)
->	O
tparts	long
)	O
{	O
if	O
(	O
(	O
part_arr	*(*(struct(*(struct(int,*`,*`,*`,int,*`,long,long,*`,*`,long,long,long,long,long,long,*`,*`,long,long,*`,long,*`,long,long,long,long,long,int)),*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long)))
=	O
realloc	(*(void),long)->(*(void))
(	O
mime	*(struct)
->	O
mtp_parts	*(*(struct))
,	O
(	O
mime	*(struct)
->	O
tparts	long
+	O
5	int
)	O
*	O
sizeof	O
(	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
)	O
)	O
)	O
==	O
NULL	O
)	O
{	O
free	(*(void))->(void)
(	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
)	O
;	O
return	O
ENOMEM	int
;	O
}	O
mime	*(struct)
->	O
mtp_parts	*(*(struct))
=	O
part_arr	*(*(struct(*(struct(int,*`,*`,*`,int,*`,long,long,*`,*`,long,long,long,long,long,long,*`,*`,long,long,*`,long,*`,long,long,long,long,long,int)),*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,long,long,long)))
;	O
mime	*(struct)
->	O
tparts	long
+=	O
5	int
;	O
}	O
mime	*(struct)
->	O
mtp_parts	*(*(struct))
[	O
mime	*(struct)
->	O
nmtp_parts	long
++	O
]	O
=	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
;	O
if	O
(	O
msg	*(struct)
==	O
NULL	O
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
mu_message_create	(*(*(struct)),*(void))->(int)
(	O
&	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
->	O
msg	*(struct)
,	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
)	O
)	O
==	O
0	int
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
mu_header_create	(*(*(struct)),*(char),long)->(int)
(	O
&	O
hdr	*(struct)
,	O
mime	*(struct)
->	O
header_buf	*(char)
,	O
mime	*(struct)
->	O
header_length	long
)	O
)	O
!=	O
0	int
)	O
{	O
mu_message_destroy	(*(*(struct)),*(void))->(void)
(	O
&	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
->	O
msg	*(struct)
,	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
)	O
;	O
free	(*(void))->(void)
(	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
)	O
;	O
return	O
ret	int
;	O
}	O
mu_message_set_header	(*(struct),*(struct),*(void))->(int)
(	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
->	O
msg	*(struct)
,	O
hdr	*(struct)
,	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
)	O
;	O
}	O
else	O
{	O
free	(*(void))->(void)
(	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
)	O
;	O
return	O
ret	int
;	O
}	O
mime	*(struct)
->	O
header_length	long
=	O
0	int
;	O
if	O
(	O
(	O
ret	int
=	O
mu_header_get_value	O
(	O
hdr	*(struct)
,	O
MU_HEADER_CONTENT_TYPE	*(char)
,	O
NULL	O
,	O
0	int
,	O
&	O
size	long
)	O
)	O
!=	O
0	int
||	O
size	long
==	O
0	int
)	O
{	O
if	O
(	O
_mime_is_multipart_digest	(*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))->(int)
(	O
mime	*(struct)
)	O
)	O
mu_header_set_value	(*(struct),*(char),*(char),int)->(int)
(	O
hdr	*(struct)
,	O
MU_HEADER_CONTENT_TYPE	*(char)
,	O
"message/rfc822"	*(char)
,	O
0	int
)	O
;	O
else	O
mu_header_set_value	(*(struct),*(char),*(char),int)->(int)
(	O
hdr	*(struct)
,	O
MU_HEADER_CONTENT_TYPE	*(char)
,	O
"text/plain"	*(char)
,	O
0	int
)	O
;	O
}	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
->	O
len	int
=	O
len	int
;	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
->	O
lines	long
=	O
lines	long
;	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
->	O
offset	long
=	O
offset	long
;	O
}	O
else	O
{	O
mu_message_ref	(*(struct))->(void)
(	O
msg	*(struct)
)	O
;	O
mu_message_size	(*(struct),*(long))->(int)
(	O
msg	*(struct)
,	O
&	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
->	O
len	int
)	O
;	O
mu_message_lines	(*(struct),*(long))->(int)
(	O
msg	*(struct)
,	O
&	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
->	O
lines	long
)	O
;	O
if	O
(	O
mime	*(struct)
->	O
stream	*(struct)
&&	O
mime	*(struct)
->	O
nmtp_parts	long
>	O
1	int
)	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
->	O
offset	long
=	O
mime	*(struct)
->	O
mtp_parts	*(*(struct))
[	O
mime	*(struct)
->	O
nmtp_parts	long
-	O
2	int
]	O
->	O
len	int
;	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
->	O
msg	*(struct)
=	O
msg	*(struct)
;	O
}	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
->	O
mime	*(struct)
=	O
mime	*(struct)
;	O
return	O
0	int
;	O
}	O
static	O
void	O
_mime_munge_content_header	(*(char))->(void)
(	O
char	O
*	O
field_body	*(char)
)	O
{	O
char	O
*	O
p	*(char)
,	O
*	O
e	int
,	O
*	O
str	*(char)
=	O
field_body	*(char)
;	O
int	O
quoted	int
=	O
0	int
;	O
mu_str_stripws	(*(char))->(*(char))
(	O
field_body	*(char)
)	O
;	O
if	O
(	O
(	O
e	int
=	O
strchr	(*(char),int)->(*(char))
(	O
str	*(char)
,	O
';'	O
)	O
)	O
==	O
NULL	O
)	O
return	O
;	O
while	O
(	O
*	O
e	int
==	O
';'	O
)	O
{	O
p	*(char)
=	O
e	int
;	O
e	int
++	O
;	O
while	O
(	O
*	O
e	int
&&	O
mu_isspace	O
(	O
*	O
e	int
)	O
)	O
e	int
++	O
;	O
memmove	(*(void),*(void),long)->(*(void))
(	O
p	*(char)
+	O
1	int
,	O
e	int
,	O
strlen	(*(char))->(long)
(	O
e	int
)	O
+	O
1	int
)	O
;	O
e	int
=	O
p	*(char)
+	O
1	int
;	O
while	O
(	O
*	O
e	int
&&	O
*	O
e	int
!=	O
'='	O
)	O
e	int
++	O
;	O
e	int
=	O
p	*(char)
=	O
e	int
+	O
1	int
;	O
while	O
(	O
*	O
e	int
&&	O
(	O
quoted	int
||	O
(	O
!	O
_ISSPECIAL	O
(	O
*	O
e	int
)	O
&&	O
!	O
mu_isspace	O
(	O
*	O
e	int
)	O
)	O
)	O
)	O
{	O
if	O
(	O
*	O
e	int
==	O
'\\'	O
)	O
{	O
memmove	(*(void),*(void),long)->(*(void))
(	O
e	int
,	O
e	int
+	O
1	int
,	O
strlen	(*(char))->(long)
(	O
e	int
)	O
)	O
;	O
}	O
else	O
if	O
(	O
*	O
e	int
==	O
'\"'	O
)	O
quoted	int
=	O
~	O
quoted	int
;	O
e	int
++	O
;	O
}	O
}	O
}	O
static	O
char	O
*	O
_mime_get_param	(*(char),*(char),*(int))->(*(char))
(	O
char	O
*	O
field_body	*(char)
,	O
const	O
char	O
*	O
param	*(char)
,	O
int	O
*	O
len	int
)	O
{	O
char	O
*	O
str	*(char)
,	O
*	O
p	*(char)
,	O
*	O
v	union(struct(long),struct(*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct(enum(int,int,int,int),*(char),*(char),*(struct`),*(char),*(char),*(char),long,*(char),*(char),*(struct`),*(char),*(char),union(struct`,struct`,struct`))),long),struct(*(struct)))
,	O
*	O
e	int
;	O
int	O
quoted	int
=	O
0	int
,	O
was_quoted	int
;	O
if	O
(	O
len	int
==	O
NULL	O
||	O
(	O
str	*(char)
=	O
field_body	*(char)
)	O
==	O
NULL	O
)	O
return	O
NULL	O
;	O
p	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
str	*(char)
,	O
';'	O
)	O
;	O
while	O
(	O
p	*(char)
)	O
{	O
p	*(char)
++	O
;	O
if	O
(	O
(	O
v	union(struct(long),struct(*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct(enum(int,int,int,int),*(char),*(char),*(struct`),*(char),*(char),*(char),long,*(char),*(char),*(struct`),*(char),*(char),union(struct`,struct`,struct`))),long),struct(*(struct)))
=	O
strchr	(*(char),int)->(*(char))
(	O
p	*(char)
,	O
'='	O
)	O
)	O
==	O
NULL	O
)	O
break	O
;	O
*	O
len	int
=	O
0	int
;	O
v	union(struct(long),struct(*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct(enum(int,int,int,int),*(char),*(char),*(struct`),*(char),*(char),*(char),long,*(char),*(char),*(struct`),*(char),*(char),union(struct`,struct`,struct`))),long),struct(*(struct)))
=	O
e	int
=	O
v	union(struct(long),struct(*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct(enum(int,int,int,int),*(char),*(char),*(struct`),*(char),*(char),*(char),long,*(char),*(char),*(struct`),*(char),*(char),union(struct`,struct`,struct`))),long),struct(*(struct)))
+	O
1	int
;	O
was_quoted	int
=	O
0	int
;	O
while	O
(	O
*	O
e	int
&&	O
(	O
quoted	int
||	O
(	O
!	O
_ISSPECIAL	O
(	O
*	O
e	int
)	O
&&	O
!	O
mu_isspace	O
(	O
*	O
e	int
)	O
)	O
)	O
)	O
{	O
if	O
(	O
*	O
e	int
==	O
'\"'	O
)	O
quoted	int
=	O
~	O
quoted	int
,	O
was_quoted	int
=	O
1	int
;	O
else	O
(	O
*	O
len	int
)	O
++	O
;	O
e	int
++	O
;	O
}	O
if	O
(	O
mu_c_strncasecmp	(*(char),*(char),long)->(int)
(	O
p	*(char)
,	O
param	*(char)
,	O
strlen	(*(char))->(long)
(	O
param	*(char)
)	O
)	O
)	O
{	O
p	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
e	int
,	O
';'	O
)	O
;	O
continue	O
;	O
}	O
else	O
return	O
was_quoted	int
?	O
v	union(struct(long),struct(*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct(enum(int,int,int,int),*(char),*(char),*(struct`),*(char),*(char),*(char),long,*(char),*(char),*(struct`),*(char),*(char),union(struct`,struct`,struct`))),long),struct(*(struct)))
+	O
1	int
:	O
v	union(struct(long),struct(*(struct(struct(int,int,int,int,int,int,int,int,int,long,*`),struct(int,*`),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(char))),*(struct(enum(int,int,int,int),*(char),*(char),*(struct`),*(char),*(char),*(char),long,*(char),*(char),*(struct`),*(char),*(char),union(struct`,struct`,struct`))),long),struct(*(struct)))
;	O
}	O
return	O
NULL	O
;	O
}	O
static	O
int	O
_mime_setup_buffers	(*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))->(int)
(	O
mu_mime_t	*(struct)
mime	*(struct)
)	O
{	O
if	O
(	O
mime	*(struct)
->	O
cur_buf	*(char)
==	O
NULL	O
&&	O
(	O
mime	*(struct)
->	O
cur_buf	*(char)
=	O
malloc	(long)->(*(void))
(	O
mime	*(struct)
->	O
buf_size	long
)	O
)	O
==	O
NULL	O
)	O
{	O
return	O
ENOMEM	int
;	O
}	O
if	O
(	O
mime	*(struct)
->	O
cur_line	*(char)
==	O
NULL	O
&&	O
(	O
mime	*(struct)
->	O
cur_line	*(char)
=	O
calloc	(long,long)->(*(void))
(	O
mime	*(struct)
->	O
line_size	long
,	O
1	int
)	O
)	O
==	O
NULL	O
)	O
{	O
free	(*(void))->(void)
(	O
mime	*(struct)
->	O
cur_buf	*(char)
)	O
;	O
return	O
ENOMEM	int
;	O
}	O
return	O
0	int
;	O
}	O
static	O
void	O
_mime_append_header_line	(*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))->(void)
(	O
mu_mime_t	*(struct)
mime	*(struct)
)	O
{	O
if	O
(	O
mime	*(struct)
->	O
header_length	long
+	O
mime	*(struct)
->	O
line_ndx	long
>	O
mime	*(struct)
->	O
header_buf_size	long
)	O
{	O
char	O
*	O
nhb	*(char)
;	O
if	O
(	O
(	O
nhb	*(char)
=	O
realloc	(*(void),long)->(*(void))
(	O
mime	*(struct)
->	O
header_buf	*(char)
,	O
mime	*(struct)
->	O
header_length	long
+	O
mime	*(struct)
->	O
line_ndx	long
+	O
128	int
)	O
)	O
==	O
NULL	O
)	O
return	O
;	O
mime	*(struct)
->	O
header_buf	*(char)
=	O
nhb	*(char)
;	O
mime	*(struct)
->	O
header_buf_size	long
=	O
mime	*(struct)
->	O
header_length	long
+	O
mime	*(struct)
->	O
line_ndx	long
+	O
128	int
;	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
mime	*(struct)
->	O
header_buf	*(char)
+	O
mime	*(struct)
->	O
header_length	long
,	O
mime	*(struct)
->	O
cur_line	*(char)
,	O
mime	*(struct)
->	O
line_ndx	long
)	O
;	O
mime	*(struct)
->	O
header_length	long
+=	O
mime	*(struct)
->	O
line_ndx	long
;	O
}	O
static	O
int	O
_mime_parse_mpart_message	(*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))->(int)
(	O
mu_mime_t	*(struct)
mime	*(struct)
)	O
{	O
char	O
*	O
cp	*(struct(int,int,array(char),array(char)))
;	O
size_t	long
blength	long
,	O
mb_length	long
,	O
mb_offset	long
,	O
mb_lines	long
;	O
int	O
ret	int
;	O
size_t	long
nbytes	long
;	O
if	O
(	O
!	O
(	O
mime	*(struct)
->	O
flags	int
&	O
MIME_PARSER_ACTIVE	int
)	O
)	O
{	O
char	O
*	O
boundary	*(char)
;	O
int	O
len	int
;	O
if	O
(	O
(	O
ret	int
=	O
_mime_setup_buffers	(*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))->(int)
(	O
mime	*(struct)
)	O
)	O
!=	O
0	int
)	O
return	O
ret	int
;	O
if	O
(	O
(	O
boundary	*(char)
=	O
_mime_get_param	(*(char),*(char),*(int))->(*(char))
(	O
mime	*(struct)
->	O
content_type	*(char)
,	O
"boundary"	*(char)
,	O
&	O
len	int
)	O
)	O
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
(	O
mime	*(struct)
->	O
boundary	*(char)
=	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
len	int
+	O
1	int
)	O
)	O
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
mime	*(struct)
->	O
boundary	*(char)
,	O
boundary	*(char)
,	O
len	int
)	O
;	O
mime	*(struct)
->	O
cur_offset	long
=	O
0	int
;	O
mime	*(struct)
->	O
line_ndx	long
=	O
0	int
;	O
mime	*(struct)
->	O
parser_state	int
=	O
MIME_STATE_SCAN_BOUNDARY	int
;	O
mime	*(struct)
->	O
flags	int
|=	O
MIME_PARSER_ACTIVE	int
;	O
}	O
mb_length	long
=	O
mime	*(struct)
->	O
body_length	long
;	O
mb_offset	long
=	O
mime	*(struct)
->	O
body_offset	long
;	O
mb_lines	long
=	O
mime	*(struct)
->	O
body_lines	long
;	O
blength	long
=	O
strlen	(*(char))->(long)
(	O
mime	*(struct)
->	O
boundary	*(char)
)	O
;	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
mime	*(struct)
->	O
stream	*(struct)
,	O
mime	*(struct)
->	O
cur_offset	long
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
while	O
(	O
(	O
ret	int
=	O
mu_stream_read	(*(struct),*(void),long,*(long))->(int)
(	O
mime	*(struct)
->	O
stream	*(struct)
,	O
mime	*(struct)
->	O
cur_buf	*(char)
,	O
mime	*(struct)
->	O
buf_size	long
,	O
&	O
nbytes	long
)	O
)	O
==	O
0	int
&&	O
nbytes	long
)	O
{	O
cp	*(struct(int,int,array(char),array(char)))
=	O
mime	*(struct)
->	O
cur_buf	*(char)
;	O
while	O
(	O
1	int
)	O
{	O
if	O
(	O
nbytes	long
)	O
mime	*(struct)
->	O
cur_line	*(char)
[	O
mime	*(struct)
->	O
line_ndx	long
]	O
=	O
*	O
cp	*(struct(int,int,array(char),array(char)))
;	O
if	O
(	O
mime	*(struct)
->	O
parser_state	int
==	O
MIME_STATE_SCAN_BOUNDARY	int
&&	O
(	O
nbytes	long
==	O
0	int
||	O
*	O
cp	*(struct(int,int,array(char),array(char)))
==	O
'\n'	O
)	O
)	O
{	O
char	O
*	O
cp2	*(char)
=	O
mime	*(struct)
->	O
cur_line	*(char)
[	O
0	int
]	O
==	O
'\n'	O
?	O
mime	*(struct)
->	O
cur_line	*(char)
+	O
1	int
:	O
mime	*(struct)
->	O
cur_line	*(char)
;	O
if	O
(	O
mime	*(struct)
->	O
line_ndx	long
>=	O
blength	long
&&	O
(	O
(	O
memcmp	(*(void),*(void),long)->(int)
(	O
cp2	*(char)
,	O
"--"	*(char)
,	O
2	int
)	O
==	O
0	int
&&	O
memcmp	(*(void),*(void),long)->(int)
(	O
cp2	*(char)
+	O
2	int
,	O
mime	*(struct)
->	O
boundary	*(char)
,	O
blength	long
)	O
==	O
0	int
)	O
||	O
memcmp	(*(void),*(void),long)->(int)
(	O
cp2	*(char)
,	O
mime	*(struct)
->	O
boundary	*(char)
,	O
blength	long
)	O
==	O
0	int
)	O
)	O
{	O
mime	*(struct)
->	O
parser_state	int
=	O
MIME_STATE_HEADERS	int
;	O
mime	*(struct)
->	O
flags	int
&=	O
~	O
MIME_PARSER_HAVE_CR	int
;	O
mb_length	long
=	O
mime	*(struct)
->	O
cur_offset	long
-	O
mb_offset	long
-	O
mime	*(struct)
->	O
line_ndx	long
;	O
if	O
(	O
mime	*(struct)
->	O
header_length	long
)	O
{	O
if	O
(	O
mb_lines	long
)	O
mb_lines	long
--	O
;	O
_mime_append_part	(*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct),*(struct),*(struct),int,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*(struct(*`,*`,int,int)),*(struct(int,*`,*`,*`,int,*`,long,long,*`,*`,long,long,long,long,long,long,*`,*`,long,long,*`,long,*`,long,long,long,long,long,int)),*(struct),*(struct),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),long,long,long)->(int)
(	O
mime	*(struct)
,	O
NULL	O
,	O
mb_offset	long
,	O
mb_length	long
,	O
mb_lines	long
)	O
;	O
}	O
if	O
(	O
(	O
&	O
mime	*(struct)
->	O
cur_line	*(char)
[	O
mime	*(struct)
->	O
line_ndx	long
]	O
-	O
cp2	*(char)
-	O
1	int
>	O
blength	long
&&	O
memcmp	(*(void),*(void),long)->(int)
(	O
cp2	*(char)
+	O
blength	long
+	O
2	int
,	O
"--"	*(char)
,	O
2	int
)	O
==	O
0	int
)	O
||	O
(	O
&	O
mime	*(struct)
->	O
cur_line	*(char)
[	O
mime	*(struct)
->	O
line_ndx	long
]	O
-	O
cp2	*(char)
-	O
1	int
==	O
blength	long
&&	O
memcmp	(*(void),*(void),long)->(int)
(	O
cp2	*(char)
+	O
blength	long
,	O
"--"	*(char)
,	O
2	int
)	O
==	O
0	int
)	O
)	O
{	O
mime	*(struct)
->	O
parser_state	int
=	O
MIME_STATE_BEGIN_LINE	int
;	O
mime	*(struct)
->	O
header_length	long
=	O
0	int
;	O
}	O
else	O
mime	*(struct)
->	O
line_ndx	long
=	O
-	O
1	int
;	O
}	O
else	O
if	O
(	O
nbytes	long
)	O
{	O
if	O
(	O
mime	*(struct)
->	O
header_length	long
)	O
mb_lines	long
++	O
;	O
mime	*(struct)
->	O
line_ndx	long
=	O
0	int
;	O
mime	*(struct)
->	O
cur_line	*(char)
[	O
0	int
]	O
=	O
*	O
cp	*(struct(int,int,array(char),array(char)))
;	O
}	O
}	O
if	O
(	O
nbytes	long
==	O
0	int
)	O
break	O
;	O
if	O
(	O
*	O
cp	*(struct(int,int,array(char),array(char)))
==	O
'\n'	O
)	O
{	O
switch	O
(	O
mime	*(struct)
->	O
parser_state	int
)	O
{	O
case	O
MIME_STATE_BEGIN_LINE	int
:	O
mime	*(struct)
->	O
cur_line	*(char)
[	O
0	int
]	O
=	O
*	O
cp	*(struct(int,int,array(char),array(char)))
;	O
mime	*(struct)
->	O
line_ndx	long
=	O
0	int
;	O
mime	*(struct)
->	O
parser_state	int
=	O
MIME_STATE_SCAN_BOUNDARY	int
;	O
break	O
;	O
case	O
MIME_STATE_SCAN_BOUNDARY	int
:	O
break	O
;	O
case	O
MIME_STATE_HEADERS	int
:	O
mime	*(struct)
->	O
line_ndx	long
++	O
;	O
_mime_append_header_line	(*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))->(void)
(	O
mime	*(struct)
)	O
;	O
if	O
(	O
mime	*(struct)
->	O
line_ndx	long
==	O
1	int
||	O
mime	*(struct)
->	O
cur_line	*(char)
[	O
0	int
]	O
==	O
'\r'	O
)	O
{	O
mime	*(struct)
->	O
parser_state	int
=	O
MIME_STATE_SCAN_BOUNDARY	int
;	O
mb_offset	long
=	O
mime	*(struct)
->	O
cur_offset	long
+	O
1	int
;	O
mb_lines	long
=	O
0	int
;	O
}	O
mime	*(struct)
->	O
line_ndx	long
=	O
-	O
1	int
;	O
break	O
;	O
}	O
}	O
mime	*(struct)
->	O
line_ndx	long
++	O
;	O
if	O
(	O
mime	*(struct)
->	O
line_ndx	long
>=	O
mime	*(struct)
->	O
line_size	long
)	O
{	O
size_t	long
newsize	long
=	O
mime	*(struct)
->	O
line_size	long
+	O
MIME_MAX_HDR_LEN	int
;	O
char	O
*	O
p	*(char)
=	O
realloc	(*(void),long)->(*(void))
(	O
mime	*(struct)
->	O
cur_line	*(char)
,	O
newsize	long
)	O
;	O
if	O
(	O
!	O
p	*(char)
)	O
{	O
ret	int
=	O
ENOMEM	int
;	O
break	O
;	O
}	O
mime	*(struct)
->	O
cur_line	*(char)
=	O
p	*(char)
;	O
mime	*(struct)
->	O
line_size	long
=	O
newsize	long
;	O
}	O
mime	*(struct)
->	O
cur_offset	long
++	O
;	O
nbytes	long
--	O
;	O
cp	*(struct(int,int,array(char),array(char)))
++	O
;	O
}	O
}	O
mime	*(struct)
->	O
body_lines	long
=	O
mb_lines	long
;	O
mime	*(struct)
->	O
body_length	long
=	O
mb_length	long
;	O
mime	*(struct)
->	O
body_offset	long
=	O
mb_offset	long
;	O
if	O
(	O
ret	int
!=	O
EAGAIN	int
)	O
{	O
if	O
(	O
mime	*(struct)
->	O
header_length	long
)	O
_mime_append_part	(*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct),*(struct),*(struct),int,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*(struct(*`,*`,int,int)),*(struct(int,*`,*`,*`,int,*`,long,long,*`,*`,long,long,long,long,long,long,*`,*`,long,long,*`,long,*`,long,long,long,long,long,int)),*(struct),*(struct),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),long,long,long)->(int)
(	O
mime	*(struct)
,	O
NULL	O
,	O
mb_offset	long
,	O
mb_length	long
,	O
mb_lines	long
)	O
;	O
mime	*(struct)
->	O
flags	int
&=	O
~	O
MIME_PARSER_ACTIVE	int
;	O
mime	*(struct)
->	O
body_offset	long
=	O
mime	*(struct)
->	O
body_length	long
=	O
mime	*(struct)
->	O
header_length	long
=	O
mime	*(struct)
->	O
body_lines	long
=	O
0	int
;	O
}	O
return	O
ret	int
;	O
}	O
static	O
int	O
_mimepart_body_size	(*(struct),*(long))->(int)
(	O
mu_body_t	*(struct)
body	*(struct)
,	O
size_t	long
*	O
psize	*(long)
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
=	O
mu_body_get_owner	(*(struct))->(*(void))
(	O
body	*(struct)
)	O
;	O
struct	O
_mime_part	struct(*(struct(int,*(struct),*(struct),*(struct),int,*(char),long,long,*(*(struct(*`,*`,int,long,long,long))),*(char),long,long,long,long,long,long,*(struct),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct),int,long,long,long)
*	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
if	O
(	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
psize	*(long)
)	O
*	O
psize	*(long)
=	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
->	O
len	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_mimepart_body_lines	(*(struct),*(long))->(int)
(	O
mu_body_t	*(struct)
body	*(struct)
,	O
size_t	long
*	O
plines	*(long)
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
=	O
mu_body_get_owner	(*(struct))->(*(void))
(	O
body	*(struct)
)	O
;	O
struct	O
_mime_part	struct(*(struct(int,*(struct),*(struct),*(struct),int,*(char),long,long,*(*(struct(*`,*`,int,long,long,long))),*(char),long,long,long,long,long,long,*(struct),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct),int,long,long,long)
*	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
if	O
(	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
plines	*(long)
)	O
*	O
plines	*(long)
=	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
->	O
lines	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
retain_charset	(*(char),*(void),*(void))->(int)
(	O
char	O
const	O
*	O
name	*(char)
,	O
void	O
*	O
value	*(void)
MU_ARG_UNUSED	O
,	O
void	O
*	O
data	*(void)
MU_ARG_UNUSED	O
)	O
{	O
return	O
strcmp	(*(char),*(char))->(int)
(	O
name	*(char)
,	O
"charset"	*(char)
)	O
!=	O
0	int
;	O
}	O
static	O
int	O
_mime_set_content_type	(*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))->(int)
(	O
mu_mime_t	*(struct)
mime	*(struct)
)	O
{	O
const	O
char	O
*	O
content_type	*(char)
;	O
mu_header_t	*(struct)
hdr	*(struct)
=	O
NULL	O
;	O
size_t	long
size	long
;	O
int	O
ret	int
;	O
if	O
(	O
mime	*(struct)
->	O
hdrs	*(struct)
==	O
NULL	O
)	O
return	O
0	int
;	O
if	O
(	O
mime	*(struct)
->	O
nmtp_parts	long
>	O
1	int
)	O
{	O
char	O
*	O
cstr	*(char)
;	O
if	O
(	O
mime	*(struct)
->	O
flags	int
&	O
MIME_ADDED_MULTIPART_CT	int
)	O
return	O
0	int
;	O
if	O
(	O
mime	*(struct)
->	O
flags	int
&	O
MU_MIME_MULTIPART_MIXED	int
)	O
content_type	*(char)
=	O
"multipart/mixed; boundary="	*(char)
;	O
else	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
mime	*(struct)
->	O
nmtp_parts	long
;	O
i	long
++	O
)	O
{	O
mu_header_t	*(struct)
hdr	*(struct)
;	O
char	O
*	O
val	array(int)
;	O
int	O
rc	int
;	O
mu_message_get_header	(*(struct),*(*(struct)))->(int)
(	O
mime	*(struct)
->	O
mtp_parts	*(*(struct))
[	O
i	long
]	O
->	O
msg	*(struct)
,	O
&	O
hdr	*(struct)
)	O
;	O
mu_header_remove	(*(struct),*(char),int)->(int)
(	O
hdr	*(struct)
,	O
MU_HEADER_CONTENT_DISPOSITION	*(char)
,	O
1	int
)	O
;	O
rc	int
=	O
mu_header_aget_value_unfold	O
(	O
hdr	*(struct)
,	O
MU_HEADER_CONTENT_TYPE	*(char)
,	O
&	O
val	array(int)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
mu_content_type_t	*(struct(*(char),*(char),*(char),*(struct)))
ct	*(struct(*(char),*(char),*(char),*(struct)))
;	O
rc	int
=	O
mu_content_type_parse	(*(char),*(char),*(*(struct(*(char),*(char),*(char),*(struct`)))))->(int)
(	O
val	array(int)
,	O
NULL	O
,	O
&	O
ct	*(struct(*(char),*(char),*(char),*(struct)))
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
char	O
*	O
type	int
;	O
mu_assoc_mark	(*(struct),*((*(char),*(void),*(void))->(int)),*(void))->(int)
(	O
ct	*(struct(*(char),*(char),*(char),*(struct)))
->	O
param	*(char)
,	O
retain_charset	(*(char),*(void),*(void))->(int)
,	O
NULL	O
)	O
;	O
mu_assoc_sweep	(*(struct))->(int)
(	O
ct	*(struct(*(char),*(char),*(char),*(struct)))
->	O
param	*(char)
)	O
;	O
rc	int
=	O
mu_asprintf	(*(*(char)),*(char))->(int)
(	O
&	O
type	int
,	O
"%s/%s"	*(char)
,	O
ct	*(struct(*(char),*(char),*(char),*(struct)))
->	O
type	int
,	O
ct	*(struct(*(char),*(char),*(char),*(struct)))
->	O
subtype	*(char)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
mu_mime_header_set	(*(struct),*(char),*(char),*(struct))->(int)
(	O
hdr	*(struct)
,	O
MU_HEADER_CONTENT_TYPE	*(char)
,	O
type	int
,	O
ct	*(struct(*(char),*(char),*(char),*(struct)))
->	O
param	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
type	int
)	O
;	O
}	O
mu_content_type_destroy	(*(*(struct(*(char),*(char),*(char),*(struct`)))))->(void)
(	O
&	O
ct	*(struct(*(char),*(char),*(char),*(struct)))
)	O
;	O
}	O
}	O
}	O
content_type	*(char)
=	O
"multipart/alternative; boundary="	*(char)
;	O
}	O
if	O
(	O
mime	*(struct)
->	O
boundary	*(char)
==	O
NULL	O
)	O
{	O
char	O
boundary	*(char)
[	O
128	int
]	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
boundary	*(char)
,	O
sizeof	O
boundary	*(char)
,	O
"%ld-%ld=:%ld"	*(char)
,	O
(	O
long	O
)	O
random	()->(long)
(	O
)	O
,	O
(	O
long	O
)	O
time	struct(long,long)
(	O
0	int
)	O
,	O
(	O
long	O
)	O
getpid	()->(int)
(	O
)	O
)	O
;	O
if	O
(	O
(	O
mime	*(struct)
->	O
boundary	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
boundary	*(char)
)	O
)	O
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
}	O
size	long
=	O
strlen	(*(char))->(long)
(	O
content_type	*(char)
)	O
+	O
2	int
+	O
strlen	(*(char))->(long)
(	O
mime	*(struct)
->	O
boundary	*(char)
)	O
+	O
1	int
;	O
cstr	*(char)
=	O
malloc	(long)->(*(void))
(	O
size	long
)	O
;	O
if	O
(	O
!	O
cstr	*(char)
)	O
return	O
ENOMEM	int
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
cstr	*(char)
,	O
content_type	*(char)
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
cstr	*(char)
,	O
"\""	*(char)
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
cstr	*(char)
,	O
mime	*(struct)
->	O
boundary	*(char)
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
cstr	*(char)
,	O
"\""	*(char)
)	O
;	O
mime	*(struct)
->	O
flags	int
|=	O
MIME_ADDED_MULTIPART_CT	int
;	O
ret	int
=	O
mu_header_set_value	(*(struct),*(char),*(char),int)->(int)
(	O
mime	*(struct)
->	O
hdrs	*(struct)
,	O
MU_HEADER_CONTENT_TYPE	*(char)
,	O
cstr	*(char)
,	O
1	int
)	O
;	O
free	(*(void))->(void)
(	O
cstr	*(char)
)	O
;	O
}	O
else	O
{	O
if	O
(	O
(	O
mime	*(struct)
->	O
flags	int
&	O
(	O
MIME_ADDED_CT	int
|	O
MIME_ADDED_MULTIPART_CT	int
)	O
)	O
==	O
MIME_ADDED_CT	int
)	O
return	O
0	int
;	O
mime	*(struct)
->	O
flags	int
&=	O
~	O
MIME_ADDED_MULTIPART_CT	int
;	O
if	O
(	O
mime	*(struct)
->	O
nmtp_parts	long
)	O
mu_message_get_header	(*(struct),*(*(struct)))->(int)
(	O
mime	*(struct)
->	O
mtp_parts	*(*(struct))
[	O
0	int
]	O
->	O
msg	*(struct)
,	O
&	O
hdr	*(struct)
)	O
;	O
if	O
(	O
hdr	*(struct)
==	O
NULL	O
||	O
mu_header_sget_value	O
(	O
hdr	*(struct)
,	O
MU_HEADER_CONTENT_TYPE	*(char)
,	O
&	O
content_type	*(char)
)	O
)	O
content_type	*(char)
=	O
"text/plain; charset=us-ascii"	*(char)
;	O
ret	int
=	O
mu_header_set_value	(*(struct),*(char),*(char),int)->(int)
(	O
mime	*(struct)
->	O
hdrs	*(struct)
,	O
MU_HEADER_CONTENT_TYPE	*(char)
,	O
content_type	*(char)
,	O
1	int
)	O
;	O
if	O
(	O
ret	int
)	O
return	O
ret	int
;	O
if	O
(	O
hdr	*(struct)
)	O
{	O
const	O
char	O
*	O
content_te	*(char)
;	O
if	O
(	O
mu_header_sget_value	O
(	O
hdr	*(struct)
,	O
MU_HEADER_CONTENT_TRANSFER_ENCODING	*(char)
,	O
&	O
content_te	*(char)
)	O
==	O
0	int
)	O
ret	int
=	O
mu_header_set_value	(*(struct),*(char),*(char),int)->(int)
(	O
mime	*(struct)
->	O
hdrs	*(struct)
,	O
MU_HEADER_CONTENT_TRANSFER_ENCODING	*(char)
,	O
content_te	*(char)
,	O
1	int
)	O
;	O
if	O
(	O
ret	int
==	O
0	int
&&	O
mu_header_sget_value	O
(	O
hdr	*(struct)
,	O
MU_HEADER_CONTENT_DESCRIPTION	*(char)
,	O
&	O
content_te	*(char)
)	O
==	O
0	int
)	O
ret	int
=	O
mu_header_set_value	(*(struct),*(char),*(char),int)->(int)
(	O
mime	*(struct)
->	O
hdrs	*(struct)
,	O
MU_HEADER_CONTENT_DESCRIPTION	*(char)
,	O
content_te	*(char)
,	O
1	int
)	O
;	O
}	O
}	O
mime	*(struct)
->	O
flags	int
|=	O
MIME_ADDED_CT	int
;	O
return	O
ret	int
;	O
}	O
static	O
int	O
_mime_part_size	(*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(long))->(int)
(	O
mu_mime_t	*(struct)
mime	*(struct)
,	O
size_t	long
*	O
psize	*(long)
)	O
{	O
size_t	long
total	long
;	O
int	O
ret	int
;	O
if	O
(	O
mime	*(struct)
->	O
nmtp_parts	long
==	O
0	int
)	O
{	O
*	O
psize	*(long)
=	O
0	int
;	O
return	O
0	int
;	O
}	O
if	O
(	O
(	O
ret	int
=	O
_mime_set_content_type	(*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))->(int)
(	O
mime	*(struct)
)	O
)	O
!=	O
0	int
)	O
return	O
ret	int
;	O
if	O
(	O
mime	*(struct)
->	O
nmtp_parts	long
==	O
1	int
)	O
{	O
ret	int
=	O
mu_message_size	(*(struct),*(long))->(int)
(	O
mime	*(struct)
->	O
mtp_parts	*(*(struct))
[	O
0	int
]	O
->	O
msg	*(struct)
,	O
&	O
total	long
)	O
;	O
}	O
else	O
{	O
size_t	long
i	long
,	O
size	long
,	O
boundary_len	long
;	O
boundary_len	long
=	O
strlen	(*(char))->(long)
(	O
mime	*(struct)
->	O
boundary	*(char)
)	O
;	O
total	long
=	O
boundary_len	long
+	O
3	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
mime	*(struct)
->	O
nmtp_parts	long
;	O
i	long
++	O
)	O
{	O
ret	int
=	O
mu_message_size	(*(struct),*(long))->(int)
(	O
mime	*(struct)
->	O
mtp_parts	*(*(struct))
[	O
i	long
]	O
->	O
msg	*(struct)
,	O
&	O
size	long
)	O
;	O
if	O
(	O
ret	int
)	O
break	O
;	O
total	long
+=	O
size	long
+	O
boundary_len	long
+	O
4	int
;	O
}	O
total	long
+=	O
2	int
;	O
}	O
*	O
psize	*(long)
=	O
total	long
;	O
return	O
ret	int
;	O
}	O
struct	O
_mime_body_stream	struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(*(char)))),*(struct(int,*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,*(char),long,long,*(*(struct(*`,*`,int,long,long,long))),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))
{	O
struct	O
_mu_stream	struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),long)->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(*(char))))
stream	*(struct)
;	O
mu_mime_t	*(struct)
mime	*(struct)
;	O
}	O
;	O
static	O
int	O
_mime_body_stream_size	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(long))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
mu_off_t	long
*	O
psize	*(long)
)	O
{	O
struct	O
_mime_body_stream	struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(*(char)))),*(struct(int,*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,*(char),long,long,*(*(struct(*`,*`,int,long,long,long))),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))
*	O
mstr	*(struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))),*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int))))
=	O
(	O
struct	O
_mime_body_stream	struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(*(char)))),*(struct(int,*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,*(char),long,long,*(*(struct(*`,*`,int,long,long,long))),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))
*	O
)	O
stream	*(struct)
;	O
mu_mime_t	*(struct)
mime	*(struct)
=	O
mstr	*(struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))),*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int))))
->	O
mime	*(struct)
;	O
size_t	long
sz	*(long)
;	O
int	O
rc	int
=	O
_mime_part_size	(*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(long))->(int)
(	O
mime	*(struct)
,	O
&	O
sz	*(long)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
*	O
psize	*(long)
=	O
sz	*(long)
;	O
return	O
rc	int
;	O
}	O
static	O
void	O
mime_reset_state	(*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))->(void)
(	O
mu_mime_t	*(struct)
mime	*(struct)
)	O
{	O
mime	*(struct)
->	O
cur_offset	long
=	O
0	int
;	O
mime	*(struct)
->	O
cur_part	long
=	O
0	int
;	O
mime	*(struct)
->	O
part_offset	long
=	O
0	int
;	O
if	O
(	O
mime	*(struct)
->	O
nmtp_parts	long
>	O
1	int
)	O
mime	*(struct)
->	O
flags	int
|=	O
MIME_INSERT_BOUNDARY	int
;	O
}	O
static	O
int	O
_mime_body_stream_seek	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),long,*(long))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
mu_off_t	long
off	long
,	O
mu_off_t	long
*	O
presult	*(long)
)	O
{	O
struct	O
_mime_body_stream	struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(*(char)))),*(struct(int,*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,*(char),long,long,*(*(struct(*`,*`,int,long,long,long))),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))
*	O
mstr	*(struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))),*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int))))
=	O
(	O
struct	O
_mime_body_stream	struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(*(char)))),*(struct(int,*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,*(char),long,long,*(*(struct(*`,*`,int,long,long,long))),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))
*	O
)	O
stream	*(struct)
;	O
mu_mime_t	*(struct)
mime	*(struct)
=	O
mstr	*(struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))),*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int))))
->	O
mime	*(struct)
;	O
if	O
(	O
off	long
==	O
0	int
)	O
mime_reset_state	(*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))->(void)
(	O
mime	*(struct)
)	O
;	O
if	O
(	O
off	long
!=	O
mime	*(struct)
->	O
cur_offset	long
)	O
{	O
int	O
rc	int
;	O
mu_stream_t	*(struct)
nullstr	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
;	O
if	O
(	O
mime	*(struct)
->	O
flags	int
&	O
MIME_SEEK_ACTIVE	int
)	O
return	O
ESPIPE	int
;	O
mime	*(struct)
->	O
flags	int
|=	O
MIME_SEEK_ACTIVE	int
;	O
rc	int
=	O
mu_nullstream_create	(*(*(struct)),int)->(int)
(	O
&	O
nullstr	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
,	O
MU_STREAM_WRITE	int
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
mu_off_t	long
total	long
;	O
rc	int
=	O
mu_stream_copy	(*(struct),*(struct),long,*(long))->(int)
(	O
nullstr	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
,	O
stream	*(struct)
,	O
off	long
,	O
&	O
total	long
)	O
;	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
nullstr	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
&&	O
total	long
!=	O
off	long
)	O
rc	int
=	O
ESPIPE	int
;	O
}	O
mime	*(struct)
->	O
flags	int
&=	O
~	O
MIME_SEEK_ACTIVE	int
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
}	O
*	O
presult	*(long)
=	O
off	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_mime_body_stream_read	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,*(long))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
char	O
*	O
buf	*(struct)
,	O
size_t	long
buflen	long
,	O
size_t	long
*	O
nbytes	long
)	O
{	O
struct	O
_mime_body_stream	struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(*(char)))),*(struct(int,*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,*(char),long,long,*(*(struct(*`,*`,int,long,long,long))),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))
*	O
mstr	*(struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))),*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int))))
=	O
(	O
struct	O
_mime_body_stream	struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(*(char)))),*(struct(int,*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,*(char),long,long,*(*(struct(*`,*`,int,long,long,long))),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))
*	O
)	O
stream	*(struct)
;	O
mu_mime_t	*(struct)
mime	*(struct)
=	O
mstr	*(struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))),*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int))))
->	O
mime	*(struct)
;	O
int	O
ret	int
=	O
0	int
;	O
size_t	long
total	long
=	O
0	int
;	O
if	O
(	O
mime	*(struct)
->	O
nmtp_parts	long
==	O
0	int
)	O
{	O
*	O
nbytes	long
=	O
0	int
;	O
return	O
0	int
;	O
}	O
if	O
(	O
(	O
ret	int
=	O
_mime_set_content_type	(*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))->(int)
(	O
mime	*(struct)
)	O
)	O
==	O
0	int
)	O
{	O
do	O
{	O
size_t	long
part_nbytes	long
=	O
0	int
;	O
if	O
(	O
buflen	long
==	O
0	int
)	O
break	O
;	O
if	O
(	O
mime	*(struct)
->	O
nmtp_parts	long
>	O
1	int
)	O
{	O
size_t	long
len	int
;	O
if	O
(	O
mime	*(struct)
->	O
flags	int
&	O
MIME_INSERT_BOUNDARY	int
)	O
{	O
if	O
(	O
(	O
mime	*(struct)
->	O
flags	int
&	O
MIME_ADDING_BOUNDARY	int
)	O
==	O
0	int
)	O
{	O
mime	*(struct)
->	O
boundary_len	long
=	O
strlen	(*(char))->(long)
(	O
mime	*(struct)
->	O
boundary	*(char)
)	O
;	O
mime	*(struct)
->	O
preamble	long
=	O
2	int
;	O
if	O
(	O
mime	*(struct)
->	O
cur_part	long
==	O
mime	*(struct)
->	O
nmtp_parts	long
)	O
mime	*(struct)
->	O
postamble	long
=	O
2	int
;	O
mime	*(struct)
->	O
flags	int
|=	O
MIME_ADDING_BOUNDARY	int
;	O
}	O
while	O
(	O
mime	*(struct)
->	O
preamble	long
)	O
{	O
mime	*(struct)
->	O
preamble	long
--	O
;	O
ADD_CHAR	O
(	O
buf	*(struct)
,	O
'-'	O
,	O
mime	*(struct)
->	O
cur_offset	long
,	O
buflen	long
,	O
total	long
,	O
nbytes	long
)	O
;	O
}	O
len	int
=	O
strlen	(*(char))->(long)
(	O
mime	*(struct)
->	O
boundary	*(char)
)	O
-	O
mime	*(struct)
->	O
boundary_len	long
;	O
while	O
(	O
mime	*(struct)
->	O
boundary_len	long
)	O
{	O
mime	*(struct)
->	O
boundary_len	long
--	O
;	O
ADD_CHAR	O
(	O
buf	*(struct)
,	O
mime	*(struct)
->	O
boundary	*(char)
[	O
len	int
++	O
]	O
,	O
mime	*(struct)
->	O
cur_offset	long
,	O
buflen	long
,	O
total	long
,	O
nbytes	long
)	O
;	O
}	O
while	O
(	O
mime	*(struct)
->	O
postamble	long
)	O
{	O
mime	*(struct)
->	O
postamble	long
--	O
;	O
ADD_CHAR	O
(	O
buf	*(struct)
,	O
'-'	O
,	O
mime	*(struct)
->	O
cur_offset	long
,	O
buflen	long
,	O
total	long
,	O
nbytes	long
)	O
;	O
}	O
mime	*(struct)
->	O
flags	int
&=	O
~	O
(	O
MIME_INSERT_BOUNDARY	int
|	O
MIME_ADDING_BOUNDARY	int
)	O
;	O
mime	*(struct)
->	O
part_offset	long
=	O
0	int
;	O
ADD_CHAR	O
(	O
buf	*(struct)
,	O
'\n'	O
,	O
mime	*(struct)
->	O
cur_offset	long
,	O
buflen	long
,	O
total	long
,	O
nbytes	long
)	O
;	O
}	O
if	O
(	O
!	O
mime	*(struct)
->	O
part_stream	*(struct)
)	O
{	O
if	O
(	O
mime	*(struct)
->	O
cur_part	long
>=	O
mime	*(struct)
->	O
nmtp_parts	long
)	O
{	O
*	O
nbytes	long
=	O
total	long
;	O
return	O
0	int
;	O
}	O
ret	int
=	O
mu_message_get_streamref	(*(struct),*(*(struct)))->(int)
(	O
mime	*(struct)
->	O
mtp_parts	*(*(struct))
[	O
mime	*(struct)
->	O
cur_part	long
]	O
->	O
msg	*(struct)
,	O
&	O
mime	*(struct)
->	O
part_stream	*(struct)
)	O
;	O
}	O
}	O
else	O
if	O
(	O
!	O
mime	*(struct)
->	O
part_stream	*(struct)
)	O
{	O
mu_body_t	*(struct)
part_body	*(struct)
;	O
if	O
(	O
mime	*(struct)
->	O
cur_part	long
>=	O
mime	*(struct)
->	O
nmtp_parts	long
)	O
{	O
*	O
nbytes	long
=	O
total	long
;	O
return	O
0	int
;	O
}	O
mu_message_get_body	(*(struct),*(*(struct)))->(int)
(	O
mime	*(struct)
->	O
mtp_parts	*(*(struct))
[	O
mime	*(struct)
->	O
cur_part	long
]	O
->	O
msg	*(struct)
,	O
&	O
part_body	*(struct)
)	O
;	O
ret	int
=	O
mu_body_get_streamref	(*(struct),*(*(struct)))->(int)
(	O
part_body	*(struct)
,	O
&	O
mime	*(struct)
->	O
part_stream	*(struct)
)	O
;	O
}	O
if	O
(	O
ret	int
)	O
break	O
;	O
ret	int
=	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
mime	*(struct)
->	O
part_stream	*(struct)
,	O
mime	*(struct)
->	O
part_offset	long
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
if	O
(	O
ret	int
)	O
{	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
mime	*(struct)
->	O
part_stream	*(struct)
)	O
;	O
break	O
;	O
}	O
while	O
(	O
buflen	long
>	O
0	int
&&	O
(	O
ret	int
=	O
mu_stream_read	(*(struct),*(void),long,*(long))->(int)
(	O
mime	*(struct)
->	O
part_stream	*(struct)
,	O
buf	*(struct)
,	O
buflen	long
,	O
&	O
part_nbytes	long
)	O
)	O
==	O
0	int
)	O
{	O
if	O
(	O
part_nbytes	long
)	O
{	O
mime	*(struct)
->	O
part_offset	long
+=	O
part_nbytes	long
;	O
mime	*(struct)
->	O
cur_offset	long
+=	O
part_nbytes	long
;	O
total	long
+=	O
part_nbytes	long
;	O
buflen	long
-=	O
part_nbytes	long
;	O
buf	*(struct)
+=	O
part_nbytes	long
;	O
}	O
else	O
{	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
mime	*(struct)
->	O
part_stream	*(struct)
)	O
;	O
mime	*(struct)
->	O
flags	int
|=	O
MIME_INSERT_BOUNDARY	int
;	O
mime	*(struct)
->	O
cur_part	long
++	O
;	O
ADD_CHAR	O
(	O
buf	*(struct)
,	O
'\n'	O
,	O
mime	*(struct)
->	O
cur_offset	long
,	O
buflen	long
,	O
total	long
,	O
nbytes	long
)	O
;	O
break	O
;	O
}	O
}	O
}	O
while	O
(	O
ret	int
==	O
0	int
&&	O
mime	*(struct)
->	O
cur_part	long
<=	O
mime	*(struct)
->	O
nmtp_parts	long
)	O
;	O
}	O
if	O
(	O
ret	int
)	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
mime	*(struct)
->	O
part_stream	*(struct)
)	O
;	O
*	O
nbytes	long
=	O
total	long
;	O
return	O
ret	int
;	O
}	O
static	O
int	O
_mime_body_stream_ioctl	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,int,*(void))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
int	O
code	int
,	O
int	O
opcode	int
,	O
void	O
*	O
arg	*(void)
)	O
{	O
struct	O
_mime_body_stream	struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(*(char)))),*(struct(int,*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,*(char),long,long,*(*(struct(*`,*`,int,long,long,long))),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))
*	O
mstr	*(struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))),*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int))))
=	O
(	O
struct	O
_mime_body_stream	struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(*(char)))),*(struct(int,*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,*(char),long,long,*(*(struct(*`,*`,int,long,long,long))),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))
*	O
)	O
stream	*(struct)
;	O
mu_mime_t	*(struct)
mime	*(struct)
=	O
mstr	*(struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))),*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int))))
->	O
mime	*(struct)
;	O
mu_stream_t	*(struct)
msg_stream	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
;	O
int	O
rc	int
;	O
switch	O
(	O
code	int
)	O
{	O
case	O
MU_IOCTL_TRANSPORT	int
:	O
if	O
(	O
!	O
arg	*(void)
)	O
return	O
EINVAL	int
;	O
switch	O
(	O
opcode	int
)	O
{	O
case	O
MU_IOCTL_OP_GET	int
:	O
if	O
(	O
mime	*(struct)
->	O
nmtp_parts	long
==	O
0	int
||	O
mime	*(struct)
->	O
cur_offset	long
==	O
0	int
)	O
return	O
EINVAL	int
;	O
rc	int
=	O
mu_message_get_streamref	(*(struct),*(*(struct)))->(int)
(	O
mime	*(struct)
->	O
mtp_parts	*(*(struct))
[	O
mime	*(struct)
->	O
cur_part	long
]	O
->	O
msg	*(struct)
,	O
&	O
msg_stream	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
)	O
;	O
if	O
(	O
rc	int
)	O
break	O
;	O
rc	int
=	O
mu_stream_ioctl	(*(struct),int,int,*(void))->(int)
(	O
msg_stream	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
,	O
code	int
,	O
opcode	int
,	O
arg	*(void)
)	O
;	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
msg_stream	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
)	O
;	O
break	O
;	O
case	O
MU_IOCTL_OP_SET	int
:	O
return	O
ENOSYS	int
;	O
default	O
:	O
return	O
EINVAL	int
;	O
}	O
break	O
;	O
default	O
:	O
rc	int
=	O
ENOSYS	int
;	O
}	O
return	O
rc	int
;	O
}	O
static	O
int	O
create_mime_body_stream	(*(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))))),*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))->(int)
(	O
mu_stream_t	*(struct)
*	O
pstr	*(*(char))
,	O
mu_mime_t	*(struct)
mime	*(struct)
)	O
{	O
struct	O
_mime_body_stream	struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(*(char)))),*(struct(int,*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,*(char),long,long,*(*(struct(*`,*`,int,long,long,long))),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))
*	O
sp	*(struct(int,long,long,long,long,long,long,int,long))
=	O
(	O
struct	O
_mime_body_stream	struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(*(char)))),*(struct(int,*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,*(char),long,long,*(*(struct(*`,*`,int,long,long,long))),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))
*	O
)	O
_mu_stream_create	(long,int)->(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))
(	O
sizeof	O
(	O
*	O
sp	*(struct(int,long,long,long,long,long,long,int,long))
)	O
,	O
MU_STREAM_READ	int
|	O
MU_STREAM_SEEK	int
)	O
;	O
if	O
(	O
!	O
sp	*(struct(int,long,long,long,long,long,long,int,long))
)	O
return	O
ENOMEM	int
;	O
sp	*(struct(int,long,long,long,long,long,long,int,long))
->	O
stream	*(struct)
.	O
read	*((*(void),*(char),long)->(long))
=	O
_mime_body_stream_read	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,*(long))->(int)
;	O
sp	*(struct(int,long,long,long,long,long,long,int,long))
->	O
stream	*(struct)
.	O
seek	*((*(void),*(long),int)->(int))
=	O
_mime_body_stream_seek	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),long,*(long))->(int)
;	O
sp	*(struct(int,long,long,long,long,long,long,int,long))
->	O
stream	*(struct)
.	O
ctl	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,int,*(void))->(int))
=	O
_mime_body_stream_ioctl	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,int,*(void))->(int)
;	O
sp	*(struct(int,long,long,long,long,long,long,int,long))
->	O
stream	*(struct)
.	O
size	long
=	O
_mime_body_stream_size	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(long))->(int)
;	O
sp	*(struct(int,long,long,long,long,long,long,int,long))
->	O
mime	*(struct)
=	O
mime	*(struct)
;	O
mime_reset_state	(*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))->(void)
(	O
mime	*(struct)
)	O
;	O
*	O
pstr	*(*(char))
=	O
(	O
mu_stream_t	*(struct)
)	O
sp	*(struct(int,long,long,long,long,long,long,int,long))
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_mime_body_size	(*(struct),*(long))->(int)
(	O
mu_body_t	*(struct)
body	*(struct)
,	O
size_t	long
*	O
psize	*(long)
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
=	O
mu_body_get_owner	(*(struct))->(*(void))
(	O
body	*(struct)
)	O
;	O
mu_mime_t	*(struct)
mime	*(struct)
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
return	O
_mime_part_size	(*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(long))->(int)
(	O
mime	*(struct)
,	O
psize	*(long)
)	O
;	O
}	O
static	O
int	O
_mime_body_lines	(*(struct),*(long))->(int)
(	O
mu_body_t	*(struct)
body	*(struct)
,	O
size_t	long
*	O
plines	*(long)
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
=	O
mu_body_get_owner	(*(struct))->(*(void))
(	O
body	*(struct)
)	O
;	O
mu_mime_t	*(struct)
mime	*(struct)
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
int	O
i	long
,	O
ret	int
;	O
size_t	long
total	long
=	O
0	int
;	O
if	O
(	O
mime	*(struct)
->	O
nmtp_parts	long
==	O
0	int
)	O
{	O
*	O
plines	*(long)
=	O
0	int
;	O
return	O
0	int
;	O
}	O
if	O
(	O
(	O
ret	int
=	O
_mime_set_content_type	(*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))->(int)
(	O
mime	*(struct)
)	O
)	O
!=	O
0	int
)	O
return	O
ret	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
mime	*(struct)
->	O
nmtp_parts	long
;	O
i	long
++	O
)	O
{	O
size_t	long
lines	long
;	O
mu_message_lines	(*(struct),*(long))->(int)
(	O
mime	*(struct)
->	O
mtp_parts	*(*(struct))
[	O
i	long
]	O
->	O
msg	*(struct)
,	O
&	O
lines	long
)	O
;	O
total	long
+=	O
lines	long
;	O
if	O
(	O
mime	*(struct)
->	O
nmtp_parts	long
>	O
1	int
)	O
total	long
++	O
;	O
}	O
*	O
plines	*(long)
=	O
total	long
;	O
return	O
0	int
;	O
}	O
int	O
mu_mime_create	(*(*(struct)),*(struct),int)->(int)
(	O
mu_mime_t	*(struct)
*	O
pmime	*(*(struct))
,	O
mu_message_t	*(struct)
msg	*(struct)
,	O
int	O
flags	int
)	O
{	O
mu_mime_t	*(struct)
mime	*(struct)
=	O
NULL	O
;	O
int	O
ret	int
=	O
0	int
;	O
size_t	long
size	long
;	O
mu_body_t	*(struct)
body	*(struct)
;	O
if	O
(	O
pmime	*(*(struct))
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
switch	O
(	O
flags	int
&	O
MIME_MULTIPART_FLAGS	O
)	O
{	O
case	O
MIME_MULTIPART_FLAGS	O
:	O
return	O
EINVAL	int
;	O
case	O
0	int
:	O
flags	int
|=	O
MU_MIME_MULTIPART_MIXED	int
;	O
}	O
*	O
pmime	*(*(struct))
=	O
NULL	O
;	O
if	O
(	O
(	O
mime	*(struct)
=	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
*	O
mime	*(struct)
)	O
)	O
)	O
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
if	O
(	O
msg	*(struct)
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
mu_message_get_header	(*(struct),*(*(struct)))->(int)
(	O
msg	*(struct)
,	O
&	O
mime	*(struct)
->	O
hdrs	*(struct)
)	O
)	O
==	O
0	int
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
mu_header_get_value	O
(	O
mime	*(struct)
->	O
hdrs	*(struct)
,	O
MU_HEADER_CONTENT_TYPE	*(char)
,	O
NULL	O
,	O
0	int
,	O
&	O
size	long
)	O
)	O
==	O
0	int
&&	O
size	long
)	O
{	O
if	O
(	O
(	O
mime	*(struct)
->	O
content_type	*(char)
=	O
malloc	(long)->(*(void))
(	O
size	long
+	O
1	int
)	O
)	O
==	O
NULL	O
)	O
ret	int
=	O
ENOMEM	int
;	O
else	O
if	O
(	O
(	O
ret	int
=	O
mu_header_get_value	O
(	O
mime	*(struct)
->	O
hdrs	*(struct)
,	O
MU_HEADER_CONTENT_TYPE	*(char)
,	O
mime	*(struct)
->	O
content_type	*(char)
,	O
size	long
+	O
1	int
,	O
0	int
)	O
)	O
==	O
0	int
)	O
_mime_munge_content_header	(*(char))->(void)
(	O
mime	*(struct)
->	O
content_type	*(char)
)	O
;	O
}	O
else	O
{	O
if	O
(	O
ret	int
==	O
MU_ERR_NOENT	O
)	O
{	O
ret	int
=	O
0	int
;	O
if	O
(	O
(	O
mime	*(struct)
->	O
content_type	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
"text/plain; charset=us-ascii"	*(char)
)	O
)	O
==	O
NULL	O
)	O
ret	int
=	O
ENOMEM	int
;	O
}	O
}	O
if	O
(	O
ret	int
==	O
0	int
)	O
{	O
mime	*(struct)
->	O
msg	*(struct)
=	O
msg	*(struct)
;	O
mime	*(struct)
->	O
buf_size	long
=	O
MIME_DFLT_BUF_SIZE	int
;	O
mime	*(struct)
->	O
line_size	long
=	O
MIME_MAX_HDR_LEN	int
;	O
mu_message_get_body	(*(struct),*(*(struct)))->(int)
(	O
msg	*(struct)
,	O
&	O
body	*(struct)
)	O
;	O
mu_body_get_streamref	(*(struct),*(*(struct)))->(int)
(	O
body	*(struct)
,	O
&	O
mime	*(struct)
->	O
stream	*(struct)
)	O
;	O
}	O
}	O
}	O
else	O
{	O
mime	*(struct)
->	O
flags	int
|=	O
MIME_NEW_MESSAGE	int
;	O
}	O
if	O
(	O
ret	int
!=	O
0	int
)	O
{	O
if	O
(	O
mime	*(struct)
->	O
content_type	*(char)
)	O
free	(*(void))->(void)
(	O
mime	*(struct)
->	O
content_type	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
mime	*(struct)
)	O
;	O
}	O
else	O
{	O
mime	*(struct)
->	O
flags	int
|=	O
(	O
flags	int
&	O
MIME_FLAG_MASK	int
)	O
;	O
mime	*(struct)
->	O
ref_count	int
=	O
1	int
;	O
*	O
pmime	*(*(struct))
=	O
mime	*(struct)
;	O
}	O
return	O
ret	int
;	O
}	O
void	O
mu_mime_ref	(*(struct))->(void)
(	O
mu_mime_t	*(struct)
mime	*(struct)
)	O
{	O
mime	*(struct)
->	O
ref_count	int
++	O
;	O
}	O
static	O
void	O
_mu_mime_free	(*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))->(void)
(	O
mu_mime_t	*(struct)
mime	*(struct)
)	O
{	O
struct	O
_mime_part	struct(*(struct(int,*(struct),*(struct),*(struct),int,*(char),long,long,*(*(struct(*`,*`,int,long,long,long))),*(char),long,long,long,long,long,long,*(struct),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct),int,long,long,long)
*	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
;	O
int	O
i	long
;	O
if	O
(	O
mime	*(struct)
->	O
mtp_parts	*(*(struct))
)	O
{	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
mime	*(struct)
->	O
nmtp_parts	long
;	O
i	long
++	O
)	O
{	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
=	O
mime	*(struct)
->	O
mtp_parts	*(*(struct))
[	O
i	long
]	O
;	O
mu_message_unref	(*(struct))->(void)
(	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
->	O
msg	*(struct)
)	O
;	O
free	(*(void))->(void)
(	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
)	O
;	O
}	O
free	(*(void))->(void)
(	O
mime	*(struct)
->	O
mtp_parts	*(*(struct))
)	O
;	O
}	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
mime	*(struct)
->	O
stream	*(struct)
)	O
;	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
mime	*(struct)
->	O
part_stream	*(struct)
)	O
;	O
if	O
(	O
mime	*(struct)
->	O
msg	*(struct)
&&	O
mime	*(struct)
->	O
flags	int
&	O
MIME_NEW_MESSAGE	int
)	O
mu_message_destroy	(*(*(struct)),*(void))->(void)
(	O
&	O
mime	*(struct)
->	O
msg	*(struct)
,	O
mime	*(struct)
)	O
;	O
if	O
(	O
mime	*(struct)
->	O
content_type	*(char)
)	O
free	(*(void))->(void)
(	O
mime	*(struct)
->	O
content_type	*(char)
)	O
;	O
if	O
(	O
mime	*(struct)
->	O
cur_buf	*(char)
)	O
free	(*(void))->(void)
(	O
mime	*(struct)
->	O
cur_buf	*(char)
)	O
;	O
if	O
(	O
mime	*(struct)
->	O
cur_line	*(char)
)	O
free	(*(void))->(void)
(	O
mime	*(struct)
->	O
cur_line	*(char)
)	O
;	O
if	O
(	O
mime	*(struct)
->	O
boundary	*(char)
)	O
free	(*(void))->(void)
(	O
mime	*(struct)
->	O
boundary	*(char)
)	O
;	O
if	O
(	O
mime	*(struct)
->	O
header_buf	*(char)
)	O
free	(*(void))->(void)
(	O
mime	*(struct)
->	O
header_buf	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
mime	*(struct)
)	O
;	O
}	O
void	O
mu_mime_unref	(*(struct))->(void)
(	O
mu_mime_t	*(struct)
mime	*(struct)
)	O
{	O
if	O
(	O
--	O
mime	*(struct)
->	O
ref_count	int
==	O
0	int
)	O
_mu_mime_free	(*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))->(void)
(	O
mime	*(struct)
)	O
;	O
}	O
void	O
mu_mime_destroy	(*(*(struct)))->(void)
(	O
mu_mime_t	*(struct)
*	O
pmime	*(*(struct))
)	O
{	O
if	O
(	O
pmime	*(*(struct))
&&	O
*	O
pmime	*(*(struct))
)	O
{	O
mu_mime_unref	(*(struct))->(void)
(	O
*	O
pmime	*(*(struct))
)	O
;	O
*	O
pmime	*(*(struct))
=	O
NULL	O
;	O
}	O
}	O
int	O
mu_mime_get_part	(*(struct),long,*(*(struct)))->(int)
(	O
mu_mime_t	*(struct)
mime	*(struct)
,	O
size_t	long
part	long
,	O
mu_message_t	*(struct)
*	O
msg	*(struct)
)	O
{	O
size_t	long
nmtp_parts	long
;	O
int	O
ret	int
=	O
0	int
,	O
flags	int
=	O
0	int
;	O
mu_stream_t	*(struct)
stream	*(struct)
;	O
mu_body_t	*(struct)
body	*(struct)
;	O
struct	O
_mime_part	struct(*(struct(int,*(struct),*(struct),*(struct),int,*(char),long,long,*(*(struct(*`,*`,int,long,long,long))),*(char),long,long,long,long,long,long,*(struct),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct),int,long,long,long)
*	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
;	O
if	O
(	O
(	O
ret	int
=	O
mu_mime_get_num_parts	(*(struct),*(long))->(int)
(	O
mime	*(struct)
,	O
&	O
nmtp_parts	long
)	O
)	O
==	O
0	int
)	O
{	O
if	O
(	O
part	long
<	O
1	int
||	O
part	long
>	O
nmtp_parts	long
)	O
return	O
MU_ERR_NOENT	O
;	O
if	O
(	O
nmtp_parts	long
==	O
1	int
&&	O
mime	*(struct)
->	O
mtp_parts	*(*(struct))
==	O
NULL	O
)	O
*	O
msg	*(struct)
=	O
mime	*(struct)
->	O
msg	*(struct)
;	O
else	O
{	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
=	O
mime	*(struct)
->	O
mtp_parts	*(*(struct))
[	O
part	long
-	O
1	int
]	O
;	O
if	O
(	O
mime	*(struct)
->	O
stream	*(struct)
&&	O
!	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
->	O
body_created	int
&&	O
(	O
ret	int
=	O
mu_body_create	(*(*(struct)),*(void))->(int)
(	O
&	O
body	*(struct)
,	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
->	O
msg	*(struct)
)	O
)	O
==	O
0	int
)	O
{	O
mu_body_set_size	(*(struct),*((*(struct),*(long))->(int)),*(void))->(int)
(	O
body	*(struct)
,	O
_mimepart_body_size	(*(struct),*(long))->(int)
,	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
->	O
msg	*(struct)
)	O
;	O
mu_body_set_lines	(*(struct),*((*(struct),*(long))->(int)),*(void))->(int)
(	O
body	*(struct)
,	O
_mimepart_body_lines	(*(struct),*(long))->(int)
,	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
->	O
msg	*(struct)
)	O
;	O
mu_stream_get_flags	(*(struct),*(int))->(void)
(	O
mime	*(struct)
->	O
stream	*(struct)
,	O
&	O
flags	int
)	O
;	O
ret	int
=	O
mu_streamref_create_abridged	(*(*(struct)),*(struct),long,long)->(int)
(	O
&	O
stream	*(struct)
,	O
mime	*(struct)
->	O
stream	*(struct)
,	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
->	O
offset	long
,	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
->	O
offset	long
+	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
->	O
len	int
-	O
1	int
)	O
;	O
if	O
(	O
ret	int
==	O
0	int
)	O
{	O
mu_stream_set_flags	(*(struct),int)->(int)
(	O
stream	*(struct)
,	O
MU_STREAM_READ	int
|	O
(	O
flags	int
&	O
(	O
MU_STREAM_SEEK	int
|	O
MU_STREAM_NONBLOCK	int
)	O
)	O
)	O
;	O
mu_body_set_stream	(*(struct),*(struct),*(void))->(int)
(	O
body	*(struct)
,	O
stream	*(struct)
,	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
->	O
msg	*(struct)
)	O
;	O
mu_message_set_body	(*(struct),*(struct),*(void))->(int)
(	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
->	O
msg	*(struct)
,	O
body	*(struct)
,	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
)	O
;	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
->	O
body_created	int
=	O
1	int
;	O
}	O
}	O
*	O
msg	*(struct)
=	O
mime_part	*(struct(*(struct(int,*(struct`),*(struct`),*(struct`),int,*(char),long,long,*(*`),*(char),long,long,long,long,long,long,*(struct`),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,long,long,long))
->	O
msg	*(struct)
;	O
}	O
}	O
return	O
ret	int
;	O
}	O
int	O
mu_mime_get_num_parts	(*(struct),*(long))->(int)
(	O
mu_mime_t	*(struct)
mime	*(struct)
,	O
size_t	long
*	O
nmtp_parts	long
)	O
{	O
int	O
ret	int
=	O
0	int
;	O
if	O
(	O
(	O
mime	*(struct)
->	O
nmtp_parts	long
==	O
0	int
&&	O
!	O
mime	*(struct)
->	O
boundary	*(char)
)	O
||	O
mime	*(struct)
->	O
flags	int
&	O
MIME_PARSER_ACTIVE	int
)	O
{	O
if	O
(	O
mu_mime_is_multipart	(*(struct))->(int)
(	O
mime	*(struct)
)	O
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
_mime_parse_mpart_message	(*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))->(int)
(	O
mime	*(struct)
)	O
)	O
!=	O
0	int
)	O
return	O
(	O
ret	int
)	O
;	O
}	O
else	O
{	O
*	O
nmtp_parts	long
=	O
1	int
;	O
return	O
0	int
;	O
}	O
}	O
*	O
nmtp_parts	long
=	O
mime	*(struct)
->	O
nmtp_parts	long
;	O
return	O
(	O
ret	int
)	O
;	O
}	O
int	O
mu_mime_add_part	(*(struct),*(struct))->(int)
(	O
mu_mime_t	*(struct)
mime	*(struct)
,	O
mu_message_t	*(struct)
msg	*(struct)
)	O
{	O
int	O
ret	int
;	O
if	O
(	O
mime	*(struct)
==	O
NULL	O
||	O
msg	*(struct)
==	O
NULL	O
||	O
(	O
mime	*(struct)
->	O
flags	int
&	O
MIME_NEW_MESSAGE	int
)	O
==	O
0	int
)	O
return	O
EINVAL	int
;	O
if	O
(	O
(	O
ret	int
=	O
_mime_append_part	(*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)),*(struct(int,*(void),*(struct),*(struct),*(struct),int,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*(struct(*`,*`,int,int)),*(struct(int,*`,*`,*`,int,*`,long,long,*`,*`,long,long,long,long,long,long,*`,*`,long,long,*`,long,*`,long,long,long,long,long,int)),*(struct),*(struct),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),long,long,long)->(int)
(	O
mime	*(struct)
,	O
msg	*(struct)
,	O
0	int
,	O
0	int
,	O
0	int
)	O
)	O
==	O
0	int
)	O
ret	int
=	O
_mime_set_content_type	(*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))->(int)
(	O
mime	*(struct)
)	O
;	O
return	O
ret	int
;	O
}	O
int	O
mu_mime_get_message	(*(struct),*(*(struct)))->(int)
(	O
mu_mime_t	*(struct)
mime	*(struct)
,	O
mu_message_t	*(struct)
*	O
msg	*(struct)
)	O
{	O
mu_stream_t	*(struct)
body_stream	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
;	O
mu_body_t	*(struct)
body	*(struct)
;	O
int	O
ret	int
=	O
0	int
;	O
if	O
(	O
mime	*(struct)
==	O
NULL	O
||	O
msg	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
mime	*(struct)
->	O
msg	*(struct)
==	O
NULL	O
)	O
{	O
if	O
(	O
(	O
mime	*(struct)
->	O
flags	int
&	O
MIME_NEW_MESSAGE	int
)	O
==	O
0	int
)	O
return	O
EINVAL	int
;	O
if	O
(	O
(	O
ret	int
=	O
mu_message_create	(*(*(struct)),*(void))->(int)
(	O
&	O
mime	*(struct)
->	O
msg	*(struct)
,	O
mime	*(struct)
)	O
)	O
==	O
0	int
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
mu_header_create	(*(*(struct)),*(char),long)->(int)
(	O
&	O
mime	*(struct)
->	O
hdrs	*(struct)
,	O
NULL	O
,	O
0	int
)	O
)	O
==	O
0	int
)	O
{	O
mu_message_set_header	(*(struct),*(struct),*(void))->(int)
(	O
mime	*(struct)
->	O
msg	*(struct)
,	O
mime	*(struct)
->	O
hdrs	*(struct)
,	O
mime	*(struct)
)	O
;	O
mu_header_set_value	(*(struct),*(char),*(char),int)->(int)
(	O
mime	*(struct)
->	O
hdrs	*(struct)
,	O
MU_HEADER_MIME_VERSION	*(char)
,	O
"1.0"	*(char)
,	O
1	int
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
_mime_set_content_type	(*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))->(int)
(	O
mime	*(struct)
)	O
)	O
==	O
0	int
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
mu_body_create	(*(*(struct)),*(void))->(int)
(	O
&	O
body	*(struct)
,	O
mime	*(struct)
->	O
msg	*(struct)
)	O
)	O
==	O
0	int
)	O
{	O
mu_message_set_body	(*(struct),*(struct),*(void))->(int)
(	O
mime	*(struct)
->	O
msg	*(struct)
,	O
body	*(struct)
,	O
mime	*(struct)
)	O
;	O
mu_body_set_size	(*(struct),*((*(struct),*(long))->(int)),*(void))->(int)
(	O
body	*(struct)
,	O
_mime_body_size	(*(struct),*(long))->(int)
,	O
mime	*(struct)
->	O
msg	*(struct)
)	O
;	O
mu_body_set_lines	(*(struct),*((*(struct),*(long))->(int)),*(void))->(int)
(	O
body	*(struct)
,	O
_mime_body_lines	(*(struct),*(long))->(int)
,	O
mime	*(struct)
->	O
msg	*(struct)
)	O
;	O
ret	int
=	O
create_mime_body_stream	(*(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))))),*(struct(int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,*(char),long,long,*(*(struct`)),*(char),long,long,long,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,long,*(char),long,*(char),long,long,long,long,long,int)))->(int)
(	O
&	O
body_stream	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
,	O
mime	*(struct)
)	O
;	O
if	O
(	O
ret	int
==	O
0	int
)	O
{	O
mu_body_set_stream	(*(struct),*(struct),*(void))->(int)
(	O
body	*(struct)
,	O
body_stream	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
,	O
mime	*(struct)
->	O
msg	*(struct)
)	O
;	O
mime	*(struct)
->	O
msg	*(struct)
->	O
mime	*(struct)
=	O
mime	*(struct)
;	O
mu_message_ref	(*(struct))->(void)
(	O
mime	*(struct)
->	O
msg	*(struct)
)	O
;	O
*	O
msg	*(struct)
=	O
mime	*(struct)
->	O
msg	*(struct)
;	O
return	O
0	int
;	O
}	O
}	O
}	O
}	O
mu_message_destroy	(*(*(struct)),*(void))->(void)
(	O
&	O
mime	*(struct)
->	O
msg	*(struct)
,	O
mime	*(struct)
)	O
;	O
mime	*(struct)
->	O
msg	*(struct)
=	O
NULL	O
;	O
}	O
}	O
if	O
(	O
ret	int
==	O
0	int
)	O
{	O
mu_message_ref	(*(struct))->(void)
(	O
mime	*(struct)
->	O
msg	*(struct)
)	O
;	O
*	O
msg	*(struct)
=	O
mime	*(struct)
->	O
msg	*(struct)
;	O
}	O
return	O
ret	int
;	O
}	O
int	O
mu_mime_to_message	(*(struct),*(*(struct)))->(int)
(	O
mu_mime_t	*(struct)
mime	*(struct)
,	O
mu_message_t	*(struct)
*	O
pmsg	*(*(struct))
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
;	O
int	O
rc	int
=	O
mu_mime_get_message	(*(struct),*(*(struct)))->(int)
(	O
mime	*(struct)
,	O
&	O
msg	*(struct)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
mu_message_unref	(*(struct))->(void)
(	O
msg	*(struct)
)	O
;	O
mime	*(struct)
->	O
msg	*(struct)
=	O
NULL	O
;	O
mu_mime_ref	(*(struct))->(void)
(	O
mime	*(struct)
)	O
;	O
*	O
pmsg	*(*(struct))
=	O
msg	*(struct)
;	O
}	O
return	O
rc	int
;	O
}	O
int	O
mu_mime_is_multipart	(*(struct))->(int)
(	O
mu_mime_t	*(struct)
mime	*(struct)
)	O
{	O
if	O
(	O
mime	*(struct)
->	O
content_type	*(char)
)	O
return	O
(	O
mu_c_strncasecmp	(*(char),*(char),long)->(int)
(	O
"multipart"	*(char)
,	O
mime	*(struct)
->	O
content_type	*(char)
,	O
strlen	(*(char))->(long)
(	O
"multipart"	*(char)
)	O
)	O
?	O
0	int
:	O
1	int
)	O
;	O
return	O
0	int
;	O
}	O
