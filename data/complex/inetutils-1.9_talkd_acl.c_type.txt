typedef	O
struct	O
netdef	struct(*(struct(*(struct(*(struct`),int,int)),int,int)),int,int)
netdef_t	struct
;	O
struct	O
netdef	struct(*(struct(*(struct(*(struct`),int,int)),int,int)),int,int)
{	O
netdef_t	struct
*	O
next	*(struct(*(struct(*(struct`),int,int)),int,int))
;	O
unsigned	O
int	O
ipaddr	int
;	O
unsigned	O
int	O
netmask	int
;	O
}	O
;	O
typedef	O
struct	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
acl_t	struct
;	O
struct	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
{	O
acl_t	struct
*	O
next	*(struct(*(struct(*(struct`),int,int)),int,int))
;	O
regex_t	struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)
re	struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)
;	O
netdef_t	struct
*	O
netlist	*(struct(*(struct(*(struct`),int,int)),int,int))
;	O
int	O
action	int
;	O
}	O
;	O
acl_t	struct
*	O
acl_head	*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int))
,	O
*	O
acl_tail	*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int))
;	O
static	O
int	O
read_address	(*(*(char)),*(char))->(int)
(	O
char	O
*	O
*	O
line_ptr	*(*(char))
,	O
char	O
*	O
ptr	*(char)
)	O
{	O
char	O
*	O
startp	*(char)
=	O
*	O
line_ptr	*(*(char))
;	O
char	O
*	O
endp	*(char)
;	O
int	O
dotcount	int
=	O
0	int
;	O
for	O
(	O
endp	*(char)
=	O
startp	*(char)
;	O
*	O
endp	*(char)
;	O
endp	*(char)
++	O
,	O
ptr	*(char)
++	O
)	O
if	O
(	O
!	O
(	O
isdigit	(int)->(int)
(	O
*	O
endp	*(char)
)	O
||	O
*	O
endp	*(char)
==	O
'.'	O
)	O
)	O
break	O
;	O
else	O
if	O
(	O
endp	*(char)
<	O
startp	*(char)
+	O
DOTTED_QUAD_LEN	int
)	O
{	O
if	O
(	O
*	O
endp	*(char)
==	O
'.'	O
)	O
dotcount	int
++	O
;	O
*	O
ptr	*(char)
=	O
*	O
endp	*(char)
;	O
}	O
else	O
break	O
;	O
*	O
line_ptr	*(*(char))
=	O
endp	*(char)
;	O
*	O
ptr	*(char)
=	O
0	int
;	O
return	O
dotcount	int
;	O
}	O
static	O
netdef_t	struct
*	O
netdef_parse	(*(char))->(*(struct(*(struct(*`,int,int)),int,int)))
(	O
char	O
*	O
str	*(char)
)	O
{	O
unsigned	O
int	O
ipaddr	int
,	O
netmask	int
;	O
netdef_t	struct
*	O
netdef	struct(*(struct(*(struct(*(struct`),int,int)),int,int)),int,int)
;	O
char	O
ipbuf	array(char)
[	O
DOTTED_QUAD_LEN	int
+	O
1	int
]	O
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
str	*(char)
,	O
"any"	*(char)
)	O
==	O
0	int
)	O
{	O
ipaddr	int
=	O
0	int
;	O
netmask	int
=	O
0	int
;	O
}	O
else	O
{	O
read_address	(*(*(char)),*(char))->(int)
(	O
&	O
str	*(char)
,	O
ipbuf	array(char)
)	O
;	O
ipaddr	int
=	O
inet_addr	(*(char))->(int)
(	O
ipbuf	array(char)
)	O
;	O
if	O
(	O
ipaddr	int
==	O
INADDR_NONE	O
)	O
return	O
NULL	O
;	O
if	O
(	O
*	O
str	*(char)
==	O
0	int
)	O
netmask	int
=	O
0xfffffffful	int
;	O
else	O
if	O
(	O
*	O
str	*(char)
!=	O
'/'	O
)	O
return	O
NULL	O
;	O
else	O
{	O
str	*(char)
++	O
;	O
if	O
(	O
read_address	(*(*(char)),*(char))->(int)
(	O
&	O
str	*(char)
,	O
ipbuf	array(char)
)	O
==	O
0	int
)	O
{	O
unsigned	O
int	O
len	int
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
ipbuf	array(char)
,	O
NULL	O
,	O
0	int
)	O
;	O
if	O
(	O
len	int
>	O
32	int
)	O
return	O
NULL	O
;	O
netmask	int
=	O
0xfffffffful	int
>>	O
(	O
32	int
-	O
len	int
)	O
;	O
netmask	int
<<=	O
(	O
32	int
-	O
len	int
)	O
;	O
}	O
else	O
netmask	int
=	O
inet_network	(*(char))->(int)
(	O
ipbuf	array(char)
)	O
;	O
netmask	int
=	O
htonl	(int)->(int)
(	O
netmask	int
)	O
;	O
}	O
}	O
netdef	struct(*(struct(*(struct(*(struct`),int,int)),int,int)),int,int)
=	O
malloc	(long)->(*(void))
(	O
sizeof	O
*	O
netdef	struct(*(struct(*(struct(*(struct`),int,int)),int,int)),int,int)
)	O
;	O
if	O
(	O
!	O
netdef	struct(*(struct(*(struct(*(struct`),int,int)),int,int)),int,int)
)	O
{	O
syslog	(int,*(char))->(void)
(	O
LOG_ERR	int
,	O
"out of memory"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
netdef	struct(*(struct(*(struct(*(struct`),int,int)),int,int)),int,int)
->	O
next	*(struct(*(struct(*(struct`),int,int)),int,int))
=	O
NULL	O
;	O
netdef	struct(*(struct(*(struct(*(struct`),int,int)),int,int)),int,int)
->	O
ipaddr	int
=	O
ipaddr	int
;	O
netdef	struct(*(struct(*(struct(*(struct`),int,int)),int,int)),int,int)
->	O
netmask	int
=	O
netmask	int
;	O
return	O
netdef	struct(*(struct(*(struct(*(struct`),int,int)),int,int)),int,int)
;	O
}	O
void	O
read_acl	(*(char))->(void)
(	O
char	O
*	O
config_file	*(char)
)	O
{	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
int	O
line	int
;	O
char	O
buf	array(char)
[	O
128	int
]	O
;	O
char	O
*	O
ptr	*(char)
;	O
if	O
(	O
!	O
config_file	*(char)
)	O
return	O
;	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
config_file	*(char)
,	O
"r"	*(char)
)	O
;	O
if	O
(	O
!	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
syslog	(int,*(char))->(void)
(	O
LOG_ERR	int
,	O
"can't open config file %s: %m"	*(char)
,	O
config_file	*(char)
)	O
;	O
return	O
;	O
}	O
line	int
=	O
0	int
;	O
while	O
(	O
(	O
ptr	*(char)
=	O
fgets	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
buf	array(char)
,	O
sizeof	O
buf	array(char)
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
)	O
{	O
int	O
len	int
,	O
i	int
;	O
int	O
argc	*(int)
;	O
char	O
*	O
*	O
argv	*(*(*(char)))
;	O
int	O
action	int
;	O
regex_t	struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)
re	struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)
;	O
netdef_t	struct
*	O
head	*(struct(*(struct(*(struct`),int,int)),int,int))
,	O
*	O
tail	*(struct(*(struct(*(struct`),int,int)),int,int))
;	O
acl_t	struct
*	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
;	O
line	int
++	O
;	O
len	int
=	O
strlen	(*(char))->(long)
(	O
ptr	*(char)
)	O
;	O
if	O
(	O
len	int
>	O
0	int
&&	O
ptr	*(char)
[	O
len	int
-	O
1	int
]	O
==	O
'\n'	O
)	O
ptr	*(char)
[	O
--	O
len	int
]	O
=	O
0	int
;	O
while	O
(	O
*	O
ptr	*(char)
&&	O
isspace	(int)->(int)
(	O
*	O
ptr	*(char)
)	O
)	O
ptr	*(char)
++	O
;	O
if	O
(	O
!	O
*	O
ptr	*(char)
||	O
*	O
ptr	*(char)
==	O
'#'	O
)	O
continue	O
;	O
argcv_get	(*(char),*(char),*(int),*(*(*(char))))->(int)
(	O
ptr	*(char)
,	O
""	*(char)
,	O
&	O
argc	*(int)
,	O
&	O
argv	*(*(*(char)))
)	O
;	O
if	O
(	O
argc	*(int)
<	O
2	int
)	O
{	O
syslog	(int,*(char))->(void)
(	O
LOG_ERR	int
,	O
"%s:%d: too few fields"	*(char)
,	O
config_file	*(char)
,	O
line	int
)	O
;	O
argcv_free	(int,*(*(char)))->(int)
(	O
argc	*(int)
,	O
argv	*(*(*(char)))
)	O
;	O
continue	O
;	O
}	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	*(*(*(char)))
[	O
0	int
]	O
,	O
"allow"	*(char)
)	O
==	O
0	int
)	O
action	int
=	O
ACT_ALLOW	int
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	*(*(*(char)))
[	O
0	int
]	O
,	O
"deny"	*(char)
)	O
==	O
0	int
)	O
action	int
=	O
ACT_DENY	int
;	O
else	O
{	O
syslog	(int,*(char))->(void)
(	O
LOG_ERR	int
,	O
"%s:%d: unknown keyword"	*(char)
,	O
config_file	*(char)
,	O
line	int
)	O
;	O
argcv_free	(int,*(*(char)))->(int)
(	O
argc	*(int)
,	O
argv	*(*(*(char)))
)	O
;	O
continue	O
;	O
}	O
if	O
(	O
regcomp	(*(struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)),*(char),int)->(int)
(	O
&	O
re	struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)
,	O
argv	*(*(*(char)))
[	O
1	int
]	O
,	O
0	int
)	O
!=	O
0	int
)	O
{	O
syslog	(int,*(char))->(void)
(	O
LOG_ERR	int
,	O
"%s:%d: bad regexp"	*(char)
,	O
config_file	*(char)
,	O
line	int
)	O
;	O
argcv_free	(int,*(*(char)))->(int)
(	O
argc	*(int)
,	O
argv	*(*(*(char)))
)	O
;	O
continue	O
;	O
}	O
head	*(struct(*(struct(*(struct`),int,int)),int,int))
=	O
tail	*(struct(*(struct(*(struct`),int,int)),int,int))
=	O
NULL	O
;	O
for	O
(	O
i	int
=	O
2	int
;	O
i	int
<	O
argc	*(int)
;	O
i	int
++	O
)	O
{	O
netdef_t	struct
*	O
cur	*(struct(*(struct(*(struct`),int,int)),int,int))
=	O
netdef_parse	(*(char))->(*(struct(*(struct(*`,int,int)),int,int)))
(	O
argv	*(*(*(char)))
[	O
i	int
]	O
)	O
;	O
if	O
(	O
!	O
cur	*(struct(*(struct(*(struct`),int,int)),int,int))
)	O
{	O
syslog	(int,*(char))->(void)
(	O
LOG_ERR	int
,	O
"%s:%d: can't parse netdef: %s"	*(char)
,	O
config_file	*(char)
,	O
line	int
,	O
argv	*(*(*(char)))
[	O
i	int
]	O
)	O
;	O
continue	O
;	O
}	O
if	O
(	O
!	O
tail	*(struct(*(struct(*(struct`),int,int)),int,int))
)	O
head	*(struct(*(struct(*(struct`),int,int)),int,int))
=	O
cur	*(struct(*(struct(*(struct`),int,int)),int,int))
;	O
else	O
tail	*(struct(*(struct(*(struct`),int,int)),int,int))
->	O
next	*(struct(*(struct(*(struct`),int,int)),int,int))
=	O
cur	*(struct(*(struct(*(struct`),int,int)),int,int))
;	O
tail	*(struct(*(struct(*(struct`),int,int)),int,int))
=	O
cur	*(struct(*(struct(*(struct`),int,int)),int,int))
;	O
}	O
argcv_free	(int,*(*(char)))->(int)
(	O
argc	*(int)
,	O
argv	*(*(*(char)))
)	O
;	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
=	O
malloc	(long)->(*(void))
(	O
sizeof	O
*	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
)	O
;	O
if	O
(	O
!	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
)	O
{	O
syslog	(int,*(char))->(void)
(	O
LOG_CRIT	int
,	O
"out of memory"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
->	O
next	*(struct(*(struct(*(struct`),int,int)),int,int))
=	O
NULL	O
;	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
->	O
action	int
=	O
action	int
;	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
->	O
netlist	*(struct(*(struct(*(struct`),int,int)),int,int))
=	O
head	*(struct(*(struct(*(struct`),int,int)),int,int))
;	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
->	O
re	struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)
=	O
re	struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)
;	O
if	O
(	O
!	O
acl_tail	*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int))
)	O
acl_head	*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int))
=	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
;	O
else	O
acl_tail	*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int))
->	O
next	*(struct(*(struct(*(struct`),int,int)),int,int))
=	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
;	O
acl_tail	*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int))
=	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
;	O
}	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
static	O
acl_t	struct
*	O
open_users_acl	(*(char))->(*(struct(*(struct(*`,struct`,*`,int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*`,int,int)),int)))
(	O
char	O
*	O
name	*(char)
)	O
{	O
char	O
*	O
filename	*(char)
;	O
struct	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
*	O
pw	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
;	O
acl_t	struct
*	O
mark	*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int))
;	O
pw	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
=	O
getpwnam	(*(char))->(*(struct(*(char),*(char),int,int,*(char),*(char),*(char))))
(	O
name	*(char)
)	O
;	O
if	O
(	O
!	O
pw	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
)	O
return	O
NULL	O
;	O
filename	*(char)
=	O
malloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
pw	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_dir	*(char)
)	O
+	O
sizeof	O
(	O
USER_ACL_NAME	*(char)
)	O
+	O
2	int
)	O
;	O
if	O
(	O
!	O
filename	*(char)
)	O
{	O
syslog	(int,*(char))->(void)
(	O
LOG_ERR	int
,	O
"out of memory"	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
sprintf	(*(char),*(char))->(int)
(	O
filename	*(char)
,	O
"%s/%s"	*(char)
,	O
pw	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_dir	*(char)
,	O
USER_ACL_NAME	*(char)
)	O
;	O
mark	*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int))
=	O
acl_tail	*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int))
;	O
read_acl	(*(char))->(void)
(	O
filename	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
filename	*(char)
)	O
;	O
return	O
mark	*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int))
;	O
}	O
static	O
void	O
netdef_free	(*(struct(*(struct(*`,int,int)),int,int)))->(void)
(	O
netdef_t	struct
*	O
netdef	struct(*(struct(*(struct(*(struct`),int,int)),int,int)),int,int)
)	O
{	O
netdef_t	struct
*	O
next	*(struct(*(struct(*(struct`),int,int)),int,int))
;	O
while	O
(	O
netdef	struct(*(struct(*(struct(*(struct`),int,int)),int,int)),int,int)
)	O
{	O
next	*(struct(*(struct(*(struct`),int,int)),int,int))
=	O
netdef	struct(*(struct(*(struct(*(struct`),int,int)),int,int)),int,int)
->	O
next	*(struct(*(struct(*(struct`),int,int)),int,int))
;	O
free	(*(void))->(void)
(	O
netdef	struct(*(struct(*(struct(*(struct`),int,int)),int,int)),int,int)
)	O
;	O
netdef	struct(*(struct(*(struct(*(struct`),int,int)),int,int)),int,int)
=	O
next	*(struct(*(struct(*(struct`),int,int)),int,int))
;	O
}	O
}	O
static	O
void	O
acl_free	(*(struct(*(struct(*`,struct`,*`,int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*`,int,int)),int)))->(void)
(	O
acl_t	struct
*	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
)	O
{	O
acl_t	struct
*	O
next	*(struct(*(struct(*(struct`),int,int)),int,int))
;	O
while	O
(	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
)	O
{	O
next	*(struct(*(struct(*(struct`),int,int)),int,int))
=	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
->	O
next	*(struct(*(struct(*(struct`),int,int)),int,int))
;	O
regfree	(*(struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)))->(void)
(	O
&	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
->	O
re	struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)
)	O
;	O
netdef_free	(*(struct(*(struct(*`,int,int)),int,int)))->(void)
(	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
->	O
netlist	*(struct(*(struct(*(struct`),int,int)),int,int))
)	O
;	O
free	(*(void))->(void)
(	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
)	O
;	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
=	O
next	*(struct(*(struct(*(struct`),int,int)),int,int))
;	O
}	O
}	O
static	O
void	O
discard_acl	(*(struct(*(struct(*`,struct`,*`,int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*`,int,int)),int)))->(void)
(	O
acl_t	struct
*	O
mark	*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int))
)	O
{	O
if	O
(	O
mark	*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int))
)	O
{	O
acl_free	(*(struct(*(struct(*`,struct`,*`,int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*`,int,int)),int)))->(void)
(	O
mark	*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int))
->	O
next	*(struct(*(struct(*(struct`),int,int)),int,int))
)	O
;	O
acl_tail	*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int))
=	O
mark	*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int))
;	O
acl_tail	*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int))
->	O
next	*(struct(*(struct(*(struct`),int,int)),int,int))
=	O
NULL	O
;	O
}	O
else	O
acl_head	*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int))
=	O
acl_tail	*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int))
=	O
NULL	O
;	O
}	O
int	O
acl_match	(*(struct(char,char,char,char,int,struct(short,array(char)),struct(short,array(char)),int,array(char),array(char),array(char))),*(struct(short,short,struct(int),array(char))))->(int)
(	O
CTL_MSG	struct(char,char,char,char,int,struct(short,array(char)),struct(short,array(char)),int,array(char),array(char),array(char))
*	O
msg	*(struct(char,char,char,char,int,struct(short,array(char)),struct(short,array(char)),int,array(char),array(char),array(char)))
,	O
struct	O
sockaddr_in	struct(short,short,struct(int),array(char))
*	O
sa_in	*(struct(short,short,struct(int),array(char)))
)	O
{	O
acl_t	struct
*	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
,	O
*	O
mark	*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int))
;	O
unsigned	O
int	O
ip	int
;	O
mark	*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int))
=	O
open_users_acl	(*(char))->(*(struct(*(struct(*`,struct`,*`,int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*`,int,int)),int)))
(	O
msg	*(struct(char,char,char,char,int,struct(short,array(char)),struct(short,array(char)),int,array(char),array(char),array(char)))
->	O
r_name	array(char)
)	O
;	O
ip	int
=	O
sa_in	*(struct(short,short,struct(int),array(char)))
->	O
sin_addr	struct(int)
.	O
s_addr	int
;	O
for	O
(	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
=	O
acl_head	*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int))
;	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
;	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
=	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
->	O
next	*(struct(*(struct(*(struct`),int,int)),int,int))
)	O
{	O
netdef_t	struct
*	O
net	*(struct(*(struct(*(struct`),int,int)),int,int))
;	O
for	O
(	O
net	*(struct(*(struct(*(struct`),int,int)),int,int))
=	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
->	O
netlist	*(struct(*(struct(*(struct`),int,int)),int,int))
;	O
net	*(struct(*(struct(*(struct`),int,int)),int,int))
;	O
net	*(struct(*(struct(*(struct`),int,int)),int,int))
=	O
net	*(struct(*(struct(*(struct`),int,int)),int,int))
->	O
next	*(struct(*(struct(*(struct`),int,int)),int,int))
)	O
{	O
if	O
(	O
net	*(struct(*(struct(*(struct`),int,int)),int,int))
->	O
ipaddr	int
==	O
(	O
ip	int
&	O
net	*(struct(*(struct(*(struct`),int,int)),int,int))
->	O
netmask	int
)	O
)	O
{	O
if	O
(	O
regexec	(*(struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)),*(char),long,array(struct(int,int)),int)->(int)
(	O
&	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
->	O
re	struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)
,	O
msg	*(struct(char,char,char,char,int,struct(short,array(char)),struct(short,array(char)),int,array(char),array(char),array(char)))
->	O
l_name	array(char)
,	O
0	int
,	O
NULL	O
,	O
0	int
)	O
==	O
0	int
)	O
{	O
discard_acl	(*(struct(*(struct(*`,struct`,*`,int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*`,int,int)),int)))->(void)
(	O
mark	*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int))
)	O
;	O
return	O
acl	struct(*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct(*(struct`),int,int)),int,int)),int)
->	O
action	int
;	O
}	O
}	O
}	O
}	O
discard_acl	(*(struct(*(struct(*`,struct`,*`,int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*`,int,int)),int)))->(void)
(	O
mark	*(struct(*(struct(*(struct`),struct(*`,long,long,long,*`,*`,long,int,int,int,int,int,int,int),*(struct`),int)),struct(*(char),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int),*(struct(*(struct`),int,int)),int))
)	O
;	O
return	O
ACT_ALLOW	int
;	O
}	O
