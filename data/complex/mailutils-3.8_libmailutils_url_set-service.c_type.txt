int	O
mu_url_set_service	(*(struct),*(char))->(int)
(	O
mu_url_t	*(struct)
url	*(struct)
,	O
const	O
char	O
*	O
str	*(char)
)	O
{	O
unsigned	O
port	int
;	O
char	O
*	O
copy	*(char)
;	O
if	O
(	O
!	O
url	*(struct)
)	O
return	O
EINVAL	int
;	O
if	O
(	O
str	*(char)
)	O
{	O
unsigned	O
long	O
n	long
;	O
char	O
*	O
p	*(char)
;	O
n	long
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
str	*(char)
,	O
&	O
p	*(char)
,	O
10	int
)	O
;	O
if	O
(	O
*	O
p	*(char)
)	O
{	O
struct	O
servent	struct(*(char),*(*(char)),int,*(char))
*	O
sp	*(struct(*(char),*(*(char)),int,*(char)))
=	O
getservbyname	(*(char),*(char))->(*(struct(*(char),*(*(char)),int,*(char))))
(	O
str	*(char)
,	O
"tcp"	*(char)
)	O
;	O
if	O
(	O
!	O
sp	*(struct(*(char),*(*(char)),int,*(char)))
)	O
return	O
MU_ERR_TCP_NO_PORT	O
;	O
port	int
=	O
ntohs	(short)->(short)
(	O
sp	*(struct(*(char),*(*(char)),int,*(char)))
->	O
s_port	int
)	O
;	O
}	O
else	O
if	O
(	O
n	long
>	O
USHRT_MAX	O
)	O
return	O
ERANGE	int
;	O
copy	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
str	*(char)
)	O
;	O
if	O
(	O
!	O
copy	*(char)
)	O
return	O
ENOMEM	int
;	O
url	*(struct)
->	O
flags	int
|=	O
MU_URL_PORT	int
;	O
}	O
else	O
{	O
copy	*(char)
=	O
NULL	O
;	O
port	int
=	O
0	int
;	O
url	*(struct)
->	O
flags	int
&=	O
~	O
MU_URL_PORT	int
;	O
}	O
url	*(struct)
->	O
_get_port	*((*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),*(int))->(int))
=	O
NULL	O
;	O
url	*(struct)
->	O
_get_portstr	*((*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),*(char),long,*(long))->(int))
=	O
NULL	O
;	O
free	(*(void))->(void)
(	O
url	*(struct)
->	O
portstr	*(char)
)	O
;	O
url	*(struct)
->	O
port	int
=	O
port	int
;	O
url	*(struct)
->	O
portstr	*(char)
=	O
copy	*(char)
;	O
mu_url_invalidate	(*(struct))->(int)
(	O
url	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
