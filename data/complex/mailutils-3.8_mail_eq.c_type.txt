int	O
mail_eq	(int,*(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
msgset_t	struct
*	O
list	*(struct)
=	O
NULL	O
;	O
size_t	long
n	*(long)
;	O
switch	O
(	O
argc	int
)	O
{	O
case	O
1	int
:	O
n	*(long)
=	O
get_cursor	()->(long)
(	O
)	O
;	O
if	O
(	O
n	*(long)
==	O
0	int
)	O
mu_error	(*(char))->(int)
(	O
_	O
(	O
"No applicable message"	*(char)
)	O
)	O
;	O
else	O
mu_printf	(*(char))->(int)
(	O
"%lu\n"	*(char)
,	O
(	O
unsigned	O
long	O
)	O
n	*(long)
)	O
;	O
break	O
;	O
case	O
2	int
:	O
if	O
(	O
msgset_parse	(int,*(*(char)),int,*(*(struct(*(struct`),int,*(long)))))->(int)
(	O
argc	int
,	O
argv	*(*(char))
,	O
MSG_NODELETED	int
,	O
&	O
list	*(struct)
)	O
==	O
0	int
)	O
{	O
if	O
(	O
list	*(struct)
->	O
msg_part	*(long)
[	O
0	int
]	O
<=	O
total	long
)	O
{	O
set_cursor	(int)->(void)
(	O
list	*(struct)
->	O
msg_part	*(long)
[	O
0	int
]	O
)	O
;	O
mu_printf	(*(char))->(int)
(	O
"%lu\n"	*(char)
,	O
(	O
unsigned	O
long	O
)	O
list	*(struct)
->	O
msg_part	*(long)
[	O
0	int
]	O
)	O
;	O
}	O
else	O
util_error_range	(long)->(int)
(	O
list	*(struct)
->	O
msg_part	*(long)
[	O
0	int
]	O
)	O
;	O
msgset_free	(*(struct(*(struct(*`,int,*`)),int,*(long))))->(void)
(	O
list	*(struct)
)	O
;	O
}	O
break	O
;	O
default	O
:	O
return	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
