void	O
_mu_close_handler	(*(struct(int,enum(int,int,int),int,*(char),long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*(int),*(char),*(struct),*(struct),*(char),int,struct(int,int,int,long,long,long,long,long),array(struct(*((*(void),int,long,*(void))->(void)),*(void))))))->(void)
(	O
mu_imap_t	*(struct)
imap	*(struct)
)	O
{	O
if	O
(	O
imap	*(struct)
->	O
response	enum(int,int,int)
==	O
MU_IMAP_OK	int
)	O
{	O
imap	*(struct)
->	O
session_state	enum(int,int,int,int)
=	O
MU_IMAP_SESSION_AUTH	int
;	O
free	(*(void))->(void)
(	O
imap	*(struct)
->	O
mbox_name	*(char)
)	O
;	O
imap	*(struct)
->	O
mbox_name	*(char)
=	O
NULL	O
;	O
}	O
}	O
int	O
mu_imap_close	(*(struct))->(int)
(	O
mu_imap_t	*(struct)
imap	*(struct)
)	O
{	O
static	O
char	O
const	O
*	O
command	*(char)
=	O
"CLOSE"	*(char)
;	O
static	O
struct	O
imap_command	struct(int,*(char),int,int,*(*(char)),*(char),*(struct),*((*(struct(int,enum(int,int,int),int,*(char),long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*(int),*(char),*(struct`),*(struct`),*(char),int,struct(int,int,int,long,long,long,long,long),array(struct(*((*(void),int,long,*(void))->(void)),*(void))))))->(void)),*((*(struct(int,enum(int,int,int),int,*(char),long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*(int),*(char),*(struct`),*(struct`),*(char),int,struct(int,int,int,long,long,long,long,long),array(struct(*((*(void),int,long,*(void))->(void)),*(void))))),*(struct),*(void))->(void)),*(void))
com	struct(int,*(char),int,int,*(*(char)),*(char),*(struct),*((*(struct(int,enum(int,int,int),int,*`,long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*`,*`,*`,*`,*`,int,struct`,array(struct(*((*(void),int,long,*(void))->(void)),*(void))))))->(void)),*((*(struct(int,enum(int,int,int),int,*`,long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*`,*`,*`,*`,*`,int,struct`,array(struct(*((*(void),int,long,*(void))->(void)),*(void))))),*(struct),*(void))->(void)),*(void))
=	O
{	O
MU_IMAP_SESSION_SELECTED	int
,	O
NULL	O
,	O
MU_IMAP_CLIENT_CLOSE_RX	int
,	O
1	int
,	O
&	O
command	*(char)
,	O
NULL	O
,	O
NULL	O
,	O
_mu_close_handler	(*(struct(int,enum(int,int,int),int,*(char),long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*(int),*(char),*(struct),*(struct),*(char),int,struct(int,int,int,long,long,long,long,long),array(struct(*((*(void),int,long,*(void))->(void)),*(void))))))->(void)
}	O
;	O
return	O
mu_imap_gencom	(*(struct(int,enum(int,int,int),int,*(char),long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*(int),*(char),*(struct),*(struct),*(char),int,struct(int,int,int,long,long,long,long,long),array(struct(*((*(void),int,long,*(void))->(void)),*(void))))),*(struct(int,*(char),int,int,*(*(char)),*(char),*(struct),*((*`)->(void)),*((*`,*`,*`)->(void)),*(void))))->(int)
(	O
imap	*(struct)
,	O
&	O
com	struct(int,*(char),int,int,*(*(char)),*(char),*(struct),*((*(struct(int,enum(int,int,int),int,*`,long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*`,*`,*`,*`,*`,int,struct`,array(struct(*((*(void),int,long,*(void))->(void)),*(void))))))->(void)),*((*(struct(int,enum(int,int,int),int,*`,long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*`,*`,*`,*`,*`,int,struct`,array(struct(*((*(void),int,long,*(void))->(void)),*(void))))),*(struct),*(void))->(void)),*(void))
)	O
;	O
}	O
