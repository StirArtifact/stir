int	O
mpn_toom_eval_pm2exp	O
(	O
mp_ptr	*(long)
xp2	*(long)
,	O
mp_ptr	*(long)
xm2	*(long)
,	O
unsigned	O
k	int
,	O
mp_srcptr	*(long)
xp	*(long)
,	O
mp_size_t	long
n	long
,	O
mp_size_t	long
hn	long
,	O
unsigned	O
shift	long
,	O
mp_ptr	*(long)
tp	*(long)
)	O
{	O
unsigned	O
i	long
;	O
int	O
neg	int
;	O
mp_limb_t	long
cy	long
;	O
ASSERT	O
(	O
k	int
>=	O
3	int
)	O
;	O
ASSERT	O
(	O
shift	long
*	O
k	int
<	O
GMP_NUMB_BITS	O
)	O
;	O
ASSERT	O
(	O
hn	long
>	O
0	int
)	O
;	O
ASSERT	O
(	O
hn	long
<=	O
n	long
)	O
;	O
xp2	*(long)
[	O
n	long
]	O
=	O
mpn_addlsh_n	O
(	O
xp2	*(long)
,	O
xp	*(long)
,	O
xp	*(long)
+	O
2	int
*	O
n	long
,	O
n	long
,	O
2	int
*	O
shift	long
)	O
;	O
for	O
(	O
i	long
=	O
4	int
;	O
i	long
<	O
k	int
;	O
i	long
+=	O
2	int
)	O
xp2	*(long)
[	O
n	long
]	O
+=	O
mpn_addlsh_n	O
(	O
xp2	*(long)
,	O
xp2	*(long)
,	O
xp	*(long)
+	O
i	long
*	O
n	long
,	O
n	long
,	O
i	long
*	O
shift	long
)	O
;	O
tp	*(long)
[	O
n	long
]	O
=	O
mpn_lshift	O
(	O
tp	*(long)
,	O
xp	*(long)
+	O
n	long
,	O
n	long
,	O
shift	long
)	O
;	O
for	O
(	O
i	long
=	O
3	int
;	O
i	long
<	O
k	int
;	O
i	long
+=	O
2	int
)	O
tp	*(long)
[	O
n	long
]	O
+=	O
mpn_addlsh_n	O
(	O
tp	*(long)
,	O
tp	*(long)
,	O
xp	*(long)
+	O
i	long
*	O
n	long
,	O
n	long
,	O
i	long
*	O
shift	long
)	O
;	O
if	O
(	O
k	int
&	O
1	int
)	O
{	O
cy	long
=	O
mpn_addlsh_n	O
(	O
tp	*(long)
,	O
tp	*(long)
,	O
xp	*(long)
+	O
k	int
*	O
n	long
,	O
hn	long
,	O
k	int
*	O
shift	long
)	O
;	O
MPN_INCR_U	O
(	O
tp	*(long)
+	O
hn	long
,	O
n	long
+	O
1	int
-	O
hn	long
,	O
cy	long
)	O
;	O
}	O
else	O
{	O
cy	long
=	O
mpn_addlsh_n	O
(	O
xp2	*(long)
,	O
xp2	*(long)
,	O
xp	*(long)
+	O
k	int
*	O
n	long
,	O
hn	long
,	O
k	int
*	O
shift	long
)	O
;	O
MPN_INCR_U	O
(	O
xp2	*(long)
+	O
hn	long
,	O
n	long
+	O
1	int
-	O
hn	long
,	O
cy	long
)	O
;	O
}	O
neg	int
=	O
(	O
mpn_cmp	O
(	O
xp2	*(long)
,	O
tp	*(long)
,	O
n	long
+	O
1	int
)	O
<	O
0	int
)	O
?	O
~	O
0	int
:	O
0	int
;	O
if	O
(	O
neg	int
)	O
mpn_sub_n	O
(	O
xm2	*(long)
,	O
tp	*(long)
,	O
xp2	*(long)
,	O
n	long
+	O
1	int
)	O
;	O
else	O
mpn_sub_n	O
(	O
xm2	*(long)
,	O
xp2	*(long)
,	O
tp	*(long)
,	O
n	long
+	O
1	int
)	O
;	O
mpn_add_n	O
(	O
xp2	*(long)
,	O
xp2	*(long)
,	O
tp	*(long)
,	O
n	long
+	O
1	int
)	O
;	O
ASSERT	O
(	O
(	O
k	int
+	O
1	int
)	O
*	O
shift	long
>=	O
GMP_LIMB_BITS	int
||	O
xp2	*(long)
[	O
n	long
]	O
<	O
(	O
(	O
CNST_LIMB	O
(	O
1	int
)	O
<<	O
(	O
(	O
k	int
+	O
1	int
)	O
*	O
shift	long
)	O
)	O
-	O
1	int
)	O
/	O
(	O
(	O
CNST_LIMB	O
(	O
1	int
)	O
<<	O
shift	long
)	O
-	O
1	int
)	O
)	O
;	O
ASSERT	O
(	O
(	O
k	int
+	O
2	int
)	O
*	O
shift	long
>=	O
GMP_LIMB_BITS	int
||	O
xm2	*(long)
[	O
n	long
]	O
<	O
(	O
(	O
CNST_LIMB	O
(	O
1	int
)	O
<<	O
(	O
(	O
k	int
+	O
2	int
)	O
*	O
shift	long
)	O
)	O
-	O
(	O
(	O
k	int
&	O
1	int
)	O
?	O
(	O
CNST_LIMB	O
(	O
1	int
)	O
<<	O
shift	long
)	O
:	O
1	int
)	O
)	O
/	O
(	O
(	O
CNST_LIMB	O
(	O
1	int
)	O
<<	O
(	O
2	int
*	O
shift	long
)	O
)	O
-	O
1	int
)	O
)	O
;	O
return	O
neg	int
;	O
}	O
