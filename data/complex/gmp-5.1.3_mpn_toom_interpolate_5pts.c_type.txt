void	O
mpn_toom_interpolate_5pts	O
(	O
mp_ptr	*(long)
c	*(long)
,	O
mp_ptr	*(long)
v2	*(long)
,	O
mp_ptr	*(long)
vm1	*(long)
,	O
mp_size_t	long
k	int
,	O
mp_size_t	long
twor	long
,	O
int	O
sa	int
,	O
mp_limb_t	long
vinf0	long
)	O
{	O
mp_limb_t	long
cy	long
,	O
saved	long
;	O
mp_size_t	long
twok	long
;	O
mp_size_t	long
kk1	long
;	O
mp_ptr	*(long)
c1	*(long)
,	O
v1	*(long)
,	O
c3	*(long)
,	O
vinf	*(long)
;	O
twok	long
=	O
k	int
+	O
k	int
;	O
kk1	long
=	O
twok	long
+	O
1	int
;	O
c1	*(long)
=	O
c	*(long)
+	O
k	int
;	O
v1	*(long)
=	O
c1	*(long)
+	O
k	int
;	O
c3	*(long)
=	O
v1	*(long)
+	O
k	int
;	O
vinf	*(long)
=	O
c3	*(long)
+	O
k	int
;	O
if	O
(	O
sa	int
)	O
ASSERT_NOCARRY	O
(	O
mpn_add_n	O
(	O
v2	*(long)
,	O
v2	*(long)
,	O
vm1	*(long)
,	O
kk1	long
)	O
)	O
;	O
else	O
ASSERT_NOCARRY	O
(	O
mpn_sub_n	O
(	O
v2	*(long)
,	O
v2	*(long)
,	O
vm1	*(long)
,	O
kk1	long
)	O
)	O
;	O
ASSERT_NOCARRY	O
(	O
mpn_divexact_by3	O
(	O
v2	*(long)
,	O
v2	*(long)
,	O
kk1	long
)	O
)	O
;	O
if	O
(	O
sa	int
)	O
{	O
mpn_rsh1add_n	O
(	O
vm1	*(long)
,	O
v1	*(long)
,	O
vm1	*(long)
,	O
kk1	long
)	O
;	O
}	O
else	O
{	O
mpn_rsh1sub_n	O
(	O
vm1	*(long)
,	O
v1	*(long)
,	O
vm1	*(long)
,	O
kk1	long
)	O
;	O
}	O
vinf	*(long)
[	O
0	int
]	O
-=	O
mpn_sub_n	O
(	O
v1	*(long)
,	O
v1	*(long)
,	O
c	*(long)
,	O
twok	long
)	O
;	O
mpn_rsh1sub_n	O
(	O
v2	*(long)
,	O
v2	*(long)
,	O
v1	*(long)
,	O
kk1	long
)	O
;	O
ASSERT_NOCARRY	O
(	O
mpn_sub_n	O
(	O
v1	*(long)
,	O
v1	*(long)
,	O
vm1	*(long)
,	O
kk1	long
)	O
)	O
;	O
cy	long
=	O
mpn_add_n	O
(	O
c1	*(long)
,	O
c1	*(long)
,	O
vm1	*(long)
,	O
kk1	long
)	O
;	O
MPN_INCR_U	O
(	O
c3	*(long)
+	O
1	int
,	O
twor	long
+	O
k	int
-	O
1	int
,	O
cy	long
)	O
;	O
saved	long
=	O
vinf	*(long)
[	O
0	int
]	O
;	O
vinf	*(long)
[	O
0	int
]	O
=	O
vinf0	long
;	O
cy	long
=	O
mpn_sublsh1_n_ip1	O
(	O
v2	*(long)
,	O
vinf	*(long)
,	O
twor	long
)	O
;	O
MPN_DECR_U	O
(	O
v2	*(long)
+	O
twor	long
,	O
kk1	long
-	O
twor	long
,	O
cy	long
)	O
;	O
if	O
(	O
LIKELY	O
(	O
twor	long
>	O
k	int
+	O
1	int
)	O
)	O
{	O
cy	long
=	O
mpn_add_n	O
(	O
vinf	*(long)
,	O
vinf	*(long)
,	O
v2	*(long)
+	O
k	int
,	O
k	int
+	O
1	int
)	O
;	O
MPN_INCR_U	O
(	O
c3	*(long)
+	O
kk1	long
,	O
twor	long
-	O
k	int
-	O
1	int
,	O
cy	long
)	O
;	O
}	O
else	O
{	O
ASSERT_NOCARRY	O
(	O
mpn_add_n	O
(	O
vinf	*(long)
,	O
vinf	*(long)
,	O
v2	*(long)
+	O
k	int
,	O
twor	long
)	O
)	O
;	O
}	O
cy	long
=	O
mpn_sub_n	O
(	O
v1	*(long)
,	O
v1	*(long)
,	O
vinf	*(long)
,	O
twor	long
)	O
;	O
vinf0	long
=	O
vinf	*(long)
[	O
0	int
]	O
;	O
vinf	*(long)
[	O
0	int
]	O
=	O
saved	long
;	O
MPN_DECR_U	O
(	O
v1	*(long)
+	O
twor	long
,	O
kk1	long
-	O
twor	long
,	O
cy	long
)	O
;	O
cy	long
=	O
mpn_sub_n	O
(	O
c1	*(long)
,	O
c1	*(long)
,	O
v2	*(long)
,	O
k	int
)	O
;	O
MPN_DECR_U	O
(	O
v1	*(long)
,	O
kk1	long
,	O
cy	long
)	O
;	O
cy	long
=	O
mpn_add_n	O
(	O
c3	*(long)
,	O
c3	*(long)
,	O
v2	*(long)
,	O
k	int
)	O
;	O
vinf	*(long)
[	O
0	int
]	O
+=	O
cy	long
;	O
ASSERT	O
(	O
vinf	*(long)
[	O
0	int
]	O
>=	O
cy	long
)	O
;	O
MPN_INCR_U	O
(	O
vinf	*(long)
,	O
twor	long
,	O
vinf0	long
)	O
;	O
}	O
