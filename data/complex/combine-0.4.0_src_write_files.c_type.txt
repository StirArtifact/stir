int	O
df_write_output	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(*(char)),*(long),*(long),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int)->(int)
(	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
buffer	*(*(char))
,	O
bufferpos	*(long)
,	O
buffersiz	*(long)
,	O
string	*(char)
,	O
record_delimiter	*(struct(long,enum(int,int,int),*(char)))
,	O
end_record	int
,	O
end_file	int
)	O
FILE	struct
*	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
unsigned	O
char	O
*	O
*	O
buffer	*(*(char))
;	O
size_t	long
*	O
bufferpos	*(long)
;	O
size_t	long
*	O
buffersiz	*(long)
;	O
STRINGTYPE	O
*	O
string	*(char)
;	O
STRINGTYPE	O
*	O
record_delimiter	*(struct(long,enum(int,int,int),*(char)))
;	O
int	O
end_record	int
;	O
int	O
end_file	int
;	O
{	O
STRINGTYPE	O
temp_string	struct(long,enum(int,int,int),*(char))
;	O
STRINGTYPE	O
buffer_desc	struct(long,enum(int,int,int),*(char))
;	O
int	O
return_code	int
;	O
if	O
(	O
*	O
buffer	*(*(char))
==	O
NULL	O
)	O
{	O
*	O
buffer	*(*(char))
=	O
malloc	(long)->(*(void))
(	O
DF_BUFFER_INCREMENT	int
)	O
;	O
if	O
(	O
*	O
buffer	*(*(char))
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*(char)
)	O
)	O
;	O
*	O
buffersiz	*(long)
=	O
DF_BUFFER_INCREMENT	int
;	O
}	O
if	O
(	O
string	*(char)
!=	O
NULL	O
)	O
{	O
temp_string	struct(long,enum(int,int,int),*(char))
.	O
string	*(char)
=	O
string	*(char)
->	O
string	*(char)
;	O
temp_string	struct(long,enum(int,int,int),*(char))
.	O
length	long
=	O
string	*(char)
->	O
length	long
;	O
buffer_desc	struct(long,enum(int,int,int),*(char))
.	O
string	*(char)
=	O
*	O
buffer	*(*(char))
+	O
*	O
bufferpos	*(long)
;	O
buffer_desc	struct(long,enum(int,int,int),*(char))
.	O
length	long
=	O
*	O
buffersiz	*(long)
-	O
*	O
bufferpos	*(long)
;	O
while	O
(	O
*	O
bufferpos	*(long)
+	O
temp_string	struct(long,enum(int,int,int),*(char))
.	O
length	long
>=	O
*	O
buffersiz	*(long)
)	O
{	O
memmove	(*(void),*(void),long)->(*(void))
(	O
buffer_desc	struct(long,enum(int,int,int),*(char))
.	O
string	*(char)
,	O
temp_string	struct(long,enum(int,int,int),*(char))
.	O
string	*(char)
,	O
buffer_desc	struct(long,enum(int,int,int),*(char))
.	O
length	long
)	O
;	O
return_code	int
=	O
fwrite	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
*	O
buffer	*(*(char))
,	O
1	int
,	O
*	O
buffersiz	*(long)
,	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
return_code	int
!=	O
*	O
buffersiz	*(long)
)	O
FATAL_PERROR	O
(	O
_	O
(	O
"File"	*(char)
)	O
)	O
;	O
temp_string	struct(long,enum(int,int,int),*(char))
.	O
string	*(char)
+=	O
buffer_desc	struct(long,enum(int,int,int),*(char))
.	O
length	long
;	O
temp_string	struct(long,enum(int,int,int),*(char))
.	O
length	long
-=	O
buffer_desc	struct(long,enum(int,int,int),*(char))
.	O
length	long
;	O
*	O
bufferpos	*(long)
=	O
0	int
;	O
buffer_desc	struct(long,enum(int,int,int),*(char))
.	O
string	*(char)
=	O
*	O
buffer	*(*(char))
;	O
buffer_desc	struct(long,enum(int,int,int),*(char))
.	O
length	long
=	O
*	O
buffersiz	*(long)
;	O
}	O
if	O
(	O
temp_string	struct(long,enum(int,int,int),*(char))
.	O
length	long
>	O
0	int
)	O
{	O
memmove	(*(void),*(void),long)->(*(void))
(	O
buffer_desc	struct(long,enum(int,int,int),*(char))
.	O
string	*(char)
,	O
temp_string	struct(long,enum(int,int,int),*(char))
.	O
string	*(char)
,	O
temp_string	struct(long,enum(int,int,int),*(char))
.	O
length	long
)	O
;	O
*	O
bufferpos	*(long)
+=	O
temp_string	struct(long,enum(int,int,int),*(char))
.	O
length	long
;	O
}	O
}	O
if	O
(	O
end_record	int
&&	O
record_delimiter	*(struct(long,enum(int,int,int),*(char)))
!=	O
NULL	O
)	O
{	O
temp_string	struct(long,enum(int,int,int),*(char))
.	O
string	*(char)
=	O
record_delimiter	*(struct(long,enum(int,int,int),*(char)))
->	O
string	*(char)
;	O
temp_string	struct(long,enum(int,int,int),*(char))
.	O
length	long
=	O
record_delimiter	*(struct(long,enum(int,int,int),*(char)))
->	O
length	long
;	O
buffer_desc	struct(long,enum(int,int,int),*(char))
.	O
string	*(char)
=	O
*	O
buffer	*(*(char))
+	O
*	O
bufferpos	*(long)
;	O
buffer_desc	struct(long,enum(int,int,int),*(char))
.	O
length	long
=	O
*	O
buffersiz	*(long)
-	O
*	O
bufferpos	*(long)
;	O
while	O
(	O
*	O
bufferpos	*(long)
+	O
temp_string	struct(long,enum(int,int,int),*(char))
.	O
length	long
>	O
*	O
buffersiz	*(long)
)	O
{	O
memmove	(*(void),*(void),long)->(*(void))
(	O
buffer_desc	struct(long,enum(int,int,int),*(char))
.	O
string	*(char)
,	O
temp_string	struct(long,enum(int,int,int),*(char))
.	O
string	*(char)
,	O
buffer_desc	struct(long,enum(int,int,int),*(char))
.	O
length	long
)	O
;	O
return_code	int
=	O
fwrite	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
*	O
buffer	*(*(char))
,	O
1	int
,	O
*	O
buffersiz	*(long)
,	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
return_code	int
!=	O
*	O
buffersiz	*(long)
)	O
FATAL_PERROR	O
(	O
_	O
(	O
"File"	*(char)
)	O
)	O
;	O
temp_string	struct(long,enum(int,int,int),*(char))
.	O
string	*(char)
+=	O
buffer_desc	struct(long,enum(int,int,int),*(char))
.	O
length	long
;	O
temp_string	struct(long,enum(int,int,int),*(char))
.	O
length	long
-=	O
buffer_desc	struct(long,enum(int,int,int),*(char))
.	O
length	long
;	O
*	O
bufferpos	*(long)
=	O
0	int
;	O
buffer_desc	struct(long,enum(int,int,int),*(char))
.	O
string	*(char)
=	O
*	O
buffer	*(*(char))
;	O
buffer_desc	struct(long,enum(int,int,int),*(char))
.	O
length	long
=	O
*	O
buffersiz	*(long)
;	O
}	O
if	O
(	O
temp_string	struct(long,enum(int,int,int),*(char))
.	O
length	long
>	O
0	int
)	O
{	O
memmove	(*(void),*(void),long)->(*(void))
(	O
buffer_desc	struct(long,enum(int,int,int),*(char))
.	O
string	*(char)
,	O
temp_string	struct(long,enum(int,int,int),*(char))
.	O
string	*(char)
,	O
temp_string	struct(long,enum(int,int,int),*(char))
.	O
length	long
)	O
;	O
*	O
bufferpos	*(long)
+=	O
temp_string	struct(long,enum(int,int,int),*(char))
.	O
length	long
;	O
}	O
}	O
if	O
(	O
end_file	int
&&	O
*	O
bufferpos	*(long)
>	O
0	int
)	O
{	O
return_code	int
=	O
fwrite	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
*	O
buffer	*(*(char))
,	O
1	int
,	O
*	O
bufferpos	*(long)
,	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
return_code	int
!=	O
*	O
bufferpos	*(long)
)	O
FATAL_PERROR	O
(	O
_	O
(	O
"File"	*(char)
)	O
)	O
;	O
}	O
return	O
EXIT_SUCCESS	int
;	O
}	O
int	O
df_write_field	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(*(char)),*(long),*(long),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(int),int,int)->(int)
(	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
buffer	*(*(char))
,	O
bufferpos	*(long)
,	O
buffersiz	*(long)
,	O
string	*(char)
,	O
field_delimiter	*(struct(long,enum(int,int,int),*(char)))
,	O
first_written	*(int)
,	O
substitute_spaces	int
,	O
suppress_empty	int
)	O
FILE	struct
*	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
unsigned	O
char	O
*	O
*	O
buffer	*(*(char))
;	O
size_t	long
*	O
bufferpos	*(long)
;	O
size_t	long
*	O
buffersiz	*(long)
;	O
STRINGTYPE	O
*	O
string	*(char)
;	O
STRINGTYPE	O
*	O
field_delimiter	*(struct(long,enum(int,int,int),*(char)))
;	O
int	O
*	O
first_written	*(int)
;	O
int	O
substitute_spaces	int
;	O
int	O
suppress_empty	int
;	O
{	O
int	O
return_code	int
;	O
STRINGTYPE	O
spaces	struct(long,enum(int,int,int),*(char))
;	O
if	O
(	O
*	O
first_written	*(int)
&&	O
field_delimiter	*(struct(long,enum(int,int,int),*(char)))
!=	O
NULL	O
&&	O
(	O
!	O
suppress_empty	int
||	O
string	*(char)
->	O
length	long
>	O
0	int
||	O
substitute_spaces	int
>	O
0	int
)	O
)	O
{	O
return_code	int
=	O
df_write_output	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(*(char)),*(long),*(long),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int)->(int)
(	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
buffer	*(*(char))
,	O
bufferpos	*(long)
,	O
buffersiz	*(long)
,	O
field_delimiter	*(struct(long,enum(int,int,int),*(char)))
,	O
NULL	O
,	O
0	int
,	O
0	int
)	O
;	O
if	O
(	O
return_code	int
!=	O
EXIT_SUCCESS	int
)	O
return	O
return_code	int
;	O
}	O
if	O
(	O
substitute_spaces	int
>	O
100	int
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"the programmer was too lazy to substitute spaces for fields longer than 100 bytes"	*(char)
)	O
)	O
;	O
if	O
(	O
substitute_spaces	int
==	O
0	int
)	O
{	O
return_code	int
=	O
df_write_output	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(*(char)),*(long),*(long),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int)->(int)
(	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
buffer	*(*(char))
,	O
bufferpos	*(long)
,	O
buffersiz	*(long)
,	O
string	*(char)
,	O
NULL	O
,	O
0	int
,	O
0	int
)	O
;	O
if	O
(	O
return_code	int
!=	O
EXIT_SUCCESS	int
)	O
return	O
return_code	int
;	O
}	O
else	O
if	O
(	O
substitute_spaces	int
==	O
-	O
1	int
)	O
return	O
EXIT_SUCCESS	int
;	O
else	O
{	O
spaces	struct(long,enum(int,int,int),*(char))
.	O
length	long
=	O
substitute_spaces	int
;	O
spaces	struct(long,enum(int,int,int),*(char))
.	O
string	*(char)
=	O
"                                                                                           "	*(char)
;	O
return_code	int
=	O
df_write_output	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(*(char)),*(long),*(long),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int)->(int)
(	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
buffer	*(*(char))
,	O
bufferpos	*(long)
,	O
buffersiz	*(long)
,	O
&	O
spaces	struct(long,enum(int,int,int),*(char))
,	O
NULL	O
,	O
0	int
,	O
0	int
)	O
;	O
if	O
(	O
return_code	int
!=	O
EXIT_SUCCESS	int
)	O
return	O
return_code	int
;	O
}	O
*	O
first_written	*(int)
=	O
1	int
;	O
return	O
EXIT_SUCCESS	int
;	O
}	O
