enum	O
{	O
HAVE_GNU_CALLOC	int
=	O
1	int
}	O
;	O
void	O
*	O
xmalloc	(long)->(*(void))
(	O
size_t	long
n	long
)	O
{	O
void	O
*	O
p	*(void)
=	O
malloc	(long)->(*(void))
(	O
n	long
)	O
;	O
if	O
(	O
!	O
p	*(void)
&&	O
n	long
!=	O
0	int
)	O
xalloc_die	()->(void)
(	O
)	O
;	O
return	O
p	*(void)
;	O
}	O
void	O
*	O
xrealloc	(*(void),long)->(*(void))
(	O
void	O
*	O
p	*(void)
,	O
size_t	long
n	long
)	O
{	O
if	O
(	O
!	O
n	long
&&	O
p	*(void)
)	O
{	O
free	(*(void))->(void)
(	O
p	*(void)
)	O
;	O
return	O
NULL	O
;	O
}	O
p	*(void)
=	O
realloc	(*(void),long)->(*(void))
(	O
p	*(void)
,	O
n	long
)	O
;	O
if	O
(	O
!	O
p	*(void)
&&	O
n	long
)	O
xalloc_die	()->(void)
(	O
)	O
;	O
return	O
p	*(void)
;	O
}	O
void	O
*	O
x2realloc	(*(void),*(long))->(*(void))
(	O
void	O
*	O
p	*(void)
,	O
size_t	long
*	O
pn	*(long)
)	O
{	O
return	O
x2nrealloc	(*(void),*(long),long)->(*(void))
(	O
p	*(void)
,	O
pn	*(long)
,	O
1	int
)	O
;	O
}	O
void	O
*	O
xzalloc	(long)->(*(void))
(	O
size_t	long
s	long
)	O
{	O
return	O
memset	(*(void),int,long)->(*(void))
(	O
xmalloc	(long)->(*(void))
(	O
s	long
)	O
,	O
0	int
,	O
s	long
)	O
;	O
}	O
void	O
*	O
xcalloc	(long,long)->(*(void))
(	O
size_t	long
n	long
,	O
size_t	long
s	long
)	O
{	O
void	O
*	O
p	*(void)
;	O
if	O
(	O
xalloc_oversized	O
(	O
n	long
,	O
s	long
)	O
||	O
(	O
!	O
(	O
p	*(void)
=	O
calloc	(long,long)->(*(void))
(	O
n	long
,	O
s	long
)	O
)	O
&&	O
(	O
HAVE_GNU_CALLOC	int
||	O
n	long
!=	O
0	int
)	O
)	O
)	O
xalloc_die	()->(void)
(	O
)	O
;	O
return	O
p	*(void)
;	O
}	O
void	O
*	O
xmemdup	(*(void),long)->(*(void))
(	O
void	O
const	O
*	O
p	*(void)
,	O
size_t	long
s	long
)	O
{	O
return	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
xmalloc	(long)->(*(void))
(	O
s	long
)	O
,	O
p	*(void)
,	O
s	long
)	O
;	O
}	O
char	O
*	O
xstrdup	(*(char))->(*(char))
(	O
char	O
const	O
*	O
string	*(char)
)	O
{	O
return	O
xmemdup	(*(void),long)->(*(void))
(	O
string	*(char)
,	O
strlen	(*(char))->(long)
(	O
string	*(char)
)	O
+	O
1	int
)	O
;	O
}	O
