int	O
xread	(int,*(char),long)->(int)
(	O
fd	int
,	O
buf	*(char)
,	O
count	long
)	O
int	O
fd	int
;	O
char	O
*	O
buf	*(char)
;	O
size_t	long
count	long
;	O
{	O
int	O
chars	int
;	O
int	O
old_errno	int
=	O
errno	O
;	O
if	O
(	O
count	long
<=	O
0	int
)	O
return	O
count	long
;	O
do	O
{	O
errno	O
=	O
old_errno	int
;	O
chars	int
=	O
read	(int,*(void),long)->(long)
(	O
fd	int
,	O
buf	*(char)
,	O
count	long
)	O
;	O
}	O
while	O
(	O
chars	int
<	O
0	int
&&	O
errno	O
==	O
EINTR	int
)	O
;	O
return	O
chars	int
;	O
}	O
int	O
xwrite	(int,*(char),long)->(int)
(	O
fd	int
,	O
buf	*(char)
,	O
count	long
)	O
int	O
fd	int
;	O
const	O
char	O
*	O
buf	*(char)
;	O
size_t	long
count	long
;	O
{	O
int	O
chars	int
;	O
int	O
old_errno	int
=	O
errno	O
;	O
if	O
(	O
count	long
<=	O
0	int
)	O
return	O
count	long
;	O
do	O
{	O
errno	O
=	O
old_errno	int
;	O
chars	int
=	O
write	(int,*(void),long)->(long)
(	O
fd	int
,	O
buf	*(char)
,	O
count	long
)	O
;	O
}	O
while	O
(	O
chars	int
<	O
0	int
&&	O
errno	O
==	O
EINTR	int
)	O
;	O
return	O
chars	int
;	O
}	O
int	O
__xreadlink	(*(char),*(char),long)->(int)
(	O
path	*(char)
,	O
buf	*(char)
,	O
size	long
)	O
const	O
char	O
*	O
path	*(char)
;	O
char	O
*	O
buf	*(char)
;	O
size_t	long
size	long
;	O
{	O
int	O
chars	int
;	O
int	O
old_errno	int
=	O
errno	O
;	O
if	O
(	O
size	long
<=	O
0	int
)	O
return	O
size	long
;	O
do	O
{	O
errno	O
=	O
old_errno	int
;	O
chars	int
=	O
readlink	(*(char),*(char),long)->(long)
(	O
path	*(char)
,	O
buf	*(char)
,	O
size	long
)	O
;	O
}	O
while	O
(	O
chars	int
<	O
0	int
&&	O
errno	O
==	O
EINTR	int
)	O
;	O
return	O
chars	int
;	O
}	O
int	O
xreadlink	(*(char))->(int)
(	O
filename	*(char)
)	O
const	O
char	O
*	O
filename	*(char)
;	O
{	O
int	O
size	long
=	O
100	int
;	O
for	O
(	O
;	O
;	O
)	O
{	O
char	O
*	O
buffer	*(char)
=	O
xmalloc	(long)->(*(void))
(	O
size	long
)	O
;	O
int	O
nchars	int
=	O
__xreadlink	(*(char),*(char),long)->(int)
(	O
filename	*(char)
,	O
buffer	*(char)
,	O
(	O
size_t	long
)	O
size	long
)	O
;	O
if	O
(	O
nchars	int
<	O
size	long
)	O
{	O
xfree	(*(void))->(void)
(	O
buffer	*(char)
)	O
;	O
return	O
nchars	int
;	O
}	O
xfree	(*(void))->(void)
(	O
buffer	*(char)
)	O
;	O
size	long
*=	O
2	int
;	O
}	O
}	O
int	O
xfstat	(int,*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
filedes	int
,	O
buf	*(char)
)	O
int	O
filedes	int
;	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
buf	*(char)
;	O
{	O
int	O
result	int
;	O
int	O
old_errno	int
=	O
errno	O
;	O
do	O
{	O
errno	O
=	O
old_errno	int
;	O
result	int
=	O
fstat	(int,*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
filedes	int
,	O
buf	*(char)
)	O
;	O
}	O
while	O
(	O
result	int
<	O
0	int
&&	O
errno	O
==	O
EINTR	int
)	O
;	O
return	O
result	int
;	O
}	O
int	O
xstat	(*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
filename	*(char)
,	O
buf	*(char)
)	O
const	O
char	O
*	O
filename	*(char)
;	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
buf	*(char)
;	O
{	O
int	O
result	int
;	O
int	O
old_errno	int
=	O
errno	O
;	O
do	O
{	O
errno	O
=	O
old_errno	int
;	O
result	int
=	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
(	O
filename	*(char)
,	O
buf	*(char)
)	O
;	O
}	O
while	O
(	O
result	int
<	O
0	int
&&	O
errno	O
==	O
EINTR	int
)	O
;	O
return	O
result	int
;	O
}	O
int	O
xlstat	(*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
filename	*(char)
,	O
buf	*(char)
)	O
const	O
char	O
*	O
filename	*(char)
;	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
buf	*(char)
;	O
{	O
int	O
result	int
;	O
int	O
old_errno	int
=	O
errno	O
;	O
do	O
{	O
errno	O
=	O
old_errno	int
;	O
result	int
=	O
lstat	(*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
filename	*(char)
,	O
buf	*(char)
)	O
;	O
}	O
while	O
(	O
result	int
<	O
0	int
&&	O
errno	O
==	O
EINTR	int
)	O
;	O
return	O
result	int
;	O
}	O
char	O
*	O
xgetcwd	()->(*(char))
(	O
)	O
{	O
char	O
*	O
result	int
;	O
char	O
*	O
cwd	*(char)
;	O
errno	O
=	O
0	int
;	O
{	O
size_t	long
size	long
;	O
cwd	*(char)
=	O
xmalloc	(long)->(*(void))
(	O
size	long
=	O
64	int
)	O
;	O
while	O
(	O
(	O
result	int
=	O
getcwd	(*(char),long)->(*(char))
(	O
cwd	*(char)
,	O
size	long
)	O
)	O
==	O
NULL	O
&&	O
errno	O
==	O
ERANGE	int
)	O
{	O
cwd	*(char)
=	O
xrealloc	(*(void),long)->(*(void))
(	O
cwd	*(char)
,	O
size	long
+=	O
64	int
)	O
;	O
errno	O
=	O
0	int
;	O
}	O
}	O
if	O
(	O
result	int
==	O
NULL	O
)	O
{	O
xfree	(*(void))->(void)
(	O
cwd	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
return	O
cwd	*(char)
;	O
}	O
char	O
*	O
xdirname	(*(char))->(*(char))
(	O
name	*(char)
)	O
char	O
*	O
name	*(char)
;	O
{	O
char	O
*	O
ptr	*(char)
=	O
strrchr	(*(char),int)->(*(char))
(	O
name	*(char)
,	O
'/'	O
)	O
;	O
if	O
(	O
ptr	*(char)
==	O
NULL	O
)	O
return	O
xstrdup	(*(char))->(*(char))
(	O
"."	*(char)
)	O
;	O
else	O
{	O
char	O
*	O
ptr2	*(char)
=	O
xstrdup	(*(char))->(*(char))
(	O
name	*(char)
)	O
;	O
ptr2	*(char)
[	O
ptr	*(char)
-	O
name	*(char)
]	O
=	O
'0'	O
;	O
return	O
ptr2	*(char)
;	O
}	O
}	O
char	O
*	O
xbasename	(*(char))->(*(char))
(	O
name	*(char)
)	O
char	O
*	O
name	*(char)
;	O
{	O
char	O
*	O
base	*(char)
;	O
size_t	long
len	long
=	O
strlen	(*(char))->(long)
(	O
name	*(char)
)	O
;	O
if	O
(	O
name	*(char)
[	O
len	long
-	O
1	int
]	O
==	O
'/'	O
)	O
name	*(char)
[	O
len	long
-	O
1	int
]	O
=	O
'\0'	O
;	O
base	*(char)
=	O
strrchr	(*(char),int)->(*(char))
(	O
name	*(char)
,	O
'/'	O
)	O
;	O
return	O
base	*(char)
?	O
base	*(char)
+	O
1	int
:	O
name	*(char)
;	O
}	O
