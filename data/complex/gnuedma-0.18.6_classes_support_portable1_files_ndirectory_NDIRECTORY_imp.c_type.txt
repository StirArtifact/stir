typedef	O
struct	O
{	O
EPChar	*(char)
dir_name	*(char)
;	O
DIR	struct
*	O
handler	*(struct)
;	O
}	O
DtNDIRECTORY	struct(*(char),*(struct))
;	O
ESint32	int
EDMAPROC	O
NDIRECTORYopendirZrS32	(int,*(char))->(int)
(	O
OBJID	int
IdObj	int
,	O
EPChar	*(char)
name	*(char)
)	O
{	O
DtNDIRECTORY	struct(*(char),*(struct))
*	O
m	*(struct(*(char),*(struct)))
;	O
m	*(struct(*(char),*(struct)))
=	O
(	O
DtNDIRECTORY	struct(*(char),*(struct))
*	O
)	O
edma_get_data_ref	(int)->(*(void))
(	O
IdObj	int
)	O
;	O
if	O
(	O
(	O
m	*(struct(*(char),*(struct)))
->	O
handler	*(struct)
=	O
opendir	(*(char))->(*(struct))
(	O
name	*(char)
)	O
)	O
==	O
NULL	O
)	O
{	O
edma_printf_obj	(int,*(char))->(long)
(	O
IdObj	int
,	O
"Can't open directory '%s'"	*(char)
,	O
name	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
edma_wprop3	(int,*(char))->(int)
(	O
IdObj	int
,	O
"dir_name"	*(char)
,	O
name	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
NDIRECTORYclosedirrS32	(int)->(int)
(	O
OBJID	int
IdObj	int
)	O
{	O
DtNDIRECTORY	struct(*(char),*(struct))
*	O
m	*(struct(*(char),*(struct)))
;	O
m	*(struct(*(char),*(struct)))
=	O
(	O
DtNDIRECTORY	struct(*(char),*(struct))
*	O
)	O
edma_get_data_ref	(int)->(*(void))
(	O
IdObj	int
)	O
;	O
return	O
closedir	(*(struct))->(int)
(	O
m	*(struct(*(char),*(struct)))
->	O
handler	*(struct)
)	O
;	O
}	O
ESint32	int
EDMAPROC	O
NDIRECTORYreaddirsZsS32rS32	(int,*(*(char)),*(long))->(int)
(	O
OBJID	int
IdObj	int
,	O
EPChar	*(char)
*	O
name	*(char)
,	O
EPSint32	*(long)
type	long
)	O
{	O
DtNDIRECTORY	struct(*(char),*(struct))
*	O
m	*(struct(*(char),*(struct)))
;	O
struct	O
dirent	struct(long,long,short,char,array(char))
*	O
item	*(struct(long,long,short,char,array(char)))
;	O
m	*(struct(*(char),*(struct)))
=	O
(	O
DtNDIRECTORY	struct(*(char),*(struct))
*	O
)	O
edma_get_data_ref	(int)->(*(void))
(	O
IdObj	int
)	O
;	O
if	O
(	O
(	O
item	*(struct(long,long,short,char,array(char)))
=	O
readdir	(*(struct))->(*(struct(long,long,short,char,array(char))))
(	O
m	*(struct(*(char),*(struct)))
->	O
handler	*(struct)
)	O
)	O
==	O
NULL	O
)	O
return	O
-	O
1	int
;	O
*	O
name	*(char)
=	O
item	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
;	O
*	O
type	long
=	O
item	*(struct(long,long,short,char,array(char)))
->	O
d_type	char
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
NDIRECTORYreadallsArS32	(int)->(int)
(	O
OBJID	int
IdObj	int
)	O
{	O
DtNDIRECTORY	struct(*(char),*(struct))
*	O
m	*(struct(*(char),*(struct)))
;	O
m	*(struct(*(char),*(struct)))
=	O
(	O
DtNDIRECTORY	struct(*(char),*(struct))
*	O
)	O
edma_get_data_ref	(int)->(*(void))
(	O
IdObj	int
)	O
;	O
edma_printf_obj	(int,*(char))->(long)
(	O
IdObj	int
,	O
"readall method still not implemented"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
