void	O
mpz_set_d	O
(	O
mpz_ptr	*(struct(int,int,*(long)))
r	*(struct(int,int,*(long)))
,	O
double	O
d	long
)	O
{	O
int	O
negative	int
;	O
mp_limb_t	long
tp	*(long)
[	O
LIMBS_PER_DOUBLE	O
]	O
;	O
mp_ptr	*(long)
rp	*(long)
;	O
mp_size_t	long
rn	long
;	O
DOUBLE_NAN_INF_ACTION	O
(	O
d	long
,	O
__gmp_invalid_operation	()->(void)
(	O
)	O
,	O
__gmp_invalid_operation	()->(void)
(	O
)	O
)	O
;	O
negative	int
=	O
d	long
<	O
0	int
;	O
d	long
=	O
ABS	O
(	O
d	long
)	O
;	O
rn	long
=	O
__gmp_extract_double	(*(long),double)->(int)
(	O
tp	*(long)
,	O
d	long
)	O
;	O
if	O
(	O
ALLOC	O
(	O
r	*(struct(int,int,*(long)))
)	O
<	O
rn	long
)	O
_mpz_realloc	O
(	O
r	*(struct(int,int,*(long)))
,	O
rn	long
)	O
;	O
if	O
(	O
rn	long
<=	O
0	int
)	O
rn	long
=	O
0	int
;	O
rp	*(long)
=	O
PTR	O
(	O
r	*(struct(int,int,*(long)))
)	O
;	O
switch	O
(	O
rn	long
)	O
{	O
default	O
:	O
MPN_ZERO	O
(	O
rp	*(long)
,	O
rn	long
-	O
LIMBS_PER_DOUBLE	O
)	O
;	O
rp	*(long)
+=	O
rn	long
-	O
LIMBS_PER_DOUBLE	O
;	O
case	O
2	int
:	O
rp	*(long)
[	O
1	int
]	O
=	O
tp	*(long)
[	O
1	int
]	O
,	O
rp	*(long)
[	O
0	int
]	O
=	O
tp	*(long)
[	O
0	int
]	O
;	O
break	O
;	O
case	O
1	int
:	O
rp	*(long)
[	O
0	int
]	O
=	O
tp	*(long)
[	O
1	int
]	O
;	O
break	O
;	O
case	O
0	int
:	O
break	O
;	O
}	O
SIZ	O
(	O
r	*(struct(int,int,*(long)))
)	O
=	O
negative	int
?	O
-	O
rn	long
:	O
rn	long
;	O
}	O
