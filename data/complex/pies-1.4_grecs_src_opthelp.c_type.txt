static	O
void	O
indent	(long,long)->(void)
(	O
size_t	long
start	long
,	O
size_t	long
col	int
)	O
{	O
for	O
(	O
;	O
start	long
<	O
col	int
;	O
start	long
++	O
)	O
putchar	(int)->(int)
(	O
' '	O
)	O
;	O
}	O
static	O
void	O
print_option_descr	(*(char),long,long)->(void)
(	O
const	O
char	O
*	O
descr	*(char)
,	O
size_t	long
lmargin	long
,	O
size_t	long
rmargin	long
)	O
{	O
while	O
(	O
*	O
descr	*(char)
)	O
{	O
int	O
i	int
,	O
s	*(char)
=	O
0	int
;	O
size_t	long
width	long
=	O
rmargin	long
-	O
lmargin	long
;	O
for	O
(	O
i	int
=	O
0	int
;	O
;	O
i	int
++	O
)	O
{	O
if	O
(	O
descr	*(char)
[	O
i	int
]	O
==	O
0	int
||	O
descr	*(char)
[	O
i	int
]	O
==	O
' '	O
||	O
descr	*(char)
[	O
i	int
]	O
==	O
'\t'	O
)	O
{	O
if	O
(	O
i	int
>	O
width	long
)	O
break	O
;	O
s	*(char)
=	O
i	int
;	O
if	O
(	O
descr	*(char)
[	O
i	int
]	O
==	O
0	int
)	O
break	O
;	O
}	O
}	O
printf	(*(char))->(int)
(	O
"%*.*s\n"	*(char)
,	O
s	*(char)
,	O
s	*(char)
,	O
descr	*(char)
)	O
;	O
descr	*(char)
+=	O
s	*(char)
;	O
if	O
(	O
*	O
descr	*(char)
)	O
{	O
indent	(long,long)->(void)
(	O
0	int
,	O
lmargin	long
)	O
;	O
descr	*(char)
++	O
;	O
}	O
}	O
}	O
static	O
int	O
optcmp	(*(void),*(void))->(int)
(	O
const	O
void	O
*	O
a	*(struct(int,struct(struct(*(char),int,int),struct(*(char),int,int)),union(*(struct(*`,*`,long,*`,*`)),*(char),struct(long,*(*`)))))
,	O
const	O
void	O
*	O
b	*(struct(int,struct(struct(*(char),int,int),struct(*(char),int,int)),union(*(struct(*`,*`,long,*`,*`)),*(char),struct(long,*(*`)))))
)	O
{	O
struct	O
grecs_opthelp	struct(*(char),*(char),int,*(char))
const	O
*	O
ap	array(struct(int,int,*(void),*(void)))
=	O
(	O
struct	O
grecs_opthelp	struct(*(char),*(char),int,*(char))
const	O
*	O
)	O
a	*(struct(int,struct(struct(*(char),int,int),struct(*(char),int,int)),union(*(struct(*`,*`,long,*`,*`)),*(char),struct(long,*(*`)))))
;	O
struct	O
grecs_opthelp	struct(*(char),*(char),int,*(char))
const	O
*	O
bp	*(struct(*(char),*(char),int,*(char)))
=	O
(	O
struct	O
grecs_opthelp	struct(*(char),*(char),int,*(char))
const	O
*	O
)	O
b	*(struct(int,struct(struct(*(char),int,int),struct(*(char),int,int)),union(*(struct(*`,*`,long,*`,*`)),*(char),struct(long,*(*`)))))
;	O
const	O
char	O
*	O
opta	*(char)
,	O
*	O
optb	*(char)
;	O
size_t	long
alen	long
,	O
blen	long
;	O
for	O
(	O
opta	*(char)
=	O
ap	array(struct(int,int,*(void),*(void)))
->	O
opt	*(char)
;	O
*	O
opta	*(char)
==	O
'-'	O
;	O
opta	*(char)
++	O
)	O
;	O
alen	long
=	O
strcspn	(*(char),*(char))->(long)
(	O
opta	*(char)
,	O
","	*(char)
)	O
;	O
for	O
(	O
optb	*(char)
=	O
bp	*(struct(*(char),*(char),int,*(char)))
->	O
opt	*(char)
;	O
*	O
optb	*(char)
==	O
'-'	O
;	O
optb	*(char)
++	O
)	O
;	O
blen	long
=	O
strcspn	(*(char),*(char))->(long)
(	O
optb	*(char)
,	O
","	*(char)
)	O
;	O
if	O
(	O
alen	long
>	O
blen	long
)	O
blen	long
=	O
alen	long
;	O
return	O
strncmp	(*(char),*(char),long)->(int)
(	O
opta	*(char)
,	O
optb	*(char)
,	O
blen	long
)	O
;	O
}	O
static	O
void	O
sort_options	(*(struct(*(char),*(char),int,*(char))),int,int)->(void)
(	O
struct	O
grecs_opthelp	struct(*(char),*(char),int,*(char))
*	O
opthelp	*(struct)
,	O
int	O
start	long
,	O
int	O
count	long
)	O
{	O
qsort	(*(void),long,long,*((*(void),*(void))->(int)))->(void)
(	O
opthelp	*(struct)
+	O
start	long
,	O
count	long
,	O
sizeof	O
(	O
opthelp	*(struct)
[	O
0	int
]	O
)	O
,	O
optcmp	(*(void),*(void))->(int)
)	O
;	O
}	O
static	O
int	O
sort_group	(*(struct(*(char),*(char),int,*(char))),long,int)->(int)
(	O
struct	O
grecs_opthelp	struct(*(char),*(char),int,*(char))
*	O
opthelp	*(struct)
,	O
size_t	long
optcount	long
,	O
int	O
start	long
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
start	long
;	O
i	int
<	O
optcount	long
&&	O
opthelp	*(struct)
[	O
i	int
]	O
.	O
opt	*(char)
;	O
i	int
++	O
)	O
;	O
sort_options	(*(struct(*(char),*(char),int,*(char))),int,int)->(void)
(	O
opthelp	*(struct)
,	O
start	long
,	O
i	int
-	O
start	long
)	O
;	O
return	O
i	int
+	O
1	int
;	O
}	O
static	O
void	O
sort_opthelp	(*(struct(*(char),*(char),int,*(char))),long)->(void)
(	O
struct	O
grecs_opthelp	struct(*(char),*(char),int,*(char))
*	O
opthelp	*(struct)
,	O
size_t	long
optcount	long
)	O
{	O
int	O
start	long
;	O
for	O
(	O
start	long
=	O
0	int
;	O
start	long
<	O
optcount	long
;	O
)	O
{	O
if	O
(	O
!	O
opthelp	*(struct)
[	O
start	long
]	O
.	O
opt	*(char)
)	O
start	long
=	O
sort_group	(*(struct(*(char),*(char),int,*(char))),long,int)->(int)
(	O
opthelp	*(struct)
,	O
optcount	long
,	O
start	long
+	O
1	int
)	O
;	O
else	O
start	long
=	O
sort_group	(*(struct(*(char),*(char),int,*(char))),long,int)->(int)
(	O
opthelp	*(struct)
,	O
optcount	long
,	O
start	long
)	O
;	O
}	O
}	O
void	O
grecs_print_help	(*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*`,*`,int,*`)),long,*((*`)->(void)),*((*`)->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char))))->(void)
(	O
struct	O
grecs_proginfo	struct(*(char),*(*(char)),*(char),*(char),*(struct),long,*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))))->(void)),*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char))
*	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
)	O
{	O
unsigned	O
i	int
;	O
int	O
argsused	int
=	O
0	int
;	O
struct	O
grecs_opthelp	struct(*(char),*(char),int,*(char))
*	O
opthelp	*(struct)
;	O
size_t	long
optcount	long
;	O
printf	(*(char))->(int)
(	O
"%s %s "	*(char)
,	O
_	O
(	O
"Usage:"	*(char)
)	O
,	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
progname	*(char)
)	O
;	O
if	O
(	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
subcmd	*(*(char))
)	O
printf	(*(char))->(int)
(	O
"%s "	*(char)
,	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
subcmd	*(*(char))
[	O
0	int
]	O
)	O
;	O
printf	(*(char))->(int)
(	O
"[%s]... %s\n"	*(char)
,	O
_	O
(	O
"OPTION"	*(char)
)	O
,	O
!	O
ISEMPTY	O
(	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
args_doc	*(char)
)	O
?	O
gettext	(*(char))->(*(char))
(	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
args_doc	*(char)
)	O
:	O
""	*(char)
)	O
;	O
if	O
(	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
subcmd	*(*(char))
&&	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
subcmd	*(*(char))
[	O
1	int
]	O
)	O
{	O
char	O
*	O
*	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
;	O
printf	(*(char))->(int)
(	O
"%s: "	*(char)
,	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
subcmd	*(*(char))
[	O
2	int
]	O
?	O
_	O
(	O
"Aliases"	*(char)
)	O
:	O
_	O
(	O
"Alias"	*(char)
)	O
)	O
;	O
for	O
(	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
=	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
subcmd	*(*(char))
+	O
1	int
;	O
*	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
;	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
++	O
)	O
printf	(*(char))->(int)
(	O
"%s%c"	*(char)
,	O
*	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
,	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
[	O
1	int
]	O
?	O
' '	O
:	O
'\n'	O
)	O
;	O
}	O
if	O
(	O
!	O
ISEMPTY	O
(	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
docstring	*(char)
)	O
)	O
print_option_descr	(*(char),long,long)->(void)
(	O
gettext	(*(char))->(*(char))
(	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
docstring	*(char)
)	O
,	O
0	int
,	O
RMARGIN	int
)	O
;	O
putchar	(int)->(int)
(	O
'\n'	O
)	O
;	O
opthelp	*(struct)
=	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
opthelp	*(struct)
;	O
optcount	long
=	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
optcount	long
;	O
sort_opthelp	(*(struct(*(char),*(char),int,*(char))),long)->(void)
(	O
opthelp	*(struct)
,	O
optcount	long
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
optcount	long
;	O
i	int
++	O
)	O
{	O
unsigned	O
n	long
;	O
if	O
(	O
opthelp	*(struct)
[	O
i	int
]	O
.	O
opt	*(char)
)	O
{	O
n	long
=	O
printf	(*(char))->(int)
(	O
"  %s"	*(char)
,	O
opthelp	*(struct)
[	O
i	int
]	O
.	O
opt	*(char)
)	O
;	O
if	O
(	O
opthelp	*(struct)
[	O
i	int
]	O
.	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
)	O
{	O
char	O
*	O
cb	*(char)
,	O
*	O
ce	*(char)
;	O
argsused	int
=	O
1	int
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
opthelp	*(struct)
[	O
i	int
]	O
.	O
opt	*(char)
)	O
==	O
2	int
)	O
{	O
if	O
(	O
!	O
opthelp	*(struct)
[	O
i	int
]	O
.	O
is_optional	int
)	O
{	O
putchar	(int)->(int)
(	O
' '	O
)	O
;	O
n	long
++	O
;	O
}	O
}	O
else	O
{	O
putchar	(int)->(int)
(	O
'='	O
)	O
;	O
n	long
++	O
;	O
}	O
if	O
(	O
opthelp	*(struct)
[	O
i	int
]	O
.	O
is_optional	int
)	O
{	O
cb	*(char)
=	O
"["	*(char)
;	O
ce	*(char)
=	O
"]"	*(char)
;	O
}	O
else	O
cb	*(char)
=	O
ce	*(char)
=	O
""	*(char)
;	O
n	long
+=	O
printf	(*(char))->(int)
(	O
"%s%s%s"	*(char)
,	O
cb	*(char)
,	O
gettext	(*(char))->(*(char))
(	O
opthelp	*(struct)
[	O
i	int
]	O
.	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
)	O
,	O
ce	*(char)
)	O
;	O
}	O
if	O
(	O
n	long
>=	O
DESCRCOLUMN	int
)	O
{	O
putchar	(int)->(int)
(	O
'\n'	O
)	O
;	O
n	long
=	O
0	int
;	O
}	O
indent	(long,long)->(void)
(	O
n	long
,	O
DESCRCOLUMN	int
)	O
;	O
print_option_descr	(*(char),long,long)->(void)
(	O
gettext	(*(char))->(*(char))
(	O
opthelp	*(struct)
[	O
i	int
]	O
.	O
descr	*(char)
)	O
,	O
DESCRCOLUMN	int
,	O
RMARGIN	int
)	O
;	O
}	O
else	O
{	O
if	O
(	O
i	int
)	O
putchar	(int)->(int)
(	O
'\n'	O
)	O
;	O
indent	(long,long)->(void)
(	O
0	int
,	O
GROUPCOLUMN	int
)	O
;	O
print_option_descr	(*(char),long,long)->(void)
(	O
gettext	(*(char))->(*(char))
(	O
opthelp	*(struct)
[	O
i	int
]	O
.	O
descr	*(char)
)	O
,	O
GROUPCOLUMN	int
,	O
RMARGIN	int
)	O
;	O
putchar	(int)->(int)
(	O
'\n'	O
)	O
;	O
}	O
}	O
putchar	(int)->(int)
(	O
'\n'	O
)	O
;	O
if	O
(	O
argsused	int
)	O
{	O
print_option_descr	(*(char),long,long)->(void)
(	O
_	O
(	O
"Mandatory or optional arguments to "	*(char)
"long options are also mandatory or "	*(char)
"optional for any corresponding short "	*(char)
"options."	*(char)
)	O
,	O
0	int
,	O
RMARGIN	int
)	O
;	O
putchar	(int)->(int)
(	O
'\n'	O
)	O
;	O
}	O
if	O
(	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
print_help_hook	*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))))->(void))
)	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
print_help_hook	*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))))->(void))
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
!	O
ISEMPTY	O
(	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
bug_address	*(char)
)	O
)	O
printf	(*(char))->(int)
(	O
_	O
(	O
"Report bugs to %s.\n"	*(char)
)	O
,	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
bug_address	*(char)
)	O
;	O
if	O
(	O
!	O
ISEMPTY	O
(	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
url	*(char)
)	O
)	O
printf	(*(char))->(int)
(	O
_	O
(	O
"%s home page: <%s>\n"	*(char)
)	O
,	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
package	*(char)
,	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
url	*(char)
)	O
;	O
if	O
(	O
!	O
ISEMPTY	O
(	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
epilogue	*(char)
)	O
)	O
printf	(*(char))->(int)
(	O
"%s"	*(char)
,	O
gettext	(*(char))->(*(char))
(	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
epilogue	*(char)
)	O
)	O
;	O
}	O
static	O
int	O
cmpidx_short	(*(void),*(void))->(int)
(	O
const	O
void	O
*	O
a	*(struct(int,struct(struct(*(char),int,int),struct(*(char),int,int)),union(*(struct(*`,*`,long,*`,*`)),*(char),struct(long,*(*`)))))
,	O
const	O
void	O
*	O
b	*(struct(int,struct(struct(*(char),int,int),struct(*(char),int,int)),union(*(struct(*`,*`,long,*`,*`)),*(char),struct(long,*(*`)))))
)	O
{	O
struct	O
grecs_opthelp	struct(*(char),*(char),int,*(char))
const	O
*	O
*	O
opta	*(char)
=	O
(	O
struct	O
grecs_opthelp	struct(*(char),*(char),int,*(char))
const	O
*	O
*	O
)	O
a	*(struct(int,struct(struct(*(char),int,int),struct(*(char),int,int)),union(*(struct(*`,*`,long,*`,*`)),*(char),struct(long,*(*`)))))
;	O
struct	O
grecs_opthelp	struct(*(char),*(char),int,*(char))
const	O
*	O
*	O
optb	*(char)
=	O
(	O
struct	O
grecs_opthelp	struct(*(char),*(char),int,*(char))
const	O
*	O
*	O
)	O
b	*(struct(int,struct(struct(*(char),int,int),struct(*(char),int,int)),union(*(struct(*`,*`,long,*`,*`)),*(char),struct(long,*(*`)))))
;	O
return	O
(	O
*	O
opta	*(char)
)	O
->	O
opt	*(char)
[	O
1	int
]	O
-	O
(	O
*	O
optb	*(char)
)	O
->	O
opt	*(char)
[	O
1	int
]	O
;	O
}	O
static	O
int	O
cmpidx_long	(*(void),*(void))->(int)
(	O
const	O
void	O
*	O
a	*(struct(int,struct(struct(*(char),int,int),struct(*(char),int,int)),union(*(struct(*`,*`,long,*`,*`)),*(char),struct(long,*(*`)))))
,	O
const	O
void	O
*	O
b	*(struct(int,struct(struct(*(char),int,int),struct(*(char),int,int)),union(*(struct(*`,*`,long,*`,*`)),*(char),struct(long,*(*`)))))
)	O
{	O
struct	O
grecs_opthelp	struct(*(char),*(char),int,*(char))
const	O
*	O
*	O
ap	array(struct(int,int,*(void),*(void)))
=	O
(	O
struct	O
grecs_opthelp	struct(*(char),*(char),int,*(char))
const	O
*	O
*	O
)	O
a	*(struct(int,struct(struct(*(char),int,int),struct(*(char),int,int)),union(*(struct(*`,*`,long,*`,*`)),*(char),struct(long,*(*`)))))
;	O
struct	O
grecs_opthelp	struct(*(char),*(char),int,*(char))
const	O
*	O
*	O
bp	*(struct(*(char),*(char),int,*(char)))
=	O
(	O
struct	O
grecs_opthelp	struct(*(char),*(char),int,*(char))
const	O
*	O
*	O
)	O
b	*(struct(int,struct(struct(*(char),int,int),struct(*(char),int,int)),union(*(struct(*`,*`,long,*`,*`)),*(char),struct(long,*(*`)))))
;	O
char	O
const	O
*	O
opta	*(char)
,	O
*	O
optb	*(char)
;	O
size_t	long
lena	long
,	O
lenb	long
;	O
if	O
(	O
(	O
*	O
ap	array(struct(int,int,*(void),*(void)))
)	O
->	O
opt	*(char)
[	O
1	int
]	O
==	O
'-'	O
)	O
opta	*(char)
=	O
(	O
*	O
ap	array(struct(int,int,*(void),*(void)))
)	O
->	O
opt	*(char)
;	O
else	O
opta	*(char)
=	O
(	O
*	O
ap	array(struct(int,int,*(void),*(void)))
)	O
->	O
opt	*(char)
+	O
4	int
;	O
lena	long
=	O
strcspn	(*(char),*(char))->(long)
(	O
opta	*(char)
,	O
","	*(char)
)	O
;	O
if	O
(	O
(	O
*	O
bp	*(struct(*(char),*(char),int,*(char)))
)	O
->	O
opt	*(char)
[	O
1	int
]	O
==	O
'-'	O
)	O
optb	*(char)
=	O
(	O
*	O
bp	*(struct(*(char),*(char),int,*(char)))
)	O
->	O
opt	*(char)
;	O
else	O
optb	*(char)
=	O
(	O
*	O
bp	*(struct(*(char),*(char),int,*(char)))
)	O
->	O
opt	*(char)
+	O
4	int
;	O
lenb	long
=	O
strcspn	(*(char),*(char))->(long)
(	O
optb	*(char)
,	O
","	*(char)
)	O
;	O
return	O
strncmp	(*(char),*(char),long)->(int)
(	O
opta	*(char)
,	O
optb	*(char)
,	O
lena	long
>	O
lenb	long
?	O
lenb	long
:	O
lena	long
)	O
;	O
}	O
void	O
grecs_print_usage	(*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*`,*`,int,*`)),long,*((*`)->(void)),*((*`)->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char))))->(void)
(	O
struct	O
grecs_proginfo	struct(*(char),*(*(char)),*(char),*(char),*(struct),long,*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))))->(void)),*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char))
*	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
)	O
{	O
unsigned	O
i	int
;	O
unsigned	O
n	long
;	O
char	O
*	O
buf	*(char)
;	O
size_t	long
bufsize	long
;	O
unsigned	O
nidx	int
;	O
struct	O
grecs_opthelp	struct(*(char),*(char),int,*(char))
*	O
*	O
optidx	*(*(struct(*(char),*(char),int,*(char))))
;	O
struct	O
grecs_opthelp	struct(*(char),*(char),int,*(char))
*	O
opthelp	*(struct)
=	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
opthelp	*(struct)
;	O
size_t	long
optcount	long
=	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
optcount	long
;	O
optidx	*(*(struct(*(char),*(char),int,*(char))))
=	O
grecs_calloc	(long,long)->(*(void))
(	O
optcount	long
,	O
sizeof	O
(	O
optidx	*(*(struct(*(char),*(char),int,*(char))))
[	O
0	int
]	O
)	O
)	O
;	O
bufsize	long
=	O
RMARGIN	int
+	O
1	int
;	O
buf	*(char)
=	O
grecs_malloc	(long)->(*(void))
(	O
bufsize	long
)	O
;	O
n	long
=	O
snprintf	(*(char),long,*(char))->(int)
(	O
buf	*(char)
,	O
bufsize	long
,	O
"%s %s "	*(char)
,	O
_	O
(	O
"Usage:"	*(char)
)	O
,	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
progname	*(char)
)	O
;	O
if	O
(	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
subcmd	*(*(char))
)	O
n	long
+=	O
snprintf	(*(char),long,*(char))->(int)
(	O
buf	*(char)
+	O
n	long
,	O
bufsize	long
-	O
n	long
,	O
"%s "	*(char)
,	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
subcmd	*(*(char))
[	O
0	int
]	O
)	O
;	O
for	O
(	O
i	int
=	O
nidx	int
=	O
0	int
;	O
i	int
<	O
optcount	long
;	O
i	int
++	O
)	O
if	O
(	O
opthelp	*(struct)
[	O
i	int
]	O
.	O
opt	*(char)
&&	O
opthelp	*(struct)
[	O
i	int
]	O
.	O
descr	*(char)
&&	O
opthelp	*(struct)
[	O
i	int
]	O
.	O
opt	*(char)
[	O
1	int
]	O
!=	O
'-'	O
&&	O
opthelp	*(struct)
[	O
i	int
]	O
.	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
==	O
NULL	O
)	O
optidx	*(*(struct(*(char),*(char),int,*(char))))
[	O
nidx	int
++	O
]	O
=	O
opthelp	*(struct)
+	O
i	int
;	O
if	O
(	O
nidx	int
)	O
{	O
qsort	(*(void),long,long,*((*(void),*(void))->(int)))->(void)
(	O
optidx	*(*(struct(*(char),*(char),int,*(char))))
,	O
nidx	int
,	O
sizeof	O
(	O
optidx	*(*(struct(*(char),*(char),int,*(char))))
[	O
0	int
]	O
)	O
,	O
cmpidx_short	(*(void),*(void))->(int)
)	O
;	O
ADDC	O
(	O
'['	O
)	O
;	O
ADDC	O
(	O
'-'	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
nidx	int
;	O
i	int
++	O
)	O
{	O
ADDC	O
(	O
optidx	*(*(struct(*(char),*(char),int,*(char))))
[	O
i	int
]	O
->	O
opt	*(char)
[	O
1	int
]	O
)	O
;	O
}	O
ADDC	O
(	O
']'	O
)	O
;	O
}	O
for	O
(	O
i	int
=	O
nidx	int
=	O
0	int
;	O
i	int
<	O
optcount	long
;	O
i	int
++	O
)	O
{	O
if	O
(	O
opthelp	*(struct)
[	O
i	int
]	O
.	O
opt	*(char)
&&	O
opthelp	*(struct)
[	O
i	int
]	O
.	O
descr	*(char)
&&	O
opthelp	*(struct)
[	O
i	int
]	O
.	O
opt	*(char)
[	O
1	int
]	O
!=	O
'-'	O
&&	O
opthelp	*(struct)
[	O
i	int
]	O
.	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
)	O
optidx	*(*(struct(*(char),*(char),int,*(char))))
[	O
nidx	int
++	O
]	O
=	O
opthelp	*(struct)
+	O
i	int
;	O
}	O
if	O
(	O
nidx	int
)	O
{	O
qsort	(*(void),long,long,*((*(void),*(void))->(int)))->(void)
(	O
optidx	*(*(struct(*(char),*(char),int,*(char))))
,	O
nidx	int
,	O
sizeof	O
(	O
optidx	*(*(struct(*(char),*(char),int,*(char))))
[	O
0	int
]	O
)	O
,	O
cmpidx_short	(*(void),*(void))->(int)
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
nidx	int
;	O
i	int
++	O
)	O
{	O
struct	O
grecs_opthelp	struct(*(char),*(char),int,*(char))
*	O
opt	*(char)
=	O
optidx	*(*(struct(*(char),*(char),int,*(char))))
[	O
i	int
]	O
;	O
size_t	long
len	long
=	O
5	int
+	O
strlen	(*(char))->(long)
(	O
opt	*(char)
->	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
)	O
+	O
(	O
opt	*(char)
->	O
is_optional	int
?	O
2	int
:	O
1	int
)	O
;	O
if	O
(	O
n	long
+	O
len	long
>	O
RMARGIN	int
)	O
FLUSH	O
;	O
buf	*(char)
[	O
n	long
++	O
]	O
=	O
' '	O
;	O
buf	*(char)
[	O
n	long
++	O
]	O
=	O
'['	O
;	O
buf	*(char)
[	O
n	long
++	O
]	O
=	O
'-'	O
;	O
buf	*(char)
[	O
n	long
++	O
]	O
=	O
opt	*(char)
->	O
opt	*(char)
[	O
1	int
]	O
;	O
if	O
(	O
opt	*(char)
->	O
is_optional	int
)	O
{	O
buf	*(char)
[	O
n	long
++	O
]	O
=	O
'['	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
&	O
buf	*(char)
[	O
n	long
]	O
,	O
opt	*(char)
->	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
)	O
;	O
n	long
+=	O
strlen	(*(char))->(long)
(	O
opt	*(char)
->	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
)	O
;	O
buf	*(char)
[	O
n	long
++	O
]	O
=	O
']'	O
;	O
}	O
else	O
{	O
buf	*(char)
[	O
n	long
++	O
]	O
=	O
' '	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
&	O
buf	*(char)
[	O
n	long
]	O
,	O
opt	*(char)
->	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
)	O
;	O
n	long
+=	O
strlen	(*(char))->(long)
(	O
opt	*(char)
->	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
)	O
;	O
}	O
buf	*(char)
[	O
n	long
++	O
]	O
=	O
']'	O
;	O
}	O
}	O
for	O
(	O
i	int
=	O
nidx	int
=	O
0	int
;	O
i	int
<	O
optcount	long
;	O
i	int
++	O
)	O
{	O
if	O
(	O
opthelp	*(struct)
[	O
i	int
]	O
.	O
opt	*(char)
&&	O
opthelp	*(struct)
[	O
i	int
]	O
.	O
descr	*(char)
&&	O
(	O
opthelp	*(struct)
[	O
i	int
]	O
.	O
opt	*(char)
[	O
1	int
]	O
==	O
'-'	O
||	O
opthelp	*(struct)
[	O
i	int
]	O
.	O
opt	*(char)
[	O
2	int
]	O
==	O
','	O
)	O
)	O
optidx	*(*(struct(*(char),*(char),int,*(char))))
[	O
nidx	int
++	O
]	O
=	O
opthelp	*(struct)
+	O
i	int
;	O
}	O
if	O
(	O
nidx	int
)	O
{	O
qsort	(*(void),long,long,*((*(void),*(void))->(int)))->(void)
(	O
optidx	*(*(struct(*(char),*(char),int,*(char))))
,	O
nidx	int
,	O
sizeof	O
(	O
optidx	*(*(struct(*(char),*(char),int,*(char))))
[	O
0	int
]	O
)	O
,	O
cmpidx_long	(*(void),*(void))->(int)
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
nidx	int
;	O
i	int
++	O
)	O
{	O
struct	O
grecs_opthelp	struct(*(char),*(char),int,*(char))
*	O
opt	*(char)
=	O
optidx	*(*(struct(*(char),*(char),int,*(char))))
[	O
i	int
]	O
;	O
size_t	long
len	long
;	O
const	O
char	O
*	O
longopt	*(char)
;	O
if	O
(	O
opt	*(char)
->	O
opt	*(char)
[	O
1	int
]	O
==	O
'-'	O
)	O
longopt	*(char)
=	O
opt	*(char)
->	O
opt	*(char)
;	O
else	O
if	O
(	O
opt	*(char)
->	O
opt	*(char)
[	O
2	int
]	O
==	O
','	O
)	O
longopt	*(char)
=	O
opt	*(char)
->	O
opt	*(char)
+	O
4	int
;	O
else	O
continue	O
;	O
len	long
=	O
3	int
+	O
strlen	(*(char))->(long)
(	O
longopt	*(char)
)	O
+	O
(	O
opt	*(char)
->	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
?	O
1	int
+	O
strlen	(*(char))->(long)
(	O
opt	*(char)
->	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
)	O
+	O
(	O
opt	*(char)
->	O
is_optional	int
?	O
2	int
:	O
0	int
)	O
:	O
0	int
)	O
;	O
if	O
(	O
n	long
+	O
len	long
>	O
RMARGIN	int
)	O
{	O
FLUSH	O
;	O
if	O
(	O
n	long
+	O
len	long
>	O
bufsize	long
)	O
{	O
bufsize	long
=	O
n	long
+	O
len	long
;	O
buf	*(char)
=	O
grecs_realloc	(*(void),long)->(*(void))
(	O
buf	*(char)
,	O
bufsize	long
)	O
;	O
}	O
}	O
buf	*(char)
[	O
n	long
++	O
]	O
=	O
' '	O
;	O
buf	*(char)
[	O
n	long
++	O
]	O
=	O
'['	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
&	O
buf	*(char)
[	O
n	long
]	O
,	O
longopt	*(char)
)	O
;	O
n	long
+=	O
strlen	(*(char))->(long)
(	O
longopt	*(char)
)	O
;	O
if	O
(	O
opt	*(char)
->	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
)	O
{	O
buf	*(char)
[	O
n	long
++	O
]	O
=	O
'='	O
;	O
if	O
(	O
opt	*(char)
->	O
is_optional	int
)	O
{	O
buf	*(char)
[	O
n	long
++	O
]	O
=	O
'['	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
&	O
buf	*(char)
[	O
n	long
]	O
,	O
opt	*(char)
->	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
)	O
;	O
n	long
+=	O
strlen	(*(char))->(long)
(	O
opt	*(char)
->	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
)	O
;	O
buf	*(char)
[	O
n	long
++	O
]	O
=	O
']'	O
;	O
}	O
else	O
{	O
strcpy	(*(char),*(char))->(*(char))
(	O
&	O
buf	*(char)
[	O
n	long
]	O
,	O
opt	*(char)
->	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
)	O
;	O
n	long
+=	O
strlen	(*(char))->(long)
(	O
opt	*(char)
->	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
)	O
;	O
}	O
}	O
buf	*(char)
[	O
n	long
++	O
]	O
=	O
']'	O
;	O
}	O
}	O
if	O
(	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
args_doc	*(char)
)	O
{	O
size_t	long
len	long
=	O
strlen	(*(char))->(long)
(	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
args_doc	*(char)
)	O
+	O
1	int
;	O
if	O
(	O
n	long
+	O
len	long
<=	O
RMARGIN	int
)	O
{	O
buf	*(char)
[	O
n	long
++	O
]	O
=	O
' '	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
buf	*(char)
+	O
n	long
,	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
args_doc	*(char)
)	O
;	O
n	long
+=	O
len	long
;	O
}	O
else	O
{	O
struct	O
wordsplit	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
;	O
if	O
(	O
wordsplit	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
(	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
args_doc	*(char)
,	O
&	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
,	O
WRDSF_SHOWERR	int
|	O
WRDSF_NOVAR	int
|	O
WRDSF_NOCMD	int
|	O
WRDSF_QUOTE	O
|	O
WRDSF_SQUEEZE_DELIMS	int
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordc	long
;	O
i	int
++	O
)	O
{	O
len	long
=	O
strlen	(*(char))->(long)
(	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
i	int
]	O
)	O
+	O
1	int
;	O
if	O
(	O
n	long
+	O
len	long
>	O
RMARGIN	int
)	O
{	O
FLUSH	O
;	O
if	O
(	O
n	long
+	O
len	long
>	O
bufsize	long
)	O
{	O
bufsize	long
=	O
n	long
+	O
len	long
;	O
buf	*(char)
=	O
grecs_realloc	(*(void),long)->(*(void))
(	O
buf	*(char)
,	O
bufsize	long
)	O
;	O
}	O
}	O
buf	*(char)
[	O
n	long
++	O
]	O
=	O
' '	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
buf	*(char)
+	O
n	long
,	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
i	int
]	O
)	O
;	O
n	long
+=	O
len	long
;	O
}	O
}	O
}	O
FLUSH	O
;	O
if	O
(	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
subcmd	*(*(char))
&&	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
subcmd	*(*(char))
[	O
1	int
]	O
)	O
{	O
char	O
*	O
*	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
;	O
printf	(*(char))->(int)
(	O
"%s: %s"	*(char)
,	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
subcmd	*(*(char))
[	O
2	int
]	O
?	O
_	O
(	O
"Aliases"	*(char)
)	O
:	O
_	O
(	O
"Alias"	*(char)
)	O
,	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
progname	*(char)
)	O
;	O
for	O
(	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
=	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
subcmd	*(*(char))
+	O
1	int
;	O
*	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
;	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
++	O
)	O
printf	(*(char))->(int)
(	O
" %s"	*(char)
,	O
*	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
)	O
;	O
putchar	(int)->(int)
(	O
'\n'	O
)	O
;	O
}	O
free	(*(void))->(void)
(	O
optidx	*(*(struct(*(char),*(char),int,*(char))))
)	O
;	O
free	(*(void))->(void)
(	O
buf	*(char)
)	O
;	O
}	O
const	O
char	O
version_etc_copyright	array(char)
[	O
]	O
=	O
"Copyright %s %s %s"	*(char)
;	O
void	O
grecs_print_version_only	(*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*`,*`,int,*`)),long,*((*`)->(void)),*((*`)->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
struct	O
grecs_proginfo	struct(*(char),*(*(char)),*(char),*(char),*(struct),long,*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))))->(void)),*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char))
*	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
,	O
FILE	struct
*	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s"	*(char)
,	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
progname	*(char)
)	O
;	O
if	O
(	O
!	O
ISEMPTY	O
(	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
package	*(char)
)	O
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
" (%s)"	*(char)
,	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
package	*(char)
)	O
;	O
if	O
(	O
!	O
ISEMPTY	O
(	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
version	*(char)
)	O
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
" %s"	*(char)
,	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
version	*(char)
)	O
;	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\n'	O
,	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
version_etc_copyright	array(char)
,	O
_	O
(	O
"(C)"	*(char)
)	O
,	O
ISEMPTY	O
(	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
copyright_year	*(char)
)	O
?	O
"2012"	*(char)
:	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
copyright_year	*(char)
,	O
ISEMPTY	O
(	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
copyright_holder	*(char)
)	O
?	O
"Free Software Foundation, inc."	*(char)
:	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
copyright_holder	*(char)
)	O
;	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\n'	O
,	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
static	O
const	O
char	O
gplv3	array(char)
[	O
]	O
=	O
N_	O
(	O
"License GPLv3+: GNU GPL version 3 or later "	*(char)
"<http://gnu.org/licenses/gpl.html>\n"	*(char)
"This is free software: you are free to change and redistribute it.\n"	*(char)
"There is NO WARRANTY, to the extent permitted by law.\n\n"	*(char)
)	O
;	O
void	O
grecs_print_version	(*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*`,*`,int,*`)),long,*((*`)->(void)),*((*`)->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
struct	O
grecs_proginfo	struct(*(char),*(*(char)),*(char),*(char),*(struct),long,*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))))->(void)),*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char))
*	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
,	O
FILE	struct
*	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
grecs_print_version_only	(*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*`,*`,int,*`)),long,*((*`)->(void)),*((*`)->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
,	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
gettext	(*(char))->(*(char))
(	O
ISEMPTY	O
(	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
license	*(char)
)	O
?	O
gplv3	array(char)
:	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
license	*(char)
)	O
,	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
print_version_hook	*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))))->(void))
)	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
print_version_hook	*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))))->(void))
(	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
authors	*(*(char))
)	O
{	O
int	O
i	int
;	O
unsigned	O
width	long
;	O
const	O
char	O
*	O
written_by	*(char)
=	O
_	O
(	O
"Written by "	*(char)
)	O
;	O
const	O
char	O
*	O
middle_delim	*(char)
=	O
_	O
(	O
", "	*(char)
)	O
;	O
const	O
char	O
*	O
final_delim	*(char)
=	O
_	O
(	O
" and "	*(char)
)	O
;	O
width	long
=	O
strlen	(*(char))->(long)
(	O
written_by	*(char)
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
written_by	*(char)
,	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
;	O
)	O
{	O
const	O
char	O
*	O
author	*(char)
=	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
authors	*(*(char))
[	O
i	int
++	O
]	O
;	O
size_t	long
len	long
=	O
strlen	(*(char))->(long)
(	O
author	*(char)
)	O
;	O
const	O
char	O
*	O
delim	*(char)
=	O
NULL	O
;	O
if	O
(	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
authors	*(*(char))
[	O
i	int
]	O
)	O
{	O
delim	*(char)
=	O
pinfo	*(struct(*(char),*(*(char)),*(char),*(char),*(struct(*(char),*(char),int,*(char))),long,*((*(struct`))->(void)),*((*(struct`))->(void)),*(char),*(char),*(char),*(char),*(char),*(*(char)),*(char),*(char),*(char)))
->	O
authors	*(*(char))
[	O
i	int
+	O
1	int
]	O
?	O
middle_delim	*(char)
:	O
final_delim	*(char)
;	O
len	long
+=	O
strlen	(*(char))->(long)
(	O
delim	*(char)
)	O
;	O
}	O
else	O
len	long
++	O
;	O
if	O
(	O
width	long
+	O
len	long
>	O
RMARGIN	int
)	O
{	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\n'	O
,	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
width	long
=	O
0	int
;	O
}	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
author	*(char)
,	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
width	long
+=	O
len	long
;	O
if	O
(	O
delim	*(char)
)	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
delim	*(char)
,	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
else	O
break	O
;	O
}	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'.'	O
,	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\n'	O
,	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
}	O
