static	O
int	O
fdfvv	(double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
const	O
double	O
h	double
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
x	double
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
f	*(double)
,	O
const	O
gsl_matrix	struct(long,long,long,*(double),*(struct(long,*(double))),int)
*	O
J	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
swts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
gsl_multifit_nlinear_fdf	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),long,long,*(void),long,long,long)
*	O
fdf	*((double,*(void),*(double),*(double))->(void))
,	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
fvv	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
work	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
{	O
int	O
status	int
;	O
const	O
size_t	long
n	int
=	O
fdf	*((double,*(void),*(double),*(double))->(void))
->	O
n	int
;	O
const	O
size_t	long
p	int
=	O
fdf	*((double,*(void),*(double),*(double))->(void))
->	O
p	int
;	O
const	O
double	O
hinv	double
=	O
1.0	int
/	O
h	double
;	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
p	int
;	O
++	O
i	long
)	O
{	O
double	O
xi	double
=	O
gsl_vector_get	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long)->(double)
(	O
x	double
,	O
i	long
)	O
;	O
double	O
vi	double
=	O
gsl_vector_get	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long)->(double)
(	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
,	O
i	long
)	O
;	O
gsl_vector_set	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long,double)->(void)
(	O
work	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
i	long
,	O
xi	double
+	O
h	double
*	O
vi	double
)	O
;	O
}	O
status	int
=	O
gsl_multifit_nlinear_eval_f	(*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
fdf	*((double,*(void),*(double),*(double))->(void))
,	O
work	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
swts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
fvv	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
n	int
;	O
++	O
i	long
)	O
{	O
double	O
fi	double
=	O
gsl_vector_get	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long)->(double)
(	O
f	*(double)
,	O
i	long
)	O
;	O
double	O
fip	double
=	O
gsl_vector_get	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long)->(double)
(	O
fvv	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
i	long
)	O
;	O
gsl_vector_const_view	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
row	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_matrix_const_row	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),long)->(struct(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
J	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
,	O
i	long
)	O
;	O
double	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
,	O
fvvi	double
;	O
gsl_blas_ddot	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(double))->(int)
(	O
&	O
row	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
.	O
vector	struct(long,long,*(long double),*(struct(long,*(long double))),int)
,	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
,	O
&	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
)	O
;	O
fvvi	double
=	O
(	O
2.0	int
*	O
hinv	double
)	O
*	O
(	O
(	O
fip	double
-	O
fi	double
)	O
*	O
hinv	double
-	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
)	O
;	O
gsl_vector_set	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long,double)->(void)
(	O
fvv	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
i	long
,	O
fvvi	double
)	O
;	O
}	O
return	O
status	int
;	O
}	O
int	O
gsl_multifit_nlinear_fdfvv	(double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
const	O
double	O
h	double
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
x	double
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
f	*(double)
,	O
const	O
gsl_matrix	struct(long,long,long,*(double),*(struct(long,*(double))),int)
*	O
J	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
swts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
gsl_multifit_nlinear_fdf	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),long,long,*(void),long,long,long)
*	O
fdf	*((double,*(void),*(double),*(double))->(void))
,	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
fvv	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
work	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
{	O
return	O
fdfvv	(double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
h	double
,	O
x	double
,	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
,	O
f	*(double)
,	O
J	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
,	O
swts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
fdf	*((double,*(void),*(double),*(double))->(void))
,	O
fvv	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
work	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
}	O
