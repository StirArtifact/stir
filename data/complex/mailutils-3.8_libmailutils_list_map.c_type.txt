struct	O
map_closure	struct(*((*(*(void)),long,*(void))->(int)),*(void),*(struct(struct(*(void),*(struct(*`,*`,*`)),*(struct(*`,*`,*`))),long,*(struct(*(void),*(void),int,int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(struct))),int)
{	O
mu_list_mapper_t	*((*(*(void)),long,*(void))->(int))
map	*((*(*(void)),long,*(void))->(int))
;	O
void	O
*	O
data	*(void)
;	O
mu_list_t	*(struct)
list	*(struct)
;	O
int	O
status	int
;	O
}	O
;	O
static	O
int	O
_list_mapper	(*(*(void)),long,*(void))->(int)
(	O
void	O
*	O
*	O
itmv	*(*(void))
,	O
size_t	long
itmc	long
,	O
void	O
*	O
data	*(void)
)	O
{	O
struct	O
map_closure	struct(*((*(*(void)),long,*(void))->(int)),*(void),*(struct(struct(*(void),*(struct(*`,*`,*`)),*(struct(*`,*`,*`))),long,*(struct(*(void),*(void),int,int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(struct))),int)
*	O
clos	*(struct(*((*(*`),long,*(void))->(int)),*(void),*(struct(struct(*`,*`,*`),long,*(struct`),*((*`,*`)->(int)),*((*`)->(void)),*(struct`))),int))
=	O
data	*(void)
;	O
int	O
rc	int
,	O
status	int
;	O
if	O
(	O
!	O
clos	*(struct(*((*(*`),long,*(void))->(int)),*(void),*(struct(struct(*`,*`,*`),long,*(struct`),*((*`,*`)->(int)),*((*`)->(void)),*(struct`))),int))
->	O
list	*(struct)
)	O
{	O
status	int
=	O
mu_list_create	(*(*(struct)))->(int)
(	O
&	O
clos	*(struct(*((*(*`),long,*(void))->(int)),*(void),*(struct(struct(*`,*`,*`),long,*(struct`),*((*`,*`)->(int)),*((*`)->(void)),*(struct`))),int))
->	O
list	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
{	O
clos	*(struct(*((*(*`),long,*(void))->(int)),*(void),*(struct(struct(*`,*`,*`),long,*(struct`),*((*`,*`)->(int)),*((*`)->(void)),*(struct`))),int))
->	O
status	int
=	O
status	int
;	O
return	O
MU_ERR_FAILURE	O
;	O
}	O
}	O
rc	int
=	O
clos	*(struct(*((*(*`),long,*(void))->(int)),*(void),*(struct(struct(*`,*`,*`),long,*(struct`),*((*`,*`)->(int)),*((*`)->(void)),*(struct`))),int))
->	O
map	*((*(*(void)),long,*(void))->(int))
(	O
itmv	*(*(void))
,	O
itmc	long
,	O
clos	*(struct(*((*(*`),long,*(void))->(int)),*(void),*(struct(struct(*`,*`,*`),long,*(struct`),*((*`,*`)->(int)),*((*`)->(void)),*(struct`))),int))
->	O
data	*(void)
)	O
;	O
if	O
(	O
!	O
(	O
rc	int
&	O
MU_LIST_MAP_SKIP	int
)	O
)	O
{	O
status	int
=	O
mu_list_append	(*(struct),*(void))->(int)
(	O
clos	*(struct(*((*(*`),long,*(void))->(int)),*(void),*(struct(struct(*`,*`,*`),long,*(struct`),*((*`,*`)->(int)),*((*`)->(void)),*(struct`))),int))
->	O
list	*(struct)
,	O
itmv	*(*(void))
[	O
0	int
]	O
)	O
;	O
if	O
(	O
status	int
)	O
{	O
clos	*(struct(*((*(*`),long,*(void))->(int)),*(void),*(struct(struct(*`,*`,*`),long,*(struct`),*((*`,*`)->(int)),*((*`)->(void)),*(struct`))),int))
->	O
status	int
=	O
status	int
;	O
return	O
MU_ERR_FAILURE	O
;	O
}	O
}	O
if	O
(	O
rc	int
&	O
MU_LIST_MAP_STOP	int
)	O
return	O
MU_ERR_CANCELED	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_list_map	(*(struct),*((*(*(void)),long,*(void))->(int)),*(void),long,*(*(struct)))->(int)
(	O
mu_list_t	*(struct)
list	*(struct)
,	O
mu_list_mapper_t	*((*(*(void)),long,*(void))->(int))
map	*((*(*(void)),long,*(void))->(int))
,	O
void	O
*	O
data	*(void)
,	O
size_t	long
nelem	long
,	O
mu_list_t	*(struct)
*	O
res	*(*(struct(struct(*(void),*(struct`),*(struct`)),long,*(struct(*`,*`,int,int)),*((*`,*`)->(int)),*((*`)->(void)),*(struct))))
)	O
{	O
int	O
rc	int
;	O
struct	O
map_closure	struct(*((*(*(void)),long,*(void))->(int)),*(void),*(struct(struct(*(void),*(struct(*`,*`,*`)),*(struct(*`,*`,*`))),long,*(struct(*(void),*(void),int,int)),*((*(void),*(void))->(int)),*((*(void))->(void)),*(struct))),int)
cl	struct(*((*(*(void)),long,*(void))->(int)),*(void),*(struct(struct(*(void),*(struct`),*(struct`)),long,*(struct(*`,*`,int,int)),*((*`,*`)->(int)),*((*`)->(void)),*(struct))),int)
;	O
if	O
(	O
!	O
res	*(*(struct(struct(*(void),*(struct`),*(struct`)),long,*(struct(*`,*`,int,int)),*((*`,*`)->(int)),*((*`)->(void)),*(struct))))
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
cl	struct(*((*(*(void)),long,*(void))->(int)),*(void),*(struct(struct(*(void),*(struct`),*(struct`)),long,*(struct(*`,*`,int,int)),*((*`,*`)->(int)),*((*`)->(void)),*(struct))),int)
.	O
map	*((*(*(void)),long,*(void))->(int))
=	O
map	*((*(*(void)),long,*(void))->(int))
;	O
cl	struct(*((*(*(void)),long,*(void))->(int)),*(void),*(struct(struct(*(void),*(struct`),*(struct`)),long,*(struct(*`,*`,int,int)),*((*`,*`)->(int)),*((*`)->(void)),*(struct))),int)
.	O
data	*(void)
=	O
data	*(void)
;	O
cl	struct(*((*(*(void)),long,*(void))->(int)),*(void),*(struct(struct(*(void),*(struct`),*(struct`)),long,*(struct(*`,*`,int,int)),*((*`,*`)->(int)),*((*`)->(void)),*(struct))),int)
.	O
list	*(struct)
=	O
NULL	O
;	O
cl	struct(*((*(*(void)),long,*(void))->(int)),*(void),*(struct(struct(*(void),*(struct`),*(struct`)),long,*(struct(*`,*`,int,int)),*((*`,*`)->(int)),*((*`)->(void)),*(struct))),int)
.	O
status	int
=	O
0	int
;	O
rc	int
=	O
mu_list_gmap	(*(struct),*((*(*(void)),long,*(void))->(int)),long,*(void))->(int)
(	O
list	*(struct)
,	O
_list_mapper	(*(*(void)),long,*(void))->(int)
,	O
nelem	long
,	O
&	O
cl	struct(*((*(*(void)),long,*(void))->(int)),*(void),*(struct(struct(*(void),*(struct`),*(struct`)),long,*(struct(*`,*`,int,int)),*((*`,*`)->(int)),*((*`)->(void)),*(struct))),int)
)	O
;	O
*	O
res	*(*(struct(struct(*(void),*(struct`),*(struct`)),long,*(struct(*`,*`,int,int)),*((*`,*`)->(int)),*((*`)->(void)),*(struct))))
=	O
cl	struct(*((*(*(void)),long,*(void))->(int)),*(void),*(struct(struct(*(void),*(struct`),*(struct`)),long,*(struct(*`,*`,int,int)),*((*`,*`)->(int)),*((*`)->(void)),*(struct))),int)
.	O
list	*(struct)
;	O
if	O
(	O
rc	int
==	O
MU_ERR_FAILURE	O
)	O
return	O
cl	struct(*((*(*(void)),long,*(void))->(int)),*(void),*(struct(struct(*(void),*(struct`),*(struct`)),long,*(struct(*`,*`,int,int)),*((*`,*`)->(int)),*((*`)->(void)),*(struct))),int)
.	O
status	int
;	O
return	O
0	int
;	O
}	O
