DEFFMT	O
(	O
f_char	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
,	O
char	O
,	O
"%c"	*(char)
)	O
DEFFMT	O
(	O
f_short	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
,	O
short	O
,	O
"%hd"	*(char)
)	O
DEFFMT	O
(	O
f_ushort	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
,	O
unsigned	O
short	O
,	O
"%hu"	*(char)
)	O
DEFFMT	O
(	O
f_int	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
,	O
int	O
,	O
"%d"	*(char)
)	O
DEFFMT	O
(	O
f_uint	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
,	O
unsigned	O
,	O
"%u"	*(char)
)	O
DEFFMT	O
(	O
f_long	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
,	O
long	O
,	O
"%ld"	*(char)
)	O
DEFFMT	O
(	O
f_ulong	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
,	O
unsigned	O
long	O
,	O
"%lu"	*(char)
)	O
DEFFMT	O
(	O
f_llong	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
,	O
long	O
long	O
,	O
"%lld"	*(char)
)	O
DEFFMT	O
(	O
f_ullong	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
,	O
unsigned	O
long	O
long	O
,	O
"%llu"	*(char)
)	O
DEFFMT	O
(	O
f_float	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
,	O
float	O
,	O
"%f"	*(char)
)	O
DEFFMT	O
(	O
f_double	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
,	O
double	O
,	O
"%e"	*(char)
)	O
static	O
int	O
f_stringz	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
(	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
void	O
*	O
ptr	*(void)
,	O
int	O
size	int
)	O
{	O
int	O
sz	int
;	O
char	O
*	O
s	*(char)
;	O
for	O
(	O
sz	int
=	O
1	int
,	O
s	*(char)
=	O
ptr	*(void)
;	O
*	O
s	*(char)
;	O
s	*(char)
++	O
,	O
sz	int
++	O
)	O
{	O
int	O
c	int
;	O
if	O
(	O
isprint	(int)->(int)
(	O
*	O
s	*(char)
)	O
)	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
*	O
s	*(char)
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
else	O
if	O
(	O
(	O
c	int
=	O
escape	(int)->(int)
(	O
*	O
s	*(char)
)	O
)	O
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\\%c"	*(char)
,	O
c	int
)	O
;	O
else	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\\%03o"	*(char)
,	O
*	O
s	*(char)
)	O
;	O
}	O
return	O
sz	int
;	O
}	O
static	O
int	O
f_string	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
(	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
void	O
*	O
ptr	*(void)
,	O
int	O
size	int
)	O
{	O
int	O
sz	int
;	O
char	O
*	O
s	*(char)
;	O
for	O
(	O
sz	int
=	O
0	int
,	O
s	*(char)
=	O
ptr	*(void)
;	O
sz	int
<	O
size	int
;	O
s	*(char)
++	O
,	O
sz	int
++	O
)	O
{	O
int	O
c	int
;	O
if	O
(	O
isprint	(int)->(int)
(	O
*	O
s	*(char)
)	O
)	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
*	O
s	*(char)
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
else	O
if	O
(	O
(	O
c	int
=	O
escape	(int)->(int)
(	O
*	O
s	*(char)
)	O
)	O
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\\%c"	*(char)
,	O
c	int
)	O
;	O
else	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\\%03o"	*(char)
,	O
*	O
s	*(char)
)	O
;	O
}	O
return	O
sz	int
;	O
}	O
int	O
s_char	(*(struct),*(char))->(int)
(	O
struct	O
xdatum	struct(*(char),long,long,int)
*	O
xd	*(struct)
,	O
char	O
*	O
str	*(char)
)	O
{	O
xd_store	(*(struct),*(void),long)->(void)
(	O
xd	*(struct)
,	O
str	*(char)
,	O
1	int
)	O
;	O
return	O
0	int
;	O
}	O
DEFNSCAN	O
(	O
s_short	(*(struct),*(char))->(int)
,	O
short	O
,	O
long	O
,	O
strtol	(*(char),*(*(char)),int)->(long)
)	O
;	O
DEFNSCAN	O
(	O
s_ushort	(*(struct),*(char))->(int)
,	O
unsigned	O
short	O
,	O
unsigned	O
long	O
,	O
strtoul	(*(char),*(*(char)),int)->(long)
)	O
;	O
DEFNSCAN	O
(	O
s_int	(*(struct),*(char))->(int)
,	O
int	O
,	O
long	O
,	O
strtol	(*(char),*(*(char)),int)->(long)
)	O
DEFNSCAN	O
(	O
s_uint	(*(struct),*(char))->(int)
,	O
unsigned	O
,	O
unsigned	O
long	O
,	O
strtol	(*(char),*(*(char)),int)->(long)
)	O
DEFNSCAN	O
(	O
s_long	(*(struct),*(char))->(int)
,	O
long	O
,	O
long	O
,	O
strtoul	(*(char),*(*(char)),int)->(long)
)	O
DEFNSCAN	O
(	O
s_ulong	(*(struct),*(char))->(int)
,	O
unsigned	O
long	O
,	O
unsigned	O
long	O
,	O
strtoul	(*(char),*(*(char)),int)->(long)
)	O
DEFNSCAN	O
(	O
s_llong	(*(struct),*(char))->(int)
,	O
long	O
long	O
,	O
long	O
long	O
,	O
strtoll	(*(char),*(*(char)),int)->(long long)
)	O
DEFNSCAN	O
(	O
s_ullong	(*(struct),*(char))->(int)
,	O
unsigned	O
long	O
long	O
,	O
unsigned	O
long	O
long	O
,	O
strtoull	(*(char),*(*(char)),int)->(long long)
)	O
int	O
s_double	(*(struct),*(char))->(int)
(	O
struct	O
xdatum	struct(*(char),long,long,int)
*	O
xd	*(struct)
,	O
char	O
*	O
str	*(char)
)	O
{	O
double	O
d	double
;	O
char	O
*	O
p	*(char)
;	O
errno	O
=	O
0	int
;	O
d	double
=	O
strtod	(*(char),*(*(char)))->(double)
(	O
str	*(char)
,	O
&	O
p	*(char)
)	O
;	O
if	O
(	O
errno	O
||	O
*	O
p	*(char)
)	O
return	O
1	int
;	O
xd_store	(*(struct),*(void),long)->(void)
(	O
xd	*(struct)
,	O
&	O
d	double
,	O
sizeof	O
(	O
d	double
)	O
)	O
;	O
return	O
0	int
;	O
}	O
int	O
s_float	(*(struct),*(char))->(int)
(	O
struct	O
xdatum	struct(*(char),long,long,int)
*	O
xd	*(struct)
,	O
char	O
*	O
str	*(char)
)	O
{	O
float	O
d	double
;	O
char	O
*	O
p	*(char)
;	O
errno	O
=	O
0	int
;	O
d	double
=	O
strtod	(*(char),*(*(char)))->(double)
(	O
str	*(char)
,	O
&	O
p	*(char)
)	O
;	O
if	O
(	O
errno	O
||	O
*	O
p	*(char)
)	O
return	O
1	int
;	O
xd_store	(*(struct),*(void),long)->(void)
(	O
xd	*(struct)
,	O
&	O
d	double
,	O
sizeof	O
(	O
d	double
)	O
)	O
;	O
return	O
0	int
;	O
}	O
int	O
s_stringz	(*(struct),*(char))->(int)
(	O
struct	O
xdatum	struct(*(char),long,long,int)
*	O
xd	*(struct)
,	O
char	O
*	O
str	*(char)
)	O
{	O
xd_store	(*(struct),*(void),long)->(void)
(	O
xd	*(struct)
,	O
str	*(char)
,	O
strlen	(*(char))->(long)
(	O
str	*(char)
)	O
+	O
1	int
)	O
;	O
return	O
0	int
;	O
}	O
int	O
s_string	(*(struct),*(char))->(int)
(	O
struct	O
xdatum	struct(*(char),long,long,int)
*	O
xd	*(struct)
,	O
char	O
*	O
str	*(char)
)	O
{	O
xd_store	(*(struct),*(void),long)->(void)
(	O
xd	*(struct)
,	O
str	*(char)
,	O
strlen	(*(char))->(long)
(	O
str	*(char)
)	O
)	O
;	O
return	O
0	int
;	O
}	O
static	O
struct	O
datadef	struct(*(char),int,*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),int)->(int)),*((*(struct),*(char))->(int)))
datatab	array(struct(*(char),int,*((*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),int)->(int)),*((*(struct),*(char))->(int))))
[	O
]	O
=	O
{	O
{	O
"char"	*(char)
,	O
sizeof	O
(	O
char	O
)	O
,	O
f_char	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
,	O
s_char	(*(struct),*(char))->(int)
}	O
,	O
{	O
"short"	*(char)
,	O
sizeof	O
(	O
short	O
)	O
,	O
f_short	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
,	O
s_short	(*(struct),*(char))->(int)
}	O
,	O
{	O
"ushort"	*(char)
,	O
sizeof	O
(	O
unsigned	O
short	O
)	O
,	O
f_ushort	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
,	O
s_ushort	(*(struct),*(char))->(int)
}	O
,	O
{	O
"int"	*(char)
,	O
sizeof	O
(	O
int	O
)	O
,	O
f_int	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
,	O
s_int	(*(struct),*(char))->(int)
}	O
,	O
{	O
"unsigned"	*(char)
,	O
sizeof	O
(	O
unsigned	O
)	O
,	O
f_uint	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
,	O
s_uint	(*(struct),*(char))->(int)
}	O
,	O
{	O
"uint"	*(char)
,	O
sizeof	O
(	O
unsigned	O
)	O
,	O
f_uint	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
,	O
s_uint	(*(struct),*(char))->(int)
}	O
,	O
{	O
"long"	*(char)
,	O
sizeof	O
(	O
long	O
)	O
,	O
f_long	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
,	O
s_long	(*(struct),*(char))->(int)
}	O
,	O
{	O
"ulong"	*(char)
,	O
sizeof	O
(	O
unsigned	O
long	O
)	O
,	O
f_ulong	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
,	O
s_ulong	(*(struct),*(char))->(int)
}	O
,	O
{	O
"llong"	*(char)
,	O
sizeof	O
(	O
long	O
long	O
)	O
,	O
f_llong	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
,	O
s_llong	(*(struct),*(char))->(int)
}	O
,	O
{	O
"ullong"	*(char)
,	O
sizeof	O
(	O
unsigned	O
long	O
long	O
)	O
,	O
f_ullong	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
,	O
s_ullong	(*(struct),*(char))->(int)
}	O
,	O
{	O
"float"	*(char)
,	O
sizeof	O
(	O
float	O
)	O
,	O
f_float	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
,	O
s_float	(*(struct),*(char))->(int)
}	O
,	O
{	O
"double"	*(char)
,	O
sizeof	O
(	O
double	O
)	O
,	O
f_double	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
,	O
s_double	(*(struct),*(char))->(int)
}	O
,	O
{	O
"stringz"	*(char)
,	O
0	int
,	O
f_stringz	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
,	O
s_stringz	(*(struct),*(char))->(int)
}	O
,	O
{	O
"string"	*(char)
,	O
0	int
,	O
f_string	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void),int)->(int)
,	O
s_string	(*(struct),*(char))->(int)
}	O
,	O
{	O
NULL	O
}	O
}	O
;	O
struct	O
datadef	struct(*(char),int,*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),int)->(int)),*((*(struct),*(char))->(int)))
*	O
datadef_lookup	(*(char))->(*(struct(*(char),int,*((*`,*`,int)->(int)),*((*`,*`)->(int)))))
(	O
const	O
char	O
*	O
name	*(char)
)	O
{	O
struct	O
datadef	struct(*(char),int,*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),int)->(int)),*((*(struct),*(char))->(int)))
*	O
p	*(char)
;	O
for	O
(	O
p	*(char)
=	O
datatab	array(struct(*(char),int,*((*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),int)->(int)),*((*(struct),*(char))->(int))))
;	O
p	*(char)
->	O
name	*(char)
;	O
p	*(char)
++	O
)	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
p	*(char)
->	O
name	*(char)
,	O
name	*(char)
)	O
==	O
0	int
)	O
return	O
p	*(char)
;	O
return	O
NULL	O
;	O
}	O
struct	O
dsegm	struct(*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char))))),int,union(int,struct(*(struct(*(char),int,*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,*(char))))
*	O
dsegm_new	(int)->(*(struct(*(struct(*`,int,union`)),int,union(int,struct(*`,int,*`)))))
(	O
int	O
type	int
)	O
{	O
struct	O
dsegm	struct(*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char))))),int,union(int,struct(*(struct(*(char),int,*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,*(char))))
*	O
p	*(char)
=	O
emalloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
p	*(char)
)	O
)	O
;	O
p	*(char)
->	O
next	*(struct(*(struct(*(struct`),*(char))),*(char)))
=	O
NULL	O
;	O
p	*(char)
->	O
type	int
=	O
type	int
;	O
return	O
p	*(char)
;	O
}	O
struct	O
dsegm	struct(*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char))))),int,union(int,struct(*(struct(*(char),int,*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,*(char))))
*	O
dsegm_new_field	(*(struct(*(char),int,*((*`,*`,int)->(int)),*((*`,*`)->(int)))),*(char),int)->(*(struct(*(struct(*`,int,union`)),int,union(int,struct(*`,int,*`)))))
(	O
struct	O
datadef	struct(*(char),int,*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),int)->(int)),*((*(struct),*(char))->(int)))
*	O
type	int
,	O
char	O
*	O
id	*(char)
,	O
int	O
dim	int
)	O
{	O
struct	O
dsegm	struct(*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char))))),int,union(int,struct(*(struct(*(char),int,*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,*(char))))
*	O
p	*(char)
=	O
dsegm_new	(int)->(*(struct(*(struct(*`,int,union`)),int,union(int,struct(*`,int,*`)))))
(	O
FDEF_FLD	int
)	O
;	O
p	*(char)
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
field	struct(*(struct(*(char),int,*((*(struct`),*(void),int)->(int)),*((*(struct`),*(char))->(int)))),int,*(char))
.	O
type	int
=	O
type	int
;	O
p	*(char)
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
field	struct(*(struct(*(char),int,*((*(struct`),*(void),int)->(int)),*((*(struct`),*(char))->(int)))),int,*(char))
.	O
name	*(char)
=	O
id	*(char)
;	O
p	*(char)
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
field	struct(*(struct(*(char),int,*((*(struct`),*(void),int)->(int)),*((*(struct`),*(char))->(int)))),int,*(char))
.	O
dim	int
=	O
dim	int
;	O
return	O
p	*(char)
;	O
}	O
void	O
dsegm_free_list	(*(struct(*(struct(*`,int,union`)),int,union(int,struct(*`,int,*`)))))->(void)
(	O
struct	O
dsegm	struct(*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char))))),int,union(int,struct(*(struct(*(char),int,*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,*(char))))
*	O
dp	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
)	O
{	O
while	O
(	O
dp	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
)	O
{	O
struct	O
dsegm	struct(*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char))))),int,union(int,struct(*(struct(*(char),int,*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,*(char))))
*	O
next	*(struct(*(struct(*(struct`),*(char))),*(char)))
=	O
dp	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
next	*(struct(*(struct(*(struct`),*(char))),*(char)))
;	O
free	(*(void))->(void)
(	O
dp	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
)	O
;	O
dp	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
=	O
next	*(struct(*(struct(*(struct`),*(char))),*(char)))
;	O
}	O
}	O
void	O
datum_format	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(char),int)),*(struct(*(struct(*`,int,union`)),int,union(int,struct(*`,int,*`)))))->(void)
(	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
datum	struct(*(char),int)
const	O
*	O
dat	struct(*(char),int)
,	O
struct	O
dsegm	struct(*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char))))),int,union(int,struct(*(struct(*(char),int,*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,*(char))))
*	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
)	O
{	O
int	O
off	long
=	O
0	int
;	O
char	O
*	O
delim	array(*(char))
[	O
2	int
]	O
;	O
int	O
first_field	int
=	O
1	int
;	O
if	O
(	O
!	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%.*s\n"	*(char)
,	O
dat	struct(*(char),int)
->	O
dsize	int
,	O
dat	struct(*(char),int)
->	O
dptr	*(char)
)	O
;	O
return	O
;	O
}	O
if	O
(	O
variable_get	(*(char),int,*(*(void)))->(int)
(	O
"delim1"	*(char)
,	O
VART_STRING	int
,	O
(	O
void	O
*	O
)	O
&	O
delim	array(*(char))
[	O
0	int
]	O
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
if	O
(	O
variable_get	(*(char),int,*(*(void)))->(int)
(	O
"delim2"	*(char)
,	O
VART_STRING	int
,	O
(	O
void	O
*	O
)	O
&	O
delim	array(*(char))
[	O
1	int
]	O
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
for	O
(	O
;	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
&&	O
off	long
<=	O
dat	struct(*(char),int)
->	O
dsize	int
;	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
=	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
next	*(struct(*(struct(*(struct`),*(char))),*(char)))
)	O
{	O
switch	O
(	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
type	int
)	O
{	O
case	O
FDEF_FLD	int
:	O
if	O
(	O
!	O
first_field	int
)	O
fwrite	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
delim	array(*(char))
[	O
1	int
]	O
,	O
strlen	(*(char))->(long)
(	O
delim	array(*(char))
[	O
1	int
]	O
)	O
,	O
1	int
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
field	struct(*(struct(*(char),int,*((*(struct`),*(void),int)->(int)),*((*(struct`),*(char))->(int)))),int,*(char))
.	O
name	*(char)
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s="	*(char)
,	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
field	struct(*(struct(*(char),int,*((*(struct`),*(void),int)->(int)),*((*(struct`),*(char))->(int)))),int,*(char))
.	O
name	*(char)
)	O
;	O
if	O
(	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
field	struct(*(struct(*(char),int,*((*(struct`),*(void),int)->(int)),*((*(struct`),*(char))->(int)))),int,*(char))
.	O
dim	int
>	O
1	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"{ "	*(char)
)	O
;	O
if	O
(	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
field	struct(*(struct(*(char),int,*((*(struct`),*(void),int)->(int)),*((*(struct`),*(char))->(int)))),int,*(char))
.	O
type	int
->	O
format	*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),int)->(int))
)	O
{	O
int	O
i	int
,	O
n	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
field	struct(*(struct(*(char),int,*((*(struct`),*(void),int)->(int)),*((*(struct`),*(char))->(int)))),int,*(char))
.	O
dim	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
i	int
)	O
fwrite	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
delim	array(*(char))
[	O
0	int
]	O
,	O
strlen	(*(char))->(long)
(	O
delim	array(*(char))
[	O
0	int
]	O
)	O
,	O
1	int
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
off	long
+	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
field	struct(*(struct(*(char),int,*((*(struct`),*(void),int)->(int)),*((*(struct`),*(char))->(int)))),int,*(char))
.	O
type	int
->	O
size	int
>	O
dat	struct(*(char),int)
->	O
dsize	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"(not enough data)"	*(char)
)	O
)	O
;	O
off	long
+=	O
dat	struct(*(char),int)
->	O
dsize	int
;	O
break	O
;	O
}	O
else	O
{	O
n	int
=	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
field	struct(*(struct(*(char),int,*((*(struct`),*(void),int)->(int)),*((*(struct`),*(char))->(int)))),int,*(char))
.	O
type	int
->	O
format	*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),int)->(int))
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
(	O
char	O
*	O
)	O
dat	struct(*(char),int)
->	O
dptr	*(char)
+	O
off	long
,	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
field	struct(*(struct(*(char),int,*((*(struct`),*(void),int)->(int)),*((*(struct`),*(char))->(int)))),int,*(char))
.	O
type	int
->	O
size	int
?	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
field	struct(*(struct(*(char),int,*((*(struct`),*(void),int)->(int)),*((*(struct`),*(char))->(int)))),int,*(char))
.	O
type	int
->	O
size	int
:	O
dat	struct(*(char),int)
->	O
dsize	int
-	O
off	long
)	O
;	O
off	long
+=	O
n	int
;	O
}	O
}	O
}	O
if	O
(	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
field	struct(*(struct(*(char),int,*((*(struct`),*(void),int)->(int)),*((*(struct`),*(char))->(int)))),int,*(char))
.	O
dim	int
>	O
1	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
" }"	*(char)
)	O
;	O
first_field	int
=	O
0	int
;	O
break	O
;	O
case	O
FDEF_OFF	int
:	O
off	long
=	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
n	int
;	O
break	O
;	O
case	O
FDEF_PAD	int
:	O
off	long
+=	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
n	int
;	O
break	O
;	O
}	O
}	O
}	O
struct	O
xdatum	struct(*(char),long,long,int)
{	O
char	O
*	O
dptr	*(char)
;	O
size_t	long
dsize	int
;	O
size_t	long
dmax	long
;	O
int	O
off	long
;	O
}	O
;	O
void	O
xd_expand	(*(struct),long)->(void)
(	O
struct	O
xdatum	struct(*(char),long,long,int)
*	O
xd	*(struct)
,	O
size_t	long
size	int
)	O
{	O
if	O
(	O
xd	*(struct)
->	O
dmax	long
<	O
size	int
)	O
{	O
xd	*(struct)
->	O
dptr	*(char)
=	O
erealloc	(*(void),long)->(*(void))
(	O
xd	*(struct)
->	O
dptr	*(char)
,	O
size	int
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
xd	*(struct)
->	O
dptr	*(char)
+	O
xd	*(struct)
->	O
dmax	long
,	O
0	int
,	O
size	int
-	O
xd	*(struct)
->	O
dmax	long
)	O
;	O
xd	*(struct)
->	O
dmax	long
=	O
size	int
;	O
}	O
}	O
void	O
xd_store	(*(struct),*(void),long)->(void)
(	O
struct	O
xdatum	struct(*(char),long,long,int)
*	O
xd	*(struct)
,	O
void	O
*	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
,	O
size_t	long
size	int
)	O
{	O
xd_expand	(*(struct),long)->(void)
(	O
xd	*(struct)
,	O
xd	*(struct)
->	O
off	long
+	O
size	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
xd	*(struct)
->	O
dptr	*(char)
+	O
xd	*(struct)
->	O
off	long
,	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
,	O
size	int
)	O
;	O
xd	*(struct)
->	O
off	long
+=	O
size	int
;	O
if	O
(	O
xd	*(struct)
->	O
off	long
>	O
xd	*(struct)
->	O
dsize	int
)	O
xd	*(struct)
->	O
dsize	int
=	O
xd	*(struct)
->	O
off	long
;	O
}	O
static	O
int	O
datum_scan_notag	(*(struct(*(char),int)),*(struct(*(struct(*`,int,union`)),int,union(int,struct(*`,int,*`)))),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))->(int)
(	O
datum	struct(*(char),int)
*	O
dat	struct(*(char),int)
,	O
struct	O
dsegm	struct(*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char))))),int,union(int,struct(*(struct(*(char),int,*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,*(char))))
*	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
,	O
struct	O
kvpair	struct(*(struct(*(struct(*(struct`),int,struct(struct`,struct`),*(char),union(*`,*`))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*`,*`))))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*(struct(*`,*`)),*(char)))))
*	O
kv	*(struct(*(struct(*(struct`),int,struct(struct`,struct`),*(char),union(*`,*`))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*`,*`)))))
)	O
{	O
struct	O
xdatum	struct(*(char),long,long,int)
xd	*(struct)
;	O
int	O
i	int
;	O
struct	O
slist	struct(*(struct(*(struct(*(struct`),*(char))),*(char))),*(char))
*	O
s	*(char)
;	O
int	O
err	int
=	O
0	int
;	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
xd	*(struct)
,	O
0	int
,	O
sizeof	O
(	O
xd	*(struct)
)	O
)	O
;	O
for	O
(	O
;	O
err	int
==	O
0	int
&&	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
&&	O
kv	*(struct(*(struct(*(struct`),int,struct(struct`,struct`),*(char),union(*`,*`))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*`,*`)))))
;	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
=	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
next	*(struct(*(struct(*(struct`),*(char))),*(char)))
,	O
kv	*(struct(*(struct(*(struct`),int,struct(struct`,struct`),*(char),union(*`,*`))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*`,*`)))))
=	O
kv	*(struct(*(struct(*(struct`),int,struct(struct`,struct`),*(char),union(*`,*`))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*`,*`)))))
->	O
next	*(struct(*(struct(*(struct`),*(char))),*(char)))
)	O
{	O
if	O
(	O
kv	*(struct(*(struct(*(struct`),int,struct(struct`,struct`),*(char),union(*`,*`))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*`,*`)))))
->	O
key	struct(*(char),int)
)	O
{	O
lerror	(*(struct(struct(*(char),int,int),struct(*(char),int,int))),*(char))->(void)
(	O
&	O
kv	*(struct(*(struct(*(struct`),int,struct(struct`,struct`),*(char),union(*`,*`))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*`,*`)))))
->	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
,	O
_	O
(	O
"mixing tagged and untagged values is not allowed"	*(char)
)	O
)	O
;	O
err	int
=	O
1	int
;	O
break	O
;	O
}	O
switch	O
(	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
type	int
)	O
{	O
case	O
FDEF_FLD	int
:	O
if	O
(	O
!	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
field	struct(*(struct(*(char),int,*((*(struct`),*(void),int)->(int)),*((*(struct`),*(char))->(int)))),int,*(char))
.	O
type	int
->	O
scan	*((*(struct),*(char))->(int))
)	O
abort	()->(void)
(	O
)	O
;	O
if	O
(	O
kv	*(struct(*(struct(*(struct`),int,struct(struct`,struct`),*(char),union(*`,*`))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*`,*`)))))
->	O
type	int
==	O
KV_STRING	int
&&	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
field	struct(*(struct(*(char),int,*((*(struct`),*(void),int)->(int)),*((*(struct`),*(char))->(int)))),int,*(char))
.	O
dim	int
>	O
1	int
)	O
{	O
if	O
(	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
field	struct(*(struct(*(char),int,*((*(struct`),*(void),int)->(int)),*((*(struct`),*(char))->(int)))),int,*(char))
.	O
type	int
->	O
size	int
==	O
1	int
)	O
{	O
struct	O
slist	struct(*(struct(*(struct(*(struct`),*(char))),*(char))),*(char))
*	O
head	*(struct(*(struct(*(struct`),int,int,struct(struct`,struct`),union(*`,struct`,*`))),int,int,struct(struct(*(char),int,int),struct(*(char),int,int)),union(*(char),struct(*(char),int),*(struct(*`,int,struct`,*`,union`)))))
=	O
slist_new_l	(*(char),long)->(*(struct(*(struct(*`,*`)),*(char))))
(	O
kv	*(struct(*(struct(*(struct`),int,struct(struct`,struct`),*(char),union(*`,*`))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*`,*`)))))
->	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
.	O
s	*(char)
,	O
1	int
)	O
;	O
struct	O
slist	struct(*(struct(*(struct(*(struct`),*(char))),*(char))),*(char))
*	O
tail	*(struct(*(struct(*(struct`),int,int,struct(struct`,struct`),union(*`,struct`,*`))),int,int,struct(struct(*(char),int,int),struct(*(char),int,int)),union(*(char),struct(*(char),int),*(struct(*`,int,struct`,*`,union`)))))
=	O
head	*(struct(*(struct(*(struct`),int,int,struct(struct`,struct`),union(*`,struct`,*`))),int,int,struct(struct(*(char),int,int),struct(*(char),int,int)),union(*(char),struct(*(char),int),*(struct(*`,int,struct`,*`,union`)))))
;	O
char	O
*	O
s	*(char)
;	O
for	O
(	O
s	*(char)
=	O
kv	*(struct(*(struct(*(struct`),int,struct(struct`,struct`),*(char),union(*`,*`))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*`,*`)))))
->	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
.	O
s	*(char)
+	O
1	int
;	O
*	O
s	*(char)
;	O
s	*(char)
++	O
)	O
slist_insert	(*(*(struct(*(struct`),*(char)))),*(struct(*(struct(*`,*`)),*(char))))->(void)
(	O
&	O
tail	*(struct(*(struct(*(struct`),int,int,struct(struct`,struct`),union(*`,struct`,*`))),int,int,struct(struct(*(char),int,int),struct(*(char),int,int)),union(*(char),struct(*(char),int),*(struct(*`,int,struct`,*`,union`)))))
,	O
slist_new_l	(*(char),long)->(*(struct(*(struct(*`,*`)),*(char))))
(	O
s	*(char)
,	O
1	int
)	O
)	O
;	O
free	(*(void))->(void)
(	O
kv	*(struct(*(struct(*(struct`),int,struct(struct`,struct`),*(char),union(*`,*`))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*`,*`)))))
->	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
.	O
s	*(char)
)	O
;	O
kv	*(struct(*(struct(*(struct`),int,struct(struct`,struct`),*(char),union(*`,*`))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*`,*`)))))
->	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
.	O
l	long
=	O
head	*(struct(*(struct(*(struct`),int,int,struct(struct`,struct`),union(*`,struct`,*`))),int,int,struct(struct(*(char),int,int),struct(*(char),int,int)),union(*(char),struct(*(char),int),*(struct(*`,int,struct`,*`,union`)))))
;	O
kv	*(struct(*(struct(*(struct`),int,struct(struct`,struct`),*(char),union(*`,*`))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*`,*`)))))
->	O
type	int
=	O
KV_LIST	int
;	O
}	O
}	O
switch	O
(	O
kv	*(struct(*(struct(*(struct`),int,struct(struct`,struct`),*(char),union(*`,*`))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*`,*`)))))
->	O
type	int
)	O
{	O
case	O
KV_STRING	int
:	O
err	int
=	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
field	struct(*(struct(*(char),int,*((*(struct`),*(void),int)->(int)),*((*(struct`),*(char))->(int)))),int,*(char))
.	O
type	int
->	O
scan	*((*(struct),*(char))->(int))
(	O
&	O
xd	*(struct)
,	O
kv	*(struct(*(struct(*(struct`),int,struct(struct`,struct`),*(char),union(*`,*`))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*`,*`)))))
->	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
.	O
s	*(char)
)	O
;	O
if	O
(	O
err	int
)	O
lerror	(*(struct(struct(*(char),int,int),struct(*(char),int,int))),*(char))->(void)
(	O
&	O
kv	*(struct(*(struct(*(struct`),int,struct(struct`,struct`),*(char),union(*`,*`))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*`,*`)))))
->	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
,	O
_	O
(	O
"cannot convert"	*(char)
)	O
)	O
;	O
break	O
;	O
case	O
KV_LIST	int
:	O
for	O
(	O
i	int
=	O
0	int
,	O
s	*(char)
=	O
kv	*(struct(*(struct(*(struct`),int,struct(struct`,struct`),*(char),union(*`,*`))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*`,*`)))))
->	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
.	O
l	long
;	O
i	int
<	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
field	struct(*(struct(*(char),int,*((*(struct`),*(void),int)->(int)),*((*(struct`),*(char))->(int)))),int,*(char))
.	O
dim	int
&&	O
s	*(char)
;	O
i	int
++	O
,	O
s	*(char)
=	O
s	*(char)
->	O
next	*(struct(*(struct(*(struct`),*(char))),*(char)))
)	O
{	O
err	int
=	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
field	struct(*(struct(*(char),int,*((*(struct`),*(void),int)->(int)),*((*(struct`),*(char))->(int)))),int,*(char))
.	O
type	int
->	O
scan	*((*(struct),*(char))->(int))
(	O
&	O
xd	*(struct)
,	O
s	*(char)
->	O
str	*(char)
)	O
;	O
if	O
(	O
err	int
)	O
{	O
lerror	(*(struct(struct(*(char),int,int),struct(*(char),int,int))),*(char))->(void)
(	O
&	O
kv	*(struct(*(struct(*(struct`),int,struct(struct`,struct`),*(char),union(*`,*`))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*`,*`)))))
->	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
,	O
_	O
(	O
"cannot convert value #%d: %s"	*(char)
)	O
,	O
i	int
,	O
s	*(char)
->	O
str	*(char)
)	O
;	O
break	O
;	O
}	O
}	O
if	O
(	O
s	*(char)
)	O
{	O
lerror	(*(struct(struct(*(char),int,int),struct(*(char),int,int))),*(char))->(void)
(	O
&	O
kv	*(struct(*(struct(*(struct`),int,struct(struct`,struct`),*(char),union(*`,*`))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*`,*`)))))
->	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
,	O
"surplus initializers ignored"	*(char)
)	O
;	O
err	int
=	O
1	int
;	O
}	O
}	O
break	O
;	O
case	O
FDEF_OFF	int
:	O
xd_expand	(*(struct),long)->(void)
(	O
&	O
xd	*(struct)
,	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
n	int
)	O
;	O
xd	*(struct)
.	O
off	long
=	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
n	int
;	O
break	O
;	O
case	O
FDEF_PAD	int
:	O
xd_expand	(*(struct),long)->(void)
(	O
&	O
xd	*(struct)
,	O
xd	*(struct)
.	O
off	long
+	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
n	int
)	O
;	O
xd	*(struct)
.	O
off	long
+=	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
n	int
;	O
break	O
;	O
}	O
}	O
if	O
(	O
err	int
)	O
{	O
free	(*(void))->(void)
(	O
xd	*(struct)
.	O
dptr	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
dat	struct(*(char),int)
->	O
dptr	*(char)
=	O
xd	*(struct)
.	O
dptr	*(char)
;	O
dat	struct(*(char),int)
->	O
dsize	int
=	O
xd	*(struct)
.	O
dsize	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
datum_scan_tag	(*(struct(*(char),int)),*(struct(*(struct(*`,int,union`)),int,union(int,struct(*`,int,*`)))),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))->(int)
(	O
datum	struct(*(char),int)
*	O
dat	struct(*(char),int)
,	O
struct	O
dsegm	struct(*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char))))),int,union(int,struct(*(struct(*(char),int,*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,*(char))))
*	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
,	O
struct	O
kvpair	struct(*(struct(*(struct(*(struct`),int,struct(struct`,struct`),*(char),union(*`,*`))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*`,*`))))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*(struct(*`,*`)),*(char)))))
*	O
kv	*(struct(*(struct(*(struct`),int,struct(struct`,struct`),*(char),union(*`,*`))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*`,*`)))))
)	O
{	O
lerror	(*(struct(struct(*(char),int,int),struct(*(char),int,int))),*(char))->(void)
(	O
&	O
kv	*(struct(*(struct(*(struct`),int,struct(struct`,struct`),*(char),union(*`,*`))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*`,*`)))))
->	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
,	O
"tagged values are not yet supported"	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
int	O
datum_scan	(*(struct(*(char),int)),*(struct(*(struct(*`,int,union`)),int,union(int,struct(*`,int,*`)))),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))->(int)
(	O
datum	struct(*(char),int)
*	O
dat	struct(*(char),int)
,	O
struct	O
dsegm	struct(*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char))))),int,union(int,struct(*(struct(*(char),int,*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,*(char))))
*	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
,	O
struct	O
kvpair	struct(*(struct(*(struct(*(struct`),int,struct(struct`,struct`),*(char),union(*`,*`))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*`,*`))))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*(struct(*`,*`)),*(char)))))
*	O
kv	*(struct(*(struct(*(struct`),int,struct(struct`,struct`),*(char),union(*`,*`))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*`,*`)))))
)	O
{	O
return	O
(	O
kv	*(struct(*(struct(*(struct`),int,struct(struct`,struct`),*(char),union(*`,*`))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*`,*`)))))
->	O
key	struct(*(char),int)
?	O
datum_scan_tag	(*(struct(*(char),int)),*(struct(*(struct(*`,int,union`)),int,union(int,struct(*`,int,*`)))),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))->(int)
:	O
datum_scan_notag	(*(struct(*(char),int)),*(struct(*(struct(*`,int,union`)),int,union(int,struct(*`,int,*`)))),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))->(int)
)	O
(	O
dat	struct(*(char),int)
,	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
,	O
kv	*(struct(*(struct(*(struct`),int,struct(struct`,struct`),*(char),union(*`,*`))),int,struct(struct(*(char),int,int),struct(*(char),int,int)),*(char),union(*(char),*(struct(*`,*`)))))
)	O
;	O
}	O
void	O
dsprint	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),int,*(struct(*(struct(*`,int,union`)),int,union(int,struct(*`,int,*`)))))->(void)
(	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
int	O
what	*(struct(*(struct(*(struct`),*(char))),*(char)))
,	O
struct	O
dsegm	struct(*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char))))),int,union(int,struct(*(struct(*(char),int,*((*`,*`,int)->(int)),*((*`,*`)->(int)))),int,*(char))))
*	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
)	O
{	O
static	O
char	O
*	O
dsstr	array(*(char))
[	O
]	O
=	O
{	O
"key"	*(char)
,	O
"content"	*(char)
}	O
;	O
int	O
delim	array(*(char))
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"define %s"	*(char)
,	O
dsstr	array(*(char))
[	O
what	*(struct(*(struct(*(struct`),*(char))),*(char)))
]	O
)	O
;	O
if	O
(	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
next	*(struct(*(struct(*(struct`),*(char))),*(char)))
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
" {\n"	*(char)
)	O
;	O
delim	array(*(char))
=	O
'\t'	O
;	O
}	O
else	O
delim	array(*(char))
=	O
' '	O
;	O
for	O
(	O
;	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
;	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
=	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
next	*(struct(*(struct(*(struct`),*(char))),*(char)))
)	O
{	O
switch	O
(	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
type	int
)	O
{	O
case	O
FDEF_FLD	int
:	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%c%s"	*(char)
,	O
delim	array(*(char))
,	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
field	struct(*(struct(*(char),int,*((*(struct`),*(void),int)->(int)),*((*(struct`),*(char))->(int)))),int,*(char))
.	O
type	int
->	O
name	*(char)
)	O
;	O
if	O
(	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
field	struct(*(struct(*(char),int,*((*(struct`),*(void),int)->(int)),*((*(struct`),*(char))->(int)))),int,*(char))
.	O
name	*(char)
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
" %s"	*(char)
,	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
field	struct(*(struct(*(char),int,*((*(struct`),*(void),int)->(int)),*((*(struct`),*(char))->(int)))),int,*(char))
.	O
name	*(char)
)	O
;	O
if	O
(	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
field	struct(*(struct(*(char),int,*((*(struct`),*(void),int)->(int)),*((*(struct`),*(char))->(int)))),int,*(char))
.	O
dim	int
>	O
1	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"[%d]"	*(char)
,	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
field	struct(*(struct(*(char),int,*((*(struct`),*(void),int)->(int)),*((*(struct`),*(char))->(int)))),int,*(char))
.	O
dim	int
)	O
;	O
break	O
;	O
case	O
FDEF_OFF	int
:	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%coffset %d"	*(char)
,	O
delim	array(*(char))
,	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
n	int
)	O
;	O
break	O
;	O
case	O
FDEF_PAD	int
:	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%cpad %d"	*(char)
,	O
delim	array(*(char))
,	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
n	int
)	O
;	O
break	O
;	O
}	O
if	O
(	O
ds	*(struct(*(struct(*(struct`),int,union(int,struct`))),int,union(int,struct(*(struct`),int,*(char)))))
->	O
next	*(struct(*(struct(*(struct`),*(char))),*(char)))
)	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
','	O
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\n'	O
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
if	O
(	O
delim	array(*(char))
==	O
'\t'	O
)	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
"}\n"	*(char)
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
