static	O
void	O
print_greek	(*(char))->(void)
(	O
const	O
char	O
*	O
arg	*(char)
)	O
{	O
while	O
(	O
*	O
arg	*(char)
)	O
{	O
size_t	long
rd	long
;	O
const	O
char	O
*	O
greek	*(char)
=	O
gcide_grk_to_utf8	(*(char),*(long))->(*(char))
(	O
arg	*(char)
,	O
&	O
rd	long
)	O
;	O
if	O
(	O
greek	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
"%s"	*(char)
,	O
greek	*(char)
)	O
;	O
arg	*(char)
+=	O
rd	long
;	O
}	O
else	O
{	O
if	O
(	O
!	O
(	O
*	O
arg	*(char)
==	O
'-'	O
||	O
isspace	(int)->(int)
(	O
*	O
arg	*(char)
)	O
)	O
)	O
printf	(*(char))->(int)
(	O
"<!>"	*(char)
)	O
;	O
putchar	(int)->(int)
(	O
*	O
arg	*(char)
)	O
;	O
arg	*(char)
++	O
;	O
}	O
}	O
putchar	(int)->(int)
(	O
'\n'	O
)	O
;	O
}	O
int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
if	O
(	O
argc	int
>	O
1	int
)	O
{	O
while	O
(	O
--	O
argc	int
)	O
print_greek	(*(char))->(void)
(	O
*	O
++	O
argv	*(*(char))
)	O
;	O
}	O
else	O
{	O
char	O
buf	*(void)
[	O
80	int
]	O
;	O
while	O
(	O
fgets	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
buf	*(void)
,	O
sizeof	O
(	O
buf	*(void)
)	O
,	O
stdin	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
buf	*(void)
[	O
strlen	(*(char))->(long)
(	O
buf	*(void)
)	O
-	O
1	int
]	O
=	O
0	int
;	O
print_greek	(*(char))->(void)
(	O
buf	*(void)
)	O
;	O
}	O
}	O
return	O
0	int
;	O
}	O
