struct	O
its_value_ty	struct(*(char),*(char))
{	O
char	O
*	O
name	*(char)
;	O
char	O
*	O
value	enum(int,int,int,int,int,int)
;	O
}	O
;	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
{	O
struct	O
its_value_ty	struct(*(char),*(char))
*	O
items	*(struct(*(char),*(char)))
;	O
size_t	long
nitems	long
;	O
size_t	long
nitems_max	long
;	O
}	O
;	O
static	O
void	O
its_value_list_append	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
values	*(*(char))
,	O
const	O
char	O
*	O
name	*(char)
,	O
const	O
char	O
*	O
value	enum(int,int,int,int,int,int)
)	O
{	O
struct	O
its_value_ty	struct(*(char),*(char))
_value	struct(*(char),*(char))
;	O
_value	struct(*(char),*(char))
.	O
name	*(char)
=	O
xstrdup	(*(char))->(*(char))
(	O
name	*(char)
)	O
;	O
_value	struct(*(char),*(char))
.	O
value	enum(int,int,int,int,int,int)
=	O
xstrdup	(*(char))->(*(char))
(	O
value	enum(int,int,int,int,int,int)
)	O
;	O
if	O
(	O
values	*(*(char))
->	O
nitems	long
==	O
values	*(*(char))
->	O
nitems_max	long
)	O
{	O
values	*(*(char))
->	O
nitems_max	long
=	O
2	int
*	O
values	*(*(char))
->	O
nitems_max	long
+	O
1	int
;	O
values	*(*(char))
->	O
items	*(struct(*(char),*(char)))
=	O
xrealloc	(*(void),long)->(*(void))
(	O
values	*(*(char))
->	O
items	*(struct(*(char),*(char)))
,	O
sizeof	O
(	O
struct	O
its_value_ty	struct(*(char),*(char))
)	O
*	O
values	*(*(char))
->	O
nitems_max	long
)	O
;	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
values	*(*(char))
->	O
items	*(struct(*(char),*(char)))
[	O
values	*(*(char))
->	O
nitems	long
++	O
]	O
,	O
&	O
_value	struct(*(char),*(char))
,	O
sizeof	O
(	O
struct	O
its_value_ty	struct(*(char),*(char))
)	O
)	O
;	O
}	O
static	O
const	O
char	O
*	O
its_value_list_get_value	(*(struct(*(struct(*`,*`)),long,long)),*(char))->(*(char))
(	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
values	*(*(char))
,	O
const	O
char	O
*	O
name	*(char)
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
values	*(*(char))
->	O
nitems	long
;	O
i	long
++	O
)	O
{	O
struct	O
its_value_ty	struct(*(char),*(char))
*	O
value	enum(int,int,int,int,int,int)
=	O
&	O
values	*(*(char))
->	O
items	*(struct(*(char),*(char)))
[	O
i	long
]	O
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
value	enum(int,int,int,int,int,int)
->	O
name	*(char)
,	O
name	*(char)
)	O
==	O
0	int
)	O
return	O
value	enum(int,int,int,int,int,int)
->	O
value	enum(int,int,int,int,int,int)
;	O
}	O
return	O
NULL	O
;	O
}	O
static	O
void	O
its_value_list_set_value	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
values	*(*(char))
,	O
const	O
char	O
*	O
name	*(char)
,	O
const	O
char	O
*	O
value	enum(int,int,int,int,int,int)
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
values	*(*(char))
->	O
nitems	long
;	O
i	long
++	O
)	O
{	O
struct	O
its_value_ty	struct(*(char),*(char))
*	O
_value	struct(*(char),*(char))
=	O
&	O
values	*(*(char))
->	O
items	*(struct(*(char),*(char)))
[	O
i	long
]	O
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
_value	struct(*(char),*(char))
->	O
name	*(char)
,	O
name	*(char)
)	O
==	O
0	int
)	O
{	O
free	*((*(char))->(void))
(	O
_value	struct(*(char),*(char))
->	O
value	enum(int,int,int,int,int,int)
)	O
;	O
_value	struct(*(char),*(char))
->	O
value	enum(int,int,int,int,int,int)
=	O
xstrdup	(*(char))->(*(char))
(	O
value	enum(int,int,int,int,int,int)
)	O
;	O
break	O
;	O
}	O
}	O
if	O
(	O
i	long
==	O
values	*(*(char))
->	O
nitems	long
)	O
its_value_list_append	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
values	*(*(char))
,	O
name	*(char)
,	O
value	enum(int,int,int,int,int,int)
)	O
;	O
}	O
static	O
void	O
its_value_list_merge	(*(struct(*(struct(*`,*`)),long,long)),*(struct(*(struct(*`,*`)),long,long)))->(void)
(	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
values	*(*(char))
,	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
other	*(struct(*(struct(*(char),*(char))),long,long))
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
other	*(struct(*(struct(*(char),*(char))),long,long))
->	O
nitems	long
;	O
i	long
++	O
)	O
{	O
struct	O
its_value_ty	struct(*(char),*(char))
*	O
other_value	*(struct(*(char),*(char)))
=	O
&	O
other	*(struct(*(struct(*(char),*(char))),long,long))
->	O
items	*(struct(*(char),*(char)))
[	O
i	long
]	O
;	O
size_t	long
j	long
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<	O
values	*(*(char))
->	O
nitems	long
;	O
j	long
++	O
)	O
{	O
struct	O
its_value_ty	struct(*(char),*(char))
*	O
value	enum(int,int,int,int,int,int)
=	O
&	O
values	*(*(char))
->	O
items	*(struct(*(char),*(char)))
[	O
j	long
]	O
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
value	enum(int,int,int,int,int,int)
->	O
name	*(char)
,	O
other_value	*(struct(*(char),*(char)))
->	O
name	*(char)
)	O
==	O
0	int
&&	O
strcmp	(*(char),*(char))->(int)
(	O
value	enum(int,int,int,int,int,int)
->	O
value	enum(int,int,int,int,int,int)
,	O
other_value	*(struct(*(char),*(char)))
->	O
value	enum(int,int,int,int,int,int)
)	O
!=	O
0	int
)	O
{	O
free	*((*(char))->(void))
(	O
value	enum(int,int,int,int,int,int)
->	O
value	enum(int,int,int,int,int,int)
)	O
;	O
value	enum(int,int,int,int,int,int)
->	O
value	enum(int,int,int,int,int,int)
=	O
xstrdup	(*(char))->(*(char))
(	O
other_value	*(struct(*(char),*(char)))
->	O
value	enum(int,int,int,int,int,int)
)	O
;	O
break	O
;	O
}	O
}	O
if	O
(	O
j	long
==	O
values	*(*(char))
->	O
nitems	long
)	O
its_value_list_append	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
values	*(*(char))
,	O
other_value	*(struct(*(char),*(char)))
->	O
name	*(char)
,	O
other_value	*(struct(*(char),*(char)))
->	O
value	enum(int,int,int,int,int,int)
)	O
;	O
}	O
}	O
static	O
void	O
its_value_list_destroy	(*(struct(*(struct(*`,*`)),long,long)))->(void)
(	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
values	*(*(char))
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
values	*(*(char))
->	O
nitems	long
;	O
i	long
++	O
)	O
{	O
free	*((*(char))->(void))
(	O
values	*(*(char))
->	O
items	*(struct(*(char),*(char)))
[	O
i	long
]	O
.	O
name	*(char)
)	O
;	O
free	*((*(char))->(void))
(	O
values	*(*(char))
->	O
items	*(struct(*(char),*(char)))
[	O
i	long
]	O
.	O
value	enum(int,int,int,int,int,int)
)	O
;	O
}	O
free	*((*(char))->(void))
(	O
values	*(*(char))
->	O
items	*(struct(*(char),*(char)))
)	O
;	O
}	O
struct	O
its_pool_ty	struct(*(struct(*(struct(*(char),*(char))),long,long)),long,long)
{	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
items	*(struct(*(char),*(char)))
;	O
size_t	long
nitems	long
;	O
size_t	long
nitems_max	long
;	O
}	O
;	O
static	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
its_pool_alloc_value_list	(*(struct(*(struct(*`,long,long)),long,long)))->(*(struct(*(struct(*`,*`)),long,long)))
(	O
struct	O
its_pool_ty	struct(*(struct(*(struct(*(char),*(char))),long,long)),long,long)
*	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
)	O
{	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
values	*(*(char))
;	O
if	O
(	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
->	O
nitems	long
==	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
->	O
nitems_max	long
)	O
{	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
->	O
nitems_max	long
=	O
2	int
*	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
->	O
nitems_max	long
+	O
1	int
;	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
->	O
items	*(struct(*(char),*(char)))
=	O
xrealloc	(*(void),long)->(*(void))
(	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
->	O
items	*(struct(*(char),*(char)))
,	O
sizeof	O
(	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
)	O
*	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
->	O
nitems_max	long
)	O
;	O
}	O
values	*(*(char))
=	O
&	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
->	O
items	*(struct(*(char),*(char)))
[	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
->	O
nitems	long
++	O
]	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
values	*(*(char))
,	O
0	int
,	O
sizeof	O
(	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
)	O
)	O
;	O
return	O
values	*(*(char))
;	O
}	O
static	O
const	O
char	O
*	O
its_pool_get_value_for_node	(*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(char))
(	O
struct	O
its_pool_ty	struct(*(struct(*(struct(*(char),*(char))),long,long)),long,long)
*	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
const	O
char	O
*	O
name	*(char)
)	O
{	O
intptr_t	long
index	(*(char),int)->(*(char))
=	O
(	O
intptr_t	long
)	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
_private	*(void)
;	O
if	O
(	O
index	(*(char),int)->(*(char))
>	O
0	int
)	O
{	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
values	*(*(char))
;	O
assert	O
(	O
index	(*(char),int)->(*(char))
<=	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
->	O
nitems	long
)	O
;	O
values	*(*(char))
=	O
&	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
->	O
items	*(struct(*(char),*(char)))
[	O
index	(*(char),int)->(*(char))
-	O
1	int
]	O
;	O
return	O
its_value_list_get_value	(*(struct(*(struct(*`,*`)),long,long)),*(char))->(*(char))
(	O
values	*(*(char))
,	O
name	*(char)
)	O
;	O
}	O
return	O
NULL	O
;	O
}	O
static	O
void	O
its_pool_destroy	(*(struct(*(struct(*`,long,long)),long,long)))->(void)
(	O
struct	O
its_pool_ty	struct(*(struct(*(struct(*(char),*(char))),long,long)),long,long)
*	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
->	O
nitems	long
;	O
i	long
++	O
)	O
its_value_list_destroy	(*(struct(*(struct(*`,*`)),long,long)))->(void)
(	O
&	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
->	O
items	*(struct(*(char),*(char)))
[	O
i	long
]	O
)	O
;	O
free	*((*(char))->(void))
(	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
->	O
items	*(struct(*(char),*(char)))
)	O
;	O
}	O
struct	O
its_rule_list_ty	struct
{	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
*	O
items	*(struct(*(char),*(char)))
;	O
size_t	long
nitems	long
;	O
size_t	long
nitems_max	long
;	O
struct	O
its_pool_ty	struct(*(struct(*(struct(*(char),*(char))),long,long)),long,long)
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
;	O
}	O
;	O
struct	O
its_node_list_ty	struct(*(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short))),long,long)
{	O
xmlNode	struct
*	O
*	O
items	*(struct(*(char),*(char)))
;	O
size_t	long
nitems	long
;	O
size_t	long
nitems_max	long
;	O
}	O
;	O
static	O
void	O
its_node_list_append	(*(struct(*(*(struct`)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(void)
(	O
struct	O
its_node_list_ty	struct(*(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short))),long,long)
*	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
,	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
{	O
if	O
(	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
->	O
nitems	long
==	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
->	O
nitems_max	long
)	O
{	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
->	O
nitems_max	long
=	O
2	int
*	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
->	O
nitems_max	long
+	O
1	int
;	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
->	O
items	*(struct(*(char),*(char)))
=	O
xrealloc	(*(void),long)->(*(void))
(	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
->	O
items	*(struct(*(char),*(char)))
,	O
sizeof	O
(	O
xmlNode	struct
*	O
)	O
*	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
->	O
nitems_max	long
)	O
;	O
}	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
->	O
items	*(struct(*(char),*(char)))
[	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
->	O
nitems	long
++	O
]	O
=	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
;	O
}	O
struct	O
its_rule_class_ty	struct(long,*((*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)))->(void)),*((*(struct))->(void)),*((*(struct),*(struct(*(struct`),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)))->(void)),*((*(struct),*(struct(*(struct`),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)))->(*(struct(*(struct`),long,long)))))
{	O
size_t	long
size	long
;	O
void	O
(	O
*	O
constructor	*((*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)))->(void))
)	O
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
pop	*(struct)
,	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
;	O
void	O
(	O
*	O
destructor	*((*(struct))->(void))
)	O
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
pop	*(struct)
)	O
;	O
void	O
(	O
*	O
apply	*((*(struct),*(struct(*(struct`),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)))->(void))
)	O
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
pop	*(struct)
,	O
struct	O
its_pool_ty	struct(*(struct(*(struct(*(char),*(char))),long,long)),long,long)
*	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
xmlDoc	struct
*	O
doc	*(struct)
)	O
;	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
(	O
*	O
eval	*((*(struct),*(struct(*(struct`),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)))->(*(struct(*(struct`),long,long))))
)	O
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
pop	*(struct)
,	O
struct	O
its_pool_ty	struct(*(struct(*(struct(*(char),*(char))),long,long)),long,long)
*	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
;	O
}	O
;	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
{	O
ITS_RULE_TY	O
}	O
;	O
static	O
hash_table	struct(long,long,*(struct),*(struct),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),long,union(*((long)->(*(void))),*((*(void),long)->(*(void)))),union(*((*(void))->(void)),*((*(void),*(void))->(void))),*(void),int,int,int))
classes	struct(long,long,*(struct),*(struct),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),long,union(*((long)->(*`)),*((*`,long)->(*`))),union(*((*`)->(void)),*((*`,*`)->(void))),*(void),int,int,int))
;	O
static	O
void	O
its_rule_destructor	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))))->(void)
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
pop	*(struct)
)	O
{	O
free	*((*(char))->(void))
(	O
pop	*(struct)
->	O
selector	*(char)
)	O
;	O
its_value_list_destroy	(*(struct(*(struct(*`,*`)),long,long)))->(void)
(	O
&	O
pop	*(struct)
->	O
values	*(*(char))
)	O
;	O
if	O
(	O
pop	*(struct)
->	O
namespaces	*(*(char))
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
pop	*(struct)
->	O
namespaces	*(*(char))
[	O
i	long
]	O
!=	O
NULL	O
;	O
i	long
++	O
)	O
xmlFreeNs	(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)))))->(void)
(	O
pop	*(struct)
->	O
namespaces	*(*(char))
[	O
i	long
]	O
)	O
;	O
free	*((*(char))->(void))
(	O
pop	*(struct)
->	O
namespaces	*(*(char))
)	O
;	O
}	O
}	O
static	O
void	O
its_rule_apply	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(void)
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
rule	*(char)
,	O
struct	O
its_pool_ty	struct(*(struct(*(struct(*(char),*(char))),long,long)),long,long)
*	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
xmlDoc	struct
*	O
doc	*(struct)
)	O
{	O
xmlXPathContext	struct
*	O
context	*(struct)
;	O
xmlXPathObject	struct
*	O
object	*(struct(enum(int,int,int,int,int,int,int,int,int,int),*(struct(int,int,*(*`))),int,double,*(char),*(void),int,*(void),int))
;	O
size_t	long
i	long
;	O
if	O
(	O
!	O
rule	*(char)
->	O
selector	*(char)
)	O
{	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"selector is not specified"	*(char)
)	O
)	O
;	O
return	O
;	O
}	O
context	*(struct)
=	O
xmlXPathNewContext	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),int,int,*(struct),int,int,*(struct(*`,*`)),int,int,*(struct),int,int,*(struct(*`,*`)),*(*(struct`)),int,*(void),int,int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct),*((*`,*`,*`)->(*`)),*(void),*(void),*(char),*(char),*((*`,*`,*`)->(*`)),*(void),*(*(struct`)),int,*(void),*((*`,*`)->(void)),struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct),int,*(void),long,long,int,int,int)))
(	O
doc	*(struct)
)	O
;	O
if	O
(	O
!	O
context	*(struct)
)	O
{	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"cannot create XPath context"	*(char)
)	O
)	O
;	O
return	O
;	O
}	O
if	O
(	O
rule	*(char)
->	O
namespaces	*(*(char))
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
rule	*(char)
->	O
namespaces	*(*(char))
[	O
i	long
]	O
!=	O
NULL	O
;	O
i	long
++	O
)	O
{	O
xmlNs	struct
*	O
ns	*(struct(*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct)))
=	O
rule	*(char)
->	O
namespaces	*(*(char))
[	O
i	long
]	O
;	O
xmlXPathRegisterNs	(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),int,int,*(struct),int,int,*(struct(*`,*`)),int,int,*(struct),int,int,*(struct(*`,*`)),*(*(struct`)),int,*(void),int,int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct),*((*`,*`,*`)->(*`)),*(void),*(void),*(char),*(char),*((*`,*`,*`)->(*`)),*(void),*(*(struct`)),int,*(void),*((*`,*`)->(void)),struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct),int,*(void),long,long,int,int,int)),*(char),*(char))->(int)
(	O
context	*(struct)
,	O
ns	*(struct(*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct)))
->	O
prefix	*(char)
,	O
ns	*(struct(*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct)))
->	O
href	*(char)
)	O
;	O
}	O
}	O
object	*(struct(enum(int,int,int,int,int,int,int,int,int,int),*(struct(int,int,*(*`))),int,double,*(char),*(void),int,*(void),int))
=	O
xmlXPathEval	(*(char),*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),int,int,*(struct),int,int,*(struct(*`,*`)),int,int,*(struct),int,int,*(struct(*`,*`)),*(*(struct`)),int,*(void),int,int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct),*((*`,*`,*`)->(*`)),*(void),*(void),*(char),*(char),*((*`,*`,*`)->(*`)),*(void),*(*(struct`)),int,*(void),*((*`,*`)->(void)),struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct),int,*(void),long,long,int,int,int)))->(*(struct(enum(int,int,int,int,int,int,int,int,int,int),*(struct(int,int,*`)),int,double,*(char),*(void),int,*(void),int)))
(	O
BAD_CAST	O
rule	*(char)
->	O
selector	*(char)
,	O
context	*(struct)
)	O
;	O
if	O
(	O
!	O
object	*(struct(enum(int,int,int,int,int,int,int,int,int,int),*(struct(int,int,*(*`))),int,double,*(char),*(void),int,*(void),int))
)	O
{	O
xmlXPathFreeContext	(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),int,int,*(struct),int,int,*(struct(*`,*`)),int,int,*(struct),int,int,*(struct(*`,*`)),*(*(struct`)),int,*(void),int,int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct),*((*`,*`,*`)->(*`)),*(void),*(void),*(char),*(char),*((*`,*`,*`)->(*`)),*(void),*(*(struct`)),int,*(void),*((*`,*`)->(void)),struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct),int,*(void),long,long,int,int,int)))->(void)
(	O
context	*(struct)
)	O
;	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"cannot evaluate XPath expression: %s"	*(char)
)	O
,	O
rule	*(char)
->	O
selector	*(char)
)	O
;	O
return	O
;	O
}	O
if	O
(	O
object	*(struct(enum(int,int,int,int,int,int,int,int,int,int),*(struct(int,int,*(*`))),int,double,*(char),*(void),int,*(void),int))
->	O
nodesetval	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
)	O
{	O
xmlNodeSet	struct
*	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
=	O
object	*(struct(enum(int,int,int,int,int,int,int,int,int,int),*(struct(int,int,*(*`))),int,double,*(char),*(void),int,*(void),int))
->	O
nodesetval	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
->	O
nodeNr	int
;	O
i	long
++	O
)	O
{	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
=	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
->	O
nodeTab	*(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))
[	O
i	long
]	O
;	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
values	*(*(char))
;	O
intptr_t	long
index	(*(char),int)->(*(char))
=	O
(	O
intptr_t	long
)	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
_private	*(void)
;	O
assert	O
(	O
index	(*(char),int)->(*(char))
<=	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
->	O
nitems	long
)	O
;	O
if	O
(	O
index	(*(char),int)->(*(char))
>	O
0	int
)	O
values	*(*(char))
=	O
&	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
->	O
items	*(struct(*(char),*(char)))
[	O
index	(*(char),int)->(*(char))
-	O
1	int
]	O
;	O
else	O
{	O
values	*(*(char))
=	O
its_pool_alloc_value_list	(*(struct(*(struct(*`,long,long)),long,long)))->(*(struct(*(struct(*`,*`)),long,long)))
(	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
)	O
;	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
_private	*(void)
=	O
(	O
void	O
*	O
)	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
->	O
nitems	long
;	O
}	O
its_value_list_merge	(*(struct(*(struct(*`,*`)),long,long)),*(struct(*(struct(*`,*`)),long,long)))->(void)
(	O
values	*(*(char))
,	O
&	O
rule	*(char)
->	O
values	*(*(char))
)	O
;	O
}	O
}	O
xmlXPathFreeObject	(*(struct(enum(int,int,int,int,int,int,int,int,int,int),*(struct(int,int,*`)),int,double,*(char),*(void),int,*(void),int)))->(void)
(	O
object	*(struct(enum(int,int,int,int,int,int,int,int,int,int),*(struct(int,int,*(*`))),int,double,*(char),*(void),int,*(void),int))
)	O
;	O
xmlXPathFreeContext	(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),int,int,*(struct),int,int,*(struct(*`,*`)),int,int,*(struct),int,int,*(struct(*`,*`)),*(*(struct`)),int,*(void),int,int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct),*((*`,*`,*`)->(*`)),*(void),*(void),*(char),*(char),*((*`,*`,*`)->(*`)),*(void),*(*(struct`)),int,*(void),*((*`,*`)->(void)),struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct),int,*(void),long,long,int,int,int)))->(void)
(	O
context	*(struct)
)	O
;	O
}	O
static	O
char	O
*	O
_its_get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(char))
(	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
const	O
char	O
*	O
attr	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct),*(struct),*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int),*(void)))
,	O
const	O
char	O
*	O
namespace	*(char)
)	O
{	O
xmlChar	char
*	O
value	enum(int,int,int,int,int,int)
;	O
char	O
*	O
result	*(*(void))
;	O
value	enum(int,int,int,int,int,int)
=	O
xmlGetNsProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
attr	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct),*(struct),*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int),*(void)))
,	O
BAD_CAST	O
namespace	*(char)
)	O
;	O
result	*(*(void))
=	O
xstrdup	(*(char))->(*(char))
(	O
(	O
const	O
char	O
*	O
)	O
value	enum(int,int,int,int,int,int)
)	O
;	O
xmlFree	*((*(void))->(void))
(	O
value	enum(int,int,int,int,int,int)
)	O
;	O
return	O
result	*(*(void))
;	O
}	O
static	O
char	O
*	O
normalize_whitespace	(*(char),enum(int,int,int,int))->(*(char))
(	O
const	O
char	O
*	O
text	*(char)
,	O
enum	O
its_whitespace_type_ty	enum(int,int,int,int)
whitespace	enum(int,int,int,int)
)	O
{	O
switch	O
(	O
whitespace	enum(int,int,int,int)
)	O
{	O
case	O
ITS_WHITESPACE_PRESERVE	int
:	O
return	O
xstrdup	(*(char))->(*(char))
(	O
text	*(char)
)	O
;	O
case	O
ITS_WHITESPACE_TRIM	int
:	O
return	O
trim	O
(	O
text	*(char)
)	O
;	O
case	O
ITS_WHITESPACE_NORMALIZE_PARAGRAPH	int
:	O
{	O
char	O
*	O
result	*(*(void))
=	O
xstrdup	(*(char))->(*(char))
(	O
text	*(char)
)	O
;	O
const	O
char	O
*	O
start_of_paragraph	*(char)
;	O
char	O
*	O
out	*(char)
;	O
out	*(char)
=	O
result	*(*(void))
;	O
for	O
(	O
start_of_paragraph	*(char)
=	O
result	*(*(void))
;	O
*	O
start_of_paragraph	*(char)
!=	O
'\0'	O
;	O
)	O
{	O
const	O
char	O
*	O
end_of_paragraph	*(char)
;	O
const	O
char	O
*	O
next_paragraph	*(char)
;	O
{	O
const	O
char	O
*	O
p	*(void)
;	O
for	O
(	O
p	*(void)
=	O
start_of_paragraph	*(char)
;	O
;	O
)	O
{	O
const	O
char	O
*	O
nl	*(char)
=	O
strchrnul	(*(char),int)->(*(char))
(	O
p	*(void)
,	O
'\n'	O
)	O
;	O
if	O
(	O
*	O
nl	*(char)
==	O
'\0'	O
)	O
{	O
end_of_paragraph	*(char)
=	O
nl	*(char)
;	O
next_paragraph	*(char)
=	O
end_of_paragraph	*(char)
;	O
break	O
;	O
}	O
p	*(void)
=	O
nl	*(char)
+	O
1	int
;	O
{	O
const	O
char	O
*	O
past_whitespace	*(char)
=	O
p	*(void)
+	O
strspn	(*(char),*(char))->(long)
(	O
p	*(void)
,	O
" \t\n"	*(char)
)	O
;	O
if	O
(	O
memchr	(*(void),int,long)->(*(void))
(	O
p	*(void)
,	O
'\n'	O
,	O
past_whitespace	*(char)
-	O
p	*(void)
)	O
!=	O
NULL	O
)	O
{	O
end_of_paragraph	*(char)
=	O
nl	*(char)
;	O
next_paragraph	*(char)
=	O
past_whitespace	*(char)
;	O
break	O
;	O
}	O
p	*(void)
=	O
past_whitespace	*(char)
;	O
}	O
}	O
}	O
{	O
const	O
char	O
*	O
p	*(void)
;	O
for	O
(	O
p	*(void)
=	O
start_of_paragraph	*(char)
;	O
p	*(void)
<	O
end_of_paragraph	*(char)
;	O
p	*(void)
++	O
)	O
if	O
(	O
!	O
(	O
*	O
p	*(void)
==	O
' '	O
||	O
*	O
p	*(void)
==	O
'\t'	O
||	O
*	O
p	*(void)
==	O
'\n'	O
)	O
)	O
break	O
;	O
for	O
(	O
;	O
p	*(void)
<	O
end_of_paragraph	*(char)
;	O
)	O
{	O
if	O
(	O
*	O
p	*(void)
==	O
' '	O
||	O
*	O
p	*(void)
==	O
'\t'	O
||	O
*	O
p	*(void)
==	O
'\n'	O
)	O
{	O
do	O
p	*(void)
++	O
;	O
while	O
(	O
p	*(void)
<	O
end_of_paragraph	*(char)
&&	O
(	O
*	O
p	*(void)
==	O
' '	O
||	O
*	O
p	*(void)
==	O
'\t'	O
||	O
*	O
p	*(void)
==	O
'\n'	O
)	O
)	O
;	O
if	O
(	O
p	*(void)
<	O
end_of_paragraph	*(char)
)	O
*	O
out	*(char)
++	O
=	O
' '	O
;	O
}	O
else	O
*	O
out	*(char)
++	O
=	O
*	O
p	*(void)
++	O
;	O
}	O
}	O
if	O
(	O
*	O
next_paragraph	*(char)
!=	O
'\0'	O
)	O
{	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
out	*(char)
,	O
"\n\n"	*(char)
,	O
2	int
)	O
;	O
out	*(char)
+=	O
2	int
;	O
}	O
start_of_paragraph	*(char)
=	O
next_paragraph	*(char)
;	O
}	O
*	O
out	*(char)
=	O
'\0'	O
;	O
return	O
result	*(*(void))
;	O
}	O
default	O
:	O
{	O
char	O
*	O
result	*(*(void))
=	O
xstrdup	(*(char))->(*(char))
(	O
text	*(char)
)	O
;	O
char	O
*	O
out	*(char)
;	O
const	O
char	O
*	O
p	*(void)
;	O
out	*(char)
=	O
result	*(*(void))
;	O
for	O
(	O
p	*(void)
=	O
result	*(*(void))
;	O
*	O
p	*(void)
!=	O
'\0'	O
;	O
)	O
{	O
if	O
(	O
*	O
p	*(void)
==	O
' '	O
||	O
*	O
p	*(void)
==	O
'\t'	O
||	O
*	O
p	*(void)
==	O
'\n'	O
)	O
{	O
do	O
p	*(void)
++	O
;	O
while	O
(	O
*	O
p	*(void)
==	O
' '	O
||	O
*	O
p	*(void)
==	O
'\t'	O
||	O
*	O
p	*(void)
==	O
'\n'	O
)	O
;	O
*	O
out	*(char)
++	O
=	O
' '	O
;	O
}	O
else	O
*	O
out	*(char)
++	O
=	O
*	O
p	*(void)
++	O
;	O
}	O
*	O
out	*(char)
=	O
'\0'	O
;	O
return	O
result	*(*(void))
;	O
}	O
}	O
}	O
static	O
char	O
*	O
_its_encode_special_chars	(*(char),bool)->(*(char))
(	O
const	O
char	O
*	O
content	*(char)
,	O
bool	bool
is_attribute	bool
)	O
{	O
const	O
char	O
*	O
str	*(char)
;	O
size_t	long
amount	long
=	O
0	int
;	O
char	O
*	O
result	*(*(void))
,	O
*	O
p	*(void)
;	O
for	O
(	O
str	*(char)
=	O
content	*(char)
;	O
*	O
str	*(char)
!=	O
'\0'	O
;	O
str	*(char)
++	O
)	O
{	O
switch	O
(	O
*	O
str	*(char)
)	O
{	O
case	O
'&'	O
:	O
amount	long
+=	O
sizeof	O
(	O
"&amp;"	*(char)
)	O
;	O
break	O
;	O
case	O
'<'	O
:	O
amount	long
+=	O
sizeof	O
(	O
"&lt;"	*(char)
)	O
;	O
break	O
;	O
case	O
'>'	O
:	O
amount	long
+=	O
sizeof	O
(	O
"&gt;"	*(char)
)	O
;	O
break	O
;	O
case	O
'"'	O
:	O
if	O
(	O
is_attribute	bool
)	O
amount	long
+=	O
sizeof	O
(	O
"&quot;"	*(char)
)	O
;	O
else	O
amount	long
+=	O
1	int
;	O
break	O
;	O
default	O
:	O
amount	long
+=	O
1	int
;	O
break	O
;	O
}	O
}	O
result	*(*(void))
=	O
XNMALLOC	O
(	O
amount	long
+	O
1	int
,	O
char	O
)	O
;	O
*	O
result	*(*(void))
=	O
'\0'	O
;	O
p	*(void)
=	O
result	*(*(void))
;	O
for	O
(	O
str	*(char)
=	O
content	*(char)
;	O
*	O
str	*(char)
!=	O
'\0'	O
;	O
str	*(char)
++	O
)	O
{	O
switch	O
(	O
*	O
str	*(char)
)	O
{	O
case	O
'&'	O
:	O
p	*(void)
=	O
stpcpy	(*(char),*(char))->(*(char))
(	O
p	*(void)
,	O
"&amp;"	*(char)
)	O
;	O
break	O
;	O
case	O
'<'	O
:	O
p	*(void)
=	O
stpcpy	(*(char),*(char))->(*(char))
(	O
p	*(void)
,	O
"&lt;"	*(char)
)	O
;	O
break	O
;	O
case	O
'>'	O
:	O
p	*(void)
=	O
stpcpy	(*(char),*(char))->(*(char))
(	O
p	*(void)
,	O
"&gt;"	*(char)
)	O
;	O
break	O
;	O
case	O
'"'	O
:	O
if	O
(	O
is_attribute	bool
)	O
p	*(void)
=	O
stpcpy	(*(char),*(char))->(*(char))
(	O
p	*(void)
,	O
"&quot;"	*(char)
)	O
;	O
else	O
*	O
p	*(void)
++	O
=	O
'"'	O
;	O
break	O
;	O
default	O
:	O
*	O
p	*(void)
++	O
=	O
*	O
str	*(char)
;	O
break	O
;	O
}	O
}	O
*	O
p	*(void)
=	O
'\0'	O
;	O
return	O
result	*(*(void))
;	O
}	O
static	O
char	O
*	O
_its_collect_text_content	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),enum(int,int,int,int),bool)->(*(char))
(	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
enum	O
its_whitespace_type_ty	enum(int,int,int,int)
whitespace	enum(int,int,int,int)
,	O
bool	bool
no_escape	bool
)	O
{	O
char	O
*	O
buffer	*(struct(*(char),int,int,enum(int,int,int,int,int,int),*(char)))
=	O
NULL	O
;	O
size_t	long
bufmax	long
=	O
0	int
;	O
size_t	long
bufpos	long
=	O
0	int
;	O
xmlNode	struct
*	O
n	long
;	O
for	O
(	O
n	long
=	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
children	*(struct)
;	O
n	long
;	O
n	long
=	O
n	long
->	O
next	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
)	O
{	O
char	O
*	O
content	*(char)
=	O
NULL	O
;	O
switch	O
(	O
n	long
->	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
{	O
case	O
XML_TEXT_NODE	int
:	O
case	O
XML_CDATA_SECTION_NODE	int
:	O
{	O
xmlChar	char
*	O
xcontent	*(char)
=	O
xmlNodeGetContent	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(char))
(	O
n	long
)	O
;	O
char	O
*	O
econtent	*(char)
;	O
const	O
char	O
*	O
ccontent	*(char)
;	O
if	O
(	O
no_escape	bool
)	O
econtent	*(char)
=	O
xstrdup	(*(char))->(*(char))
(	O
(	O
const	O
char	O
*	O
)	O
xcontent	*(char)
)	O
;	O
else	O
econtent	*(char)
=	O
_its_encode_special_chars	(*(char),bool)->(*(char))
(	O
(	O
const	O
char	O
*	O
)	O
xcontent	*(char)
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
==	O
XML_ATTRIBUTE_NODE	int
)	O
;	O
xmlFree	*((*(void))->(void))
(	O
xcontent	*(char)
)	O
;	O
ccontent	*(char)
=	O
econtent	*(char)
;	O
if	O
(	O
whitespace	enum(int,int,int,int)
==	O
ITS_WHITESPACE_NORMALIZE	int
&&	O
!	O
n	long
->	O
prev	*(struct(*(char),*(struct(*(char),*(struct`),array(char))),array(char)))
)	O
ccontent	*(char)
=	O
ccontent	*(char)
+	O
strspn	(*(char),*(char))->(long)
(	O
ccontent	*(char)
,	O
" \t\n"	*(char)
)	O
;	O
content	*(char)
=	O
normalize_whitespace	(*(char),enum(int,int,int,int))->(*(char))
(	O
ccontent	*(char)
,	O
whitespace	enum(int,int,int,int)
)	O
;	O
free	*((*(char))->(void))
(	O
econtent	*(char)
)	O
;	O
if	O
(	O
whitespace	enum(int,int,int,int)
==	O
ITS_WHITESPACE_NORMALIZE	int
&&	O
!	O
n	long
->	O
next	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
)	O
{	O
char	O
*	O
p	*(void)
=	O
content	*(char)
+	O
strlen	(*(char))->(long)
(	O
content	*(char)
)	O
;	O
for	O
(	O
;	O
p	*(void)
>	O
content	*(char)
;	O
p	*(void)
--	O
)	O
{	O
int	O
c	int
=	O
*	O
(	O
p	*(void)
-	O
1	int
)	O
;	O
if	O
(	O
!	O
(	O
c	int
==	O
' '	O
||	O
c	int
==	O
'\t'	O
||	O
c	int
==	O
'\n'	O
)	O
)	O
{	O
*	O
p	*(void)
=	O
'\0'	O
;	O
break	O
;	O
}	O
}	O
}	O
}	O
break	O
;	O
case	O
XML_ELEMENT_NODE	int
:	O
{	O
xmlOutputBuffer	struct
*	O
buffer	*(struct(*(char),int,int,enum(int,int,int,int,int,int),*(char)))
=	O
xmlAllocOutputBuffer	(*(struct(*(char),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*(void),*(void),*(struct(*`,*`,array(short),*`,*`)),*(struct(*`,*`,array(short),*`,*`)))))->(*(struct(*(void),*((*`,*`,int)->(int)),*((*`)->(int)),*(struct(*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),int,int)))
(	O
NULL	O
)	O
;	O
xmlTextWriter	struct
*	O
writer	*(struct)
=	O
xmlNewTextWriter	(*(struct(*(void),*((*`,*`,int)->(int)),*((*`)->(int)),*(struct(*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),int,int)))->(*(struct))
(	O
buffer	*(struct(*(char),int,int,enum(int,int,int,int,int,int),*(char)))
)	O
;	O
char	O
*	O
p	*(void)
=	O
_its_collect_text_content	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),enum(int,int,int,int),bool)->(*(char))
(	O
n	long
,	O
whitespace	enum(int,int,int,int)
,	O
no_escape	bool
)	O
;	O
const	O
char	O
*	O
ccontent	*(char)
;	O
xmlTextWriterStartElement	(*(struct),*(char))->(int)
(	O
writer	*(struct)
,	O
BAD_CAST	O
n	long
->	O
name	*(char)
)	O
;	O
if	O
(	O
n	long
->	O
properties	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int),*(void)))
)	O
{	O
xmlAttr	struct
*	O
attr	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct),*(struct),*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int),*(void)))
=	O
n	long
->	O
properties	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int),*(void)))
;	O
for	O
(	O
;	O
attr	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct),*(struct),*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int),*(void)))
;	O
attr	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct),*(struct),*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int),*(void)))
=	O
attr	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct),*(struct),*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
next	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
)	O
{	O
xmlChar	char
*	O
prop	*(char)
=	O
xmlGetProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(char))
(	O
n	long
,	O
attr	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct),*(struct),*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
name	*(char)
)	O
;	O
xmlTextWriterWriteAttribute	(*(struct),*(char),*(char))->(int)
(	O
writer	*(struct)
,	O
attr	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct),*(struct),*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
name	*(char)
,	O
prop	*(char)
)	O
;	O
xmlFree	*((*(void))->(void))
(	O
prop	*(char)
)	O
;	O
}	O
}	O
if	O
(	O
*	O
p	*(void)
!=	O
'\0'	O
)	O
xmlTextWriterWriteRaw	(*(struct),*(char))->(int)
(	O
writer	*(struct)
,	O
BAD_CAST	O
p	*(void)
)	O
;	O
xmlTextWriterEndElement	(*(struct))->(int)
(	O
writer	*(struct)
)	O
;	O
ccontent	*(char)
=	O
(	O
const	O
char	O
*	O
)	O
xmlOutputBufferGetContent	(*(struct(*(void),*((*`,*`,int)->(int)),*((*`)->(int)),*(struct(*`,*`,*`,*`,*`,*`,*`)),*(struct),*(struct),int,int)))->(*(char))
(	O
buffer	*(struct(*(char),int,int,enum(int,int,int,int,int,int),*(char)))
)	O
;	O
content	*(char)
=	O
normalize_whitespace	(*(char),enum(int,int,int,int))->(*(char))
(	O
ccontent	*(char)
,	O
whitespace	enum(int,int,int,int)
)	O
;	O
xmlFreeTextWriter	(*(struct))->(void)
(	O
writer	*(struct)
)	O
;	O
free	*((*(char))->(void))
(	O
p	*(void)
)	O
;	O
}	O
break	O
;	O
case	O
XML_ENTITY_REF_NODE	int
:	O
content	*(char)
=	O
xasprintf	(*(char))->(*(char))
(	O
"&%s;"	*(char)
,	O
(	O
const	O
char	O
*	O
)	O
n	long
->	O
name	*(char)
)	O
;	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
if	O
(	O
content	*(char)
!=	O
NULL	O
)	O
{	O
size_t	long
length	int
=	O
strlen	(*(char))->(long)
(	O
content	*(char)
)	O
;	O
if	O
(	O
bufpos	long
+	O
length	int
+	O
1	int
>=	O
bufmax	long
)	O
{	O
bufmax	long
=	O
2	int
*	O
bufmax	long
+	O
length	int
+	O
1	int
;	O
buffer	*(struct(*(char),int,int,enum(int,int,int,int,int,int),*(char)))
=	O
xrealloc	(*(void),long)->(*(void))
(	O
buffer	*(struct(*(char),int,int,enum(int,int,int,int,int,int),*(char)))
,	O
bufmax	long
)	O
;	O
}	O
strcpy	(*(char),*(char))->(*(char))
(	O
&	O
buffer	*(struct(*(char),int,int,enum(int,int,int,int,int,int),*(char)))
[	O
bufpos	long
]	O
,	O
content	*(char)
)	O
;	O
bufpos	long
+=	O
length	int
;	O
}	O
free	*((*(char))->(void))
(	O
content	*(char)
)	O
;	O
}	O
if	O
(	O
buffer	*(struct(*(char),int,int,enum(int,int,int,int,int,int),*(char)))
==	O
NULL	O
)	O
buffer	*(struct(*(char),int,int,enum(int,int,int,int,int,int),*(char)))
=	O
xstrdup	(*(char))->(*(char))
(	O
""	*(char)
)	O
;	O
return	O
buffer	*(struct(*(char),int,int,enum(int,int,int,int,int,int),*(char)))
;	O
}	O
static	O
void	O
_its_error_missing_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(void)
(	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
const	O
char	O
*	O
attribute	*(char)
)	O
{	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"\"%s\" node does not contain \"%s\""	*(char)
)	O
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
name	*(char)
,	O
attribute	*(char)
)	O
;	O
}	O
static	O
void	O
its_translate_rule_constructor	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(void)
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
pop	*(struct)
,	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
{	O
char	O
*	O
prop	*(char)
;	O
if	O
(	O
!	O
xmlHasProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"selector"	*(char)
)	O
)	O
{	O
_its_error_missing_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(void)
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"selector"	*(char)
)	O
;	O
return	O
;	O
}	O
if	O
(	O
!	O
xmlHasProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"translate"	*(char)
)	O
)	O
{	O
_its_error_missing_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(void)
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"translate"	*(char)
)	O
;	O
return	O
;	O
}	O
prop	*(char)
=	O
_its_get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"selector"	*(char)
,	O
NULL	O
)	O
;	O
if	O
(	O
prop	*(char)
)	O
pop	*(struct)
->	O
selector	*(char)
=	O
prop	*(char)
;	O
prop	*(char)
=	O
_its_get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"translate"	*(char)
,	O
NULL	O
)	O
;	O
its_value_list_append	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
&	O
pop	*(struct)
->	O
values	*(*(char))
,	O
"translate"	*(char)
,	O
prop	*(char)
)	O
;	O
free	*((*(char))->(void))
(	O
prop	*(char)
)	O
;	O
}	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
its_translate_rule_eval	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(struct(*(struct(*`,*`)),long,long)))
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
pop	*(struct)
,	O
struct	O
its_pool_ty	struct(*(struct(*(struct(*(char),*(char))),long,long)),long,long)
*	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
{	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
result	*(*(void))
;	O
result	*(*(void))
=	O
XCALLOC	O
(	O
1	int
,	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
)	O
;	O
switch	O
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
{	O
case	O
XML_ATTRIBUTE_NODE	int
:	O
{	O
const	O
char	O
*	O
value	enum(int,int,int,int,int,int)
=	O
its_pool_get_value_for_node	(*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(char))
(	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"translate"	*(char)
)	O
;	O
if	O
(	O
value	enum(int,int,int,int,int,int)
!=	O
NULL	O
)	O
{	O
its_value_list_set_value	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
result	*(*(void))
,	O
"translate"	*(char)
,	O
value	enum(int,int,int,int,int,int)
)	O
;	O
return	O
result	*(*(void))
;	O
}	O
its_value_list_append	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
result	*(*(void))
,	O
"translate"	*(char)
,	O
"no"	*(char)
)	O
;	O
}	O
break	O
;	O
case	O
XML_ELEMENT_NODE	int
:	O
{	O
const	O
char	O
*	O
value	enum(int,int,int,int,int,int)
;	O
if	O
(	O
xmlHasNsProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"translate"	*(char)
,	O
BAD_CAST	O
ITS_NS	*(char)
)	O
)	O
{	O
char	O
*	O
prop	*(char)
;	O
prop	*(char)
=	O
_its_get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"translate"	*(char)
,	O
ITS_NS	*(char)
)	O
;	O
its_value_list_append	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
result	*(*(void))
,	O
"translate"	*(char)
,	O
prop	*(char)
)	O
;	O
free	*((*(char))->(void))
(	O
prop	*(char)
)	O
;	O
return	O
result	*(*(void))
;	O
}	O
value	enum(int,int,int,int,int,int)
=	O
its_pool_get_value_for_node	(*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(char))
(	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"translate"	*(char)
)	O
;	O
if	O
(	O
value	enum(int,int,int,int,int,int)
!=	O
NULL	O
)	O
{	O
its_value_list_set_value	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
result	*(*(void))
,	O
"translate"	*(char)
,	O
value	enum(int,int,int,int,int,int)
)	O
;	O
return	O
result	*(*(void))
;	O
}	O
if	O
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
parent	*(struct)
==	O
NULL	O
||	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
parent	*(struct)
->	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
!=	O
XML_ELEMENT_NODE	int
)	O
its_value_list_append	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
result	*(*(void))
,	O
"translate"	*(char)
,	O
"yes"	*(char)
)	O
;	O
else	O
{	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
values	*(*(char))
;	O
values	*(*(char))
=	O
its_translate_rule_eval	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(struct(*(struct(*`,*`)),long,long)))
(	O
pop	*(struct)
,	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
parent	*(struct)
)	O
;	O
its_value_list_merge	(*(struct(*(struct(*`,*`)),long,long)),*(struct(*(struct(*`,*`)),long,long)))->(void)
(	O
result	*(*(void))
,	O
values	*(*(char))
)	O
;	O
its_value_list_destroy	(*(struct(*(struct(*`,*`)),long,long)))->(void)
(	O
values	*(*(char))
)	O
;	O
free	*((*(char))->(void))
(	O
values	*(*(char))
)	O
;	O
}	O
}	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
return	O
result	*(*(void))
;	O
}	O
static	O
struct	O
its_rule_class_ty	struct(long,*((*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)))->(void)),*((*(struct))->(void)),*((*(struct),*(struct(*(struct`),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)))->(void)),*((*(struct),*(struct(*(struct`),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)))->(*(struct(*(struct`),long,long)))))
its_translate_rule_class	struct(long,*((*(struct(*`,*`,struct`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))->(void)),*((*(struct(*`,*`,struct`,*`)))->(void)),*((*(struct(*`,*`,struct`,*`)),*(struct(*`,long,long)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)))->(void)),*((*(struct(*`,*`,struct`,*`)),*(struct(*`,long,long)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))->(*(struct(*`,long,long)))))
=	O
{	O
sizeof	O
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
)	O
,	O
its_translate_rule_constructor	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(void)
,	O
its_rule_destructor	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))))->(void)
,	O
its_rule_apply	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(void)
,	O
its_translate_rule_eval	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(struct(*(struct(*`,*`)),long,long)))
,	O
}	O
;	O
static	O
void	O
its_localization_note_rule_constructor	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(void)
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
pop	*(struct)
,	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
{	O
char	O
*	O
prop	*(char)
;	O
xmlNode	struct
*	O
n	long
;	O
if	O
(	O
!	O
xmlHasProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"selector"	*(char)
)	O
)	O
{	O
_its_error_missing_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(void)
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"selector"	*(char)
)	O
;	O
return	O
;	O
}	O
if	O
(	O
!	O
xmlHasProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"locNoteType"	*(char)
)	O
)	O
{	O
_its_error_missing_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(void)
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"locNoteType"	*(char)
)	O
;	O
return	O
;	O
}	O
prop	*(char)
=	O
_its_get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"selector"	*(char)
,	O
NULL	O
)	O
;	O
if	O
(	O
prop	*(char)
)	O
pop	*(struct)
->	O
selector	*(char)
=	O
prop	*(char)
;	O
for	O
(	O
n	long
=	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
children	*(struct)
;	O
n	long
;	O
n	long
=	O
n	long
->	O
next	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
)	O
{	O
if	O
(	O
n	long
->	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
==	O
XML_ELEMENT_NODE	int
&&	O
xmlStrEqual	(*(char),*(char))->(int)
(	O
n	long
->	O
name	*(char)
,	O
BAD_CAST	O
"locNote"	*(char)
)	O
&&	O
xmlStrEqual	(*(char),*(char))->(int)
(	O
n	long
->	O
ns	*(struct(*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct)))
->	O
href	*(char)
,	O
BAD_CAST	O
ITS_NS	*(char)
)	O
)	O
break	O
;	O
}	O
prop	*(char)
=	O
_its_get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"locNoteType"	*(char)
,	O
NULL	O
)	O
;	O
if	O
(	O
prop	*(char)
)	O
its_value_list_append	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
&	O
pop	*(struct)
->	O
values	*(*(char))
,	O
"locNoteType"	*(char)
,	O
prop	*(char)
)	O
;	O
free	*((*(char))->(void))
(	O
prop	*(char)
)	O
;	O
if	O
(	O
n	long
)	O
{	O
char	O
*	O
content	*(char)
=	O
_its_collect_text_content	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),enum(int,int,int,int),bool)->(*(char))
(	O
n	long
,	O
ITS_WHITESPACE_NORMALIZE	int
,	O
false	int
)	O
;	O
its_value_list_append	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
&	O
pop	*(struct)
->	O
values	*(*(char))
,	O
"locNote"	*(char)
,	O
content	*(char)
)	O
;	O
free	*((*(char))->(void))
(	O
content	*(char)
)	O
;	O
}	O
else	O
if	O
(	O
xmlHasProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"locNotePointer"	*(char)
)	O
)	O
{	O
prop	*(char)
=	O
_its_get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"locNotePointer"	*(char)
,	O
NULL	O
)	O
;	O
its_value_list_append	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
&	O
pop	*(struct)
->	O
values	*(*(char))
,	O
"locNotePointer"	*(char)
,	O
prop	*(char)
)	O
;	O
free	*((*(char))->(void))
(	O
prop	*(char)
)	O
;	O
}	O
}	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
its_localization_note_rule_eval	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(struct(*(struct(*`,*`)),long,long)))
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
pop	*(struct)
,	O
struct	O
its_pool_ty	struct(*(struct(*(struct(*(char),*(char))),long,long)),long,long)
*	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
{	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
result	*(*(void))
;	O
result	*(*(void))
=	O
XCALLOC	O
(	O
1	int
,	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
)	O
;	O
switch	O
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
{	O
case	O
XML_ATTRIBUTE_NODE	int
:	O
{	O
const	O
char	O
*	O
value	enum(int,int,int,int,int,int)
;	O
value	enum(int,int,int,int,int,int)
=	O
its_pool_get_value_for_node	(*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(char))
(	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"locNoteType"	*(char)
)	O
;	O
if	O
(	O
value	enum(int,int,int,int,int,int)
!=	O
NULL	O
)	O
its_value_list_set_value	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
result	*(*(void))
,	O
"locNoteType"	*(char)
,	O
value	enum(int,int,int,int,int,int)
)	O
;	O
value	enum(int,int,int,int,int,int)
=	O
its_pool_get_value_for_node	(*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(char))
(	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"locNote"	*(char)
)	O
;	O
if	O
(	O
value	enum(int,int,int,int,int,int)
!=	O
NULL	O
)	O
{	O
its_value_list_set_value	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
result	*(*(void))
,	O
"locNote"	*(char)
,	O
value	enum(int,int,int,int,int,int)
)	O
;	O
return	O
result	*(*(void))
;	O
}	O
value	enum(int,int,int,int,int,int)
=	O
its_pool_get_value_for_node	(*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(char))
(	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"locNotePointer"	*(char)
)	O
;	O
if	O
(	O
value	enum(int,int,int,int,int,int)
!=	O
NULL	O
)	O
{	O
its_value_list_set_value	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
result	*(*(void))
,	O
"locNotePointer"	*(char)
,	O
value	enum(int,int,int,int,int,int)
)	O
;	O
return	O
result	*(*(void))
;	O
}	O
}	O
break	O
;	O
case	O
XML_ELEMENT_NODE	int
:	O
{	O
const	O
char	O
*	O
value	enum(int,int,int,int,int,int)
;	O
if	O
(	O
xmlHasNsProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"locNote"	*(char)
,	O
BAD_CAST	O
ITS_NS	*(char)
)	O
||	O
xmlHasNsProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"locNoteRef"	*(char)
,	O
BAD_CAST	O
ITS_NS	*(char)
)	O
||	O
xmlHasNsProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"locNoteType"	*(char)
,	O
BAD_CAST	O
ITS_NS	*(char)
)	O
)	O
{	O
char	O
*	O
prop	*(char)
;	O
if	O
(	O
xmlHasNsProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"locNote"	*(char)
,	O
BAD_CAST	O
ITS_NS	*(char)
)	O
)	O
{	O
prop	*(char)
=	O
_its_get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"locNote"	*(char)
,	O
ITS_NS	*(char)
)	O
;	O
its_value_list_append	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
result	*(*(void))
,	O
"locNote"	*(char)
,	O
prop	*(char)
)	O
;	O
free	*((*(char))->(void))
(	O
prop	*(char)
)	O
;	O
}	O
if	O
(	O
xmlHasNsProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"locNoteType"	*(char)
,	O
BAD_CAST	O
ITS_NS	*(char)
)	O
)	O
{	O
prop	*(char)
=	O
_its_get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"locNoteType"	*(char)
,	O
ITS_NS	*(char)
)	O
;	O
its_value_list_append	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
result	*(*(void))
,	O
"locNoteType"	*(char)
,	O
prop	*(char)
)	O
;	O
free	*((*(char))->(void))
(	O
prop	*(char)
)	O
;	O
}	O
return	O
result	*(*(void))
;	O
}	O
value	enum(int,int,int,int,int,int)
=	O
its_pool_get_value_for_node	(*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(char))
(	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"locNoteType"	*(char)
)	O
;	O
if	O
(	O
value	enum(int,int,int,int,int,int)
!=	O
NULL	O
)	O
its_value_list_set_value	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
result	*(*(void))
,	O
"locNoteType"	*(char)
,	O
value	enum(int,int,int,int,int,int)
)	O
;	O
value	enum(int,int,int,int,int,int)
=	O
its_pool_get_value_for_node	(*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(char))
(	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"locNote"	*(char)
)	O
;	O
if	O
(	O
value	enum(int,int,int,int,int,int)
!=	O
NULL	O
)	O
{	O
its_value_list_set_value	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
result	*(*(void))
,	O
"locNote"	*(char)
,	O
value	enum(int,int,int,int,int,int)
)	O
;	O
return	O
result	*(*(void))
;	O
}	O
value	enum(int,int,int,int,int,int)
=	O
its_pool_get_value_for_node	(*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(char))
(	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"locNotePointer"	*(char)
)	O
;	O
if	O
(	O
value	enum(int,int,int,int,int,int)
!=	O
NULL	O
)	O
{	O
its_value_list_set_value	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
result	*(*(void))
,	O
"locNotePointer"	*(char)
,	O
value	enum(int,int,int,int,int,int)
)	O
;	O
return	O
result	*(*(void))
;	O
}	O
if	O
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
parent	*(struct)
==	O
NULL	O
||	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
parent	*(struct)
->	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
!=	O
XML_ELEMENT_NODE	int
)	O
return	O
result	*(*(void))
;	O
else	O
{	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
values	*(*(char))
;	O
values	*(*(char))
=	O
its_localization_note_rule_eval	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(struct(*(struct(*`,*`)),long,long)))
(	O
pop	*(struct)
,	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
parent	*(struct)
)	O
;	O
its_value_list_merge	(*(struct(*(struct(*`,*`)),long,long)),*(struct(*(struct(*`,*`)),long,long)))->(void)
(	O
result	*(*(void))
,	O
values	*(*(char))
)	O
;	O
its_value_list_destroy	(*(struct(*(struct(*`,*`)),long,long)))->(void)
(	O
values	*(*(char))
)	O
;	O
free	*((*(char))->(void))
(	O
values	*(*(char))
)	O
;	O
}	O
}	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
return	O
result	*(*(void))
;	O
}	O
static	O
struct	O
its_rule_class_ty	struct(long,*((*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)))->(void)),*((*(struct))->(void)),*((*(struct),*(struct(*(struct`),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)))->(void)),*((*(struct),*(struct(*(struct`),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)))->(*(struct(*(struct`),long,long)))))
its_localization_note_rule_class	struct(long,*((*(struct(*`,*`,struct`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))->(void)),*((*(struct(*`,*`,struct`,*`)))->(void)),*((*(struct(*`,*`,struct`,*`)),*(struct(*`,long,long)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)))->(void)),*((*(struct(*`,*`,struct`,*`)),*(struct(*`,long,long)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))->(*(struct(*`,long,long)))))
=	O
{	O
sizeof	O
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
)	O
,	O
its_localization_note_rule_constructor	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(void)
,	O
its_rule_destructor	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))))->(void)
,	O
its_rule_apply	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(void)
,	O
its_localization_note_rule_eval	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(struct(*(struct(*`,*`)),long,long)))
,	O
}	O
;	O
static	O
void	O
its_element_within_text_rule_constructor	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(void)
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
pop	*(struct)
,	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
{	O
char	O
*	O
prop	*(char)
;	O
if	O
(	O
!	O
xmlHasProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"selector"	*(char)
)	O
)	O
{	O
_its_error_missing_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(void)
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"selector"	*(char)
)	O
;	O
return	O
;	O
}	O
if	O
(	O
!	O
xmlHasProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"withinText"	*(char)
)	O
)	O
{	O
_its_error_missing_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(void)
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"withinText"	*(char)
)	O
;	O
return	O
;	O
}	O
prop	*(char)
=	O
_its_get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"selector"	*(char)
,	O
NULL	O
)	O
;	O
if	O
(	O
prop	*(char)
)	O
pop	*(struct)
->	O
selector	*(char)
=	O
prop	*(char)
;	O
prop	*(char)
=	O
_its_get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"withinText"	*(char)
,	O
NULL	O
)	O
;	O
its_value_list_append	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
&	O
pop	*(struct)
->	O
values	*(*(char))
,	O
"withinText"	*(char)
,	O
prop	*(char)
)	O
;	O
free	*((*(char))->(void))
(	O
prop	*(char)
)	O
;	O
}	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
its_element_within_text_rule_eval	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(struct(*(struct(*`,*`)),long,long)))
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
pop	*(struct)
,	O
struct	O
its_pool_ty	struct(*(struct(*(struct(*(char),*(char))),long,long)),long,long)
*	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
{	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
result	*(*(void))
;	O
const	O
char	O
*	O
value	enum(int,int,int,int,int,int)
;	O
result	*(*(void))
=	O
XCALLOC	O
(	O
1	int
,	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
)	O
;	O
if	O
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
!=	O
XML_ELEMENT_NODE	int
)	O
return	O
result	*(*(void))
;	O
if	O
(	O
xmlHasNsProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"withinText"	*(char)
,	O
BAD_CAST	O
ITS_NS	*(char)
)	O
)	O
{	O
char	O
*	O
prop	*(char)
;	O
prop	*(char)
=	O
_its_get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"withinText"	*(char)
,	O
ITS_NS	*(char)
)	O
;	O
its_value_list_append	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
result	*(*(void))
,	O
"withinText"	*(char)
,	O
prop	*(char)
)	O
;	O
free	*((*(char))->(void))
(	O
prop	*(char)
)	O
;	O
return	O
result	*(*(void))
;	O
}	O
value	enum(int,int,int,int,int,int)
=	O
its_pool_get_value_for_node	(*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(char))
(	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"withinText"	*(char)
)	O
;	O
if	O
(	O
value	enum(int,int,int,int,int,int)
!=	O
NULL	O
)	O
its_value_list_set_value	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
result	*(*(void))
,	O
"withinText"	*(char)
,	O
value	enum(int,int,int,int,int,int)
)	O
;	O
return	O
result	*(*(void))
;	O
}	O
static	O
struct	O
its_rule_class_ty	struct(long,*((*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)))->(void)),*((*(struct))->(void)),*((*(struct),*(struct(*(struct`),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)))->(void)),*((*(struct),*(struct(*(struct`),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)))->(*(struct(*(struct`),long,long)))))
its_element_within_text_rule_class	struct(long,*((*(struct(*`,*`,struct`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))->(void)),*((*(struct(*`,*`,struct`,*`)))->(void)),*((*(struct(*`,*`,struct`,*`)),*(struct(*`,long,long)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)))->(void)),*((*(struct(*`,*`,struct`,*`)),*(struct(*`,long,long)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))->(*(struct(*`,long,long)))))
=	O
{	O
sizeof	O
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
)	O
,	O
its_element_within_text_rule_constructor	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(void)
,	O
its_rule_destructor	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))))->(void)
,	O
its_rule_apply	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(void)
,	O
its_element_within_text_rule_eval	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(struct(*(struct(*`,*`)),long,long)))
,	O
}	O
;	O
static	O
void	O
its_preserve_space_rule_constructor	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(void)
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
pop	*(struct)
,	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
{	O
char	O
*	O
prop	*(char)
;	O
if	O
(	O
!	O
xmlHasProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"selector"	*(char)
)	O
)	O
{	O
_its_error_missing_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(void)
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"selector"	*(char)
)	O
;	O
return	O
;	O
}	O
if	O
(	O
!	O
xmlHasProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"space"	*(char)
)	O
)	O
{	O
_its_error_missing_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(void)
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"space"	*(char)
)	O
;	O
return	O
;	O
}	O
prop	*(char)
=	O
_its_get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"selector"	*(char)
,	O
NULL	O
)	O
;	O
if	O
(	O
prop	*(char)
)	O
pop	*(struct)
->	O
selector	*(char)
=	O
prop	*(char)
;	O
prop	*(char)
=	O
_its_get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"space"	*(char)
,	O
NULL	O
)	O
;	O
if	O
(	O
prop	*(char)
&&	O
!	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
prop	*(char)
,	O
"preserve"	*(char)
)	O
==	O
0	int
||	O
strcmp	(*(char),*(char))->(int)
(	O
prop	*(char)
,	O
"default"	*(char)
)	O
==	O
0	int
||	O
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
ns	*(struct(*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct)))
&&	O
xmlStrEqual	(*(char),*(char))->(int)
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
ns	*(struct(*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct)))
->	O
href	*(char)
,	O
BAD_CAST	O
GT_NS	*(char)
)	O
&&	O
strcmp	(*(char),*(char))->(int)
(	O
prop	*(char)
,	O
"trim"	*(char)
)	O
==	O
0	int
)	O
||	O
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
ns	*(struct(*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct)))
&&	O
xmlStrEqual	(*(char),*(char))->(int)
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
ns	*(struct(*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct)))
->	O
href	*(char)
,	O
BAD_CAST	O
GT_NS	*(char)
)	O
&&	O
strcmp	(*(char),*(char))->(int)
(	O
prop	*(char)
,	O
"paragraph"	*(char)
)	O
==	O
0	int
)	O
)	O
)	O
{	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"invalid attribute value \"%s\" for \"%s\""	*(char)
)	O
,	O
prop	*(char)
,	O
"space"	*(char)
)	O
;	O
free	*((*(char))->(void))
(	O
prop	*(char)
)	O
;	O
return	O
;	O
}	O
its_value_list_append	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
&	O
pop	*(struct)
->	O
values	*(*(char))
,	O
"space"	*(char)
,	O
prop	*(char)
)	O
;	O
free	*((*(char))->(void))
(	O
prop	*(char)
)	O
;	O
}	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
its_preserve_space_rule_eval	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(struct(*(struct(*`,*`)),long,long)))
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
pop	*(struct)
,	O
struct	O
its_pool_ty	struct(*(struct(*(struct(*(char),*(char))),long,long)),long,long)
*	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
{	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
result	*(*(void))
;	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
values	*(*(char))
;	O
const	O
char	O
*	O
value	enum(int,int,int,int,int,int)
;	O
result	*(*(void))
=	O
XCALLOC	O
(	O
1	int
,	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
)	O
;	O
if	O
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
!=	O
XML_ELEMENT_NODE	int
)	O
return	O
result	*(*(void))
;	O
if	O
(	O
xmlHasNsProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"space"	*(char)
,	O
BAD_CAST	O
XML_NS	*(char)
)	O
)	O
{	O
char	O
*	O
prop	*(char)
;	O
prop	*(char)
=	O
_its_get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"space"	*(char)
,	O
XML_NS	*(char)
)	O
;	O
its_value_list_append	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
result	*(*(void))
,	O
"space"	*(char)
,	O
prop	*(char)
)	O
;	O
free	*((*(char))->(void))
(	O
prop	*(char)
)	O
;	O
return	O
result	*(*(void))
;	O
}	O
value	enum(int,int,int,int,int,int)
=	O
its_pool_get_value_for_node	(*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(char))
(	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"space"	*(char)
)	O
;	O
if	O
(	O
value	enum(int,int,int,int,int,int)
!=	O
NULL	O
)	O
{	O
its_value_list_set_value	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
result	*(*(void))
,	O
"space"	*(char)
,	O
value	enum(int,int,int,int,int,int)
)	O
;	O
return	O
result	*(*(void))
;	O
}	O
if	O
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
parent	*(struct)
==	O
NULL	O
||	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
parent	*(struct)
->	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
!=	O
XML_ELEMENT_NODE	int
)	O
{	O
its_value_list_append	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
result	*(*(void))
,	O
"space"	*(char)
,	O
"default"	*(char)
)	O
;	O
return	O
result	*(*(void))
;	O
}	O
values	*(*(char))
=	O
its_preserve_space_rule_eval	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(struct(*(struct(*`,*`)),long,long)))
(	O
pop	*(struct)
,	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
parent	*(struct)
)	O
;	O
its_value_list_merge	(*(struct(*(struct(*`,*`)),long,long)),*(struct(*(struct(*`,*`)),long,long)))->(void)
(	O
result	*(*(void))
,	O
values	*(*(char))
)	O
;	O
its_value_list_destroy	(*(struct(*(struct(*`,*`)),long,long)))->(void)
(	O
values	*(*(char))
)	O
;	O
free	*((*(char))->(void))
(	O
values	*(*(char))
)	O
;	O
return	O
result	*(*(void))
;	O
}	O
static	O
struct	O
its_rule_class_ty	struct(long,*((*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)))->(void)),*((*(struct))->(void)),*((*(struct),*(struct(*(struct`),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)))->(void)),*((*(struct),*(struct(*(struct`),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)))->(*(struct(*(struct`),long,long)))))
its_preserve_space_rule_class	struct(long,*((*(struct(*`,*`,struct`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))->(void)),*((*(struct(*`,*`,struct`,*`)))->(void)),*((*(struct(*`,*`,struct`,*`)),*(struct(*`,long,long)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)))->(void)),*((*(struct(*`,*`,struct`,*`)),*(struct(*`,long,long)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))->(*(struct(*`,long,long)))))
=	O
{	O
sizeof	O
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
)	O
,	O
its_preserve_space_rule_constructor	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(void)
,	O
its_rule_destructor	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))))->(void)
,	O
its_rule_apply	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(void)
,	O
its_preserve_space_rule_eval	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(struct(*(struct(*`,*`)),long,long)))
,	O
}	O
;	O
static	O
void	O
its_extension_context_rule_constructor	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(void)
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
pop	*(struct)
,	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
{	O
char	O
*	O
prop	*(char)
;	O
if	O
(	O
!	O
xmlHasProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"selector"	*(char)
)	O
)	O
{	O
_its_error_missing_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(void)
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"selector"	*(char)
)	O
;	O
return	O
;	O
}	O
if	O
(	O
!	O
xmlHasProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"contextPointer"	*(char)
)	O
)	O
{	O
_its_error_missing_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(void)
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"contextPointer"	*(char)
)	O
;	O
return	O
;	O
}	O
prop	*(char)
=	O
_its_get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"selector"	*(char)
,	O
NULL	O
)	O
;	O
if	O
(	O
prop	*(char)
)	O
pop	*(struct)
->	O
selector	*(char)
=	O
prop	*(char)
;	O
prop	*(char)
=	O
_its_get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"contextPointer"	*(char)
,	O
NULL	O
)	O
;	O
its_value_list_append	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
&	O
pop	*(struct)
->	O
values	*(*(char))
,	O
"contextPointer"	*(char)
,	O
prop	*(char)
)	O
;	O
free	*((*(char))->(void))
(	O
prop	*(char)
)	O
;	O
if	O
(	O
xmlHasProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"textPointer"	*(char)
)	O
)	O
{	O
prop	*(char)
=	O
_its_get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"textPointer"	*(char)
,	O
NULL	O
)	O
;	O
its_value_list_append	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
&	O
pop	*(struct)
->	O
values	*(*(char))
,	O
"textPointer"	*(char)
,	O
prop	*(char)
)	O
;	O
free	*((*(char))->(void))
(	O
prop	*(char)
)	O
;	O
}	O
}	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
its_extension_context_rule_eval	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(struct(*(struct(*`,*`)),long,long)))
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
pop	*(struct)
,	O
struct	O
its_pool_ty	struct(*(struct(*(struct(*(char),*(char))),long,long)),long,long)
*	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
{	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
result	*(*(void))
;	O
const	O
char	O
*	O
value	enum(int,int,int,int,int,int)
;	O
result	*(*(void))
=	O
XCALLOC	O
(	O
1	int
,	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
)	O
;	O
value	enum(int,int,int,int,int,int)
=	O
its_pool_get_value_for_node	(*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(char))
(	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"contextPointer"	*(char)
)	O
;	O
if	O
(	O
value	enum(int,int,int,int,int,int)
!=	O
NULL	O
)	O
its_value_list_set_value	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
result	*(*(void))
,	O
"contextPointer"	*(char)
,	O
value	enum(int,int,int,int,int,int)
)	O
;	O
value	enum(int,int,int,int,int,int)
=	O
its_pool_get_value_for_node	(*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(char))
(	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"textPointer"	*(char)
)	O
;	O
if	O
(	O
value	enum(int,int,int,int,int,int)
!=	O
NULL	O
)	O
its_value_list_set_value	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
result	*(*(void))
,	O
"textPointer"	*(char)
,	O
value	enum(int,int,int,int,int,int)
)	O
;	O
return	O
result	*(*(void))
;	O
}	O
static	O
struct	O
its_rule_class_ty	struct(long,*((*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)))->(void)),*((*(struct))->(void)),*((*(struct),*(struct(*(struct`),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)))->(void)),*((*(struct),*(struct(*(struct`),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)))->(*(struct(*(struct`),long,long)))))
its_extension_context_rule_class	struct(long,*((*(struct(*`,*`,struct`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))->(void)),*((*(struct(*`,*`,struct`,*`)))->(void)),*((*(struct(*`,*`,struct`,*`)),*(struct(*`,long,long)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)))->(void)),*((*(struct(*`,*`,struct`,*`)),*(struct(*`,long,long)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))->(*(struct(*`,long,long)))))
=	O
{	O
sizeof	O
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
)	O
,	O
its_extension_context_rule_constructor	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(void)
,	O
its_rule_destructor	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))))->(void)
,	O
its_rule_apply	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(void)
,	O
its_extension_context_rule_eval	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(struct(*(struct(*`,*`)),long,long)))
,	O
}	O
;	O
static	O
void	O
its_extension_escape_rule_constructor	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(void)
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
pop	*(struct)
,	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
{	O
char	O
*	O
prop	*(char)
;	O
if	O
(	O
!	O
xmlHasProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"selector"	*(char)
)	O
)	O
{	O
_its_error_missing_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(void)
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"selector"	*(char)
)	O
;	O
return	O
;	O
}	O
if	O
(	O
!	O
xmlHasProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"escape"	*(char)
)	O
)	O
{	O
_its_error_missing_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(void)
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"escape"	*(char)
)	O
;	O
return	O
;	O
}	O
prop	*(char)
=	O
_its_get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"selector"	*(char)
,	O
NULL	O
)	O
;	O
if	O
(	O
prop	*(char)
)	O
pop	*(struct)
->	O
selector	*(char)
=	O
prop	*(char)
;	O
prop	*(char)
=	O
_its_get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"escape"	*(char)
,	O
NULL	O
)	O
;	O
its_value_list_append	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
&	O
pop	*(struct)
->	O
values	*(*(char))
,	O
"escape"	*(char)
,	O
prop	*(char)
)	O
;	O
free	*((*(char))->(void))
(	O
prop	*(char)
)	O
;	O
}	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
its_extension_escape_rule_eval	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(struct(*(struct(*`,*`)),long,long)))
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
pop	*(struct)
,	O
struct	O
its_pool_ty	struct(*(struct(*(struct(*(char),*(char))),long,long)),long,long)
*	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
{	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
result	*(*(void))
;	O
result	*(*(void))
=	O
XCALLOC	O
(	O
1	int
,	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
)	O
;	O
switch	O
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
{	O
case	O
XML_ATTRIBUTE_NODE	int
:	O
{	O
const	O
char	O
*	O
value	enum(int,int,int,int,int,int)
=	O
its_pool_get_value_for_node	(*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(char))
(	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"escape"	*(char)
)	O
;	O
if	O
(	O
value	enum(int,int,int,int,int,int)
!=	O
NULL	O
)	O
{	O
its_value_list_set_value	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
result	*(*(void))
,	O
"escape"	*(char)
,	O
value	enum(int,int,int,int,int,int)
)	O
;	O
return	O
result	*(*(void))
;	O
}	O
}	O
break	O
;	O
case	O
XML_ELEMENT_NODE	int
:	O
{	O
const	O
char	O
*	O
value	enum(int,int,int,int,int,int)
;	O
value	enum(int,int,int,int,int,int)
=	O
its_pool_get_value_for_node	(*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(char))
(	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"escape"	*(char)
)	O
;	O
if	O
(	O
value	enum(int,int,int,int,int,int)
!=	O
NULL	O
)	O
{	O
its_value_list_set_value	(*(struct(*(struct(*`,*`)),long,long)),*(char),*(char))->(void)
(	O
result	*(*(void))
,	O
"escape"	*(char)
,	O
value	enum(int,int,int,int,int,int)
)	O
;	O
return	O
result	*(*(void))
;	O
}	O
if	O
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
parent	*(struct)
!=	O
NULL	O
&&	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
parent	*(struct)
->	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
==	O
XML_ELEMENT_NODE	int
)	O
{	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
values	*(*(char))
;	O
values	*(*(char))
=	O
its_extension_escape_rule_eval	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(struct(*(struct(*`,*`)),long,long)))
(	O
pop	*(struct)
,	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
parent	*(struct)
)	O
;	O
its_value_list_merge	(*(struct(*(struct(*`,*`)),long,long)),*(struct(*(struct(*`,*`)),long,long)))->(void)
(	O
result	*(*(void))
,	O
values	*(*(char))
)	O
;	O
its_value_list_destroy	(*(struct(*(struct(*`,*`)),long,long)))->(void)
(	O
values	*(*(char))
)	O
;	O
free	*((*(char))->(void))
(	O
values	*(*(char))
)	O
;	O
}	O
}	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
return	O
result	*(*(void))
;	O
}	O
static	O
struct	O
its_rule_class_ty	struct(long,*((*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)))->(void)),*((*(struct))->(void)),*((*(struct),*(struct(*(struct`),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)))->(void)),*((*(struct),*(struct(*(struct`),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)))->(*(struct(*(struct`),long,long)))))
its_extension_escape_rule_class	struct(long,*((*(struct(*`,*`,struct`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))->(void)),*((*(struct(*`,*`,struct`,*`)))->(void)),*((*(struct(*`,*`,struct`,*`)),*(struct(*`,long,long)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)))->(void)),*((*(struct(*`,*`,struct`,*`)),*(struct(*`,long,long)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))->(*(struct(*`,long,long)))))
=	O
{	O
sizeof	O
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
)	O
,	O
its_extension_escape_rule_constructor	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(void)
,	O
its_rule_destructor	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))))->(void)
,	O
its_rule_apply	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(void)
,	O
its_extension_escape_rule_eval	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))),*(struct(*(struct(*`,long,long)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(struct(*(struct(*`,*`)),long,long)))
,	O
}	O
;	O
static	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
its_rule_alloc	(*(struct(long,*((*`,*`)->(void)),*((*`)->(void)),*((*`,*`,*`)->(void)),*((*`,*`,*`)->(*`)))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))))
(	O
struct	O
its_rule_class_ty	struct(long,*((*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)))->(void)),*((*(struct))->(void)),*((*(struct),*(struct(*(struct`),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)))->(void)),*((*(struct),*(struct(*(struct`),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)))->(*(struct(*(struct`),long,long)))))
*	O
method_table	*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`)))))
,	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
{	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
pop	*(struct)
;	O
pop	*(struct)
=	O
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
)	O
xcalloc	(long,long)->(*(void))
(	O
1	int
,	O
method_table	*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`)))))
->	O
size	long
)	O
;	O
pop	*(struct)
->	O
methods	*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`)))))
=	O
method_table	*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`)))))
;	O
if	O
(	O
method_table	*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`)))))
->	O
constructor	*((*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)))->(void))
)	O
method_table	*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`)))))
->	O
constructor	*((*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)))->(void))
(	O
pop	*(struct)
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
;	O
return	O
pop	*(struct)
;	O
}	O
static	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
its_rule_parse	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))))
(	O
xmlDoc	struct
*	O
doc	*(struct)
,	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
{	O
const	O
char	O
*	O
name	*(char)
=	O
(	O
const	O
char	O
*	O
)	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
name	*(char)
;	O
void	O
*	O
value	enum(int,int,int,int,int,int)
;	O
if	O
(	O
hash_find_entry	(*(struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))),*(void),long,*(*(void)))->(int)
(	O
&	O
classes	struct(long,long,*(struct),*(struct),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),long,union(*((long)->(*`)),*((*`,long)->(*`))),union(*((*`)->(void)),*((*`,*`)->(void))),*(void),int,int,int))
,	O
name	*(char)
,	O
strlen	(*(char))->(long)
(	O
name	*(char)
)	O
,	O
&	O
value	enum(int,int,int,int,int,int)
)	O
==	O
0	int
)	O
{	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
result	*(*(void))
;	O
xmlNs	struct
*	O
*	O
namespaces	*(*(char))
;	O
result	*(*(void))
=	O
its_rule_alloc	(*(struct(long,*((*`,*`)->(void)),*((*`)->(void)),*((*`,*`,*`)->(void)),*((*`,*`,*`)->(*`)))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))))
(	O
(	O
struct	O
its_rule_class_ty	struct(long,*((*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)))->(void)),*((*(struct))->(void)),*((*(struct),*(struct(*(struct`),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)))->(void)),*((*(struct),*(struct(*(struct`),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)))->(*(struct(*(struct`),long,long)))))
*	O
)	O
value	enum(int,int,int,int,int,int)
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
;	O
namespaces	*(*(char))
=	O
xmlGetNsList	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`)))))
(	O
doc	*(struct)
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
;	O
if	O
(	O
namespaces	*(*(char))
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
namespaces	*(*(char))
[	O
i	long
]	O
!=	O
NULL	O
;	O
i	long
++	O
)	O
;	O
result	*(*(void))
->	O
namespaces	*(*(char))
=	O
XCALLOC	O
(	O
i	long
+	O
1	int
,	O
xmlNs	struct
*	O
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
namespaces	*(*(char))
[	O
i	long
]	O
!=	O
NULL	O
;	O
i	long
++	O
)	O
result	*(*(void))
->	O
namespaces	*(*(char))
[	O
i	long
]	O
=	O
xmlCopyNamespace	(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)))))->(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)))))
(	O
namespaces	*(*(char))
[	O
i	long
]	O
)	O
;	O
}	O
xmlFree	*((*(void))->(void))
(	O
namespaces	*(*(char))
)	O
;	O
return	O
result	*(*(void))
;	O
}	O
return	O
NULL	O
;	O
}	O
static	O
void	O
its_rule_destroy	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))))->(void)
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
pop	*(struct)
)	O
{	O
if	O
(	O
pop	*(struct)
->	O
methods	*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`)))))
->	O
destructor	*((*(struct))->(void))
)	O
pop	*(struct)
->	O
methods	*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`)))))
->	O
destructor	*((*(struct))->(void))
(	O
pop	*(struct)
)	O
;	O
}	O
static	O
void	O
init_classes	()->(void)
(	O
void	O
)	O
{	O
ADD_RULE_CLASS	O
(	O
"translateRule"	*(char)
,	O
its_translate_rule_class	struct(long,*((*(struct(*`,*`,struct`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))->(void)),*((*(struct(*`,*`,struct`,*`)))->(void)),*((*(struct(*`,*`,struct`,*`)),*(struct(*`,long,long)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)))->(void)),*((*(struct(*`,*`,struct`,*`)),*(struct(*`,long,long)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))->(*(struct(*`,long,long)))))
)	O
;	O
ADD_RULE_CLASS	O
(	O
"locNoteRule"	*(char)
,	O
its_localization_note_rule_class	struct(long,*((*(struct(*`,*`,struct`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))->(void)),*((*(struct(*`,*`,struct`,*`)))->(void)),*((*(struct(*`,*`,struct`,*`)),*(struct(*`,long,long)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)))->(void)),*((*(struct(*`,*`,struct`,*`)),*(struct(*`,long,long)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))->(*(struct(*`,long,long)))))
)	O
;	O
ADD_RULE_CLASS	O
(	O
"withinTextRule"	*(char)
,	O
its_element_within_text_rule_class	struct(long,*((*(struct(*`,*`,struct`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))->(void)),*((*(struct(*`,*`,struct`,*`)))->(void)),*((*(struct(*`,*`,struct`,*`)),*(struct(*`,long,long)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)))->(void)),*((*(struct(*`,*`,struct`,*`)),*(struct(*`,long,long)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))->(*(struct(*`,long,long)))))
)	O
;	O
ADD_RULE_CLASS	O
(	O
"preserveSpaceRule"	*(char)
,	O
its_preserve_space_rule_class	struct(long,*((*(struct(*`,*`,struct`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))->(void)),*((*(struct(*`,*`,struct`,*`)))->(void)),*((*(struct(*`,*`,struct`,*`)),*(struct(*`,long,long)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)))->(void)),*((*(struct(*`,*`,struct`,*`)),*(struct(*`,long,long)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))->(*(struct(*`,long,long)))))
)	O
;	O
ADD_RULE_CLASS	O
(	O
"contextRule"	*(char)
,	O
its_extension_context_rule_class	struct(long,*((*(struct(*`,*`,struct`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))->(void)),*((*(struct(*`,*`,struct`,*`)))->(void)),*((*(struct(*`,*`,struct`,*`)),*(struct(*`,long,long)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)))->(void)),*((*(struct(*`,*`,struct`,*`)),*(struct(*`,long,long)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))->(*(struct(*`,long,long)))))
)	O
;	O
ADD_RULE_CLASS	O
(	O
"escapeRule"	*(char)
,	O
its_extension_escape_rule_class	struct(long,*((*(struct(*`,*`,struct`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))->(void)),*((*(struct(*`,*`,struct`,*`)))->(void)),*((*(struct(*`,*`,struct`,*`)),*(struct(*`,long,long)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)))->(void)),*((*(struct(*`,*`,struct`,*`)),*(struct(*`,long,long)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))->(*(struct(*`,long,long)))))
)	O
;	O
}	O
struct	O
its_rule_list_ty	struct
*	O
its_rule_list_alloc	()->(*(struct))
(	O
void	O
)	O
{	O
struct	O
its_rule_list_ty	struct
*	O
result	*(*(void))
;	O
if	O
(	O
classes	struct(long,long,*(struct),*(struct),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),long,union(*((long)->(*`)),*((*`,long)->(*`))),union(*((*`)->(void)),*((*`,*`)->(void))),*(void),int,int,int))
.	O
table	*(struct)
==	O
NULL	O
)	O
{	O
hash_init	(*(struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))),long)->(int)
(	O
&	O
classes	struct(long,long,*(struct),*(struct),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),long,union(*((long)->(*`)),*((*`,long)->(*`))),union(*((*`)->(void)),*((*`,*`)->(void))),*(void),int,int,int))
,	O
10	int
)	O
;	O
init_classes	()->(void)
(	O
)	O
;	O
}	O
result	*(*(void))
=	O
XCALLOC	O
(	O
1	int
,	O
struct	O
its_rule_list_ty	struct
)	O
;	O
return	O
result	*(*(void))
;	O
}	O
void	O
its_rule_list_free	(*(struct))->(void)
(	O
struct	O
its_rule_list_ty	struct
*	O
rules	*(struct)
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
rules	*(struct)
->	O
nitems	long
;	O
i	long
++	O
)	O
{	O
its_rule_destroy	(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))))->(void)
(	O
rules	*(struct)
->	O
items	*(struct(*(char),*(char)))
[	O
i	long
]	O
)	O
;	O
free	*((*(char))->(void))
(	O
rules	*(struct)
->	O
items	*(struct(*(char),*(char)))
[	O
i	long
]	O
)	O
;	O
}	O
free	*((*(char))->(void))
(	O
rules	*(struct)
->	O
items	*(struct(*(char),*(char)))
)	O
;	O
its_pool_destroy	(*(struct(*(struct(*`,long,long)),long,long)))->(void)
(	O
&	O
rules	*(struct)
->	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
)	O
;	O
}	O
static	O
bool	bool
its_rule_list_add_from_doc	(*(struct(*(*(struct`)),long,long,struct(*(struct`),long,long))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(bool)
(	O
struct	O
its_rule_list_ty	struct
*	O
rules	*(struct)
,	O
xmlDoc	struct
*	O
doc	*(struct)
)	O
{	O
xmlNode	struct
*	O
root	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
;	O
root	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
=	O
xmlDocGetRootElement	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))
(	O
doc	*(struct)
)	O
;	O
if	O
(	O
!	O
(	O
xmlStrEqual	(*(char),*(char))->(int)
(	O
root	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
name	*(char)
,	O
BAD_CAST	O
"rules"	*(char)
)	O
&&	O
xmlStrEqual	(*(char),*(char))->(int)
(	O
root	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
ns	*(struct(*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct)))
->	O
href	*(char)
,	O
BAD_CAST	O
ITS_NS	*(char)
)	O
)	O
)	O
{	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"the root element is not \"rules\""	*(char)
" under namespace %s"	*(char)
)	O
,	O
ITS_NS	*(char)
)	O
;	O
xmlFreeDoc	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(void)
(	O
doc	*(struct)
)	O
;	O
return	O
false	int
;	O
}	O
for	O
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
=	O
root	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
children	*(struct)
;	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
;	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
=	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
next	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
)	O
{	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
rule	*(char)
;	O
rule	*(char)
=	O
its_rule_parse	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(struct(*(struct(long,*`,*`,*`,*`)),*(char),struct(*(struct`),long,long),*(*(struct`)))))
(	O
doc	*(struct)
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
;	O
if	O
(	O
!	O
rule	*(char)
)	O
continue	O
;	O
if	O
(	O
rules	*(struct)
->	O
nitems	long
==	O
rules	*(struct)
->	O
nitems_max	long
)	O
{	O
rules	*(struct)
->	O
nitems_max	long
=	O
2	int
*	O
rules	*(struct)
->	O
nitems_max	long
+	O
1	int
;	O
rules	*(struct)
->	O
items	*(struct(*(char),*(char)))
=	O
xrealloc	(*(void),long)->(*(void))
(	O
rules	*(struct)
->	O
items	*(struct(*(char),*(char)))
,	O
sizeof	O
(	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
)	O
*	O
rules	*(struct)
->	O
nitems_max	long
)	O
;	O
}	O
rules	*(struct)
->	O
items	*(struct(*(char),*(char)))
[	O
rules	*(struct)
->	O
nitems	long
++	O
]	O
=	O
rule	*(char)
;	O
}	O
return	O
true	int
;	O
}	O
bool	bool
its_rule_list_add_from_file	(*(struct),*(char))->(bool)
(	O
struct	O
its_rule_list_ty	struct
*	O
rules	*(struct)
,	O
const	O
char	O
*	O
filename	*(char)
)	O
{	O
xmlDoc	struct
*	O
doc	*(struct)
;	O
bool	bool
result	*(*(void))
;	O
doc	*(struct)
=	O
xmlReadFile	(*(char),*(char),int)->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))
(	O
filename	*(char)
,	O
"utf-8"	*(char)
,	O
XML_PARSE_NONET	int
|	O
XML_PARSE_NOWARNING	int
|	O
XML_PARSE_NOBLANKS	int
|	O
XML_PARSE_NOERROR	int
)	O
;	O
if	O
(	O
doc	*(struct)
==	O
NULL	O
)	O
{	O
xmlError	struct
*	O
err	*(struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void)))
=	O
xmlGetLastError	()->(*(struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void))))
(	O
)	O
;	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"cannot read %s: %s"	*(char)
)	O
,	O
filename	*(char)
,	O
err	*(struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void)))
->	O
message	*(char)
)	O
;	O
return	O
false	int
;	O
}	O
result	*(*(void))
=	O
its_rule_list_add_from_doc	(*(struct(*(*(struct`)),long,long,struct(*(struct`),long,long))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(bool)
(	O
rules	*(struct)
,	O
doc	*(struct)
)	O
;	O
xmlFreeDoc	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(void)
(	O
doc	*(struct)
)	O
;	O
return	O
result	*(*(void))
;	O
}	O
bool	bool
its_rule_list_add_from_string	(*(struct),*(char))->(bool)
(	O
struct	O
its_rule_list_ty	struct
*	O
rules	*(struct)
,	O
const	O
char	O
*	O
rule	*(char)
)	O
{	O
xmlDoc	struct
*	O
doc	*(struct)
;	O
bool	bool
result	*(*(void))
;	O
doc	*(struct)
=	O
xmlReadMemory	(*(char),int,*(char),*(char),int)->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))
(	O
rule	*(char)
,	O
strlen	(*(char))->(long)
(	O
rule	*(char)
)	O
,	O
"(internal)"	*(char)
,	O
NULL	O
,	O
XML_PARSE_NONET	int
|	O
XML_PARSE_NOWARNING	int
|	O
XML_PARSE_NOBLANKS	int
|	O
XML_PARSE_NOERROR	int
)	O
;	O
if	O
(	O
doc	*(struct)
==	O
NULL	O
)	O
{	O
xmlError	struct
*	O
err	*(struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void)))
=	O
xmlGetLastError	()->(*(struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void))))
(	O
)	O
;	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"cannot read %s: %s"	*(char)
)	O
,	O
"(internal)"	*(char)
,	O
err	*(struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void)))
->	O
message	*(char)
)	O
;	O
return	O
false	int
;	O
}	O
result	*(*(void))
=	O
its_rule_list_add_from_doc	(*(struct(*(*(struct`)),long,long,struct(*(struct`),long,long))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(bool)
(	O
rules	*(struct)
,	O
doc	*(struct)
)	O
;	O
xmlFreeDoc	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(void)
(	O
doc	*(struct)
)	O
;	O
return	O
result	*(*(void))
;	O
}	O
static	O
void	O
its_rule_list_apply	(*(struct(*(*(struct`)),long,long,struct(*(struct`),long,long))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(void)
(	O
struct	O
its_rule_list_ty	struct
*	O
rules	*(struct)
,	O
xmlDoc	struct
*	O
doc	*(struct)
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
rules	*(struct)
->	O
nitems	long
;	O
i	long
++	O
)	O
{	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
rule	*(char)
=	O
rules	*(struct)
->	O
items	*(struct(*(char),*(char)))
[	O
i	long
]	O
;	O
rule	*(char)
->	O
methods	*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`)))))
->	O
apply	*((*(struct),*(struct(*(struct`),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)))->(void))
(	O
rule	*(char)
,	O
&	O
rules	*(struct)
->	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
doc	*(struct)
)	O
;	O
}	O
}	O
static	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
its_rule_list_eval	(*(struct(*(*(struct`)),long,long,struct(*(struct`),long,long))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(struct(*(struct(*`,*`)),long,long)))
(	O
its_rule_list_ty	struct
*	O
rules	*(struct)
,	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
{	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
result	*(*(void))
;	O
size_t	long
i	long
;	O
result	*(*(void))
=	O
XCALLOC	O
(	O
1	int
,	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
rules	*(struct)
->	O
nitems	long
;	O
i	long
++	O
)	O
{	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
rule	*(char)
=	O
rules	*(struct)
->	O
items	*(struct(*(char),*(char)))
[	O
i	long
]	O
;	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
values	*(*(char))
;	O
values	*(*(char))
=	O
rule	*(char)
->	O
methods	*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`)))))
->	O
eval	*((*(struct),*(struct(*(struct`),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)))->(*(struct(*(struct`),long,long))))
(	O
rule	*(char)
,	O
&	O
rules	*(struct)
->	O
pool	*(struct(*(struct(*(struct`),long,long)),long,long))
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
;	O
its_value_list_merge	(*(struct(*(struct(*`,*`)),long,long)),*(struct(*(struct(*`,*`)),long,long)))->(void)
(	O
result	*(*(void))
,	O
values	*(*(char))
)	O
;	O
its_value_list_destroy	(*(struct(*(struct(*`,*`)),long,long)))->(void)
(	O
values	*(*(char))
)	O
;	O
free	*((*(char))->(void))
(	O
values	*(*(char))
)	O
;	O
}	O
return	O
result	*(*(void))
;	O
}	O
static	O
bool	bool
its_rule_list_is_translatable	(*(struct(*(*(struct`)),long,long,struct(*(struct`),long,long))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),int)->(bool)
(	O
its_rule_list_ty	struct
*	O
rules	*(struct)
,	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
int	O
depth	int
)	O
{	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
values	*(*(char))
;	O
const	O
char	O
*	O
value	enum(int,int,int,int,int,int)
;	O
xmlNode	struct
*	O
n	long
;	O
if	O
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
!=	O
XML_ELEMENT_NODE	int
&&	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
!=	O
XML_ATTRIBUTE_NODE	int
)	O
return	O
false	int
;	O
values	*(*(char))
=	O
its_rule_list_eval	(*(struct(*(*(struct`)),long,long,struct(*(struct`),long,long))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(struct(*(struct(*`,*`)),long,long)))
(	O
rules	*(struct)
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
;	O
value	enum(int,int,int,int,int,int)
=	O
its_value_list_get_value	(*(struct(*(struct(*`,*`)),long,long)),*(char))->(*(char))
(	O
values	*(*(char))
,	O
"translate"	*(char)
)	O
;	O
if	O
(	O
!	O
(	O
value	enum(int,int,int,int,int,int)
&&	O
strcmp	(*(char),*(char))->(int)
(	O
value	enum(int,int,int,int,int,int)
,	O
"yes"	*(char)
)	O
==	O
0	int
)	O
)	O
{	O
its_value_list_destroy	(*(struct(*(struct(*`,*`)),long,long)))->(void)
(	O
values	*(*(char))
)	O
;	O
free	*((*(char))->(void))
(	O
values	*(*(char))
)	O
;	O
return	O
false	int
;	O
}	O
if	O
(	O
depth	int
>	O
0	int
)	O
{	O
value	enum(int,int,int,int,int,int)
=	O
its_value_list_get_value	(*(struct(*(struct(*`,*`)),long,long)),*(char))->(*(char))
(	O
values	*(*(char))
,	O
"withinText"	*(char)
)	O
;	O
if	O
(	O
!	O
(	O
value	enum(int,int,int,int,int,int)
&&	O
strcmp	(*(char),*(char))->(int)
(	O
value	enum(int,int,int,int,int,int)
,	O
"yes"	*(char)
)	O
==	O
0	int
)	O
)	O
{	O
its_value_list_destroy	(*(struct(*(struct(*`,*`)),long,long)))->(void)
(	O
values	*(*(char))
)	O
;	O
free	*((*(char))->(void))
(	O
values	*(*(char))
)	O
;	O
return	O
false	int
;	O
}	O
}	O
its_value_list_destroy	(*(struct(*(struct(*`,*`)),long,long)))->(void)
(	O
values	*(*(char))
)	O
;	O
free	*((*(char))->(void))
(	O
values	*(*(char))
)	O
;	O
for	O
(	O
n	long
=	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
children	*(struct)
;	O
n	long
;	O
n	long
=	O
n	long
->	O
next	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
)	O
{	O
switch	O
(	O
n	long
->	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
{	O
case	O
XML_ELEMENT_NODE	int
:	O
if	O
(	O
!	O
its_rule_list_is_translatable	(*(struct(*(*(struct`)),long,long,struct(*(struct`),long,long))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),int)->(bool)
(	O
rules	*(struct)
,	O
n	long
,	O
depth	int
+	O
1	int
)	O
)	O
return	O
false	int
;	O
break	O
;	O
case	O
XML_TEXT_NODE	int
:	O
case	O
XML_CDATA_SECTION_NODE	int
:	O
case	O
XML_ENTITY_REF_NODE	int
:	O
case	O
XML_COMMENT_NODE	int
:	O
break	O
;	O
default	O
:	O
return	O
false	int
;	O
}	O
}	O
return	O
true	int
;	O
}	O
static	O
void	O
its_rule_list_extract_nodes	(*(struct(*(*(struct`)),long,long,struct(*(struct`),long,long))),*(struct(*(*(struct`)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(void)
(	O
its_rule_list_ty	struct
*	O
rules	*(struct)
,	O
struct	O
its_node_list_ty	struct(*(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short))),long,long)
*	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
,	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
{	O
if	O
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
==	O
XML_ELEMENT_NODE	int
)	O
{	O
xmlNode	struct
*	O
n	long
;	O
if	O
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
properties	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int),*(void)))
)	O
{	O
xmlAttr	struct
*	O
attr	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct),*(struct),*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int),*(void)))
=	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
properties	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int),*(void)))
;	O
for	O
(	O
;	O
attr	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct),*(struct),*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int),*(void)))
;	O
attr	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct),*(struct),*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int),*(void)))
=	O
attr	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct),*(struct),*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
next	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
)	O
{	O
xmlNode	struct
*	O
n	long
=	O
(	O
xmlNode	struct
*	O
)	O
attr	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct),*(struct),*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int),*(void)))
;	O
if	O
(	O
its_rule_list_is_translatable	(*(struct(*(*(struct`)),long,long,struct(*(struct`),long,long))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),int)->(bool)
(	O
rules	*(struct)
,	O
n	long
,	O
0	int
)	O
)	O
its_node_list_append	(*(struct(*(*(struct`)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(void)
(	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
,	O
n	long
)	O
;	O
}	O
}	O
if	O
(	O
its_rule_list_is_translatable	(*(struct(*(*(struct`)),long,long,struct(*(struct`),long,long))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),int)->(bool)
(	O
rules	*(struct)
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
0	int
)	O
)	O
its_node_list_append	(*(struct(*(*(struct`)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(void)
(	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
;	O
else	O
{	O
for	O
(	O
n	long
=	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
children	*(struct)
;	O
n	long
;	O
n	long
=	O
n	long
->	O
next	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
)	O
its_rule_list_extract_nodes	(*(struct(*(*(struct`)),long,long,struct(*(struct`),long,long))),*(struct(*(*(struct`)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(void)
(	O
rules	*(struct)
,	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
,	O
n	long
)	O
;	O
}	O
}	O
}	O
static	O
char	O
*	O
_its_get_content	(*(struct(*(*(struct`)),long,long,struct(*(struct`),long,long))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),enum(int,int,int,int),bool)->(*(char))
(	O
struct	O
its_rule_list_ty	struct
*	O
rules	*(struct)
,	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
const	O
char	O
*	O
pointer	*(char)
,	O
enum	O
its_whitespace_type_ty	enum(int,int,int,int)
whitespace	enum(int,int,int,int)
,	O
bool	bool
no_escape	bool
)	O
{	O
xmlXPathContext	struct
*	O
context	*(struct)
;	O
xmlXPathObject	struct
*	O
object	*(struct(enum(int,int,int,int,int,int,int,int,int,int),*(struct(int,int,*(*`))),int,double,*(char),*(void),int,*(void),int))
;	O
size_t	long
i	long
;	O
char	O
*	O
result	*(*(void))
=	O
NULL	O
;	O
context	*(struct)
=	O
xmlXPathNewContext	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),int,int,*(struct),int,int,*(struct(*`,*`)),int,int,*(struct),int,int,*(struct(*`,*`)),*(*(struct`)),int,*(void),int,int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct),*((*`,*`,*`)->(*`)),*(void),*(void),*(char),*(char),*((*`,*`,*`)->(*`)),*(void),*(*(struct`)),int,*(void),*((*`,*`)->(void)),struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct),int,*(void),long,long,int,int,int)))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
doc	*(struct)
)	O
;	O
if	O
(	O
!	O
context	*(struct)
)	O
{	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"cannot create XPath context"	*(char)
)	O
)	O
;	O
return	O
NULL	O
;	O
}	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
rules	*(struct)
->	O
nitems	long
;	O
i	long
++	O
)	O
{	O
struct	O
its_rule_ty	struct(*(struct(long,*((*(struct`),*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`),*(struct`))->(*(struct`))))),*(char),struct(*(struct(*(char),*(char))),long,long),*(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int))))))
*	O
rule	*(char)
=	O
rules	*(struct)
->	O
items	*(struct(*(char),*(char)))
[	O
i	long
]	O
;	O
if	O
(	O
rule	*(char)
->	O
namespaces	*(*(char))
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
rule	*(char)
->	O
namespaces	*(*(char))
[	O
i	long
]	O
!=	O
NULL	O
;	O
i	long
++	O
)	O
{	O
xmlNs	struct
*	O
ns	*(struct(*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct)))
=	O
rule	*(char)
->	O
namespaces	*(*(char))
[	O
i	long
]	O
;	O
xmlXPathRegisterNs	(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),int,int,*(struct),int,int,*(struct(*`,*`)),int,int,*(struct),int,int,*(struct(*`,*`)),*(*(struct`)),int,*(void),int,int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct),*((*`,*`,*`)->(*`)),*(void),*(void),*(char),*(char),*((*`,*`,*`)->(*`)),*(void),*(*(struct`)),int,*(void),*((*`,*`)->(void)),struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct),int,*(void),long,long,int,int,int)),*(char),*(char))->(int)
(	O
context	*(struct)
,	O
ns	*(struct(*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct)))
->	O
prefix	*(char)
,	O
ns	*(struct(*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct)))
->	O
href	*(char)
)	O
;	O
}	O
}	O
}	O
xmlXPathSetContextNode	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),int,int,*(struct),int,int,*(struct(*`,*`)),int,int,*(struct),int,int,*(struct(*`,*`)),*(*(struct`)),int,*(void),int,int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct),*((*`,*`,*`)->(*`)),*(void),*(void),*(char),*(char),*((*`,*`,*`)->(*`)),*(void),*(*(struct`)),int,*(void),*((*`,*`)->(void)),struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct),int,*(void),long,long,int,int,int)))->(int)
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
context	*(struct)
)	O
;	O
object	*(struct(enum(int,int,int,int,int,int,int,int,int,int),*(struct(int,int,*(*`))),int,double,*(char),*(void),int,*(void),int))
=	O
xmlXPathEvalExpression	(*(char),*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),int,int,*(struct),int,int,*(struct(*`,*`)),int,int,*(struct),int,int,*(struct(*`,*`)),*(*(struct`)),int,*(void),int,int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct),*((*`,*`,*`)->(*`)),*(void),*(void),*(char),*(char),*((*`,*`,*`)->(*`)),*(void),*(*(struct`)),int,*(void),*((*`,*`)->(void)),struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct),int,*(void),long,long,int,int,int)))->(*(struct(enum(int,int,int,int,int,int,int,int,int,int),*(struct(int,int,*`)),int,double,*(char),*(void),int,*(void),int)))
(	O
BAD_CAST	O
pointer	*(char)
,	O
context	*(struct)
)	O
;	O
if	O
(	O
!	O
object	*(struct(enum(int,int,int,int,int,int,int,int,int,int),*(struct(int,int,*(*`))),int,double,*(char),*(void),int,*(void),int))
)	O
{	O
xmlXPathFreeContext	(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),int,int,*(struct),int,int,*(struct(*`,*`)),int,int,*(struct),int,int,*(struct(*`,*`)),*(*(struct`)),int,*(void),int,int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct),*((*`,*`,*`)->(*`)),*(void),*(void),*(char),*(char),*((*`,*`,*`)->(*`)),*(void),*(*(struct`)),int,*(void),*((*`,*`)->(void)),struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct),int,*(void),long,long,int,int,int)))->(void)
(	O
context	*(struct)
)	O
;	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"cannot evaluate XPath location path: %s"	*(char)
)	O
,	O
pointer	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
switch	O
(	O
object	*(struct(enum(int,int,int,int,int,int,int,int,int,int),*(struct(int,int,*(*`))),int,double,*(char),*(void),int,*(void),int))
->	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
{	O
case	O
XPATH_NODESET	int
:	O
{	O
xmlNodeSet	struct
*	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
=	O
object	*(struct(enum(int,int,int,int,int,int,int,int,int,int),*(struct(int,int,*(*`))),int,double,*(char),*(void),int,*(void),int))
->	O
nodesetval	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
;	O
string_list_ty	struct
sl	struct(*(*(char)),long,long)
;	O
size_t	long
i	long
;	O
string_list_init	(*(struct(*(*(char)),long,long)))->(void)
(	O
&	O
sl	struct(*(*(char)),long,long)
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
->	O
nodeNr	int
;	O
i	long
++	O
)	O
{	O
char	O
*	O
content	*(char)
=	O
_its_collect_text_content	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),enum(int,int,int,int),bool)->(*(char))
(	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
->	O
nodeTab	*(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))
[	O
i	long
]	O
,	O
whitespace	enum(int,int,int,int)
,	O
no_escape	bool
)	O
;	O
string_list_append	(*(struct(*(*(char)),long,long)),*(char))->(void)
(	O
&	O
sl	struct(*(*(char)),long,long)
,	O
content	*(char)
)	O
;	O
free	*((*(char))->(void))
(	O
content	*(char)
)	O
;	O
}	O
result	*(*(void))
=	O
string_list_concat	(*(struct(*(*(char)),long,long)))->(*(char))
(	O
&	O
sl	struct(*(*(char)),long,long)
)	O
;	O
string_list_destroy	(*(struct(*(*(char)),long,long)))->(void)
(	O
&	O
sl	struct(*(*(char)),long,long)
)	O
;	O
}	O
break	O
;	O
case	O
XPATH_STRING	int
:	O
result	*(*(void))
=	O
xstrdup	(*(char))->(*(char))
(	O
(	O
const	O
char	O
*	O
)	O
object	*(struct(enum(int,int,int,int,int,int,int,int,int,int),*(struct(int,int,*(*`))),int,double,*(char),*(void),int,*(void),int))
->	O
stringval	*(char)
)	O
;	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
xmlXPathFreeObject	(*(struct(enum(int,int,int,int,int,int,int,int,int,int),*(struct(int,int,*`)),int,double,*(char),*(void),int,*(void),int)))->(void)
(	O
object	*(struct(enum(int,int,int,int,int,int,int,int,int,int),*(struct(int,int,*(*`))),int,double,*(char),*(void),int,*(void),int))
)	O
;	O
xmlXPathFreeContext	(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),int,int,*(struct),int,int,*(struct(*`,*`)),int,int,*(struct),int,int,*(struct(*`,*`)),*(*(struct`)),int,*(void),int,int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct),*((*`,*`,*`)->(*`)),*(void),*(void),*(char),*(char),*((*`,*`,*`)->(*`)),*(void),*(*(struct`)),int,*(void),*((*`,*`)->(void)),struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct),int,*(void),long,long,int,int,int)))->(void)
(	O
context	*(struct)
)	O
;	O
return	O
result	*(*(void))
;	O
}	O
static	O
void	O
_its_comment_append	(*(struct(*(*(char)),long,long)),*(char))->(void)
(	O
string_list_ty	struct
*	O
comments	*(struct(*(*(char)),long,long))
,	O
const	O
char	O
*	O
data	*(void)
)	O
{	O
char	O
*	O
copy	*(char)
=	O
xstrdup	(*(char))->(*(char))
(	O
data	*(void)
)	O
;	O
char	O
*	O
p	*(void)
;	O
char	O
*	O
q	*(char)
;	O
for	O
(	O
p	*(void)
=	O
copy	*(char)
;	O
(	O
q	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
p	*(void)
,	O
'\n'	O
)	O
)	O
!=	O
NULL	O
;	O
p	*(void)
=	O
q	*(char)
+	O
1	int
)	O
{	O
while	O
(	O
p	*(void)
[	O
0	int
]	O
==	O
' '	O
||	O
p	*(void)
[	O
0	int
]	O
==	O
'\t'	O
)	O
p	*(void)
++	O
;	O
while	O
(	O
q	*(char)
>	O
p	*(void)
&&	O
(	O
q	*(char)
[	O
-	O
1	int
]	O
==	O
' '	O
||	O
q	*(char)
[	O
-	O
1	int
]	O
==	O
'\t'	O
)	O
)	O
q	*(char)
--	O
;	O
*	O
q	*(char)
=	O
'\0'	O
;	O
string_list_append	(*(struct(*(*(char)),long,long)),*(char))->(void)
(	O
comments	*(struct(*(*(char)),long,long))
,	O
p	*(void)
)	O
;	O
}	O
q	*(char)
=	O
p	*(void)
+	O
strlen	(*(char))->(long)
(	O
p	*(void)
)	O
;	O
while	O
(	O
p	*(void)
[	O
0	int
]	O
==	O
' '	O
||	O
p	*(void)
[	O
0	int
]	O
==	O
'\t'	O
)	O
p	*(void)
++	O
;	O
while	O
(	O
q	*(char)
>	O
p	*(void)
&&	O
(	O
q	*(char)
[	O
-	O
1	int
]	O
==	O
' '	O
||	O
q	*(char)
[	O
-	O
1	int
]	O
==	O
'\t'	O
)	O
)	O
q	*(char)
--	O
;	O
*	O
q	*(char)
=	O
'\0'	O
;	O
string_list_append	(*(struct(*(*(char)),long,long)),*(char))->(void)
(	O
comments	*(struct(*(*(char)),long,long))
,	O
p	*(void)
)	O
;	O
free	*((*(char))->(void))
(	O
copy	*(char)
)	O
;	O
}	O
static	O
void	O
its_rule_list_extract_text	(*(struct(*(*(struct`)),long,long,struct(*(struct`),long,long))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))),*(struct(*(*(struct`)),long,long,bool,struct(long,long,*(struct`),*(struct`),struct(long,*`,*`,*`,*`,union`,long,union`,union`,*`,int,int,int)))),*((*(struct(*`,long,long,bool,struct`)),*(char),*(char),*(struct(*`,long)),*(char),*(char),enum(int,int,int,int))->(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`)))))->(void)
(	O
its_rule_list_ty	struct
*	O
rules	*(struct)
,	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
const	O
char	O
*	O
logical_filename	*(char)
,	O
flag_context_list_table_ty	struct(long,long,*(struct),*(struct),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),long,union(*((long)->(*`)),*((*`,long)->(*`))),union(*((*`)->(void)),*((*`,*`)->(void))),*(void),int,int,int))
*	O
flag_table	*(struct(long,long,*(struct),*(struct),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),long,union(*((long)->(*`)),*((*`,long)->(*`))),union(*((*`)->(void)),*((*`,*`)->(void))),*(void),int,int,int)))
,	O
message_list_ty	struct
*	O
mlp	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
,	O
its_extract_callback_ty	*((*(struct(*(*`),long,long,bool,struct(long,long,*`,*`,struct`))),*(char),*(char),*(struct(*(char),long)),*(char),*(char),enum(int,int,int,int))->(*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`)))))
callback	*((*(struct(*(*`),long,long,bool,struct(long,long,*`,*`,struct`))),*(char),*(char),*(struct(*(char),long)),*(char),*(char),enum(int,int,int,int))->(*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`)))))
)	O
{	O
if	O
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
==	O
XML_ELEMENT_NODE	int
||	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
==	O
XML_ATTRIBUTE_NODE	int
)	O
{	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
values	*(*(char))
;	O
const	O
char	O
*	O
value	enum(int,int,int,int,int,int)
;	O
char	O
*	O
msgid	*(char)
=	O
NULL	O
,	O
*	O
msgctxt	*(char)
=	O
NULL	O
,	O
*	O
comment	*(struct(*(*(char)),long,long))
=	O
NULL	O
;	O
enum	O
its_whitespace_type_ty	enum(int,int,int,int)
whitespace	enum(int,int,int,int)
;	O
bool	bool
no_escape	bool
;	O
values	*(*(char))
=	O
its_rule_list_eval	(*(struct(*(*(struct`)),long,long,struct(*(struct`),long,long))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(struct(*(struct(*`,*`)),long,long)))
(	O
rules	*(struct)
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
;	O
value	enum(int,int,int,int,int,int)
=	O
its_value_list_get_value	(*(struct(*(struct(*`,*`)),long,long)),*(char))->(*(char))
(	O
values	*(*(char))
,	O
"locNote"	*(char)
)	O
;	O
if	O
(	O
value	enum(int,int,int,int,int,int)
)	O
comment	*(struct(*(*(char)),long,long))
=	O
xstrdup	(*(char))->(*(char))
(	O
value	enum(int,int,int,int,int,int)
)	O
;	O
else	O
{	O
value	enum(int,int,int,int,int,int)
=	O
its_value_list_get_value	(*(struct(*(struct(*`,*`)),long,long)),*(char))->(*(char))
(	O
values	*(*(char))
,	O
"escape"	*(char)
)	O
;	O
no_escape	bool
=	O
value	enum(int,int,int,int,int,int)
!=	O
NULL	O
&&	O
strcmp	(*(char),*(char))->(int)
(	O
value	enum(int,int,int,int,int,int)
,	O
"no"	*(char)
)	O
==	O
0	int
;	O
value	enum(int,int,int,int,int,int)
=	O
its_value_list_get_value	(*(struct(*(struct(*`,*`)),long,long)),*(char))->(*(char))
(	O
values	*(*(char))
,	O
"locNotePointer"	*(char)
)	O
;	O
if	O
(	O
value	enum(int,int,int,int,int,int)
)	O
comment	*(struct(*(*(char)),long,long))
=	O
_its_get_content	(*(struct(*(*(struct`)),long,long,struct(*(struct`),long,long))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),enum(int,int,int,int),bool)->(*(char))
(	O
rules	*(struct)
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
value	enum(int,int,int,int,int,int)
,	O
ITS_WHITESPACE_TRIM	int
,	O
no_escape	bool
)	O
;	O
}	O
if	O
(	O
comment	*(struct(*(*(char)),long,long))
!=	O
NULL	O
&&	O
*	O
comment	*(struct(*(*(char)),long,long))
!=	O
'\0'	O
)	O
{	O
string_list_ty	struct
comments	*(struct(*(*(char)),long,long))
;	O
char	O
*	O
tmp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
;	O
string_list_init	(*(struct(*(*(char)),long,long)))->(void)
(	O
&	O
comments	*(struct(*(*(char)),long,long))
)	O
;	O
_its_comment_append	(*(struct(*(*(char)),long,long)),*(char))->(void)
(	O
&	O
comments	*(struct(*(*(char)),long,long))
,	O
comment	*(struct(*(*(char)),long,long))
)	O
;	O
tmp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
=	O
string_list_join	(*(struct(*(*(char)),long,long)),*(char),char,bool)->(*(char))
(	O
&	O
comments	*(struct(*(*(char)),long,long))
,	O
"\n"	*(char)
,	O
'\0'	O
,	O
false	int
)	O
;	O
free	*((*(char))->(void))
(	O
comment	*(struct(*(*(char)),long,long))
)	O
;	O
comment	*(struct(*(*(char)),long,long))
=	O
tmp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
;	O
}	O
else	O
{	O
xmlNode	struct
*	O
sibling	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
;	O
string_list_ty	struct
comments	*(struct(*(*(char)),long,long))
;	O
string_list_init	(*(struct(*(*(char)),long,long)))->(void)
(	O
&	O
comments	*(struct(*(*(char)),long,long))
)	O
;	O
for	O
(	O
sibling	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
=	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
prev	*(struct(*(char),*(struct(*(char),*(struct`),array(char))),array(char)))
;	O
sibling	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
;	O
sibling	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
=	O
sibling	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
prev	*(struct(*(char),*(struct(*(char),*(struct`),array(char))),array(char)))
)	O
if	O
(	O
sibling	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
!=	O
XML_COMMENT_NODE	int
||	O
sibling	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
prev	*(struct(*(char),*(struct(*(char),*(struct`),array(char))),array(char)))
==	O
NULL	O
)	O
break	O
;	O
if	O
(	O
sibling	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
{	O
if	O
(	O
sibling	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
!=	O
XML_COMMENT_NODE	int
)	O
sibling	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
=	O
sibling	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
next	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
;	O
for	O
(	O
;	O
sibling	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
&&	O
sibling	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
==	O
XML_COMMENT_NODE	int
;	O
sibling	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
=	O
sibling	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
next	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
)	O
{	O
xmlChar	char
*	O
content	*(char)
=	O
xmlNodeGetContent	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(char))
(	O
sibling	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
;	O
_its_comment_append	(*(struct(*(*(char)),long,long)),*(char))->(void)
(	O
&	O
comments	*(struct(*(*(char)),long,long))
,	O
(	O
const	O
char	O
*	O
)	O
content	*(char)
)	O
;	O
xmlFree	*((*(void))->(void))
(	O
content	*(char)
)	O
;	O
}	O
free	*((*(char))->(void))
(	O
comment	*(struct(*(*(char)),long,long))
)	O
;	O
comment	*(struct(*(*(char)),long,long))
=	O
string_list_join	(*(struct(*(*(char)),long,long)),*(char),char,bool)->(*(char))
(	O
&	O
comments	*(struct(*(*(char)),long,long))
,	O
"\n"	*(char)
,	O
'\0'	O
,	O
false	int
)	O
;	O
string_list_destroy	(*(struct(*(*(char)),long,long)))->(void)
(	O
&	O
comments	*(struct(*(*(char)),long,long))
)	O
;	O
}	O
}	O
value	enum(int,int,int,int,int,int)
=	O
its_value_list_get_value	(*(struct(*(struct(*`,*`)),long,long)),*(char))->(*(char))
(	O
values	*(*(char))
,	O
"space"	*(char)
)	O
;	O
if	O
(	O
value	enum(int,int,int,int,int,int)
&&	O
strcmp	(*(char),*(char))->(int)
(	O
value	enum(int,int,int,int,int,int)
,	O
"preserve"	*(char)
)	O
==	O
0	int
)	O
whitespace	enum(int,int,int,int)
=	O
ITS_WHITESPACE_PRESERVE	int
;	O
else	O
if	O
(	O
value	enum(int,int,int,int,int,int)
&&	O
strcmp	(*(char),*(char))->(int)
(	O
value	enum(int,int,int,int,int,int)
,	O
"trim"	*(char)
)	O
==	O
0	int
)	O
whitespace	enum(int,int,int,int)
=	O
ITS_WHITESPACE_TRIM	int
;	O
else	O
if	O
(	O
value	enum(int,int,int,int,int,int)
&&	O
strcmp	(*(char),*(char))->(int)
(	O
value	enum(int,int,int,int,int,int)
,	O
"paragraph"	*(char)
)	O
==	O
0	int
)	O
whitespace	enum(int,int,int,int)
=	O
ITS_WHITESPACE_NORMALIZE_PARAGRAPH	int
;	O
else	O
whitespace	enum(int,int,int,int)
=	O
ITS_WHITESPACE_NORMALIZE	int
;	O
value	enum(int,int,int,int,int,int)
=	O
its_value_list_get_value	(*(struct(*(struct(*`,*`)),long,long)),*(char))->(*(char))
(	O
values	*(*(char))
,	O
"escape"	*(char)
)	O
;	O
no_escape	bool
=	O
value	enum(int,int,int,int,int,int)
!=	O
NULL	O
&&	O
strcmp	(*(char),*(char))->(int)
(	O
value	enum(int,int,int,int,int,int)
,	O
"no"	*(char)
)	O
==	O
0	int
;	O
value	enum(int,int,int,int,int,int)
=	O
its_value_list_get_value	(*(struct(*(struct(*`,*`)),long,long)),*(char))->(*(char))
(	O
values	*(*(char))
,	O
"contextPointer"	*(char)
)	O
;	O
if	O
(	O
value	enum(int,int,int,int,int,int)
)	O
msgctxt	*(char)
=	O
_its_get_content	(*(struct(*(*(struct`)),long,long,struct(*(struct`),long,long))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),enum(int,int,int,int),bool)->(*(char))
(	O
rules	*(struct)
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
value	enum(int,int,int,int,int,int)
,	O
ITS_WHITESPACE_PRESERVE	int
,	O
no_escape	bool
)	O
;	O
value	enum(int,int,int,int,int,int)
=	O
its_value_list_get_value	(*(struct(*(struct(*`,*`)),long,long)),*(char))->(*(char))
(	O
values	*(*(char))
,	O
"textPointer"	*(char)
)	O
;	O
if	O
(	O
value	enum(int,int,int,int,int,int)
)	O
msgid	*(char)
=	O
_its_get_content	(*(struct(*(*(struct`)),long,long,struct(*(struct`),long,long))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),enum(int,int,int,int),bool)->(*(char))
(	O
rules	*(struct)
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
value	enum(int,int,int,int,int,int)
,	O
ITS_WHITESPACE_PRESERVE	int
,	O
no_escape	bool
)	O
;	O
its_value_list_destroy	(*(struct(*(struct(*`,*`)),long,long)))->(void)
(	O
values	*(*(char))
)	O
;	O
free	*((*(char))->(void))
(	O
values	*(*(char))
)	O
;	O
if	O
(	O
msgid	*(char)
==	O
NULL	O
)	O
msgid	*(char)
=	O
_its_collect_text_content	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),enum(int,int,int,int),bool)->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
whitespace	enum(int,int,int,int)
,	O
no_escape	bool
)	O
;	O
if	O
(	O
*	O
msgid	*(char)
!=	O
'\0'	O
)	O
{	O
lex_pos_ty	struct
pos	struct(*(char),long)
;	O
char	O
*	O
marker	*(char)
;	O
pos	struct(*(char),long)
.	O
file_name	*(char)
=	O
xstrdup	(*(char))->(*(char))
(	O
logical_filename	*(char)
)	O
;	O
pos	struct(*(char),long)
.	O
line_number	long
=	O
xmlGetLineNo	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(long)
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
;	O
if	O
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
==	O
XML_ELEMENT_NODE	int
)	O
{	O
assert	O
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
parent	*(struct)
)	O
;	O
marker	*(char)
=	O
xasprintf	(*(char))->(*(char))
(	O
"%s/%s"	*(char)
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
parent	*(struct)
->	O
name	*(char)
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
name	*(char)
)	O
;	O
}	O
else	O
{	O
assert	O
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
parent	*(struct)
&&	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
parent	*(struct)
->	O
parent	*(struct)
)	O
;	O
marker	*(char)
=	O
xasprintf	(*(char))->(*(char))
(	O
"%s/%s@%s"	*(char)
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
parent	*(struct)
->	O
parent	*(struct)
->	O
name	*(char)
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
parent	*(struct)
->	O
name	*(char)
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
name	*(char)
)	O
;	O
}	O
if	O
(	O
msgctxt	*(char)
!=	O
NULL	O
&&	O
*	O
msgctxt	*(char)
==	O
'\0'	O
)	O
{	O
free	*((*(char))->(void))
(	O
msgctxt	*(char)
)	O
;	O
msgctxt	*(char)
=	O
NULL	O
;	O
}	O
callback	*((*(struct(*(*`),long,long,bool,struct(long,long,*`,*`,struct`))),*(char),*(char),*(struct(*(char),long)),*(char),*(char),enum(int,int,int,int))->(*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`)))))
(	O
mlp	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
,	O
msgctxt	*(char)
,	O
msgid	*(char)
,	O
&	O
pos	struct(*(char),long)
,	O
comment	*(struct(*(*(char)),long,long))
,	O
marker	*(char)
,	O
whitespace	enum(int,int,int,int)
)	O
;	O
free	*((*(char))->(void))
(	O
marker	*(char)
)	O
;	O
}	O
free	*((*(char))->(void))
(	O
msgctxt	*(char)
)	O
;	O
free	*((*(char))->(void))
(	O
msgid	*(char)
)	O
;	O
free	*((*(char))->(void))
(	O
comment	*(struct(*(*(char)),long,long))
)	O
;	O
}	O
}	O
void	O
its_rule_list_extract	(*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),*(char),*(struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))),*(struct(*(*(struct`)),long,long,bool,*(char))),*((*(struct(*`,long,long,bool,struct`)),*(char),*(char),*(struct(*`,long)),*(char),*(char),enum(int,int,int,int))->(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`)))))->(void)
(	O
its_rule_list_ty	struct
*	O
rules	*(struct)
,	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
const	O
char	O
*	O
real_filename	*(char)
,	O
const	O
char	O
*	O
logical_filename	*(char)
,	O
flag_context_list_table_ty	struct(long,long,*(struct),*(struct),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),long,union(*((long)->(*`)),*((*`,long)->(*`))),union(*((*`)->(void)),*((*`,*`)->(void))),*(void),int,int,int))
*	O
flag_table	*(struct(long,long,*(struct),*(struct),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),long,union(*((long)->(*`)),*((*`,long)->(*`))),union(*((*`)->(void)),*((*`,*`)->(void))),*(void),int,int,int)))
,	O
msgdomain_list_ty	struct
*	O
mdlp	*(struct(*(*(struct(*`,*`))),long,long,bool,*(char)))
,	O
its_extract_callback_ty	*((*(struct(*(*`),long,long,bool,struct(long,long,*`,*`,struct`))),*(char),*(char),*(struct(*(char),long)),*(char),*(char),enum(int,int,int,int))->(*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`)))))
callback	*((*(struct(*(*`),long,long,bool,struct(long,long,*`,*`,struct`))),*(char),*(char),*(struct(*(char),long)),*(char),*(char),enum(int,int,int,int))->(*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`)))))
)	O
{	O
xmlDoc	struct
*	O
doc	*(struct)
;	O
struct	O
its_node_list_ty	struct(*(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short))),long,long)
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
;	O
size_t	long
i	long
;	O
doc	*(struct)
=	O
xmlReadFd	(int,*(char),*(char),int)->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))
(	O
fileno	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
,	O
logical_filename	*(char)
,	O
NULL	O
,	O
XML_PARSE_NONET	int
|	O
XML_PARSE_NOWARNING	int
|	O
XML_PARSE_NOBLANKS	int
|	O
XML_PARSE_NOERROR	int
)	O
;	O
if	O
(	O
doc	*(struct)
==	O
NULL	O
)	O
{	O
xmlError	struct
*	O
err	*(struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void)))
=	O
xmlGetLastError	()->(*(struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void))))
(	O
)	O
;	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"cannot read %s: %s"	*(char)
)	O
,	O
logical_filename	*(char)
,	O
err	*(struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void)))
->	O
message	*(char)
)	O
;	O
return	O
;	O
}	O
its_rule_list_apply	(*(struct(*(*(struct`)),long,long,struct(*(struct`),long,long))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(void)
(	O
rules	*(struct)
,	O
doc	*(struct)
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
,	O
0	int
,	O
sizeof	O
(	O
struct	O
its_node_list_ty	struct(*(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short))),long,long)
)	O
)	O
;	O
its_rule_list_extract_nodes	(*(struct(*(*(struct`)),long,long,struct(*(struct`),long,long))),*(struct(*(*(struct`)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(void)
(	O
rules	*(struct)
,	O
&	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
,	O
xmlDocGetRootElement	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))
(	O
doc	*(struct)
)	O
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
.	O
nitems	long
;	O
i	long
++	O
)	O
its_rule_list_extract_text	(*(struct(*(*(struct`)),long,long,struct(*(struct`),long,long))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))),*(struct(*(*(struct`)),long,long,bool,struct(long,long,*(struct`),*(struct`),struct(long,*`,*`,*`,*`,union`,long,union`,union`,*`,int,int,int)))),*((*(struct(*`,long,long,bool,struct`)),*(char),*(char),*(struct(*`,long)),*(char),*(char),enum(int,int,int,int))->(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`)))))->(void)
(	O
rules	*(struct)
,	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
.	O
items	*(struct(*(char),*(char)))
[	O
i	long
]	O
,	O
logical_filename	*(char)
,	O
flag_table	*(struct(long,long,*(struct),*(struct),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),long,union(*((long)->(*`)),*((*`,long)->(*`))),union(*((*`)->(void)),*((*`,*`)->(void))),*(void),int,int,int)))
,	O
mdlp	*(struct(*(*(struct(*`,*`))),long,long,bool,*(char)))
->	O
item	*(*(char))
[	O
0	int
]	O
->	O
messages	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
,	O
callback	*((*(struct(*(*`),long,long,bool,struct(long,long,*`,*`,struct`))),*(char),*(char),*(struct(*(char),long)),*(char),*(char),enum(int,int,int,int))->(*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`)))))
)	O
;	O
free	*((*(char))->(void))
(	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
.	O
items	*(struct(*(char),*(char)))
)	O
;	O
xmlFreeDoc	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(void)
(	O
doc	*(struct)
)	O
;	O
}	O
struct	O
its_merge_context_ty	struct
{	O
its_rule_list_ty	struct
*	O
rules	*(struct)
;	O
xmlDoc	struct
*	O
doc	*(struct)
;	O
struct	O
its_node_list_ty	struct(*(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short))),long,long)
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
;	O
}	O
;	O
static	O
void	O
its_merge_context_merge_node	(*(struct(*(struct(*`,long,long,struct`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),struct(*(*`),long,long))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(struct(*(*(struct`)),long,long,bool,struct(long,long,*(struct`),*(struct`),struct(long,*`,*`,*`,*`,union`,long,union`,union`,*`,int,int,int)))))->(void)
(	O
struct	O
its_merge_context_ty	struct
*	O
context	*(struct)
,	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
const	O
char	O
*	O
language	*(char)
,	O
message_list_ty	struct
*	O
mlp	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
)	O
{	O
if	O
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
==	O
XML_ELEMENT_NODE	int
)	O
{	O
struct	O
its_value_list_ty	struct(*(struct(*(char),*(char))),long,long)
*	O
values	*(*(char))
;	O
const	O
char	O
*	O
value	enum(int,int,int,int,int,int)
;	O
char	O
*	O
msgid	*(char)
=	O
NULL	O
,	O
*	O
msgctxt	*(char)
=	O
NULL	O
;	O
enum	O
its_whitespace_type_ty	enum(int,int,int,int)
whitespace	enum(int,int,int,int)
;	O
bool	bool
no_escape	bool
;	O
values	*(*(char))
=	O
its_rule_list_eval	(*(struct(*(*(struct`)),long,long,struct(*(struct`),long,long))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(struct(*(struct(*`,*`)),long,long)))
(	O
context	*(struct)
->	O
rules	*(struct)
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
;	O
value	enum(int,int,int,int,int,int)
=	O
its_value_list_get_value	(*(struct(*(struct(*`,*`)),long,long)),*(char))->(*(char))
(	O
values	*(*(char))
,	O
"space"	*(char)
)	O
;	O
if	O
(	O
value	enum(int,int,int,int,int,int)
&&	O
strcmp	(*(char),*(char))->(int)
(	O
value	enum(int,int,int,int,int,int)
,	O
"preserve"	*(char)
)	O
==	O
0	int
)	O
whitespace	enum(int,int,int,int)
=	O
ITS_WHITESPACE_PRESERVE	int
;	O
else	O
if	O
(	O
value	enum(int,int,int,int,int,int)
&&	O
strcmp	(*(char),*(char))->(int)
(	O
value	enum(int,int,int,int,int,int)
,	O
"trim"	*(char)
)	O
==	O
0	int
)	O
whitespace	enum(int,int,int,int)
=	O
ITS_WHITESPACE_TRIM	int
;	O
else	O
if	O
(	O
value	enum(int,int,int,int,int,int)
&&	O
strcmp	(*(char),*(char))->(int)
(	O
value	enum(int,int,int,int,int,int)
,	O
"paragraph"	*(char)
)	O
==	O
0	int
)	O
whitespace	enum(int,int,int,int)
=	O
ITS_WHITESPACE_NORMALIZE_PARAGRAPH	int
;	O
else	O
whitespace	enum(int,int,int,int)
=	O
ITS_WHITESPACE_NORMALIZE	int
;	O
value	enum(int,int,int,int,int,int)
=	O
its_value_list_get_value	(*(struct(*(struct(*`,*`)),long,long)),*(char))->(*(char))
(	O
values	*(*(char))
,	O
"escape"	*(char)
)	O
;	O
no_escape	bool
=	O
value	enum(int,int,int,int,int,int)
!=	O
NULL	O
&&	O
strcmp	(*(char),*(char))->(int)
(	O
value	enum(int,int,int,int,int,int)
,	O
"no"	*(char)
)	O
==	O
0	int
;	O
value	enum(int,int,int,int,int,int)
=	O
its_value_list_get_value	(*(struct(*(struct(*`,*`)),long,long)),*(char))->(*(char))
(	O
values	*(*(char))
,	O
"contextPointer"	*(char)
)	O
;	O
if	O
(	O
value	enum(int,int,int,int,int,int)
)	O
msgctxt	*(char)
=	O
_its_get_content	(*(struct(*(*(struct`)),long,long,struct(*(struct`),long,long))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),enum(int,int,int,int),bool)->(*(char))
(	O
context	*(struct)
->	O
rules	*(struct)
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
value	enum(int,int,int,int,int,int)
,	O
ITS_WHITESPACE_PRESERVE	int
,	O
no_escape	bool
)	O
;	O
value	enum(int,int,int,int,int,int)
=	O
its_value_list_get_value	(*(struct(*(struct(*`,*`)),long,long)),*(char))->(*(char))
(	O
values	*(*(char))
,	O
"textPointer"	*(char)
)	O
;	O
if	O
(	O
value	enum(int,int,int,int,int,int)
)	O
msgid	*(char)
=	O
_its_get_content	(*(struct(*(*(struct`)),long,long,struct(*(struct`),long,long))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),enum(int,int,int,int),bool)->(*(char))
(	O
context	*(struct)
->	O
rules	*(struct)
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
value	enum(int,int,int,int,int,int)
,	O
ITS_WHITESPACE_PRESERVE	int
,	O
no_escape	bool
)	O
;	O
its_value_list_destroy	(*(struct(*(struct(*`,*`)),long,long)))->(void)
(	O
values	*(*(char))
)	O
;	O
free	*((*(char))->(void))
(	O
values	*(*(char))
)	O
;	O
if	O
(	O
msgid	*(char)
==	O
NULL	O
)	O
msgid	*(char)
=	O
_its_collect_text_content	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),enum(int,int,int,int),bool)->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
whitespace	enum(int,int,int,int)
,	O
no_escape	bool
)	O
;	O
if	O
(	O
*	O
msgid	*(char)
!=	O
'\0'	O
)	O
{	O
message_ty	struct
*	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
;	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
=	O
message_list_search	(*(struct(*(*(struct`)),long,long,bool,struct(long,long,*(struct`),*(struct`),struct(long,*`,*`,*`,*`,union`,long,union`,union`,*`,int,int,int)))),*(char),*(char))->(*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*`,long,long)),*(struct(*`,long,long)),long,*(struct(*`,long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`)),int,*(struct(*`,long,*`,*`,*`,*`)))))
(	O
mlp	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
,	O
msgctxt	*(char)
,	O
msgid	*(char)
)	O
;	O
if	O
(	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
&&	O
*	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
msgstr	*(char)
!=	O
'\0'	O
)	O
{	O
xmlNode	struct
*	O
translated	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
;	O
translated	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
=	O
xmlNewNode	(*(struct(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)))),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
ns	*(struct(*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct)))
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
name	*(char)
)	O
;	O
xmlSetProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
translated	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"xml:lang"	*(char)
,	O
BAD_CAST	O
language	*(char)
)	O
;	O
xmlNodeAddContent	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(void)
(	O
translated	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
msgstr	*(char)
)	O
;	O
xmlAddNextSibling	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
translated	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
;	O
}	O
}	O
free	*((*(char))->(void))
(	O
msgctxt	*(char)
)	O
;	O
free	*((*(char))->(void))
(	O
msgid	*(char)
)	O
;	O
}	O
}	O
void	O
its_merge_context_merge	(*(struct),*(char),*(struct(*(*(struct`)),long,long,bool,struct(long,long,*(struct`),*(struct`),struct(long,*`,*`,*`,*`,union`,long,union`,union`,*`,int,int,int)))))->(void)
(	O
its_merge_context_ty	struct
*	O
context	*(struct)
,	O
const	O
char	O
*	O
language	*(char)
,	O
message_list_ty	struct
*	O
mlp	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
context	*(struct)
->	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
.	O
nitems	long
;	O
i	long
++	O
)	O
its_merge_context_merge_node	(*(struct(*(struct(*`,long,long,struct`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),struct(*(*`),long,long))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char),*(struct(*(*(struct`)),long,long,bool,struct(long,long,*(struct`),*(struct`),struct(long,*`,*`,*`,*`,union`,long,union`,union`,*`,int,int,int)))))->(void)
(	O
context	*(struct)
,	O
context	*(struct)
->	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
.	O
items	*(struct(*(char),*(char)))
[	O
i	long
]	O
,	O
language	*(char)
,	O
mlp	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
)	O
;	O
}	O
struct	O
its_merge_context_ty	struct
*	O
its_merge_context_alloc	(*(struct),*(char))->(*(struct))
(	O
its_rule_list_ty	struct
*	O
rules	*(struct)
,	O
const	O
char	O
*	O
filename	*(char)
)	O
{	O
xmlDoc	struct
*	O
doc	*(struct)
;	O
struct	O
its_merge_context_ty	struct
*	O
result	*(*(void))
;	O
doc	*(struct)
=	O
xmlReadFile	(*(char),*(char),int)->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))
(	O
filename	*(char)
,	O
NULL	O
,	O
XML_PARSE_NONET	int
|	O
XML_PARSE_NOWARNING	int
|	O
XML_PARSE_NOBLANKS	int
|	O
XML_PARSE_NOERROR	int
)	O
;	O
if	O
(	O
doc	*(struct)
==	O
NULL	O
)	O
{	O
xmlError	struct
*	O
err	*(struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void)))
=	O
xmlGetLastError	()->(*(struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void))))
(	O
)	O
;	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"cannot read %s: %s"	*(char)
)	O
,	O
filename	*(char)
,	O
err	*(struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void)))
->	O
message	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
its_rule_list_apply	(*(struct(*(*(struct`)),long,long,struct(*(struct`),long,long))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(void)
(	O
rules	*(struct)
,	O
doc	*(struct)
)	O
;	O
result	*(*(void))
=	O
XMALLOC	O
(	O
struct	O
its_merge_context_ty	struct
)	O
;	O
result	*(*(void))
->	O
rules	*(struct)
=	O
rules	*(struct)
;	O
result	*(*(void))
->	O
doc	*(struct)
=	O
doc	*(struct)
;	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
result	*(*(void))
->	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
,	O
0	int
,	O
sizeof	O
(	O
struct	O
its_node_list_ty	struct(*(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short))),long,long)
)	O
)	O
;	O
its_rule_list_extract_nodes	(*(struct(*(*(struct`)),long,long,struct(*(struct`),long,long))),*(struct(*(*(struct`)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(void)
(	O
result	*(*(void))
->	O
rules	*(struct)
,	O
&	O
result	*(*(void))
->	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
,	O
xmlDocGetRootElement	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))
(	O
result	*(*(void))
->	O
doc	*(struct)
)	O
)	O
;	O
return	O
result	*(*(void))
;	O
}	O
void	O
its_merge_context_write	(*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
struct	O
its_merge_context_ty	struct
*	O
context	*(struct)
,	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
xmlDocFormatDump	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)),int)->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
context	*(struct)
->	O
doc	*(struct)
,	O
1	int
)	O
;	O
}	O
void	O
its_merge_context_free	(*(struct))->(void)
(	O
struct	O
its_merge_context_ty	struct
*	O
context	*(struct)
)	O
{	O
xmlFreeDoc	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(void)
(	O
context	*(struct)
->	O
doc	*(struct)
)	O
;	O
free	*((*(char))->(void))
(	O
context	*(struct)
->	O
nodes	*(struct(int,int,*(*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)))))
.	O
items	*(struct(*(char),*(char)))
)	O
;	O
free	*((*(char))->(void))
(	O
context	*(struct)
)	O
;	O
}	O
