enum	O
{	O
EXCEPTION_NONE	int
=	O
0x00	int
,	O
EXCEPTION_TRY	int
=	O
0x45	int
,	O
EXCEPTION_THROW	int
,	O
EXCEPTION_CATCH	int
}	O
;	O
struct	O
unwind_handler	struct(*((*(void))->(void)),*(void))
{	O
gnufdisk_exception_unwind_handler	(*(void))->(void)
*	O
handler	*((*(void))->(void))
;	O
void	O
*	O
arg	*(void)
;	O
}	O
;	O
struct	O
exception	struct(*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct(*(char),*(char),int,int)),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*((*`)->(void)),*(void)))),int)
{	O
struct	O
exception	struct(*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct(*(char),*(char),int,int)),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*((*`)->(void)),*(void)))),int)
*	O
prev	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
;	O
jmp_buf	array(struct(array(long),int,struct(array(long))))
*	O
jmp	*(array(struct(array(long),int,struct(array(long)))))
;	O
gnufdisk_exception_handler	(*(void),*(struct(*(char),*(char),int,int)),*(void))->(int)
*	O
handler	*((*(void))->(void))
;	O
void	O
*	O
handler_data	*(void)
;	O
struct	O
gnufdisk_exception_info	struct(*(char),*(char),int,int)
*	O
error_data	*(struct(*(char),*(char),int,int))
;	O
int	O
state	*(int)
;	O
struct	O
unwind_handler	struct(*((*(void))->(void)),*(void))
*	O
*	O
unwind_handlers	*(*(struct(*((*`)->(void)),*(void))))
;	O
int	O
nunwind_handlers	int
;	O
}	O
;	O
struct	O
context	struct(long,*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)))
{	O
pthread_t	long
id	long
;	O
struct	O
exception	struct(*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct(*(char),*(char),int,int)),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*((*`)->(void)),*(void)))),int)
*	O
current	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
;	O
}	O
;	O
struct	O
global_data	struct(*(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int))))),int)
{	O
struct	O
context	struct(long,*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)))
*	O
*	O
threads	*(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
;	O
int	O
nthreads	int
;	O
}	O
;	O
struct	O
global_data	struct(*(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int))))),int)
gdata	struct(*(*(struct(long,*(struct`)))),int)
=	O
{	O
0	int
}	O
;	O
pthread_mutex_t	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
gmutex	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
=	O
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP	O
;	O
static	O
void	O
fatal	(*(char),int,*(char))->(void)
(	O
const	O
char	O
*	O
_file	*(char)
,	O
const	O
int	O
_line	int
,	O
const	O
char	O
*	O
_fmt	*(char)
,	O
...	O
)	O
{	O
va_list	array(struct(int,int,*(void),*(void)))
args	array(struct(int,int,*(void),*(void)))
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s:%d: "	*(char)
,	O
_file	*(char)
,	O
_line	int
)	O
;	O
va_start	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
_fmt	*(char)
)	O
;	O
vfprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),array(struct(int,int,*(void),*(void))))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_fmt	*(char)
,	O
args	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
args	array(struct(int,int,*(void),*(void)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
" abort()\n"	*(char)
)	O
;	O
pthread_kill	(long,int)->(int)
(	O
pthread_self	()->(long)
(	O
)	O
,	O
SIGABRT	int
)	O
;	O
}	O
static	O
void	O
*	O
xmalloc	(long)->(*(void))
(	O
size_t	long
_s	*(struct)
)	O
{	O
void	O
*	O
p	*(void)
;	O
if	O
(	O
(	O
p	*(void)
=	O
malloc	(long)->(*(void))
(	O
_s	*(struct)
)	O
)	O
==	O
NULL	O
)	O
FATAL	O
(	O
"dynamic memory allocation failure"	*(char)
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
p	*(void)
,	O
0	int
,	O
_s	*(struct)
)	O
;	O
return	O
p	*(void)
;	O
}	O
static	O
struct	O
exception	struct(*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct(*(char),*(char),int,int)),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*((*`)->(void)),*(void)))),int)
*	O
exception_new	(*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct(*`,*`,int,int)),*(void))->(int)),*(void))->(*(struct(*(struct(*`,*`,*`,*`,*`,int,*`,int)),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct(*`,*`,int,int)),int,*(*(struct`)),int)))
(	O
jmp_buf	array(struct(array(long),int,struct(array(long))))
*	O
_jmp	*(array(struct(array(long),int,struct(array(long)))))
,	O
gnufdisk_exception_handler	(*(void),*(struct(*(char),*(char),int,int)),*(void))->(int)
*	O
_h	*((*(void))->(void))
,	O
void	O
*	O
_data	*(void)
)	O
{	O
struct	O
exception	struct(*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct(*(char),*(char),int,int)),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*((*`)->(void)),*(void)))),int)
*	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
;	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
=	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
exception	struct(*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct(*(char),*(char),int,int)),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*((*`)->(void)),*(void)))),int)
)	O
)	O
;	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
jmp	*(array(struct(array(long),int,struct(array(long)))))
=	O
_jmp	*(array(struct(array(long),int,struct(array(long)))))
;	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
handler	*((*(void))->(void))
=	O
_h	*((*(void))->(void))
;	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
handler_data	*(void)
=	O
_data	*(void)
;	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
state	*(int)
=	O
EXCEPTION_NONE	int
;	O
return	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
;	O
}	O
static	O
void	O
exception_delete	(*(struct(*(struct(*`,*`,*`,*`,*`,int,*`,int)),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct(*`,*`,int,int)),int,*(*(struct`)),int)))->(void)
(	O
struct	O
exception	struct(*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct(*(char),*(char),int,int)),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*((*`)->(void)),*(void)))),int)
*	O
_e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
)	O
{	O
if	O
(	O
_e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
unwind_handlers	*(*(struct(*((*`)->(void)),*(void))))
)	O
{	O
int	O
iter	int
;	O
for	O
(	O
iter	int
=	O
0	int
;	O
iter	int
<	O
_e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
nunwind_handlers	int
;	O
iter	int
++	O
)	O
{	O
if	O
(	O
_e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
unwind_handlers	*(*(struct(*((*`)->(void)),*(void))))
[	O
iter	int
]	O
!=	O
NULL	O
)	O
free	(*(void))->(void)
(	O
_e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
unwind_handlers	*(*(struct(*((*`)->(void)),*(void))))
[	O
iter	int
]	O
)	O
;	O
}	O
free	(*(void))->(void)
(	O
_e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
unwind_handlers	*(*(struct(*((*`)->(void)),*(void))))
)	O
;	O
}	O
free	(*(void))->(void)
(	O
_e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
)	O
;	O
}	O
static	O
struct	O
context	struct(long,*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)))
*	O
find_context	()->(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
(	O
void	O
)	O
{	O
struct	O
context	struct(long,*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)))
*	O
ret	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
;	O
pthread_t	long
id	long
;	O
int	O
iter	int
;	O
ret	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
=	O
NULL	O
;	O
id	long
=	O
pthread_self	()->(long)
(	O
)	O
;	O
pthread_mutex_lock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
gmutex	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
for	O
(	O
iter	int
=	O
0	int
;	O
iter	int
<	O
gdata	struct(*(*(struct(long,*(struct`)))),int)
.	O
nthreads	int
;	O
iter	int
++	O
)	O
if	O
(	O
gdata	struct(*(*(struct(long,*(struct`)))),int)
.	O
threads	*(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
[	O
iter	int
]	O
!=	O
NULL	O
&&	O
pthread_equal	(long,long)->(int)
(	O
gdata	struct(*(*(struct(long,*(struct`)))),int)
.	O
threads	*(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
[	O
iter	int
]	O
->	O
id	long
,	O
id	long
)	O
)	O
{	O
ret	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
=	O
gdata	struct(*(*(struct(long,*(struct`)))),int)
.	O
threads	*(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
[	O
iter	int
]	O
;	O
break	O
;	O
}	O
pthread_mutex_unlock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
gmutex	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
return	O
ret	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
;	O
}	O
static	O
struct	O
context	struct(long,*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)))
*	O
get_context	()->(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
(	O
void	O
)	O
{	O
struct	O
context	struct(long,*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)))
*	O
ret	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
;	O
pthread_t	long
id	long
;	O
int	O
iter	int
;	O
id	long
=	O
pthread_self	()->(long)
(	O
)	O
;	O
ret	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
=	O
NULL	O
;	O
pthread_mutex_lock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
gmutex	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
ret	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
=	O
find_context	()->(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
(	O
)	O
;	O
if	O
(	O
ret	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
==	O
NULL	O
)	O
{	O
ret	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
=	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
context	struct(long,*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)))
)	O
)	O
;	O
ret	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
->	O
id	long
=	O
id	long
;	O
for	O
(	O
iter	int
=	O
0	int
;	O
iter	int
<	O
gdata	struct(*(*(struct(long,*(struct`)))),int)
.	O
nthreads	int
;	O
iter	int
++	O
)	O
if	O
(	O
gdata	struct(*(*(struct(long,*(struct`)))),int)
.	O
threads	*(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
[	O
iter	int
]	O
==	O
NULL	O
)	O
break	O
;	O
if	O
(	O
iter	int
==	O
gdata	struct(*(*(struct(long,*(struct`)))),int)
.	O
nthreads	int
)	O
{	O
struct	O
context	struct(long,*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)))
*	O
*	O
threads	*(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
;	O
int	O
nthreads	int
;	O
nthreads	int
=	O
gdata	struct(*(*(struct(long,*(struct`)))),int)
.	O
nthreads	int
+	O
4	int
;	O
threads	*(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
=	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
context	struct(long,*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)))
*	O
)	O
*	O
nthreads	int
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
threads	*(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
,	O
0	int
,	O
sizeof	O
(	O
struct	O
context	struct(long,*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)))
*	O
)	O
*	O
nthreads	int
)	O
;	O
if	O
(	O
gdata	struct(*(*(struct(long,*(struct`)))),int)
.	O
threads	*(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
)	O
{	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
threads	*(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
,	O
gdata	struct(*(*(struct(long,*(struct`)))),int)
.	O
threads	*(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
,	O
sizeof	O
(	O
struct	O
context	struct(long,*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)))
)	O
*	O
gdata	struct(*(*(struct(long,*(struct`)))),int)
.	O
nthreads	int
)	O
;	O
free	(*(void))->(void)
(	O
gdata	struct(*(*(struct(long,*(struct`)))),int)
.	O
threads	*(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
)	O
;	O
}	O
gdata	struct(*(*(struct(long,*(struct`)))),int)
.	O
threads	*(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
=	O
threads	*(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
;	O
gdata	struct(*(*(struct(long,*(struct`)))),int)
.	O
nthreads	int
=	O
nthreads	int
;	O
}	O
gdata	struct(*(*(struct(long,*(struct`)))),int)
.	O
threads	*(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
[	O
iter	int
]	O
=	O
ret	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
;	O
}	O
pthread_mutex_unlock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
gmutex	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
return	O
ret	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
;	O
}	O
static	O
void	O
context_delete	()->(void)
(	O
void	O
)	O
{	O
pthread_t	long
id	long
;	O
int	O
iter	int
;	O
id	long
=	O
pthread_self	()->(long)
(	O
)	O
;	O
pthread_mutex_lock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
gmutex	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
for	O
(	O
iter	int
=	O
0	int
;	O
iter	int
<	O
gdata	struct(*(*(struct(long,*(struct`)))),int)
.	O
nthreads	int
;	O
iter	int
++	O
)	O
if	O
(	O
gdata	struct(*(*(struct(long,*(struct`)))),int)
.	O
threads	*(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
[	O
iter	int
]	O
!=	O
NULL	O
&&	O
pthread_equal	(long,long)->(int)
(	O
gdata	struct(*(*(struct(long,*(struct`)))),int)
.	O
threads	*(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
[	O
iter	int
]	O
->	O
id	long
,	O
id	long
)	O
)	O
{	O
free	(*(void))->(void)
(	O
gdata	struct(*(*(struct(long,*(struct`)))),int)
.	O
threads	*(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
[	O
iter	int
]	O
)	O
;	O
gdata	struct(*(*(struct(long,*(struct`)))),int)
.	O
threads	*(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
[	O
iter	int
]	O
=	O
NULL	O
;	O
break	O
;	O
}	O
pthread_mutex_unlock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
gmutex	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
}	O
static	O
void	O
call_unwind_handlers	(*(struct(*(struct(*`,*`,*`,*`,*`,int,*`,int)),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct(*`,*`,int,int)),int,*(*(struct`)),int)))->(void)
(	O
struct	O
exception	struct(*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct(*(char),*(char),int,int)),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*((*`)->(void)),*(void)))),int)
*	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
)	O
{	O
int	O
iter	int
;	O
for	O
(	O
iter	int
=	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
nunwind_handlers	int
-	O
1	int
;	O
iter	int
>=	O
0	int
;	O
iter	int
--	O
)	O
if	O
(	O
gnufdisk_check_memory	(*(void),long,int)->(int)
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
unwind_handlers	*(*(struct(*((*`)->(void)),*(void))))
[	O
iter	int
]	O
,	O
sizeof	O
(	O
struct	O
unwind_handler	struct(*((*(void))->(void)),*(void))
)	O
,	O
0	int
)	O
==	O
0	int
&&	O
gnufdisk_check_memory	(*(void),long,int)->(int)
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
unwind_handlers	*(*(struct(*((*`)->(void)),*(void))))
[	O
iter	int
]	O
->	O
handler	*((*(void))->(void))
,	O
1	int
,	O
1	int
)	O
==	O
0	int
)	O
{	O
(	O
*	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
unwind_handlers	*(*(struct(*((*`)->(void)),*(void))))
[	O
iter	int
]	O
->	O
handler	*((*(void))->(void))
)	O
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
unwind_handlers	*(*(struct(*((*`)->(void)),*(void))))
[	O
iter	int
]	O
->	O
arg	*(void)
)	O
;	O
free	(*(void))->(void)
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
unwind_handlers	*(*(struct(*((*`)->(void)),*(void))))
[	O
iter	int
]	O
)	O
;	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
unwind_handlers	*(*(struct(*((*`)->(void)),*(void))))
[	O
iter	int
]	O
=	O
NULL	O
;	O
}	O
}	O
void	O
gnufdisk_exception_try	(*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct(*`,*`,int,int)),*(void))->(int)),*(void))->(void)
(	O
jmp_buf	array(struct(array(long),int,struct(array(long))))
*	O
_jmp	*(array(struct(array(long),int,struct(array(long)))))
,	O
gnufdisk_exception_handler	(*(void),*(struct(*(char),*(char),int,int)),*(void))->(int)
*	O
_handler	*((*(void),*(struct(*(char),*(char),int,int)),*(void))->(int))
,	O
void	O
*	O
_arg	*(void)
)	O
{	O
struct	O
exception	struct(*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct(*(char),*(char),int,int)),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*((*`)->(void)),*(void)))),int)
*	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
;	O
struct	O
context	struct(long,*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)))
*	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
;	O
if	O
(	O
_handler	*((*(void),*(struct(*(char),*(char),int,int)),*(void))->(int))
&&	O
gnufdisk_check_memory	(*(void),long,int)->(int)
(	O
_handler	*((*(void),*(struct(*(char),*(char),int,int)),*(void))->(int))
,	O
1	int
,	O
1	int
)	O
!=	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s:%d warning: invalid gnufdisk_exception_handler* %p\n"	*(char)
,	O
__FILE__	O
,	O
__LINE__	O
,	O
_handler	*((*(void),*(struct(*(char),*(char),int,int)),*(void))->(int))
)	O
;	O
_handler	*((*(void),*(struct(*(char),*(char),int,int)),*(void))->(int))
=	O
NULL	O
;	O
_arg	*(void)
=	O
NULL	O
;	O
}	O
else	O
if	O
(	O
_arg	*(void)
&&	O
gnufdisk_check_memory	(*(void),long,int)->(int)
(	O
_arg	*(void)
,	O
1	int
,	O
1	int
)	O
!=	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s:%d warning: invalid handler agrument* %p\n"	*(char)
,	O
__FILE__	O
,	O
__LINE__	O
,	O
_arg	*(void)
)	O
;	O
_handler	*((*(void),*(struct(*(char),*(char),int,int)),*(void))->(int))
=	O
NULL	O
;	O
_arg	*(void)
=	O
NULL	O
;	O
}	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
=	O
get_context	()->(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
(	O
)	O
;	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
=	O
exception_new	(*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct(*`,*`,int,int)),*(void))->(int)),*(void))->(*(struct(*(struct(*`,*`,*`,*`,*`,int,*`,int)),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct(*`,*`,int,int)),int,*(*(struct`)),int)))
(	O
_jmp	*(array(struct(array(long),int,struct(array(long)))))
,	O
_handler	*((*(void),*(struct(*(char),*(char),int,int)),*(void))->(int))
,	O
_arg	*(void)
)	O
;	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
prev	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
=	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
->	O
current	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
;	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
state	*(int)
=	O
EXCEPTION_TRY	int
;	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
->	O
current	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
=	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
;	O
}	O
void	O
gnufdisk_exception_throw	(*(char),int,int,*(array(struct(array(long),int,struct(array(long))))),int,*(void),*(char))->(void)
(	O
const	O
char	O
*	O
_file	*(char)
,	O
const	O
int	O
_line	int
,	O
int	O
_flags	int
,	O
jmp_buf	array(struct(array(long),int,struct(array(long))))
*	O
_retry	*(array(struct(array(long),int,struct(array(long)))))
,	O
int	O
_error	int
,	O
void	O
*	O
_data	*(void)
,	O
const	O
char	O
*	O
_fmt	*(char)
,	O
...	O
)	O
{	O
struct	O
context	struct(long,*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)))
*	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
;	O
struct	O
exception	struct(*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct(*(char),*(char),int,int)),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*((*`)->(void)),*(void)))),int)
*	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
;	O
int	O
prev_state	int
;	O
printf	(*(char))->(int)
(	O
"%s:%s:%d: THROW FROM %s:%d, error: %d\n"	*(char)
,	O
__FILE__	O
,	O
__FUNCTION__	O
,	O
__LINE__	O
,	O
_file	*(char)
,	O
_line	int
,	O
_error	int
)	O
;	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
=	O
get_context	()->(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
(	O
)	O
;	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
=	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
->	O
current	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
;	O
lb_continue	O
:	O
if	O
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
==	O
NULL	O
)	O
FATAL	O
(	O
"There is no try context in this thread. Can not raise the exception signaled by: %s:%d"	*(char)
,	O
_file	*(char)
,	O
_line	int
)	O
;	O
if	O
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
state	*(int)
==	O
EXCEPTION_THROW	int
)	O
{	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
->	O
current	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
=	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
prev	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
;	O
if	O
(	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
->	O
current	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
)	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
->	O
current	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
error_data	*(struct(*(char),*(char),int,int))
=	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
error_data	*(struct(*(char),*(char),int,int))
;	O
else	O
if	O
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
error_data	*(struct(*(char),*(char),int,int))
)	O
{	O
free	(*(void))->(void)
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
error_data	*(struct(*(char),*(char),int,int))
->	O
message	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
error_data	*(struct(*(char),*(char),int,int))
->	O
file	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
error_data	*(struct(*(char),*(char),int,int))
)	O
;	O
}	O
call_unwind_handlers	(*(struct(*(struct(*`,*`,*`,*`,*`,int,*`,int)),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct(*`,*`,int,int)),int,*(*(struct`)),int)))->(void)
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
)	O
;	O
exception_delete	(*(struct(*(struct(*`,*`,*`,*`,*`,int,*`,int)),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct(*`,*`,int,int)),int,*(*(struct`)),int)))->(void)
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
)	O
;	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
=	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
->	O
current	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
;	O
goto	O
lb_continue	O
;	O
}	O
prev_state	int
=	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
state	*(int)
;	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
state	*(int)
=	O
EXCEPTION_THROW	int
;	O
if	O
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
error_data	*(struct(*(char),*(char),int,int))
==	O
NULL	O
)	O
{	O
struct	O
gnufdisk_exception_info	struct(*(char),*(char),int,int)
*	O
d	*(struct(*(char),*(char),int,int))
;	O
va_list	array(struct(int,int,*(void),*(void)))
args	array(struct(int,int,*(void),*(void)))
;	O
int	O
err	long
;	O
d	*(struct(*(char),*(char),int,int))
=	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
gnufdisk_exception_info	struct(*(char),*(char),int,int)
)	O
)	O
;	O
va_start	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
_fmt	*(char)
)	O
;	O
err	long
=	O
gnufdisk_vasprintf	(*(*(char)),*(char),array(struct(int,int,*(void),*(void))))->(int)
(	O
&	O
d	*(struct(*(char),*(char),int,int))
->	O
message	*(char)
,	O
_fmt	*(char)
,	O
args	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
args	array(struct(int,int,*(void),*(void)))
)	O
;	O
if	O
(	O
err	long
==	O
-	O
1	int
)	O
FATAL	O
(	O
"Can not format exception message: %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
if	O
(	O
(	O
d	*(struct(*(char),*(char),int,int))
->	O
file	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
_file	*(char)
)	O
)	O
==	O
NULL	O
)	O
FATAL	O
(	O
"dynamic memory allocation failure"	*(char)
)	O
;	O
d	*(struct(*(char),*(char),int,int))
->	O
line	int
=	O
_line	int
;	O
d	*(struct(*(char),*(char),int,int))
->	O
error	int
=	O
_error	int
;	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
error_data	*(struct(*(char),*(char),int,int))
=	O
d	*(struct(*(char),*(char),int,int))
;	O
}	O
if	O
(	O
(	O
_flags	int
&	O
GNUFDISK_EXCEPTION_MANAGEABLE	int
)	O
&&	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
handler	*((*(void))->(void))
!=	O
NULL	O
)	O
{	O
if	O
(	O
(	O
*	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
handler	*((*(void))->(void))
)	O
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
handler_data	*(void)
,	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
error_data	*(struct(*(char),*(char),int,int))
,	O
_data	*(void)
)	O
==	O
0	int
)	O
{	O
if	O
(	O
_flags	int
&	O
GNUFDISK_EXCEPTION_LOCKABLE	int
)	O
{	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
state	*(int)
=	O
prev_state	int
;	O
if	O
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
error_data	*(struct(*(char),*(char),int,int))
!=	O
NULL	O
)	O
{	O
free	(*(void))->(void)
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
error_data	*(struct(*(char),*(char),int,int))
->	O
message	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
error_data	*(struct(*(char),*(char),int,int))
->	O
file	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
error_data	*(struct(*(char),*(char),int,int))
)	O
;	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
error_data	*(struct(*(char),*(char),int,int))
=	O
NULL	O
;	O
}	O
longjmp	(array(struct(array(long),int,struct(array(long)))),int)->(void)
(	O
*	O
_retry	*(array(struct(array(long),int,struct(array(long)))))
,	O
0xff	int
)	O
;	O
}	O
}	O
}	O
call_unwind_handlers	(*(struct(*(struct(*`,*`,*`,*`,*`,int,*`,int)),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct(*`,*`,int,int)),int,*(*(struct`)),int)))->(void)
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
)	O
;	O
longjmp	(array(struct(array(long),int,struct(array(long)))),int)->(void)
(	O
*	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
jmp	*(array(struct(array(long),int,struct(array(long)))))
,	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
error_data	*(struct(*(char),*(char),int,int))
->	O
error	int
)	O
;	O
}	O
void	O
gnufdisk_exception_catch	(*(struct(*(char),*(char),int,int)))->(void)
(	O
struct	O
gnufdisk_exception_info	struct(*(char),*(char),int,int)
*	O
_info	*(struct(*(char),*(char),int,int))
)	O
{	O
struct	O
context	struct(long,*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)))
*	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
;	O
struct	O
exception	struct(*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct(*(char),*(char),int,int)),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*((*`)->(void)),*(void)))),int)
*	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
;	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
=	O
get_context	()->(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
(	O
)	O
;	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
=	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
->	O
current	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
;	O
if	O
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
==	O
NULL	O
)	O
FATAL	O
(	O
"There are no try context on this thread"	*(char)
)	O
;	O
else	O
if	O
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
state	*(int)
!=	O
EXCEPTION_THROW	int
)	O
FATAL	O
(	O
"There is no exception to handle"	*(char)
)	O
;	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
state	*(int)
=	O
EXCEPTION_CATCH	int
;	O
if	O
(	O
_info	*(struct(*(char),*(char),int,int))
)	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
_info	*(struct(*(char),*(char),int,int))
,	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
error_data	*(struct(*(char),*(char),int,int))
,	O
sizeof	O
(	O
struct	O
gnufdisk_exception_info	struct(*(char),*(char),int,int)
)	O
)	O
;	O
}	O
void	O
gnufdisk_exception_end	()->(void)
(	O
void	O
)	O
{	O
struct	O
context	struct(long,*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)))
*	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
;	O
struct	O
exception	struct(*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct(*(char),*(char),int,int)),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*((*`)->(void)),*(void)))),int)
*	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
;	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
=	O
get_context	()->(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
(	O
)	O
;	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
=	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
->	O
current	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
;	O
if	O
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
==	O
NULL	O
)	O
FATAL	O
(	O
"There are no try context on this thread."	*(char)
)	O
;	O
if	O
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
state	*(int)
==	O
EXCEPTION_THROW	int
)	O
{	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
->	O
current	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
=	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
prev	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
;	O
if	O
(	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
->	O
current	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
)	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
->	O
current	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
error_data	*(struct(*(char),*(char),int,int))
=	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
error_data	*(struct(*(char),*(char),int,int))
;	O
else	O
{	O
free	(*(void))->(void)
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
error_data	*(struct(*(char),*(char),int,int))
->	O
message	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
error_data	*(struct(*(char),*(char),int,int))
->	O
file	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
error_data	*(struct(*(char),*(char),int,int))
)	O
;	O
free	(*(void))->(void)
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
)	O
;	O
}	O
gnufdisk_exception_throw	(*(char),int,int,*(array(struct(array(long),int,struct(array(long))))),int,*(void),*(char))->(void)
(	O
0	int
,	O
0	int
,	O
0	int
,	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
NULL	O
)	O
;	O
}	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
->	O
current	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
=	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
prev	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
;	O
exception_delete	(*(struct(*(struct(*`,*`,*`,*`,*`,int,*`,int)),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct(*`,*`,int,int)),int,*(*(struct`)),int)))->(void)
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
)	O
;	O
if	O
(	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
->	O
current	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
==	O
NULL	O
)	O
context_delete	()->(void)
(	O
)	O
;	O
}	O
int	O
gnufdisk_exception_register_unwind_handler	(*((*(void))->(void)),*(void))->(int)
(	O
gnufdisk_exception_unwind_handler	(*(void))->(void)
*	O
_h	*((*(void))->(void))
,	O
void	O
*	O
_a	*(void)
)	O
{	O
struct	O
context	struct(long,*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)))
*	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
;	O
struct	O
exception	struct(*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct(*(char),*(char),int,int)),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*((*`)->(void)),*(void)))),int)
*	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
;	O
int	O
iter	int
;	O
int	O
err	long
;	O
if	O
(	O
(	O
err	long
=	O
gnufdisk_check_memory	(*(void),long,int)->(int)
(	O
_h	*((*(void))->(void))
,	O
1	int
,	O
1	int
)	O
)	O
!=	O
0	int
)	O
{	O
errno	O
=	O
err	long
;	O
return	O
-	O
1	int
;	O
}	O
else	O
if	O
(	O
_a	*(void)
!=	O
NULL	O
&&	O
(	O
err	long
=	O
gnufdisk_check_memory	(*(void),long,int)->(int)
(	O
_a	*(void)
,	O
1	int
,	O
1	int
)	O
)	O
!=	O
0	int
)	O
{	O
errno	O
=	O
err	long
;	O
return	O
-	O
1	int
;	O
}	O
else	O
if	O
(	O
(	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
=	O
find_context	()->(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
(	O
)	O
)	O
==	O
NULL	O
)	O
{	O
errno	O
=	O
ENXIO	int
;	O
return	O
-	O
1	int
;	O
}	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
=	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
->	O
current	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
;	O
for	O
(	O
iter	int
=	O
0	int
;	O
iter	int
<	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
nunwind_handlers	int
;	O
iter	int
++	O
)	O
if	O
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
unwind_handlers	*(*(struct(*((*`)->(void)),*(void))))
[	O
iter	int
]	O
==	O
NULL	O
)	O
break	O
;	O
if	O
(	O
iter	int
==	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
nunwind_handlers	int
)	O
{	O
struct	O
unwind_handler	struct(*((*(void))->(void)),*(void))
*	O
*	O
handlers	*(*(struct(*((*`)->(void)),*(void))))
;	O
int	O
nhandlers	int
;	O
nhandlers	int
=	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
nunwind_handlers	int
+	O
8	int
;	O
handlers	*(*(struct(*((*`)->(void)),*(void))))
=	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
unwind_handler	struct(*((*(void))->(void)),*(void))
*	O
)	O
*	O
nhandlers	int
)	O
;	O
if	O
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
unwind_handlers	*(*(struct(*((*`)->(void)),*(void))))
)	O
{	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
handlers	*(*(struct(*((*`)->(void)),*(void))))
,	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
unwind_handlers	*(*(struct(*((*`)->(void)),*(void))))
,	O
sizeof	O
(	O
struct	O
unwind_handler	struct(*((*(void))->(void)),*(void))
*	O
)	O
*	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
nunwind_handlers	int
)	O
;	O
free	(*(void))->(void)
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
unwind_handlers	*(*(struct(*((*`)->(void)),*(void))))
)	O
;	O
}	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
unwind_handlers	*(*(struct(*((*`)->(void)),*(void))))
=	O
handlers	*(*(struct(*((*`)->(void)),*(void))))
;	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
nunwind_handlers	int
=	O
nhandlers	int
;	O
}	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
unwind_handlers	*(*(struct(*((*`)->(void)),*(void))))
[	O
iter	int
]	O
=	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
unwind_handler	struct(*((*(void))->(void)),*(void))
)	O
)	O
;	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
unwind_handlers	*(*(struct(*((*`)->(void)),*(void))))
[	O
iter	int
]	O
->	O
handler	*((*(void))->(void))
=	O
_h	*((*(void))->(void))
;	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
unwind_handlers	*(*(struct(*((*`)->(void)),*(void))))
[	O
iter	int
]	O
->	O
arg	*(void)
=	O
_a	*(void)
;	O
return	O
0	int
;	O
}	O
int	O
gnufdisk_exception_unregister_unwind_handler	(*((*(void))->(void)),*(void))->(int)
(	O
gnufdisk_exception_unwind_handler	(*(void))->(void)
*	O
_h	*((*(void))->(void))
,	O
void	O
*	O
_a	*(void)
)	O
{	O
struct	O
context	struct(long,*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)))
*	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
;	O
struct	O
exception	struct(*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct(*(char),*(char),int,int)),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*((*`)->(void)),*(void)))),int)
*	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
;	O
int	O
iter	int
;	O
if	O
(	O
(	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
=	O
find_context	()->(*(struct(long,*(struct(*`,*`,*`,*`,*`,int,*`,int)))))
(	O
)	O
)	O
==	O
NULL	O
)	O
{	O
errno	O
=	O
ENXIO	int
;	O
return	O
-	O
1	int
;	O
}	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
=	O
c	*(struct(long,*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int))))
->	O
current	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
;	O
for	O
(	O
iter	int
=	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
nunwind_handlers	int
-	O
1	int
;	O
iter	int
>=	O
0	int
;	O
iter	int
--	O
)	O
if	O
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
unwind_handlers	*(*(struct(*((*`)->(void)),*(void))))
[	O
iter	int
]	O
!=	O
NULL	O
&&	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
unwind_handlers	*(*(struct(*((*`)->(void)),*(void))))
[	O
iter	int
]	O
->	O
handler	*((*(void))->(void))
==	O
_h	*((*(void))->(void))
&&	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
unwind_handlers	*(*(struct(*((*`)->(void)),*(void))))
[	O
iter	int
]	O
->	O
arg	*(void)
==	O
_a	*(void)
)	O
{	O
free	(*(void))->(void)
(	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
unwind_handlers	*(*(struct(*((*`)->(void)),*(void))))
[	O
iter	int
]	O
)	O
;	O
while	O
(	O
iter	int
<	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
nunwind_handlers	int
-	O
1	int
)	O
{	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
unwind_handlers	*(*(struct(*((*`)->(void)),*(void))))
[	O
iter	int
]	O
=	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
unwind_handlers	*(*(struct(*((*`)->(void)),*(void))))
[	O
iter	int
+	O
1	int
]	O
;	O
iter	int
++	O
;	O
}	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
unwind_handlers	*(*(struct(*((*`)->(void)),*(void))))
[	O
e	*(struct(*(struct(*(struct`),*(array(struct(array(long),int,struct(array(long))))),*((*`,*`,*`)->(int)),*(void),*(struct`),int,*(*`),int)),*(array(struct(array(long),int,struct(array(long))))),*((*(void),*(struct`),*(void))->(int)),*(void),*(struct(*(char),*(char),int,int)),int,*(*(struct(*`,*`))),int))
->	O
nunwind_handlers	int
-	O
1	int
]	O
=	O
NULL	O
;	O
errno	O
=	O
0	int
;	O
return	O
0	int
;	O
}	O
errno	O
=	O
ENXIO	int
;	O
return	O
-	O
1	int
;	O
}	O
