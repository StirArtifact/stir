int	O
__osip_ist_init	(*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long)))),*(struct(*(void),*(void),*(void),*(void),*(void),*(void),*(void),int,struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),array(*((int,*(struct(*(void),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,long,int,int,*(void),enum(int,int,int,int),*(struct`),*(struct`),*(struct`),*(struct`),struct(array(char),int,array(char),array(char),array(char),array(char),int,int,int,array(struct(array(char),int,int,int,int,array(char),struct(long,long)))),*(struct`),*(void),*(void),*(void),*(void),*(void),*(void))),*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))))->(void))),array(*((int,*(struct(*(void),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,long,int,int,*(void),enum(int,int,int,int),*(struct`),*(struct`),*(struct`),*(struct`),struct(array(char),int,array(char),array(char),array(char),array(char),int,int,int,array(struct(array(char),int,int,int,int,array(char),struct(long,long)))),*(struct`),*(void),*(void),*(void),*(void),*(void),*(void))))->(void))),array(*((int,*(struct(*(void),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,long,int,int,*(void),enum(int,int,int,int),*(struct`),*(struct`),*(struct`),*(struct`),struct(array(char),int,array(char),array(char),array(char),array(char),int,int,int,array(struct(array(char),int,int,int,int,array(char),struct(long,long)))),*(struct`),*(void),*(void),*(void),*(void),*(void),*(void))),int)->(void))),*((*`,*`,*`,int,int)->(int)),*(void),*(void),*(void),*(void))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))->(int)
(	O
osip_ist_t	struct
*	O
*	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
,	O
osip_t	struct
*	O
osip	struct(*(void),*(void),*(void),*(void),*(void),*(void),*(void),int,struct(int,*(struct(*(struct(*`,*`)),*(void)))),struct(int,*(struct(*(struct(*`,*`)),*(void)))),struct(int,*(struct(*(struct(*`,*`)),*(void)))),struct(int,*(struct(*(struct(*`,*`)),*(void)))),struct(int,*(struct(*(struct(*`,*`)),*(void)))),array(*((int,*(struct(*(void),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,long,int,int,*(void),enum(int,int,int,int),*(struct`),*(struct`),*(struct`),*(struct`),struct(array(char),int,array(char),array(char),array(char),array(char),int,int,int,array(struct(array(char),int,int,int,int,array(char),struct(long,long)))),*(struct`),*(void),*(void),*(void),*(void),*(void),*(void))),*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))))->(void))),array(*((int,*(struct(*(void),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,long,int,int,*(void),enum(int,int,int,int),*(struct`),*(struct`),*(struct`),*(struct`),struct(array(char),int,array(char),array(char),array(char),array(char),int,int,int,array(struct(array(char),int,int,int,int,array(char),struct(long,long)))),*(struct`),*(void),*(void),*(void),*(void),*(void),*(void))))->(void))),array(*((int,*(struct(*(void),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,long,int,int,*(void),enum(int,int,int,int),*(struct`),*(struct`),*(struct`),*(struct`),struct(array(char),int,array(char),array(char),array(char),array(char),int,int,int,array(struct(array(char),int,int,int,int,array(char),struct(long,long)))),*(struct`),*(void),*(void),*(void),*(void),*(void),*(void))),int)->(void))),*((*(struct(*(void),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,long,int,int,*(void),enum(int,int,int,int),*(struct`),*(struct`),*(struct`),*(struct`),struct(array(char),int,array(char),array(char),array(char),array(char),int,int,int,array(struct(array(char),int,int,int,int,array(char),struct(long,long)))),*(struct`),*(void),*(void),*(void),*(void),*(void),*(void))),*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char),int,int)->(int)),*(void),*(void),*(void),*(void))
,	O
osip_message_t	struct
*	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
)	O
{	O
int	O
i	int
;	O
OSIP_TRACE	O
(	O
osip_trace	(*(char),int,enum(int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_INFO2	O
,	O
NULL	O
,	O
"allocating IST context\n"	*(char)
)	O
)	O
;	O
*	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
=	O
(	O
osip_ist_t	struct
*	O
)	O
osip_malloc	O
(	O
sizeof	O
(	O
osip_ist_t	struct
)	O
)	O
;	O
if	O
(	O
*	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
*	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
,	O
0	int
,	O
sizeof	O
(	O
osip_ist_t	struct
)	O
)	O
;	O
{	O
osip_via_t	struct
*	O
via	*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`)))))
;	O
char	O
*	O
proto	*(char)
;	O
i	int
=	O
osip_message_get_via	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),int,*(*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`)))))->(int)
(	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
,	O
0	int
,	O
&	O
via	*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`)))))
)	O
;	O
if	O
(	O
i	int
<	O
0	int
)	O
{	O
osip_free	O
(	O
*	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
)	O
;	O
*	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
=	O
NULL	O
;	O
return	O
i	int
;	O
}	O
proto	*(char)
=	O
via_get_protocol	(*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)))))->(*(char))
(	O
via	*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`)))))
)	O
;	O
if	O
(	O
proto	*(char)
==	O
NULL	O
)	O
{	O
osip_free	O
(	O
*	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
)	O
;	O
*	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
=	O
NULL	O
;	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
}	O
if	O
(	O
osip_strcasecmp	(*(char),*(char))->(int)
(	O
proto	*(char)
,	O
"TCP"	*(char)
)	O
!=	O
0	int
&&	O
osip_strcasecmp	(*(char),*(char))->(int)
(	O
proto	*(char)
,	O
"TLS"	*(char)
)	O
!=	O
0	int
&&	O
osip_strcasecmp	(*(char),*(char))->(int)
(	O
proto	*(char)
,	O
"SCTP"	*(char)
)	O
!=	O
0	int
)	O
{	O
(	O
*	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
)	O
->	O
timer_g_length	int
=	O
DEFAULT_T1	int
;	O
(	O
*	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
)	O
->	O
timer_i_length	int
=	O
DEFAULT_T4	int
;	O
(	O
*	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
)	O
->	O
timer_g_start	struct(long,long)
.	O
tv_sec	long
=	O
-	O
1	int
;	O
(	O
*	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
)	O
->	O
timer_i_start	struct(long,long)
.	O
tv_sec	long
=	O
-	O
1	int
;	O
}	O
else	O
{	O
(	O
*	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
)	O
->	O
timer_g_length	int
=	O
-	O
1	int
;	O
(	O
*	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
)	O
->	O
timer_i_length	int
=	O
0	int
;	O
(	O
*	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
)	O
->	O
timer_g_start	struct(long,long)
.	O
tv_sec	long
=	O
-	O
1	int
;	O
(	O
*	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
)	O
->	O
timer_i_start	struct(long,long)
.	O
tv_sec	long
=	O
-	O
1	int
;	O
}	O
}	O
(	O
*	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
)	O
->	O
timer_h_length	int
=	O
64	int
*	O
DEFAULT_T1	int
;	O
(	O
*	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
)	O
->	O
timer_h_start	struct(long,long)
.	O
tv_sec	long
=	O
-	O
1	int
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
__osip_ist_free	(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))->(int)
(	O
osip_ist_t	struct
*	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
)	O
{	O
if	O
(	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
OSIP_TRACE	O
(	O
osip_trace	(*(char),int,enum(int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_INFO2	O
,	O
NULL	O
,	O
"free ist resource\n"	*(char)
)	O
)	O
;	O
osip_free	O
(	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
osip_event_t	struct
*	O
__osip_ist_need_timer_g_event	(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)))))
(	O
osip_ist_t	struct
*	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
,	O
state_t	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
state	*(int)
,	O
int	O
transactionid	int
)	O
{	O
return	O
__osip_transaction_need_timer_x_event	(*(void),*(struct(long,long)),int,int,int)->(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)))))
(	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
,	O
&	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
->	O
timer_g_start	struct(long,long)
,	O
state	*(int)
==	O
IST_COMPLETED	int
,	O
transactionid	int
,	O
TIMEOUT_G	int
)	O
;	O
}	O
osip_event_t	struct
*	O
__osip_ist_need_timer_h_event	(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)))))
(	O
osip_ist_t	struct
*	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
,	O
state_t	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
state	*(int)
,	O
int	O
transactionid	int
)	O
{	O
return	O
__osip_transaction_need_timer_x_event	(*(void),*(struct(long,long)),int,int,int)->(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)))))
(	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
,	O
&	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
->	O
timer_h_start	struct(long,long)
,	O
state	*(int)
==	O
IST_COMPLETED	int
,	O
transactionid	int
,	O
TIMEOUT_H	int
)	O
;	O
}	O
osip_event_t	struct
*	O
__osip_ist_need_timer_i_event	(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)))))
(	O
osip_ist_t	struct
*	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
,	O
state_t	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
state	*(int)
,	O
int	O
transactionid	int
)	O
{	O
return	O
__osip_transaction_need_timer_x_event	(*(void),*(struct(long,long)),int,int,int)->(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)))))
(	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
,	O
&	O
ist	*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long))))
->	O
timer_i_start	struct(long,long)
,	O
state	*(int)
==	O
IST_CONFIRMED	int
,	O
transactionid	int
,	O
TIMEOUT_I	int
)	O
;	O
}	O
