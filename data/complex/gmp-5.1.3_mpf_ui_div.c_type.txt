void	O
mpf_ui_div	O
(	O
mpf_ptr	*(struct(int,int,long,*(long)))
r	*(struct(int,int,long,*(long)))
,	O
unsigned	O
long	O
int	O
u	array(array(long))
,	O
mpf_srcptr	*(struct(int,int,long,*(long)))
v	*(struct(int,int,long,*(long)))
)	O
{	O
mp_srcptr	*(long)
vp	*(long)
;	O
mp_ptr	*(long)
rp	*(long)
,	O
tp	*(long)
,	O
remp	*(long)
,	O
new_vp	*(long)
;	O
mp_size_t	long
vsize	long
;	O
mp_size_t	long
rsize	long
,	O
prospective_rsize	long
,	O
zeros	long
,	O
tsize	long
,	O
high_zero	long
;	O
mp_size_t	long
sign_quotient	long
;	O
mp_size_t	long
prec	int
;	O
mp_exp_t	long
rexp	long
;	O
TMP_DECL	O
;	O
vsize	long
=	O
v	*(struct(int,int,long,*(long)))
->	O
_mp_size	int
;	O
sign_quotient	long
=	O
vsize	long
;	O
if	O
(	O
UNLIKELY	O
(	O
vsize	long
==	O
0	int
)	O
)	O
DIVIDE_BY_ZERO	O
;	O
if	O
(	O
UNLIKELY	O
(	O
u	array(array(long))
==	O
0	int
)	O
)	O
{	O
r	*(struct(int,int,long,*(long)))
->	O
_mp_size	int
=	O
0	int
;	O
r	*(struct(int,int,long,*(long)))
->	O
_mp_exp	long
=	O
0	int
;	O
return	O
;	O
}	O
vsize	long
=	O
ABS	O
(	O
vsize	long
)	O
;	O
prec	int
=	O
r	*(struct(int,int,long,*(long)))
->	O
_mp_prec	int
;	O
TMP_MARK	O
;	O
rexp	long
=	O
1	int
-	O
v	*(struct(int,int,long,*(long)))
->	O
_mp_exp	long
+	O
1	int
;	O
rp	*(long)
=	O
r	*(struct(int,int,long,*(long)))
->	O
_mp_d	*(long)
;	O
vp	*(long)
=	O
v	*(struct(int,int,long,*(long)))
->	O
_mp_d	*(long)
;	O
prospective_rsize	long
=	O
1	int
-	O
vsize	long
+	O
1	int
;	O
rsize	long
=	O
prec	int
+	O
1	int
;	O
zeros	long
=	O
rsize	long
-	O
prospective_rsize	long
;	O
tsize	long
=	O
1	int
+	O
zeros	long
;	O
if	O
(	O
WANT_TMP_DEBUG	int
)	O
{	O
remp	*(long)
=	O
TMP_ALLOC_LIMBS	O
(	O
vsize	long
)	O
;	O
tp	*(long)
=	O
TMP_ALLOC_LIMBS	O
(	O
tsize	long
)	O
;	O
new_vp	*(long)
=	O
NULL	O
;	O
if	O
(	O
rp	*(long)
==	O
vp	*(long)
)	O
new_vp	*(long)
=	O
TMP_ALLOC_LIMBS	O
(	O
vsize	long
)	O
;	O
}	O
else	O
{	O
mp_size_t	long
size	long
=	O
vsize	long
+	O
tsize	long
+	O
(	O
rp	*(long)
==	O
vp	*(long)
?	O
vsize	long
:	O
0	int
)	O
;	O
remp	*(long)
=	O
TMP_ALLOC_LIMBS	O
(	O
size	long
)	O
;	O
tp	*(long)
=	O
remp	*(long)
+	O
vsize	long
;	O
new_vp	*(long)
=	O
tp	*(long)
+	O
tsize	long
;	O
}	O
if	O
(	O
rp	*(long)
==	O
vp	*(long)
)	O
{	O
MPN_COPY	O
(	O
new_vp	*(long)
,	O
vp	*(long)
,	O
vsize	long
)	O
;	O
vp	*(long)
=	O
new_vp	*(long)
;	O
}	O
MPN_ZERO	O
(	O
tp	*(long)
,	O
tsize	long
-	O
1	int
)	O
;	O
tp	*(long)
[	O
tsize	long
-	O
1	int
]	O
=	O
u	array(array(long))
&	O
GMP_NUMB_MASK	O
;	O
ASSERT	O
(	O
tsize	long
-	O
vsize	long
+	O
1	int
==	O
rsize	long
)	O
;	O
mpn_tdiv_qr	O
(	O
rp	*(long)
,	O
remp	*(long)
,	O
(	O
mp_size_t	long
)	O
0	int
,	O
tp	*(long)
,	O
tsize	long
,	O
vp	*(long)
,	O
vsize	long
)	O
;	O
high_zero	long
=	O
(	O
rp	*(long)
[	O
rsize	long
-	O
1	int
]	O
==	O
0	int
)	O
;	O
rsize	long
-=	O
high_zero	long
;	O
rexp	long
-=	O
high_zero	long
;	O
r	*(struct(int,int,long,*(long)))
->	O
_mp_size	int
=	O
sign_quotient	long
>=	O
0	int
?	O
rsize	long
:	O
-	O
rsize	long
;	O
r	*(struct(int,int,long,*(long)))
->	O
_mp_exp	long
=	O
rexp	long
;	O
TMP_FREE	O
;	O
}	O
