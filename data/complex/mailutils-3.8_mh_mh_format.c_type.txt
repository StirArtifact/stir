static	O
inline	O
void	O
mh_string_init	(*(struct(long,*(char))))->(void)
(	O
struct	O
mh_string	struct(long,*(char))
*	O
s	*(char)
)	O
{	O
s	*(char)
->	O
size	long
=	O
0	int
;	O
s	*(char)
->	O
ptr	*(*(char))
=	O
NULL	O
;	O
}	O
static	O
void	O
mh_string_free	(*(struct(long,*(char))))->(void)
(	O
struct	O
mh_string	struct(long,*(char))
*	O
s	*(char)
)	O
{	O
free	(*(void))->(void)
(	O
s	*(char)
->	O
ptr	*(*(char))
)	O
;	O
s	*(char)
->	O
size	long
=	O
0	int
;	O
s	*(char)
->	O
ptr	*(*(char))
=	O
NULL	O
;	O
}	O
static	O
void	O
mh_string_realloc	(*(struct(long,*(char))),long)->(void)
(	O
struct	O
mh_string	struct(long,*(char))
*	O
s	*(char)
,	O
size_t	long
length	long
)	O
{	O
if	O
(	O
length	long
>	O
s	*(char)
->	O
size	long
)	O
{	O
s	*(char)
->	O
ptr	*(*(char))
=	O
mu_realloc	(*(void),long)->(*(void))
(	O
s	*(char)
->	O
ptr	*(*(char))
,	O
length	long
)	O
;	O
s	*(char)
->	O
ptr	*(*(char))
[	O
length	long
-	O
1	int
]	O
=	O
0	int
;	O
s	*(char)
->	O
size	long
=	O
length	long
;	O
}	O
}	O
static	O
inline	O
int	O
mh_string_is_null	(*(struct(long,*(char))))->(int)
(	O
struct	O
mh_string	struct(long,*(char))
*	O
s	*(char)
)	O
{	O
return	O
s	*(char)
->	O
ptr	*(*(char))
==	O
NULL	O
||	O
s	*(char)
->	O
ptr	*(*(char))
[	O
0	int
]	O
==	O
0	int
;	O
}	O
static	O
inline	O
size_t	long
mh_string_length	(*(struct(long,*(char))))->(long)
(	O
struct	O
mh_string	struct(long,*(char))
*	O
s	*(char)
)	O
{	O
return	O
mh_string_is_null	(*(struct(long,*(char))))->(int)
(	O
s	*(char)
)	O
?	O
0	int
:	O
strlen	(*(char))->(long)
(	O
s	*(char)
->	O
ptr	*(*(char))
)	O
;	O
}	O
static	O
inline	O
char	O
const	O
*	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
struct	O
mh_string	struct(long,*(char))
*	O
s	*(char)
)	O
{	O
return	O
mh_string_is_null	(*(struct(long,*(char))))->(int)
(	O
s	*(char)
)	O
?	O
""	*(char)
:	O
s	*(char)
->	O
ptr	*(*(char))
;	O
}	O
static	O
inline	O
void	O
mh_string_clear	(*(struct(long,*(char))))->(void)
(	O
struct	O
mh_string	struct(long,*(char))
*	O
s	*(char)
)	O
{	O
if	O
(	O
s	*(char)
->	O
ptr	*(*(char))
)	O
s	*(char)
->	O
ptr	*(*(char))
[	O
0	int
]	O
=	O
0	int
;	O
}	O
static	O
void	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
struct	O
mh_string	struct(long,*(char))
*	O
s	*(char)
,	O
char	O
const	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
{	O
if	O
(	O
!	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
mh_string_clear	(*(struct(long,*(char))))->(void)
(	O
s	*(char)
)	O
;	O
else	O
{	O
mh_string_realloc	(*(struct(long,*(char))),long)->(void)
(	O
s	*(char)
,	O
strlen	(*(char))->(long)
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
+	O
1	int
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
s	*(char)
->	O
ptr	*(*(char))
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
;	O
}	O
}	O
static	O
void	O
mh_string_copy	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),enum(int,int,int),enum(int,int,int))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
enum	O
regid	enum(int,int,int)
dst	*(char)
,	O
enum	O
regid	enum(int,int,int)
src	*(char)
)	O
{	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
dst	*(char)
]	O
,	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
src	*(char)
]	O
.	O
ptr	*(*(char))
)	O
;	O
}	O
static	O
char	O
*	O
_get_builtin_name	(*((*(struct(array(long),array(struct(long,*(char))),*`,long,long,long,long,*`,int,long,long,*`,int,*`,int,*`)))->(void)))->(*(char))
(	O
mh_builtin_fp	*((*(struct))->(void))
ptr	*(*(char))
)	O
;	O
static	O
inline	O
size_t	long
output_width	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(long)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
if	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
width	long
<	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
ind	long
)	O
return	O
0	int
;	O
return	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
width	long
-	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
ind	long
;	O
}	O
int	O
mbsubstrlen	(*(char),long,long)->(int)
(	O
char	O
const	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
size_t	long
len	int
,	O
size_t	long
ncol	long
)	O
{	O
int	O
ret	*(*(struct))
=	O
0	int
;	O
mbi_iterator_t	struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
iter	*(struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char))))
;	O
if	O
(	O
ncol	long
<=	O
0	int
)	O
return	O
0	int
;	O
for	O
(	O
mbi_init	O
(	O
iter	*(struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char))))
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
len	int
)	O
;	O
ncol	long
&&	O
mbi_avail	O
(	O
iter	*(struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char))))
)	O
;	O
ncol	long
--	O
,	O
mbi_advance	O
(	O
iter	*(struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char))))
)	O
)	O
ret	*(*(struct))
+=	O
mb_len	O
(	O
mbi_cur	O
(	O
iter	*(struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char))))
)	O
)	O
;	O
return	O
ret	*(*(struct))
;	O
}	O
size_t	long
mbsnlen	(*(char),long)->(long)
(	O
char	O
const	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
size_t	long
len	int
)	O
{	O
int	O
ret	*(*(struct))
=	O
0	int
;	O
mbi_iterator_t	struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
iter	*(struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char))))
;	O
for	O
(	O
mbi_init	O
(	O
iter	*(struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char))))
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
len	int
)	O
;	O
mbi_avail	O
(	O
iter	*(struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char))))
)	O
;	O
mbi_advance	O
(	O
iter	*(struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char))))
)	O
)	O
ret	*(*(struct))
++	O
;	O
return	O
ret	*(*(struct))
;	O
}	O
static	O
void	O
str_compress_ws	(*(char))->(void)
(	O
char	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
{	O
unsigned	O
char	O
*	O
p	*(char)
,	O
*	O
q	*(char)
;	O
size_t	long
size	long
=	O
strlen	(*(char))->(long)
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
;	O
mbi_iterator_t	struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
iter	*(struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char))))
;	O
int	O
space	int
=	O
0	int
;	O
for	O
(	O
p	*(char)
=	O
q	*(char)
=	O
(	O
unsigned	O
char	O
*	O
)	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
mbi_init	O
(	O
iter	*(struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char))))
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
size	long
)	O
;	O
mbi_avail	O
(	O
iter	*(struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char))))
)	O
;	O
mbi_advance	O
(	O
iter	*(struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char))))
)	O
)	O
{	O
if	O
(	O
mb_isspace	O
(	O
mbi_cur	O
(	O
iter	*(struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char))))
)	O
)	O
)	O
{	O
if	O
(	O
!	O
space	int
)	O
*	O
p	*(char)
++	O
=	O
' '	O
;	O
space	int
++	O
;	O
continue	O
;	O
}	O
else	O
if	O
(	O
space	int
)	O
space	int
=	O
0	int
;	O
if	O
(	O
mb_isprint	O
(	O
mbi_cur	O
(	O
iter	*(struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char))))
)	O
)	O
)	O
{	O
size_t	long
len	int
=	O
mb_len	O
(	O
mbi_cur	O
(	O
iter	*(struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char))))
)	O
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
p	*(char)
,	O
mb_ptr	O
(	O
mbi_cur	O
(	O
iter	*(struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char))))
)	O
)	O
,	O
len	int
)	O
;	O
p	*(char)
+=	O
len	int
;	O
}	O
}	O
*	O
p	*(char)
=	O
0	int
;	O
}	O
static	O
inline	O
void	O
compress_ws	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(char))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
char	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
{	O
if	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
fmtflags	int
&	O
MH_FMT_COMPWS	int
)	O
str_compress_ws	(*(char))->(void)
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
;	O
}	O
static	O
void	O
put_string	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(char),int)->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
char	O
const	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
int	O
len	int
)	O
{	O
if	O
(	O
len	int
==	O
0	int
)	O
return	O
;	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
output	*(char)
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
len	int
,	O
NULL	O
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
ind	long
+=	O
mbsnwidth	(*(char),long,int)->(int)
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
len	int
,	O
0	int
)	O
;	O
}	O
static	O
void	O
print_hdr_segment	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(char),long)->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
char	O
const	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
size_t	long
len	int
)	O
{	O
if	O
(	O
!	O
len	int
)	O
len	int
=	O
strlen	(*(char))->(long)
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
;	O
if	O
(	O
mbsnlen	(*(char),long)->(long)
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
len	int
)	O
<	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
width	long
)	O
put_string	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(char),int)->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
len	int
)	O
;	O
else	O
{	O
while	O
(	O
1	int
)	O
{	O
mbi_iterator_t	struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
iter	*(struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char))))
;	O
size_t	long
rest	long
=	O
output_width	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(long)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
;	O
size_t	long
width	long
=	O
mbsnlen	(*(char),long)->(long)
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
len	int
)	O
;	O
size_t	long
off	long
,	O
size	long
;	O
if	O
(	O
width	long
<=	O
rest	long
)	O
{	O
put_string	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(char),int)->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
len	int
)	O
;	O
break	O
;	O
}	O
size	long
=	O
off	long
=	O
0	int
;	O
for	O
(	O
mbi_init	O
(	O
iter	*(struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char))))
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
len	int
)	O
;	O
mbi_avail	O
(	O
iter	*(struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char))))
)	O
;	O
mbi_advance	O
(	O
iter	*(struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char))))
)	O
)	O
{	O
if	O
(	O
mb_isspace	O
(	O
mbi_cur	O
(	O
iter	*(struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char))))
)	O
)	O
)	O
off	long
=	O
size	long
;	O
size	long
+=	O
mb_len	O
(	O
mbi_cur	O
(	O
iter	*(struct(*(char),bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char))))
)	O
)	O
;	O
}	O
if	O
(	O
off	long
>	O
0	int
)	O
{	O
put_string	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(char),int)->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
off	long
)	O
;	O
put_string	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(char),int)->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
"\n        "	*(char)
,	O
9	int
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
ind	long
=	O
8	int
;	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
+=	O
off	long
;	O
len	int
-=	O
off	long
;	O
}	O
else	O
{	O
size	long
=	O
mbsubstrlen	(*(char),long,long)->(int)
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
len	int
,	O
rest	long
)	O
;	O
put_string	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(char),int)->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
len	int
)	O
;	O
break	O
;	O
}	O
}	O
}	O
}	O
static	O
void	O
print_hdr_string	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(char))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
char	O
const	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
{	O
char	O
const	O
*	O
p	*(char)
;	O
if	O
(	O
!	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
=	O
""	*(char)
;	O
p	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
'\n'	O
)	O
;	O
while	O
(	O
p	*(char)
)	O
{	O
print_hdr_segment	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(char),long)->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
p	*(char)
-	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
+	O
1	int
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
ind	long
=	O
0	int
;	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
=	O
p	*(char)
+	O
1	int
;	O
p	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
'\n'	O
)	O
;	O
}	O
if	O
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
0	int
]	O
)	O
print_hdr_segment	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(char),long)->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
0	int
)	O
;	O
}	O
static	O
void	O
print_simple_segment	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),long,*(char),long)->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
size_t	long
width	long
,	O
char	O
const	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
size_t	long
len	int
)	O
{	O
size_t	long
rest	long
;	O
if	O
(	O
!	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
=	O
""	*(char)
;	O
if	O
(	O
!	O
len	int
)	O
len	int
=	O
strlen	(*(char))->(long)
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
;	O
if	O
(	O
!	O
width	long
)	O
width	long
=	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
width	long
;	O
rest	long
=	O
output_width	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(long)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
;	O
if	O
(	O
rest	long
==	O
0	int
)	O
{	O
if	O
(	O
len	int
==	O
1	int
&&	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
0	int
]	O
==	O
'\n'	O
)	O
put_string	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(char),int)->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
len	int
)	O
;	O
return	O
;	O
}	O
put_string	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(char),int)->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
mbsubstrlen	(*(char),long,long)->(int)
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
len	int
,	O
rest	long
)	O
)	O
;	O
}	O
static	O
void	O
print_string	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),long,*(char))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
size_t	long
width	long
,	O
char	O
const	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
{	O
char	O
*	O
p	*(char)
;	O
if	O
(	O
!	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
=	O
""	*(char)
;	O
if	O
(	O
!	O
width	long
)	O
width	long
=	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
width	long
;	O
p	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
'\n'	O
)	O
;	O
while	O
(	O
p	*(char)
)	O
{	O
print_simple_segment	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),long,*(char),long)->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
width	long
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
p	*(char)
-	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
+	O
1	int
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
ind	long
=	O
0	int
;	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
=	O
p	*(char)
+	O
1	int
;	O
p	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
'\n'	O
)	O
;	O
}	O
if	O
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
0	int
]	O
)	O
print_simple_segment	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),long,*(char),long)->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
width	long
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
0	int
)	O
;	O
}	O
static	O
void	O
print_fmt_segment	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),long,*(char),long)->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
size_t	long
fmtwidth	long
,	O
char	O
const	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
size_t	long
len	int
)	O
{	O
size_t	long
width	long
=	O
mbsnlen	(*(char),long)->(long)
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
len	int
)	O
;	O
if	O
(	O
fmtwidth	long
&&	O
width	long
>	O
fmtwidth	long
)	O
{	O
len	int
=	O
mbsubstrlen	(*(char),long,long)->(int)
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
len	int
,	O
fmtwidth	long
)	O
;	O
width	long
=	O
fmtwidth	long
;	O
}	O
else	O
len	int
=	O
mbsubstrlen	(*(char),long,long)->(int)
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
len	int
,	O
output_width	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(long)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
)	O
;	O
put_string	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(char),int)->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
len	int
)	O
;	O
if	O
(	O
fmtwidth	long
>	O
width	long
)	O
{	O
fmtwidth	long
-=	O
width	long
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
ind	long
+=	O
fmtwidth	long
;	O
while	O
(	O
fmtwidth	long
--	O
)	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
output	*(char)
,	O
" "	*(char)
,	O
1	int
,	O
NULL	O
)	O
;	O
}	O
}	O
static	O
void	O
print_fmt_string	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),long,*(char))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
size_t	long
fmtwidth	long
,	O
char	O
const	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
{	O
char	O
*	O
p	*(char)
;	O
while	O
(	O
(	O
p	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
'\n'	O
)	O
)	O
)	O
{	O
print_fmt_segment	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),long,*(char),long)->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
fmtwidth	long
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
p	*(char)
-	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
;	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
output	*(char)
,	O
"\n"	*(char)
,	O
1	int
,	O
NULL	O
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
ind	long
=	O
0	int
;	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
=	O
p	*(char)
+	O
1	int
;	O
}	O
if	O
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
0	int
]	O
)	O
print_fmt_segment	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),long,*(char),long)->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
fmtwidth	long
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
strlen	(*(char))->(long)
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
)	O
;	O
}	O
static	O
void	O
reset_fmt_defaults	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
const	O
char	O
*	O
p	*(char)
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
fmtflags	int
=	O
0	int
;	O
p	*(char)
=	O
mh_global_profile_get	O
(	O
"Compress-WS"	*(char)
,	O
"yes"	*(char)
)	O
;	O
if	O
(	O
p	*(char)
&&	O
(	O
mu_c_strcasecmp	(*(char),*(char))->(int)
(	O
p	*(char)
,	O
"yes"	*(char)
)	O
==	O
0	int
||	O
mu_c_strcasecmp	(*(char),*(char))->(int)
(	O
p	*(char)
,	O
"true"	*(char)
)	O
==	O
0	int
)	O
)	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
fmtflags	int
|=	O
MH_FMT_COMPWS	int
;	O
}	O
static	O
void	O
format_num	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),long)->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
long	O
num	long
)	O
{	O
int	O
n	long
;	O
char	O
buf	*(char)
[	O
64	int
]	O
;	O
char	O
*	O
ptr	*(*(char))
;	O
int	O
fmtwidth	long
=	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
fmtflags	int
&	O
MH_WIDTH_MASK	int
;	O
char	O
padchar	char
=	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
fmtflags	int
&	O
MH_FMT_ZEROPAD	int
?	O
'0'	O
:	O
' '	O
;	O
n	long
=	O
snprintf	(*(char),long,*(char))->(int)
(	O
buf	*(char)
,	O
sizeof	O
buf	*(char)
,	O
"%ld"	*(char)
,	O
num	long
)	O
;	O
if	O
(	O
fmtwidth	long
)	O
{	O
if	O
(	O
n	long
>	O
fmtwidth	long
)	O
{	O
ptr	*(*(char))
=	O
buf	*(char)
+	O
n	long
-	O
fmtwidth	long
;	O
*	O
ptr	*(*(char))
=	O
'?'	O
;	O
}	O
else	O
{	O
int	O
i	int
;	O
ptr	*(*(char))
=	O
buf	*(char)
;	O
for	O
(	O
i	int
=	O
n	long
;	O
i	int
<	O
fmtwidth	long
&&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
ind	long
<	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
width	long
;	O
i	int
++	O
,	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
ind	long
++	O
)	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
output	*(char)
,	O
&	O
padchar	char
,	O
1	int
,	O
NULL	O
)	O
;	O
}	O
}	O
else	O
ptr	*(*(char))
=	O
buf	*(char)
;	O
print_string	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),long,*(char))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
0	int
,	O
ptr	*(*(char))
)	O
;	O
reset_fmt_defaults	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
;	O
}	O
static	O
void	O
format_str	*(char)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
char	O
const	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
{	O
if	O
(	O
!	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
=	O
""	*(char)
;	O
if	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
fmtflags	int
)	O
{	O
int	O
len	int
=	O
strlen	(*(char))->(long)
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
;	O
int	O
fmtwidth	long
=	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
fmtflags	int
&	O
MH_WIDTH_MASK	int
;	O
char	O
padchar	char
=	O
' '	O
;	O
if	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
fmtflags	int
&	O
MH_FMT_RALIGN	int
)	O
{	O
int	O
i	int
,	O
n	long
;	O
n	long
=	O
fmtwidth	long
-	O
len	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
n	long
&&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
ind	long
<	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
width	long
;	O
i	int
++	O
,	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
ind	long
++	O
,	O
fmtwidth	long
--	O
)	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
output	*(char)
,	O
&	O
padchar	char
,	O
1	int
,	O
NULL	O
)	O
;	O
}	O
print_fmt_string	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),long,*(char))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
fmtwidth	long
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
;	O
reset_fmt_defaults	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
;	O
}	O
else	O
print_string	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),long,*(char))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
0	int
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
;	O
}	O
static	O
int	O
addr_cmp	(*(void),*(void))->(int)
(	O
void	O
*	O
item	*(void)
,	O
void	O
*	O
data	*(void)
)	O
{	O
mu_address_t	*(struct)
a	*(struct(int,int,array(char),array(char)))
=	O
item	*(void)
;	O
mu_address_t	*(struct)
b	*(struct(int,int,array(char),array(char)))
=	O
data	*(void)
;	O
size_t	long
i	int
,	O
count	*(long)
;	O
int	O
rc	int
=	O
0	int
;	O
mu_address_get_count	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),*(long))->(int)
(	O
a	*(struct(int,int,array(char),array(char)))
,	O
&	O
count	*(long)
)	O
;	O
for	O
(	O
i	int
=	O
1	int
;	O
rc	int
==	O
0	int
&&	O
i	int
<=	O
count	*(long)
;	O
i	int
++	O
)	O
{	O
const	O
char	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
;	O
if	O
(	O
mu_address_sget_email	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),long,*(*(char)))->(int)
(	O
a	*(struct(int,int,array(char),array(char)))
,	O
i	int
,	O
&	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
||	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
continue	O
;	O
rc	int
=	O
mu_address_contains_email	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),*(char))->(int)
(	O
b	*(struct(int,int,array(char),array(char)))
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
;	O
}	O
return	O
rc	int
?	O
MU_ERR_USER0	O
:	O
0	int
;	O
}	O
static	O
int	O
addrlist_lookup	(*(struct),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))->(int)
(	O
mu_list_t	*(struct)
list	*(struct)
,	O
mu_address_t	*(struct)
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
{	O
return	O
mu_list_foreach	(*(struct),*((*(void),*(void))->(int)),*(void))->(int)
(	O
list	*(struct)
,	O
addr_cmp	(*(void),*(void))->(int)
,	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
;	O
}	O
static	O
int	O
addr_free	(*(void),*(void))->(int)
(	O
void	O
*	O
item	*(void)
,	O
void	O
*	O
data	*(void)
)	O
{	O
mu_address_t	*(struct)
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
=	O
item	*(void)
;	O
mu_address_destroy	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))->(void)
(	O
&	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
;	O
return	O
0	int
;	O
}	O
static	O
void	O
addrlist_destroy	(*(*(struct)))->(void)
(	O
mu_list_t	*(struct)
*	O
list	*(struct)
)	O
{	O
mu_list_foreach	(*(struct),*((*(void),*(void))->(int)),*(void))->(int)
(	O
*	O
list	*(struct)
,	O
addr_free	(*(void),*(void))->(int)
,	O
NULL	O
)	O
;	O
mu_list_destroy	(*(*(struct)))->(void)
(	O
list	*(struct)
)	O
;	O
}	O
void	O
mh_fvm_run	(*(struct),*(struct))->(void)
(	O
mh_fvm_t	*(struct)
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
mu_message_t	*(struct)
msg	*(struct)
)	O
{	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
message	*(struct)
=	O
msg	*(struct)
;	O
reset_fmt_defaults	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
;	O
mu_list_clear	(*(struct))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
addrlist	*(struct)
)	O
;	O
mh_string_init	(*(struct(long,*(char))))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
)	O
;	O
mh_string_init	(*(struct(long,*(char))))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
;	O
mh_string_init	(*(struct(long,*(char))))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ACC	int
]	O
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
=	O
1	int
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
stop	int
=	O
0	int
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
ind	long
=	O
0	int
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
tos	long
=	O
0	int
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
maxstack	long
=	O
0	int
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
numstack	*(long)
=	O
0	int
;	O
while	O
(	O
!	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
stop	int
)	O
{	O
mh_opcode_t	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
opcode	int
;	O
switch	O
(	O
opcode	int
=	O
MHI_OPCODE	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
prog	*(char)
[	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
++	O
]	O
)	O
)	O
{	O
case	O
mhop_stop	int
:	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
stop	int
=	O
1	int
;	O
break	O
;	O
case	O
mhop_branch	int
:	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
+=	O
MHI_NUM	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
prog	*(char)
[	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
]	O
)	O
;	O
break	O
;	O
case	O
mhop_brzn	int
:	O
{	O
int	O
res	*(int)
=	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
==	O
0	int
;	O
if	O
(	O
res	*(int)
)	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
+=	O
MHI_NUM	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
prog	*(char)
[	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
]	O
)	O
;	O
else	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
++	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
!	O
res	*(int)
;	O
}	O
break	O
;	O
case	O
mhop_brzs	int
:	O
{	O
int	O
res	*(int)
=	O
mh_string_is_null	(*(struct(long,*(char))))->(int)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
)	O
;	O
if	O
(	O
res	*(int)
)	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
+=	O
MHI_NUM	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
prog	*(char)
[	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
]	O
)	O
;	O
else	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
++	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
!	O
res	*(int)
;	O
}	O
break	O
;	O
case	O
mhop_setn	int
:	O
{	O
long	O
reg	long
=	O
MHI_NUM	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
prog	*(char)
[	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
++	O
]	O
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
reg	long
]	O
=	O
MHI_NUM	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
prog	*(char)
[	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
++	O
]	O
)	O
;	O
}	O
break	O
;	O
case	O
mhop_sets	int
:	O
{	O
long	O
reg	long
=	O
MHI_NUM	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
prog	*(char)
[	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
++	O
]	O
)	O
;	O
size_t	long
skip	long
=	O
MHI_NUM	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
prog	*(char)
[	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
++	O
]	O
)	O
;	O
char	O
const	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
=	O
MHI_STR	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
prog	*(char)
[	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
]	O
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
+=	O
skip	long
;	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
reg	long
]	O
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
;	O
}	O
break	O
;	O
case	O
mhop_movn	int
:	O
{	O
long	O
dst	*(char)
=	O
MHI_NUM	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
prog	*(char)
[	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
++	O
]	O
)	O
;	O
long	O
src	*(char)
=	O
MHI_NUM	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
prog	*(char)
[	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
++	O
]	O
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
dst	*(char)
]	O
=	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
src	*(char)
]	O
;	O
}	O
break	O
;	O
case	O
mhop_movs	int
:	O
{	O
long	O
dst	*(char)
=	O
MHI_NUM	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
prog	*(char)
[	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
++	O
]	O
)	O
;	O
long	O
src	*(char)
=	O
MHI_NUM	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
prog	*(char)
[	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
++	O
]	O
)	O
;	O
mh_string_copy	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),enum(int,int,int),enum(int,int,int))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
dst	*(char)
,	O
src	*(char)
)	O
;	O
}	O
break	O
;	O
case	O
mhop_pushn	int
:	O
if	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
tos	long
==	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
maxstack	long
)	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
numstack	*(long)
=	O
mu_2nrealloc	(*(void),*(long),long)->(*(void))
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
numstack	*(long)
,	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
maxstack	long
,	O
sizeof	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
numstack	*(long)
[	O
0	int
]	O
)	O
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
numstack	*(long)
[	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
tos	long
++	O
]	O
=	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
;	O
break	O
;	O
case	O
mhop_popn	int
:	O
assert	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
tos	long
>	O
0	int
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
numstack	*(long)
[	O
--	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
tos	long
]	O
;	O
break	O
;	O
case	O
mhop_xchgn	int
:	O
assert	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
tos	long
>	O
0	int
)	O
;	O
{	O
long	O
t	long
=	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
numstack	*(long)
[	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
tos	long
-	O
1	int
]	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
numstack	*(long)
[	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
tos	long
-	O
1	int
]	O
=	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
t	long
;	O
}	O
break	O
;	O
case	O
mhop_ldcomp	int
:	O
{	O
long	O
reg	long
=	O
MHI_NUM	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
prog	*(char)
[	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
++	O
]	O
)	O
;	O
size_t	long
skip	long
=	O
MHI_NUM	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
prog	*(char)
[	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
++	O
]	O
)	O
;	O
char	O
const	O
*	O
comp	*(char)
=	O
MHI_STR	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
prog	*(char)
[	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
]	O
)	O
;	O
mu_header_t	*(struct)
hdr	*(struct)
=	O
NULL	O
;	O
char	O
*	O
value	*(char)
=	O
NULL	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
+=	O
skip	long
;	O
mu_message_get_header	(*(struct),*(*(struct)))->(int)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
message	*(struct)
,	O
&	O
hdr	*(struct)
)	O
;	O
mu_header_aget_value_unfold	O
(	O
hdr	*(struct)
,	O
comp	*(char)
,	O
&	O
value	*(char)
)	O
;	O
mh_string_clear	(*(struct(long,*(char))))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
reg	long
]	O
)	O
;	O
if	O
(	O
value	*(char)
)	O
{	O
compress_ws	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(char))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
value	*(char)
)	O
;	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
reg	long
]	O
,	O
value	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
value	*(char)
)	O
;	O
}	O
}	O
break	O
;	O
case	O
mhop_ldbody	int
:	O
{	O
long	O
reg	long
=	O
MHI_NUM	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
prog	*(char)
[	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
++	O
]	O
)	O
;	O
mu_body_t	*(struct)
body	*(struct)
=	O
NULL	O
;	O
mu_stream_t	*(struct)
stream	*(struct)
=	O
NULL	O
;	O
size_t	long
size	long
=	O
0	int
;	O
size_t	long
rest	long
=	O
output_width	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(long)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
;	O
mh_string_clear	(*(struct(long,*(char))))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
reg	long
]	O
)	O
;	O
mu_message_get_body	(*(struct),*(*(struct)))->(int)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
message	*(struct)
,	O
&	O
body	*(struct)
)	O
;	O
mu_body_size	(*(struct),*(long))->(int)
(	O
body	*(struct)
,	O
&	O
size	long
)	O
;	O
if	O
(	O
size	long
==	O
0	int
)	O
break	O
;	O
mu_body_get_streamref	(*(struct),*(*(struct)))->(int)
(	O
body	*(struct)
,	O
&	O
stream	*(struct)
)	O
;	O
if	O
(	O
stream	*(struct)
)	O
{	O
if	O
(	O
size	long
>	O
rest	long
)	O
size	long
=	O
rest	long
;	O
mh_string_realloc	(*(struct(long,*(char))),long)->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
reg	long
]	O
,	O
size	long
+	O
1	int
)	O
;	O
mu_stream_read	(*(struct),*(void),long,*(long))->(int)
(	O
stream	*(struct)
,	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
reg	long
]	O
.	O
ptr	*(*(char))
,	O
size	long
,	O
NULL	O
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
reg	long
]	O
.	O
ptr	*(*(char))
[	O
size	long
]	O
=	O
0	int
;	O
compress_ws	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(char))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
reg	long
]	O
.	O
ptr	*(*(char))
)	O
;	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
stream	*(struct)
)	O
;	O
}	O
}	O
break	O
;	O
case	O
mhop_call	int
:	O
MHI_BUILTIN	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
prog	*(char)
[	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
++	O
]	O
)	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
;	O
break	O
;	O
case	O
mhop_atoi	int
:	O
{	O
if	O
(	O
mh_string_is_null	(*(struct(long,*(char))))->(int)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
)	O
)	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
0	int
;	O
else	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
.	O
ptr	*(*(char))
,	O
NULL	O
,	O
0	int
)	O
;	O
}	O
break	O
;	O
case	O
mhop_itoa	int
:	O
{	O
mu_asnprintf	(*(*(char)),*(long),*(char))->(int)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
.	O
ptr	*(*(char))
,	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
.	O
size	long
,	O
"%lu"	*(char)
,	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
)	O
;	O
}	O
break	O
;	O
case	O
mhop_printn	int
:	O
format_num	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),long)->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
)	O
;	O
break	O
;	O
case	O
mhop_prints	int
:	O
format_str	*(char)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
.	O
ptr	*(*(char))
)	O
;	O
break	O
;	O
case	O
mhop_printlit	int
:	O
{	O
size_t	long
skip	long
=	O
MHI_NUM	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
prog	*(char)
[	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
++	O
]	O
)	O
;	O
char	O
const	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
=	O
MHI_STR	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
prog	*(char)
[	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
]	O
)	O
;	O
format_str	*(char)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
+=	O
skip	long
;	O
}	O
break	O
;	O
case	O
mhop_fmtspec	int
:	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
fmtflags	int
=	O
MHI_NUM	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
prog	*(char)
[	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
pc	long
++	O
]	O
)	O
;	O
break	O
;	O
default	O
:	O
mu_error	(*(char))->(int)
(	O
_	O
(	O
"INTERNAL ERROR: Unknown opcode: %x"	*(char)
)	O
,	O
opcode	int
)	O
;	O
abort	()->(void)
(	O
)	O
;	O
}	O
}	O
if	O
(	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
flags	int
&	O
MH_FMT_FORCENL	int
)	O
&&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
ind	long
!=	O
0	int
)	O
put_string	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(char),int)->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
"\n"	*(char)
,	O
1	int
)	O
;	O
}	O
static	O
int	O
msg_uid_1	(*(struct),*(long))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
MU_ARG_UNUSED	O
,	O
size_t	long
*	O
ret	*(*(struct))
)	O
{	O
if	O
(	O
!	O
ret	*(*(struct))
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
*	O
ret	*(*(struct))
=	O
1	int
;	O
return	O
0	int
;	O
}	O
int	O
mh_format_str	(*(struct),*(char),long,*(*(char)))->(int)
(	O
mh_format_t	*(struct)
fmt	*(char)
,	O
char	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
size_t	long
width	long
,	O
char	O
*	O
*	O
pstr	*(*(char))
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
=	O
NULL	O
;	O
mu_header_t	*(struct)
hdr	*(struct)
=	O
NULL	O
;	O
int	O
rc	int
=	O
0	int
;	O
mu_stream_t	*(struct)
outstr	*(struct)
;	O
char	O
*	O
buf	*(char)
;	O
mu_off_t	long
size	long
;	O
mh_fvm_t	*(struct)
fvm	*(*(struct))
;	O
MU_ASSERT	O
(	O
mu_message_create	(*(*(struct)),*(void))->(int)
(	O
&	O
msg	*(struct)
,	O
NULL	O
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_message_get_header	(*(struct),*(*(struct)))->(int)
(	O
msg	*(struct)
,	O
&	O
hdr	*(struct)
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_header_set_value	(*(struct),*(char),*(char),int)->(int)
(	O
hdr	*(struct)
,	O
"text"	*(char)
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
1	int
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_memory_stream_create	(*(*(struct)),int)->(int)
(	O
&	O
outstr	*(struct)
,	O
MU_STREAM_RDWR	O
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_message_set_uid	(*(struct),*((*(struct),*(long))->(int)),*(void))->(int)
(	O
msg	*(struct)
,	O
msg_uid_1	(*(struct),*(long))->(int)
,	O
NULL	O
)	O
)	O
;	O
mh_fvm_create	(*(*(struct)),int)->(void)
(	O
&	O
fvm	*(*(struct))
,	O
0	int
)	O
;	O
mh_fvm_set_output	(*(struct),*(struct))->(void)
(	O
fvm	*(*(struct))
,	O
outstr	*(struct)
)	O
;	O
mh_fvm_set_width	(*(struct),long)->(void)
(	O
fvm	*(*(struct))
,	O
width	long
)	O
;	O
mh_fvm_set_format	(*(struct),*(struct))->(void)
(	O
fvm	*(*(struct))
,	O
fmt	*(char)
)	O
;	O
mh_fvm_run	(*(struct),*(struct))->(void)
(	O
fvm	*(*(struct))
,	O
msg	*(struct)
)	O
;	O
mh_fvm_destroy	(*(*(struct)))->(void)
(	O
&	O
fvm	*(*(struct))
)	O
;	O
MU_ASSERT	O
(	O
mu_stream_size	(*(struct),*(long))->(int)
(	O
outstr	*(struct)
,	O
&	O
size	long
)	O
)	O
;	O
buf	*(char)
=	O
mu_alloc	(long)->(*(void))
(	O
size	long
+	O
1	int
)	O
;	O
MU_ASSERT	O
(	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
outstr	*(struct)
,	O
0	int
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_stream_read	(*(struct),*(void),long,*(long))->(int)
(	O
outstr	*(struct)
,	O
buf	*(char)
,	O
size	long
,	O
NULL	O
)	O
)	O
;	O
buf	*(char)
[	O
size	long
]	O
=	O
0	int
;	O
*	O
pstr	*(*(char))
=	O
buf	*(char)
;	O
mu_message_destroy	(*(*(struct)),*(void))->(void)
(	O
&	O
msg	*(struct)
,	O
NULL	O
)	O
;	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
outstr	*(struct)
)	O
;	O
return	O
rc	int
;	O
}	O
static	O
void	O
builtin_not_implemented	(*(char))->(void)
(	O
char	O
*	O
name	*(char)
)	O
{	O
mu_error	(*(char))->(int)
(	O
"%s is not yet implemented."	*(char)
,	O
name	*(char)
)	O
;	O
}	O
static	O
void	O
builtin_msg	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
size_t	long
msgno	long
;	O
mh_message_number	(*(struct),*(long))->(int)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
message	*(struct)
,	O
&	O
msgno	long
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
msgno	long
;	O
}	O
static	O
void	O
builtin_cur	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
size_t	long
msgno	long
;	O
size_t	long
cur	long
;	O
int	O
rc	int
;	O
mu_mailbox_t	*(struct)
mbox	*(struct)
;	O
rc	int
=	O
mu_message_get_mailbox	(*(struct),*(*(struct)))->(int)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
message	*(struct)
,	O
&	O
mbox	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_diag_funcall	(int,*(char),*(char),int)->(void)
(	O
MU_DIAG_ERROR	O
,	O
"mu_message_get_mailbox"	*(char)
,	O
NULL	O
,	O
rc	int
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
mh_message_number	(*(struct),*(long))->(int)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
message	*(struct)
,	O
&	O
msgno	long
)	O
;	O
mh_mailbox_get_cur	(*(struct),*(long))->(void)
(	O
mbox	*(struct)
,	O
&	O
cur	long
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
msgno	long
==	O
cur	long
;	O
}	O
static	O
void	O
builtin_size	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
size_t	long
size	long
;	O
if	O
(	O
mu_message_size	(*(struct),*(long))->(int)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
message	*(struct)
,	O
&	O
size	long
)	O
==	O
0	int
)	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
size	long
;	O
else	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
0	int
;	O
}	O
static	O
void	O
builtin_strlen	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
mh_string_length	(*(struct(long,*(char))))->(long)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
)	O
;	O
}	O
static	O
void	O
builtin_width	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
width	long
;	O
}	O
static	O
void	O
builtin_charleft	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
output_width	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(long)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
;	O
}	O
static	O
void	O
builtin_timenow	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
time_t	long
t	long
;	O
time	struct(long,long)
(	O
&	O
t	long
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
t	long
;	O
}	O
static	O
void	O
builtin_me	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
mh_get_my_user_name	()->(*(char))
(	O
)	O
)	O
;	O
}	O
static	O
void	O
builtin_myhost	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
mh_my_host	()->(*(char))
(	O
)	O
)	O
;	O
}	O
static	O
void	O
builtin_myname	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
mh_get_my_real_name	()->(*(char))
(	O
)	O
)	O
;	O
}	O
static	O
void	O
builtin_localmbox	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
mh_my_email	()->(*(char))
(	O
)	O
)	O
;	O
}	O
static	O
void	O
builtin_eq	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
==	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_ARG	int
]	O
;	O
}	O
static	O
void	O
builtin_ne	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
!=	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_ARG	int
]	O
;	O
}	O
static	O
void	O
builtin_gt	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
>	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_ARG	int
]	O
;	O
}	O
static	O
void	O
builtin_match	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
strstr	(*(char),*(char))->(*(char))
(	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
)	O
,	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
)	O
!=	O
NULL	O
;	O
}	O
static	O
void	O
builtin_amatch	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
char	O
const	O
*	O
arg	*(char)
=	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
;	O
size_t	long
len	int
=	O
strlen	(*(char))->(long)
(	O
arg	*(char)
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
strncmp	(*(char),*(char),long)->(int)
(	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
)	O
,	O
arg	*(char)
,	O
len	int
)	O
==	O
0	int
;	O
}	O
static	O
void	O
builtin_plus	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
+=	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_ARG	int
]	O
;	O
}	O
static	O
void	O
builtin_minus	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
-=	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_ARG	int
]	O
;	O
}	O
static	O
void	O
builtin_divide	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
if	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_ARG	int
]	O
==	O
0	int
)	O
{	O
mu_error	(*(char))->(int)
(	O
_	O
(	O
"format: divide by zero"	*(char)
)	O
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
stop	int
=	O
1	int
;	O
}	O
else	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
/=	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_ARG	int
]	O
;	O
}	O
static	O
void	O
builtin_modulo	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
if	O
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_ARG	int
]	O
==	O
0	int
)	O
{	O
mu_error	(*(char))->(int)
(	O
_	O
(	O
"format: divide by zero"	*(char)
)	O
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
stop	int
=	O
1	int
;	O
}	O
else	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
%=	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_ARG	int
]	O
;	O
}	O
static	O
void	O
builtin_getenv	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
char	O
const	O
*	O
val	array(int)
=	O
getenv	(*(char))->(*(char))
(	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
)	O
;	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
val	array(int)
)	O
;	O
}	O
static	O
void	O
builtin_profile	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
char	O
const	O
*	O
val	array(int)
=	O
mh_global_profile_get	O
(	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
,	O
""	*(char)
)	O
;	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
val	array(int)
)	O
;	O
}	O
static	O
void	O
builtin_nonzero	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_ARG	int
]	O
!=	O
0	int
;	O
}	O
static	O
void	O
builtin_zero	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_ARG	int
]	O
==	O
0	int
;	O
}	O
static	O
void	O
builtin_null	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
mh_string_is_null	(*(struct(long,*(char))))->(int)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
;	O
}	O
static	O
void	O
builtin_nonnull	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
!	O
mh_string_is_null	(*(struct(long,*(char))))->(int)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
;	O
}	O
static	O
void	O
builtin_comp	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mh_string_copy	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),enum(int,int,int),enum(int,int,int))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
R_REG	int
,	O
R_ARG	int
)	O
;	O
}	O
static	O
void	O
builtin_compval	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
,	O
NULL	O
,	O
0	int
)	O
;	O
}	O
static	O
void	O
builtin_trim	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
if	O
(	O
!	O
mh_string_is_null	(*(struct(long,*(char))))->(int)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
)	O
)	O
mu_rtrim_class	(*(char),int)->(long)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
.	O
ptr	*(*(char))
,	O
MU_CTYPE_SPACE	int
)	O
;	O
}	O
static	O
void	O
_parse_date	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))),*(int))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
*	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
struct	O
mu_timezone	struct(int,*(char))
*	O
tz	*(struct(int,*(char)))
,	O
int	O
*	O
pflags	*(int)
)	O
{	O
char	O
const	O
*	O
date	struct(int,int,int,int,int,int,int,int,int,long,*(char))
=	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
;	O
int	O
flags	int
;	O
if	O
(	O
!	O
(	O
mu_parse_date_dtl	(*(char),*(long),*(long),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))),*(int))->(int)
(	O
date	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
NULL	O
,	O
NULL	O
,	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
tz	*(struct(int,*(char)))
,	O
&	O
flags	int
)	O
==	O
0	int
&&	O
(	O
flags	int
&	O
(	O
MU_PD_MASK_DATE	O
|	O
MU_PD_MASK_TIME	O
)	O
)	O
)	O
)	O
{	O
if	O
(	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
)	O
{	O
time_t	long
t	long
;	O
time	struct(long,long)
(	O
&	O
t	long
)	O
;	O
*	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
=	O
*	O
localtime	(*(long))->(*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))
(	O
&	O
t	long
)	O
;	O
}	O
if	O
(	O
tz	*(struct(int,*(char)))
)	O
mu_datetime_tz_local	(*(struct(int,*(char))))->(void)
(	O
tz	*(struct(int,*(char)))
)	O
;	O
flags	int
=	O
0	int
;	O
}	O
if	O
(	O
pflags	*(int)
)	O
*	O
pflags	*(int)
=	O
flags	int
;	O
}	O
static	O
void	O
builtin_sec	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
;	O
_parse_date	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))),*(int))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
NULL	O
,	O
NULL	O
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_sec	int
;	O
}	O
static	O
void	O
builtin_min	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
;	O
_parse_date	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))),*(int))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
NULL	O
,	O
NULL	O
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_min	int
;	O
}	O
static	O
void	O
builtin_hour	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
;	O
_parse_date	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))),*(int))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
NULL	O
,	O
NULL	O
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_hour	int
;	O
}	O
static	O
void	O
builtin_wday	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
;	O
_parse_date	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))),*(int))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
NULL	O
,	O
NULL	O
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_wday	int
;	O
}	O
static	O
void	O
builtin_day	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
;	O
char	O
buf	*(char)
[	O
80	int
]	O
;	O
_parse_date	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))),*(int))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
NULL	O
,	O
NULL	O
)	O
;	O
strftime	(*(char),long,*(char),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))->(long)
(	O
buf	*(char)
,	O
sizeof	O
buf	*(char)
,	O
"%a"	*(char)
,	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
)	O
;	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
buf	*(char)
)	O
;	O
}	O
static	O
void	O
builtin_weekday	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
;	O
char	O
buf	*(char)
[	O
80	int
]	O
;	O
_parse_date	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))),*(int))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
NULL	O
,	O
NULL	O
)	O
;	O
strftime	(*(char),long,*(char),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))->(long)
(	O
buf	*(char)
,	O
sizeof	O
buf	*(char)
,	O
"%A"	*(char)
,	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
)	O
;	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
buf	*(char)
)	O
;	O
}	O
static	O
void	O
builtin_sday	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
int	O
flags	int
;	O
_parse_date	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))),*(int))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
NULL	O
,	O
NULL	O
,	O
&	O
flags	int
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
!	O
!	O
(	O
flags	int
&	O
MU_PD_MASK_DOW	O
)	O
;	O
}	O
static	O
void	O
builtin_mday	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
;	O
_parse_date	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))),*(int))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
NULL	O
,	O
NULL	O
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_mday	int
;	O
}	O
static	O
void	O
builtin_yday	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
;	O
_parse_date	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))),*(int))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
NULL	O
,	O
NULL	O
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_yday	int
;	O
}	O
static	O
void	O
builtin_mon	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
;	O
_parse_date	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))),*(int))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
NULL	O
,	O
NULL	O
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_mon	int
+	O
1	int
;	O
}	O
static	O
void	O
builtin_month	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
;	O
char	O
buf	*(char)
[	O
80	int
]	O
;	O
_parse_date	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))),*(int))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
NULL	O
,	O
NULL	O
)	O
;	O
strftime	(*(char),long,*(char),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))->(long)
(	O
buf	*(char)
,	O
sizeof	O
buf	*(char)
,	O
"%b"	*(char)
,	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
)	O
;	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
buf	*(char)
)	O
;	O
}	O
static	O
void	O
builtin_lmonth	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
;	O
char	O
buf	*(char)
[	O
80	int
]	O
;	O
_parse_date	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))),*(int))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
NULL	O
,	O
NULL	O
)	O
;	O
strftime	(*(char),long,*(char),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))->(long)
(	O
buf	*(char)
,	O
sizeof	O
buf	*(char)
,	O
"%B"	*(char)
,	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
)	O
;	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
buf	*(char)
)	O
;	O
}	O
static	O
void	O
builtin_year	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
;	O
_parse_date	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))),*(int))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
NULL	O
,	O
NULL	O
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_year	int
+	O
1900	int
;	O
}	O
static	O
void	O
builtin_zone	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
struct	O
mu_timezone	struct(int,*(char))
tz	*(struct(int,*(char)))
;	O
_parse_date	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))),*(int))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
NULL	O
,	O
&	O
tz	*(struct(int,*(char)))
,	O
NULL	O
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
tz	*(struct(int,*(char)))
.	O
utc_offset	int
/	O
3600	int
;	O
}	O
static	O
void	O
builtin_tzone	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
struct	O
mu_timezone	struct(int,*(char))
tz	*(struct(int,*(char)))
;	O
char	O
buf	*(char)
[	O
6	int
]	O
;	O
int	O
s	*(char)
;	O
unsigned	O
hrs	int
;	O
_parse_date	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))),*(int))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
NULL	O
,	O
&	O
tz	*(struct(int,*(char)))
,	O
NULL	O
)	O
;	O
if	O
(	O
tz	*(struct(int,*(char)))
.	O
utc_offset	int
<	O
0	int
)	O
{	O
s	*(char)
=	O
'-'	O
;	O
tz	*(struct(int,*(char)))
.	O
utc_offset	int
=	O
-	O
tz	*(struct(int,*(char)))
.	O
utc_offset	int
;	O
}	O
else	O
s	*(char)
=	O
'+'	O
;	O
hrs	int
=	O
tz	*(struct(int,*(char)))
.	O
utc_offset	int
/	O
3600	int
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
buf	*(char)
,	O
sizeof	O
buf	*(char)
,	O
"%c%02u%02u"	*(char)
,	O
s	*(char)
,	O
hrs	int
,	O
(	O
tz	*(struct(int,*(char)))
.	O
utc_offset	int
-	O
hrs	int
*	O
3600	int
)	O
/	O
60	int
)	O
;	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
buf	*(char)
)	O
;	O
}	O
static	O
void	O
builtin_szone	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
int	O
flags	int
;	O
_parse_date	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))),*(int))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
NULL	O
,	O
NULL	O
,	O
&	O
flags	int
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
!	O
!	O
(	O
flags	int
&	O
MU_PD_MASK_TZ	int
)	O
;	O
}	O
static	O
void	O
builtin_str_noop	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mh_string_copy	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),enum(int,int,int),enum(int,int,int))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
R_REG	int
,	O
R_ARG	int
)	O
;	O
}	O
static	O
void	O
builtin_date2local	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
builtin_str_noop	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
;	O
}	O
static	O
void	O
builtin_date2gmt	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
builtin_str_noop	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
;	O
}	O
static	O
void	O
builtin_dst	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
;	O
_parse_date	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))),*(int))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
NULL	O
,	O
NULL	O
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_isdst	int
;	O
}	O
static	O
void	O
builtin_clock	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
;	O
struct	O
mu_timezone	struct(int,*(char))
tz	*(struct(int,*(char)))
;	O
_parse_date	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))),*(int))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
&	O
tz	*(struct(int,*(char)))
,	O
NULL	O
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
mu_datetime_to_utc	(*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))))->(long)
(	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
&	O
tz	*(struct(int,*(char)))
)	O
;	O
}	O
void	O
builtin_rclock	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
;	O
struct	O
mu_timezone	struct(int,*(char))
tz	*(struct(int,*(char)))
;	O
time_t	long
now	*(long)
=	O
time	struct(long,long)
(	O
NULL	O
)	O
;	O
_parse_date	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))),*(int))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
&	O
tz	*(struct(int,*(char)))
,	O
NULL	O
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
now	*(long)
-	O
mu_datetime_to_utc	(*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))))->(long)
(	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
&	O
tz	*(struct(int,*(char)))
)	O
;	O
}	O
struct	O
{	O
const	O
char	O
*	O
std	*(char)
;	O
const	O
char	O
*	O
dst	*(char)
;	O
int	O
utc_offset	int
;	O
}	O
tzs	array(struct(*(char),*(char),int))
[	O
]	O
=	O
{	O
{	O
"GMT"	*(char)
,	O
"BST"	*(char)
,	O
0	int
}	O
,	O
{	O
"EST"	*(char)
,	O
"EDT"	*(char)
,	O
-	O
5	int
}	O
,	O
{	O
"CST"	*(char)
,	O
"CDT"	*(char)
,	O
-	O
6	int
}	O
,	O
{	O
"MST"	*(char)
,	O
"MDT"	*(char)
,	O
-	O
7	int
}	O
,	O
{	O
"PST"	*(char)
,	O
"PDT"	*(char)
,	O
-	O
8	int
}	O
,	O
{	O
"EET"	*(char)
,	O
"EEST"	*(char)
,	O
-	O
2	int
}	O
,	O
{	O
NULL	O
,	O
0	int
}	O
}	O
;	O
static	O
void	O
date_cvt	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),int)->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
int	O
pretty	int
)	O
{	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
;	O
struct	O
mu_timezone	struct(int,*(char))
tz	*(struct(int,*(char)))
;	O
char	O
buf	*(char)
[	O
80	int
]	O
;	O
int	O
i	int
,	O
len	int
;	O
const	O
char	O
*	O
tzname	array(*(char))
=	O
NULL	O
;	O
_parse_date	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))),*(int))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
&	O
tz	*(struct(int,*(char)))
,	O
NULL	O
)	O
;	O
if	O
(	O
pretty	int
)	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
tzs	array(struct(*(char),*(char),int))
[	O
i	int
]	O
.	O
std	*(char)
;	O
i	int
++	O
)	O
{	O
int	O
offset	long
=	O
tzs	array(struct(*(char),*(char),int))
[	O
i	int
]	O
.	O
utc_offset	int
;	O
int	O
dst	*(char)
=	O
0	int
;	O
if	O
(	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_isdst	int
)	O
dst	*(char)
=	O
-	O
1	int
;	O
if	O
(	O
tz	*(struct(int,*(char)))
.	O
utc_offset	int
==	O
(	O
offset	long
+	O
dst	*(char)
)	O
*	O
3600	int
)	O
{	O
if	O
(	O
dst	*(char)
)	O
tzname	array(*(char))
=	O
tzs	array(struct(*(char),*(char),int))
[	O
i	int
]	O
.	O
dst	*(char)
;	O
else	O
tzname	array(*(char))
=	O
tzs	array(struct(*(char),*(char),int))
[	O
i	int
]	O
.	O
std	*(char)
;	O
break	O
;	O
}	O
}	O
}	O
len	int
=	O
strftime	(*(char),long,*(char),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))->(long)
(	O
buf	*(char)
,	O
sizeof	O
buf	*(char)
,	O
"%a, %d %b %Y %H:%M:%S "	*(char)
,	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
)	O
;	O
if	O
(	O
tzname	array(*(char))
)	O
snprintf	(*(char),long,*(char))->(int)
(	O
buf	*(char)
+	O
len	int
,	O
sizeof	O
(	O
buf	*(char)
)	O
-	O
len	int
,	O
"%s"	*(char)
,	O
tzname	array(*(char))
)	O
;	O
else	O
{	O
int	O
min	int
,	O
hrs	int
,	O
sign	int
;	O
int	O
offset	long
=	O
tz	*(struct(int,*(char)))
.	O
utc_offset	int
;	O
if	O
(	O
offset	long
<	O
0	int
)	O
{	O
sign	int
=	O
'-'	O
;	O
offset	long
=	O
-	O
offset	long
;	O
}	O
else	O
sign	int
=	O
'+'	O
;	O
min	int
=	O
offset	long
/	O
60	int
;	O
hrs	int
=	O
min	int
/	O
60	int
;	O
min	int
%=	O
60	int
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
buf	*(char)
+	O
len	int
,	O
sizeof	O
(	O
buf	*(char)
)	O
-	O
len	int
,	O
"%c%02d%02d"	*(char)
,	O
sign	int
,	O
hrs	int
,	O
min	int
)	O
;	O
}	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
buf	*(char)
)	O
;	O
}	O
static	O
void	O
builtin_tws	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
date_cvt	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),int)->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
0	int
)	O
;	O
}	O
static	O
void	O
builtin_pretty	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
date_cvt	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),int)->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
1	int
)	O
;	O
}	O
static	O
void	O
builtin_nodate	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
char	O
const	O
*	O
date	struct(int,int,int,int,int,int,int,int,int,long,*(char))
=	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
mu_parse_date_dtl	(*(char),*(long),*(long),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,*(char))),*(int))->(int)
(	O
date	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
)	O
!=	O
0	int
;	O
}	O
static	O
void	O
builtin_proper	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
int	O
rc	int
;	O
char	O
const	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
;	O
mu_address_t	*(struct)
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
rc	int
=	O
mu_address_create	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))),*(char))->(int)
(	O
&	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mh_string_copy	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),enum(int,int,int),enum(int,int,int))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
R_REG	int
,	O
R_ARG	int
)	O
;	O
return	O
;	O
}	O
if	O
(	O
mu_address_sget_printable	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),*(*(char)))->(int)
(	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
&	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
==	O
0	int
&&	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
;	O
else	O
mh_string_copy	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),enum(int,int,int),enum(int,int,int))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
R_REG	int
,	O
R_ARG	int
)	O
;	O
mu_address_destroy	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))->(void)
(	O
&	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
;	O
}	O
static	O
void	O
builtin_friendly	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mu_address_t	*(struct)
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
const	O
char	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
;	O
int	O
rc	int
;	O
rc	int
=	O
mu_address_create	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))),*(char))->(int)
(	O
&	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
;	O
if	O
(	O
mu_address_sget_personal	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),long,*(*(char)))->(int)
(	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
1	int
,	O
&	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
==	O
0	int
&&	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
;	O
else	O
mh_string_copy	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),enum(int,int,int),enum(int,int,int))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
R_REG	int
,	O
R_ARG	int
)	O
;	O
mu_address_destroy	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))->(void)
(	O
&	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
;	O
}	O
static	O
void	O
builtin_addr	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
const	O
char	O
*	O
arg	*(char)
=	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
;	O
mu_address_t	*(struct)
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
const	O
char	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
;	O
int	O
rc	int
;	O
rc	int
=	O
mu_address_create	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))),*(char))->(int)
(	O
&	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
arg	*(char)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
int	O
rc	int
=	O
mu_address_sget_email	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),long,*(*(char)))->(int)
(	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
1	int
,	O
&	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
mu_prstr	(*(char))->(*(char))
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
)	O
;	O
mu_address_destroy	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))->(void)
(	O
&	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
return	O
;	O
}	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
arg	*(char)
)	O
;	O
}	O
static	O
void	O
builtin_pers	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
char	O
const	O
*	O
arg	*(char)
=	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
;	O
mu_address_t	*(struct)
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
const	O
char	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
;	O
int	O
rc	int
;	O
rc	int
=	O
mu_address_create	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))),*(char))->(int)
(	O
&	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
arg	*(char)
)	O
;	O
mh_string_clear	(*(struct(long,*(char))))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
;	O
if	O
(	O
mu_address_sget_personal	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),long,*(*(char)))->(int)
(	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
1	int
,	O
&	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
==	O
0	int
&&	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
;	O
mu_address_destroy	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))->(void)
(	O
&	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
;	O
}	O
static	O
void	O
builtin_note	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mu_address_t	*(struct)
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
const	O
char	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
;	O
int	O
rc	int
;	O
rc	int
=	O
mu_address_create	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))),*(char))->(int)
(	O
&	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
)	O
;	O
mh_string_clear	(*(struct(long,*(char))))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
;	O
if	O
(	O
mu_address_sget_comments	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),long,*(*(char)))->(int)
(	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
1	int
,	O
&	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
==	O
0	int
&&	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
;	O
mu_address_destroy	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))->(void)
(	O
&	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
;	O
}	O
static	O
void	O
builtin_mbox	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mu_address_t	*(struct)
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
char	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
;	O
int	O
rc	int
;	O
rc	int
=	O
mu_address_create	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))),*(char))->(int)
(	O
&	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
)	O
;	O
mh_string_clear	(*(struct(long,*(char))))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
;	O
if	O
(	O
mu_address_aget_email	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),long,*(*(char)))->(int)
(	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
1	int
,	O
&	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
==	O
0	int
&&	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
{	O
char	O
*	O
p	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
'@'	O
)	O
;	O
if	O
(	O
p	*(char)
)	O
*	O
p	*(char)
=	O
0	int
;	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
;	O
free	(*(void))->(void)
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
;	O
}	O
mu_address_destroy	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))->(void)
(	O
&	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
;	O
}	O
static	O
void	O
builtin_mymbox	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mu_address_t	*(struct)
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
const	O
char	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
;	O
if	O
(	O
mu_address_create	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))),*(char))->(int)
(	O
&	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
)	O
)	O
return	O
;	O
if	O
(	O
mu_address_sget_email	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),long,*(*(char)))->(int)
(	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
1	int
,	O
&	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
==	O
0	int
&&	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
mh_is_my_name	(*(char))->(int)
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
;	O
else	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
0	int
;	O
mu_address_destroy	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))->(void)
(	O
&	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
;	O
}	O
static	O
void	O
builtin_host	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mu_address_t	*(struct)
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
char	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
;	O
int	O
rc	int
;	O
rc	int
=	O
mu_address_create	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))),*(char))->(int)
(	O
&	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
)	O
;	O
mh_string_clear	(*(struct(long,*(char))))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
;	O
if	O
(	O
mu_address_aget_email	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),long,*(*(char)))->(int)
(	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
1	int
,	O
&	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
==	O
0	int
&&	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
{	O
char	O
*	O
p	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
'@'	O
)	O
;	O
if	O
(	O
p	*(char)
)	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
p	*(char)
+	O
1	int
)	O
;	O
free	(*(void))->(void)
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
;	O
}	O
mu_address_destroy	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))->(void)
(	O
&	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
;	O
}	O
static	O
void	O
builtin_nohost	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
struct	O
mu_address	struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))))))
hint	*(struct)
;	O
mu_address_t	*(struct)
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
const	O
char	O
*	O
dom	*(char)
;	O
int	O
rc	int
;	O
hint	*(struct)
.	O
domain	*(char)
=	O
NULL	O
;	O
rc	int
=	O
mu_address_create_hint	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),int)->(int)
(	O
&	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
,	O
&	O
hint	*(struct)
,	O
MU_ADDR_HINT_DOMAIN	int
)	O
;	O
mh_string_clear	(*(struct(long,*(char))))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
)	O
;	O
if	O
(	O
rc	int
)	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
1	int
;	O
else	O
{	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
!	O
(	O
mu_address_sget_domain	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),long,*(*(char)))->(int)
(	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
1	int
,	O
&	O
dom	*(char)
)	O
==	O
0	int
&&	O
dom	*(char)
)	O
;	O
mu_address_destroy	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))->(void)
(	O
&	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
;	O
}	O
}	O
static	O
void	O
builtin_type	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mu_address_t	*(struct)
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
int	O
rc	int
;	O
const	O
char	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
;	O
rc	int
=	O
mu_address_create	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))),*(char))->(int)
(	O
&	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
)	O
;	O
mh_string_clear	(*(struct(long,*(char))))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
;	O
if	O
(	O
mu_address_sget_email	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),long,*(*(char)))->(int)
(	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
1	int
,	O
&	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
==	O
0	int
&&	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
{	O
if	O
(	O
strchr	(*(char),int)->(*(char))
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
'@'	O
)	O
)	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
1	int
;	O
else	O
if	O
(	O
strchr	(*(char),int)->(*(char))
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
'!'	O
)	O
)	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
-	O
1	int
;	O
else	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
0	int
;	O
}	O
else	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
2	int
;	O
mu_address_destroy	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))->(void)
(	O
&	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
;	O
}	O
static	O
void	O
builtin_path	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mu_address_t	*(struct)
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
const	O
char	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
;	O
int	O
rc	int
=	O
mu_address_create	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))),*(char))->(int)
(	O
&	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
)	O
;	O
mh_string_clear	(*(struct(long,*(char))))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
;	O
if	O
(	O
mu_address_sget_route	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),long,*(*(char)))->(int)
(	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
1	int
,	O
&	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
&&	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
;	O
mu_address_destroy	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))->(void)
(	O
&	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
;	O
}	O
static	O
void	O
builtin_ingrp	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
builtin_not_implemented	(*(char))->(void)
(	O
"ingrp"	*(char)
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
0	int
;	O
}	O
static	O
void	O
builtin_gname	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
builtin_not_implemented	(*(char))->(void)
(	O
"gname"	*(char)
)	O
;	O
builtin_str_noop	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
;	O
}	O
static	O
void	O
builtin_formataddr	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mu_address_t	*(struct)
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
dest	*(struct(*(char),int,int))
;	O
int	O
i	int
;	O
size_t	long
num	long
;	O
const	O
char	O
*	O
buf	*(char)
;	O
if	O
(	O
mh_string_is_null	(*(struct(long,*(char))))->(int)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ACC	int
]	O
)	O
)	O
dest	*(struct(*(char),int,int))
=	O
NULL	O
;	O
else	O
if	O
(	O
mu_address_create	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))),*(char))->(int)
(	O
&	O
dest	*(struct(*(char),int,int))
,	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ACC	int
]	O
)	O
)	O
)	O
return	O
;	O
if	O
(	O
!	O
mh_string_is_null	(*(struct(long,*(char))))->(int)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
&&	O
mu_address_create	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))),*(char))->(int)
(	O
&	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
)	O
==	O
0	int
)	O
{	O
mu_address_get_count	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),*(long))->(int)
(	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
&	O
num	long
)	O
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<=	O
num	long
;	O
i	int
++	O
)	O
{	O
if	O
(	O
mu_address_sget_email	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),long,*(*(char)))->(int)
(	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
i	int
,	O
&	O
buf	*(char)
)	O
==	O
0	int
&&	O
buf	*(char)
)	O
{	O
if	O
(	O
(	O
rcpt_mask	int
&	O
RCPT_ME	int
)	O
||	O
!	O
mh_is_my_name	(*(char))->(int)
(	O
buf	*(char)
)	O
)	O
{	O
mu_address_t	*(struct)
subaddr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
mu_address_get_nth	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),long,*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))->(int)
(	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
i	int
,	O
&	O
subaddr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
;	O
if	O
(	O
!	O
addrlist_lookup	(*(struct),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))->(int)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
addrlist	*(struct)
,	O
subaddr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
)	O
{	O
mu_list_append	(*(struct),*(void))->(int)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
addrlist	*(struct)
,	O
subaddr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
;	O
mu_address_union	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))->(int)
(	O
&	O
dest	*(struct(*(char),int,int))
,	O
subaddr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
;	O
}	O
else	O
mu_address_destroy	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))->(void)
(	O
&	O
subaddr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
;	O
}	O
}	O
}	O
}	O
if	O
(	O
mu_address_sget_printable	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),*(*(char)))->(int)
(	O
dest	*(struct(*(char),int,int))
,	O
&	O
buf	*(char)
)	O
==	O
0	int
&&	O
buf	*(char)
)	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
buf	*(char)
)	O
;	O
else	O
mh_string_clear	(*(struct(long,*(char))))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
)	O
;	O
mu_address_destroy	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))->(void)
(	O
&	O
dest	*(struct(*(char),int,int))
)	O
;	O
}	O
static	O
void	O
builtin_putaddr	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
if	O
(	O
!	O
mh_string_is_null	(*(struct(long,*(char))))->(int)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
)	O
print_hdr_string	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(char))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
)	O
;	O
if	O
(	O
!	O
mh_string_is_null	(*(struct(long,*(char))))->(int)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
)	O
)	O
print_hdr_string	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(char))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
)	O
)	O
;	O
}	O
static	O
void	O
builtin_unre	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
char	O
const	O
*	O
arg	*(char)
=	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
;	O
char	O
const	O
*	O
p	*(char)
;	O
int	O
rc	int
=	O
mu_unre_subject	(*(char),*(*(char)))->(int)
(	O
arg	*(char)
,	O
&	O
p	*(char)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
&&	O
p	*(char)
!=	O
arg	*(char)
)	O
{	O
char	O
*	O
q	*(char)
=	O
mu_strdup	(*(char))->(*(char))
(	O
p	*(char)
)	O
;	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
q	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
q	*(char)
)	O
;	O
}	O
else	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
arg	*(char)
)	O
;	O
}	O
static	O
void	O
builtin_isreply	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
int	O
rc	int
;	O
if	O
(	O
mh_string_is_null	(*(struct(long,*(char))))->(int)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
)	O
{	O
mu_header_t	*(struct)
hdr	*(struct)
=	O
NULL	O
;	O
char	O
*	O
value	*(char)
=	O
NULL	O
;	O
mu_message_get_header	(*(struct),*(*(struct)))->(int)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
message	*(struct)
,	O
&	O
hdr	*(struct)
)	O
;	O
mu_header_aget_value	O
(	O
hdr	*(struct)
,	O
MU_HEADER_SUBJECT	*(char)
,	O
&	O
value	*(char)
)	O
;	O
rc	int
=	O
mu_unre_subject	(*(char),*(*(char)))->(int)
(	O
value	*(char)
,	O
NULL	O
)	O
;	O
free	(*(void))->(void)
(	O
value	*(char)
)	O
;	O
}	O
else	O
rc	int
=	O
mu_unre_subject	(*(char),*(*(char)))->(int)
(	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
,	O
NULL	O
)	O
;	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
!	O
rc	int
;	O
}	O
static	O
void	O
builtin_decode	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
char	O
*	O
tmp	*(char)
;	O
if	O
(	O
mh_string_is_null	(*(struct(long,*(char))))->(int)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
)	O
return	O
;	O
if	O
(	O
mh_decode_2047	(*(char),*(*(char)))->(int)
(	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
,	O
&	O
tmp	*(char)
)	O
==	O
0	int
)	O
{	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
tmp	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
tmp	*(char)
)	O
;	O
}	O
}	O
static	O
void	O
builtin_reply_regex	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mh_set_reply_regex	(*(char))->(void)
(	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
)	O
;	O
}	O
int	O
mh_decode_rcpt_flag	(*(char))->(int)
(	O
const	O
char	O
*	O
arg	*(char)
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"to"	*(char)
)	O
==	O
0	int
)	O
return	O
RCPT_TO	int
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"cc"	*(char)
)	O
==	O
0	int
)	O
return	O
RCPT_CC	int
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"me"	*(char)
)	O
==	O
0	int
)	O
return	O
RCPT_ME	int
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"all"	*(char)
)	O
==	O
0	int
)	O
return	O
RCPT_ALL	O
;	O
return	O
RCPT_NONE	int
;	O
}	O
static	O
void	O
builtin_rcpt	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
int	O
rc	int
=	O
mh_decode_rcpt_flag	(*(char))->(int)
(	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
)	O
;	O
if	O
(	O
rc	int
==	O
RCPT_NONE	int
)	O
{	O
mu_error	(*(char))->(int)
(	O
_	O
(	O
"invalid recipient mask"	*(char)
)	O
)	O
;	O
}	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
num	long
[	O
R_REG	int
]	O
=	O
!	O
!	O
(	O
rc	int
&	O
rcpt_mask	int
)	O
;	O
}	O
static	O
void	O
builtin_printhdr	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
char	O
*	O
tmp	*(char)
=	O
NULL	O
;	O
size_t	long
s	*(char)
=	O
0	int
;	O
if	O
(	O
!	O
mh_string_is_null	(*(struct(long,*(char))))->(int)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
)	O
{	O
s	*(char)
=	O
mh_string_length	(*(struct(long,*(char))))->(long)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
;	O
tmp	*(char)
=	O
mu_strdup	(*(char))->(*(char))
(	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
)	O
;	O
}	O
if	O
(	O
!	O
mh_string_is_null	(*(struct(long,*(char))))->(int)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
)	O
)	O
{	O
s	*(char)
+=	O
mh_string_length	(*(struct(long,*(char))))->(long)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
)	O
+	O
1	int
;	O
tmp	*(char)
=	O
mu_realloc	(*(void),long)->(*(void))
(	O
tmp	*(char)
,	O
s	*(char)
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
mh_string_value	(*(struct(long,*(char))))->(*(char))
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
)	O
)	O
;	O
}	O
if	O
(	O
tmp	*(char)
)	O
{	O
print_hdr_string	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))),*(char))->(void)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
,	O
tmp	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
tmp	*(char)
)	O
;	O
}	O
}	O
static	O
void	O
builtin_in_reply_to	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
char	O
*	O
value	*(char)
;	O
mh_string_clear	(*(struct(long,*(char))))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
)	O
;	O
if	O
(	O
mu_rfc2822_in_reply_to	(*(struct),*(*(char)))->(int)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
message	*(struct)
,	O
&	O
value	*(char)
)	O
==	O
0	int
)	O
{	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
value	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
value	*(char)
)	O
;	O
}	O
}	O
static	O
void	O
builtin_references	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
char	O
*	O
value	*(char)
;	O
mh_string_clear	(*(struct(long,*(char))))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
)	O
;	O
if	O
(	O
mu_rfc2822_references	(*(struct),*(*(char)))->(int)
(	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
message	*(struct)
,	O
&	O
value	*(char)
)	O
==	O
0	int
)	O
{	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
value	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
value	*(char)
)	O
;	O
}	O
}	O
static	O
void	O
builtin_package	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
PACKAGE	*(char)
)	O
;	O
}	O
static	O
void	O
builtin_package_string	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
PACKAGE_STRING	*(char)
)	O
;	O
}	O
static	O
void	O
builtin_version	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
(	O
struct	O
mh_fvm	struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct`))->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))
*	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
)	O
{	O
mh_string_load	(*(struct(long,*(char))),*(char))->(void)
(	O
&	O
mach	*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*`)->(void)),long,*(void),long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct)))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
,	O
VERSION	*(char)
)	O
;	O
}	O
mh_builtin_t	struct
builtin_tab	array(struct(*(char),*((*(struct(array(long),array(struct(long,*(char))),*`,long,long,long,long,*`,int,long,long,*`,int,*`,int,*`)))->(void)),enum(int,int,int),enum(int,int,int),int))
[	O
]	O
=	O
{	O
{	O
"msg"	*(char)
,	O
builtin_msg	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_none	int
}	O
,	O
{	O
"cur"	*(char)
,	O
builtin_cur	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_none	int
}	O
,	O
{	O
"size"	*(char)
,	O
builtin_size	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_none	int
}	O
,	O
{	O
"strlen"	*(char)
,	O
builtin_strlen	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_none	int
}	O
,	O
{	O
"width"	*(char)
,	O
builtin_width	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_none	int
}	O
,	O
{	O
"charleft"	*(char)
,	O
builtin_charleft	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_none	int
}	O
,	O
{	O
"timenow"	*(char)
,	O
builtin_timenow	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_none	int
}	O
,	O
{	O
"me"	*(char)
,	O
builtin_me	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_none	int
}	O
,	O
{	O
"myhost"	*(char)
,	O
builtin_myhost	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_none	int
}	O
,	O
{	O
"myname"	*(char)
,	O
builtin_myname	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_none	int
}	O
,	O
{	O
"localmbox"	*(char)
,	O
builtin_localmbox	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_none	int
}	O
,	O
{	O
"eq"	*(char)
,	O
builtin_eq	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_num	int
,	O
MHA_LITERAL	int
}	O
,	O
{	O
"ne"	*(char)
,	O
builtin_ne	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_num	int
,	O
MHA_LITERAL	int
}	O
,	O
{	O
"gt"	*(char)
,	O
builtin_gt	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_num	int
,	O
MHA_LITERAL	int
}	O
,	O
{	O
"match"	*(char)
,	O
builtin_match	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_str	int
,	O
MHA_LITERAL	int
}	O
,	O
{	O
"amatch"	*(char)
,	O
builtin_amatch	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_str	int
,	O
MHA_LITERAL	int
}	O
,	O
{	O
"plus"	*(char)
,	O
builtin_plus	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_num	int
,	O
MHA_LITERAL	int
}	O
,	O
{	O
"minus"	*(char)
,	O
builtin_minus	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_num	int
,	O
MHA_LITERAL	int
}	O
,	O
{	O
"divide"	*(char)
,	O
builtin_divide	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_num	int
,	O
MHA_LITERAL	int
}	O
,	O
{	O
"modulo"	*(char)
,	O
builtin_modulo	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_num	int
,	O
MHA_LITERAL	int
}	O
,	O
{	O
"num"	*(char)
,	O
NULL	O
,	O
mhtype_num	int
,	O
mhtype_num	int
,	O
MHA_LITERAL	int
|	O
MHA_OPTARG	int
|	O
MHA_OPTARG_NIL	int
|	O
MHA_SPECIAL	int
}	O
,	O
{	O
"lit"	*(char)
,	O
NULL	O
,	O
mhtype_str	int
,	O
mhtype_str	int
,	O
MHA_LITERAL	int
|	O
MHA_OPTARG	int
|	O
MHA_OPTARG_NIL	int
|	O
MHA_SPECIAL	int
}	O
,	O
{	O
"getenv"	*(char)
,	O
builtin_getenv	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_str	int
,	O
MHA_LITERAL	int
}	O
,	O
{	O
"profile"	*(char)
,	O
builtin_profile	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_str	int
,	O
MHA_LITERAL	int
}	O
,	O
{	O
"nonzero"	*(char)
,	O
builtin_nonzero	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_num	int
,	O
MHA_OPTARG	int
}	O
,	O
{	O
"zero"	*(char)
,	O
builtin_zero	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_num	int
,	O
MHA_OPTARG	int
}	O
,	O
{	O
"null"	*(char)
,	O
builtin_null	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_str	int
,	O
MHA_OPTARG	int
}	O
,	O
{	O
"nonnull"	*(char)
,	O
builtin_nonnull	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_str	int
,	O
MHA_OPTARG	int
}	O
,	O
{	O
"comp"	*(char)
,	O
builtin_comp	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_str	int
}	O
,	O
{	O
"compval"	*(char)
,	O
builtin_compval	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_str	int
}	O
,	O
{	O
"trim"	*(char)
,	O
builtin_trim	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_none	int
,	O
mhtype_str	int
,	O
MHA_OPTARG	int
}	O
,	O
{	O
"putstr"	*(char)
,	O
NULL	O
,	O
mhtype_str	int
,	O
mhtype_str	int
,	O
MHA_SPECIAL	int
|	O
MHA_OPTARG	int
|	O
MHA_OPTARG	int
|	O
MHA_IGNOREFMT	int
}	O
,	O
{	O
"putstrf"	*(char)
,	O
NULL	O
,	O
mhtype_str	int
,	O
mhtype_str	int
,	O
MHA_SPECIAL	int
|	O
MHA_OPTARG	int
}	O
,	O
{	O
"putnum"	*(char)
,	O
NULL	O
,	O
mhtype_num	int
,	O
mhtype_num	int
,	O
MHA_SPECIAL	int
|	O
MHA_OPTARG	int
|	O
MHA_IGNOREFMT	int
}	O
,	O
{	O
"putnumf"	*(char)
,	O
NULL	O
,	O
mhtype_num	int
,	O
mhtype_num	int
,	O
MHA_SPECIAL	int
|	O
MHA_OPTARG	int
}	O
,	O
{	O
"sec"	*(char)
,	O
builtin_sec	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_str	int
}	O
,	O
{	O
"min"	*(char)
,	O
builtin_min	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_str	int
}	O
,	O
{	O
"hour"	*(char)
,	O
builtin_hour	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_str	int
}	O
,	O
{	O
"wday"	*(char)
,	O
builtin_wday	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_str	int
}	O
,	O
{	O
"day"	*(char)
,	O
builtin_day	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_str	int
}	O
,	O
{	O
"weekday"	*(char)
,	O
builtin_weekday	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_str	int
}	O
,	O
{	O
"sday"	*(char)
,	O
builtin_sday	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_str	int
}	O
,	O
{	O
"mday"	*(char)
,	O
builtin_mday	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_str	int
}	O
,	O
{	O
"yday"	*(char)
,	O
builtin_yday	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_str	int
}	O
,	O
{	O
"mon"	*(char)
,	O
builtin_mon	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_str	int
}	O
,	O
{	O
"month"	*(char)
,	O
builtin_month	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_str	int
}	O
,	O
{	O
"lmonth"	*(char)
,	O
builtin_lmonth	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_str	int
}	O
,	O
{	O
"year"	*(char)
,	O
builtin_year	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_str	int
}	O
,	O
{	O
"zone"	*(char)
,	O
builtin_zone	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_str	int
}	O
,	O
{	O
"tzone"	*(char)
,	O
builtin_tzone	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_str	int
}	O
,	O
{	O
"szone"	*(char)
,	O
builtin_szone	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_str	int
}	O
,	O
{	O
"date2local"	*(char)
,	O
builtin_date2local	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_none	int
,	O
mhtype_str	int
}	O
,	O
{	O
"date2gmt"	*(char)
,	O
builtin_date2gmt	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_none	int
,	O
mhtype_str	int
}	O
,	O
{	O
"dst"	*(char)
,	O
builtin_dst	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_str	int
}	O
,	O
{	O
"clock"	*(char)
,	O
builtin_clock	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_str	int
}	O
,	O
{	O
"rclock"	*(char)
,	O
builtin_rclock	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_str	int
}	O
,	O
{	O
"tws"	*(char)
,	O
builtin_tws	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_str	int
}	O
,	O
{	O
"pretty"	*(char)
,	O
builtin_pretty	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_str	int
}	O
,	O
{	O
"nodate"	*(char)
,	O
builtin_nodate	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_str	int
}	O
,	O
{	O
"proper"	*(char)
,	O
builtin_proper	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_str	int
}	O
,	O
{	O
"friendly"	*(char)
,	O
builtin_friendly	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_str	int
}	O
,	O
{	O
"addr"	*(char)
,	O
builtin_addr	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_str	int
}	O
,	O
{	O
"pers"	*(char)
,	O
builtin_pers	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_str	int
}	O
,	O
{	O
"note"	*(char)
,	O
builtin_note	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_str	int
}	O
,	O
{	O
"mbox"	*(char)
,	O
builtin_mbox	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_str	int
}	O
,	O
{	O
"mymbox"	*(char)
,	O
builtin_mymbox	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_str	int
}	O
,	O
{	O
"host"	*(char)
,	O
builtin_host	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_str	int
}	O
,	O
{	O
"nohost"	*(char)
,	O
builtin_nohost	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_str	int
}	O
,	O
{	O
"type"	*(char)
,	O
builtin_type	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_str	int
}	O
,	O
{	O
"path"	*(char)
,	O
builtin_path	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_str	int
}	O
,	O
{	O
"ingrp"	*(char)
,	O
builtin_ingrp	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_str	int
}	O
,	O
{	O
"gname"	*(char)
,	O
builtin_gname	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_str	int
}	O
,	O
{	O
"formataddr"	*(char)
,	O
builtin_formataddr	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_none	int
,	O
mhtype_str	int
,	O
MHA_ACC	int
}	O
,	O
{	O
"putaddr"	*(char)
,	O
builtin_putaddr	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_none	int
,	O
mhtype_str	int
,	O
MHA_LITERAL	int
}	O
,	O
{	O
"unre"	*(char)
,	O
builtin_unre	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_str	int
}	O
,	O
{	O
"rcpt"	*(char)
,	O
builtin_rcpt	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_str	int
,	O
MHA_LITERAL	int
}	O
,	O
{	O
"printhdr"	*(char)
,	O
builtin_printhdr	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_none	int
,	O
mhtype_str	int
,	O
MHA_LITERAL	int
}	O
,	O
{	O
"in_reply_to"	*(char)
,	O
builtin_in_reply_to	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_none	int
}	O
,	O
{	O
"references"	*(char)
,	O
builtin_references	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_none	int
}	O
,	O
{	O
"package"	*(char)
,	O
builtin_package	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_none	int
}	O
,	O
{	O
"package_string"	*(char)
,	O
builtin_package_string	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_none	int
}	O
,	O
{	O
"version"	*(char)
,	O
builtin_version	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_none	int
}	O
,	O
{	O
"reply_regex"	*(char)
,	O
builtin_reply_regex	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_none	int
,	O
mhtype_str	int
}	O
,	O
{	O
"isreply"	*(char)
,	O
builtin_isreply	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_num	int
,	O
mhtype_str	int
,	O
MHA_OPTARG	int
}	O
,	O
{	O
"decode"	*(char)
,	O
builtin_decode	(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))->(void)
,	O
mhtype_str	int
,	O
mhtype_str	int
}	O
,	O
{	O
"void"	*(char)
,	O
NULL	O
,	O
mhtype_none	int
,	O
mhtype_str	int
,	O
MHA_VOID	int
}	O
,	O
{	O
0	int
}	O
}	O
;	O
mh_builtin_t	struct
*	O
mh_lookup_builtin	(*(char),long)->(*(struct(*(char),*((*`)->(void)),enum(int,int,int),enum(int,int,int),int)))
(	O
char	O
*	O
name	*(char)
,	O
size_t	long
len	int
)	O
{	O
mh_builtin_t	struct
*	O
bp	*(struct(*(char),*((*(struct`))->(void)),enum(int,int,int),enum(int,int,int),int))
;	O
for	O
(	O
bp	*(struct(*(char),*((*(struct`))->(void)),enum(int,int,int),enum(int,int,int),int))
=	O
builtin_tab	array(struct(*(char),*((*(struct(array(long),array(struct(long,*(char))),*`,long,long,long,long,*`,int,long,long,*`,int,*`,int,*`)))->(void)),enum(int,int,int),enum(int,int,int),int))
;	O
bp	*(struct(*(char),*((*(struct`))->(void)),enum(int,int,int),enum(int,int,int),int))
->	O
name	*(char)
;	O
bp	*(struct(*(char),*((*(struct`))->(void)),enum(int,int,int),enum(int,int,int),int))
++	O
)	O
{	O
if	O
(	O
strlen	(*(char))->(long)
(	O
bp	*(struct(*(char),*((*(struct`))->(void)),enum(int,int,int),enum(int,int,int),int))
->	O
name	*(char)
)	O
==	O
len	int
&&	O
memcmp	(*(void),*(void),long)->(int)
(	O
name	*(char)
,	O
bp	*(struct(*(char),*((*(struct`))->(void)),enum(int,int,int),enum(int,int,int),int))
->	O
name	*(char)
,	O
len	int
)	O
==	O
0	int
)	O
return	O
bp	*(struct(*(char),*((*(struct`))->(void)),enum(int,int,int),enum(int,int,int),int))
;	O
}	O
return	O
NULL	O
;	O
}	O
char	O
*	O
_get_builtin_name	(*((*(struct(array(long),array(struct(long,*(char))),*`,long,long,long,long,*`,int,long,long,*`,int,*`,int,*`)))->(void)))->(*(char))
(	O
mh_builtin_fp	*((*(struct))->(void))
ptr	*(*(char))
)	O
{	O
mh_builtin_t	struct
*	O
bp	*(struct(*(char),*((*(struct`))->(void)),enum(int,int,int),enum(int,int,int),int))
;	O
for	O
(	O
bp	*(struct(*(char),*((*(struct`))->(void)),enum(int,int,int),enum(int,int,int),int))
=	O
builtin_tab	array(struct(*(char),*((*(struct(array(long),array(struct(long,*(char))),*`,long,long,long,long,*`,int,long,long,*`,int,*`,int,*`)))->(void)),enum(int,int,int),enum(int,int,int),int))
;	O
bp	*(struct(*(char),*((*(struct`))->(void)),enum(int,int,int),enum(int,int,int),int))
->	O
name	*(char)
;	O
bp	*(struct(*(char),*((*(struct`))->(void)),enum(int,int,int),enum(int,int,int),int))
++	O
)	O
if	O
(	O
bp	*(struct(*(char),*((*(struct`))->(void)),enum(int,int,int),enum(int,int,int),int))
->	O
fun	*((*(char),*(struct),*(void))->(int))
==	O
ptr	*(*(char))
)	O
return	O
bp	*(struct(*(char),*((*(struct`))->(void)),enum(int,int,int),enum(int,int,int),int))
->	O
name	*(char)
;	O
return	O
NULL	O
;	O
}	O
size_t	long
find_label	(*(long),long)->(long)
(	O
size_t	long
*	O
lab	*(long)
,	O
size_t	long
pc	long
)	O
{	O
if	O
(	O
lab	*(long)
)	O
{	O
size_t	long
i	int
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<=	O
lab	*(long)
[	O
0	int
]	O
;	O
i	int
++	O
)	O
{	O
if	O
(	O
lab	*(long)
[	O
i	int
]	O
==	O
pc	long
)	O
return	O
i	int
;	O
}	O
}	O
return	O
0	int
;	O
}	O
static	O
int	O
comp_pc	(*(void),*(void))->(int)
(	O
const	O
void	O
*	O
a	*(struct(int,int,array(char),array(char)))
,	O
const	O
void	O
*	O
b	*(struct(int,int,array(char),array(char)))
)	O
{	O
size_t	long
pca	long
=	O
*	O
(	O
size_t	long
*	O
)	O
a	*(struct(int,int,array(char),array(char)))
;	O
size_t	long
pcb	long
=	O
*	O
(	O
size_t	long
*	O
)	O
b	*(struct(int,int,array(char),array(char)))
;	O
if	O
(	O
pca	long
<	O
pcb	long
)	O
return	O
-	O
1	int
;	O
else	O
if	O
(	O
pca	long
>	O
pcb	long
)	O
return	O
1	int
;	O
return	O
0	int
;	O
}	O
static	O
size_t	long
*	O
extract_labels	(*(struct(long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),*(struct),*(struct))))->(*(long))
(	O
mh_format_t	*(struct)
fmt	*(char)
)	O
{	O
size_t	long
*	O
lab	*(long)
;	O
size_t	long
pc	long
;	O
long	O
n	long
;	O
lab	*(long)
=	O
mu_calloc	(long,long)->(*(void))
(	O
fmt	*(char)
->	O
progcnt	long
,	O
sizeof	O
(	O
lab	*(long)
[	O
0	int
]	O
)	O
)	O
;	O
lab	*(long)
[	O
0	int
]	O
=	O
0	int
;	O
for	O
(	O
pc	long
=	O
1	int
;	O
pc	long
<	O
fmt	*(char)
->	O
progcnt	long
;	O
)	O
{	O
mh_opcode_t	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
opcode	int
=	O
MHI_OPCODE	O
(	O
fmt	*(char)
->	O
prog	*(char)
[	O
pc	long
++	O
]	O
)	O
;	O
if	O
(	O
opcode	int
==	O
mhop_stop	int
)	O
break	O
;	O
switch	O
(	O
opcode	int
)	O
{	O
case	O
mhop_branch	int
:	O
case	O
mhop_brzn	int
:	O
case	O
mhop_brzs	int
:	O
n	long
=	O
MHI_NUM	O
(	O
fmt	*(char)
->	O
prog	*(char)
[	O
pc	long
++	O
]	O
)	O
;	O
if	O
(	O
!	O
find_label	(*(long),long)->(long)
(	O
lab	*(long)
,	O
pc	long
+	O
n	long
-	O
1	int
)	O
)	O
lab	*(long)
[	O
++	O
lab	*(long)
[	O
0	int
]	O
]	O
=	O
pc	long
+	O
n	long
-	O
1	int
;	O
break	O
;	O
case	O
mhop_setn	int
:	O
pc	long
+=	O
2	int
;	O
break	O
;	O
case	O
mhop_sets	int
:	O
case	O
mhop_ldcomp	int
:	O
pc	long
+=	O
2	int
+	O
MHI_NUM	O
(	O
fmt	*(char)
->	O
prog	*(char)
[	O
pc	long
+	O
1	int
]	O
)	O
;	O
break	O
;	O
case	O
mhop_movn	int
:	O
case	O
mhop_movs	int
:	O
pc	long
+=	O
2	int
;	O
break	O
;	O
case	O
mhop_ldbody	int
:	O
case	O
mhop_call	int
:	O
case	O
mhop_fmtspec	int
:	O
pc	long
++	O
;	O
break	O
;	O
case	O
mhop_printlit	int
:	O
pc	long
+=	O
1	int
+	O
MHI_NUM	O
(	O
fmt	*(char)
->	O
prog	*(char)
[	O
pc	long
]	O
)	O
;	O
break	O
;	O
case	O
mhop_atoi	int
:	O
case	O
mhop_itoa	int
:	O
case	O
mhop_printn	int
:	O
case	O
mhop_prints	int
:	O
case	O
mhop_pushn	int
:	O
case	O
mhop_popn	int
:	O
case	O
mhop_xchgn	int
:	O
break	O
;	O
default	O
:	O
abort	()->(void)
(	O
)	O
;	O
}	O
}	O
if	O
(	O
lab	*(long)
[	O
0	int
]	O
>	O
0	int
)	O
qsort	(*(void),long,long,*((*(void),*(void))->(int)))->(void)
(	O
lab	*(long)
+	O
1	int
,	O
lab	*(long)
[	O
0	int
]	O
,	O
sizeof	O
lab	*(long)
[	O
0	int
]	O
,	O
comp_pc	(*(void),*(void))->(int)
)	O
;	O
return	O
lab	*(long)
;	O
}	O
void	O
format_label	(*(long),long,*(*(char)),*(long))->(void)
(	O
size_t	long
*	O
lab	*(long)
,	O
size_t	long
pc	long
,	O
char	O
*	O
*	O
pbuf	*(*(char))
,	O
size_t	long
*	O
psz	*(long)
)	O
{	O
size_t	long
ln	long
=	O
find_label	(*(long),long)->(long)
(	O
lab	*(long)
,	O
pc	long
)	O
;	O
if	O
(	O
ln	long
)	O
mu_asnprintf	(*(*(char)),*(long),*(char))->(int)
(	O
pbuf	*(*(char))
,	O
psz	*(long)
,	O
"L%ld"	*(char)
,	O
(	O
long	O
)	O
ln	long
)	O
;	O
else	O
mu_asnprintf	(*(*(char)),*(long),*(char))->(int)
(	O
pbuf	*(*(char))
,	O
psz	*(long)
,	O
"%ld"	*(char)
,	O
(	O
long	O
)	O
pc	long
)	O
;	O
}	O
void	O
mh_format_dump_disass	(*(struct),int)->(void)
(	O
mh_format_t	*(struct)
fmt	*(char)
,	O
int	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
{	O
mh_instr_t	union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*((*(struct))->(void)),long,*(void),long,array(char))
*	O
prog	*(char)
=	O
fmt	*(char)
->	O
prog	*(char)
;	O
size_t	long
pc	long
=	O
1	int
;	O
int	O
stop	int
=	O
0	int
;	O
static	O
char	O
*	O
regname	array(*(char))
[	O
]	O
=	O
{	O
[	O
R_REG	int
]	O
=	O
"reg"	*(char)
,	O
[	O
R_ARG	int
]	O
=	O
"arg"	*(char)
,	O
[	O
R_ACC	int
]	O
=	O
"acc"	*(char)
}	O
;	O
static	O
char	O
c_trans	array(char)
[	O
]	O
=	O
"\\\\\"\"a\ab\bf\fn\nr\rt\tv\v"	*(char)
;	O
size_t	long
*	O
lab	*(long)
;	O
size_t	long
lc	long
;	O
char	O
*	O
lbuf	*(char)
=	O
NULL	O
;	O
size_t	long
lsz	long
=	O
0	int
;	O
if	O
(	O
!	O
prog	*(char)
)	O
return	O
;	O
if	O
(	O
!	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
lab	*(long)
=	O
extract_labels	(*(struct(long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),*(struct),*(struct))))->(*(long))
(	O
fmt	*(char)
)	O
;	O
else	O
lab	*(long)
=	O
NULL	O
;	O
lc	long
=	O
lab	*(long)
?	O
1	int
:	O
0	int
;	O
while	O
(	O
!	O
stop	int
)	O
{	O
mh_opcode_t	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
opcode	int
;	O
if	O
(	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
printf	(*(char))->(int)
(	O
"% 4.4ld: "	*(char)
,	O
(	O
long	O
)	O
pc	long
)	O
;	O
else	O
{	O
int	O
w	int
=	O
0	int
;	O
if	O
(	O
lc	long
<=	O
lab	*(long)
[	O
0	int
]	O
&&	O
lab	*(long)
[	O
lc	long
]	O
==	O
pc	long
)	O
{	O
w	int
=	O
printf	(*(char))->(int)
(	O
"L%ld:"	*(char)
,	O
(	O
long	O
)	O
lc	long
)	O
;	O
lc	long
++	O
;	O
}	O
if	O
(	O
w	int
>	O
8	int
)	O
{	O
putchar	(int)->(int)
(	O
'\n'	O
)	O
;	O
w	int
=	O
0	int
;	O
}	O
while	O
(	O
w	int
<	O
8	int
)	O
{	O
putchar	(int)->(int)
(	O
' '	O
)	O
;	O
w	int
++	O
;	O
}	O
}	O
switch	O
(	O
opcode	int
=	O
MHI_OPCODE	O
(	O
prog	*(char)
[	O
pc	long
++	O
]	O
)	O
)	O
{	O
case	O
mhop_stop	int
:	O
printf	(*(char))->(int)
(	O
"stop"	*(char)
)	O
;	O
stop	int
=	O
1	int
;	O
break	O
;	O
case	O
mhop_branch	int
:	O
{	O
long	O
n	long
=	O
MHI_NUM	O
(	O
prog	*(char)
[	O
pc	long
++	O
]	O
)	O
;	O
format_label	(*(long),long,*(*(char)),*(long))->(void)
(	O
lab	*(long)
,	O
pc	long
+	O
n	long
-	O
1	int
,	O
&	O
lbuf	*(char)
,	O
&	O
lsz	long
)	O
;	O
printf	(*(char))->(int)
(	O
"branch %s"	*(char)
,	O
lbuf	*(char)
)	O
;	O
}	O
break	O
;	O
case	O
mhop_brzn	int
:	O
{	O
long	O
n	long
=	O
MHI_NUM	O
(	O
prog	*(char)
[	O
pc	long
++	O
]	O
)	O
;	O
format_label	(*(long),long,*(*(char)),*(long))->(void)
(	O
lab	*(long)
,	O
pc	long
+	O
n	long
-	O
1	int
,	O
&	O
lbuf	*(char)
,	O
&	O
lsz	long
)	O
;	O
printf	(*(char))->(int)
(	O
"brzn %s"	*(char)
,	O
lbuf	*(char)
)	O
;	O
}	O
break	O
;	O
case	O
mhop_brzs	int
:	O
{	O
long	O
n	long
=	O
MHI_NUM	O
(	O
prog	*(char)
[	O
pc	long
++	O
]	O
)	O
;	O
format_label	(*(long),long,*(*(char)),*(long))->(void)
(	O
lab	*(long)
,	O
pc	long
+	O
n	long
-	O
1	int
,	O
&	O
lbuf	*(char)
,	O
&	O
lsz	long
)	O
;	O
printf	(*(char))->(int)
(	O
"brzs %s"	*(char)
,	O
lbuf	*(char)
)	O
;	O
}	O
break	O
;	O
case	O
mhop_setn	int
:	O
{	O
long	O
reg	long
=	O
MHI_NUM	O
(	O
prog	*(char)
[	O
pc	long
++	O
]	O
)	O
;	O
long	O
n	long
=	O
MHI_NUM	O
(	O
prog	*(char)
[	O
pc	long
++	O
]	O
)	O
;	O
printf	(*(char))->(int)
(	O
"setn %s, %ld"	*(char)
,	O
regname	array(*(char))
[	O
reg	long
]	O
,	O
n	long
)	O
;	O
}	O
break	O
;	O
case	O
mhop_sets	int
:	O
{	O
long	O
reg	long
=	O
MHI_NUM	O
(	O
prog	*(char)
[	O
pc	long
++	O
]	O
)	O
;	O
size_t	long
skip	long
=	O
MHI_NUM	O
(	O
prog	*(char)
[	O
pc	long
++	O
]	O
)	O
;	O
char	O
const	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
=	O
MHI_STR	O
(	O
prog	*(char)
[	O
pc	long
]	O
)	O
;	O
char	O
*	O
prt	*(char)
;	O
MU_ASSERT	O
(	O
mu_c_str_escape_trans	(*(char),*(char),*(*(char)))->(int)
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
c_trans	array(char)
,	O
&	O
prt	*(char)
)	O
)	O
;	O
pc	long
+=	O
skip	long
;	O
printf	(*(char))->(int)
(	O
"sets %s, \"%s\""	*(char)
,	O
regname	array(*(char))
[	O
reg	long
]	O
,	O
prt	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
prt	*(char)
)	O
;	O
}	O
break	O
;	O
case	O
mhop_movn	int
:	O
{	O
long	O
dst	*(char)
=	O
MHI_NUM	O
(	O
prog	*(char)
[	O
pc	long
++	O
]	O
)	O
;	O
long	O
src	*(char)
=	O
MHI_NUM	O
(	O
prog	*(char)
[	O
pc	long
++	O
]	O
)	O
;	O
printf	(*(char))->(int)
(	O
"movn %s, %s"	*(char)
,	O
regname	array(*(char))
[	O
dst	*(char)
]	O
,	O
regname	array(*(char))
[	O
src	*(char)
]	O
)	O
;	O
}	O
break	O
;	O
case	O
mhop_movs	int
:	O
{	O
long	O
dst	*(char)
=	O
MHI_NUM	O
(	O
prog	*(char)
[	O
pc	long
++	O
]	O
)	O
;	O
long	O
src	*(char)
=	O
MHI_NUM	O
(	O
prog	*(char)
[	O
pc	long
++	O
]	O
)	O
;	O
printf	(*(char))->(int)
(	O
"movs %s, %s"	*(char)
,	O
regname	array(*(char))
[	O
dst	*(char)
]	O
,	O
regname	array(*(char))
[	O
src	*(char)
]	O
)	O
;	O
}	O
break	O
;	O
case	O
mhop_pushn	int
:	O
printf	(*(char))->(int)
(	O
"pushn"	*(char)
)	O
;	O
break	O
;	O
case	O
mhop_popn	int
:	O
printf	(*(char))->(int)
(	O
"popn"	*(char)
)	O
;	O
break	O
;	O
case	O
mhop_xchgn	int
:	O
printf	(*(char))->(int)
(	O
"xchgn"	*(char)
)	O
;	O
break	O
;	O
case	O
mhop_ldcomp	int
:	O
{	O
long	O
reg	long
=	O
MHI_NUM	O
(	O
prog	*(char)
[	O
pc	long
++	O
]	O
)	O
;	O
size_t	long
skip	long
=	O
MHI_NUM	O
(	O
prog	*(char)
[	O
pc	long
++	O
]	O
)	O
;	O
char	O
const	O
*	O
comp	*(char)
=	O
MHI_STR	O
(	O
prog	*(char)
[	O
pc	long
]	O
)	O
;	O
pc	long
+=	O
skip	long
;	O
printf	(*(char))->(int)
(	O
"ldcomp %s, \"%s\""	*(char)
,	O
regname	array(*(char))
[	O
reg	long
]	O
,	O
comp	*(char)
)	O
;	O
}	O
break	O
;	O
case	O
mhop_ldbody	int
:	O
{	O
long	O
reg	long
=	O
MHI_NUM	O
(	O
prog	*(char)
[	O
pc	long
++	O
]	O
)	O
;	O
printf	(*(char))->(int)
(	O
"ldbody %s"	*(char)
,	O
regname	array(*(char))
[	O
reg	long
]	O
)	O
;	O
}	O
break	O
;	O
case	O
mhop_call	int
:	O
{	O
char	O
*	O
name	*(char)
=	O
_get_builtin_name	(*((*(struct(array(long),array(struct(long,*(char))),*`,long,long,long,long,*`,int,long,long,*`,int,*`,int,*`)))->(void)))->(*(char))
(	O
MHI_BUILTIN	O
(	O
prog	*(char)
[	O
pc	long
++	O
]	O
)	O
)	O
;	O
printf	(*(char))->(int)
(	O
"call %s"	*(char)
,	O
name	*(char)
?	O
name	*(char)
:	O
"UNKNOWN"	*(char)
)	O
;	O
}	O
break	O
;	O
case	O
mhop_atoi	int
:	O
printf	(*(char))->(int)
(	O
"atoi"	*(char)
)	O
;	O
break	O
;	O
case	O
mhop_itoa	int
:	O
printf	(*(char))->(int)
(	O
"itoa"	*(char)
)	O
;	O
break	O
;	O
case	O
mhop_printn	int
:	O
printf	(*(char))->(int)
(	O
"printn"	*(char)
)	O
;	O
break	O
;	O
case	O
mhop_prints	int
:	O
printf	(*(char))->(int)
(	O
"prints"	*(char)
)	O
;	O
break	O
;	O
case	O
mhop_printlit	int
:	O
{	O
size_t	long
skip	long
=	O
MHI_NUM	O
(	O
prog	*(char)
[	O
pc	long
++	O
]	O
)	O
;	O
char	O
const	O
*	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
=	O
MHI_STR	O
(	O
prog	*(char)
[	O
pc	long
]	O
)	O
;	O
char	O
*	O
prt	*(char)
;	O
pc	long
+=	O
skip	long
;	O
MU_ASSERT	O
(	O
mu_c_str_escape_trans	(*(char),*(char),*(*(char)))->(int)
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
c_trans	array(char)
,	O
&	O
prt	*(char)
)	O
)	O
;	O
printf	(*(char))->(int)
(	O
"printlit \"%s\""	*(char)
,	O
prt	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
prt	*(char)
)	O
;	O
}	O
break	O
;	O
case	O
mhop_fmtspec	int
:	O
{	O
int	O
fmtspec	int
=	O
MHI_NUM	O
(	O
prog	*(char)
[	O
pc	long
++	O
]	O
)	O
;	O
printf	(*(char))->(int)
(	O
"fmtspec "	*(char)
)	O
;	O
mh_print_fmtspec	(int)->(void)
(	O
fmtspec	int
)	O
;	O
printf	(*(char))->(int)
(	O
", %d"	*(char)
,	O
fmtspec	int
&	O
MH_WIDTH_MASK	int
)	O
;	O
}	O
break	O
;	O
default	O
:	O
abort	()->(void)
(	O
)	O
;	O
}	O
printf	(*(char))->(int)
(	O
"\n"	*(char)
)	O
;	O
}	O
free	(*(void))->(void)
(	O
lbuf	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
lab	*(long)
)	O
;	O
}	O
void	O
mh_fvm_create	(*(*(struct)),int)->(void)
(	O
mh_fvm_t	*(struct)
*	O
fvmp	*(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))
,	O
int	O
flags	int
)	O
{	O
mh_fvm_t	*(struct)
fvm	*(*(struct))
;	O
const	O
char	O
*	O
charset	*(char)
;	O
fvm	*(*(struct))
=	O
mu_zalloc	(long)->(*(void))
(	O
sizeof	O
*	O
fvm	*(*(struct))
)	O
;	O
fvm	*(*(struct))
->	O
flags	int
=	O
flags	int
;	O
fvm	*(*(struct))
->	O
output	*(char)
=	O
mu_strout	*(struct)
;	O
mu_stream_ref	(*(struct))->(void)
(	O
fvm	*(*(struct))
->	O
output	*(char)
)	O
;	O
MU_ASSERT	O
(	O
mu_list_create	(*(*(struct)))->(int)
(	O
&	O
fvm	*(*(struct))
->	O
addrlist	*(struct)
)	O
)	O
;	O
charset	*(char)
=	O
mh_global_profile_get	O
(	O
"Charset"	*(char)
,	O
NULL	O
)	O
;	O
if	O
(	O
charset	*(char)
&&	O
strcmp	(*(char),*(char))->(int)
(	O
charset	*(char)
,	O
"auto"	*(char)
)	O
)	O
{	O
const	O
char	O
*	O
lc_base	*(char)
=	O
mh_global_profile_get	O
(	O
"LC_BASE"	*(char)
,	O
"en_US"	*(char)
)	O
;	O
char	O
*	O
locale	*(char)
=	O
mu_alloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
lc_base	*(char)
)	O
+	O
1	int
+	O
strlen	(*(char))->(long)
(	O
charset	*(char)
)	O
+	O
1	int
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
locale	*(char)
,	O
lc_base	*(char)
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
locale	*(char)
,	O
"."	*(char)
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
locale	*(char)
,	O
charset	*(char)
)	O
;	O
if	O
(	O
!	O
setlocale	(int,*(char))->(*(char))
(	O
LC_CTYPE	O
,	O
locale	*(char)
)	O
)	O
mu_error	(*(char))->(int)
(	O
_	O
(	O
"cannot set LC_CTYPE %s"	*(char)
)	O
,	O
locale	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
locale	*(char)
)	O
;	O
}	O
*	O
fvmp	*(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))
=	O
fvm	*(*(struct))
;	O
}	O
void	O
mh_fvm_destroy	(*(*(struct)))->(void)
(	O
mh_fvm_t	*(struct)
*	O
fvmp	*(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))
)	O
{	O
if	O
(	O
fvmp	*(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))
)	O
{	O
mh_fvm_t	*(struct)
fvm	*(*(struct))
=	O
*	O
fvmp	*(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))
;	O
free	(*(void))->(void)
(	O
fvm	*(*(struct))
->	O
prog	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
fvm	*(*(struct))
->	O
numstack	*(long)
)	O
;	O
mh_string_free	(*(struct(long,*(char))))->(void)
(	O
&	O
fvm	*(*(struct))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_REG	int
]	O
)	O
;	O
mh_string_free	(*(struct(long,*(char))))->(void)
(	O
&	O
fvm	*(*(struct))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ARG	int
]	O
)	O
;	O
mh_string_free	(*(struct(long,*(char))))->(void)
(	O
&	O
fvm	*(*(struct))
->	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
[	O
R_ACC	int
]	O
)	O
;	O
addrlist_destroy	(*(*(struct)))->(void)
(	O
&	O
fvm	*(*(struct))
->	O
addrlist	*(struct)
)	O
;	O
mu_stream_unref	(*(struct))->(void)
(	O
fvm	*(*(struct))
->	O
output	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
fvm	*(*(struct))
)	O
;	O
*	O
fvmp	*(*(struct(array(long),array(struct(long,*(char))),*(long),long,long,long,long,*(union(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,long,*`,long,array(char))),int,long,long,*(struct),int,*(struct),int,*(struct))))
=	O
fvm	*(*(struct))
;	O
}	O
}	O
void	O
mh_fvm_set_output	(*(struct),*(struct))->(void)
(	O
mh_fvm_t	*(struct)
fvm	*(*(struct))
,	O
mu_stream_t	*(struct)
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
{	O
mu_stream_unref	(*(struct))->(void)
(	O
fvm	*(*(struct))
->	O
output	*(char)
)	O
;	O
fvm	*(*(struct))
->	O
output	*(char)
=	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
;	O
mu_stream_ref	(*(struct))->(void)
(	O
fvm	*(*(struct))
->	O
output	*(char)
)	O
;	O
}	O
void	O
mh_fvm_set_width	(*(struct),long)->(void)
(	O
mh_fvm_t	*(struct)
fvm	*(*(struct))
,	O
size_t	long
width	long
)	O
{	O
fvm	*(*(struct))
->	O
width	long
=	O
width	long
-	O
1	int
;	O
}	O
void	O
mh_fvm_set_format	(*(struct),*(struct))->(void)
(	O
mh_fvm_t	*(struct)
fvm	*(*(struct))
,	O
mh_format_t	*(struct)
fmt	*(char)
)	O
{	O
size_t	long
sz	*(long)
=	O
fmt	*(char)
->	O
progcnt	long
*	O
sizeof	O
(	O
fvm	*(*(struct))
->	O
prog	*(char)
[	O
0	int
]	O
)	O
;	O
fvm	*(*(struct))
->	O
prog	*(char)
=	O
mu_realloc	(*(void),long)->(*(void))
(	O
fvm	*(*(struct))
->	O
prog	*(char)
,	O
sz	*(long)
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
fvm	*(*(struct))
->	O
prog	*(char)
,	O
fmt	*(char)
->	O
prog	*(char)
,	O
sz	*(long)
)	O
;	O
}	O
