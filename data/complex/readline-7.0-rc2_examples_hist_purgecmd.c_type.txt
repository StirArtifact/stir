static	O
void	O
usage	()->(void)
(	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"hist_purgecmd: usage: hist_purgecmd [-r] [-t] [-f filename] command-spec\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
2	int
)	O
;	O
}	O
int	O
main	(int,*(*(char)))->(int)
(	O
argc	int
,	O
argv	*(*(char))
)	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	*(*(char))
;	O
{	O
char	O
*	O
fn	*(char)
;	O
int	O
r	int
,	O
flags	int
;	O
flags	int
=	O
0	int
;	O
fn	*(char)
=	O
0	int
;	O
while	O
(	O
(	O
r	int
=	O
getopt	(int,*(*(char)),*(char))->(int)
(	O
argc	int
,	O
argv	*(*(char))
,	O
"f:rt"	*(char)
)	O
)	O
!=	O
-	O
1	int
)	O
{	O
switch	O
(	O
r	int
)	O
{	O
case	O
'f'	O
:	O
fn	*(char)
=	O
optarg	*(char)
;	O
break	O
;	O
case	O
'r'	O
:	O
flags	int
|=	O
PURGE_REGEXP	int
;	O
break	O
;	O
case	O
't'	O
:	O
history_write_timestamps	int
=	O
1	int
;	O
break	O
;	O
default	O
:	O
usage	()->(void)
(	O
)	O
;	O
}	O
}	O
argv	*(*(char))
+=	O
optind	int
;	O
argc	int
-=	O
optind	int
;	O
if	O
(	O
fn	*(char)
==	O
0	int
)	O
fn	*(char)
=	O
getenv	(*(char))->(*(char))
(	O
"HISTFILE"	*(char)
)	O
;	O
if	O
(	O
fn	*(char)
==	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"hist_purgecmd: no history file\n"	*(char)
)	O
;	O
usage	()->(void)
(	O
)	O
;	O
}	O
if	O
(	O
(	O
r	int
=	O
read_history	(*(char))->(int)
(	O
fn	*(char)
)	O
)	O
!=	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"hist_purgecmd: read_history: %s: %s\n"	*(char)
,	O
fn	*(char)
,	O
strerror	(int)->(*(char))
(	O
r	int
)	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
for	O
(	O
r	int
=	O
0	int
;	O
r	int
<	O
argc	int
;	O
r	int
++	O
)	O
hist_purgecmd	()->(int)
(	O
argv	*(*(char))
[	O
r	int
]	O
,	O
flags	int
)	O
;	O
if	O
(	O
(	O
r	int
=	O
write_history	(*(char))->(int)
(	O
fn	*(char)
)	O
)	O
!=	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"hist_purgecmd: write_history: %s: %s\n"	*(char)
,	O
fn	*(char)
,	O
strerror	(int)->(*(char))
(	O
r	int
)	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
int	O
hist_purgecmd	()->(int)
(	O
cmd	*(char)
,	O
flags	int
)	O
char	O
*	O
cmd	*(char)
;	O
int	O
flags	int
;	O
{	O
int	O
r	int
,	O
n	int
,	O
rflags	int
;	O
HIST_ENTRY	struct(*(char),*(char),*(void))
*	O
temp	*(struct(*(char),*(char),*(void)))
;	O
regex_t	struct(*(struct),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)
regex	struct(*(struct),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)
=	O
{	O
0	int
}	O
;	O
if	O
(	O
flags	int
&	O
PURGE_REGEXP	int
)	O
{	O
rflags	int
=	O
REG_EXTENDED	int
|	O
REG_NOSUB	O
;	O
if	O
(	O
regcomp	(*(struct(*(struct),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)),*(char),int)->(int)
(	O
&	O
regex	struct(*(struct),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)
,	O
cmd	*(char)
,	O
rflags	int
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"hist_purgecmd: %s: invalid regular expression\n"	*(char)
,	O
cmd	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
r	int
=	O
0	int
;	O
using_history	()->(void)
(	O
)	O
;	O
r	int
=	O
where_history	()->(int)
(	O
)	O
;	O
for	O
(	O
n	int
=	O
0	int
;	O
n	int
<	O
r	int
;	O
n	int
++	O
)	O
{	O
temp	*(struct(*(char),*(char),*(void)))
=	O
history_get	(int)->(*(struct(*(char),*(char),*(void))))
(	O
n	int
+	O
history_base	int
)	O
;	O
if	O
(	O
(	O
(	O
flags	int
&	O
PURGE_REGEXP	int
)	O
&&	O
(	O
regexec	(*(struct(*(struct),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)),*(char),long,array(struct(int,int)),int)->(int)
(	O
&	O
regex	struct(*(struct),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)
,	O
temp	*(struct(*(char),*(char),*(void)))
->	O
line	*(char)
,	O
0	int
,	O
0	int
,	O
0	int
)	O
==	O
0	int
)	O
)	O
||	O
(	O
(	O
flags	int
&	O
PURGE_REGEXP	int
)	O
==	O
0	int
&&	O
STREQ	O
(	O
temp	*(struct(*(char),*(char),*(void)))
->	O
line	*(char)
,	O
cmd	*(char)
)	O
)	O
)	O
{	O
remove_history	(int)->(*(struct(*(char),*(char),*(void))))
(	O
n	int
)	O
;	O
r	int
--	O
;	O
n	int
--	O
;	O
history_offset	int
--	O
;	O
}	O
}	O
using_history	()->(void)
(	O
)	O
;	O
if	O
(	O
flags	int
&	O
PURGE_REGEXP	int
)	O
regfree	(*(struct(*(struct),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)))->(void)
(	O
&	O
regex	struct(*(struct),long,long,long,*(char),*(char),long,int,int,int,int,int,int,int)
)	O
;	O
return	O
r	int
;	O
}	O
