void	O
grad_encrypt_text	(*(*(char)),*(long),*(char),*(char),*(char),*(char),long)->(void)
(	O
u_char	char
*	O
*	O
encr_text	*(*(char))
,	O
size_t	long
*	O
encr_size	*(long)
,	O
u_char	char
*	O
password	*(char)
,	O
u_char	char
*	O
authenticator	array(char)
,	O
u_char	char
*	O
secret	*(char)
,	O
u_char	char
*	O
salt	*(char)
,	O
size_t	long
saltlen	long
)	O
{	O
int	O
passlen	int
;	O
int	O
secretlen	int
;	O
int	O
nchunks	int
;	O
int	O
buflen	int
;	O
u_char	char
*	O
passbuf	*(char)
;	O
int	O
md5len	int
;	O
u_char	char
*	O
md5buf	*(char)
;	O
u_char	char
digest	array(char)
[	O
GRAD_AUTHENTICATOR_LENGTH	int
]	O
;	O
u_char	char
*	O
cp	*(char)
;	O
int	O
i	int
,	O
j	int
;	O
passlen	int
=	O
strlen	(*(char))->(long)
(	O
password	*(char)
)	O
;	O
nchunks	int
=	O
(	O
passlen	int
+	O
GRAD_AUTHENTICATOR_LENGTH	int
-	O
1	int
)	O
/	O
GRAD_AUTHENTICATOR_LENGTH	int
;	O
buflen	int
=	O
nchunks	int
*	O
GRAD_AUTHENTICATOR_LENGTH	int
;	O
*	O
encr_text	*(*(char))
=	O
grad_emalloc	(long)->(*(void))
(	O
buflen	int
)	O
;	O
*	O
encr_size	*(long)
=	O
buflen	int
;	O
passbuf	*(char)
=	O
*	O
encr_text	*(*(char))
;	O
memset	(*(void),int,long)->(*(void))
(	O
passbuf	*(char)
,	O
0	int
,	O
buflen	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
passbuf	*(char)
,	O
password	*(char)
,	O
passlen	int
)	O
;	O
secretlen	int
=	O
strlen	(*(char))->(long)
(	O
secret	*(char)
)	O
;	O
md5len	int
=	O
secretlen	int
+	O
GRAD_AUTHENTICATOR_LENGTH	int
;	O
md5buf	*(char)
=	O
grad_emalloc	(long)->(*(void))
(	O
md5len	int
+	O
saltlen	long
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
md5buf	*(char)
,	O
secret	*(char)
,	O
secretlen	int
)	O
;	O
cp	*(char)
=	O
authenticator	array(char)
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
buflen	int
;	O
)	O
{	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
md5buf	*(char)
+	O
secretlen	int
,	O
cp	*(char)
,	O
GRAD_AUTHENTICATOR_LENGTH	int
)	O
;	O
if	O
(	O
i	int
==	O
0	int
&&	O
saltlen	long
)	O
{	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
md5buf	*(char)
+	O
md5len	int
,	O
salt	*(char)
,	O
saltlen	long
)	O
;	O
grad_md5_calc	()->(int)
(	O
digest	array(char)
,	O
md5buf	*(char)
,	O
md5len	int
+	O
saltlen	long
)	O
;	O
}	O
else	O
grad_md5_calc	()->(int)
(	O
digest	array(char)
,	O
md5buf	*(char)
,	O
md5len	int
)	O
;	O
cp	*(char)
=	O
passbuf	*(char)
+	O
i	int
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
GRAD_AUTHENTICATOR_LENGTH	int
;	O
j	int
++	O
,	O
i	int
++	O
)	O
passbuf	*(char)
[	O
i	int
]	O
^=	O
digest	array(char)
[	O
j	int
]	O
;	O
}	O
grad_free	(*(void))->(void)
(	O
md5buf	*(char)
)	O
;	O
}	O
void	O
grad_decrypt_text	(*(char),*(char),long,*(char),*(char),*(char),long)->(void)
(	O
u_char	char
*	O
password	*(char)
,	O
u_char	char
*	O
encr_text	*(*(char))
,	O
size_t	long
encr_size	*(long)
,	O
u_char	char
*	O
authenticator	array(char)
,	O
u_char	char
*	O
secret	*(char)
,	O
u_char	char
*	O
salt	*(char)
,	O
size_t	long
saltsize	long
)	O
{	O
int	O
md5len	int
;	O
u_char	char
*	O
md5buf	*(char)
;	O
u_char	char
digest	array(char)
[	O
GRAD_AUTHENTICATOR_LENGTH	int
]	O
;	O
u_char	char
*	O
cp	*(char)
;	O
int	O
secretlen	int
;	O
int	O
i	int
,	O
j	int
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
password	*(char)
,	O
encr_text	*(*(char))
,	O
encr_size	*(long)
)	O
;	O
secretlen	int
=	O
strlen	(*(char))->(long)
(	O
secret	*(char)
)	O
;	O
md5len	int
=	O
secretlen	int
+	O
GRAD_AUTHENTICATOR_LENGTH	int
;	O
md5buf	*(char)
=	O
grad_emalloc	(long)->(*(void))
(	O
md5len	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
md5buf	*(char)
,	O
secret	*(char)
,	O
secretlen	int
)	O
;	O
cp	*(char)
=	O
authenticator	array(char)
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
encr_size	*(long)
;	O
)	O
{	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
md5buf	*(char)
+	O
secretlen	int
,	O
cp	*(char)
,	O
GRAD_AUTHENTICATOR_LENGTH	int
)	O
;	O
if	O
(	O
i	int
==	O
0	int
&&	O
saltsize	long
)	O
{	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
md5buf	*(char)
+	O
md5len	int
,	O
salt	*(char)
,	O
saltsize	long
)	O
;	O
grad_md5_calc	()->(int)
(	O
digest	array(char)
,	O
md5buf	*(char)
,	O
md5len	int
+	O
saltsize	long
)	O
;	O
}	O
else	O
grad_md5_calc	()->(int)
(	O
digest	array(char)
,	O
md5buf	*(char)
,	O
md5len	int
)	O
;	O
cp	*(char)
=	O
encr_text	*(*(char))
+	O
i	int
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
GRAD_AUTHENTICATOR_LENGTH	int
;	O
j	int
++	O
,	O
i	int
++	O
)	O
password	*(char)
[	O
i	int
]	O
^=	O
digest	array(char)
[	O
j	int
]	O
;	O
}	O
password	*(char)
[	O
encr_size	*(long)
]	O
=	O
0	int
;	O
grad_free	(*(void))->(void)
(	O
md5buf	*(char)
)	O
;	O
}	O
void	O
grad_encrypt_password	(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),*(char),*(char))->(void)
(	O
grad_avp_t	struct(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char))))
*	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
,	O
char	O
*	O
password	*(char)
,	O
char	O
*	O
authenticator	array(char)
,	O
char	O
*	O
secret	*(char)
)	O
{	O
u_char	char
*	O
encr_text	*(*(char))
;	O
size_t	long
encr_size	*(long)
;	O
grad_encrypt_text	(*(*(char)),*(long),*(char),*(char),*(char),*(char),long)->(void)
(	O
&	O
encr_text	*(*(char))
,	O
&	O
encr_size	*(long)
,	O
password	*(char)
,	O
authenticator	array(char)
,	O
secret	*(char)
,	O
NULL	O
,	O
0	int
)	O
;	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_strvalue	O
=	O
encr_text	*(*(char))
;	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_strlength	O
=	O
encr_size	*(long)
;	O
}	O
void	O
grad_decrypt_password	(*(char),*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),*(char))->(void)
(	O
char	O
*	O
password	*(char)
,	O
grad_avp_t	struct(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char))))
*	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
,	O
char	O
*	O
authenticator	array(char)
,	O
char	O
*	O
secret	*(char)
)	O
{	O
grad_decrypt_text	(*(char),*(char),long,*(char),*(char),*(char),long)->(void)
(	O
password	*(char)
,	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_strvalue	O
,	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_strlength	O
,	O
authenticator	array(char)
,	O
secret	*(char)
,	O
NULL	O
,	O
0	int
)	O
;	O
}	O
void	O
grad_decrypt_password_broken	(*(char),*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),*(char))->(void)
(	O
char	O
*	O
password	*(char)
,	O
grad_avp_t	struct(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char))))
*	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
,	O
char	O
*	O
authenticator	array(char)
,	O
char	O
*	O
secret	*(char)
)	O
{	O
int	O
md5len	int
;	O
char	O
*	O
md5buf	*(char)
;	O
char	O
digest	array(char)
[	O
GRAD_AUTHENTICATOR_LENGTH	int
]	O
;	O
int	O
secretlen	int
;	O
int	O
passlen	int
;	O
int	O
i	int
,	O
j	int
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
password	*(char)
,	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_strvalue	O
,	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_strlength	O
)	O
;	O
passlen	int
=	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_strlength	O
;	O
secretlen	int
=	O
strlen	(*(char))->(long)
(	O
secret	*(char)
)	O
;	O
md5len	int
=	O
secretlen	int
+	O
GRAD_AUTHENTICATOR_LENGTH	int
;	O
md5buf	*(char)
=	O
grad_emalloc	(long)->(*(void))
(	O
md5len	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
md5buf	*(char)
,	O
secret	*(char)
,	O
secretlen	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
md5buf	*(char)
+	O
secretlen	int
,	O
authenticator	array(char)
,	O
GRAD_AUTHENTICATOR_LENGTH	int
)	O
;	O
grad_md5_calc	()->(int)
(	O
digest	array(char)
,	O
md5buf	*(char)
,	O
md5len	int
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
passlen	int
;	O
)	O
{	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
GRAD_AUTHENTICATOR_LENGTH	int
;	O
j	int
++	O
,	O
i	int
++	O
)	O
password	*(char)
[	O
i	int
]	O
^=	O
digest	array(char)
[	O
j	int
]	O
;	O
}	O
grad_free	(*(void))->(void)
(	O
md5buf	*(char)
)	O
;	O
}	O
void	O
grad_encrypt_tunnel_password	(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),char,*(char),*(char),*(char))->(void)
(	O
grad_avp_t	struct(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char))))
*	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
,	O
u_char	char
tag	char
,	O
char	O
*	O
password	*(char)
,	O
char	O
*	O
authenticator	array(char)
,	O
char	O
*	O
secret	*(char)
)	O
{	O
u_char	char
*	O
encr_text	*(*(char))
;	O
size_t	long
encr_size	*(long)
;	O
char	O
*	O
plaintext	*(char)
;	O
size_t	long
length	short
=	O
strlen	(*(char))->(long)
(	O
password	*(char)
)	O
;	O
unsigned	O
short	O
salt	*(char)
=	O
htons	()->(int)
(	O
(	O
(	O
(	O
long	O
)	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
^	O
*	O
(	O
long	O
*	O
)	O
authenticator	array(char)
)	O
&	O
0xffff	int
)	O
|	O
0x8000	int
)	O
;	O
plaintext	*(char)
=	O
grad_emalloc	(long)->(*(void))
(	O
length	short
+	O
2	int
)	O
;	O
plaintext	*(char)
[	O
0	int
]	O
=	O
length	short
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
plaintext	*(char)
[	O
1	int
]	O
,	O
password	*(char)
,	O
length	short
+	O
1	int
)	O
;	O
grad_encrypt_text	(*(*(char)),*(long),*(char),*(char),*(char),*(char),long)->(void)
(	O
&	O
encr_text	*(*(char))
,	O
&	O
encr_size	*(long)
,	O
plaintext	*(char)
,	O
authenticator	array(char)
,	O
secret	*(char)
,	O
(	O
u_char	char
*	O
)	O
&	O
salt	*(char)
,	O
2	int
)	O
;	O
grad_free	(*(void))->(void)
(	O
plaintext	*(char)
)	O
;	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_strlength	O
=	O
3	int
+	O
encr_size	*(long)
;	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_strvalue	O
=	O
grad_emalloc	(long)->(*(void))
(	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_strlength	O
)	O
;	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_strvalue	O
[	O
0	int
]	O
=	O
tag	char
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_strvalue	O
[	O
1	int
]	O
,	O
&	O
salt	*(char)
,	O
2	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_strvalue	O
[	O
3	int
]	O
,	O
encr_text	*(*(char))
,	O
encr_size	*(long)
)	O
;	O
grad_free	(*(void))->(void)
(	O
encr_text	*(*(char))
)	O
;	O
}	O
void	O
grad_decrypt_tunnel_password	(*(char),*(char),*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),*(char))->(void)
(	O
char	O
*	O
password	*(char)
,	O
u_char	char
*	O
tag	char
,	O
grad_avp_t	struct(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char))))
*	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
,	O
char	O
*	O
authenticator	array(char)
,	O
char	O
*	O
secret	*(char)
)	O
{	O
size_t	long
length	short
;	O
grad_decrypt_text	(*(char),*(char),long,*(char),*(char),*(char),long)->(void)
(	O
password	*(char)
,	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_strvalue	O
+	O
3	int
,	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_strlength	O
-	O
3	int
,	O
authenticator	array(char)
,	O
secret	*(char)
,	O
&	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_strvalue	O
[	O
1	int
]	O
,	O
2	int
)	O
;	O
length	short
=	O
*	O
(	O
u_char	char
*	O
)	O
password	*(char)
;	O
memmove	(*(void),*(void),long)->(*(void))
(	O
password	*(char)
,	O
password	*(char)
+	O
1	int
,	O
length	short
)	O
;	O
password	*(char)
[	O
length	short
]	O
=	O
0	int
;	O
*	O
tag	char
=	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_strvalue	O
[	O
0	int
]	O
;	O
}	O
