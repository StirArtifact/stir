int	O
mu_pop3_apop	(*(struct),*(char),*(char))->(int)
(	O
mu_pop3_t	*(struct)
pop3	*(*(struct))
,	O
const	O
char	O
*	O
user	*(char)
,	O
const	O
char	O
*	O
secret	*(char)
)	O
{	O
int	O
status	int
;	O
if	O
(	O
pop3	*(*(struct))
==	O
NULL	O
||	O
user	*(char)
==	O
NULL	O
||	O
secret	*(char)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
pop3	*(*(struct))
->	O
timestamp	*(char)
==	O
NULL	O
)	O
return	O
ENOTSUP	O
;	O
switch	O
(	O
pop3	*(*(struct))
->	O
state	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
{	O
case	O
MU_POP3_NO_STATE	int
:	O
{	O
struct	O
mu_md5_ctx	struct(int,int,int,int,array(int),int,array(int))
md5context	struct(int,int,int,int,array(int),int,array(int))
;	O
unsigned	O
char	O
md5digest	array(char)
[	O
16	int
]	O
;	O
char	O
digest	*(char)
[	O
64	int
]	O
;	O
char	O
*	O
tmp	*(char)
;	O
size_t	long
n	int
;	O
mu_md5_init_ctx	(*(struct(int,int,int,int,array(int),int,array(int))))->(void)
(	O
&	O
md5context	struct(int,int,int,int,array(int),int,array(int))
)	O
;	O
mu_md5_process_bytes	(*(void),long,*(struct(int,int,int,int,array(int),int,array(int))))->(void)
(	O
pop3	*(*(struct))
->	O
timestamp	*(char)
,	O
strlen	(*(char))->(long)
(	O
pop3	*(*(struct))
->	O
timestamp	*(char)
)	O
,	O
&	O
md5context	struct(int,int,int,int,array(int),int,array(int))
)	O
;	O
mu_md5_process_bytes	(*(void),long,*(struct(int,int,int,int,array(int),int,array(int))))->(void)
(	O
secret	*(char)
,	O
strlen	(*(char))->(long)
(	O
secret	*(char)
)	O
,	O
&	O
md5context	struct(int,int,int,int,array(int),int,array(int))
)	O
;	O
mu_md5_finish_ctx	(*(struct(int,int,int,int,array(int),int,array(int))),*(void))->(*(void))
(	O
&	O
md5context	struct(int,int,int,int,array(int),int,array(int))
,	O
md5digest	array(char)
)	O
;	O
for	O
(	O
tmp	*(char)
=	O
digest	*(char)
,	O
n	int
=	O
0	int
;	O
n	int
<	O
16	int
;	O
n	int
++	O
,	O
tmp	*(char)
+=	O
2	int
)	O
sprintf	(*(char),*(char))->(int)
(	O
tmp	*(char)
,	O
"%02x"	*(char)
,	O
md5digest	array(char)
[	O
n	int
]	O
)	O
;	O
*	O
tmp	*(char)
=	O
'\0'	O
;	O
status	int
=	O
mu_pop3_writeline	(*(struct),*(char))->(int)
(	O
pop3	*(*(struct))
,	O
"APOP %s %s\r\n"	*(char)
,	O
user	*(char)
,	O
digest	*(char)
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
digest	*(char)
,	O
'\0'	O
,	O
sizeof	O
digest	*(char)
)	O
;	O
MU_POP3_CHECK_ERROR	O
(	O
pop3	*(*(struct))
,	O
status	int
)	O
;	O
MU_POP3_FCLR	O
(	O
pop3	*(*(struct))
,	O
MU_POP3_ACK	int
)	O
;	O
pop3	*(*(struct))
->	O
state	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
=	O
MU_POP3_APOP	int
;	O
}	O
case	O
MU_POP3_APOP	int
:	O
status	int
=	O
mu_pop3_response	(*(struct),*(long))->(int)
(	O
pop3	*(*(struct))
,	O
NULL	O
)	O
;	O
MU_POP3_CHECK_EAGAIN	O
(	O
pop3	*(*(struct))
,	O
status	int
)	O
;	O
MU_POP3_CHECK_OK	O
(	O
pop3	*(*(struct))
)	O
;	O
pop3	*(*(struct))
->	O
state	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
=	O
MU_POP3_NO_STATE	int
;	O
break	O
;	O
case	O
MU_POP3_ERROR	int
:	O
status	int
=	O
ECANCELED	int
;	O
break	O
;	O
default	O
:	O
status	int
=	O
EINPROGRESS	int
;	O
}	O
return	O
status	int
;	O
}	O
