int	O
mu_smtp_set_param	(*(struct),int,*(char))->(int)
(	O
mu_smtp_t	*(struct)
smtp	*(struct)
,	O
int	O
pcode	int
,	O
const	O
char	O
*	O
newparam	*(char)
)	O
{	O
char	O
*	O
param	*(char)
;	O
if	O
(	O
!	O
smtp	*(struct)
)	O
return	O
EINVAL	int
;	O
if	O
(	O
pcode	int
<	O
0	int
||	O
pcode	int
>=	O
MU_SMTP_MAX_PARAM	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
pcode	int
==	O
MU_SMTP_PARAM_PASSWORD	int
)	O
{	O
smtp	*(struct)
->	O
param	*(char)
[	O
MU_SMTP_PARAM_PASSWORD	int
]	O
=	O
NULL	O
;	O
if	O
(	O
smtp	*(struct)
->	O
secret	*(struct)
)	O
{	O
if	O
(	O
MU_SMTP_FISSET	O
(	O
smtp	*(struct)
,	O
_MU_SMTP_CLNPASS	int
)	O
)	O
mu_secret_password_unref	(*(struct))->(void)
(	O
smtp	*(struct)
->	O
secret	*(struct)
)	O
;	O
mu_secret_destroy	(*(*(struct)))->(void)
(	O
&	O
smtp	*(struct)
->	O
secret	*(struct)
)	O
;	O
}	O
if	O
(	O
!	O
newparam	*(char)
)	O
return	O
0	int
;	O
MU_SMTP_FCLR	O
(	O
smtp	*(struct)
,	O
_MU_SMTP_CLNPASS	int
)	O
;	O
return	O
mu_secret_create	(*(*(struct)),*(char),long)->(int)
(	O
&	O
smtp	*(struct)
->	O
secret	*(struct)
,	O
newparam	*(char)
,	O
strlen	(*(char))->(long)
(	O
newparam	*(char)
)	O
)	O
;	O
}	O
else	O
if	O
(	O
pcode	int
==	O
MU_SMTP_PARAM_URL	int
)	O
{	O
mu_url_t	*(struct)
url	*(struct)
;	O
int	O
rc	int
;	O
if	O
(	O
!	O
newparam	*(char)
)	O
mu_url_destroy	(*(*(struct)))->(void)
(	O
&	O
smtp	*(struct)
->	O
url	*(struct)
)	O
;	O
else	O
{	O
rc	int
=	O
mu_url_create	(*(*(struct)),*(char))->(int)
(	O
&	O
url	*(struct)
,	O
newparam	*(char)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
mu_url_destroy	(*(*(struct)))->(void)
(	O
&	O
smtp	*(struct)
->	O
url	*(struct)
)	O
;	O
smtp	*(struct)
->	O
url	*(struct)
=	O
url	*(struct)
;	O
}	O
return	O
0	int
;	O
}	O
if	O
(	O
newparam	*(char)
)	O
{	O
param	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
newparam	*(char)
)	O
;	O
if	O
(	O
!	O
param	*(char)
)	O
return	O
ENOMEM	int
;	O
}	O
else	O
param	*(char)
=	O
NULL	O
;	O
free	(*(void))->(void)
(	O
smtp	*(struct)
->	O
param	*(char)
[	O
pcode	int
]	O
)	O
;	O
smtp	*(struct)
->	O
param	*(char)
[	O
pcode	int
]	O
=	O
param	*(char)
;	O
return	O
0	int
;	O
}	O
int	O
mu_smtp_get_param	(*(struct),int,*(*(char)))->(int)
(	O
mu_smtp_t	*(struct)
smtp	*(struct)
,	O
int	O
pcode	int
,	O
const	O
char	O
*	O
*	O
pparam	*(*(char))
)	O
{	O
if	O
(	O
!	O
smtp	*(struct)
)	O
return	O
EINVAL	int
;	O
if	O
(	O
pcode	int
<	O
0	int
||	O
pcode	int
>=	O
MU_SMTP_MAX_PARAM	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
pcode	int
==	O
MU_SMTP_PARAM_PASSWORD	int
&&	O
smtp	*(struct)
->	O
secret	*(struct)
&&	O
!	O
MU_SMTP_FISSET	O
(	O
smtp	*(struct)
,	O
_MU_SMTP_CLNPASS	int
)	O
)	O
{	O
smtp	*(struct)
->	O
param	*(char)
[	O
pcode	int
]	O
=	O
(	O
char	O
*	O
)	O
mu_secret_password	(*(struct))->(*(char))
(	O
smtp	*(struct)
->	O
secret	*(struct)
)	O
;	O
MU_SMTP_FSET	O
(	O
smtp	*(struct)
,	O
_MU_SMTP_CLNPASS	int
)	O
;	O
}	O
else	O
if	O
(	O
pcode	int
==	O
MU_SMTP_PARAM_URL	int
)	O
{	O
if	O
(	O
smtp	*(struct)
->	O
url	*(struct)
)	O
{	O
*	O
pparam	*(*(char))
=	O
mu_url_to_string	(*(struct))->(*(char))
(	O
smtp	*(struct)
->	O
url	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
}	O
*	O
pparam	*(*(char))
=	O
smtp	*(struct)
->	O
param	*(char)
[	O
pcode	int
]	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_smtp_test_param	(*(struct),int)->(int)
(	O
mu_smtp_t	*(struct)
smtp	*(struct)
,	O
int	O
pcode	int
)	O
{	O
if	O
(	O
!	O
smtp	*(struct)
)	O
return	O
EINVAL	int
;	O
if	O
(	O
pcode	int
<	O
0	int
||	O
pcode	int
>=	O
MU_SMTP_MAX_PARAM	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
pcode	int
==	O
MU_SMTP_PARAM_PASSWORD	int
)	O
{	O
if	O
(	O
smtp	*(struct)
->	O
secret	*(struct)
)	O
return	O
0	int
;	O
return	O
MU_ERR_NOENT	O
;	O
}	O
else	O
if	O
(	O
pcode	int
==	O
MU_SMTP_PARAM_URL	int
)	O
{	O
if	O
(	O
smtp	*(struct)
->	O
url	*(struct)
)	O
return	O
0	int
;	O
return	O
MU_ERR_NOENT	O
;	O
}	O
return	O
smtp	*(struct)
->	O
param	*(char)
[	O
pcode	int
]	O
?	O
0	int
:	O
MU_ERR_NOENT	O
;	O
}	O
