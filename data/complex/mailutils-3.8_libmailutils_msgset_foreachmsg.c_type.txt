struct	O
action_closure	struct(*((long,*(struct),*(void))->(int)),*(void),*(struct(*(struct),*(struct),int,long)),int)
{	O
mu_msgset_message_action_t	*((long,*(struct),*(void))->(int))
action	*((long,*(struct),*(void))->(int))
;	O
void	O
*	O
data	*(void)
;	O
mu_msgset_t	*(struct)
msgset	*(struct)
;	O
int	O
dir	int
;	O
}	O
;	O
static	O
int	O
call_action	(*(struct(*((long,*`,*`)->(int)),*(void),*(struct(*`,*`,int,long)),int)),long)->(int)
(	O
struct	O
action_closure	struct(*((long,*(struct),*(void))->(int)),*(void),*(struct(*(struct),*(struct),int,long)),int)
*	O
clos	*(struct(*((long,*(struct`),*(void))->(int)),*(void),*(struct(*(struct`),*(struct`),int,long)),int))
,	O
size_t	long
i	long
)	O
{	O
int	O
rc	int
;	O
mu_message_t	*(struct)
msg	*(struct)
=	O
NULL	O
;	O
size_t	long
n	long
;	O
if	O
(	O
_MU_MSGSET_MODE	O
(	O
clos	*(struct(*((long,*(struct`),*(void))->(int)),*(void),*(struct(*(struct`),*(struct`),int,long)),int))
->	O
msgset	*(struct)
->	O
flags	int
)	O
==	O
MU_MSGSET_UID	int
)	O
{	O
rc	int
=	O
mu_mailbox_translate	(*(struct),int,long,*(long))->(int)
(	O
clos	*(struct(*((long,*(struct`),*(void))->(int)),*(void),*(struct(*(struct`),*(struct`),int,long)),int))
->	O
msgset	*(struct)
->	O
mbox	*(struct)
,	O
MU_MAILBOX_UID_TO_MSGNO	int
,	O
i	long
,	O
&	O
n	long
)	O
;	O
if	O
(	O
rc	int
==	O
MU_ERR_NOENT	O
)	O
return	O
0	int
;	O
else	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
}	O
else	O
n	long
=	O
i	long
;	O
rc	int
=	O
mu_mailbox_get_message	(*(struct),long,*(*(struct)))->(int)
(	O
clos	*(struct(*((long,*(struct`),*(void))->(int)),*(void),*(struct(*(struct`),*(struct`),int,long)),int))
->	O
msgset	*(struct)
->	O
mbox	*(struct)
,	O
n	long
,	O
&	O
msg	*(struct)
)	O
;	O
if	O
(	O
rc	int
==	O
MU_ERR_NOENT	O
)	O
return	O
0	int
;	O
else	O
if	O
(	O
rc	int
==	O
0	int
)	O
rc	int
=	O
clos	*(struct(*((long,*(struct`),*(void))->(int)),*(void),*(struct(*(struct`),*(struct`),int,long)),int))
->	O
action	*((long,*(struct),*(void))->(int))
(	O
i	long
,	O
msg	*(struct)
,	O
clos	*(struct(*((long,*(struct`),*(void))->(int)),*(void),*(struct(*(struct`),*(struct`),int,long)),int))
->	O
data	*(void)
)	O
;	O
return	O
rc	int
;	O
}	O
static	O
int	O
procrange	(*(void),*(void))->(int)
(	O
void	O
*	O
item	*(void)
,	O
void	O
*	O
data	*(void)
)	O
{	O
struct	O
mu_msgrange	struct(long,long)
*	O
mp	*(struct(long,long))
=	O
item	*(void)
;	O
struct	O
action_closure	struct(*((long,*(struct),*(void))->(int)),*(void),*(struct(*(struct),*(struct),int,long)),int)
*	O
clos	*(struct(*((long,*(struct`),*(void))->(int)),*(void),*(struct(*(struct`),*(struct`),int,long)),int))
=	O
data	*(void)
;	O
size_t	long
i	long
;	O
int	O
rc	int
=	O
0	int
;	O
if	O
(	O
clos	*(struct(*((long,*(struct`),*(void))->(int)),*(void),*(struct(*(struct`),*(struct`),int,long)),int))
->	O
dir	int
)	O
for	O
(	O
i	long
=	O
mp	*(struct(long,long))
->	O
msg_end	long
;	O
rc	int
==	O
0	int
&&	O
i	long
>=	O
mp	*(struct(long,long))
->	O
msg_beg	long
;	O
i	long
--	O
)	O
rc	int
=	O
call_action	(*(struct(*((long,*`,*`)->(int)),*(void),*(struct(*`,*`,int,long)),int)),long)->(int)
(	O
clos	*(struct(*((long,*(struct`),*(void))->(int)),*(void),*(struct(*(struct`),*(struct`),int,long)),int))
,	O
i	long
)	O
;	O
else	O
for	O
(	O
i	long
=	O
mp	*(struct(long,long))
->	O
msg_beg	long
;	O
i	long
<=	O
mp	*(struct(long,long))
->	O
msg_end	long
;	O
i	long
++	O
)	O
rc	int
=	O
call_action	(*(struct(*((long,*`,*`)->(int)),*(void),*(struct(*`,*`,int,long)),int)),long)->(int)
(	O
clos	*(struct(*((long,*(struct`),*(void))->(int)),*(void),*(struct(*(struct`),*(struct`),int,long)),int))
,	O
i	long
)	O
;	O
return	O
rc	int
;	O
}	O
int	O
mu_msgset_foreach_dir_message	(*(struct),int,*((long,*(struct),*(void))->(int)),*(void))->(int)
(	O
mu_msgset_t	*(struct)
msgset	*(struct)
,	O
int	O
dir	int
,	O
mu_msgset_message_action_t	*((long,*(struct),*(void))->(int))
action	*((long,*(struct),*(void))->(int))
,	O
void	O
*	O
data	*(void)
)	O
{	O
int	O
rc	int
;	O
struct	O
action_closure	struct(*((long,*(struct),*(void))->(int)),*(void),*(struct(*(struct),*(struct),int,long)),int)
clos	*(struct(*((long,*(struct`),*(void))->(int)),*(void),*(struct(*(struct`),*(struct`),int,long)),int))
;	O
if	O
(	O
!	O
msgset	*(struct)
->	O
mbox	*(struct)
)	O
return	O
MU_ERR_NOT_OPEN	O
;	O
rc	int
=	O
mu_msgset_aggregate	(*(struct))->(int)
(	O
msgset	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
clos	*(struct(*((long,*(struct`),*(void))->(int)),*(void),*(struct(*(struct`),*(struct`),int,long)),int))
.	O
action	*((long,*(struct),*(void))->(int))
=	O
action	*((long,*(struct),*(void))->(int))
;	O
clos	*(struct(*((long,*(struct`),*(void))->(int)),*(void),*(struct(*(struct`),*(struct`),int,long)),int))
.	O
data	*(void)
=	O
data	*(void)
;	O
clos	*(struct(*((long,*(struct`),*(void))->(int)),*(void),*(struct(*(struct`),*(struct`),int,long)),int))
.	O
msgset	*(struct)
=	O
msgset	*(struct)
;	O
clos	*(struct(*((long,*(struct`),*(void))->(int)),*(void),*(struct(*(struct`),*(struct`),int,long)),int))
.	O
dir	int
=	O
dir	int
;	O
return	O
mu_list_foreach_dir	(*(struct),int,*((*(void),*(void))->(int)),*(void))->(int)
(	O
msgset	*(struct)
->	O
list	*(struct)
,	O
dir	int
,	O
procrange	(*(void),*(void))->(int)
,	O
&	O
clos	*(struct(*((long,*(struct`),*(void))->(int)),*(void),*(struct(*(struct`),*(struct`),int,long)),int))
)	O
;	O
}	O
int	O
mu_msgset_foreach_message	(*(struct),*((long,*(struct),*(void))->(int)),*(void))->(int)
(	O
mu_msgset_t	*(struct)
msgset	*(struct)
,	O
mu_msgset_message_action_t	*((long,*(struct),*(void))->(int))
action	*((long,*(struct),*(void))->(int))
,	O
void	O
*	O
data	*(void)
)	O
{	O
return	O
mu_msgset_foreach_dir_message	(*(struct),int,*((long,*(struct),*(void))->(int)),*(void))->(int)
(	O
msgset	*(struct)
,	O
0	int
,	O
action	*((long,*(struct),*(void))->(int))
,	O
data	*(void)
)	O
;	O
}	O
