gsl_odeiv2_step	struct
*	O
gsl_odeiv2_step_alloc	(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long)->(*(struct(*(struct(*`,int,int,*`,*`,*`,*`,*`,*`)),long,*(void))))
(	O
const	O
gsl_odeiv2_step_type	struct(*(char),int,int,*((long)->(*(void))),*((*(void),long,double,double,array(double),array(double),array(double),array(double),*(struct(*`,*`,long,*`)))->(int)),*((*(void),*(struct))->(int)),*((*(void),long)->(int)),*((*(void))->(int)),*((*(void))->(void)))
*	O
T	*(struct(*(char),int,int,*((long)->(*(void))),*((*(void),long,double,double,array(double),array(double),array(double),array(double),*(struct`))->(int)),*((*(void),*(struct`))->(int)),*((*(void),long)->(int)),*((*(void))->(int)),*((*(void))->(void))))
,	O
size_t	long
dim	long
)	O
{	O
gsl_odeiv2_step	struct
*	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
=	O
(	O
gsl_odeiv2_step	struct
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
gsl_odeiv2_step	struct
)	O
)	O
;	O
if	O
(	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
==	O
0	int
)	O
{	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for ode struct"	*(char)
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
;	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
->	O
type	*(struct(*(char),int,int,*((long)->(*(void))),*((*(void),long,double,double,array(double),array(double),array(double),array(double),*(struct`))->(int)),*((*(void),*(struct`))->(int)),*((*(void),long)->(int)),*((*(void))->(int)),*((*(void))->(void))))
=	O
T	*(struct(*(char),int,int,*((long)->(*(void))),*((*(void),long,double,double,array(double),array(double),array(double),array(double),*(struct`))->(int)),*((*(void),*(struct`))->(int)),*((*(void),long)->(int)),*((*(void))->(int)),*((*(void))->(void))))
;	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
->	O
dimension	long
=	O
dim	long
;	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
->	O
state	*(int)
=	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
->	O
type	*(struct(*(char),int,int,*((long)->(*(void))),*((*(void),long,double,double,array(double),array(double),array(double),array(double),*(struct`))->(int)),*((*(void),*(struct`))->(int)),*((*(void),long)->(int)),*((*(void))->(int)),*((*(void))->(void))))
->	O
alloc	*((long)->(*(void)))
(	O
dim	long
)	O
;	O
if	O
(	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
->	O
state	*(int)
==	O
0	int
)	O
{	O
free	(*(void))->(void)
(	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
)	O
;	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for ode state"	*(char)
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
;	O
return	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
;	O
}	O
const	O
char	O
*	O
gsl_odeiv2_step_name	(*(struct(*(struct(*`,int,int,*`,*`,*`,*`,*`,*`)),long,*(void))))->(*(char))
(	O
const	O
gsl_odeiv2_step	struct
*	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
)	O
{	O
return	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
->	O
type	*(struct(*(char),int,int,*((long)->(*(void))),*((*(void),long,double,double,array(double),array(double),array(double),array(double),*(struct`))->(int)),*((*(void),*(struct`))->(int)),*((*(void),long)->(int)),*((*(void))->(int)),*((*(void))->(void))))
->	O
name	*(char)
;	O
}	O
unsigned	O
int	O
gsl_odeiv2_step_order	(*(struct(*(struct(*`,int,int,*`,*`,*`,*`,*`,*`)),long,*(void))))->(int)
(	O
const	O
gsl_odeiv2_step	struct
*	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
)	O
{	O
return	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
->	O
type	*(struct(*(char),int,int,*((long)->(*(void))),*((*(void),long,double,double,array(double),array(double),array(double),array(double),*(struct`))->(int)),*((*(void),*(struct`))->(int)),*((*(void),long)->(int)),*((*(void))->(int)),*((*(void))->(void))))
->	O
order	*((*(void))->(int))
(	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
->	O
state	*(int)
)	O
;	O
}	O
int	O
gsl_odeiv2_step_apply	(*(struct(*(struct(*`,int,int,*`,*`,*`,*`,*`,*`)),long,*(void))),double,double,array(double),array(double),array(double),array(double),*(struct(*((double,array(double),array(double),*`)->(int)),*((double,array(double),*`,array(double),*`)->(int)),long,*(void))))->(int)
(	O
gsl_odeiv2_step	struct
*	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
,	O
double	O
t	double
,	O
double	O
h	double
,	O
double	O
y	array(double)
[	O
]	O
,	O
double	O
yerr	array(double)
[	O
]	O
,	O
const	O
double	O
dydt_in	array(double)
[	O
]	O
,	O
double	O
dydt_out	array(double)
[	O
]	O
,	O
const	O
gsl_odeiv2_system	struct(*((double,array(double),array(double),*(void))->(int)),*((double,array(double),*(double),array(double),*(void))->(int)),long,*(void))
*	O
dydt	array(double)
)	O
{	O
return	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
->	O
type	*(struct(*(char),int,int,*((long)->(*(void))),*((*(void),long,double,double,array(double),array(double),array(double),array(double),*(struct`))->(int)),*((*(void),*(struct`))->(int)),*((*(void),long)->(int)),*((*(void))->(int)),*((*(void))->(void))))
->	O
apply	*((*(void),long,double,double,array(double),array(double),array(double),array(double),*(struct(*((double,array(double),array(double),*`)->(int)),*((double,array(double),*`,array(double),*`)->(int)),long,*(void))))->(int))
(	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
->	O
state	*(int)
,	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
->	O
dimension	long
,	O
t	double
,	O
h	double
,	O
y	array(double)
,	O
yerr	array(double)
,	O
dydt_in	array(double)
,	O
dydt_out	array(double)
,	O
dydt	array(double)
)	O
;	O
}	O
int	O
gsl_odeiv2_step_reset	(*(struct(*(struct(*`,int,int,*`,*`,*`,*`,*`,*`)),long,*(void))))->(int)
(	O
gsl_odeiv2_step	struct
*	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
)	O
{	O
return	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
->	O
type	*(struct(*(char),int,int,*((long)->(*(void))),*((*(void),long,double,double,array(double),array(double),array(double),array(double),*(struct`))->(int)),*((*(void),*(struct`))->(int)),*((*(void),long)->(int)),*((*(void))->(int)),*((*(void))->(void))))
->	O
reset	*((*(void),long)->(int))
(	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
->	O
state	*(int)
,	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
->	O
dimension	long
)	O
;	O
}	O
void	O
gsl_odeiv2_step_free	(*(struct(*(struct(*`,int,int,*`,*`,*`,*`,*`,*`)),long,*(void))))->(void)
(	O
gsl_odeiv2_step	struct
*	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
)	O
{	O
RETURN_IF_NULL	O
(	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
)	O
;	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
->	O
type	*(struct(*(char),int,int,*((long)->(*(void))),*((*(void),long,double,double,array(double),array(double),array(double),array(double),*(struct`))->(int)),*((*(void),*(struct`))->(int)),*((*(void),long)->(int)),*((*(void))->(int)),*((*(void))->(void))))
->	O
free	(*(void))->(void)
(	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
->	O
state	*(int)
)	O
;	O
free	(*(void))->(void)
(	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
)	O
;	O
}	O
int	O
gsl_odeiv2_step_set_driver	(*(struct(*(struct(*`,int,int,*`,*`,*`,*`,*`,*`)),long,*(void))),*(struct))->(int)
(	O
gsl_odeiv2_step	struct
*	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
,	O
const	O
gsl_odeiv2_driver	struct
*	O
d	*(struct)
)	O
{	O
if	O
(	O
d	*(struct)
!=	O
NULL	O
)	O
{	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
->	O
type	*(struct(*(char),int,int,*((long)->(*(void))),*((*(void),long,double,double,array(double),array(double),array(double),array(double),*(struct`))->(int)),*((*(void),*(struct`))->(int)),*((*(void),long)->(int)),*((*(void))->(int)),*((*(void))->(void))))
->	O
set_driver	*((*(void),*(struct))->(int))
(	O
s	*(struct(*(struct(*(char),int,int,*((long)->(*`)),*((*`,long,double,double,array(double),array(double),array(double),array(double),*`)->(int)),*((*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(int)),*((*`)->(void)))),long,*(void)))
->	O
state	*(int)
,	O
d	*(struct)
)	O
;	O
}	O
else	O
{	O
GSL_ERROR_NULL	O
(	O
"driver pointer is null"	*(char)
,	O
GSL_EFAULT	int
)	O
;	O
}	O
return	O
GSL_SUCCESS	int
;	O
}	O
