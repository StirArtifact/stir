static	O
PyObject	O
*	O
api_filter_create	(*(int),*(int))->(*(int))
(	O
PyObject	O
*	O
self	*(int)
,	O
PyObject	O
*	O
args	*(int)
)	O
{	O
int	O
status	int
,	O
mode	int
,	O
flags	int
;	O
char	O
*	O
code	*(char)
=	O
NULL	O
;	O
PyStream	O
*	O
py_stm	O
,	O
*	O
py_transport	O
;	O
if	O
(	O
!	O
PyArg_ParseTuple	()->(int)
(	O
args	*(int)
,	O
"OOsii"	*(char)
,	O
&	O
py_stm	O
,	O
&	O
py_transport	O
,	O
&	O
code	*(char)
,	O
&	O
mode	int
,	O
&	O
flags	int
)	O
)	O
return	O
NULL	O
;	O
if	O
(	O
!	O
PyStream_Check	()->(int)
(	O
(	O
PyObject	O
*	O
)	O
py_stm	O
)	O
&&	O
!	O
PyStream_Check	()->(int)
(	O
(	O
PyObject	O
*	O
)	O
py_transport	O
)	O
)	O
{	O
PyErr_SetString	()->(int)
(	O
PyExc_TypeError	O
,	O
""	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
status	int
=	O
mu_filter_create	()->(int)
(	O
&	O
py_stm	O
->	O
stm	O
,	O
py_transport	O
->	O
stm	O
,	O
code	*(char)
,	O
mode	int
,	O
flags	int
)	O
;	O
return	O
_ro	(*(int))->(*(int))
(	O
PyLong_FromLong	()->(int)
(	O
status	int
)	O
)	O
;	O
}	O
static	O
PyObject	O
*	O
api_filter_iconv_create	(*(int),*(int))->(*(int))
(	O
PyObject	O
*	O
self	*(int)
,	O
PyObject	O
*	O
args	*(int)
)	O
{	O
int	O
status	int
,	O
flags	int
;	O
char	O
*	O
fromcode	*(char)
=	O
NULL	O
;	O
char	O
*	O
tocode	*(char)
=	O
NULL	O
;	O
PyStream	O
*	O
py_stm	O
,	O
*	O
py_transport	O
;	O
const	O
char	O
*	O
argv	array(*(char))
[	O
4	int
]	O
=	O
{	O
"iconv"	*(char)
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
;	O
if	O
(	O
!	O
PyArg_ParseTuple	()->(int)
(	O
args	*(int)
,	O
"OOssi"	*(char)
,	O
&	O
py_stm	O
,	O
&	O
py_transport	O
,	O
&	O
fromcode	*(char)
,	O
&	O
tocode	*(char)
,	O
&	O
flags	int
)	O
)	O
return	O
NULL	O
;	O
if	O
(	O
!	O
PyStream_Check	()->(int)
(	O
(	O
PyObject	O
*	O
)	O
py_stm	O
)	O
&&	O
!	O
PyStream_Check	()->(int)
(	O
(	O
PyObject	O
*	O
)	O
py_transport	O
)	O
)	O
{	O
PyErr_SetString	()->(int)
(	O
PyExc_TypeError	O
,	O
""	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
argv	array(*(char))
[	O
1	int
]	O
=	O
fromcode	*(char)
;	O
argv	array(*(char))
[	O
2	int
]	O
=	O
tocode	*(char)
;	O
status	int
=	O
mu_filter_create_args	()->(int)
(	O
&	O
py_stm	O
->	O
stm	O
,	O
py_transport	O
->	O
stm	O
,	O
argv	array(*(char))
[	O
0	int
]	O
,	O
3	int
,	O
argv	array(*(char))
,	O
MU_FILTER_DECODE	O
,	O
flags	int
)	O
;	O
return	O
_ro	(*(int))->(*(int))
(	O
PyLong_FromLong	()->(int)
(	O
status	int
)	O
)	O
;	O
}	O
static	O
PyMethodDef	O
methods	array(int)
[	O
]	O
=	O
{	O
{	O
"create"	*(char)
,	O
(	O
PyCFunction	O
)	O
api_filter_create	(*(int),*(int))->(*(int))
,	O
METH_VARARGS	O
,	O
""	*(char)
}	O
,	O
{	O
"iconv_create"	*(char)
,	O
(	O
PyCFunction	O
)	O
api_filter_iconv_create	(*(int),*(int))->(*(int))
,	O
METH_VARARGS	O
,	O
""	*(char)
}	O
,	O
{	O
NULL	O
,	O
NULL	O
,	O
0	int
,	O
NULL	O
}	O
}	O
;	O
static	O
struct	O
PyModuleDef	O
moduledef	struct
=	O
{	O
PyModuleDef_HEAD_INIT	O
,	O
PY_MODULE	*(char)
,	O
NULL	O
,	O
-	O
1	int
,	O
methods	array(int)
}	O
;	O
void	O
_mu_py_attach_filter	()->(void)
(	O
void	O
)	O
{	O
_mu_py_attach_module	(*(struct))->(*(int))
(	O
&	O
moduledef	struct
)	O
;	O
}	O
