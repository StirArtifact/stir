static	O
struct	O
linked_list	struct(*((*(void))->(void)),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))))
*	O
deref_linked_list	(*(*(struct(*((*`)->(void)),*(struct`),*(struct`)))))->(*(struct(*((*`)->(void)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))
(	O
struct	O
linked_list	struct(*((*(void))->(void)),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))))
*	O
*	O
plist	*(*(struct(*((*`)->(void)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))
)	O
{	O
if	O
(	O
!	O
*	O
plist	*(*(struct(*((*`)->(void)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))
)	O
{	O
struct	O
linked_list	struct(*((*(void))->(void)),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))))
*	O
list	*(struct)
=	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
list	*(struct)
)	O
)	O
;	O
list	*(struct)
->	O
free_data	*((*(void))->(void))
=	O
NULL	O
;	O
list	*(struct)
->	O
head	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
=	O
list	*(struct)
->	O
tail	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
=	O
NULL	O
;	O
*	O
plist	*(*(struct(*((*`)->(void)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))
=	O
list	*(struct)
;	O
}	O
return	O
*	O
plist	*(*(struct(*((*`)->(void)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))
;	O
}	O
struct	O
linked_list	struct(*((*(void))->(void)),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))))
*	O
linked_list_create	(*((*(void))->(void)))->(*(struct(*((*`)->(void)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))
(	O
linked_list_free_data_fp	*((*(void))->(void))
fun	*((*(void))->(void))
)	O
{	O
struct	O
linked_list	struct(*((*(void))->(void)),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))))
*	O
list	*(struct)
=	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
list	*(struct)
)	O
)	O
;	O
list	*(struct)
->	O
free_data	*((*(void))->(void))
=	O
fun	*((*(void))->(void))
;	O
list	*(struct)
->	O
head	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
=	O
list	*(struct)
->	O
tail	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
=	O
NULL	O
;	O
return	O
list	*(struct)
;	O
}	O
void	O
linked_list_append	(*(*(struct(*((*`)->(void)),*(struct`),*(struct`)))),*(void))->(void)
(	O
struct	O
linked_list	struct(*((*(void))->(void)),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))))
*	O
*	O
plist	*(*(struct(*((*`)->(void)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))
,	O
void	O
*	O
data	*(void)
)	O
{	O
struct	O
linked_list	struct(*((*(void))->(void)),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))))
*	O
list	*(struct)
=	O
deref_linked_list	(*(*(struct(*((*`)->(void)),*(struct`),*(struct`)))))->(*(struct(*((*`)->(void)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))
(	O
plist	*(*(struct(*((*`)->(void)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))
)	O
;	O
struct	O
linked_list_entry	struct(*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct),*(void))
*	O
entry	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
=	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
entry	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
)	O
)	O
;	O
entry	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
->	O
list	*(struct)
=	O
list	*(struct)
;	O
entry	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
->	O
data	*(void)
=	O
data	*(void)
;	O
entry	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void)))
=	O
NULL	O
;	O
entry	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
->	O
prev	*(struct(*(char),*(struct(*(char),*(struct`),array(char))),array(char)))
=	O
list	*(struct)
->	O
tail	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
;	O
if	O
(	O
list	*(struct)
->	O
tail	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
)	O
list	*(struct)
->	O
tail	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void)))
=	O
entry	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
;	O
else	O
list	*(struct)
->	O
head	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
=	O
entry	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
;	O
list	*(struct)
->	O
tail	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
=	O
entry	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
;	O
}	O
void	O
linked_list_destroy	(*(*(struct(*((*`)->(void)),*(struct`),*(struct`)))))->(void)
(	O
struct	O
linked_list	struct(*((*(void))->(void)),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))))
*	O
*	O
plist	*(*(struct(*((*`)->(void)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))
)	O
{	O
if	O
(	O
plist	*(*(struct(*((*`)->(void)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))
&&	O
*	O
plist	*(*(struct(*((*`)->(void)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))
)	O
{	O
struct	O
linked_list	struct(*((*(void))->(void)),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))))
*	O
list	*(struct)
=	O
*	O
plist	*(*(struct(*((*`)->(void)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))
;	O
struct	O
linked_list_entry	struct(*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct),*(void))
*	O
p	*(void)
;	O
for	O
(	O
p	*(void)
=	O
list	*(struct)
->	O
head	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
;	O
p	*(void)
;	O
)	O
{	O
struct	O
linked_list_entry	struct(*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct),*(void))
*	O
next	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void)))
=	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void)))
;	O
if	O
(	O
list	*(struct)
->	O
free_data	*((*(void))->(void))
)	O
list	*(struct)
->	O
free_data	*((*(void))->(void))
(	O
p	*(void)
->	O
data	*(void)
)	O
;	O
free	(*(void))->(void)
(	O
p	*(void)
)	O
;	O
p	*(void)
=	O
next	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void)))
;	O
}	O
free	(*(void))->(void)
(	O
list	*(struct)
)	O
;	O
*	O
plist	*(*(struct(*((*`)->(void)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))
=	O
NULL	O
;	O
}	O
}	O
void	O
linked_list_unlink	(*(struct(*((*`)->(void)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))),*(struct(*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`)),*(void))))->(void)
(	O
struct	O
linked_list	struct(*((*(void))->(void)),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))))
*	O
list	*(struct)
,	O
struct	O
linked_list_entry	struct(*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct),*(void))
*	O
ent	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
)	O
{	O
struct	O
linked_list_entry	struct(*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct),*(void))
*	O
p	*(void)
;	O
if	O
(	O
(	O
p	*(void)
=	O
ent	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
->	O
prev	*(struct(*(char),*(struct(*(char),*(struct`),array(char))),array(char)))
)	O
)	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void)))
=	O
ent	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void)))
;	O
else	O
list	*(struct)
->	O
head	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
=	O
ent	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void)))
;	O
if	O
(	O
(	O
p	*(void)
=	O
ent	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void)))
)	O
)	O
p	*(void)
->	O
prev	*(struct(*(char),*(struct(*(char),*(struct`),array(char))),array(char)))
=	O
ent	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
->	O
prev	*(struct(*(char),*(struct(*(char),*(struct`),array(char))),array(char)))
;	O
else	O
list	*(struct)
->	O
tail	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
=	O
ent	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
->	O
prev	*(struct(*(char),*(struct(*(char),*(struct`),array(char))),array(char)))
;	O
if	O
(	O
list	*(struct)
->	O
free_data	*((*(void))->(void))
)	O
list	*(struct)
->	O
free_data	*((*(void))->(void))
(	O
ent	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
->	O
data	*(void)
)	O
;	O
free	(*(void))->(void)
(	O
ent	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
)	O
;	O
}	O
void	O
linked_list_iterate	(*(*(struct(*((*`)->(void)),*(struct`),*(struct`)))),*((*(void),*(void))->(int)),*(void))->(void)
(	O
struct	O
linked_list	struct(*((*(void))->(void)),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))))
*	O
*	O
plist	*(*(struct(*((*`)->(void)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))
,	O
int	O
(	O
*	O
itr	*((*(void),*(void))->(int))
)	O
(	O
void	O
*	O
,	O
void	O
*	O
)	O
,	O
void	O
*	O
data	*(void)
)	O
{	O
struct	O
linked_list	struct(*((*(void))->(void)),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))))
*	O
list	*(struct)
;	O
struct	O
linked_list_entry	struct(*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct),*(void))
*	O
p	*(void)
;	O
if	O
(	O
!	O
*	O
plist	*(*(struct(*((*`)->(void)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))
)	O
return	O
;	O
list	*(struct)
=	O
*	O
plist	*(*(struct(*((*`)->(void)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))
;	O
for	O
(	O
p	*(void)
=	O
linked_list_head	O
(	O
list	*(struct)
)	O
;	O
p	*(void)
;	O
)	O
{	O
struct	O
linked_list_entry	struct(*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct),*(void))
*	O
next	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void)))
=	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void)))
;	O
if	O
(	O
itr	*((*(void),*(void))->(int))
(	O
p	*(void)
->	O
data	*(void)
,	O
data	*(void)
)	O
)	O
linked_list_unlink	(*(struct(*((*`)->(void)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))),*(struct(*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`)),*(void))))->(void)
(	O
list	*(struct)
,	O
p	*(void)
)	O
;	O
p	*(void)
=	O
next	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void)))
;	O
}	O
if	O
(	O
!	O
list	*(struct)
->	O
head	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void)))
)	O
linked_list_destroy	(*(*(struct(*((*`)->(void)),*(struct`),*(struct`)))))->(void)
(	O
&	O
list	*(struct)
)	O
;	O
*	O
plist	*(*(struct(*((*`)->(void)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))
=	O
list	*(struct)
;	O
}	O
int	O
data_in_list	(*(void),*(struct(*((*`)->(void)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))->(int)
(	O
void	O
*	O
data	*(void)
,	O
struct	O
linked_list	struct(*((*(void))->(void)),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))))
*	O
list	*(struct)
)	O
{	O
struct	O
linked_list_entry	struct(*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct),*(void))
*	O
p	*(void)
;	O
for	O
(	O
p	*(void)
=	O
linked_list_head	O
(	O
list	*(struct)
)	O
;	O
p	*(void)
;	O
p	*(void)
=	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void)))
)	O
if	O
(	O
p	*(void)
->	O
data	*(void)
==	O
data	*(void)
)	O
return	O
1	int
;	O
return	O
0	int
;	O
}	O
size_t	long
linked_list_size	(*(struct(*((*`)->(void)),*(struct(*`,*`,*`,*`)),*(struct(*`,*`,*`,*`)))))->(long)
(	O
struct	O
linked_list	struct(*((*(void))->(void)),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*((*`)->(void)),*(struct`),*(struct`))),*(void))))
*	O
list	*(struct)
)	O
{	O
size_t	long
size	long
=	O
0	int
;	O
if	O
(	O
list	*(struct)
)	O
{	O
struct	O
linked_list_entry	struct(*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void))),*(struct),*(void))
*	O
p	*(void)
;	O
for	O
(	O
p	*(void)
=	O
linked_list_head	O
(	O
list	*(struct)
)	O
;	O
p	*(void)
;	O
p	*(void)
=	O
p	*(void)
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(struct`),*(void))),*(struct),*(void)))
)	O
size	long
++	O
;	O
}	O
return	O
size	long
;	O
}	O
