typedef	O
struct	O
{	O
const	O
char	O
*	O
hostname	*(char)
,	O
*	O
ip	*(char)
;	O
wget_hpkp_stats_result	enum(int,int,int,int)
hpkp	*(*(struct))
;	O
wget_iri_scheme	enum(int,int)
scheme	enum(int,int)
;	O
char	O
hsts	bool
,	O
csp	bool
,	O
hpkp_new	char
;	O
}	O
server_stats_data	struct(*(char),*(char),enum(int,int,int,int),enum(int,int),char,char,char)
;	O
typedef	O
struct	O
{	O
const	O
char	O
*	O
hostname	*(char)
,	O
*	O
ip	*(char)
;	O
wget_iri_scheme	enum(int,int)
scheme	enum(int,int)
;	O
}	O
server_stats_host	struct(*(char),*(char),enum(int,int))
;	O
static	O
wget_hashmap	struct
*	O
hosts	*(struct)
;	O
static	O
wget_thread_mutex	*(struct)
mutex	*(*(struct))
;	O
static	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
static	O
int	O
host_compare	(*(struct(*(char),*(char),enum(int,int))),*(struct(*(char),*(char),enum(int,int))))->(int)
(	O
const	O
server_stats_host	struct(*(char),*(char),enum(int,int))
*	O
host1	*(struct(*(char),*(char),enum(int,int)))
,	O
const	O
server_stats_host	struct(*(char),*(char),enum(int,int))
*	O
host2	*(struct(*(char),*(char),enum(int,int)))
)	O
{	O
int	O
n	long
;	O
if	O
(	O
(	O
n	long
=	O
wget_strcmp	(*(char),*(char))->(int)
(	O
host1	*(struct(*(char),*(char),enum(int,int)))
->	O
hostname	*(char)
,	O
host2	*(struct(*(char),*(char),enum(int,int)))
->	O
hostname	*(char)
)	O
)	O
)	O
return	O
n	long
;	O
if	O
(	O
(	O
n	long
=	O
wget_strcmp	(*(char),*(char))->(int)
(	O
host1	*(struct(*(char),*(char),enum(int,int)))
->	O
ip	*(char)
,	O
host2	*(struct(*(char),*(char),enum(int,int)))
->	O
ip	*(char)
)	O
)	O
)	O
return	O
n	long
;	O
return	O
host1	*(struct(*(char),*(char),enum(int,int)))
->	O
scheme	enum(int,int)
-	O
host2	*(struct(*(char),*(char),enum(int,int)))
->	O
scheme	enum(int,int)
;	O
}	O
__attribute__	O
(	O
(	O
no_sanitize	O
(	O
"integer"	*(char)
)	O
)	O
)	O
static	O
unsigned	O
int	O
host_hash	(*(struct(*(char),*(char),enum(int,int))))->(int)
(	O
const	O
server_stats_host	struct(*(char),*(char),enum(int,int))
*	O
host	*(char)
)	O
{	O
unsigned	O
int	O
hash	*((*(void))->(int))
=	O
host	*(char)
->	O
scheme	enum(int,int)
;	O
const	O
unsigned	O
char	O
*	O
p	*(char)
;	O
for	O
(	O
p	*(char)
=	O
(	O
unsigned	O
char	O
*	O
)	O
host	*(char)
->	O
hostname	*(char)
;	O
p	*(char)
&&	O
*	O
p	*(char)
;	O
p	*(char)
++	O
)	O
hash	*((*(void))->(int))
=	O
hash	*((*(void))->(int))
*	O
101	int
+	O
*	O
p	*(char)
;	O
for	O
(	O
p	*(char)
=	O
(	O
unsigned	O
char	O
*	O
)	O
host	*(char)
->	O
ip	*(char)
;	O
p	*(char)
&&	O
*	O
p	*(char)
;	O
p	*(char)
++	O
)	O
hash	*((*(void))->(int))
=	O
hash	*((*(void))->(int))
*	O
101	int
+	O
*	O
p	*(char)
;	O
return	O
hash	*((*(void))->(int))
;	O
}	O
static	O
void	O
free_host_entry	(*(struct(*(char),*(char),enum(int,int))))->(void)
(	O
server_stats_host	struct(*(char),*(char),enum(int,int))
*	O
host	*(char)
)	O
{	O
if	O
(	O
host	*(char)
)	O
{	O
wget_xfree	O
(	O
host	*(char)
->	O
hostname	*(char)
)	O
;	O
wget_xfree	O
(	O
host	*(char)
->	O
ip	*(char)
)	O
;	O
wget_xfree	O
(	O
host	*(char)
)	O
;	O
}	O
}	O
WGET_GCC_CONST	O
static	O
const	O
char	O
*	O
hpkp_string	(enum(int,int,int,int))->(*(char))
(	O
wget_hpkp_stats_result	enum(int,int,int,int)
hpkp	*(*(struct))
)	O
{	O
switch	O
(	O
hpkp	*(*(struct))
)	O
{	O
case	O
WGET_STATS_HPKP_NO	int
:	O
return	O
"HPKP_NO"	*(char)
;	O
case	O
WGET_STATS_HPKP_MATCH	int
:	O
return	O
"HPKP_MATCH"	*(char)
;	O
case	O
WGET_STATS_HPKP_NOMATCH	int
:	O
return	O
"HPKP_NOMATCH"	*(char)
;	O
case	O
WGET_STATS_HPKP_ERROR	int
:	O
return	O
"HPKP_ERROR"	*(char)
;	O
default	O
:	O
return	O
"?"	*(char)
;	O
}	O
}	O
static	O
void	O
server_stats_print	(*(struct(*(char),*(char),enum(int,int,int,int),enum(int,int),char,char,char)))->(void)
(	O
server_stats_data	struct(*(char),*(char),enum(int,int,int,int),enum(int,int),char,char,char)
*	O
stats	*(struct(*(char),*(char),short,long long))
)	O
{	O
if	O
(	O
config	struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),array(enum(int,int,int,int,int,int,int,int,int,int)),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int))),*(struct(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int))),*(struct(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int))),*(struct(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int))),*(struct(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int))),*(char),*(char),long,long long,long long,long long,bool,bool,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,short,short,enum(int,int),char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char,char)
.	O
stats_server_args	*(struct(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int)))
->	O
format	enum(int,int)
==	O
WGET_STATS_FORMAT_HUMAN	int
)	O
{	O
wget_fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(long)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"  %s:\n"	*(char)
,	O
NULL_TO_DASH	O
(	O
stats	*(struct(*(char),*(char),short,long long))
->	O
hostname	*(char)
)	O
)	O
;	O
wget_fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(long)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"    IP             : %s\n"	*(char)
,	O
NULL_TO_DASH	O
(	O
stats	*(struct(*(char),*(char),short,long long))
->	O
ip	*(char)
)	O
)	O
;	O
wget_fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(long)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"    Scheme         : %s\n"	*(char)
,	O
wget_iri_scheme_get_name	(enum(int,int))->(*(char))
(	O
stats	*(struct(*(char),*(char),short,long long))
->	O
scheme	enum(int,int)
)	O
)	O
;	O
wget_fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(long)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"    HPKP           : %s\n"	*(char)
,	O
hpkp_string	(enum(int,int,int,int))->(*(char))
(	O
stats	*(struct(*(char),*(char),short,long long))
->	O
hpkp	*(*(struct))
)	O
)	O
;	O
wget_fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(long)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"    HPKP New Entry : %s\n"	*(char)
,	O
ON_OFF_DASH	O
(	O
stats	*(struct(*(char),*(char),short,long long))
->	O
hpkp_new	char
)	O
)	O
;	O
wget_fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(long)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"    HSTS           : %s\n"	*(char)
,	O
ON_OFF_DASH	O
(	O
stats	*(struct(*(char),*(char),short,long long))
->	O
hsts	bool
)	O
)	O
;	O
wget_fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(long)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"    CSP            : %s\n\n"	*(char)
,	O
ON_OFF_DASH	O
(	O
stats	*(struct(*(char),*(char),short,long long))
->	O
csp	bool
)	O
)	O
;	O
}	O
else	O
{	O
wget_fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(long)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s,%s,%s,%d,%d,%d,%d\n"	*(char)
,	O
stats	*(struct(*(char),*(char),short,long long))
->	O
hostname	*(char)
?	O
stats	*(struct(*(char),*(char),short,long long))
->	O
hostname	*(char)
:	O
""	*(char)
,	O
stats	*(struct(*(char),*(char),short,long long))
->	O
ip	*(char)
?	O
stats	*(struct(*(char),*(char),short,long long))
->	O
ip	*(char)
:	O
""	*(char)
,	O
wget_iri_scheme_get_name	(enum(int,int))->(*(char))
(	O
stats	*(struct(*(char),*(char),short,long long))
->	O
scheme	enum(int,int)
)	O
,	O
(	O
int	O
)	O
stats	*(struct(*(char),*(char),short,long long))
->	O
hpkp	*(*(struct))
,	O
stats	*(struct(*(char),*(char),short,long long))
->	O
hpkp_new	char
,	O
stats	*(struct(*(char),*(char),short,long long))
->	O
hsts	bool
,	O
stats	*(struct(*(char),*(char),short,long long))
->	O
csp	bool
)	O
;	O
}	O
}	O
static	O
void	O
server_stats_add	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,int,int,int,int,int,int,int,enum(int,int,int,int),bool,bool,bool,bool)),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct),*(struct),int,enum(int,int),short,char,bool,bool,bool)),*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))->(void)
(	O
wget_http_connection	struct
*	O
conn	*(struct)
,	O
wget_http_response	struct
*	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
)	O
{	O
server_stats_host	struct(*(char),*(char),enum(int,int))
*	O
hostp	*(struct(*(char),*(char),enum(int,int)))
=	O
wget_malloc	(long)->(*(void))
(	O
sizeof	O
(	O
server_stats_host	struct(*(char),*(char),enum(int,int))
)	O
)	O
;	O
hostp	*(struct(*(char),*(char),enum(int,int)))
->	O
hostname	*(char)
=	O
wget_strdup	(*(char))->(*(char))
(	O
wget_http_get_host	(*(struct))->(*(char))
(	O
conn	*(struct)
)	O
)	O
;	O
hostp	*(struct(*(char),*(char),enum(int,int)))
->	O
ip	*(char)
=	O
wget_strdup	(*(char))->(*(char))
(	O
wget_tcp_get_ip	(*(struct))->(*(char))
(	O
conn	*(struct)
->	O
tcp	*(*(struct))
)	O
)	O
;	O
hostp	*(struct(*(char),*(char),enum(int,int)))
->	O
scheme	enum(int,int)
=	O
conn	*(struct)
->	O
scheme	enum(int,int)
;	O
wget_thread_mutex_lock	(*(struct))->(void)
(	O
mutex	*(*(struct))
)	O
;	O
if	O
(	O
!	O
wget_hashmap_contains	(*(struct),*(void))->(int)
(	O
hosts	*(struct)
,	O
hostp	*(struct(*(char),*(char),enum(int,int)))
)	O
)	O
{	O
server_stats_data	struct(*(char),*(char),enum(int,int,int,int),enum(int,int),char,char,char)
stats	*(struct(*(char),*(char),short,long long))
;	O
stats	*(struct(*(char),*(char),short,long long))
.	O
hostname	*(char)
=	O
hostp	*(struct(*(char),*(char),enum(int,int)))
->	O
hostname	*(char)
;	O
stats	*(struct(*(char),*(char),short,long long))
.	O
ip	*(char)
=	O
hostp	*(struct(*(char),*(char),enum(int,int)))
->	O
ip	*(char)
;	O
stats	*(struct(*(char),*(char),short,long long))
.	O
scheme	enum(int,int)
=	O
hostp	*(struct(*(char),*(char),enum(int,int)))
->	O
scheme	enum(int,int)
;	O
stats	*(struct(*(char),*(char),short,long long))
.	O
hpkp	*(*(struct))
=	O
conn	*(struct)
->	O
tcp	*(*(struct))
->	O
hpkp	*(*(struct))
;	O
stats	*(struct(*(char),*(char),short,long long))
.	O
hpkp_new	char
=	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
?	O
(	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
->	O
hpkp	*(*(struct))
?	O
1	int
:	O
0	int
)	O
:	O
-	O
1	int
;	O
stats	*(struct(*(char),*(char),short,long long))
.	O
hsts	bool
=	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
?	O
(	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
->	O
hsts	bool
?	O
1	int
:	O
0	int
)	O
:	O
-	O
1	int
;	O
stats	*(struct(*(char),*(char),short,long long))
.	O
csp	bool
=	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
?	O
(	O
resp	*(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))
->	O
csp	bool
?	O
1	int
:	O
0	int
)	O
:	O
-	O
1	int
;	O
server_stats_print	(*(struct(*(char),*(char),enum(int,int,int,int),enum(int,int),char,char,char)))->(void)
(	O
&	O
stats	*(struct(*(char),*(char),short,long long))
)	O
;	O
wget_hashmap_put	(*(struct),*(void),*(void))->(int)
(	O
hosts	*(struct)
,	O
hostp	*(struct(*(char),*(char),enum(int,int)))
,	O
hostp	*(struct(*(char),*(char),enum(int,int)))
)	O
;	O
}	O
else	O
free_host_entry	(*(struct(*(char),*(char),enum(int,int))))->(void)
(	O
hostp	*(struct(*(char),*(char),enum(int,int)))
)	O
;	O
wget_thread_mutex_unlock	(*(struct))->(void)
(	O
mutex	*(*(struct))
)	O
;	O
}	O
void	O
server_stats_init	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
FILE	struct
*	O
fpout	*(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
)	O
{	O
wget_thread_mutex_init	(*(*(struct)))->(int)
(	O
&	O
mutex	*(*(struct))
)	O
;	O
hosts	*(struct)
=	O
wget_hashmap_create	(int,*((*(void))->(int)),*((*(void),*(void))->(int)))->(*(struct))
(	O
16	int
,	O
(	O
wget_hashmap_hash_fn	(*(void))->(int)
*	O
)	O
host_hash	(*(struct(*(char),*(char),enum(int,int))))->(int)
,	O
(	O
wget_hashmap_compare_fn	(*(void),*(void))->(int)
*	O
)	O
host_compare	(*(struct(*(char),*(char),enum(int,int))),*(struct(*(char),*(char),enum(int,int))))->(int)
)	O
;	O
wget_hashmap_set_key_destructor	(*(struct),*((*(void))->(void)))->(void)
(	O
hosts	*(struct)
,	O
(	O
wget_hashmap_key_destructor	(*(void))->(void)
*	O
)	O
free_host_entry	(*(struct(*(char),*(char),enum(int,int))))->(void)
)	O
;	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fpout	*(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
;	O
wget_server_set_stats_callback	(*((*(struct),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))->(void)))->(void)
(	O
server_stats_add	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,int,int,int,int,int,int,int,enum(int,int,int,int),bool,bool,bool,bool)),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct),*(struct),int,enum(int,int),short,char,bool,bool,bool)),*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,struct`,struct`,long,int,enum(int,int),array(char),array(char),array(char),bool,bool,long long,long long)),*(struct),*(struct),*(struct),*(struct),*(struct),*(char),*(char),*(char),*(char),*(char),*(struct(*`,long,long,bool,bool,bool)),*(struct(*`,long,long,bool,bool,bool)),long,long,long,long,long,array(char),int,short,short,short,enum(int,int),char,char,char,bool,bool,bool,long long)))->(void)
)	O
;	O
}	O
void	O
server_stats_exit	()->(void)
(	O
void	O
)	O
{	O
wget_hashmap_free	(*(*(struct)))->(void)
(	O
&	O
hosts	*(struct)
)	O
;	O
wget_thread_mutex_destroy	(*(*(struct)))->(int)
(	O
&	O
mutex	*(*(struct))
)	O
;	O
}	O
