static	O
__osip_message_config_t	struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int)
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
NUMBER_OF_HEADERS	int
]	O
;	O
static	O
__osip_message_config_commaseparated_t	struct(array(char))
pconfig_commasep	array(struct(array(char)))
[	O
NUMBER_OF_HEADERS_COMMASEPARATED	int
]	O
;	O
static	O
int	O
hdr_ref_table	array(int)
[	O
HASH_TABLE_SIZE	int
]	O
;	O
int	O
parser_init	()->(int)
(	O
void	O
)	O
{	O
int	O
i	int
=	O
0	int
;	O
int	O
hname_length	int
=	O
sizeof	O
(	O
pconfig_commasep	array(struct(array(char)))
[	O
0	int
]	O
.	O
hname	*(char)
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
pconfig_commasep	array(struct(array(char)))
,	O
0	int
,	O
sizeof	O
(	O
pconfig_commasep	array(struct(array(char)))
)	O
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Accept"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"a"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Accept-Encoding"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Accept-Language"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Alert-Info"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Allow"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Authentication-Info"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Call-Info"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Contact"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"m"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Content-Encoding"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"e"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Content-Language"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Error-Info"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"In-Reply-To"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Proxy-Require"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Record-Route"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Require"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Route"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Supported"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"k"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Unsupported"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Via"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"v"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Warning"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"P-Media-Authorization"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"P-Asserted-Identity"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"P-Preferred-Identity"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Reason"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Path"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Security-Client"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Security-Server"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Security-Verify"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Service-Route"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Request-Disposition"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"d"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Accept-Contact"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"a"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Reject-Contact"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"j"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Resource-Priority"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Accept-Resource-Priority"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"P-Early-Media"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"P-Refused-URI-List"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Permission-Missing"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Trigger-Consent"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"P-Asserted-Service"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"P-Preferred-Service"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Recv-Info"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Allow-Events"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"u"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Policy-ID"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Policy-Contact"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Feature-Caps"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"History-Info"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"Accept"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"P-Associated-URI"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"P-Visited-Network-ID"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"P-Access-Network-Info"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"P-Charging-Function-Addresses"	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
++	O
]	O
.	O
hname	*(char)
,	O
hname_length	int
,	O
"%s"	*(char)
,	O
"User-to-User"	*(char)
)	O
;	O
i	int
=	O
0	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
ACCEPT	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_accept	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
ACCEPT_ENCODING	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_accept_encoding	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
ACCEPT_LANGUAGE	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_accept_language	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
ALERT_INFO	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_alert_info	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
ALLOW	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_allow	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
AUTHENTICATION_INFO	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_authentication_info	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
AUTHORIZATION	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_authorization	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
CONTENT_TYPE_SHORT	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_content_type	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
CALL_ID	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_call_id	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
CALL_INFO	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_call_info	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
CONTACT	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_contact	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
CONTENT_ENCODING	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_content_encoding	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
CONTENT_LENGTH	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_content_length	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
CONTENT_TYPE	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_content_type	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
CSEQ	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_cseq	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
CONTENT_ENCODING_SHORT	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_content_encoding	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
ERROR_INFO	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_error_info	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
FROM_SHORT	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_from	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
FROM	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_from	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
CALL_ID_SHORT	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_call_id	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
CONTENT_LENGTH_SHORT	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_content_length	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
CONTACT_SHORT	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_contact	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
MIME_VERSION	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_mime_version	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
PROXY_AUTHENTICATE	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_proxy_authenticate	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
PROXY_AUTHENTICATION_INFO	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_proxy_authentication_info	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
PROXY_AUTHORIZATION	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_proxy_authorization	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
RECORD_ROUTE	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_record_route	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
ROUTE	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_route	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
TO_SHORT	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_to	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
TO	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_to	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
VIA_SHORT	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_via	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
VIA	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_via	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
=	O
WWW_AUTHENTICATE	*(char)
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
++	O
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
=	O
(	O
&	O
osip_message_set_www_authenticate	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
HASH_TABLE_SIZE	int
;	O
i	int
++	O
)	O
{	O
hdr_ref_table	array(int)
[	O
i	int
]	O
=	O
-	O
1	int
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
NUMBER_OF_HEADERS	int
;	O
i	int
++	O
)	O
{	O
unsigned	O
long	O
hash	long
;	O
hash	long
=	O
osip_hash	(*(char))->(long)
(	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
)	O
;	O
hash	long
=	O
hash	long
%	O
HASH_TABLE_SIZE	int
;	O
if	O
(	O
hdr_ref_table	array(int)
[	O
hash	long
]	O
==	O
-	O
1	int
)	O
{	O
hdr_ref_table	array(int)
[	O
hash	long
]	O
=	O
i	int
;	O
}	O
else	O
{	O
OSIP_TRACE	O
(	O
osip_trace	(*(char),int,enum(int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_ERROR	O
,	O
NULL	O
,	O
"conflict with current hashtable size\n"	*(char)
)	O
)	O
;	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
}	O
}	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
parser_add_comma_separated_header	(*(char))->(int)
(	O
const	O
char	O
*	O
hname	*(char)
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
NUMBER_OF_HEADERS_COMMASEPARATED	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
]	O
.	O
hname	*(char)
[	O
0	int
]	O
==	O
'\0'	O
)	O
{	O
snprintf	(*(char),long,*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
]	O
.	O
hname	*(char)
,	O
sizeof	O
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
]	O
.	O
hname	*(char)
)	O
,	O
"%s"	*(char)
,	O
hname	*(char)
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
}	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
}	O
int	O
__osip_message_is_header_comma_separated	(*(char))->(int)
(	O
const	O
char	O
*	O
hname	*(char)
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
NUMBER_OF_HEADERS_COMMASEPARATED	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
]	O
.	O
hname	*(char)
[	O
0	int
]	O
==	O
'\0'	O
)	O
break	O
;	O
if	O
(	O
osip_strcasecmp	(*(char),*(char))->(int)
(	O
pconfig_commasep	array(struct(array(char)))
[	O
i	int
]	O
.	O
hname	*(char)
,	O
hname	*(char)
)	O
==	O
0	int
)	O
return	O
OSIP_SUCCESS	int
;	O
}	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
}	O
int	O
__osip_message_is_known_header	(*(char))->(int)
(	O
const	O
char	O
*	O
hname	*(char)
)	O
{	O
unsigned	O
long	O
hash	long
;	O
int	O
result	*(*(char))
=	O
-	O
1	int
;	O
int	O
index	(*(char),int)->(*(char))
;	O
hash	long
=	O
osip_hash	(*(char))->(long)
(	O
hname	*(char)
)	O
;	O
hash	long
=	O
hash	long
%	O
HASH_TABLE_SIZE	int
;	O
index	(*(char),int)->(*(char))
=	O
hdr_ref_table	array(int)
[	O
hash	long
]	O
;	O
if	O
(	O
(	O
index	(*(char),int)->(*(char))
!=	O
-	O
1	int
)	O
&&	O
(	O
0	int
==	O
strcmp	(*(char),*(char))->(int)
(	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
index	(*(char),int)->(*(char))
]	O
.	O
hname	*(char)
,	O
hname	*(char)
)	O
)	O
)	O
{	O
result	*(*(char))
=	O
index	(*(char),int)->(*(char))
;	O
}	O
return	O
result	*(*(char))
;	O
}	O
int	O
__osip_message_call_method	(int,*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
(	O
int	O
i	int
,	O
osip_message_t	struct
*	O
dest	*(char)
,	O
const	O
char	O
*	O
hvalue	*(char)
)	O
{	O
int	O
err	int
;	O
err	int
=	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
setheader	*((*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char))->(int))
(	O
dest	*(char)
,	O
hvalue	*(char)
)	O
;	O
if	O
(	O
err	int
<	O
0	int
)	O
{	O
OSIP_TRACE	O
(	O
osip_trace	(*(char),int,enum(int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_WARNING	O
,	O
NULL	O
,	O
"Could not set header: %s: %s\n"	*(char)
,	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
hname	*(char)
,	O
hvalue	*(char)
)	O
)	O
;	O
}	O
if	O
(	O
pconfig	array(struct(*(char),*((*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)),*(char))->(int)),int))
[	O
i	int
]	O
.	O
ignored_when_invalid	int
==	O
1	int
)	O
return	O
OSIP_SUCCESS	int
;	O
return	O
err	int
;	O
}	O
