const	O
char	O
_uuconf_rdperm_rcsid	array(char)
[	O
]	O
=	O
"$Id: rdperm.c,v 1.12 2002/03/05 19:10:42 ian Rel $"	*(char)
;	O
static	O
int	O
ihcolon	(*(void),int,*(*(char)),*(void),*(void))->(int)
P	O
(	O
(	O
pointer	*(void)
pglobal	*(void)
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
,	O
pointer	*(void)
pvar	*(void)
,	O
pointer	*(void)
pinfo	*(void)
)	O
)	O
;	O
static	O
int	O
ihsendfiles	(*(void),int,*(*(char)),*(void),*(void))->(int)
P	O
(	O
(	O
pointer	*(void)
pglobal	*(void)
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
,	O
pointer	*(void)
pvar	*(void)
,	O
pointer	*(void)
pinfo	*(void)
)	O
)	O
;	O
static	O
int	O
ihunknownperm	(*(void),int,*(*(char)),*(void),*(void))->(int)
P	O
(	O
(	O
pointer	*(void)
pglobal	*(void)
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
,	O
pointer	*(void)
pvar	*(void)
,	O
pointer	*(void)
pinfo	*(void)
)	O
)	O
;	O
static	O
int	O
ihadd_norw	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,int,int,int,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,int,*`)),*(void),int,*(char),int)),*(*(*(char))),*(*(char)))->(int)
P	O
(	O
(	O
struct	O
sglobal	struct(*(struct),*(void),int,*(char),int)
*	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
,	O
char	O
*	O
*	O
*	O
ppz	*(*(*(char)))
,	O
char	O
*	O
*	O
pzno	*(*(char))
)	O
)	O
;	O
static	O
const	O
struct	O
cmdtab_offset	struct(*(char),int,long,*((*(void),int,*(*(char)),*(void),*(void))->(int)))
asHperm_cmds	array(struct(*(char),int,long,*((*(void),int,*(*(char)),*(void),*(void))->(int))))
[	O
]	O
=	O
{	O
{	O
"NOREAD"	*(char)
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
2	int
,	O
(	O
size_t	long
)	O
-	O
1	int
,	O
ihcolon	(*(void),int,*(*(char)),*(void),*(void))->(int)
}	O
,	O
{	O
"NOWRITE"	*(char)
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
2	int
,	O
(	O
size_t	long
)	O
-	O
1	int
,	O
ihcolon	(*(void),int,*(*(char)),*(void),*(void))->(int)
}	O
,	O
{	O
"LOGNAME"	*(char)
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
2	int
,	O
offsetof	O
(	O
struct	O
shpermissions	struct(*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
,	O
pzlogname	*(*(char))
)	O
,	O
ihcolon	(*(void),int,*(*(char)),*(void),*(void))->(int)
}	O
,	O
{	O
"MACHINE"	*(char)
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
2	int
,	O
offsetof	O
(	O
struct	O
shpermissions	struct(*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
,	O
pzmachine	*(*(char))
)	O
,	O
ihcolon	(*(void),int,*(*(char)),*(void),*(void))->(int)
}	O
,	O
{	O
"REQUEST"	*(char)
,	O
UUCONF_CMDTABTYPE_BOOLEAN	O
,	O
offsetof	O
(	O
struct	O
shpermissions	struct(*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
,	O
frequest	int
)	O
,	O
NULL	O
}	O
,	O
{	O
"SENDFILES"	*(char)
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
2	int
,	O
offsetof	O
(	O
struct	O
shpermissions	struct(*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
,	O
fsendfiles	int
)	O
,	O
ihsendfiles	(*(void),int,*(*(char)),*(void),*(void))->(int)
}	O
,	O
{	O
"READ"	*(char)
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
2	int
,	O
offsetof	O
(	O
struct	O
shpermissions	struct(*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
,	O
pzread	*(*(char))
)	O
,	O
ihcolon	(*(void),int,*(*(char)),*(void),*(void))->(int)
}	O
,	O
{	O
"WRITE"	*(char)
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
2	int
,	O
offsetof	O
(	O
struct	O
shpermissions	struct(*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
,	O
pzwrite	*(*(char))
)	O
,	O
ihcolon	(*(void),int,*(*(char)),*(void),*(void))->(int)
}	O
,	O
{	O
"CALLBACK"	*(char)
,	O
UUCONF_CMDTABTYPE_BOOLEAN	O
,	O
offsetof	O
(	O
struct	O
shpermissions	struct(*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
,	O
fcallback	int
)	O
,	O
NULL	O
}	O
,	O
{	O
"COMMANDS"	*(char)
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
2	int
,	O
offsetof	O
(	O
struct	O
shpermissions	struct(*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
,	O
pzcommands	*(*(char))
)	O
,	O
ihcolon	(*(void),int,*(*(char)),*(void),*(void))->(int)
}	O
,	O
{	O
"VALIDATE"	*(char)
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
2	int
,	O
offsetof	O
(	O
struct	O
shpermissions	struct(*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
,	O
pzvalidate	*(*(char))
)	O
,	O
ihcolon	(*(void),int,*(*(char)),*(void),*(void))->(int)
}	O
,	O
{	O
"MYNAME"	*(char)
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
offsetof	O
(	O
struct	O
shpermissions	struct(*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
,	O
zmyname	*(char)
)	O
,	O
NULL	O
}	O
,	O
{	O
"PUBDIR"	*(char)
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
offsetof	O
(	O
struct	O
shpermissions	struct(*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
,	O
zpubdir	*(char)
)	O
,	O
NULL	O
}	O
,	O
{	O
"ALIAS"	*(char)
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
2	int
,	O
offsetof	O
(	O
struct	O
shpermissions	struct(*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
,	O
pzalias	*(*(char))
)	O
,	O
ihcolon	(*(void),int,*(*(char)),*(void),*(void))->(int)
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
0	int
,	O
NULL	O
}	O
}	O
;	O
int	O
_uuconf_ihread_permissions	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,int,int,int,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,int,*`)),*(void),int,*(char),int)))->(int)
(	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
)	O
struct	O
sglobal	struct(*(struct),*(void),int,*(char),int)
*	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
;	O
{	O
char	O
*	O
zperm	*(char)
;	O
FILE	struct
*	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
int	O
iret	int
;	O
struct	O
uuconf_cmdtab	struct(*(char),int,*(void),*((*(void),int,*(*(char)),*(void),*(void))->(int)))
as	array(struct(*(char),int,*(void),*((*(void),int,*(*(char)),*(void),*(void))->(int))))
[	O
CHPERM_CMDS	O
]	O
;	O
char	O
*	O
*	O
pznoread	*(*(char))
,	O
*	O
*	O
pznowrite	*(*(char))
;	O
struct	O
shpermissions	struct(*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
shperm	struct(*(struct(*(struct(*`,*`,*`,int,int,*`,*`,int,*`,*`,*`,*`,*`)),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
;	O
char	O
*	O
zline	*(char)
;	O
size_t	long
cline	long
;	O
char	O
*	O
*	O
pzsplit	*(*(char))
;	O
size_t	long
csplit	*(long)
;	O
int	O
cchars	int
;	O
struct	O
shpermissions	struct(*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
*	O
qlist	*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char))))
,	O
*	O
*	O
pq	*(*(struct(int,*(struct(int,*`)))))
;	O
if	O
(	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
qprocess	*(struct)
->	O
fhdb_read_permissions	int
)	O
return	O
UUCONF_SUCCESS	O
;	O
zperm	*(char)
=	O
(	O
char	O
*	O
)	O
uuconf_malloc	(*(void),long)->(*(void))
(	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
pblock	*(void)
,	O
(	O
sizeof	O
OLDCONFIGLIB	O
+	O
sizeof	O
HDB_PERMISSIONS	*(char)
-	O
1	int
)	O
)	O
;	O
if	O
(	O
zperm	*(char)
==	O
NULL	O
)	O
{	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
ierrno	int
=	O
errno	O
;	O
return	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
(	O
pointer	*(void)
)	O
zperm	*(char)
,	O
(	O
pointer	*(void)
)	O
OLDCONFIGLIB	O
,	O
sizeof	O
OLDCONFIGLIB	O
-	O
1	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
(	O
pointer	*(void)
)	O
(	O
zperm	*(char)
+	O
sizeof	O
OLDCONFIGLIB	O
-	O
1	int
)	O
,	O
(	O
pointer	*(void)
)	O
HDB_PERMISSIONS	*(char)
,	O
sizeof	O
HDB_PERMISSIONS	*(char)
)	O
;	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
zperm	*(char)
,	O
"r"	*(char)
)	O
;	O
if	O
(	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
==	O
NULL	O
)	O
{	O
uuconf_free	(*(void),*(void))->(void)
(	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
pblock	*(void)
,	O
zperm	*(char)
)	O
;	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
qprocess	*(struct)
->	O
fhdb_read_permissions	int
=	O
TRUE	O
;	O
return	O
UUCONF_SUCCESS	O
;	O
}	O
_uuconf_ucmdtab_base	(*(struct(*(char),int,long,*((*`,int,*`,*`,*`)->(int)))),long,*(char),*(struct(*(char),int,*(void),*((*`,int,*`,*`,*`)->(int)))))->(void)
(	O
asHperm_cmds	array(struct(*(char),int,long,*((*(void),int,*(*(char)),*(void),*(void))->(int))))
,	O
CHPERM_CMDS	O
,	O
(	O
char	O
*	O
)	O
&	O
shperm	struct(*(struct(*(struct(*`,*`,*`,int,int,*`,*`,int,*`,*`,*`,*`,*`)),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
,	O
as	array(struct(*(char),int,*(void),*((*(void),int,*(*(char)),*(void),*(void))->(int))))
)	O
;	O
as	array(struct(*(char),int,*(void),*((*(void),int,*(*(char)),*(void),*(void))->(int))))
[	O
0	int
]	O
.	O
uuconf_pvar	*(void)
=	O
(	O
pointer	*(void)
)	O
&	O
pznoread	*(*(char))
;	O
as	array(struct(*(char),int,*(void),*((*(void),int,*(*(char)),*(void),*(void))->(int))))
[	O
1	int
]	O
.	O
uuconf_pvar	*(void)
=	O
(	O
pointer	*(void)
)	O
&	O
pznowrite	*(*(char))
;	O
zline	*(char)
=	O
NULL	O
;	O
cline	long
=	O
0	int
;	O
pzsplit	*(*(char))
=	O
NULL	O
;	O
csplit	*(long)
=	O
0	int
;	O
qlist	*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char))))
=	O
NULL	O
;	O
pq	*(*(struct(int,*(struct(int,*`)))))
=	O
&	O
qlist	*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char))))
;	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
ilineno	int
=	O
0	int
;	O
iret	int
=	O
UUCONF_SUCCESS	O
;	O
while	O
(	O
(	O
cchars	int
=	O
_uuconf_getline	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,int,int,int,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,int,*`)),*(void),int,*(char),int)),*(*(char)),*(long),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
,	O
&	O
zline	*(char)
,	O
&	O
cline	long
,	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
>	O
0	int
)	O
{	O
int	O
centries	int
;	O
struct	O
shpermissions	struct(*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
*	O
qnew	*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char))))
;	O
int	O
i	int
;	O
++	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
ilineno	int
;	O
--	O
cchars	int
;	O
if	O
(	O
zline	*(char)
[	O
cchars	int
]	O
==	O
'\n'	O
)	O
zline	*(char)
[	O
cchars	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
zline	*(char)
[	O
0	int
]	O
==	O
'#'	O
)	O
continue	O
;	O
centries	int
=	O
_uuconf_istrsplit	(*(char),int,*(*(*(char))),*(long))->(int)
(	O
zline	*(char)
,	O
'\0'	O
,	O
&	O
pzsplit	*(*(char))
,	O
&	O
csplit	*(long)
)	O
;	O
if	O
(	O
centries	int
<	O
0	int
)	O
{	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
if	O
(	O
centries	int
==	O
0	int
)	O
continue	O
;	O
shperm	struct(*(struct(*(struct(*`,*`,*`,int,int,*`,*`,int,*`,*`,*`,*`,*`)),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
.	O
pzlogname	*(*(char))
=	O
(	O
char	O
*	O
*	O
)	O
&	O
_uuconf_unset	*(char)
;	O
shperm	struct(*(struct(*(struct(*`,*`,*`,int,int,*`,*`,int,*`,*`,*`,*`,*`)),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
.	O
pzmachine	*(*(char))
=	O
(	O
char	O
*	O
*	O
)	O
&	O
_uuconf_unset	*(char)
;	O
shperm	struct(*(struct(*(struct(*`,*`,*`,int,int,*`,*`,int,*`,*`,*`,*`,*`)),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
.	O
frequest	int
=	O
-	O
1	int
;	O
shperm	struct(*(struct(*(struct(*`,*`,*`,int,int,*`,*`,int,*`,*`,*`,*`,*`)),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
.	O
fsendfiles	int
=	O
-	O
1	int
;	O
shperm	struct(*(struct(*(struct(*`,*`,*`,int,int,*`,*`,int,*`,*`,*`,*`,*`)),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
.	O
pzread	*(*(char))
=	O
(	O
char	O
*	O
*	O
)	O
&	O
_uuconf_unset	*(char)
;	O
shperm	struct(*(struct(*(struct(*`,*`,*`,int,int,*`,*`,int,*`,*`,*`,*`,*`)),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
.	O
pzwrite	*(*(char))
=	O
(	O
char	O
*	O
*	O
)	O
&	O
_uuconf_unset	*(char)
;	O
shperm	struct(*(struct(*(struct(*`,*`,*`,int,int,*`,*`,int,*`,*`,*`,*`,*`)),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
.	O
fcallback	int
=	O
-	O
1	int
;	O
shperm	struct(*(struct(*(struct(*`,*`,*`,int,int,*`,*`,int,*`,*`,*`,*`,*`)),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
.	O
pzcommands	*(*(char))
=	O
(	O
char	O
*	O
*	O
)	O
&	O
_uuconf_unset	*(char)
;	O
shperm	struct(*(struct(*(struct(*`,*`,*`,int,int,*`,*`,int,*`,*`,*`,*`,*`)),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
.	O
pzvalidate	*(*(char))
=	O
(	O
char	O
*	O
*	O
)	O
&	O
_uuconf_unset	*(char)
;	O
shperm	struct(*(struct(*(struct(*`,*`,*`,int,int,*`,*`,int,*`,*`,*`,*`,*`)),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
.	O
zmyname	*(char)
=	O
(	O
char	O
*	O
)	O
&	O
_uuconf_unset	*(char)
;	O
shperm	struct(*(struct(*(struct(*`,*`,*`,int,int,*`,*`,int,*`,*`,*`,*`,*`)),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
.	O
zpubdir	*(char)
=	O
(	O
char	O
*	O
)	O
&	O
_uuconf_unset	*(char)
;	O
shperm	struct(*(struct(*(struct(*`,*`,*`,int,int,*`,*`,int,*`,*`,*`,*`,*`)),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
.	O
pzalias	*(*(char))
=	O
(	O
char	O
*	O
*	O
)	O
&	O
_uuconf_unset	*(char)
;	O
pznoread	*(*(char))
=	O
(	O
char	O
*	O
*	O
)	O
&	O
_uuconf_unset	*(char)
;	O
pznowrite	*(*(char))
=	O
(	O
char	O
*	O
*	O
)	O
&	O
_uuconf_unset	*(char)
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
centries	int
;	O
i	int
++	O
)	O
{	O
char	O
*	O
zeq	*(char)
;	O
char	O
*	O
azargs	array(*(char))
[	O
2	int
]	O
;	O
zeq	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
pzsplit	*(*(char))
[	O
i	int
]	O
,	O
'='	O
)	O
;	O
if	O
(	O
zeq	*(char)
==	O
NULL	O
)	O
{	O
iret	int
=	O
UUCONF_SYNTAX_ERROR	O
;	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
qprocess	*(struct)
->	O
fhdb_read_permissions	int
=	O
TRUE	O
;	O
break	O
;	O
}	O
*	O
zeq	*(char)
=	O
'\0'	O
;	O
azargs	array(*(char))
[	O
0	int
]	O
=	O
pzsplit	*(*(char))
[	O
i	int
]	O
;	O
azargs	array(*(char))
[	O
1	int
]	O
=	O
zeq	*(char)
+	O
1	int
;	O
iret	int
=	O
uuconf_cmd_args	(*(void),int,*(*(char)),*(struct(*(char),int,*(void),*((*`,int,*`,*`,*`)->(int)))),*(void),*((*(void),int,*(*(char)),*(void),*(void))->(int)),int,*(void))->(int)
(	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
,	O
2	int
,	O
azargs	array(*(char))
,	O
as	array(struct(*(char),int,*(void),*((*(void),int,*(*(char)),*(void),*(void))->(int))))
,	O
(	O
pointer	*(void)
)	O
NULL	O
,	O
ihunknownperm	(*(void),int,*(*(char)),*(void),*(void))->(int)
,	O
0	int
,	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
pblock	*(void)
)	O
;	O
if	O
(	O
(	O
iret	int
&	O
UUCONF_CMDTABRET_KEEP	O
)	O
!=	O
0	int
)	O
{	O
iret	int
&=	O
~	O
UUCONF_CMDTABRET_KEEP	O
;	O
if	O
(	O
uuconf_add_block	(*(void),*(void))->(int)
(	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
pblock	*(void)
,	O
zline	*(char)
)	O
!=	O
0	int
)	O
{	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
zline	*(char)
=	O
NULL	O
;	O
cline	long
=	O
0	int
;	O
}	O
if	O
(	O
(	O
iret	int
&	O
UUCONF_CMDTABRET_EXIT	O
)	O
!=	O
0	int
)	O
{	O
iret	int
&=	O
~	O
UUCONF_CMDTABRET_EXIT	O
;	O
break	O
;	O
}	O
}	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
break	O
;	O
if	O
(	O
shperm	struct(*(struct(*(struct(*`,*`,*`,int,int,*`,*`,int,*`,*`,*`,*`,*`)),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
.	O
pzmachine	*(*(char))
==	O
(	O
char	O
*	O
*	O
)	O
&	O
_uuconf_unset	*(char)
&&	O
shperm	struct(*(struct(*(struct(*`,*`,*`,int,int,*`,*`,int,*`,*`,*`,*`,*`)),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
.	O
pzlogname	*(*(char))
==	O
(	O
char	O
*	O
*	O
)	O
&	O
_uuconf_unset	*(char)
)	O
{	O
iret	int
=	O
UUCONF_SYNTAX_ERROR	O
;	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
qprocess	*(struct)
->	O
fhdb_read_permissions	int
=	O
TRUE	O
;	O
break	O
;	O
}	O
if	O
(	O
pznoread	*(*(char))
!=	O
NULL	O
)	O
{	O
iret	int
=	O
ihadd_norw	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,int,int,int,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,int,*`)),*(void),int,*(char),int)),*(*(*(char))),*(*(char)))->(int)
(	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
,	O
&	O
shperm	struct(*(struct(*(struct(*`,*`,*`,int,int,*`,*`,int,*`,*`,*`,*`,*`)),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
.	O
pzread	*(*(char))
,	O
pznoread	*(*(char))
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
break	O
;	O
uuconf_free	(*(void),*(void))->(void)
(	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
pblock	*(void)
,	O
pznoread	*(*(char))
)	O
;	O
}	O
if	O
(	O
pznowrite	*(*(char))
!=	O
NULL	O
)	O
{	O
iret	int
=	O
ihadd_norw	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,int,int,int,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,int,*`)),*(void),int,*(char),int)),*(*(*(char))),*(*(char)))->(int)
(	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
,	O
&	O
shperm	struct(*(struct(*(struct(*`,*`,*`,int,int,*`,*`,int,*`,*`,*`,*`,*`)),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
.	O
pzwrite	*(*(char))
,	O
pznowrite	*(*(char))
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
break	O
;	O
uuconf_free	(*(void),*(void))->(void)
(	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
pblock	*(void)
,	O
pznowrite	*(*(char))
)	O
;	O
}	O
qnew	*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char))))
=	O
(	O
(	O
struct	O
shpermissions	struct(*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
*	O
)	O
uuconf_malloc	(*(void),long)->(*(void))
(	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
pblock	*(void)
,	O
sizeof	O
(	O
struct	O
shpermissions	struct(*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
)	O
)	O
)	O
;	O
if	O
(	O
qnew	*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char))))
==	O
NULL	O
)	O
{	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
*	O
qnew	*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char))))
=	O
shperm	struct(*(struct(*(struct(*`,*`,*`,int,int,*`,*`,int,*`,*`,*`,*`,*`)),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char)))
;	O
*	O
pq	*(*(struct(int,*(struct(int,*`)))))
=	O
qnew	*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char))))
;	O
pq	*(*(struct(int,*(struct(int,*`)))))
=	O
&	O
qnew	*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char))))
->	O
qnext	*(struct(*(struct(*(struct`),int,int,*(*`))),int,int,*(*(char))))
;	O
*	O
pq	*(*(struct(int,*(struct(int,*`)))))
=	O
NULL	O
;	O
}	O
(	O
void	O
)	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
zline	*(char)
!=	O
NULL	O
)	O
free	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
zline	*(char)
)	O
;	O
if	O
(	O
pzsplit	*(*(char))
!=	O
NULL	O
)	O
free	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
pzsplit	*(*(char))
)	O
;	O
if	O
(	O
iret	int
==	O
UUCONF_SUCCESS	O
)	O
{	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
qprocess	*(struct)
->	O
qhdb_permissions	*(struct)
=	O
qlist	*(struct(*(struct(*(struct`),*(*`),*(*`),int,int,*(*`),*(*`),int,*(*`),*(*`),*(char),*(char),*(*`))),*(*(char)),*(*(char)),int,int,*(*(char)),*(*(char)),int,*(*(char)),*(*(char)),*(char),*(char),*(*(char))))
;	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
qprocess	*(struct)
->	O
fhdb_read_permissions	int
=	O
TRUE	O
;	O
}	O
else	O
{	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
zfilename	*(char)
=	O
zperm	*(char)
;	O
iret	int
|=	O
UUCONF_ERROR_FILENAME	O
|	O
UUCONF_ERROR_LINENO	O
;	O
}	O
return	O
iret	int
;	O
}	O
static	O
int	O
ihcolon	(*(void),int,*(*(char)),*(void),*(void))->(int)
(	O
pglobal	*(void)
,	O
argc	int
,	O
argv	*(*(char))
,	O
pvar	*(void)
,	O
pinfo	*(void)
)	O
pointer	*(void)
pglobal	*(void)
;	O
int	O
argc	int
ATTRIBUTE_UNUSED	O
;	O
char	O
*	O
*	O
argv	*(*(char))
;	O
pointer	*(void)
pvar	*(void)
;	O
pointer	*(void)
pinfo	*(void)
ATTRIBUTE_UNUSED	O
;	O
{	O
struct	O
sglobal	struct(*(struct),*(void),int,*(char),int)
*	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
=	O
(	O
struct	O
sglobal	struct(*(struct),*(void),int,*(char),int)
*	O
)	O
pglobal	*(void)
;	O
char	O
*	O
*	O
*	O
ppz	*(*(*(char)))
=	O
(	O
char	O
*	O
*	O
*	O
)	O
pvar	*(void)
;	O
char	O
*	O
*	O
pzsplit	*(*(char))
;	O
size_t	long
csplit	*(long)
;	O
int	O
centries	int
;	O
int	O
i	int
;	O
int	O
iret	int
;	O
*	O
ppz	*(*(*(char)))
=	O
NULL	O
;	O
pzsplit	*(*(char))
=	O
NULL	O
;	O
csplit	*(long)
=	O
0	int
;	O
centries	int
=	O
_uuconf_istrsplit	(*(char),int,*(*(*(char))),*(long))->(int)
(	O
argv	*(*(char))
[	O
1	int
]	O
,	O
':'	O
,	O
&	O
pzsplit	*(*(char))
,	O
&	O
csplit	*(long)
)	O
;	O
if	O
(	O
centries	int
<	O
0	int
)	O
{	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
ierrno	int
=	O
errno	O
;	O
return	O
(	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
|	O
UUCONF_CMDTABRET_EXIT	O
)	O
;	O
}	O
if	O
(	O
centries	int
==	O
0	int
)	O
{	O
if	O
(	O
pzsplit	*(*(char))
!=	O
NULL	O
)	O
free	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
pzsplit	*(*(char))
)	O
;	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
}	O
iret	int
=	O
UUCONF_SUCCESS	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
centries	int
;	O
i	int
++	O
)	O
{	O
iret	int
=	O
_uuconf_iadd_string	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,int,int,int,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,int,*`)),*(void),int,*(char),int)),*(char),int,int,*(*(*(char))),*(void))->(int)
(	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
,	O
pzsplit	*(*(char))
[	O
i	int
]	O
,	O
FALSE	O
,	O
FALSE	O
,	O
ppz	*(*(*(char)))
,	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
pblock	*(void)
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
iret	int
|=	O
UUCONF_CMDTABRET_EXIT	O
;	O
break	O
;	O
}	O
}	O
free	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
pzsplit	*(*(char))
)	O
;	O
return	O
UUCONF_CMDTABRET_KEEP	O
;	O
}	O
static	O
int	O
ihsendfiles	(*(void),int,*(*(char)),*(void),*(void))->(int)
(	O
pglobal	*(void)
,	O
argc	int
,	O
argv	*(*(char))
,	O
pvar	*(void)
,	O
pinfo	*(void)
)	O
pointer	*(void)
pglobal	*(void)
ATTRIBUTE_UNUSED	O
;	O
int	O
argc	int
ATTRIBUTE_UNUSED	O
;	O
char	O
*	O
*	O
argv	*(*(char))
;	O
pointer	*(void)
pvar	*(void)
;	O
pointer	*(void)
pinfo	*(void)
ATTRIBUTE_UNUSED	O
;	O
{	O
int	O
*	O
pi	*(int)
=	O
(	O
int	O
*	O
)	O
pvar	*(void)
;	O
switch	O
(	O
argv	*(*(char))
[	O
1	int
]	O
[	O
0	int
]	O
)	O
{	O
case	O
'C'	O
:	O
case	O
'c'	O
:	O
case	O
'N'	O
:	O
case	O
'n'	O
:	O
*	O
pi	*(int)
=	O
FALSE	O
;	O
break	O
;	O
case	O
'Y'	O
:	O
case	O
'y'	O
:	O
*	O
pi	*(int)
=	O
TRUE	O
;	O
break	O
;	O
default	O
:	O
return	O
UUCONF_SYNTAX_ERROR	O
|	O
UUCONF_CMDTABRET_EXIT	O
;	O
}	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
}	O
static	O
int	O
ihunknownperm	(*(void),int,*(*(char)),*(void),*(void))->(int)
(	O
pglobal	*(void)
,	O
argc	int
,	O
argv	*(*(char))
,	O
pvar	*(void)
,	O
pinfo	*(void)
)	O
pointer	*(void)
pglobal	*(void)
ATTRIBUTE_UNUSED	O
;	O
int	O
argc	int
ATTRIBUTE_UNUSED	O
;	O
char	O
*	O
*	O
argv	*(*(char))
ATTRIBUTE_UNUSED	O
;	O
pointer	*(void)
pvar	*(void)
ATTRIBUTE_UNUSED	O
;	O
pointer	*(void)
pinfo	*(void)
ATTRIBUTE_UNUSED	O
;	O
{	O
return	O
UUCONF_SYNTAX_ERROR	O
|	O
UUCONF_CMDTABRET_EXIT	O
;	O
}	O
static	O
int	O
ihadd_norw	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,int,int,int,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,int,*`)),*(void),int,*(char),int)),*(*(*(char))),*(*(char)))->(int)
(	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
,	O
ppz	*(*(*(char)))
,	O
pzno	*(*(char))
)	O
struct	O
sglobal	struct(*(struct),*(void),int,*(char),int)
*	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
;	O
char	O
*	O
*	O
*	O
ppz	*(*(*(char)))
;	O
char	O
*	O
*	O
pzno	*(*(char))
;	O
{	O
register	O
char	O
*	O
*	O
pz	*(*(char))
;	O
if	O
(	O
pzno	*(*(char))
==	O
(	O
char	O
*	O
*	O
)	O
&	O
_uuconf_unset	*(char)
)	O
return	O
UUCONF_SUCCESS	O
;	O
for	O
(	O
pz	*(*(char))
=	O
pzno	*(*(char))
;	O
*	O
pz	*(*(char))
!=	O
NULL	O
;	O
pz	*(*(char))
++	O
)	O
{	O
size_t	long
csize	long
;	O
char	O
*	O
znew	*(char)
;	O
int	O
iret	int
;	O
if	O
(	O
*	O
*	O
pz	*(*(char))
!=	O
'\0'	O
)	O
{	O
csize	long
=	O
strlen	(*(char))->(long)
(	O
*	O
pz	*(*(char))
)	O
+	O
1	int
;	O
znew	*(char)
=	O
(	O
char	O
*	O
)	O
uuconf_malloc	(*(void),long)->(*(void))
(	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
pblock	*(void)
,	O
csize	long
+	O
1	int
)	O
;	O
if	O
(	O
znew	*(char)
==	O
NULL	O
)	O
{	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
ierrno	int
=	O
errno	O
;	O
return	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
}	O
znew	*(char)
[	O
0	int
]	O
=	O
'!'	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
(	O
pointer	*(void)
)	O
(	O
znew	*(char)
+	O
1	int
)	O
,	O
(	O
pointer	*(void)
)	O
*	O
pz	*(*(char))
,	O
csize	long
)	O
;	O
iret	int
=	O
_uuconf_iadd_string	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,int,int,int,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,int,*`)),*(void),int,*(char),int)),*(char),int,int,*(*(*(char))),*(void))->(int)
(	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
,	O
znew	*(char)
,	O
FALSE	O
,	O
FALSE	O
,	O
ppz	*(*(*(char)))
,	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
pblock	*(void)
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
}	O
}	O
return	O
UUCONF_SUCCESS	O
;	O
}	O
