void	O
gsl_ran_multinomial	(*(struct(*(struct(*`,long,long,long,*`,*`,*`)),*(void))),long,int,array(double),array(int))->(void)
(	O
const	O
gsl_rng	struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void))
*	O
r	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
,	O
const	O
size_t	long
K	int
,	O
const	O
unsigned	O
int	O
N	int
,	O
const	O
double	O
p	int
[	O
]	O
,	O
unsigned	O
int	O
n	long
[	O
]	O
)	O
{	O
size_t	long
k	long
;	O
double	O
norm	double
=	O
0.0	int
;	O
double	O
sum_p	double
=	O
0.0	int
;	O
unsigned	O
int	O
sum_n	int
=	O
0	int
;	O
for	O
(	O
k	long
=	O
0	int
;	O
k	long
<	O
K	int
;	O
k	long
++	O
)	O
{	O
norm	double
+=	O
p	int
[	O
k	long
]	O
;	O
}	O
for	O
(	O
k	long
=	O
0	int
;	O
k	long
<	O
K	int
;	O
k	long
++	O
)	O
{	O
if	O
(	O
p	int
[	O
k	long
]	O
>	O
0.0	int
)	O
{	O
n	long
[	O
k	long
]	O
=	O
gsl_ran_binomial	(*(struct(*(struct(*`,long,long,long,*`,*`,*`)),*(void))),double,int)->(int)
(	O
r	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
,	O
p	int
[	O
k	long
]	O
/	O
(	O
norm	double
-	O
sum_p	double
)	O
,	O
N	int
-	O
sum_n	int
)	O
;	O
}	O
else	O
{	O
n	long
[	O
k	long
]	O
=	O
0	int
;	O
}	O
sum_p	double
+=	O
p	int
[	O
k	long
]	O
;	O
sum_n	int
+=	O
n	long
[	O
k	long
]	O
;	O
}	O
}	O
double	O
gsl_ran_multinomial_pdf	(long,array(double),array(int))->(double)
(	O
const	O
size_t	long
K	int
,	O
const	O
double	O
p	int
[	O
]	O
,	O
const	O
unsigned	O
int	O
n	long
[	O
]	O
)	O
{	O
return	O
exp	(double)->(double)
(	O
gsl_ran_multinomial_lnpdf	(long,array(double),array(int))->(double)
(	O
K	int
,	O
p	int
,	O
n	long
)	O
)	O
;	O
}	O
double	O
gsl_ran_multinomial_lnpdf	(long,array(double),array(int))->(double)
(	O
const	O
size_t	long
K	int
,	O
const	O
double	O
p	int
[	O
]	O
,	O
const	O
unsigned	O
int	O
n	long
[	O
]	O
)	O
{	O
size_t	long
k	long
;	O
unsigned	O
int	O
N	int
=	O
0	int
;	O
double	O
log_pdf	double
=	O
0.0	int
;	O
double	O
norm	double
=	O
0.0	int
;	O
for	O
(	O
k	long
=	O
0	int
;	O
k	long
<	O
K	int
;	O
k	long
++	O
)	O
{	O
N	int
+=	O
n	long
[	O
k	long
]	O
;	O
}	O
for	O
(	O
k	long
=	O
0	int
;	O
k	long
<	O
K	int
;	O
k	long
++	O
)	O
{	O
norm	double
+=	O
p	int
[	O
k	long
]	O
;	O
}	O
log_pdf	double
=	O
gsl_sf_lnfact	(int)->(double)
(	O
N	int
)	O
;	O
for	O
(	O
k	long
=	O
0	int
;	O
k	long
<	O
K	int
;	O
k	long
++	O
)	O
{	O
if	O
(	O
n	long
[	O
k	long
]	O
>	O
0	int
)	O
{	O
log_pdf	double
+=	O
log	(double)->(double)
(	O
p	int
[	O
k	long
]	O
/	O
norm	double
)	O
*	O
n	long
[	O
k	long
]	O
-	O
gsl_sf_lnfact	(int)->(double)
(	O
n	long
[	O
k	long
]	O
)	O
;	O
}	O
}	O
return	O
log_pdf	double
;	O
}	O
