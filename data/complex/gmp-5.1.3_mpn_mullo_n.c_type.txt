static	O
mp_size_t	long
mpn_mullo_n_itch	(long)->(long)
(	O
mp_size_t	long
n	long
)	O
{	O
return	O
2	int
*	O
n	long
;	O
}	O
static	O
void	O
mpn_dc_mullo_n	(*(long),*(long),*(long),long,*(long))->(void)
(	O
mp_ptr	*(long)
rp	*(long)
,	O
mp_srcptr	*(long)
xp	*(long)
,	O
mp_srcptr	*(long)
yp	*(long)
,	O
mp_size_t	long
n	long
,	O
mp_ptr	*(long)
tp	*(long)
)	O
{	O
mp_size_t	long
n2	long
,	O
n1	long
;	O
ASSERT	O
(	O
n	long
>=	O
2	int
)	O
;	O
ASSERT	O
(	O
!	O
MPN_OVERLAP_P	O
(	O
rp	*(long)
,	O
n	long
,	O
xp	*(long)
,	O
n	long
)	O
)	O
;	O
ASSERT	O
(	O
!	O
MPN_OVERLAP_P	O
(	O
rp	*(long)
,	O
n	long
,	O
yp	*(long)
,	O
n	long
)	O
)	O
;	O
ASSERT	O
(	O
MPN_SAME_OR_SEPARATE2_P	O
(	O
rp	*(long)
,	O
n	long
,	O
tp	*(long)
,	O
2	int
*	O
n	long
)	O
)	O
;	O
if	O
(	O
MAYBE_range_basecase	O
&&	O
BELOW_THRESHOLD	O
(	O
n	long
,	O
MUL_TOOM22_THRESHOLD	int
*	O
36	int
/	O
(	O
36	int
-	O
11	int
)	O
)	O
)	O
n1	long
=	O
n	long
>>	O
1	int
;	O
else	O
if	O
(	O
MAYBE_range_toom22	O
&&	O
BELOW_THRESHOLD	O
(	O
n	long
,	O
MUL_TOOM33_THRESHOLD	int
*	O
36	int
/	O
(	O
36	int
-	O
11	int
)	O
)	O
)	O
n1	long
=	O
n	long
*	O
11	int
/	O
(	O
size_t	long
)	O
36	int
;	O
else	O
if	O
(	O
BELOW_THRESHOLD	O
(	O
n	long
,	O
MUL_TOOM44_THRESHOLD	int
*	O
40	int
/	O
(	O
40	int
-	O
9	int
)	O
)	O
)	O
n1	long
=	O
n	long
*	O
9	int
/	O
(	O
size_t	long
)	O
40	int
;	O
else	O
if	O
(	O
BELOW_THRESHOLD	O
(	O
n	long
,	O
MUL_TOOM8H_THRESHOLD	int
*	O
10	int
/	O
9	int
)	O
)	O
n1	long
=	O
n	long
*	O
7	int
/	O
(	O
size_t	long
)	O
39	int
;	O
else	O
n1	long
=	O
n	long
/	O
(	O
size_t	long
)	O
10	int
;	O
n2	long
=	O
n	long
-	O
n1	long
;	O
mpn_mul_n	O
(	O
tp	*(long)
,	O
xp	*(long)
,	O
yp	*(long)
,	O
n2	long
)	O
;	O
MPN_COPY	O
(	O
rp	*(long)
,	O
tp	*(long)
,	O
n2	long
)	O
;	O
if	O
(	O
BELOW_THRESHOLD	O
(	O
n1	long
,	O
MULLO_BASECASE_THRESHOLD	int
)	O
)	O
mpn_mul_basecase	O
(	O
tp	*(long)
+	O
n	long
,	O
xp	*(long)
+	O
n2	long
,	O
n1	long
,	O
yp	*(long)
,	O
n1	long
)	O
;	O
else	O
if	O
(	O
BELOW_THRESHOLD	O
(	O
n1	long
,	O
MULLO_DC_THRESHOLD	int
)	O
)	O
mpn_mullo_basecase	O
(	O
tp	*(long)
+	O
n	long
,	O
xp	*(long)
+	O
n2	long
,	O
yp	*(long)
,	O
n1	long
)	O
;	O
else	O
mpn_dc_mullo_n	(*(long),*(long),*(long),long,*(long))->(void)
(	O
tp	*(long)
+	O
n	long
,	O
xp	*(long)
+	O
n2	long
,	O
yp	*(long)
,	O
n1	long
,	O
tp	*(long)
+	O
n	long
)	O
;	O
mpn_add_n	O
(	O
rp	*(long)
+	O
n2	long
,	O
tp	*(long)
+	O
n2	long
,	O
tp	*(long)
+	O
n	long
,	O
n1	long
)	O
;	O
if	O
(	O
BELOW_THRESHOLD	O
(	O
n1	long
,	O
MULLO_BASECASE_THRESHOLD	int
)	O
)	O
mpn_mul_basecase	O
(	O
tp	*(long)
+	O
n	long
,	O
xp	*(long)
,	O
n1	long
,	O
yp	*(long)
+	O
n2	long
,	O
n1	long
)	O
;	O
else	O
if	O
(	O
BELOW_THRESHOLD	O
(	O
n1	long
,	O
MULLO_DC_THRESHOLD	int
)	O
)	O
mpn_mullo_basecase	O
(	O
tp	*(long)
+	O
n	long
,	O
xp	*(long)
,	O
yp	*(long)
+	O
n2	long
,	O
n1	long
)	O
;	O
else	O
mpn_dc_mullo_n	(*(long),*(long),*(long),long,*(long))->(void)
(	O
tp	*(long)
+	O
n	long
,	O
xp	*(long)
,	O
yp	*(long)
+	O
n2	long
,	O
n1	long
,	O
tp	*(long)
+	O
n	long
)	O
;	O
mpn_add_n	O
(	O
rp	*(long)
+	O
n2	long
,	O
rp	*(long)
+	O
n2	long
,	O
tp	*(long)
+	O
n	long
,	O
n1	long
)	O
;	O
}	O
void	O
mpn_mullo_n	O
(	O
mp_ptr	*(long)
rp	*(long)
,	O
mp_srcptr	*(long)
xp	*(long)
,	O
mp_srcptr	*(long)
yp	*(long)
,	O
mp_size_t	long
n	long
)	O
{	O
ASSERT	O
(	O
n	long
>=	O
1	int
)	O
;	O
ASSERT	O
(	O
!	O
MPN_OVERLAP_P	O
(	O
rp	*(long)
,	O
n	long
,	O
xp	*(long)
,	O
n	long
)	O
)	O
;	O
ASSERT	O
(	O
!	O
MPN_OVERLAP_P	O
(	O
rp	*(long)
,	O
n	long
,	O
yp	*(long)
,	O
n	long
)	O
)	O
;	O
if	O
(	O
BELOW_THRESHOLD	O
(	O
n	long
,	O
MULLO_BASECASE_THRESHOLD	int
)	O
)	O
{	O
mp_limb_t	long
tp	*(long)
[	O
MUL_BASECASE_ALLOC	O
]	O
;	O
mpn_mul_basecase	O
(	O
tp	*(long)
,	O
xp	*(long)
,	O
n	long
,	O
yp	*(long)
,	O
n	long
)	O
;	O
MPN_COPY	O
(	O
rp	*(long)
,	O
tp	*(long)
,	O
n	long
)	O
;	O
}	O
else	O
if	O
(	O
BELOW_THRESHOLD	O
(	O
n	long
,	O
MULLO_DC_THRESHOLD	int
)	O
)	O
{	O
mpn_mullo_basecase	O
(	O
rp	*(long)
,	O
xp	*(long)
,	O
yp	*(long)
,	O
n	long
)	O
;	O
}	O
else	O
{	O
mp_ptr	*(long)
tp	*(long)
;	O
TMP_DECL	O
;	O
TMP_MARK	O
;	O
tp	*(long)
=	O
TMP_ALLOC_LIMBS	O
(	O
mpn_mullo_n_itch	(long)->(long)
(	O
n	long
)	O
)	O
;	O
if	O
(	O
BELOW_THRESHOLD	O
(	O
n	long
,	O
MULLO_MUL_N_THRESHOLD	int
)	O
)	O
{	O
mpn_dc_mullo_n	(*(long),*(long),*(long),long,*(long))->(void)
(	O
rp	*(long)
,	O
xp	*(long)
,	O
yp	*(long)
,	O
n	long
,	O
tp	*(long)
)	O
;	O
}	O
else	O
{	O
mpn_fft_mul	O
(	O
tp	*(long)
,	O
xp	*(long)
,	O
n	long
,	O
yp	*(long)
,	O
n	long
)	O
;	O
MPN_COPY	O
(	O
rp	*(long)
,	O
tp	*(long)
,	O
n	long
)	O
;	O
}	O
TMP_FREE	O
;	O
}	O
}	O
