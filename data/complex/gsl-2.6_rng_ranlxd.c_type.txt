static	O
inline	O
unsigned	O
long	O
int	O
ranlxd_get	(*(void))->(long)
(	O
void	O
*	O
vstate	*(void)
)	O
;	O
static	O
double	O
ranlxd_get_double	(*(void))->(double)
(	O
void	O
*	O
vstate	*(void)
)	O
;	O
static	O
void	O
ranlxd_set_lux	(*(void),long,int)->(void)
(	O
void	O
*	O
state	*(int)
,	O
unsigned	O
long	O
int	O
s	long
,	O
unsigned	O
int	O
luxury	int
)	O
;	O
static	O
void	O
ranlxd1_set	(*(void),long)->(void)
(	O
void	O
*	O
state	*(int)
,	O
unsigned	O
long	O
int	O
s	long
)	O
;	O
static	O
void	O
ranlxd2_set	(*(void),long)->(void)
(	O
void	O
*	O
state	*(int)
,	O
unsigned	O
long	O
int	O
s	long
)	O
;	O
static	O
const	O
int	O
next	array(int)
[	O
12	int
]	O
=	O
{	O
1	int
,	O
2	int
,	O
3	int
,	O
4	int
,	O
5	int
,	O
6	int
,	O
7	int
,	O
8	int
,	O
9	int
,	O
10	int
,	O
11	int
,	O
0	int
}	O
;	O
static	O
const	O
double	O
one_bit	double
=	O
1.0	int
/	O
281474976710656.0	int
;	O
typedef	O
struct	O
{	O
double	O
xdbl	array(double)
[	O
12	int
]	O
;	O
double	O
carry	double
;	O
unsigned	O
int	O
ir	int
;	O
unsigned	O
int	O
jr	int
;	O
unsigned	O
int	O
ir_old	int
;	O
unsigned	O
int	O
pr	int
;	O
}	O
ranlxd_state_t	struct(array(double),double,int,int,int,int)
;	O
static	O
inline	O
void	O
increment_state	(*(struct(array(double),double,int,int,int,int)))->(void)
(	O
ranlxd_state_t	struct(array(double),double,int,int,int,int)
*	O
state	*(int)
)	O
;	O
static	O
inline	O
void	O
increment_state	(*(struct(array(double),double,int,int,int,int)))->(void)
(	O
ranlxd_state_t	struct(array(double),double,int,int,int,int)
*	O
state	*(int)
)	O
{	O
int	O
k	long
,	O
kmax	int
;	O
double	O
y1	double
,	O
y2	double
,	O
y3	double
;	O
double	O
*	O
xdbl	array(double)
=	O
state	*(int)
->	O
xdbl	array(double)
;	O
double	O
carry	double
=	O
state	*(int)
->	O
carry	double
;	O
unsigned	O
int	O
ir	int
=	O
state	*(int)
->	O
ir	int
;	O
unsigned	O
int	O
jr	int
=	O
state	*(int)
->	O
jr	int
;	O
for	O
(	O
k	long
=	O
0	int
;	O
ir	int
>	O
0	int
;	O
++	O
k	long
)	O
{	O
y1	double
=	O
xdbl	array(double)
[	O
jr	int
]	O
-	O
xdbl	array(double)
[	O
ir	int
]	O
;	O
y2	double
=	O
y1	double
-	O
carry	double
;	O
if	O
(	O
y2	double
<	O
0	int
)	O
{	O
carry	double
=	O
one_bit	double
;	O
y2	double
+=	O
1	int
;	O
}	O
else	O
{	O
carry	double
=	O
0	int
;	O
}	O
xdbl	array(double)
[	O
ir	int
]	O
=	O
y2	double
;	O
ir	int
=	O
next	array(int)
[	O
ir	int
]	O
;	O
jr	int
=	O
next	array(int)
[	O
jr	int
]	O
;	O
}	O
kmax	int
=	O
state	*(int)
->	O
pr	int
-	O
12	int
;	O
for	O
(	O
;	O
k	long
<=	O
kmax	int
;	O
k	long
+=	O
12	int
)	O
{	O
y1	double
=	O
xdbl	array(double)
[	O
7	int
]	O
-	O
xdbl	array(double)
[	O
0	int
]	O
;	O
y1	double
-=	O
carry	double
;	O
RANLUX_STEP	O
(	O
y2	double
,	O
y1	double
,	O
8	int
,	O
1	int
,	O
0	int
)	O
;	O
RANLUX_STEP	O
(	O
y3	double
,	O
y2	double
,	O
9	int
,	O
2	int
,	O
1	int
)	O
;	O
RANLUX_STEP	O
(	O
y1	double
,	O
y3	double
,	O
10	int
,	O
3	int
,	O
2	int
)	O
;	O
RANLUX_STEP	O
(	O
y2	double
,	O
y1	double
,	O
11	int
,	O
4	int
,	O
3	int
)	O
;	O
RANLUX_STEP	O
(	O
y3	double
,	O
y2	double
,	O
0	int
,	O
5	int
,	O
4	int
)	O
;	O
RANLUX_STEP	O
(	O
y1	double
,	O
y3	double
,	O
1	int
,	O
6	int
,	O
5	int
)	O
;	O
RANLUX_STEP	O
(	O
y2	double
,	O
y1	double
,	O
2	int
,	O
7	int
,	O
6	int
)	O
;	O
RANLUX_STEP	O
(	O
y3	double
,	O
y2	double
,	O
3	int
,	O
8	int
,	O
7	int
)	O
;	O
RANLUX_STEP	O
(	O
y1	double
,	O
y3	double
,	O
4	int
,	O
9	int
,	O
8	int
)	O
;	O
RANLUX_STEP	O
(	O
y2	double
,	O
y1	double
,	O
5	int
,	O
10	int
,	O
9	int
)	O
;	O
RANLUX_STEP	O
(	O
y3	double
,	O
y2	double
,	O
6	int
,	O
11	int
,	O
10	int
)	O
;	O
if	O
(	O
y3	double
<	O
0	int
)	O
{	O
carry	double
=	O
one_bit	double
;	O
y3	double
+=	O
1	int
;	O
}	O
else	O
{	O
carry	double
=	O
0	int
;	O
}	O
xdbl	array(double)
[	O
11	int
]	O
=	O
y3	double
;	O
}	O
kmax	int
=	O
state	*(int)
->	O
pr	int
;	O
for	O
(	O
;	O
k	long
<	O
kmax	int
;	O
++	O
k	long
)	O
{	O
y1	double
=	O
xdbl	array(double)
[	O
jr	int
]	O
-	O
xdbl	array(double)
[	O
ir	int
]	O
;	O
y2	double
=	O
y1	double
-	O
carry	double
;	O
if	O
(	O
y2	double
<	O
0	int
)	O
{	O
carry	double
=	O
one_bit	double
;	O
y2	double
+=	O
1	int
;	O
}	O
else	O
{	O
carry	double
=	O
0	int
;	O
}	O
xdbl	array(double)
[	O
ir	int
]	O
=	O
y2	double
;	O
ir	int
=	O
next	array(int)
[	O
ir	int
]	O
;	O
jr	int
=	O
next	array(int)
[	O
jr	int
]	O
;	O
}	O
state	*(int)
->	O
ir	int
=	O
ir	int
;	O
state	*(int)
->	O
ir_old	int
=	O
ir	int
;	O
state	*(int)
->	O
jr	int
=	O
jr	int
;	O
state	*(int)
->	O
carry	double
=	O
carry	double
;	O
}	O
static	O
inline	O
unsigned	O
long	O
int	O
ranlxd_get	(*(void))->(long)
(	O
void	O
*	O
vstate	*(void)
)	O
{	O
return	O
ranlxd_get_double	(*(void))->(double)
(	O
vstate	*(void)
)	O
*	O
4294967296.0	int
;	O
}	O
static	O
double	O
ranlxd_get_double	(*(void))->(double)
(	O
void	O
*	O
vstate	*(void)
)	O
{	O
ranlxd_state_t	struct(array(double),double,int,int,int,int)
*	O
state	*(int)
=	O
(	O
ranlxd_state_t	struct(array(double),double,int,int,int,int)
*	O
)	O
vstate	*(void)
;	O
int	O
ir	int
=	O
state	*(int)
->	O
ir	int
;	O
state	*(int)
->	O
ir	int
=	O
next	array(int)
[	O
ir	int
]	O
;	O
if	O
(	O
state	*(int)
->	O
ir	int
==	O
state	*(int)
->	O
ir_old	int
)	O
increment_state	(*(struct(array(double),double,int,int,int,int)))->(void)
(	O
state	*(int)
)	O
;	O
return	O
state	*(int)
->	O
xdbl	array(double)
[	O
state	*(int)
->	O
ir	int
]	O
;	O
}	O
static	O
void	O
ranlxd_set_lux	(*(void),long,int)->(void)
(	O
void	O
*	O
vstate	*(void)
,	O
unsigned	O
long	O
int	O
s	long
,	O
unsigned	O
int	O
luxury	int
)	O
{	O
ranlxd_state_t	struct(array(double),double,int,int,int,int)
*	O
state	*(int)
=	O
(	O
ranlxd_state_t	struct(array(double),double,int,int,int,int)
*	O
)	O
vstate	*(void)
;	O
int	O
ibit	int
,	O
jbit	int
,	O
i	int
,	O
k	long
,	O
l	int
,	O
xbit	array(int)
[	O
31	int
]	O
;	O
double	O
x	double
,	O
y	double
;	O
long	O
int	O
seed	long
;	O
if	O
(	O
s	long
==	O
0	int
)	O
s	long
=	O
1	int
;	O
seed	long
=	O
s	long
;	O
i	int
=	O
seed	long
&	O
0xFFFFFFFFUL	int
;	O
for	O
(	O
k	long
=	O
0	int
;	O
k	long
<	O
31	int
;	O
++	O
k	long
)	O
{	O
xbit	array(int)
[	O
k	long
]	O
=	O
i	int
%	O
2	int
;	O
i	int
/=	O
2	int
;	O
}	O
ibit	int
=	O
0	int
;	O
jbit	int
=	O
18	int
;	O
for	O
(	O
k	long
=	O
0	int
;	O
k	long
<	O
12	int
;	O
++	O
k	long
)	O
{	O
x	double
=	O
0	int
;	O
for	O
(	O
l	int
=	O
1	int
;	O
l	int
<=	O
48	int
;	O
++	O
l	int
)	O
{	O
y	double
=	O
(	O
double	O
)	O
(	O
(	O
xbit	array(int)
[	O
ibit	int
]	O
+	O
1	int
)	O
%	O
2	int
)	O
;	O
x	double
+=	O
x	double
+	O
y	double
;	O
xbit	array(int)
[	O
ibit	int
]	O
=	O
(	O
xbit	array(int)
[	O
ibit	int
]	O
+	O
xbit	array(int)
[	O
jbit	int
]	O
)	O
%	O
2	int
;	O
ibit	int
=	O
(	O
ibit	int
+	O
1	int
)	O
%	O
31	int
;	O
jbit	int
=	O
(	O
jbit	int
+	O
1	int
)	O
%	O
31	int
;	O
}	O
state	*(int)
->	O
xdbl	array(double)
[	O
k	long
]	O
=	O
one_bit	double
*	O
x	double
;	O
}	O
state	*(int)
->	O
carry	double
=	O
0	int
;	O
state	*(int)
->	O
ir	int
=	O
11	int
;	O
state	*(int)
->	O
jr	int
=	O
7	int
;	O
state	*(int)
->	O
ir_old	int
=	O
0	int
;	O
state	*(int)
->	O
pr	int
=	O
luxury	int
;	O
}	O
static	O
void	O
ranlxd1_set	(*(void),long)->(void)
(	O
void	O
*	O
vstate	*(void)
,	O
unsigned	O
long	O
int	O
s	long
)	O
{	O
ranlxd_set_lux	(*(void),long,int)->(void)
(	O
vstate	*(void)
,	O
s	long
,	O
202	int
)	O
;	O
}	O
static	O
void	O
ranlxd2_set	(*(void),long)->(void)
(	O
void	O
*	O
vstate	*(void)
,	O
unsigned	O
long	O
int	O
s	long
)	O
{	O
ranlxd_set_lux	(*(void),long,int)->(void)
(	O
vstate	*(void)
,	O
s	long
,	O
397	int
)	O
;	O
}	O
static	O
const	O
gsl_rng_type	struct(*(char),long,long,long,*((*(void),long)->(void)),*((*(void))->(long)),*((*(void))->(double)))
ranlxd1_type	struct(*(char),long,long,long,*((*(void),long)->(void)),*((*(void))->(long)),*((*(void))->(double)))
=	O
{	O
"ranlxd1"	*(char)
,	O
0xffffffffUL	int
,	O
0	int
,	O
sizeof	O
(	O
ranlxd_state_t	struct(array(double),double,int,int,int,int)
)	O
,	O
&	O
ranlxd1_set	(*(void),long)->(void)
,	O
&	O
ranlxd_get	(*(void))->(long)
,	O
&	O
ranlxd_get_double	(*(void))->(double)
}	O
;	O
static	O
const	O
gsl_rng_type	struct(*(char),long,long,long,*((*(void),long)->(void)),*((*(void))->(long)),*((*(void))->(double)))
ranlxd2_type	struct(*(char),long,long,long,*((*(void),long)->(void)),*((*(void))->(long)),*((*(void))->(double)))
=	O
{	O
"ranlxd2"	*(char)
,	O
0xffffffffUL	int
,	O
0	int
,	O
sizeof	O
(	O
ranlxd_state_t	struct(array(double),double,int,int,int,int)
)	O
,	O
&	O
ranlxd2_set	(*(void),long)->(void)
,	O
&	O
ranlxd_get	(*(void))->(long)
,	O
&	O
ranlxd_get_double	(*(void))->(double)
}	O
;	O
const	O
gsl_rng_type	struct(*(char),long,long,long,*((*(void),long)->(void)),*((*(void))->(long)),*((*(void))->(double)))
*	O
gsl_rng_ranlxd1	*(struct(*(char),long,long,long,*((*(void),long)->(void)),*((*(void))->(long)),*((*(void))->(double))))
=	O
&	O
ranlxd1_type	struct(*(char),long,long,long,*((*(void),long)->(void)),*((*(void))->(long)),*((*(void))->(double)))
;	O
const	O
gsl_rng_type	struct(*(char),long,long,long,*((*(void),long)->(void)),*((*(void))->(long)),*((*(void))->(double)))
*	O
gsl_rng_ranlxd2	*(struct(*(char),long,long,long,*((*(void),long)->(void)),*((*(void))->(long)),*((*(void))->(double))))
=	O
&	O
ranlxd2_type	struct(*(char),long,long,long,*((*(void),long)->(void)),*((*(void))->(long)),*((*(void))->(double)))
;	O
