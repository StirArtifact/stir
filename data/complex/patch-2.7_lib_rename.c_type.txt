int	O
rpl_rename	(*(char),*(char))->(int)
(	O
char	O
const	O
*	O
src	*(char)
,	O
char	O
const	O
*	O
dst	*(char)
)	O
{	O
size_t	long
src_len	long
=	O
strlen	(*(char))->(long)
(	O
src	*(char)
)	O
;	O
size_t	long
dst_len	long
=	O
strlen	(*(char))->(long)
(	O
dst	*(char)
)	O
;	O
char	O
*	O
src_temp	*(char)
=	O
(	O
char	O
*	O
)	O
src	*(char)
;	O
char	O
*	O
dst_temp	*(char)
=	O
(	O
char	O
*	O
)	O
dst	*(char)
;	O
bool	bool
src_slash	bool
;	O
bool	bool
dst_slash	bool
;	O
bool	bool
dst_exists	bool
;	O
int	O
ret_val	int
=	O
-	O
1	int
;	O
int	O
rename_errno	int
=	O
ENOTDIR	int
;	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
src_st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
;	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
dst_st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
;	O
if	O
(	O
!	O
src_len	long
||	O
!	O
dst_len	long
)	O
return	O
rename	(*(char),*(char))->(int)
(	O
src	*(char)
,	O
dst	*(char)
)	O
;	O
src_slash	bool
=	O
src	*(char)
[	O
src_len	long
-	O
1	int
]	O
==	O
'/'	O
;	O
dst_slash	bool
=	O
dst	*(char)
[	O
dst_len	long
-	O
1	int
]	O
==	O
'/'	O
;	O
if	O
(	O
lstat	(*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
src	*(char)
,	O
&	O
src_st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
)	O
return	O
-	O
1	int
;	O
if	O
(	O
lstat	(*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
dst	*(char)
,	O
&	O
dst_st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
)	O
{	O
if	O
(	O
errno	O
!=	O
ENOENT	int
||	O
(	O
!	O
S_ISDIR	O
(	O
src_st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_mode	int
)	O
&&	O
dst_slash	bool
)	O
)	O
return	O
-	O
1	int
;	O
dst_exists	bool
=	O
false	int
;	O
}	O
else	O
{	O
if	O
(	O
S_ISDIR	O
(	O
dst_st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_mode	int
)	O
!=	O
S_ISDIR	O
(	O
src_st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_mode	int
)	O
)	O
{	O
errno	O
=	O
S_ISDIR	O
(	O
dst_st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_mode	int
)	O
?	O
EISDIR	int
:	O
ENOTDIR	int
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
SAME_INODE	O
(	O
src_st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
,	O
dst_st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
)	O
return	O
0	int
;	O
dst_exists	bool
=	O
true	int
;	O
}	O
if	O
(	O
src_slash	bool
)	O
{	O
src_temp	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
src	*(char)
)	O
;	O
if	O
(	O
!	O
src_temp	*(char)
)	O
{	O
rename_errno	int
=	O
ENOMEM	int
;	O
goto	O
out	O
;	O
}	O
strip_trailing_slashes	(*(char))->(bool)
(	O
src_temp	*(char)
)	O
;	O
if	O
(	O
lstat	(*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
src_temp	*(char)
,	O
&	O
src_st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
)	O
{	O
rename_errno	int
=	O
errno	O
;	O
goto	O
out	O
;	O
}	O
if	O
(	O
S_ISLNK	O
(	O
src_st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_mode	int
)	O
)	O
goto	O
out	O
;	O
}	O
if	O
(	O
dst_slash	bool
)	O
{	O
dst_temp	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
dst	*(char)
)	O
;	O
if	O
(	O
!	O
dst_temp	*(char)
)	O
{	O
rename_errno	int
=	O
ENOMEM	int
;	O
goto	O
out	O
;	O
}	O
strip_trailing_slashes	(*(char))->(bool)
(	O
dst_temp	*(char)
)	O
;	O
if	O
(	O
lstat	(*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
dst_temp	*(char)
,	O
&	O
dst_st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
)	O
{	O
if	O
(	O
errno	O
!=	O
ENOENT	int
)	O
{	O
rename_errno	int
=	O
errno	O
;	O
goto	O
out	O
;	O
}	O
}	O
else	O
if	O
(	O
S_ISLNK	O
(	O
dst_st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_mode	int
)	O
)	O
goto	O
out	O
;	O
}	O
ret_val	int
=	O
rename	(*(char),*(char))->(int)
(	O
src_temp	*(char)
,	O
dst_temp	*(char)
)	O
;	O
rename_errno	int
=	O
errno	O
;	O
out	O
:	O
if	O
(	O
src_temp	*(char)
!=	O
src	*(char)
)	O
free	(*(void))->(void)
(	O
src_temp	*(char)
)	O
;	O
if	O
(	O
dst_temp	*(char)
!=	O
dst	*(char)
)	O
free	(*(void))->(void)
(	O
dst_temp	*(char)
)	O
;	O
errno	O
=	O
rename_errno	int
;	O
return	O
ret_val	int
;	O
}	O
