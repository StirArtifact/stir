char	O
*	O
mu_site_config_file	()->(*(char))
(	O
void	O
)	O
{	O
char	O
*	O
p	*(char)
=	O
getenv	(*(char))->(*(char))
(	O
"MU_SITE_CONFIG_FILE"	*(char)
)	O
;	O
if	O
(	O
p	*(char)
)	O
return	O
p	*(char)
;	O
return	O
MU_SITE_CONFIG_FILE	O
;	O
}	O
const	O
char	O
mu_version_copyright	array(char)
[	O
]	O
=	O
"Copyright %s 2007-2019 Free Software Foundation, inc."	*(char)
;	O
void	O
mu_version_hook	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)
(	O
struct	O
mu_parseopt	struct(int,*(*(char)),long,*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char)))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))
*	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
,	O
mu_stream_t	*(struct)
stream	*(struct)
)	O
{	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
stream	*(struct)
,	O
"%s (%s) %s\n"	*(char)
,	O
mu_program_name	*(char)
,	O
PACKAGE_NAME	*(char)
,	O
PACKAGE_VERSION	*(char)
)	O
;	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
stream	*(struct)
,	O
mu_version_copyright	array(char)
,	O
_	O
(	O
"(C)"	*(char)
)	O
)	O
;	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
stream	*(struct)
,	O
_	O
(	O
"\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"	*(char)
)	O
)	O
;	O
}	O
const	O
char	O
mu_general_help_text	array(char)
[	O
]	O
=	O
N_	O
(	O
"General help using GNU software: <http://www.gnu.org/gethelp/>"	*(char)
)	O
;	O
struct	O
app_data	struct(*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct),*(struct))),int)
{	O
struct	O
mu_cli_setup	struct(*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char)))),*(struct(*(char),int,*(void),long,*((*(void),*(struct`))->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct))->(void)))
*	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
;	O
struct	O
mu_cfg_parse_hints	struct(int,*(char),*(char),*(char))
*	O
hints	*(struct(*(char),*(char)))
;	O
struct	O
mu_cfg_tree	struct(*(struct),*(struct))
*	O
append_tree	*(struct(*(struct),*(struct)))
;	O
int	O
lint	int
;	O
}	O
;	O
static	O
void	O
extra_help_hook	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)
(	O
struct	O
mu_parseopt	struct(int,*(*(char)),long,*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char)))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))
*	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
,	O
mu_stream_t	*(struct)
stream	*(struct)
)	O
{	O
struct	O
app_data	struct(*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct),*(struct))),int)
*	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
=	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
->	O
po_data	*(void)
;	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
stream	*(struct)
,	O
"%s\n"	*(char)
,	O
gettext	(*(char))->(*(char))
(	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
->	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
->	O
prog_extra_doc	*(char)
)	O
)	O
;	O
}	O
static	O
void	O
prog_doc_hook	*((*(struct))->(void))
(	O
struct	O
mu_parseopt	struct(int,*(*(char)),long,*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char)))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))
*	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
,	O
mu_stream_t	*(struct)
stream	*(struct)
)	O
{	O
struct	O
app_data	struct(*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct),*(struct))),int)
*	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
=	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
->	O
po_data	*(void)
;	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
->	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
->	O
prog_doc_hook	*((*(struct))->(void))
(	O
stream	*(struct)
)	O
;	O
}	O
static	O
void	O
change_progname	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)
(	O
struct	O
mu_parseopt	struct(int,*(*(char)),long,*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char)))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))
*	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
,	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
*	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
,	O
char	O
const	O
*	O
arg	*(char)
)	O
{	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
->	O
po_prog_name	*(char)
=	O
mu_strdup	(*(char))->(*(char))
(	O
arg	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
mu_program_name	*(char)
)	O
;	O
mu_program_name	*(char)
=	O
mu_strdup	(*(char))->(*(char))
(	O
arg	*(char)
)	O
;	O
}	O
static	O
void	O
no_user_config	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)
(	O
struct	O
mu_parseopt	struct(int,*(*(char)),long,*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char)))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))
*	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
,	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
*	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
,	O
char	O
const	O
*	O
arg	*(char)
)	O
{	O
struct	O
app_data	struct(*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct),*(struct))),int)
*	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
=	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
->	O
po_data	*(void)
;	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
->	O
hints	*(struct(*(char),*(char)))
->	O
flags	int
&=	O
~	O
MU_CFHINT_PER_USER_FILE	int
;	O
}	O
static	O
void	O
no_site_config	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)
(	O
struct	O
mu_parseopt	struct(int,*(*(char)),long,*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char)))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))
*	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
,	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
*	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
,	O
char	O
const	O
*	O
arg	*(char)
)	O
{	O
struct	O
app_data	struct(*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct),*(struct))),int)
*	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
=	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
->	O
po_data	*(void)
;	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
->	O
hints	*(struct(*(char),*(char)))
->	O
flags	int
&=	O
~	O
MU_CFHINT_SITE_FILE	int
;	O
}	O
static	O
void	O
no_config	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)
(	O
struct	O
mu_parseopt	struct(int,*(*(char)),long,*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char)))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))
*	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
,	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
*	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
,	O
char	O
const	O
*	O
arg	*(char)
)	O
{	O
struct	O
app_data	struct(*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct),*(struct))),int)
*	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
=	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
->	O
po_data	*(void)
;	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
->	O
hints	*(struct(*(char),*(char)))
->	O
flags	int
&=	O
~	O
(	O
MU_CFHINT_SITE_FILE	int
|	O
MU_CFHINT_PER_USER_FILE	int
)	O
;	O
}	O
static	O
void	O
config_file	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)
(	O
struct	O
mu_parseopt	struct(int,*(*(char)),long,*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char)))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))
*	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
,	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
*	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
,	O
char	O
const	O
*	O
arg	*(char)
)	O
{	O
struct	O
app_data	struct(*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct),*(struct))),int)
*	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
=	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
->	O
po_data	*(void)
;	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
->	O
hints	*(struct(*(char),*(char)))
->	O
flags	int
=	O
(	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
->	O
hints	*(struct(*(char),*(char)))
->	O
flags	int
&	O
~	O
(	O
MU_CFHINT_SITE_FILE	int
|	O
MU_CFHINT_PROGRAM	int
)	O
)	O
|	O
MU_CFHINT_CUSTOM_FILE	int
;	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
->	O
hints	*(struct(*(char),*(char)))
->	O
custom_file	*(char)
=	O
mu_strdup	(*(char))->(*(char))
(	O
arg	*(char)
)	O
;	O
}	O
static	O
void	O
config_verbose	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)
(	O
struct	O
mu_parseopt	struct(int,*(*(char)),long,*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char)))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))
*	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
,	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
*	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
,	O
char	O
const	O
*	O
arg	*(char)
)	O
{	O
struct	O
app_data	struct(*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct),*(struct))),int)
*	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
=	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
->	O
po_data	*(void)
;	O
if	O
(	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
->	O
hints	*(struct(*(char),*(char)))
->	O
flags	int
&	O
MU_CF_VERBOSE	int
)	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
->	O
hints	*(struct(*(char),*(char)))
->	O
flags	int
|=	O
MU_CF_DUMP	int
;	O
else	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
->	O
hints	*(struct(*(char),*(char)))
->	O
flags	int
|=	O
MU_CF_VERBOSE	int
;	O
}	O
static	O
void	O
config_lint	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)
(	O
struct	O
mu_parseopt	struct(int,*(*(char)),long,*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char)))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))
*	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
,	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
*	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
,	O
char	O
const	O
*	O
arg	*(char)
)	O
{	O
struct	O
app_data	struct(*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct),*(struct))),int)
*	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
=	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
->	O
po_data	*(void)
;	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
->	O
lint	int
=	O
1	int
;	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
->	O
hints	*(struct(*(char),*(char)))
->	O
flags	int
|=	O
MU_CF_VERBOSE	int
;	O
}	O
static	O
void	O
param_set	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)
(	O
struct	O
mu_parseopt	struct(int,*(*(char)),long,*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char)))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))
*	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
,	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
*	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
,	O
char	O
const	O
*	O
arg	*(char)
)	O
{	O
struct	O
app_data	struct(*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct),*(struct))),int)
*	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
=	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
->	O
po_data	*(void)
;	O
mu_cfg_node_t	struct
*	O
node	*(struct(struct(struct(*(char),int,int),struct(*(char),int,int)),enum(int,int,int),*(char),*(struct(int,union(*`,*`,struct`))),*(struct),*(struct(struct(struct`,struct`),enum(int,int,int),*(char),*(struct`),*(struct`),*(struct`)))))
;	O
int	O
rc	int
=	O
mu_cfg_create_subtree	(*(char),*(*(struct(struct(struct`,struct`),enum(int,int,int),*(char),*(struct`),*(struct`),*(struct`)))))->(int)
(	O
arg	*(char)
,	O
&	O
node	*(struct(struct(struct(*(char),int,int),struct(*(char),int,int)),enum(int,int,int),*(char),*(struct(int,union(*`,*`,struct`))),*(struct),*(struct(struct(struct`,struct`),enum(int,int,int),*(char),*(struct`),*(struct`),*(struct`)))))
)	O
;	O
if	O
(	O
rc	int
)	O
mu_parseopt_error	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(char))->(void)
(	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
,	O
"%s: cannot create node: %s"	*(char)
,	O
arg	*(char)
,	O
mu_strerror	(int)->(*(char))
(	O
rc	int
)	O
)	O
;	O
if	O
(	O
!	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
->	O
append_tree	*(struct(*(struct),*(struct)))
)	O
{	O
mu_cfg_tree_create	(*(*(struct(*(struct`),*(struct`)))))->(int)
(	O
&	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
->	O
append_tree	*(struct(*(struct),*(struct)))
)	O
;	O
}	O
mu_cfg_tree_add_node	(*(struct(*(struct),*(struct))),*(struct(struct(struct(*`,int,int),struct(*`,int,int)),enum(int,int,int),*(char),*(struct(int,union`)),*(struct),*(struct(struct`,enum(int,int,int),*`,*`,*`,*`)))))->(void)
(	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
->	O
append_tree	*(struct(*(struct),*(struct)))
,	O
node	*(struct(struct(struct(*(char),int,int),struct(*(char),int,int)),enum(int,int,int),*(char),*(struct(int,union(*`,*`,struct`))),*(struct),*(struct(struct(struct`,struct`),enum(int,int,int),*(char),*(struct`),*(struct`),*(struct`)))))
)	O
;	O
}	O
static	O
void	O
hangproc	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)
(	O
struct	O
mu_parseopt	struct(int,*(*(char)),long,*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char)))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))
*	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
,	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
*	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
,	O
char	O
const	O
*	O
arg	*(char)
)	O
{	O
int	O
n	long
;	O
if	O
(	O
mu_str_to_c	(*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*(*(char)))->(int)
(	O
arg	*(char)
,	O
mu_c_int	int
,	O
&	O
n	long
,	O
NULL	O
)	O
)	O
{	O
mu_parseopt_error	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(char))->(void)
(	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
,	O
_	O
(	O
"%s: bad number"	*(char)
)	O
,	O
arg	*(char)
)	O
;	O
exit	(int)->(void)
(	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
->	O
po_exit_error	int
)	O
;	O
}	O
mu_wd	(int)->(void)
(	O
n	long
)	O
;	O
}	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
mu_common_options	array(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct(int,*`,long,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,int,*`,int,int,int,long,*`)),*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`)),*(char))->(void)),*(char)))
[	O
]	O
=	O
{	O
{	O
"program-name"	*(char)
,	O
0	int
,	O
N_	O
(	O
"NAME"	*(char)
)	O
,	O
MU_OPTION_IMMEDIATE	int
|	O
MU_OPTION_HIDDEN	int
,	O
N_	O
(	O
"set program name"	*(char)
)	O
,	O
mu_c_string	int
,	O
NULL	O
,	O
change_progname	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)
}	O
,	O
{	O
"HANG"	*(char)
,	O
0	int
,	O
N_	O
(	O
"SECONDS"	*(char)
)	O
,	O
MU_OPTION_IMMEDIATE	int
|	O
MU_OPTION_ARG_OPTIONAL	int
|	O
MU_OPTION_HIDDEN	int
,	O
N_	O
(	O
"wait this number of seconds before startup"	*(char)
)	O
,	O
mu_c_string	int
,	O
NULL	O
,	O
hangproc	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)
,	O
"3600"	*(char)
}	O
,	O
MU_OPTION_END	O
}	O
;	O
static	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
mu_config_option_header	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct(int,*`,long,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,int,*`,int,int,int,long,*`)),*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`)),*(char))->(void)),*(char))
=	O
MU_OPTION_GROUP	O
(	O
N_	O
(	O
"Configuration handling"	*(char)
)	O
)	O
;	O
static	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
mu_site_config_options	array(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct(int,*`,long,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,int,*`,int,int,int,long,*`)),*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`)),*(char))->(void)),*(char)))
[	O
]	O
=	O
{	O
{	O
"no-site-config"	*(char)
,	O
0	int
,	O
NULL	O
,	O
MU_OPTION_IMMEDIATE	int
,	O
N_	O
(	O
"do not load site-wide configuration file"	*(char)
)	O
,	O
mu_c_string	int
,	O
NULL	O
,	O
no_site_config	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)
}	O
,	O
MU_OPTION_END	O
}	O
;	O
static	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
mu_user_config_options	array(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct(int,*`,long,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,int,*`,int,int,int,long,*`)),*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`)),*(char))->(void)),*(char)))
[	O
]	O
=	O
{	O
{	O
"no-user-config"	*(char)
,	O
0	int
,	O
NULL	O
,	O
MU_OPTION_IMMEDIATE	int
,	O
N_	O
(	O
"do not load user configuration file"	*(char)
)	O
,	O
mu_c_string	int
,	O
NULL	O
,	O
no_user_config	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)
}	O
,	O
MU_OPTION_END	O
}	O
;	O
static	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
mu_no_config_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct(int,*`,long,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,int,*`,int,int,int,long,*`)),*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`)),*(char))->(void)),*(char))
=	O
{	O
"no-config"	*(char)
,	O
0	int
,	O
NULL	O
,	O
MU_OPTION_IMMEDIATE	int
,	O
N_	O
(	O
"do not load site and user configuration files"	*(char)
)	O
,	O
mu_c_string	int
,	O
NULL	O
,	O
no_config	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)
}	O
;	O
static	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
mu_config_lint_options	array(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct(int,*`,long,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,int,*`,int,int,int,long,*`)),*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`)),*(char))->(void)),*(char)))
[	O
]	O
=	O
{	O
{	O
"config-verbose"	*(char)
,	O
0	int
,	O
NULL	O
,	O
MU_OPTION_IMMEDIATE	int
,	O
N_	O
(	O
"verbosely log parsing of the configuration files"	*(char)
)	O
,	O
mu_c_string	int
,	O
NULL	O
,	O
config_verbose	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)
}	O
,	O
{	O
"config-lint"	*(char)
,	O
0	int
,	O
NULL	O
,	O
MU_OPTION_IMMEDIATE	int
,	O
N_	O
(	O
"check configuration file syntax and exit"	*(char)
)	O
,	O
mu_c_string	int
,	O
NULL	O
,	O
config_lint	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)
}	O
,	O
MU_OPTION_END	O
}	O
;	O
static	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
mu_config_override_options	array(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct(int,*`,long,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,int,*`,int,int,int,long,*`)),*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`)),*(char))->(void)),*(char)))
[	O
]	O
=	O
{	O
{	O
"config-file"	*(char)
,	O
0	int
,	O
N_	O
(	O
"FILE"	*(char)
)	O
,	O
MU_OPTION_IMMEDIATE	int
,	O
N_	O
(	O
"load this configuration file; implies --no-config"	*(char)
)	O
,	O
mu_c_string	int
,	O
NULL	O
,	O
config_file	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)
}	O
,	O
{	O
"set"	*(char)
,	O
0	int
,	O
N_	O
(	O
"PARAM=VALUE"	*(char)
)	O
,	O
MU_OPTION_IMMEDIATE	int
,	O
N_	O
(	O
"set configuration parameter"	*(char)
)	O
,	O
mu_c_string	int
,	O
NULL	O
,	O
param_set	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)
}	O
,	O
MU_OPTION_END	O
}	O
;	O
static	O
void	O
show_comp_defaults	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)
(	O
struct	O
mu_parseopt	struct(int,*(*(char)),long,*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char)))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))
*	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
,	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
*	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
,	O
char	O
const	O
*	O
unused	*(char)
)	O
{	O
mu_print_options	()->(void)
(	O
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
static	O
void	O
show_config_help	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)
(	O
struct	O
mu_parseopt	struct(int,*(*(char)),long,*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char)))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))
*	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
,	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
*	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
,	O
char	O
const	O
*	O
unused	*(char)
)	O
{	O
struct	O
app_data	struct(*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct),*(struct))),int)
*	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
=	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
->	O
po_data	*(void)
;	O
char	O
*	O
comment	*(char)
;	O
mu_stream_t	*(struct)
stream	*(struct)
;	O
struct	O
mu_cfg_cont	struct(enum(int,int),*(struct),union(*(char),struct(*(char),*(char),*((enum(int,int),*(struct`),*(char),*(*`),*(void),*(struct`))->(int)),*(void),long,*(struct),*(char),*(void)),struct(*(char),int,*(void),long,*((*(void),*(struct`))->(int)),*(char),*(char))))
*	O
cont	*(struct(enum(int,int),*(struct),union(*(char),struct(*(char),*(char),*((enum(int,int),*`,*`,*`,*`,*`)->(int)),*(void),long,*(struct`),*(char),*(void)),struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char)))))
;	O
static	O
struct	O
mu_cfg_param	struct(*(char),int,*(void),long,*((*(void),*(struct(int,union(*`,*`,struct`))))->(int)),*(char),*(char))
dummy_include_param	array(struct(*(char),int,*(void),long,*((*(void),*(struct(int,union`)))->(int)),*(char),*(char)))
[	O
]	O
=	O
{	O
{	O
"include"	*(char)
,	O
mu_c_string	int
,	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
N_	O
(	O
"Include contents of the given file.  If a directory is given, "	*(char)
"include contents of the file <file>/<program>, where "	*(char)
"<program> is the name of the program.  This latter form is "	*(char)
"allowed only in the site-wide configuration file."	*(char)
)	O
,	O
N_	O
(	O
"file-or-directory"	*(char)
)	O
}	O
,	O
{	O
NULL	O
}	O
}	O
;	O
mu_stdio_stream_create	(*(*(struct)),int,int)->(int)
(	O
&	O
stream	*(struct)
,	O
MU_STDOUT_FD	int
,	O
0	int
)	O
;	O
mu_asprintf	(*(*(char)),*(char))->(int)
(	O
&	O
comment	*(char)
,	O
"Configuration file structure for %s utility."	*(char)
,	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
->	O
po_prog_name	*(char)
)	O
;	O
mu_cfg_format_docstring	(*(struct),*(char),int)->(void)
(	O
stream	*(struct)
,	O
comment	*(char)
,	O
0	int
)	O
;	O
free	(*(void))->(void)
(	O
comment	*(char)
)	O
;	O
mu_asprintf	(*(*(char)),*(char))->(int)
(	O
&	O
comment	*(char)
,	O
"For use in global configuration file (%s), enclose it "	*(char)
"in `program %s { ... };"	*(char)
,	O
mu_site_config_file	()->(*(char))
(	O
)	O
,	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
->	O
po_prog_name	*(char)
)	O
;	O
mu_cfg_format_docstring	(*(struct),*(char),int)->(void)
(	O
stream	*(struct)
,	O
comment	*(char)
,	O
0	int
)	O
;	O
free	(*(void))->(void)
(	O
comment	*(char)
)	O
;	O
mu_asprintf	(*(*(char)),*(char))->(int)
(	O
&	O
comment	*(char)
,	O
"For more information, use `info %s'."	*(char)
,	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
->	O
po_prog_name	*(char)
)	O
;	O
mu_cfg_format_docstring	(*(struct),*(char),int)->(void)
(	O
stream	*(struct)
,	O
comment	*(char)
,	O
0	int
)	O
;	O
free	(*(void))->(void)
(	O
comment	*(char)
)	O
;	O
cont	*(struct(enum(int,int),*(struct),union(*(char),struct(*(char),*(char),*((enum(int,int),*`,*`,*`,*`,*`)->(int)),*(void),long,*(struct`),*(char),*(void)),struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char)))))
=	O
mu_config_clone_root_container	()->(*(struct(enum(int,int),*(struct),union(*(char),struct(*`,*`,*`,*`,long,*`,*`,*`),struct(*`,int,*`,long,*`,*`,*`)))))
(	O
)	O
;	O
mu_config_container_register_section	(*(*(struct(enum(int,int),*(struct`),union(*`,struct`,struct`)))),*(char),*(char),*(char),*((enum(int,int),*(struct(struct`,enum(int,int,int),*`,*`,*`,*`)),*(char),*(*(void)),*(void),*(struct(*`,*`)))->(int)),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(*(struct(*(char),*(char),*((enum(int,int),*`,*`,*`,*`,*`)->(int)),*(void),long,*(struct`),*(char),*(void)))))->(int)
(	O
&	O
cont	*(struct(enum(int,int),*(struct),union(*(char),struct(*(char),*(char),*((enum(int,int),*`,*`,*`,*`,*`)->(int)),*(void),long,*(struct`),*(char),*(void)),struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char)))))
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
,	O
dummy_include_param	array(struct(*(char),int,*(void),long,*((*(void),*(struct(int,union`)))->(int)),*(char),*(char)))
,	O
NULL	O
)	O
;	O
if	O
(	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
->	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
)	O
{	O
mu_config_container_register_section	(*(*(struct(enum(int,int),*(struct`),union(*`,struct`,struct`)))),*(char),*(char),*(char),*((enum(int,int),*(struct(struct`,enum(int,int,int),*`,*`,*`,*`)),*(char),*(*(void)),*(void),*(struct(*`,*`)))->(int)),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(*(struct(*(char),*(char),*((enum(int,int),*`,*`,*`,*`,*`)->(int)),*(void),long,*(struct`),*(char),*(void)))))->(int)
(	O
&	O
cont	*(struct(enum(int,int),*(struct),union(*(char),struct(*(char),*(char),*((enum(int,int),*`,*`,*`,*`,*`)->(int)),*(void),long,*(struct`),*(char),*(void)),struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char)))))
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
,	O
dp	*(struct(*(struct(*(*`),*(struct`),*(char),*(char),*(*`),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct`),*(struct`))),int))
->	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
->	O
cfg	*(struct(*(char),int,*(void),long,*((*(void),*(struct`))->(int)),*(char),*(char)))
,	O
NULL	O
)	O
;	O
}	O
mu_cfg_format_container	(*(struct),*(struct(enum(int,int),*(struct),union(*(char),struct(*`,*`,*`,*`,long,*`,*`,*`),struct(*`,int,*`,long,*`,*`,*`)))))->(void)
(	O
stream	*(struct)
,	O
cont	*(struct(enum(int,int),*(struct),union(*(char),struct(*(char),*(char),*((enum(int,int),*`,*`,*`,*`,*`)->(int)),*(void),long,*(struct`),*(char),*(void)),struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char)))))
)	O
;	O
mu_config_destroy_container	(*(*(struct(enum(int,int),*(struct`),union(*`,struct`,struct`)))))->(void)
(	O
&	O
cont	*(struct(enum(int,int),*(struct),union(*(char),struct(*(char),*(char),*((enum(int,int),*`,*`,*`,*`,*`)->(int)),*(void),long,*(struct`),*(char),*(void)),struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char)))))
)	O
;	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
stream	*(struct)
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
static	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
mu_extra_help_options	array(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct(int,*`,long,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,int,*`,int,int,int,long,*`)),*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`)),*(char))->(void)),*(char)))
[	O
]	O
=	O
{	O
MU_OPTION_GROUP	O
(	O
N_	O
(	O
"Informational options"	*(char)
)	O
)	O
,	O
{	O
"show-config-options"	*(char)
,	O
0	int
,	O
NULL	O
,	O
MU_OPTION_IMMEDIATE	int
,	O
N_	O
(	O
"show compilation options"	*(char)
)	O
,	O
mu_c_string	int
,	O
NULL	O
,	O
show_comp_defaults	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)
}	O
,	O
MU_OPTION_END	O
}	O
;	O
static	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
mu_config_help_options	array(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct(int,*`,long,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,int,*`,int,int,int,long,*`)),*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`)),*(char))->(void)),*(char)))
[	O
]	O
=	O
{	O
{	O
"config-help"	*(char)
,	O
0	int
,	O
NULL	O
,	O
MU_OPTION_IMMEDIATE	int
,	O
N_	O
(	O
"show configuration file summary"	*(char)
)	O
,	O
mu_c_string	int
,	O
NULL	O
,	O
show_config_help	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)
}	O
,	O
MU_OPTION_END	O
}	O
;	O
static	O
int	O
add_opt_group	(*(void),*(void))->(int)
(	O
void	O
*	O
item	*(void)
,	O
void	O
*	O
data	*(void)
)	O
{	O
struct	O
mu_parseopt	struct(int,*(*(char)),long,*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char)))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))
*	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
=	O
data	*(void)
;	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
*	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
=	O
item	*(void)
;	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
->	O
po_optv	*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))
[	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
->	O
po_optc	long
++	O
]	O
=	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
;	O
return	O
0	int
;	O
}	O
static	O
void	O
opool_add_option	(*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))->(void)
(	O
mu_opool_t	*(struct)
pool	*(struct)
,	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
*	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
)	O
{	O
mu_opool_append	(*(struct),*(void),long)->(int)
(	O
pool	*(struct)
,	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
,	O
sizeof	O
*	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
)	O
;	O
}	O
static	O
void	O
opool_add_options	(*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))->(void)
(	O
mu_opool_t	*(struct)
pool	*(struct)
,	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
*	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
)	O
{	O
while	O
(	O
!	O
MU_OPTION_IS_END	O
(	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
)	O
)	O
{	O
opool_add_option	(*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))->(void)
(	O
pool	*(struct)
,	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
)	O
;	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
++	O
;	O
}	O
}	O
static	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
*	O
opool_end_option	(*(struct))->(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))
(	O
mu_opool_t	*(struct)
pool	*(struct)
)	O
{	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
end	struct(*(char),int,int)
=	O
MU_OPTION_END	O
;	O
opool_add_option	(*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))->(void)
(	O
pool	*(struct)
,	O
&	O
end	struct(*(char),int,int)
)	O
;	O
return	O
mu_opool_finish	(*(struct),*(long))->(*(void))
(	O
pool	*(struct)
,	O
NULL	O
)	O
;	O
}	O
static	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
*	O
*	O
init_options	(*(struct),*(*(char)),*(struct(*(*(struct`)),*(struct(*`,int,*`,long,*`,*`,*`)),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(*(struct)))->(*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char)))))
(	O
mu_opool_t	*(struct)
pool	*(struct)
,	O
char	O
*	O
*	O
capa	*(struct(*(char),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*((enum(int,int),*(struct`),*(char),*(*`),*(void),*(struct`))->(int)),*((*(void))->(void))))
,	O
struct	O
mu_cli_setup	struct(*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char)))),*(struct(*(char),int,*(void),long,*((*(void),*(struct`))->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct))->(void)))
*	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
,	O
struct	O
mu_cfg_parse_hints	struct(int,*(char),*(char),*(char))
const	O
*	O
hints	*(struct(*(char),*(char)))
,	O
mu_list_t	*(struct)
*	O
ret_comlist	*(*(struct))
)	O
{	O
size_t	long
i	long
,	O
s	*(char)
;	O
mu_list_t	*(struct)
oplist	*(struct)
;	O
mu_list_t	*(struct)
comlist	*(struct)
;	O
struct	O
mu_parseopt	struct(int,*(*(char)),long,*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char)))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
;	O
mu_list_create	(*(*(struct)))->(int)
(	O
&	O
oplist	*(struct)
)	O
;	O
if	O
(	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
->	O
optv	*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))
)	O
{	O
for	O
(	O
i	long
=	O
0	int
;	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
->	O
optv	*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))
[	O
i	long
]	O
;	O
i	long
++	O
)	O
mu_list_append	(*(struct),*(void))->(int)
(	O
oplist	*(struct)
,	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
->	O
optv	*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))
[	O
i	long
]	O
)	O
;	O
}	O
mu_list_create	(*(*(struct)))->(int)
(	O
&	O
comlist	*(struct)
)	O
;	O
mu_auth_extend_settings	(*(struct),*(struct))->(void)
(	O
oplist	*(struct)
,	O
comlist	*(struct)
)	O
;	O
if	O
(	O
capa	*(struct(*(char),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*((enum(int,int),*(struct`),*(char),*(*`),*(void),*(struct`))->(int)),*((*(void))->(void))))
)	O
{	O
for	O
(	O
i	long
=	O
0	int
;	O
capa	*(struct(*(char),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*((enum(int,int),*(struct`),*(char),*(*`),*(void),*(struct`))->(int)),*((*(void))->(void))))
[	O
i	long
]	O
;	O
i	long
++	O
)	O
mu_cli_capa_extend_settings	(*(char),*(struct),*(struct))->(void)
(	O
capa	*(struct(*(char),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*((enum(int,int),*(struct`),*(char),*(*`),*(void),*(struct`))->(int)),*((*(void))->(void))))
[	O
i	long
]	O
,	O
oplist	*(struct)
,	O
comlist	*(struct)
)	O
;	O
}	O
*	O
ret_comlist	*(*(struct))
=	O
comlist	*(struct)
;	O
mu_list_append	(*(struct),*(void))->(int)
(	O
oplist	*(struct)
,	O
mu_common_options	array(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct(int,*`,long,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,int,*`,int,int,int,long,*`)),*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`)),*(char))->(void)),*(char)))
)	O
;	O
if	O
(	O
hints	*(struct(*(char),*(char)))
->	O
flags	int
&	O
CONFIG_ENABLED	O
)	O
{	O
opool_add_option	(*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))->(void)
(	O
pool	*(struct)
,	O
&	O
mu_config_option_header	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct(int,*`,long,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,int,*`,int,int,int,long,*`)),*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`)),*(char))->(void)),*(char))
)	O
;	O
opool_add_options	(*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))->(void)
(	O
pool	*(struct)
,	O
mu_config_lint_options	array(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct(int,*`,long,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,int,*`,int,int,int,long,*`)),*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`)),*(char))->(void)),*(char)))
)	O
;	O
if	O
(	O
!	O
(	O
hints	*(struct(*(char),*(char)))
->	O
flags	int
&	O
MU_CFHINT_NO_CONFIG_OVERRIDE	int
)	O
)	O
{	O
opool_add_options	(*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))->(void)
(	O
pool	*(struct)
,	O
mu_config_override_options	array(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct(int,*`,long,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,int,*`,int,int,int,long,*`)),*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`)),*(char))->(void)),*(char)))
)	O
;	O
if	O
(	O
hints	*(struct(*(char),*(char)))
->	O
flags	int
&	O
MU_CFHINT_SITE_FILE	int
)	O
{	O
opool_add_options	(*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))->(void)
(	O
pool	*(struct)
,	O
mu_site_config_options	array(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct(int,*`,long,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,int,*`,int,int,int,long,*`)),*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`)),*(char))->(void)),*(char)))
)	O
;	O
if	O
(	O
hints	*(struct(*(char),*(char)))
->	O
flags	int
&	O
MU_CFHINT_PER_USER_FILE	int
)	O
{	O
opool_add_options	(*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))->(void)
(	O
pool	*(struct)
,	O
mu_user_config_options	array(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct(int,*`,long,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,int,*`,int,int,int,long,*`)),*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`)),*(char))->(void)),*(char)))
)	O
;	O
opool_add_option	(*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))->(void)
(	O
pool	*(struct)
,	O
&	O
mu_no_config_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct(int,*`,long,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,int,*`,int,int,int,long,*`)),*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`)),*(char))->(void)),*(char))
)	O
;	O
}	O
else	O
{	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
=	O
mu_no_config_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct(int,*`,long,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,int,*`,int,int,int,long,*`)),*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`)),*(char))->(void)),*(char))
;	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
.	O
opt_flags	int
=	O
MU_OPTION_ALIAS	int
;	O
opool_add_option	(*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))->(void)
(	O
pool	*(struct)
,	O
&	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
)	O
;	O
}	O
}	O
else	O
if	O
(	O
hints	*(struct(*(char),*(char)))
->	O
flags	int
&	O
MU_CFHINT_PER_USER_FILE	int
)	O
{	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
=	O
mu_no_config_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct(int,*`,long,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,int,*`,int,int,int,long,*`)),*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`)),*(char))->(void)),*(char))
;	O
opool_add_options	(*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))->(void)
(	O
pool	*(struct)
,	O
mu_user_config_options	array(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct(int,*`,long,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,int,*`,int,int,int,long,*`)),*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`)),*(char))->(void)),*(char)))
)	O
;	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
.	O
opt_flags	int
=	O
MU_OPTION_ALIAS	int
;	O
opool_add_option	(*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))->(void)
(	O
pool	*(struct)
,	O
&	O
opt	*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct`),*(struct`),*(char))->(void)),*(char)))
)	O
;	O
}	O
}	O
mu_list_append	(*(struct),*(void))->(int)
(	O
oplist	*(struct)
,	O
opool_end_option	(*(struct))->(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))
(	O
pool	*(struct)
)	O
)	O
;	O
}	O
mu_list_append	(*(struct),*(void))->(int)
(	O
oplist	*(struct)
,	O
mu_extra_help_options	array(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct(int,*`,long,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,int,*`,int,int,int,long,*`)),*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`)),*(char))->(void)),*(char)))
)	O
;	O
if	O
(	O
hints	*(struct(*(char),*(char)))
->	O
flags	int
&	O
CONFIG_ENABLED	O
)	O
mu_list_append	(*(struct),*(void))->(int)
(	O
oplist	*(struct)
,	O
mu_config_help_options	array(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct(int,*`,long,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,int,*`,int,int,int,long,*`)),*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`)),*(char))->(void)),*(char)))
)	O
;	O
mu_list_count	(*(struct),*(long))->(int)
(	O
oplist	*(struct)
,	O
&	O
s	*(char)
)	O
;	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_optv	*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))
=	O
mu_calloc	(long,long)->(*(void))
(	O
s	*(char)
+	O
1	int
,	O
sizeof	O
(	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_optv	*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))
[	O
0	int
]	O
)	O
)	O
;	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_optc	long
=	O
0	int
;	O
mu_list_foreach	(*(struct),*((*(void),*(void))->(int)),*(void))->(int)
(	O
oplist	*(struct)
,	O
add_opt_group	(*(void),*(void))->(int)
,	O
&	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
)	O
;	O
if	O
(	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_optc	long
!=	O
s	*(char)
)	O
abort	()->(void)
(	O
)	O
;	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_optv	*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))
[	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_optc	long
]	O
=	O
NULL	O
;	O
mu_list_destroy	(*(*(struct)))->(void)
(	O
&	O
oplist	*(struct)
)	O
;	O
return	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_optv	*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))
;	O
}	O
static	O
int	O
run_commit	(*(void),*(void))->(int)
(	O
void	O
*	O
item	*(void)
,	O
void	O
*	O
data	*(void)
)	O
{	O
mu_cli_capa_commit_fp	*((*(void))->(void))
commit	*((*(void))->(void))
=	O
item	*(void)
;	O
commit	*((*(void))->(void))
(	O
data	*(void)
)	O
;	O
return	O
0	int
;	O
}	O
void	O
mu_cli_ext	(int,*(*(char)),*(struct(*(*(struct`)),*(struct(*`,int,*`,long,*`,*`,*`)),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct(int,*(char),*(char),*(char))),*(*(char)),*(void),*(int),*(*(*(char))))->(void)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
,	O
struct	O
mu_cli_setup	struct(*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char)))),*(struct(*(char),int,*(void),long,*((*(void),*(struct`))->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct))->(void)))
*	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
,	O
struct	O
mu_parseopt	struct(int,*(*(char)),long,*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char)))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))
*	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
,	O
struct	O
mu_cfg_parse_hints	struct(int,*(char),*(char),*(char))
*	O
cfhint	*(struct(int,*(char),*(char),*(char)))
,	O
char	O
*	O
*	O
capa	*(struct(*(char),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*((enum(int,int),*(struct`),*(char),*(*`),*(void),*(struct`))->(int)),*((*(void))->(void))))
,	O
void	O
*	O
data	*(void)
,	O
int	O
*	O
ret_argc	*(int)
,	O
char	O
*	O
*	O
*	O
ret_argv	*(*(*(char)))
)	O
{	O
struct	O
mu_parseopt	struct(int,*(*(char)),long,*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char)))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
;	O
int	O
flags	int
=	O
0	int
;	O
struct	O
mu_cfg_tree	struct(*(struct),*(struct))
*	O
parse_tree	*(struct(*(struct),*(struct)))
=	O
NULL	O
;	O
struct	O
mu_cfg_parse_hints	struct(int,*(char),*(char),*(char))
hints	*(struct(*(char),*(char)))
;	O
struct	O
mu_option	struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*(struct),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(char))->(void)),*(char))
*	O
*	O
optv	*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))
;	O
mu_list_t	*(struct)
com_list	*(struct)
;	O
char	O
const	O
*	O
dfl_args	array(*(char))
[	O
DFLARGC	int
]	O
;	O
char	O
*	O
*	O
args	*(*(char))
=	O
NULL	O
;	O
size_t	long
argcnt	long
;	O
struct	O
app_data	struct(*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct),*(struct))),int)
appd	struct(*(struct(*(*(struct`)),*(struct(*`,int,*`,long,*`,*`,*`)),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct),*(struct))),int)
;	O
mu_opool_t	*(struct)
pool	*(struct)
;	O
if	O
(	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
->	O
ex_usage	int
==	O
0	int
)	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
->	O
ex_usage	int
=	O
EX_USAGE	int
;	O
if	O
(	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
->	O
ex_config	int
==	O
0	int
)	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
->	O
ex_config	int
=	O
EX_CONFIG	int
;	O
hints	*(struct(*(char),*(char)))
=	O
*	O
cfhint	*(struct(int,*(char),*(char),*(char)))
;	O
if	O
(	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
->	O
server	int
)	O
hints	*(struct(*(char),*(char)))
.	O
flags	int
&=	O
~	O
MU_CFHINT_PER_USER_FILE	int
;	O
if	O
(	O
!	O
(	O
hints	*(struct(*(char),*(char)))
.	O
flags	int
&	O
MU_CFHINT_PROGRAM	int
)	O
)	O
{	O
if	O
(	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
->	O
po_flags	int
&	O
MU_PARSEOPT_PROG_NAME	int
)	O
hints	*(struct(*(char),*(char)))
.	O
program	*(char)
=	O
(	O
char	O
*	O
)	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
->	O
po_prog_name	*(char)
;	O
else	O
{	O
mu_set_program_name	(*(char))->(void)
(	O
argv	*(*(char))
[	O
0	int
]	O
)	O
;	O
hints	*(struct(*(char),*(char)))
.	O
program	*(char)
=	O
(	O
char	O
*	O
)	O
mu_program_name	*(char)
;	O
}	O
hints	*(struct(*(char),*(char)))
.	O
flags	int
|=	O
MU_CFHINT_PROGRAM	int
;	O
}	O
mu_stdstream_setup	(int)->(void)
(	O
MU_STDSTREAM_RESET_NONE	int
)	O
;	O
mu_cli_capa_init	()->(void)
(	O
)	O
;	O
if	O
(	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
->	O
prog_doc	*(char)
)	O
{	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_prog_doc	*(char)
=	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
->	O
prog_doc	*(char)
;	O
flags	int
|=	O
MU_PARSEOPT_PROG_DOC	int
;	O
}	O
else	O
if	O
(	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
->	O
po_flags	int
&	O
MU_PARSEOPT_PROG_DOC	int
)	O
{	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_prog_doc	*(char)
=	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
->	O
po_prog_doc	*(char)
;	O
flags	int
|=	O
MU_PARSEOPT_PROG_DOC	int
;	O
}	O
if	O
(	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
->	O
prog_args	*(char)
)	O
{	O
size_t	long
i	long
;	O
argcnt	long
=	O
1	int
;	O
if	O
(	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
->	O
prog_alt_args	*(*(char))
)	O
{	O
for	O
(	O
i	long
=	O
0	int
;	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
->	O
prog_alt_args	*(*(char))
[	O
i	long
]	O
;	O
i	long
++	O
)	O
argcnt	long
++	O
;	O
}	O
if	O
(	O
argcnt	long
<	O
DFLARGC	int
)	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_prog_args	*(*(char))
=	O
dfl_args	array(*(char))
;	O
else	O
{	O
args	*(*(char))
=	O
mu_calloc	(long,long)->(*(void))
(	O
argcnt	long
+	O
1	int
,	O
sizeof	O
(	O
args	*(*(char))
[	O
0	int
]	O
)	O
)	O
;	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_prog_args	*(*(char))
=	O
(	O
char	O
const	O
*	O
*	O
)	O
args	*(*(char))
;	O
}	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_prog_args	*(*(char))
[	O
0	int
]	O
=	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
->	O
prog_args	*(char)
;	O
for	O
(	O
i	long
=	O
1	int
;	O
i	long
<	O
argcnt	long
;	O
i	long
++	O
)	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_prog_args	*(*(char))
[	O
i	long
]	O
=	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
->	O
prog_alt_args	*(*(char))
[	O
i	long
-	O
1	int
]	O
;	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_prog_args	*(*(char))
[	O
i	long
]	O
=	O
NULL	O
;	O
flags	int
|=	O
MU_PARSEOPT_PROG_ARGS	int
;	O
}	O
else	O
if	O
(	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
->	O
po_flags	int
&	O
MU_PARSEOPT_PROG_ARGS	int
)	O
{	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_prog_args	*(*(char))
=	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
->	O
po_prog_args	*(*(char))
;	O
flags	int
|=	O
MU_PARSEOPT_PROG_ARGS	int
;	O
}	O
if	O
(	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
->	O
prog_extra_doc	*(char)
)	O
{	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_help_hook	*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void))
=	O
extra_help_hook	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)
;	O
flags	int
|=	O
MU_PARSEOPT_HELP_HOOK	int
;	O
}	O
if	O
(	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
->	O
prog_doc_hook	*((*(struct))->(void))
)	O
{	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_prog_doc_hook	*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void))
=	O
prog_doc_hook	*((*(struct))->(void))
;	O
flags	int
|=	O
MU_PARSEOPT_PROG_DOC_HOOK	int
;	O
}	O
else	O
if	O
(	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
->	O
po_flags	int
&	O
MU_PARSEOPT_PROG_DOC_HOOK	int
)	O
{	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_prog_doc_hook	*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void))
=	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
->	O
po_prog_doc_hook	*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void))
;	O
flags	int
|=	O
MU_PARSEOPT_PROG_DOC_HOOK	int
;	O
}	O
if	O
(	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
->	O
inorder	int
)	O
flags	int
|=	O
MU_PARSEOPT_IN_ORDER	int
;	O
flags	int
|=	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
->	O
po_flags	int
&	O
PRESERVE_FLAGS	O
;	O
if	O
(	O
flags	int
&	O
MU_PARSEOPT_PACKAGE_NAME	int
)	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_package_name	*(char)
=	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
->	O
po_package_name	*(char)
;	O
if	O
(	O
flags	int
&	O
MU_PARSEOPT_PACKAGE_URL	int
)	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_package_url	*(char)
=	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
->	O
po_package_url	*(char)
;	O
if	O
(	O
flags	int
&	O
MU_PARSEOPT_BUG_ADDRESS	int
)	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_bug_address	*(char)
=	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
->	O
po_bug_address	*(char)
;	O
if	O
(	O
flags	int
&	O
MU_PARSEOPT_EXTRA_INFO	int
)	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_extra_info	*(char)
=	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
->	O
po_extra_info	*(char)
;	O
if	O
(	O
flags	int
&	O
MU_PARSEOPT_VERSION_HOOK	int
)	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_version_hook	*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void))
=	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
->	O
po_version_hook	*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void))
;	O
if	O
(	O
flags	int
&	O
MU_PARSEOPT_NEGATION	int
)	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_negation	*(char)
=	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
->	O
po_negation	*(char)
;	O
if	O
(	O
flags	int
&	O
MU_PARSEOPT_PROG_NAME	int
)	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_prog_name	*(char)
=	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
->	O
po_prog_name	*(char)
;	O
appd	struct(*(struct(*(*(struct`)),*(struct(*`,int,*`,long,*`,*`,*`)),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct),*(struct))),int)
.	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
=	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
;	O
appd	struct(*(struct(*(*(struct`)),*(struct(*`,int,*`,long,*`,*`,*`)),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct),*(struct))),int)
.	O
hints	*(struct(*(char),*(char)))
=	O
&	O
hints	*(struct(*(char),*(char)))
;	O
appd	struct(*(struct(*(*(struct`)),*(struct(*`,int,*`,long,*`,*`,*`)),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct),*(struct))),int)
.	O
append_tree	*(struct(*(struct),*(struct)))
=	O
NULL	O
;	O
appd	struct(*(struct(*(*(struct`)),*(struct(*`,int,*`,long,*`,*`,*`)),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct),*(struct))),int)
.	O
lint	int
=	O
0	int
;	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_data	*(void)
=	O
&	O
appd	struct(*(struct(*(*(struct`)),*(struct(*`,int,*`,long,*`,*`,*`)),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct),*(struct))),int)
;	O
flags	int
|=	O
MU_PARSEOPT_DATA	int
;	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_exit_error	int
=	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
->	O
ex_usage	int
;	O
mu_opool_create	(*(*(struct)),int)->(int)
(	O
&	O
pool	*(struct)
,	O
MU_OPOOL_ENOMEMABRT	int
)	O
;	O
optv	*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))
=	O
init_options	(*(struct),*(*(char)),*(struct(*(*(struct`)),*(struct(*`,int,*`,long,*`,*`,*`)),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(*(struct)))->(*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char)))))
(	O
pool	*(struct)
,	O
capa	*(struct(*(char),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*((enum(int,int),*(struct`),*(char),*(*`),*(void),*(struct`))->(int)),*((*(void))->(void))))
,	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
,	O
&	O
hints	*(struct(*(char),*(char)))
,	O
&	O
com_list	*(struct)
)	O
;	O
if	O
(	O
mu_parseopt	struct(int,*(*(char)),long,*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char)))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))
(	O
&	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
,	O
argc	int
,	O
argv	*(*(char))
,	O
optv	*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))
,	O
flags	int
)	O
)	O
exit	(int)->(void)
(	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_exit_error	int
)	O
;	O
argc	int
-=	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_arg_start	int
;	O
argv	*(*(char))
+=	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
.	O
po_arg_start	int
;	O
if	O
(	O
ret_argc	*(int)
)	O
{	O
*	O
ret_argc	*(int)
=	O
argc	int
;	O
*	O
ret_argv	*(*(*(char)))
=	O
argv	*(*(char))
;	O
}	O
else	O
if	O
(	O
argc	int
)	O
mu_parseopt_error	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(char))->(void)
(	O
&	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
,	O
"%s"	*(char)
,	O
_	O
(	O
"unexpected arguments"	*(char)
)	O
)	O
;	O
if	O
(	O
(	O
hints	*(struct(*(char),*(char)))
.	O
flags	int
&	O
MU_CFHINT_SITE_FILE	int
)	O
&&	O
strcmp	(*(char),*(char))->(int)
(	O
hints	*(struct(*(char),*(char)))
.	O
site_file	*(char)
,	O
MU_SITE_CONFIG_FILE	O
)	O
==	O
0	int
)	O
{	O
if	O
(	O
access	(*(char),int)->(int)
(	O
MU_LEGACY_CONFIG_FILE	O
,	O
F_OK	int
)	O
==	O
0	int
)	O
{	O
if	O
(	O
access	(*(char),int)->(int)
(	O
hints	*(struct(*(char),*(char)))
.	O
site_file	*(char)
,	O
F_OK	int
)	O
==	O
0	int
)	O
{	O
mu_diag_output	(int,*(char))->(void)
(	O
MU_DIAG_WARNING	O
,	O
_	O
(	O
"legacy configuration file %s ignored"	*(char)
)	O
,	O
MU_LEGACY_CONFIG_FILE	O
)	O
;	O
}	O
else	O
{	O
mu_diag_output	(int,*(char))->(void)
(	O
MU_DIAG_WARNING	O
,	O
_	O
(	O
"using legacy configuration file %s: please rename it to %s"	*(char)
)	O
,	O
MU_LEGACY_CONFIG_FILE	O
,	O
MU_SITE_CONFIG_FILE	O
)	O
;	O
hints	*(struct(*(char),*(char)))
.	O
site_file	*(char)
=	O
MU_LEGACY_CONFIG_FILE	O
;	O
}	O
}	O
}	O
if	O
(	O
mu_cfg_parse_config	(*(*(struct(*(struct`),*(struct`)))),*(struct(int,*(char),*(char),*(char))))->(int)
(	O
&	O
parse_tree	*(struct(*(struct),*(struct)))
,	O
&	O
hints	*(struct(*(char),*(char)))
)	O
)	O
exit	(int)->(void)
(	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
->	O
ex_config	int
)	O
;	O
if	O
(	O
appd	struct(*(struct(*(*(struct`)),*(struct(*`,int,*`,long,*`,*`,*`)),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct),*(struct))),int)
.	O
append_tree	*(struct(*(struct),*(struct)))
)	O
mu_cfg_tree_union	(*(*(struct(*(struct`),*(struct`)))),*(*(struct(*(struct`),*(struct`)))))->(int)
(	O
&	O
parse_tree	*(struct(*(struct),*(struct)))
,	O
&	O
appd	struct(*(struct(*(*(struct`)),*(struct(*`,int,*`,long,*`,*`,*`)),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct),*(struct))),int)
.	O
append_tree	*(struct(*(struct),*(struct)))
)	O
;	O
if	O
(	O
mu_cfg_tree_reduce	(*(struct(*(struct),*(struct))),*(struct(int,*(char),*(char),*(char))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(void))->(int)
(	O
parse_tree	*(struct(*(struct),*(struct)))
,	O
&	O
hints	*(struct(*(char),*(char)))
,	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
->	O
cfg	*(struct(*(char),int,*(void),long,*((*(void),*(struct`))->(int)),*(char),*(char)))
,	O
data	*(void)
)	O
)	O
exit	(int)->(void)
(	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
->	O
ex_config	int
)	O
;	O
if	O
(	O
mu_cfg_error_count	long
)	O
exit	(int)->(void)
(	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
->	O
ex_config	int
)	O
;	O
mu_parseopt_apply	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))))->(int)
(	O
&	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
)	O
;	O
mu_list_foreach	(*(struct),*((*(void),*(void))->(int)),*(void))->(int)
(	O
com_list	*(struct)
,	O
run_commit	(*(void),*(void))->(int)
,	O
NULL	O
)	O
;	O
mu_list_destroy	(*(*(struct)))->(void)
(	O
&	O
com_list	*(struct)
)	O
;	O
mu_cfg_destroy_tree	(*(*(struct(*(struct`),*(struct`)))))->(void)
(	O
&	O
parse_tree	*(struct(*(struct),*(struct)))
)	O
;	O
free	(*(void))->(void)
(	O
optv	*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))))
)	O
;	O
free	(*(void))->(void)
(	O
args	*(*(char))
)	O
;	O
mu_parseopt_free	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))))->(void)
(	O
&	O
po	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char)))
)	O
;	O
mu_opool_destroy	(*(*(struct)))->(void)
(	O
&	O
pool	*(struct)
)	O
;	O
if	O
(	O
appd	struct(*(struct(*(*(struct`)),*(struct(*`,int,*`,long,*`,*`,*`)),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(char),*(char),*(char))),*(struct(*(struct),*(struct))),int)
.	O
lint	int
)	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
void	O
mu_cli	(int,*(*(char)),*(struct(*(*(struct`)),*(struct(*`,int,*`,long,*`,*`,*`)),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*`)->(void)))),*(*(char)),*(void),*(int),*(*(*(char))))->(void)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
,	O
struct	O
mu_cli_setup	struct(*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char)))),*(struct(*(char),int,*(void),long,*((*(void),*(struct`))->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct))->(void)))
*	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
,	O
char	O
*	O
*	O
capa	*(struct(*(char),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*((enum(int,int),*(struct`),*(char),*(*`),*(void),*(struct`))->(int)),*((*(void))->(void))))
,	O
void	O
*	O
data	*(void)
,	O
int	O
*	O
ret_argc	*(int)
,	O
char	O
*	O
*	O
*	O
ret_argv	*(*(*(char)))
)	O
{	O
struct	O
mu_parseopt	struct(int,*(*(char)),long,*(*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char)))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
;	O
struct	O
mu_cfg_parse_hints	struct(int,*(char),*(char),*(char))
cfhint	*(struct(int,*(char),*(char),*(char)))
;	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
.	O
po_flags	int
=	O
0	int
;	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
.	O
po_package_name	*(char)
=	O
PACKAGE_NAME	*(char)
;	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
.	O
po_flags	int
|=	O
MU_PARSEOPT_PACKAGE_NAME	int
;	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
.	O
po_package_url	*(char)
=	O
PACKAGE_URL	*(char)
;	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
.	O
po_flags	int
|=	O
MU_PARSEOPT_PACKAGE_URL	int
;	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
.	O
po_bug_address	*(char)
=	O
PACKAGE_BUGREPORT	*(char)
;	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
.	O
po_flags	int
|=	O
MU_PARSEOPT_BUG_ADDRESS	int
;	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
.	O
po_extra_info	*(char)
=	O
mu_general_help_text	array(char)
;	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
.	O
po_flags	int
|=	O
MU_PARSEOPT_EXTRA_INFO	int
;	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
.	O
po_version_hook	*((*(struct(int,*(*`),long,*(*`),int,*(char),*(void),int,*(char),*(char),*(*`),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct`),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void))
=	O
mu_version_hook	(*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct))->(void)
;	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
.	O
po_flags	int
|=	O
MU_PARSEOPT_VERSION_HOOK	int
;	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
.	O
po_negation	*(char)
=	O
"no-"	*(char)
;	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
.	O
po_flags	int
|=	O
MU_PARSEOPT_NEGATION	int
;	O
cfhint	*(struct(int,*(char),*(char),*(char)))
.	O
site_file	*(char)
=	O
mu_site_config_file	()->(*(char))
(	O
)	O
;	O
cfhint	*(struct(int,*(char),*(char),*(char)))
.	O
flags	int
=	O
MU_CFHINT_SITE_FILE	int
|	O
MU_CFHINT_PER_USER_FILE	int
;	O
mu_cli_ext	(int,*(*(char)),*(struct(*(*(struct`)),*(struct(*`,int,*`,long,*`,*`,*`)),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*`)->(void)))),*(struct(int,*(*(char)),long,*(*(struct`)),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long))),*(struct(int,*(char),*(char),*(char))),*(*(char)),*(void),*(int),*(*(*(char))))->(void)
(	O
argc	int
,	O
argv	*(*(char))
,	O
setup	*(struct(*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*(char),*(char),*(*(char)),*(char),int,int,int,int,*((*(struct`))->(void))))
,	O
&	O
pohint	*(struct(int,*(*(char)),long,*(*(struct(*`,int,*`,int,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`))),int,*(char),*(void),int,*(char),*(char),*(*(char)),*(char),*(char),*(char),*(char),*(char),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(void)),int,int,*(struct),*(char),int,*(char),int,int,int,long,*(long)))
,	O
&	O
cfhint	*(struct(int,*(char),*(char),*(char)))
,	O
capa	*(struct(*(char),*(struct(*(char),int,*(char),int,*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void),*((*`,*`,*`)->(void)),*(char))),*(struct(*(char),int,*(void),long,*((*`,*`)->(int)),*(char),*(char))),*((enum(int,int),*(struct`),*(char),*(*`),*(void),*(struct`))->(int)),*((*(void))->(void))))
,	O
data	*(void)
,	O
ret_argc	*(int)
,	O
ret_argv	*(*(*(char)))
)	O
;	O
}	O
