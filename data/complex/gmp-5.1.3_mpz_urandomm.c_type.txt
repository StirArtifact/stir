void	O
mpz_urandomm	O
(	O
mpz_ptr	*(struct(int,int,*(long)))
rop	*(struct(int,int,*(long)))
,	O
gmp_randstate_t	array(struct(array(struct(int,int,*(long))),enum(int,int),union(*(void))))
rstate	array(struct(array(struct(int,int,*(long))),enum(int,int),union(*(void))))
,	O
mpz_srcptr	*(struct(int,int,*(long)))
n	long
)	O
{	O
mp_ptr	*(long)
rp	*(long)
,	O
np	*(long)
,	O
nlast	*(long)
;	O
mp_size_t	long
nbits	long
,	O
size	long
;	O
int	O
count	int
;	O
int	O
pow2	int
;	O
int	O
cmp	int
;	O
TMP_DECL	O
;	O
size	long
=	O
ABSIZ	O
(	O
n	long
)	O
;	O
if	O
(	O
UNLIKELY	O
(	O
size	long
==	O
0	int
)	O
)	O
DIVIDE_BY_ZERO	O
;	O
nlast	*(long)
=	O
&	O
PTR	O
(	O
n	long
)	O
[	O
size	long
-	O
1	int
]	O
;	O
pow2	int
=	O
POW2_P	O
(	O
*	O
nlast	*(long)
)	O
;	O
if	O
(	O
pow2	int
!=	O
0	int
)	O
for	O
(	O
np	*(long)
=	O
PTR	O
(	O
n	long
)	O
;	O
np	*(long)
<	O
nlast	*(long)
;	O
np	*(long)
++	O
)	O
if	O
(	O
*	O
np	*(long)
!=	O
0	int
)	O
{	O
pow2	int
=	O
0	int
;	O
break	O
;	O
}	O
count_leading_zeros	O
(	O
count	int
,	O
*	O
nlast	*(long)
)	O
;	O
nbits	long
=	O
size	long
*	O
GMP_NUMB_BITS	O
-	O
(	O
count	int
-	O
GMP_NAIL_BITS	int
)	O
-	O
pow2	int
;	O
if	O
(	O
nbits	long
==	O
0	int
)	O
{	O
SIZ	O
(	O
rop	*(struct(int,int,*(long)))
)	O
=	O
0	int
;	O
return	O
;	O
}	O
TMP_MARK	O
;	O
np	*(long)
=	O
PTR	O
(	O
n	long
)	O
;	O
if	O
(	O
rop	*(struct(int,int,*(long)))
==	O
n	long
)	O
{	O
mp_ptr	*(long)
tp	*(long)
;	O
tp	*(long)
=	O
TMP_ALLOC_LIMBS	O
(	O
size	long
)	O
;	O
MPN_COPY	O
(	O
tp	*(long)
,	O
np	*(long)
,	O
size	long
)	O
;	O
np	*(long)
=	O
tp	*(long)
;	O
}	O
rp	*(long)
=	O
MPZ_REALLOC	O
(	O
rop	*(struct(int,int,*(long)))
,	O
size	long
)	O
;	O
rp	*(long)
[	O
size	long
-	O
1	int
]	O
=	O
0	int
;	O
count	int
=	O
MAX_URANDOMM_ITER	int
;	O
do	O
{	O
_gmp_rand	O
(	O
rp	*(long)
,	O
rstate	array(struct(array(struct(int,int,*(long))),enum(int,int),union(*(void))))
,	O
nbits	long
)	O
;	O
MPN_CMP	O
(	O
cmp	int
,	O
rp	*(long)
,	O
np	*(long)
,	O
size	long
)	O
;	O
}	O
while	O
(	O
cmp	int
>=	O
0	int
&&	O
--	O
count	int
!=	O
0	int
)	O
;	O
if	O
(	O
count	int
==	O
0	int
)	O
mpn_sub_n	O
(	O
rp	*(long)
,	O
rp	*(long)
,	O
np	*(long)
,	O
size	long
)	O
;	O
MPN_NORMALIZE	O
(	O
rp	*(long)
,	O
size	long
)	O
;	O
SIZ	O
(	O
rop	*(struct(int,int,*(long)))
)	O
=	O
size	long
;	O
TMP_FREE	O
;	O
}	O
