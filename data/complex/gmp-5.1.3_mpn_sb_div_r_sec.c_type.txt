void	O
FNAME	O
(	O
Q	O
(	O
mp_ptr	*(long)
qp	O
)	O
mp_ptr	*(long)
np	*(long)
,	O
mp_size_t	long
nn	long
,	O
mp_srcptr	*(long)
dp	*(long)
,	O
mp_size_t	long
dn	long
,	O
mp_ptr	*(long)
tp	*(long)
)	O
{	O
mp_limb_t	long
d1	long
,	O
d0	long
,	O
qh	long
;	O
unsigned	O
int	O
cnt	int
;	O
mp_ptr	*(long)
np2	*(long)
,	O
dp2	*(long)
;	O
gmp_pi1_t	struct(long)
dinv	struct(long)
;	O
mp_limb_t	long
inv32	long
;	O
mp_limb_t	long
cy	long
;	O
ASSERT	O
(	O
dn	long
>=	O
1	int
)	O
;	O
ASSERT	O
(	O
nn	long
>=	O
dn	long
)	O
;	O
ASSERT	O
(	O
dp	*(long)
[	O
dn	long
-	O
1	int
]	O
!=	O
0	int
)	O
;	O
d1	long
=	O
dp	*(long)
[	O
dn	long
-	O
1	int
]	O
;	O
count_leading_zeros	O
(	O
cnt	int
,	O
d1	long
)	O
;	O
if	O
(	O
cnt	int
!=	O
0	int
)	O
{	O
dp2	*(long)
=	O
tp	*(long)
;	O
mpn_lshift	O
(	O
dp2	*(long)
,	O
dp	*(long)
,	O
dn	long
,	O
cnt	int
)	O
;	O
np2	*(long)
=	O
tp	*(long)
+	O
dn	long
;	O
cy	long
=	O
mpn_lshift	O
(	O
np2	*(long)
,	O
np	*(long)
,	O
nn	long
,	O
cnt	int
)	O
;	O
np2	*(long)
[	O
nn	long
++	O
]	O
=	O
cy	long
;	O
}	O
else	O
{	O
dp2	*(long)
=	O
(	O
mp_ptr	*(long)
)	O
dp	*(long)
;	O
np2	*(long)
=	O
np	*(long)
;	O
}	O
d0	long
=	O
dp2	*(long)
[	O
dn	long
-	O
1	int
]	O
;	O
d0	long
+=	O
(	O
~	O
d0	long
!=	O
0	int
)	O
;	O
invert_limb	O
(	O
inv32	long
,	O
d0	long
)	O
;	O
mpn_sbpi1_div_r_sec	O
(	O
np2	*(long)
,	O
nn	long
,	O
dp2	*(long)
,	O
dn	long
,	O
inv32	long
,	O
tp	*(long)
+	O
nn	long
+	O
dn	long
)	O
;	O
if	O
(	O
cnt	int
==	O
0	int
)	O
;	O
else	O
mpn_rshift	O
(	O
np	*(long)
,	O
np2	*(long)
,	O
dn	long
,	O
cnt	int
)	O
;	O
}	O
