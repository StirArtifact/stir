extern	O
void	O
starting_body	()->(void)
(	O
)	O
;	O
extern	O
void	O
starting_text	()->(void)
(	O
)	O
;	O
extern	O
int	O
simulate_allcaps	int
;	O
extern	O
int	O
simulate_smallcaps	int
;	O
typedef	O
struct	O
_stack	struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`))))))
{	O
unsigned	O
char	O
attr_stack	array(char)
[	O
MAX_ATTRS	O
]	O
;	O
char	O
*	O
attr_stack_params	array(*(char))
[	O
MAX_ATTRS	O
]	O
;	O
int	O
tos	int
;	O
struct	O
_stack	struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`))))))
*	O
next	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
;	O
}	O
AttrStack	struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))))
;	O
static	O
AttrStack	struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))))
*	O
stack_of_stacks	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
=	O
NULL	O
;	O
static	O
AttrStack	struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))))
*	O
stack_of_stacks_top	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
=	O
NULL	O
;	O
void	O
attr_express_begin	(int,*(char))->(void)
(	O
int	O
attr	int
,	O
char	O
*	O
param	*(char)
)	O
{	O
switch	O
(	O
attr	int
)	O
{	O
case	O
ATTR_BOLD	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
bold_begin	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_ITALIC	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
italic_begin	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_THICK_UL	int
:	O
case	O
ATTR_WAVE_UL	int
:	O
case	O
ATTR_DASH_UL	int
:	O
case	O
ATTR_DOT_UL	int
:	O
case	O
ATTR_DOT_DASH_UL	int
:	O
case	O
ATTR_2DOT_DASH_UL	int
:	O
case	O
ATTR_WORD_UL	int
:	O
case	O
ATTR_UNDERLINE	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
underline_begin	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_DOUBLE_UL	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
dbl_underline_begin	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_FONTSIZE	int
:	O
op_begin_std_fontsize	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*`)),*((int,int,int)->(void)))),int)->(void)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
,	O
atoi	(*(char))->(int)
(	O
param	*(char)
)	O
)	O
;	O
break	O
;	O
case	O
ATTR_FONTFACE	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
font_begin	*(char)
,	O
param	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_FOREGROUND	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
foreground_begin	*(char)
,	O
param	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_BACKGROUND	int
:	O
if	O
(	O
!	O
simple_mode	int
)	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
foreground_begin	*(char)
,	O
param	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_SUPER	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
superscript_begin	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_SUB	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
subscript_begin	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_STRIKE	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
strikethru_begin	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_DBL_STRIKE	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
dbl_strikethru_begin	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_EXPAND	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
expand_begin	*(char)
,	O
param	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_OUTLINE	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
outline_begin	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_SHADOW	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
shadow_begin	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_EMBOSS	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
emboss_begin	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_ENGRAVE	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
engrave_begin	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_CAPS	int
:	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
simulate_all_caps	int
)	O
simulate_allcaps	int
=	O
TRUE	O
;	O
break	O
;	O
case	O
ATTR_SMALLCAPS	int
:	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
simulate_small_caps	int
)	O
simulate_smallcaps	int
=	O
TRUE	O
;	O
else	O
{	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
small_caps_begin	*(char)
)	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
small_caps_begin	*(char)
)	O
;	O
}	O
break	O
;	O
}	O
}	O
void	O
attr_express_end	(int,*(char))->(void)
(	O
int	O
attr	int
,	O
char	O
*	O
param	*(char)
)	O
{	O
switch	O
(	O
attr	int
)	O
{	O
case	O
ATTR_BOLD	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
bold_end	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_ITALIC	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
italic_end	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_THICK_UL	int
:	O
case	O
ATTR_WAVE_UL	int
:	O
case	O
ATTR_DASH_UL	int
:	O
case	O
ATTR_DOT_UL	int
:	O
case	O
ATTR_DOT_DASH_UL	int
:	O
case	O
ATTR_2DOT_DASH_UL	int
:	O
case	O
ATTR_WORD_UL	int
:	O
case	O
ATTR_UNDERLINE	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
underline_end	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_DOUBLE_UL	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
dbl_underline_end	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_FONTSIZE	int
:	O
op_end_std_fontsize	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*`)),*((int,int,int)->(void)))),int)->(void)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
,	O
atoi	(*(char))->(int)
(	O
param	*(char)
)	O
)	O
;	O
break	O
;	O
case	O
ATTR_FONTFACE	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
font_end	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_FOREGROUND	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
foreground_end	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_BACKGROUND	int
:	O
if	O
(	O
!	O
simple_mode	int
)	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
background_end	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_SUPER	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
superscript_end	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_SUB	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
subscript_end	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_STRIKE	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
strikethru_end	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_DBL_STRIKE	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
dbl_strikethru_end	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_OUTLINE	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
outline_end	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_SHADOW	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
shadow_end	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_EMBOSS	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
emboss_end	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_ENGRAVE	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
engrave_end	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_EXPAND	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
expand_end	*(char)
)	O
;	O
break	O
;	O
case	O
ATTR_CAPS	int
:	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
simulate_all_caps	int
)	O
simulate_allcaps	int
=	O
FALSE	O
;	O
break	O
;	O
case	O
ATTR_SMALLCAPS	int
:	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
simulate_small_caps	int
)	O
simulate_smallcaps	int
=	O
FALSE	O
;	O
else	O
{	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
small_caps_end	*(char)
)	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
small_caps_end	*(char)
)	O
;	O
}	O
break	O
;	O
}	O
}	O
void	O
attr_push	(int,*(char))->(void)
(	O
int	O
attr	int
,	O
char	O
*	O
param	*(char)
)	O
{	O
AttrStack	struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))))
*	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
=	O
stack_of_stacks_top	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
;	O
if	O
(	O
!	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
)	O
{	O
warning_handler	(*(char))->(void)
(	O
"No stack to push attribute onto"	*(char)
)	O
;	O
return	O
;	O
}	O
if	O
(	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
tos	int
>=	O
MAX_ATTRS	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Too many attributes!\n"	*(char)
)	O
;	O
return	O
;	O
}	O
starting_body	()->(void)
(	O
)	O
;	O
starting_text	()->(void)
(	O
)	O
;	O
++	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
tos	int
;	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
attr_stack	array(char)
[	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
tos	int
]	O
=	O
attr	int
;	O
if	O
(	O
param	*(char)
)	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
attr_stack_params	array(*(char))
[	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
tos	int
]	O
=	O
my_strdup	(*(char))->(*(char))
(	O
param	*(char)
)	O
;	O
else	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
attr_stack_params	array(*(char))
[	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
tos	int
]	O
=	O
NULL	O
;	O
attr_express_begin	(int,*(char))->(void)
(	O
attr	int
,	O
param	*(char)
)	O
;	O
}	O
char	O
*	O
attr_get_param	(int)->(*(char))
(	O
int	O
attr	int
)	O
{	O
int	O
i	int
;	O
AttrStack	struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))))
*	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
=	O
stack_of_stacks_top	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
;	O
if	O
(	O
!	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
)	O
{	O
warning_handler	(*(char))->(void)
(	O
"No stack to get attribute from"	*(char)
)	O
;	O
return	O
;	O
}	O
i	int
=	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
tos	int
;	O
while	O
(	O
i	int
>=	O
0	int
)	O
{	O
if	O
(	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
attr_stack	array(char)
[	O
i	int
]	O
==	O
attr	int
)	O
{	O
if	O
(	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
attr_stack_params	array(*(char))
[	O
i	int
]	O
!=	O
NULL	O
)	O
return	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
attr_stack_params	array(*(char))
[	O
i	int
]	O
;	O
else	O
return	O
NULL	O
;	O
}	O
i	int
--	O
;	O
}	O
return	O
NULL	O
;	O
}	O
void	O
attrstack_copy_all	(*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))),*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))))->(void)
(	O
AttrStack	struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))))
*	O
src	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
,	O
AttrStack	struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))))
*	O
dest	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
)	O
{	O
int	O
i	int
;	O
int	O
total	int
;	O
CHECK_PARAM_NOT_NULL	O
(	O
src	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
)	O
;	O
CHECK_PARAM_NOT_NULL	O
(	O
dest	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
)	O
;	O
total	int
=	O
src	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
tos	int
+	O
1	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
total	int
;	O
i	int
++	O
)	O
{	O
int	O
attr	int
=	O
src	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
attr_stack	array(char)
[	O
i	int
]	O
;	O
char	O
*	O
param	*(char)
=	O
src	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
attr_stack_params	array(*(char))
[	O
i	int
]	O
;	O
dest	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
attr_stack	array(char)
[	O
i	int
]	O
=	O
attr	int
;	O
if	O
(	O
param	*(char)
)	O
dest	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
attr_stack_params	array(*(char))
[	O
i	int
]	O
=	O
my_strdup	(*(char))->(*(char))
(	O
param	*(char)
)	O
;	O
else	O
dest	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
attr_stack_params	array(*(char))
[	O
i	int
]	O
=	O
NULL	O
;	O
}	O
dest	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
tos	int
=	O
src	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
tos	int
;	O
}	O
void	O
attrstack_unexpress_all	(*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))))->(void)
(	O
AttrStack	struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))))
*	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
)	O
{	O
int	O
i	int
;	O
CHECK_PARAM_NOT_NULL	O
(	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
)	O
;	O
i	int
=	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
tos	int
;	O
while	O
(	O
i	int
>=	O
0	int
)	O
{	O
int	O
attr	int
=	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
attr_stack	array(char)
[	O
i	int
]	O
;	O
char	O
*	O
param	*(char)
=	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
attr_stack_params	array(*(char))
[	O
i	int
]	O
;	O
attr_express_end	(int,*(char))->(void)
(	O
attr	int
,	O
param	*(char)
)	O
;	O
i	int
--	O
;	O
}	O
}	O
void	O
attrstack_push	()->(void)
(	O
)	O
{	O
AttrStack	struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))))
*	O
new_stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
;	O
AttrStack	struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))))
*	O
prev_stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
;	O
new_stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
=	O
(	O
AttrStack	struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))))
*	O
)	O
my_malloc	(long)->(*(char))
(	O
sizeof	O
(	O
AttrStack	struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))))
)	O
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
(	O
void	O
*	O
)	O
new_stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
,	O
0	int
,	O
sizeof	O
(	O
AttrStack	struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))))
)	O
)	O
;	O
prev_stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
=	O
stack_of_stacks_top	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
;	O
if	O
(	O
!	O
stack_of_stacks	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
)	O
{	O
stack_of_stacks	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
=	O
new_stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
;	O
}	O
else	O
{	O
stack_of_stacks_top	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
next	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
=	O
new_stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
;	O
}	O
stack_of_stacks_top	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
=	O
new_stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
;	O
new_stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
tos	int
=	O
-	O
1	int
;	O
if	O
(	O
prev_stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
)	O
{	O
attrstack_unexpress_all	(*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))))->(void)
(	O
prev_stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
)	O
;	O
attrstack_copy_all	(*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))),*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))))->(void)
(	O
prev_stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
,	O
new_stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
)	O
;	O
attrstack_express_all	()->(void)
(	O
)	O
;	O
}	O
}	O
int	O
attr_pop	(int)->(int)
(	O
int	O
attr	int
)	O
{	O
AttrStack	struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))))
*	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
=	O
stack_of_stacks_top	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
;	O
if	O
(	O
!	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
)	O
{	O
warning_handler	(*(char))->(void)
(	O
"no stack to pop attribute from"	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
tos	int
>=	O
0	int
&&	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
attr_stack	array(char)
[	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
tos	int
]	O
==	O
attr	int
)	O
{	O
char	O
*	O
param	*(char)
=	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
attr_stack_params	array(*(char))
[	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
tos	int
]	O
;	O
attr_express_end	(int,*(char))->(void)
(	O
attr	int
,	O
param	*(char)
)	O
;	O
if	O
(	O
param	*(char)
)	O
my_free	(*(char))->(void)
(	O
param	*(char)
)	O
;	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
tos	int
--	O
;	O
return	O
TRUE	O
;	O
}	O
else	O
return	O
FALSE	O
;	O
}	O
int	O
attr_read	()->(int)
(	O
)	O
{	O
AttrStack	struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))))
*	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
=	O
stack_of_stacks_top	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
;	O
if	O
(	O
!	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
)	O
{	O
warning_handler	(*(char))->(void)
(	O
"no stack to read attribute from"	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
tos	int
>=	O
0	int
)	O
{	O
int	O
attr	int
=	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
attr_stack	array(char)
[	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
tos	int
]	O
;	O
return	O
attr	int
;	O
}	O
else	O
return	O
ATTR_NONE	int
;	O
}	O
void	O
attr_drop_all	()->(void)
(	O
)	O
{	O
AttrStack	struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))))
*	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
=	O
stack_of_stacks_top	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
;	O
if	O
(	O
!	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
)	O
{	O
warning_handler	(*(char))->(void)
(	O
"no stack to drop all attributes from"	*(char)
)	O
;	O
return	O
;	O
}	O
while	O
(	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
tos	int
>=	O
0	int
)	O
{	O
char	O
*	O
param	*(char)
=	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
attr_stack_params	array(*(char))
[	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
tos	int
]	O
;	O
if	O
(	O
param	*(char)
)	O
my_free	(*(char))->(void)
(	O
param	*(char)
)	O
;	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
tos	int
--	O
;	O
}	O
}	O
void	O
attrstack_drop	()->(void)
(	O
)	O
{	O
AttrStack	struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))))
*	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
=	O
stack_of_stacks_top	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
;	O
AttrStack	struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))))
*	O
prev_stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
;	O
if	O
(	O
!	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
)	O
{	O
warning_handler	(*(char))->(void)
(	O
"no attr-stack to drop"	*(char)
)	O
;	O
return	O
;	O
}	O
attr_pop_all	()->(void)
(	O
)	O
;	O
prev_stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
=	O
stack_of_stacks	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
;	O
while	O
(	O
prev_stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
&&	O
prev_stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
next	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
&&	O
prev_stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
next	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
!=	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
)	O
prev_stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
=	O
prev_stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
next	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
;	O
if	O
(	O
prev_stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
)	O
{	O
stack_of_stacks_top	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
=	O
prev_stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
;	O
prev_stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
next	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
=	O
NULL	O
;	O
}	O
else	O
{	O
stack_of_stacks_top	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
=	O
NULL	O
;	O
stack_of_stacks	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
=	O
NULL	O
;	O
}	O
my_free	(*(char))->(void)
(	O
(	O
void	O
*	O
)	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
)	O
;	O
attrstack_express_all	()->(void)
(	O
)	O
;	O
}	O
void	O
attr_pop_all	()->(void)
(	O
)	O
{	O
AttrStack	struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))))
*	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
=	O
stack_of_stacks_top	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
;	O
if	O
(	O
!	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
)	O
{	O
warning_handler	(*(char))->(void)
(	O
"no stack to pop from"	*(char)
)	O
;	O
return	O
;	O
}	O
while	O
(	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
tos	int
>=	O
0	int
)	O
{	O
int	O
attr	int
=	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
attr_stack	array(char)
[	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
tos	int
]	O
;	O
char	O
*	O
param	*(char)
=	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
attr_stack_params	array(*(char))
[	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
tos	int
]	O
;	O
attr_express_end	(int,*(char))->(void)
(	O
attr	int
,	O
param	*(char)
)	O
;	O
if	O
(	O
param	*(char)
)	O
my_free	(*(char))->(void)
(	O
param	*(char)
)	O
;	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
tos	int
--	O
;	O
}	O
}	O
void	O
attrstack_express_all	()->(void)
(	O
)	O
{	O
AttrStack	struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))))
*	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
=	O
stack_of_stacks_top	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
;	O
int	O
i	int
;	O
if	O
(	O
!	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
)	O
{	O
warning_handler	(*(char))->(void)
(	O
"no stack to pop from"	*(char)
)	O
;	O
return	O
;	O
}	O
i	int
=	O
0	int
;	O
while	O
(	O
i	int
<=	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
tos	int
)	O
{	O
int	O
attr	int
=	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
attr_stack	array(char)
[	O
i	int
]	O
;	O
char	O
*	O
param	*(char)
=	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
attr_stack_params	array(*(char))
[	O
i	int
]	O
;	O
attr_express_begin	(int,*(char))->(void)
(	O
attr	int
,	O
param	*(char)
)	O
;	O
i	int
++	O
;	O
}	O
}	O
void	O
attr_pop_dump	()->(void)
(	O
)	O
{	O
AttrStack	struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*`)))))
*	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
=	O
stack_of_stacks_top	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
;	O
int	O
i	int
;	O
if	O
(	O
!	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
)	O
return	O
;	O
i	int
=	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
tos	int
;	O
while	O
(	O
i	int
>=	O
0	int
)	O
{	O
int	O
attr	int
=	O
stack	*(struct(array(char),array(*(char)),int,*(struct(array(char),array(*(char)),int,*(struct`)))))
->	O
attr_stack	array(char)
[	O
i	int
]	O
;	O
attr_pop	(int)->(int)
(	O
attr	int
)	O
;	O
i	int
--	O
;	O
}	O
}	O
