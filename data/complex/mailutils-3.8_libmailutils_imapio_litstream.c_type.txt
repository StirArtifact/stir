int	O
mu_imapio_send_literal_stream	(*(struct),*(struct),long)->(int)
(	O
struct	O
_mu_imapio	struct(*(struct),*(char),long,long,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,int,int,int,int)
*	O
io	*(struct)
,	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
mu_off_t	long
len	long
)	O
{	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
io	*(struct)
->	O
_imap_stream	*(struct)
,	O
"{%lu}\r\n"	*(char)
,	O
(	O
unsigned	O
long	O
)	O
len	long
)	O
;	O
if	O
(	O
!	O
io	*(struct)
->	O
_imap_server	int
)	O
{	O
int	O
rc	int
=	O
mu_imapio_getline	(*(struct))->(int)
(	O
io	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
if	O
(	O
!	O
(	O
io	*(struct)
->	O
_imap_reply_ready	int
&&	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_wordv	*(*(char))
[	O
0	int
]	O
[	O
0	int
]	O
==	O
'+'	O
)	O
)	O
return	O
MU_ERR_BADREPLY	O
;	O
}	O
return	O
mu_stream_copy	(*(struct),*(struct),long,*(long))->(int)
(	O
io	*(struct)
->	O
_imap_stream	*(struct)
,	O
stream	*(struct)
,	O
len	long
,	O
NULL	O
)	O
;	O
}	O
