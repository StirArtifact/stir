enum	O
field_type	enum(int,int,int)
field_type	enum(int,int,int)
;	O
char	O
*	O
program_name	*(char)
;	O
int	O
input_delimiter	int
;	O
unsigned	O
char	O
*	O
gs_data_input_buffer	*(char)
;	O
size_t	long
gi_data_input_buffer_size	long
;	O
size_t	long
gi_data_input_buffer_pos	long
;	O
unsigned	O
char	O
*	O
gs_data_output_buffer	*(char)
;	O
size_t	long
gi_data_output_buffer_size	long
;	O
size_t	long
gi_data_output_buffer_pos	long
;	O
char	O
*	O
*	O
filenames	*(*(char))
;	O
int	O
filecount	int
;	O
char	O
*	O
input_filename	*(char)
;	O
char	O
*	O
output_filename	*(char)
;	O
FILE	struct
*	O
input_file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
FILE	struct
*	O
output_file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
int	O
gi_data_is_reference	int
;	O
int	O
gi_reference_file_count	int
;	O
STRINGTYPE	O
*	O
gs_output_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
;	O
int	O
gi_no_output_field_delimiter	int
;	O
STRINGTYPE	O
*	O
gs_output_record_delimiter	*(struct(long,enum(int,int,int),*(char)))
;	O
STRINGTYPE	O
*	O
gs_data_constant_string	*(struct(long,enum(int,int,int),*(char)))
;	O
STRINGTYPE	O
*	O
gs_data_missing_string	*(struct(long,enum(int,int,int),*(char)))
;	O
STRINGTYPE	O
*	O
gs_data_empty_string	*(struct(long,enum(int,int,int),*(char)))
;	O
int	O
gi_data_no_input_field_delimiter	int
;	O
int	O
gi_data_input_field_delimiter_repeat	int
;	O
STRINGTYPE	O
*	O
gs_data_input_field_delimiter	*(struct(long,enum(int,int,int),*(char)))
;	O
STRINGTYPE	O
*	O
gs_data_input_record_delimiter	*(struct(long,enum(int,int,int),*(char)))
;	O
int	O
gi_data_input_record_length	int
;	O
field_id	struct(char,int,char,int)
*	O
gra_data_output_field_order	*(struct(char,int,char,int))
;	O
int	O
gi_data_output_field_order_count	int
;	O
int	O
gi_output_counter_size	int
;	O
int	O
gi_counter_ind	int
;	O
int	O
gi_flag_ind	int
;	O
int	O
gi_verbose_ind	int
;	O
int	O
gi_statistics_ind	int
;	O
int	O
gi_checkallref_ind	int
;	O
hm_t	enum(int,int,int,int,int)
gi_hashmovement_ind	enum(int,int,int,int,int)
;	O
int	O
gi_data_write_ind	int
;	O
int	O
gi_data_suppress_empty_ind	int
;	O
int	O
gi_data_optional_ind	int
;	O
int	O
gi_data_exclude_match_ind	int
;	O
char	O
*	O
gs_data_output_file_name	*(char)
;	O
field_range	struct(long,long,int,*(char))
*	O
gra_data_out_ranges	*(struct(long,long,int,*(char)))
;	O
int	O
gi_data_out_end_start	int
;	O
int	O
gi_data_out_range_count	int
;	O
field_range	struct(long,long,int,*(char))
*	O
gra_data_sum_ranges	*(struct(long,long,int,*(char)))
;	O
int	O
gi_data_sum_end_start	int
;	O
int	O
gi_data_sum_range_count	int
;	O
int	O
gi_allocated_reference_info	int
;	O
reference_file_struct	struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct(long,enum(int,int,int),*`)),*(struct(long,enum(int,int,int),*`)),*(*(struct`)),*(*(long)),*(void))),*(struct(long,int,*(struct(long,enum(int,int,int),*`)),*(struct(long,enum(int,int,int),*`)),*(*(struct`)),*(*(long)),*(void))))
*	O
gra_reference_file_info	*(struct(*(char),*(char),long,long,*(char),long,long,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,*(struct(long,long,int,*(char))),int,int,int,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),int,int,*(struct(long,enum(int,int,int),*(char))),int,int,*(char),int,*(struct(char,int,char,int)),int,long,int,*(long),long,long,long,int,int,int,int,int,int,int,*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,enum(int,int,int),*(char))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void))),*(struct(long,int,*(struct`),*(struct`),*(*`),*(*`),*(void)))))
;	O
STRINGTYPE	O
*	O
gs_ext_init_file	*(struct(long,enum(int,int,int),*(char)))
;	O
STRINGTYPE	O
*	O
gs_ext_begin_command	*(struct(long,enum(int,int,int),*(char)))
;	O
STRINGTYPE	O
*	O
gs_ext_end_command	*(struct(long,enum(int,int,int),*(char)))
;	O
STRINGTYPE	O
*	O
gs_data_ext_file_open_command	*(struct(long,enum(int,int,int),*(char)))
;	O
STRINGTYPE	O
*	O
gs_data_ext_record_read_command	*(struct(long,enum(int,int,int),*(char)))
;	O
STRINGTYPE	O
*	O
gs_data_ext_file_close_command	*(struct(long,enum(int,int,int),*(char)))
;	O
STRINGTYPE	O
*	O
gs_data_ext_start_writing_command	*(struct(long,enum(int,int,int),*(char)))
;	O
STRINGTYPE	O
*	O
gs_data_ext_record_write_command	*(struct(long,enum(int,int,int),*(char)))
;	O
STRINGTYPE	O
*	O
gs_data_ext_finished_writing_command	*(struct(long,enum(int,int,int),*(char)))
;	O
STRINGTYPE	O
*	O
gs_data_ext_filter_command	*(struct(long,enum(int,int,int),*(char)))
;	O
STRINGTYPE	O
*	O
gs_data_ext_match_command	*(struct(long,enum(int,int,int),*(char)))
;	O
int	O
gi_data_records_read	int
;	O
int	O
gi_data_records_dropped_filter	int
;	O
int	O
gi_data_records_matched	int
;	O
int	O
gi_output_records_written	int
;	O
int	O
gi_file_records_read	int
;	O
int	O
gi_file_records_dropped_filter	int
;	O
int	O
gi_file_records_matched	int
;	O
int	O
gi_file_output_records_written	int
;	O
char	O
df_errstr	array(char)
[	O
300	int
]	O
;	O
int	O
df_errno	int
;	O
