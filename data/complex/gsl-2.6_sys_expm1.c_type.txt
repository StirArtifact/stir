double	O
gsl_expm1	(double)->(double)
(	O
const	O
double	O
x	double
)	O
{	O
if	O
(	O
fabs	(double)->(double)
(	O
x	double
)	O
<	O
M_LN2	int
)	O
{	O
double	O
i	double
=	O
1.0	int
;	O
double	O
sum	double
=	O
x	double
;	O
double	O
term	double
=	O
x	double
/	O
1.0	int
;	O
do	O
{	O
i	double
++	O
;	O
term	double
*=	O
x	double
/	O
i	double
;	O
sum	double
+=	O
term	double
;	O
}	O
while	O
(	O
fabs	(double)->(double)
(	O
term	double
)	O
>	O
fabs	(double)->(double)
(	O
sum	double
)	O
*	O
GSL_DBL_EPSILON	int
)	O
;	O
return	O
sum	double
;	O
}	O
else	O
{	O
return	O
exp	(double)->(double)
(	O
x	double
)	O
-	O
1	int
;	O
}	O
}	O
