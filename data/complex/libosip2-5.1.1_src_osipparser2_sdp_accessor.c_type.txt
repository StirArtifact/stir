int	O
sdp_message_v_version_set	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),*(char))->(int)
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
char	O
*	O
v_version	*(char)
)	O
{	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
v_version	*(char)
=	O
v_version	*(char)
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
char	O
*	O
sdp_message_v_version_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
)	O
{	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
v_version	*(char)
;	O
}	O
int	O
sdp_message_o_origin_set	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),*(char),*(char),*(char),*(char),*(char),*(char))->(int)
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
char	O
*	O
username	*(char)
,	O
char	O
*	O
sess_id	*(char)
,	O
char	O
*	O
sess_version	*(char)
,	O
char	O
*	O
nettype	*(char)
,	O
char	O
*	O
addrtype	*(char)
,	O
char	O
*	O
addr	*(char)
)	O
{	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
o_username	*(char)
=	O
username	*(char)
;	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
o_sess_id	*(char)
=	O
sess_id	*(char)
;	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
o_sess_version	*(char)
=	O
sess_version	*(char)
;	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
o_nettype	*(char)
=	O
nettype	*(char)
;	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
o_addrtype	*(char)
=	O
addrtype	*(char)
;	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
o_addr	*(char)
=	O
addr	*(char)
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
char	O
*	O
sdp_message_o_username_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
)	O
{	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
o_username	*(char)
;	O
}	O
char	O
*	O
sdp_message_o_sess_id_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
)	O
{	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
o_sess_id	*(char)
;	O
}	O
char	O
*	O
sdp_message_o_sess_version_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
)	O
{	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
o_sess_version	*(char)
;	O
}	O
char	O
*	O
sdp_message_o_nettype_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
)	O
{	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
o_nettype	*(char)
;	O
}	O
char	O
*	O
sdp_message_o_addrtype_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
)	O
{	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
o_addrtype	*(char)
;	O
}	O
char	O
*	O
sdp_message_o_addr_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
)	O
{	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
o_addr	*(char)
;	O
}	O
int	O
sdp_message_s_name_set	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),*(char))->(int)
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
char	O
*	O
name	*(char)
)	O
{	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
-	O
1	int
;	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
s_name	*(char)
=	O
name	*(char)
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
char	O
*	O
sdp_message_s_name_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
)	O
{	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
s_name	*(char)
;	O
}	O
int	O
sdp_message_i_info_set	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,*(char))->(int)
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
,	O
char	O
*	O
info	*(char)
)	O
{	O
sdp_media_t	struct
*	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
;	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
pos_media	int
==	O
-	O
1	int
)	O
{	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
i_info	*(char)
=	O
info	*(char)
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
=	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_media	int
)	O
;	O
if	O
(	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
==	O
NULL	O
)	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
i_info	*(char)
=	O
info	*(char)
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
char	O
*	O
sdp_message_i_info_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int)->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
)	O
{	O
sdp_media_t	struct
*	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
;	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
if	O
(	O
pos_media	int
==	O
-	O
1	int
)	O
{	O
return	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
i_info	*(char)
;	O
}	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
=	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_media	int
)	O
;	O
if	O
(	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
i_info	*(char)
;	O
}	O
int	O
sdp_message_u_uri_set	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),*(char))->(int)
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
char	O
*	O
uri	*(char)
)	O
{	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
u_uri	*(char)
=	O
uri	*(char)
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
char	O
*	O
sdp_message_u_uri_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
)	O
{	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
u_uri	*(char)
;	O
}	O
int	O
sdp_message_e_email_add	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),*(char))->(int)
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
char	O
*	O
email	*(char)
)	O
{	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
osip_list_add	(*(struct(int,*(struct(*`,*`)))),*(void),int)->(int)
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
e_emails	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
email	*(char)
,	O
-	O
1	int
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
char	O
*	O
sdp_message_e_email_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int)->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos	int
)	O
{	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
if	O
(	O
osip_list_size	(*(struct(int,*(struct(*`,*`)))))->(int)
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
e_emails	struct(int,*(struct(*(struct(*`,*`)),*(void))))
)	O
>	O
pos	int
)	O
return	O
(	O
char	O
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
e_emails	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos	int
)	O
;	O
return	O
NULL	O
;	O
}	O
int	O
sdp_message_p_phone_add	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),*(char))->(int)
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
char	O
*	O
phone	*(char)
)	O
{	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
osip_list_add	(*(struct(int,*(struct(*`,*`)))),*(void),int)->(int)
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
p_phones	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
phone	*(char)
,	O
-	O
1	int
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
char	O
*	O
sdp_message_p_phone_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int)->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos	int
)	O
{	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
if	O
(	O
osip_list_size	(*(struct(int,*(struct(*`,*`)))))->(int)
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
p_phones	struct(int,*(struct(*(struct(*`,*`)),*(void))))
)	O
>	O
pos	int
)	O
return	O
(	O
char	O
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
p_phones	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos	int
)	O
;	O
return	O
NULL	O
;	O
}	O
int	O
sdp_message_c_connection_add	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,*(char),*(char),*(char),*(char),*(char))->(int)
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
,	O
char	O
*	O
nettype	*(char)
,	O
char	O
*	O
addrtype	*(char)
,	O
char	O
*	O
addr	*(char)
,	O
char	O
*	O
addr_multicast_ttl	*(char)
,	O
char	O
*	O
addr_multicast_int	*(char)
)	O
{	O
int	O
i	int
;	O
sdp_media_t	struct
*	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
;	O
sdp_connection_t	struct
*	O
conn	*(struct(*(char),*(char),*(char),*(char),*(char)))
;	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
(	O
pos_media	int
!=	O
-	O
1	int
)	O
&&	O
(	O
osip_list_size	(*(struct(int,*(struct(*`,*`)))))->(int)
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
)	O
<	O
pos_media	int
+	O
1	int
)	O
)	O
return	O
-	O
1	int
;	O
i	int
=	O
sdp_connection_init	(*(*(struct(*(char),*(char),*(char),*(char),*(char)))))->(int)
(	O
&	O
conn	*(struct(*(char),*(char),*(char),*(char),*(char)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
conn	*(struct(*(char),*(char),*(char),*(char),*(char)))
->	O
c_nettype	*(char)
=	O
nettype	*(char)
;	O
conn	*(struct(*(char),*(char),*(char),*(char),*(char)))
->	O
c_addrtype	*(char)
=	O
addrtype	*(char)
;	O
conn	*(struct(*(char),*(char),*(char),*(char),*(char)))
->	O
c_addr	*(char)
=	O
addr	*(char)
;	O
conn	*(struct(*(char),*(char),*(char),*(char),*(char)))
->	O
c_addr_multicast_ttl	*(char)
=	O
addr_multicast_ttl	*(char)
;	O
conn	*(struct(*(char),*(char),*(char),*(char),*(char)))
->	O
c_addr_multicast_int	*(char)
=	O
addr_multicast_int	*(char)
;	O
if	O
(	O
pos_media	int
==	O
-	O
1	int
)	O
{	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
c_connection	*(struct(*(char),*(char),*(char),*(char),*(char)))
=	O
conn	*(struct(*(char),*(char),*(char),*(char),*(char)))
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
=	O
(	O
sdp_media_t	struct
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_media	int
)	O
;	O
osip_list_add	(*(struct(int,*(struct(*`,*`)))),*(void),int)->(int)
(	O
&	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
c_connections	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
conn	*(struct(*(char),*(char),*(char),*(char),*(char)))
,	O
-	O
1	int
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
sdp_connection_t	struct
*	O
sdp_message_connection_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,int)->(*(struct(*(char),*(char),*(char),*(char),*(char))))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
,	O
int	O
pos	int
)	O
{	O
sdp_media_t	struct
*	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
;	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
if	O
(	O
pos_media	int
==	O
-	O
1	int
)	O
return	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
c_connection	*(struct(*(char),*(char),*(char),*(char),*(char)))
;	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
=	O
(	O
sdp_media_t	struct
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_media	int
)	O
;	O
if	O
(	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
(	O
sdp_connection_t	struct
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
c_connections	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos	int
)	O
;	O
}	O
char	O
*	O
sdp_message_c_nettype_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,int)->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
,	O
int	O
pos	int
)	O
{	O
sdp_connection_t	struct
*	O
conn	*(struct(*(char),*(char),*(char),*(char),*(char)))
=	O
sdp_message_connection_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,int)->(*(struct(*(char),*(char),*(char),*(char),*(char))))
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
pos_media	int
,	O
pos	int
)	O
;	O
if	O
(	O
conn	*(struct(*(char),*(char),*(char),*(char),*(char)))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
conn	*(struct(*(char),*(char),*(char),*(char),*(char)))
->	O
c_nettype	*(char)
;	O
}	O
char	O
*	O
sdp_message_c_addrtype_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,int)->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
,	O
int	O
pos	int
)	O
{	O
sdp_connection_t	struct
*	O
conn	*(struct(*(char),*(char),*(char),*(char),*(char)))
=	O
sdp_message_connection_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,int)->(*(struct(*(char),*(char),*(char),*(char),*(char))))
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
pos_media	int
,	O
pos	int
)	O
;	O
if	O
(	O
conn	*(struct(*(char),*(char),*(char),*(char),*(char)))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
conn	*(struct(*(char),*(char),*(char),*(char),*(char)))
->	O
c_addrtype	*(char)
;	O
}	O
char	O
*	O
sdp_message_c_addr_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,int)->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
,	O
int	O
pos	int
)	O
{	O
sdp_connection_t	struct
*	O
conn	*(struct(*(char),*(char),*(char),*(char),*(char)))
=	O
sdp_message_connection_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,int)->(*(struct(*(char),*(char),*(char),*(char),*(char))))
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
pos_media	int
,	O
pos	int
)	O
;	O
if	O
(	O
conn	*(struct(*(char),*(char),*(char),*(char),*(char)))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
conn	*(struct(*(char),*(char),*(char),*(char),*(char)))
->	O
c_addr	*(char)
;	O
}	O
char	O
*	O
sdp_message_c_addr_multicast_ttl_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,int)->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
,	O
int	O
pos	int
)	O
{	O
sdp_connection_t	struct
*	O
conn	*(struct(*(char),*(char),*(char),*(char),*(char)))
=	O
sdp_message_connection_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,int)->(*(struct(*(char),*(char),*(char),*(char),*(char))))
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
pos_media	int
,	O
pos	int
)	O
;	O
if	O
(	O
conn	*(struct(*(char),*(char),*(char),*(char),*(char)))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
conn	*(struct(*(char),*(char),*(char),*(char),*(char)))
->	O
c_addr_multicast_ttl	*(char)
;	O
}	O
char	O
*	O
sdp_message_c_addr_multicast_int_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,int)->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
,	O
int	O
pos	int
)	O
{	O
sdp_connection_t	struct
*	O
conn	*(struct(*(char),*(char),*(char),*(char),*(char)))
=	O
sdp_message_connection_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,int)->(*(struct(*(char),*(char),*(char),*(char),*(char))))
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
pos_media	int
,	O
pos	int
)	O
;	O
if	O
(	O
conn	*(struct(*(char),*(char),*(char),*(char),*(char)))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
conn	*(struct(*(char),*(char),*(char),*(char),*(char)))
->	O
c_addr_multicast_int	*(char)
;	O
}	O
int	O
sdp_message_b_bandwidth_add	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,*(char),*(char))->(int)
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
,	O
char	O
*	O
bwtype	*(char)
,	O
char	O
*	O
bandwidth	*(char)
)	O
{	O
int	O
i	int
;	O
sdp_media_t	struct
*	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
;	O
sdp_bandwidth_t	struct
*	O
band	*(struct(*(char),*(char)))
;	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
(	O
pos_media	int
!=	O
-	O
1	int
)	O
&&	O
(	O
osip_list_size	(*(struct(int,*(struct(*`,*`)))))->(int)
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
)	O
<	O
pos_media	int
+	O
1	int
)	O
)	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
i	int
=	O
sdp_bandwidth_init	(*(*(struct(*(char),*(char)))))->(int)
(	O
&	O
band	*(struct(*(char),*(char)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
band	*(struct(*(char),*(char)))
->	O
b_bwtype	*(char)
=	O
bwtype	*(char)
;	O
band	*(struct(*(char),*(char)))
->	O
b_bandwidth	*(char)
=	O
bandwidth	*(char)
;	O
if	O
(	O
pos_media	int
==	O
-	O
1	int
)	O
{	O
osip_list_add	(*(struct(int,*(struct(*`,*`)))),*(void),int)->(int)
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
b_bandwidths	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
band	*(struct(*(char),*(char)))
,	O
-	O
1	int
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
=	O
(	O
sdp_media_t	struct
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_media	int
)	O
;	O
osip_list_add	(*(struct(int,*(struct(*`,*`)))),*(void),int)->(int)
(	O
&	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
b_bandwidths	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
band	*(struct(*(char),*(char)))
,	O
-	O
1	int
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
sdp_bandwidth_t	struct
*	O
sdp_message_bandwidth_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,int)->(*(struct(*(char),*(char))))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
,	O
int	O
pos	int
)	O
{	O
sdp_media_t	struct
*	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
;	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
if	O
(	O
pos_media	int
==	O
-	O
1	int
)	O
return	O
(	O
sdp_bandwidth_t	struct
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
b_bandwidths	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos	int
)	O
;	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
=	O
(	O
sdp_media_t	struct
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_media	int
)	O
;	O
if	O
(	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
(	O
sdp_bandwidth_t	struct
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
b_bandwidths	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos	int
)	O
;	O
}	O
char	O
*	O
sdp_message_b_bwtype_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,int)->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
,	O
int	O
pos	int
)	O
{	O
sdp_bandwidth_t	struct
*	O
band	*(struct(*(char),*(char)))
=	O
sdp_message_bandwidth_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,int)->(*(struct(*(char),*(char))))
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
pos_media	int
,	O
pos	int
)	O
;	O
if	O
(	O
band	*(struct(*(char),*(char)))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
band	*(struct(*(char),*(char)))
->	O
b_bwtype	*(char)
;	O
}	O
char	O
*	O
sdp_message_b_bandwidth_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,int)->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
,	O
int	O
pos	int
)	O
{	O
sdp_bandwidth_t	struct
*	O
band	*(struct(*(char),*(char)))
=	O
sdp_message_bandwidth_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,int)->(*(struct(*(char),*(char))))
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
pos_media	int
,	O
pos	int
)	O
;	O
if	O
(	O
band	*(struct(*(char),*(char)))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
band	*(struct(*(char),*(char)))
->	O
b_bandwidth	*(char)
;	O
}	O
int	O
sdp_message_t_time_descr_add	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),*(char),*(char))->(int)
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
char	O
*	O
start	*(char)
,	O
char	O
*	O
stop	*(char)
)	O
{	O
int	O
i	int
;	O
sdp_time_descr_t	struct
*	O
td	*(struct(*(char),*(char),struct(int,*(struct(*`,*`)))))
;	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
i	int
=	O
sdp_time_descr_init	(*(*(struct(*(char),*(char),struct(int,*`)))))->(int)
(	O
&	O
td	*(struct(*(char),*(char),struct(int,*(struct(*`,*`)))))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
td	*(struct(*(char),*(char),struct(int,*(struct(*`,*`)))))
->	O
t_start_time	*(char)
=	O
start	*(char)
;	O
td	*(struct(*(char),*(char),struct(int,*(struct(*`,*`)))))
->	O
t_stop_time	*(char)
=	O
stop	*(char)
;	O
osip_list_add	(*(struct(int,*(struct(*`,*`)))),*(void),int)->(int)
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
t_descrs	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
td	*(struct(*(char),*(char),struct(int,*(struct(*`,*`)))))
,	O
-	O
1	int
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
char	O
*	O
sdp_message_t_start_time_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int)->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_td	int
)	O
{	O
sdp_time_descr_t	struct
*	O
td	*(struct(*(char),*(char),struct(int,*(struct(*`,*`)))))
;	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
td	*(struct(*(char),*(char),struct(int,*(struct(*`,*`)))))
=	O
(	O
sdp_time_descr_t	struct
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
t_descrs	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_td	int
)	O
;	O
if	O
(	O
td	*(struct(*(char),*(char),struct(int,*(struct(*`,*`)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
td	*(struct(*(char),*(char),struct(int,*(struct(*`,*`)))))
->	O
t_start_time	*(char)
;	O
}	O
char	O
*	O
sdp_message_t_stop_time_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int)->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_td	int
)	O
{	O
sdp_time_descr_t	struct
*	O
td	*(struct(*(char),*(char),struct(int,*(struct(*`,*`)))))
;	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
td	*(struct(*(char),*(char),struct(int,*(struct(*`,*`)))))
=	O
(	O
sdp_time_descr_t	struct
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
t_descrs	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_td	int
)	O
;	O
if	O
(	O
td	*(struct(*(char),*(char),struct(int,*(struct(*`,*`)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
td	*(struct(*(char),*(char),struct(int,*(struct(*`,*`)))))
->	O
t_stop_time	*(char)
;	O
}	O
int	O
sdp_message_r_repeat_add	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,*(char))->(int)
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_time_descr	int
,	O
char	O
*	O
field	*(char)
)	O
{	O
sdp_time_descr_t	struct
*	O
td	*(struct(*(char),*(char),struct(int,*(struct(*`,*`)))))
;	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
td	*(struct(*(char),*(char),struct(int,*(struct(*`,*`)))))
=	O
(	O
sdp_time_descr_t	struct
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
t_descrs	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_time_descr	int
)	O
;	O
if	O
(	O
td	*(struct(*(char),*(char),struct(int,*(struct(*`,*`)))))
==	O
NULL	O
)	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
osip_list_add	(*(struct(int,*(struct(*`,*`)))),*(void),int)->(int)
(	O
&	O
td	*(struct(*(char),*(char),struct(int,*(struct(*`,*`)))))
->	O
r_repeats	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
field	*(char)
,	O
-	O
1	int
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
char	O
*	O
sdp_message_r_repeat_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,int)->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_time_descr	int
,	O
int	O
pos_repeat	int
)	O
{	O
sdp_time_descr_t	struct
*	O
td	*(struct(*(char),*(char),struct(int,*(struct(*`,*`)))))
;	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
td	*(struct(*(char),*(char),struct(int,*(struct(*`,*`)))))
=	O
(	O
sdp_time_descr_t	struct
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
t_descrs	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_time_descr	int
)	O
;	O
if	O
(	O
td	*(struct(*(char),*(char),struct(int,*(struct(*`,*`)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
(	O
char	O
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
td	*(struct(*(char),*(char),struct(int,*(struct(*`,*`)))))
->	O
r_repeats	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_repeat	int
)	O
;	O
}	O
int	O
sdp_message_z_adjustments_set	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),*(char))->(int)
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
char	O
*	O
field	*(char)
)	O
{	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
z_adjustments	*(char)
=	O
field	*(char)
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
char	O
*	O
sdp_message_z_adjustments_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
)	O
{	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
z_adjustments	*(char)
;	O
}	O
int	O
sdp_message_k_key_set	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,*(char),*(char))->(int)
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
,	O
char	O
*	O
keytype	*(char)
,	O
char	O
*	O
keydata	*(char)
)	O
{	O
sdp_key_t	struct
*	O
key	*(struct(*(char),*(char)))
;	O
sdp_media_t	struct
*	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
;	O
int	O
i	int
;	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
(	O
pos_media	int
!=	O
-	O
1	int
)	O
&&	O
(	O
osip_list_size	(*(struct(int,*(struct(*`,*`)))))->(int)
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
)	O
<	O
pos_media	int
+	O
1	int
)	O
)	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
i	int
=	O
sdp_key_init	(*(*(struct(*(char),*(char)))))->(int)
(	O
&	O
key	*(struct(*(char),*(char)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
key	*(struct(*(char),*(char)))
->	O
k_keytype	*(char)
=	O
keytype	*(char)
;	O
key	*(struct(*(char),*(char)))
->	O
k_keydata	*(char)
=	O
keydata	*(char)
;	O
if	O
(	O
pos_media	int
==	O
-	O
1	int
)	O
{	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
k_key	*(struct(*(char),*(char)))
=	O
key	*(struct(*(char),*(char)))
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
=	O
(	O
sdp_media_t	struct
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_media	int
)	O
;	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
k_key	*(struct(*(char),*(char)))
=	O
key	*(struct(*(char),*(char)))
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
char	O
*	O
sdp_message_k_keytype_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int)->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
)	O
{	O
sdp_media_t	struct
*	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
;	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
if	O
(	O
pos_media	int
==	O
-	O
1	int
)	O
{	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
k_key	*(struct(*(char),*(char)))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
k_key	*(struct(*(char),*(char)))
->	O
k_keytype	*(char)
;	O
}	O
if	O
(	O
(	O
pos_media	int
!=	O
-	O
1	int
)	O
&&	O
(	O
osip_list_size	(*(struct(int,*(struct(*`,*`)))))->(int)
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
)	O
<	O
pos_media	int
+	O
1	int
)	O
)	O
return	O
NULL	O
;	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
=	O
(	O
sdp_media_t	struct
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_media	int
)	O
;	O
if	O
(	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
k_key	*(struct(*(char),*(char)))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
k_key	*(struct(*(char),*(char)))
->	O
k_keytype	*(char)
;	O
}	O
char	O
*	O
sdp_message_k_keydata_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int)->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
)	O
{	O
sdp_media_t	struct
*	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
;	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
if	O
(	O
pos_media	int
==	O
-	O
1	int
)	O
{	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
k_key	*(struct(*(char),*(char)))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
k_key	*(struct(*(char),*(char)))
->	O
k_keydata	*(char)
;	O
}	O
if	O
(	O
(	O
pos_media	int
!=	O
-	O
1	int
)	O
&&	O
(	O
osip_list_size	(*(struct(int,*(struct(*`,*`)))))->(int)
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
)	O
<	O
pos_media	int
+	O
1	int
)	O
)	O
return	O
NULL	O
;	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
=	O
(	O
sdp_media_t	struct
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_media	int
)	O
;	O
if	O
(	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
k_key	*(struct(*(char),*(char)))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
k_key	*(struct(*(char),*(char)))
->	O
k_keydata	*(char)
;	O
}	O
int	O
sdp_message_a_attribute_add	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,*(char),*(char))->(int)
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
,	O
char	O
*	O
att_field	*(char)
,	O
char	O
*	O
att_value	*(char)
)	O
{	O
int	O
i	int
;	O
sdp_media_t	struct
*	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
;	O
sdp_attribute_t	struct
*	O
attr	*(struct(*(char),*(char)))
;	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
(	O
pos_media	int
!=	O
-	O
1	int
)	O
&&	O
(	O
osip_list_size	(*(struct(int,*(struct(*`,*`)))))->(int)
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
)	O
<	O
pos_media	int
+	O
1	int
)	O
)	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
i	int
=	O
sdp_attribute_init	(*(*(struct(*(char),*(char)))))->(int)
(	O
&	O
attr	*(struct(*(char),*(char)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
attr	*(struct(*(char),*(char)))
->	O
a_att_field	*(char)
=	O
att_field	*(char)
;	O
attr	*(struct(*(char),*(char)))
->	O
a_att_value	*(char)
=	O
att_value	*(char)
;	O
if	O
(	O
pos_media	int
==	O
-	O
1	int
)	O
{	O
osip_list_add	(*(struct(int,*(struct(*`,*`)))),*(void),int)->(int)
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
a_attributes	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
attr	*(struct(*(char),*(char)))
,	O
-	O
1	int
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
=	O
(	O
sdp_media_t	struct
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_media	int
)	O
;	O
osip_list_add	(*(struct(int,*(struct(*`,*`)))),*(void),int)->(int)
(	O
&	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
a_attributes	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
attr	*(struct(*(char),*(char)))
,	O
-	O
1	int
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
sdp_message_a_attribute_del	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,*(char))->(int)
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
,	O
char	O
*	O
att_field	*(char)
)	O
{	O
int	O
i	int
;	O
sdp_media_t	struct
*	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
;	O
sdp_attribute_t	struct
*	O
attr	*(struct(*(char),*(char)))
;	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
(	O
pos_media	int
!=	O
-	O
1	int
)	O
&&	O
(	O
osip_list_size	(*(struct(int,*(struct(*`,*`)))))->(int)
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
)	O
<	O
pos_media	int
+	O
1	int
)	O
)	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
if	O
(	O
pos_media	int
==	O
-	O
1	int
)	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
osip_list_size	(*(struct(int,*(struct(*`,*`)))))->(int)
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
a_attributes	struct(int,*(struct(*(struct(*`,*`)),*(void))))
)	O
;	O
)	O
{	O
attr	*(struct(*(char),*(char)))
=	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
a_attributes	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
i	int
)	O
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
attr	*(struct(*(char),*(char)))
->	O
a_att_field	*(char)
,	O
att_field	*(char)
)	O
==	O
0	int
)	O
{	O
osip_list_remove	(*(struct(int,*(struct(*`,*`)))),int)->(int)
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
a_attributes	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
i	int
)	O
;	O
sdp_attribute_free	(*(struct(*(char),*(char))))->(void)
(	O
attr	*(struct(*(char),*(char)))
)	O
;	O
}	O
else	O
i	int
++	O
;	O
}	O
return	O
OSIP_SUCCESS	int
;	O
}	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
=	O
(	O
sdp_media_t	struct
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_media	int
)	O
;	O
if	O
(	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
==	O
NULL	O
)	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
osip_list_size	(*(struct(int,*(struct(*`,*`)))))->(int)
(	O
&	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
a_attributes	struct(int,*(struct(*(struct(*`,*`)),*(void))))
)	O
;	O
)	O
{	O
attr	*(struct(*(char),*(char)))
=	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
a_attributes	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
i	int
)	O
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
attr	*(struct(*(char),*(char)))
->	O
a_att_field	*(char)
,	O
att_field	*(char)
)	O
==	O
0	int
)	O
{	O
osip_list_remove	(*(struct(int,*(struct(*`,*`)))),int)->(int)
(	O
&	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
a_attributes	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
i	int
)	O
;	O
sdp_attribute_free	(*(struct(*(char),*(char))))->(void)
(	O
attr	*(struct(*(char),*(char)))
)	O
;	O
}	O
else	O
i	int
++	O
;	O
}	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
sdp_message_a_attribute_del_at_index	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,*(char),int)->(int)
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
,	O
char	O
*	O
att_field	*(char)
,	O
int	O
pos_attr	int
)	O
{	O
sdp_media_t	struct
*	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
;	O
sdp_attribute_t	struct
*	O
attr	*(struct(*(char),*(char)))
;	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
(	O
pos_media	int
!=	O
-	O
1	int
)	O
&&	O
(	O
osip_list_size	(*(struct(int,*(struct(*`,*`)))))->(int)
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
)	O
<	O
pos_media	int
+	O
1	int
)	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
pos_attr	int
==	O
-	O
1	int
)	O
return	O
sdp_message_a_attribute_del	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,*(char))->(int)
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
pos_media	int
,	O
att_field	*(char)
)	O
;	O
if	O
(	O
pos_media	int
==	O
-	O
1	int
)	O
{	O
if	O
(	O
(	O
attr	*(struct(*(char),*(char)))
=	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
a_attributes	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_attr	int
)	O
)	O
!=	O
NULL	O
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
attr	*(struct(*(char),*(char)))
->	O
a_att_field	*(char)
,	O
att_field	*(char)
)	O
==	O
0	int
)	O
{	O
osip_list_remove	(*(struct(int,*(struct(*`,*`)))),int)->(int)
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
a_attributes	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_attr	int
)	O
;	O
sdp_attribute_free	(*(struct(*(char),*(char))))->(void)
(	O
attr	*(struct(*(char),*(char)))
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
}	O
return	O
OSIP_BADPARAMETER	O
;	O
}	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
=	O
(	O
sdp_media_t	struct
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_media	int
)	O
;	O
if	O
(	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
==	O
NULL	O
)	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
if	O
(	O
(	O
attr	*(struct(*(char),*(char)))
=	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
a_attributes	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_attr	int
)	O
)	O
!=	O
NULL	O
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
attr	*(struct(*(char),*(char)))
->	O
a_att_field	*(char)
,	O
att_field	*(char)
)	O
==	O
0	int
)	O
{	O
osip_list_remove	(*(struct(int,*(struct(*`,*`)))),int)->(int)
(	O
&	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
a_attributes	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_attr	int
)	O
;	O
sdp_attribute_free	(*(struct(*(char),*(char))))->(void)
(	O
attr	*(struct(*(char),*(char)))
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
}	O
return	O
OSIP_BADPARAMETER	O
;	O
}	O
sdp_attribute_t	struct
*	O
sdp_message_attribute_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,int)->(*(struct(*(char),*(char))))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
,	O
int	O
pos	int
)	O
{	O
sdp_media_t	struct
*	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
;	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
if	O
(	O
pos_media	int
==	O
-	O
1	int
)	O
return	O
(	O
sdp_attribute_t	struct
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
a_attributes	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos	int
)	O
;	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
=	O
(	O
sdp_media_t	struct
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_media	int
)	O
;	O
if	O
(	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
(	O
sdp_attribute_t	struct
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
a_attributes	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos	int
)	O
;	O
}	O
char	O
*	O
sdp_message_a_att_field_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,int)->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
,	O
int	O
pos	int
)	O
{	O
sdp_attribute_t	struct
*	O
attr	*(struct(*(char),*(char)))
=	O
sdp_message_attribute_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,int)->(*(struct(*(char),*(char))))
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
pos_media	int
,	O
pos	int
)	O
;	O
if	O
(	O
attr	*(struct(*(char),*(char)))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
attr	*(struct(*(char),*(char)))
->	O
a_att_field	*(char)
;	O
}	O
char	O
*	O
sdp_message_a_att_value_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,int)->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
,	O
int	O
pos	int
)	O
{	O
sdp_attribute_t	struct
*	O
attr	*(struct(*(char),*(char)))
=	O
sdp_message_attribute_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,int)->(*(struct(*(char),*(char))))
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
pos_media	int
,	O
pos	int
)	O
;	O
if	O
(	O
attr	*(struct(*(char),*(char)))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
attr	*(struct(*(char),*(char)))
->	O
a_att_value	*(char)
;	O
}	O
int	O
sdp_message_endof_media	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int)->(int)
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
i	int
)	O
{	O
if	O
(	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
i	int
==	O
-	O
1	int
)	O
return	O
OSIP_SUCCESS	int
;	O
if	O
(	O
!	O
osip_list_eol	(*(struct(int,*(struct(*`,*`)))),int)->(int)
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
i	int
)	O
)	O
return	O
OSIP_SUCCESS	int
;	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
}	O
int	O
sdp_message_m_media_add	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),*(char),*(char),*(char),*(char))->(int)
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
char	O
*	O
media	*(char)
,	O
char	O
*	O
port	*(char)
,	O
char	O
*	O
number_of_port	*(char)
,	O
char	O
*	O
proto	*(char)
)	O
{	O
int	O
i	int
;	O
sdp_media_t	struct
*	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
;	O
i	int
=	O
sdp_media_init	(*(*(struct(*(char),*(char),*(char),*(char),struct(int,*`),*(char),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`)))))->(int)
(	O
&	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
m_media	*(char)
=	O
media	*(char)
;	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
m_port	*(char)
=	O
port	*(char)
;	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
m_number_of_port	*(char)
=	O
number_of_port	*(char)
;	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
m_proto	*(char)
=	O
proto	*(char)
;	O
osip_list_add	(*(struct(int,*(struct(*`,*`)))),*(void),int)->(int)
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
,	O
-	O
1	int
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
char	O
*	O
sdp_message_m_media_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int)->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
)	O
{	O
sdp_media_t	struct
*	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
=	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_media	int
)	O
;	O
if	O
(	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
m_media	*(char)
;	O
}	O
char	O
*	O
sdp_message_m_port_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int)->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
)	O
{	O
sdp_media_t	struct
*	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
=	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_media	int
)	O
;	O
if	O
(	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
m_port	*(char)
;	O
}	O
char	O
*	O
sdp_message_m_number_of_port_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int)->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
)	O
{	O
sdp_media_t	struct
*	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
=	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_media	int
)	O
;	O
if	O
(	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
m_number_of_port	*(char)
;	O
}	O
int	O
sdp_message_m_port_set	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,*(char))->(int)
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
,	O
char	O
*	O
port	*(char)
)	O
{	O
sdp_media_t	struct
*	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
=	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_media	int
)	O
;	O
if	O
(	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
m_port	*(char)
)	O
osip_free	O
(	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
m_port	*(char)
)	O
;	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
m_port	*(char)
=	O
port	*(char)
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
char	O
*	O
sdp_message_m_proto_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int)->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
)	O
{	O
sdp_media_t	struct
*	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
=	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_media	int
)	O
;	O
if	O
(	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
m_proto	*(char)
;	O
}	O
int	O
sdp_message_m_payload_add	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,*(char))->(int)
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
,	O
char	O
*	O
payload	*(char)
)	O
{	O
sdp_media_t	struct
*	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
=	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_media	int
)	O
;	O
if	O
(	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
osip_list_add	(*(struct(int,*(struct(*`,*`)))),*(void),int)->(int)
(	O
&	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
m_payloads	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
payload	*(char)
,	O
-	O
1	int
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
char	O
*	O
sdp_message_m_payload_get	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,int)->(*(char))
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
,	O
int	O
pos	int
)	O
{	O
sdp_media_t	struct
*	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
=	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_media	int
)	O
;	O
if	O
(	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
return	O
(	O
char	O
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
m_payloads	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos	int
)	O
;	O
}	O
int	O
sdp_message_m_payload_del	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))),int,int)->(int)
(	O
sdp_message_t	struct
*	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
,	O
int	O
pos_media	int
,	O
int	O
pos	int
)	O
{	O
sdp_media_t	struct
*	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
=	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sdp	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,*`,*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),*(char),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)))))
->	O
m_medias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos_media	int
)	O
;	O
char	O
*	O
payload	*(char)
;	O
if	O
(	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
(	O
payload	*(char)
=	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
m_payloads	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos	int
)	O
)	O
==	O
NULL	O
)	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
osip_list_remove	(*(struct(int,*(struct(*`,*`)))),int)->(int)
(	O
&	O
med	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char)))))
->	O
m_payloads	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos	int
)	O
;	O
osip_free	O
(	O
payload	*(char)
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
