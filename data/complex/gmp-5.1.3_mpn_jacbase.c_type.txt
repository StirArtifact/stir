int	O
mpn_jacobi_base	O
(	O
mp_limb_t	long
a	int
,	O
mp_limb_t	long
b	int
,	O
int	O
bit	int
)	O
{	O
int	O
c	int
;	O
ASSERT	O
(	O
b	int
&	O
1	int
)	O
;	O
ASSERT	O
(	O
b	int
>	O
1	int
)	O
;	O
if	O
(	O
a	int
==	O
0	int
)	O
return	O
0	int
;	O
bit	int
>>=	O
1	int
;	O
b	int
>>=	O
1	int
;	O
count_trailing_zeros	O
(	O
c	int
,	O
a	int
)	O
;	O
bit	int
^=	O
c	int
&	O
(	O
b	int
^	O
(	O
b	int
>>	O
1	int
)	O
)	O
;	O
a	int
>>=	O
c	int
;	O
a	int
>>=	O
1	int
;	O
do	O
{	O
mp_limb_t	long
t	long
=	O
a	int
-	O
b	int
;	O
mp_limb_t	long
bgta	long
=	O
LIMB_HIGHBIT_TO_MASK	O
(	O
t	long
)	O
;	O
if	O
(	O
t	long
==	O
0	int
)	O
return	O
0	int
;	O
bit	int
^=	O
(	O
bgta	long
&	O
a	int
&	O
b	int
)	O
;	O
b	int
+=	O
(	O
bgta	long
&	O
t	long
)	O
;	O
a	int
=	O
(	O
t	long
^	O
bgta	long
)	O
-	O
bgta	long
;	O
count_trailing_zeros	O
(	O
c	int
,	O
t	long
)	O
;	O
c	int
++	O
;	O
bit	int
^=	O
c	int
&	O
(	O
b	int
^	O
(	O
b	int
>>	O
1	int
)	O
)	O
;	O
a	int
>>=	O
c	int
;	O
}	O
while	O
(	O
b	int
>	O
0	int
)	O
;	O
return	O
1	int
-	O
2	int
*	O
(	O
bit	int
&	O
1	int
)	O
;	O
}	O
