static	O
struct	O
{	O
char	O
*	O
name	*(char)
;	O
int	O
flag	int
;	O
}	O
_imap4_attrlist	array(struct(*(char),int))
[	O
]	O
=	O
{	O
{	O
"\\Answered"	*(char)
,	O
MU_ATTRIBUTE_ANSWERED	int
}	O
,	O
{	O
"\\Flagged"	*(char)
,	O
MU_ATTRIBUTE_FLAGGED	int
}	O
,	O
{	O
"\\Deleted"	*(char)
,	O
MU_ATTRIBUTE_DELETED	int
}	O
,	O
{	O
"\\Draft"	*(char)
,	O
MU_ATTRIBUTE_DRAFT	int
}	O
,	O
{	O
"\\Seen"	*(char)
,	O
MU_ATTRIBUTE_SEEN	int
|	O
MU_ATTRIBUTE_READ	int
}	O
,	O
}	O
;	O
static	O
int	O
_imap4_nattr	int
=	O
MU_ARRAY_SIZE	O
(	O
_imap4_attrlist	array(struct(*(char),int))
)	O
;	O
int	O
mu_imap_flag_to_attribute	(*(char),*(int))->(int)
(	O
const	O
char	O
*	O
item	*(char)
,	O
int	O
*	O
attr	*(struct)
)	O
{	O
int	O
i	int
;	O
if	O
(	O
mu_c_strcasecmp	(*(char),*(char))->(int)
(	O
item	*(char)
,	O
"\\Recent"	*(char)
)	O
==	O
0	int
)	O
{	O
*	O
attr	*(struct)
|=	O
MU_ATTRIBUTE_RECENT	int
;	O
return	O
0	int
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
_imap4_nattr	int
;	O
i	int
++	O
)	O
if	O
(	O
mu_c_strcasecmp	(*(char),*(char))->(int)
(	O
item	*(char)
,	O
_imap4_attrlist	array(struct(*(char),int))
[	O
i	int
]	O
.	O
name	*(char)
)	O
==	O
0	int
)	O
{	O
*	O
attr	*(struct)
|=	O
_imap4_attrlist	array(struct(*(char),int))
[	O
i	int
]	O
.	O
flag	int
;	O
return	O
0	int
;	O
}	O
return	O
MU_ERR_NOENT	O
;	O
}	O
int	O
mu_imap_format_flags	(*(struct),int,int)->(int)
(	O
mu_stream_t	*(struct)
str	*(struct)
,	O
int	O
flags	int
,	O
int	O
include_recent	int
)	O
{	O
int	O
i	int
;	O
int	O
delim	int
=	O
0	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
_imap4_nattr	int
;	O
i	int
++	O
)	O
if	O
(	O
(	O
flags	int
&	O
_imap4_attrlist	array(struct(*(char),int))
[	O
i	int
]	O
.	O
flag	int
)	O
==	O
_imap4_attrlist	array(struct(*(char),int))
[	O
i	int
]	O
.	O
flag	int
)	O
{	O
if	O
(	O
delim	int
)	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
str	*(struct)
,	O
" "	*(char)
)	O
;	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
str	*(struct)
,	O
"%s"	*(char)
,	O
_imap4_attrlist	array(struct(*(char),int))
[	O
i	int
]	O
.	O
name	*(char)
)	O
;	O
delim	int
=	O
1	int
;	O
}	O
if	O
(	O
include_recent	int
&&	O
MU_ATTRIBUTE_IS_UNSEEN	O
(	O
flags	int
)	O
)	O
{	O
if	O
(	O
delim	int
)	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
str	*(struct)
,	O
" "	*(char)
)	O
;	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
str	*(struct)
,	O
"\\Recent"	*(char)
)	O
;	O
}	O
return	O
0	int
;	O
}	O
