typedef	O
enum	O
{	O
BASH	int
,	O
TCSH	int
}	O
shell_t	enum(int,int)
;	O
shell_t	enum(int,int)
shell	enum(int,int)
=	O
BASH	int
;	O
int	O
quiet_errors	int
=	O
0	int
;	O
int	O
quiet_output	int
=	O
0	int
;	O
int	O
quote	int
=	O
1	int
;	O
int	O
alternative	int
=	O
0	int
;	O
void	O
*	O
our_malloc	(long)->(*(void))
(	O
size_t	long
size	long
)	O
;	O
void	O
*	O
our_realloc	(*(void),long)->(*(void))
(	O
void	O
*	O
ptr	*(void)
,	O
size_t	long
size	long
)	O
;	O
const	O
char	O
*	O
normalize	(*(char))->(*(char))
(	O
const	O
char	O
*	O
arg	*(char)
)	O
;	O
int	O
generate_output	(array(*(char)),int,*(char),*(struct(*(char),int,*(int),int)))->(int)
(	O
char	O
*	O
argv	array(*(char))
[	O
]	O
,	O
int	O
argc	int
,	O
const	O
char	O
*	O
optstr	*(char)
,	O
const	O
struct	O
option	struct(*(char),int,*(int),int)
*	O
longopts	*(struct(*(char),int,*(int),int))
)	O
;	O
int	O
main	(int,array(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
;	O
void	O
parse_error	(*(char))->(void)
(	O
const	O
char	O
*	O
message	*(char)
)	O
;	O
void	O
add_long_options	(*(char))->(void)
(	O
char	O
*	O
options	*(char)
)	O
;	O
void	O
add_longopt	(*(char),int)->(void)
(	O
const	O
char	O
*	O
name	*(char)
,	O
int	O
has_arg	int
)	O
;	O
void	O
print_help	()->(void)
(	O
void	O
)	O
;	O
void	O
set_shell	(*(char))->(void)
(	O
const	O
char	O
*	O
new_shell	*(char)
)	O
;	O
void	O
set_initial_shell	()->(void)
(	O
void	O
)	O
;	O
void	O
*	O
our_malloc	(long)->(*(void))
(	O
size_t	long
size	long
)	O
{	O
void	O
*	O
ret	*(void)
=	O
malloc	(long)->(*(void))
(	O
size	long
)	O
;	O
if	O
(	O
!	O
ret	*(void)
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s: Out of memory!\n"	*(char)
)	O
,	O
"getopt"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
3	int
)	O
;	O
}	O
return	O
(	O
ret	*(void)
)	O
;	O
}	O
void	O
*	O
our_realloc	(*(void),long)->(*(void))
(	O
void	O
*	O
ptr	*(void)
,	O
size_t	long
size	long
)	O
{	O
void	O
*	O
ret	*(void)
=	O
realloc	(*(void),long)->(*(void))
(	O
ptr	*(void)
,	O
size	long
)	O
;	O
if	O
(	O
!	O
ret	*(void)
&&	O
size	long
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s: Out of memory!\n"	*(char)
)	O
,	O
"getopt"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
3	int
)	O
;	O
}	O
return	O
(	O
ret	*(void)
)	O
;	O
}	O
const	O
char	O
*	O
normalize	(*(char))->(*(char))
(	O
const	O
char	O
*	O
arg	*(char)
)	O
{	O
static	O
char	O
*	O
BUFFER	*(char)
=	O
NULL	O
;	O
const	O
char	O
*	O
argptr	*(char)
=	O
arg	*(char)
;	O
char	O
*	O
bufptr	*(char)
;	O
if	O
(	O
BUFFER	*(char)
!=	O
NULL	O
)	O
free	(*(void))->(void)
(	O
BUFFER	*(char)
)	O
;	O
if	O
(	O
!	O
quote	int
)	O
{	O
BUFFER	*(char)
=	O
our_malloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
arg	*(char)
)	O
+	O
1	int
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
BUFFER	*(char)
,	O
arg	*(char)
)	O
;	O
return	O
BUFFER	*(char)
;	O
}	O
BUFFER	*(char)
=	O
our_malloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
arg	*(char)
)	O
*	O
4	int
+	O
3	int
)	O
;	O
bufptr	*(char)
=	O
BUFFER	*(char)
;	O
*	O
bufptr	*(char)
++	O
=	O
'\''	O
;	O
while	O
(	O
*	O
argptr	*(char)
)	O
{	O
if	O
(	O
*	O
argptr	*(char)
==	O
'\''	O
)	O
{	O
*	O
bufptr	*(char)
++	O
=	O
'\''	O
;	O
*	O
bufptr	*(char)
++	O
=	O
'\\'	O
;	O
*	O
bufptr	*(char)
++	O
=	O
'\''	O
;	O
*	O
bufptr	*(char)
++	O
=	O
'\''	O
;	O
}	O
else	O
if	O
(	O
shell	enum(int,int)
==	O
TCSH	int
&&	O
*	O
argptr	*(char)
==	O
'!'	O
)	O
{	O
*	O
bufptr	*(char)
++	O
=	O
'\''	O
;	O
*	O
bufptr	*(char)
++	O
=	O
'\\'	O
;	O
*	O
bufptr	*(char)
++	O
=	O
'!'	O
;	O
*	O
bufptr	*(char)
++	O
=	O
'\''	O
;	O
}	O
else	O
if	O
(	O
shell	enum(int,int)
==	O
TCSH	int
&&	O
*	O
argptr	*(char)
==	O
'\n'	O
)	O
{	O
*	O
bufptr	*(char)
++	O
=	O
'\\'	O
;	O
*	O
bufptr	*(char)
++	O
=	O
'n'	O
;	O
}	O
else	O
if	O
(	O
shell	enum(int,int)
==	O
TCSH	int
&&	O
isspace	(int)->(int)
(	O
*	O
argptr	*(char)
)	O
)	O
{	O
*	O
bufptr	*(char)
++	O
=	O
'\''	O
;	O
*	O
bufptr	*(char)
++	O
=	O
'\\'	O
;	O
*	O
bufptr	*(char)
++	O
=	O
*	O
argptr	*(char)
;	O
*	O
bufptr	*(char)
++	O
=	O
'\''	O
;	O
}	O
else	O
*	O
bufptr	*(char)
++	O
=	O
*	O
argptr	*(char)
;	O
argptr	*(char)
++	O
;	O
}	O
*	O
bufptr	*(char)
++	O
=	O
'\''	O
;	O
*	O
bufptr	*(char)
++	O
=	O
'\0'	O
;	O
return	O
BUFFER	*(char)
;	O
}	O
int	O
generate_output	(array(*(char)),int,*(char),*(struct(*(char),int,*(int),int)))->(int)
(	O
char	O
*	O
argv	array(*(char))
[	O
]	O
,	O
int	O
argc	int
,	O
const	O
char	O
*	O
optstr	*(char)
,	O
const	O
struct	O
option	struct(*(char),int,*(int),int)
*	O
longopts	*(struct(*(char),int,*(int),int))
)	O
{	O
int	O
exit_code	int
=	O
0	int
;	O
int	O
opt	int
;	O
int	O
longindex	int
;	O
const	O
char	O
*	O
charptr	*(char)
;	O
if	O
(	O
quiet_errors	int
)	O
opterr	int
=	O
0	int
;	O
optind	int
=	O
0	int
;	O
while	O
(	O
(	O
opt	int
=	O
(	O
alternative	int
?	O
ugetopt_long_only	(int,*(*(char)),*(char),*(struct(*(char),int,*(int),int)),*(int))->(int)
(	O
argc	int
,	O
argv	array(*(char))
,	O
optstr	*(char)
,	O
longopts	*(struct(*(char),int,*(int),int))
,	O
&	O
longindex	int
)	O
:	O
ugetopt_long	(int,*(*(char)),*(char),*(struct(*(char),int,*(int),int)),*(int))->(int)
(	O
argc	int
,	O
argv	array(*(char))
,	O
optstr	*(char)
,	O
longopts	*(struct(*(char),int,*(int),int))
,	O
&	O
longindex	int
)	O
)	O
)	O
!=	O
EOF	O
)	O
if	O
(	O
opt	int
==	O
'?'	O
||	O
opt	int
==	O
':'	O
)	O
exit_code	int
=	O
1	int
;	O
else	O
if	O
(	O
!	O
quiet_output	int
)	O
{	O
if	O
(	O
opt	int
==	O
LONG_OPT	int
)	O
{	O
printf	(*(char))->(int)
(	O
" --%s"	*(char)
,	O
longopts	*(struct(*(char),int,*(int),int))
[	O
longindex	int
]	O
.	O
name	*(char)
)	O
;	O
if	O
(	O
longopts	*(struct(*(char),int,*(int),int))
[	O
longindex	int
]	O
.	O
has_arg	int
)	O
printf	(*(char))->(int)
(	O
" %s"	*(char)
,	O
normalize	(*(char))->(*(char))
(	O
optarg	*(char)
?	O
optarg	*(char)
:	O
""	*(char)
)	O
)	O
;	O
}	O
else	O
if	O
(	O
opt	int
==	O
NON_OPT	int
)	O
printf	(*(char))->(int)
(	O
" %s"	*(char)
,	O
normalize	(*(char))->(*(char))
(	O
optarg	*(char)
)	O
)	O
;	O
else	O
{	O
printf	(*(char))->(int)
(	O
" -%c"	*(char)
,	O
opt	int
)	O
;	O
charptr	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
optstr	*(char)
,	O
opt	int
)	O
;	O
if	O
(	O
charptr	*(char)
!=	O
NULL	O
&&	O
*	O
++	O
charptr	*(char)
==	O
':'	O
)	O
printf	(*(char))->(int)
(	O
" %s"	*(char)
,	O
normalize	(*(char))->(*(char))
(	O
optarg	*(char)
?	O
optarg	*(char)
:	O
""	*(char)
)	O
)	O
;	O
}	O
}	O
if	O
(	O
!	O
quiet_output	int
)	O
{	O
printf	(*(char))->(int)
(	O
" --"	*(char)
)	O
;	O
while	O
(	O
optind	int
<	O
argc	int
)	O
printf	(*(char))->(int)
(	O
" %s"	*(char)
,	O
normalize	(*(char))->(*(char))
(	O
argv	array(*(char))
[	O
optind	int
++	O
]	O
)	O
)	O
;	O
printf	(*(char))->(int)
(	O
"\n"	*(char)
)	O
;	O
}	O
return	O
exit_code	int
;	O
}	O
void	O
parse_error	(*(char))->(void)
(	O
const	O
char	O
*	O
message	*(char)
)	O
{	O
if	O
(	O
message	*(char)
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"getopt: %s\n"	*(char)
,	O
message	*(char)
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
_	O
(	O
"Try `getopt --help' for more information.\n"	*(char)
)	O
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
exit	(int)->(void)
(	O
2	int
)	O
;	O
}	O
static	O
struct	O
option	struct(*(char),int,*(int),int)
*	O
long_options	*(struct(*(char),int,*(int),int))
=	O
NULL	O
;	O
static	O
int	O
long_options_length	int
=	O
0	int
;	O
static	O
int	O
long_options_nr	int
=	O
0	int
;	O
void	O
add_longopt	(*(char),int)->(void)
(	O
const	O
char	O
*	O
name	*(char)
,	O
int	O
has_arg	int
)	O
{	O
char	O
*	O
tmp	*(char)
;	O
if	O
(	O
!	O
name	*(char)
)	O
{	O
free	(*(void))->(void)
(	O
long_options	*(struct(*(char),int,*(int),int))
)	O
;	O
long_options	*(struct(*(char),int,*(int),int))
=	O
NULL	O
;	O
long_options_length	int
=	O
0	int
;	O
long_options_nr	int
=	O
0	int
;	O
}	O
if	O
(	O
long_options_nr	int
==	O
long_options_length	int
)	O
{	O
long_options_length	int
+=	O
LONG_OPTIONS_INCR	int
;	O
long_options	*(struct(*(char),int,*(int),int))
=	O
our_realloc	(*(void),long)->(*(void))
(	O
long_options	*(struct(*(char),int,*(int),int))
,	O
sizeof	O
(	O
struct	O
option	struct(*(char),int,*(int),int)
)	O
*	O
long_options_length	int
)	O
;	O
}	O
long_options	*(struct(*(char),int,*(int),int))
[	O
long_options_nr	int
]	O
.	O
name	*(char)
=	O
NULL	O
;	O
long_options	*(struct(*(char),int,*(int),int))
[	O
long_options_nr	int
]	O
.	O
has_arg	int
=	O
0	int
;	O
long_options	*(struct(*(char),int,*(int),int))
[	O
long_options_nr	int
]	O
.	O
flag	*(int)
=	O
NULL	O
;	O
long_options	*(struct(*(char),int,*(int),int))
[	O
long_options_nr	int
]	O
.	O
val	int
=	O
0	int
;	O
if	O
(	O
long_options_nr	int
)	O
{	O
long_options	*(struct(*(char),int,*(int),int))
[	O
long_options_nr	int
-	O
1	int
]	O
.	O
has_arg	int
=	O
has_arg	int
;	O
long_options	*(struct(*(char),int,*(int),int))
[	O
long_options_nr	int
-	O
1	int
]	O
.	O
flag	*(int)
=	O
NULL	O
;	O
long_options	*(struct(*(char),int,*(int),int))
[	O
long_options_nr	int
-	O
1	int
]	O
.	O
val	int
=	O
LONG_OPT	int
;	O
tmp	*(char)
=	O
our_malloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
name	*(char)
)	O
+	O
1	int
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
name	*(char)
)	O
;	O
long_options	*(struct(*(char),int,*(int),int))
[	O
long_options_nr	int
-	O
1	int
]	O
.	O
name	*(char)
=	O
tmp	*(char)
;	O
}	O
long_options_nr	int
++	O
;	O
}	O
void	O
add_long_options	(*(char))->(void)
(	O
char	O
*	O
options	*(char)
)	O
{	O
int	O
arg_opt	int
;	O
char	O
*	O
tokptr	*(char)
=	O
strtok	(*(char),*(char))->(*(char))
(	O
options	*(char)
,	O
", \t\n"	*(char)
)	O
;	O
while	O
(	O
tokptr	*(char)
)	O
{	O
arg_opt	int
=	O
no_argument	int
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
tokptr	*(char)
)	O
>	O
0	int
)	O
{	O
if	O
(	O
tokptr	*(char)
[	O
strlen	(*(char))->(long)
(	O
tokptr	*(char)
)	O
-	O
1	int
]	O
==	O
':'	O
)	O
{	O
if	O
(	O
tokptr	*(char)
[	O
strlen	(*(char))->(long)
(	O
tokptr	*(char)
)	O
-	O
2	int
]	O
==	O
':'	O
)	O
{	O
tokptr	*(char)
[	O
strlen	(*(char))->(long)
(	O
tokptr	*(char)
)	O
-	O
2	int
]	O
=	O
'\0'	O
;	O
arg_opt	int
=	O
optional_argument	int
;	O
}	O
else	O
{	O
tokptr	*(char)
[	O
strlen	(*(char))->(long)
(	O
tokptr	*(char)
)	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
arg_opt	int
=	O
required_argument	int
;	O
}	O
if	O
(	O
strlen	(*(char))->(long)
(	O
tokptr	*(char)
)	O
==	O
0	int
)	O
parse_error	(*(char))->(void)
(	O
_	O
(	O
"empty long option after "	*(char)
"-l or --long argument"	*(char)
)	O
)	O
;	O
}	O
add_longopt	(*(char),int)->(void)
(	O
tokptr	*(char)
,	O
arg_opt	int
)	O
;	O
}	O
tokptr	*(char)
=	O
strtok	(*(char),*(char))->(*(char))
(	O
NULL	O
,	O
", \t\n"	*(char)
)	O
;	O
}	O
}	O
void	O
set_shell	(*(char))->(void)
(	O
const	O
char	O
*	O
new_shell	*(char)
)	O
{	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
new_shell	*(char)
,	O
"bash"	*(char)
)	O
)	O
shell	enum(int,int)
=	O
BASH	int
;	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
new_shell	*(char)
,	O
"tcsh"	*(char)
)	O
)	O
shell	enum(int,int)
=	O
TCSH	int
;	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
new_shell	*(char)
,	O
"sh"	*(char)
)	O
)	O
shell	enum(int,int)
=	O
BASH	int
;	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
new_shell	*(char)
,	O
"csh"	*(char)
)	O
)	O
shell	enum(int,int)
=	O
TCSH	int
;	O
else	O
parse_error	(*(char))->(void)
(	O
_	O
(	O
"unknown shell after -s or --shell argument"	*(char)
)	O
)	O
;	O
}	O
void	O
print_help	()->(void)
(	O
void	O
)	O
{	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
_	O
(	O
"Usage: getopt optstring parameters\n"	*(char)
)	O
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
_	O
(	O
"       getopt [options] [--] optstring parameters\n"	*(char)
)	O
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
_	O
(	O
"       getopt [options] -o|--options optstring [options] [--]\n"	*(char)
)	O
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
_	O
(	O
"              parameters\n"	*(char)
)	O
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
_	O
(	O
"  -a, --alternative            Allow long options starting with single -\n"	*(char)
)	O
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
_	O
(	O
"  -h, --help                   This small usage guide\n"	*(char)
)	O
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
_	O
(	O
"  -l, --longoptions=longopts   Long options to be recognized\n"	*(char)
)	O
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
_	O
(	O
"  -n, --name=progname          The name under which errors are reported\n"	*(char)
)	O
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
_	O
(	O
"  -o, --options=optstring      Short options to be recognized\n"	*(char)
)	O
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
_	O
(	O
"  -q, --quiet                  Disable error reporting by getopt(3)\n"	*(char)
)	O
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
_	O
(	O
"  -Q, --quiet-output           No normal output\n"	*(char)
)	O
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
_	O
(	O
"  -s, --shell=shell            Set shell quoting conventions\n"	*(char)
)	O
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
_	O
(	O
"  -T, --test                   Test for getopt(1) version\n"	*(char)
)	O
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
_	O
(	O
"  -u, --unqote                 Do not quote the output\n"	*(char)
)	O
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
_	O
(	O
"  -V, --version                Output version information\n"	*(char)
)	O
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
exit	(int)->(void)
(	O
2	int
)	O
;	O
}	O
static	O
struct	O
option	struct(*(char),int,*(int),int)
longopts	*(struct(*(char),int,*(int),int))
[	O
]	O
=	O
{	O
{	O
"options"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'o'	O
}	O
,	O
{	O
"longoptions"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'l'	O
}	O
,	O
{	O
"quiet"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
'q'	O
}	O
,	O
{	O
"quiet-output"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
'Q'	O
}	O
,	O
{	O
"shell"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
's'	O
}	O
,	O
{	O
"test"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
'T'	O
}	O
,	O
{	O
"unquoted"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
'u'	O
}	O
,	O
{	O
"help"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
'h'	O
}	O
,	O
{	O
"alternative"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
'a'	O
}	O
,	O
{	O
"name"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
'n'	O
}	O
,	O
{	O
"version"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
'V'	O
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
0	int
}	O
}	O
;	O
static	O
const	O
char	O
*	O
shortopts	*(char)
=	O
"+ao:l:n:qQs:TuhV"	*(char)
;	O
int	O
main	(int,array(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
char	O
*	O
optstr	*(char)
=	O
NULL	O
;	O
char	O
*	O
name	*(char)
=	O
NULL	O
;	O
int	O
opt	int
;	O
int	O
compatible	int
=	O
0	int
;	O
setlocale	(int,*(char))->(*(char))
(	O
LC_ALL	O
,	O
""	*(char)
)	O
;	O
bindtextdomain	O
(	O
PACKAGE	O
,	O
LOCALEDIR	O
)	O
;	O
textdomain	O
(	O
PACKAGE	O
)	O
;	O
init_longopt	O
(	O
)	O
;	O
if	O
(	O
getenv	(*(char))->(*(char))
(	O
"GETOPT_COMPATIBLE"	*(char)
)	O
)	O
compatible	int
=	O
1	int
;	O
if	O
(	O
argc	int
==	O
1	int
)	O
{	O
if	O
(	O
compatible	int
)	O
{	O
printf	(*(char))->(int)
(	O
" --\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
else	O
parse_error	(*(char))->(void)
(	O
_	O
(	O
"missing optstring argument"	*(char)
)	O
)	O
;	O
}	O
if	O
(	O
argv	array(*(char))
[	O
1	int
]	O
[	O
0	int
]	O
!=	O
'-'	O
||	O
compatible	int
)	O
{	O
quote	int
=	O
0	int
;	O
optstr	*(char)
=	O
our_malloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
argv	array(*(char))
[	O
1	int
]	O
)	O
+	O
1	int
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
optstr	*(char)
,	O
argv	array(*(char))
[	O
1	int
]	O
+	O
strspn	(*(char),*(char))->(long)
(	O
argv	array(*(char))
[	O
1	int
]	O
,	O
"-+"	*(char)
)	O
)	O
;	O
argv	array(*(char))
[	O
1	int
]	O
=	O
argv	array(*(char))
[	O
0	int
]	O
;	O
exit	(int)->(void)
(	O
generate_output	(array(*(char)),int,*(char),*(struct(*(char),int,*(int),int)))->(int)
(	O
argv	array(*(char))
+	O
1	int
,	O
argc	int
-	O
1	int
,	O
optstr	*(char)
,	O
long_options	*(struct(*(char),int,*(int),int))
)	O
)	O
;	O
}	O
while	O
(	O
(	O
opt	int
=	O
ugetopt_long	(int,*(*(char)),*(char),*(struct(*(char),int,*(int),int)),*(int))->(int)
(	O
argc	int
,	O
argv	array(*(char))
,	O
shortopts	*(char)
,	O
longopts	*(struct(*(char),int,*(int),int))
,	O
NULL	O
)	O
)	O
!=	O
EOF	O
)	O
switch	O
(	O
opt	int
)	O
{	O
case	O
'a'	O
:	O
alternative	int
=	O
1	int
;	O
break	O
;	O
case	O
'h'	O
:	O
print_help	()->(void)
(	O
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
case	O
'o'	O
:	O
if	O
(	O
optstr	*(char)
)	O
free	(*(void))->(void)
(	O
optstr	*(char)
)	O
;	O
optstr	*(char)
=	O
our_malloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
optarg	*(char)
)	O
+	O
1	int
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
optstr	*(char)
,	O
optarg	*(char)
)	O
;	O
break	O
;	O
case	O
'l'	O
:	O
add_long_options	(*(char))->(void)
(	O
optarg	*(char)
)	O
;	O
break	O
;	O
case	O
'n'	O
:	O
if	O
(	O
name	*(char)
)	O
free	(*(void))->(void)
(	O
name	*(char)
)	O
;	O
name	*(char)
=	O
our_malloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
optarg	*(char)
)	O
+	O
1	int
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
name	*(char)
,	O
optarg	*(char)
)	O
;	O
break	O
;	O
case	O
'q'	O
:	O
quiet_errors	int
=	O
1	int
;	O
break	O
;	O
case	O
'Q'	O
:	O
quiet_output	int
=	O
1	int
;	O
break	O
;	O
case	O
's'	O
:	O
set_shell	(*(char))->(void)
(	O
optarg	*(char)
)	O
;	O
break	O
;	O
case	O
'T'	O
:	O
exit	(int)->(void)
(	O
4	int
)	O
;	O
case	O
'u'	O
:	O
quote	int
=	O
0	int
;	O
break	O
;	O
case	O
'V'	O
:	O
printf	(*(char))->(int)
(	O
_	O
(	O
"getopt (enhanced) 1.1.2\n"	*(char)
)	O
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
case	O
'?'	O
:	O
case	O
':'	O
:	O
parse_error	(*(char))->(void)
(	O
NULL	O
)	O
;	O
default	O
:	O
parse_error	(*(char))->(void)
(	O
_	O
(	O
"internal error, contact the author."	*(char)
)	O
)	O
;	O
}	O
if	O
(	O
!	O
optstr	*(char)
)	O
{	O
if	O
(	O
optind	int
>=	O
argc	int
)	O
parse_error	(*(char))->(void)
(	O
_	O
(	O
"missing optstring argument"	*(char)
)	O
)	O
;	O
else	O
{	O
optstr	*(char)
=	O
our_malloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
argv	array(*(char))
[	O
optind	int
]	O
)	O
+	O
1	int
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
optstr	*(char)
,	O
argv	array(*(char))
[	O
optind	int
]	O
)	O
;	O
optind	int
++	O
;	O
}	O
}	O
if	O
(	O
name	*(char)
)	O
argv	array(*(char))
[	O
optind	int
-	O
1	int
]	O
=	O
name	*(char)
;	O
else	O
argv	array(*(char))
[	O
optind	int
-	O
1	int
]	O
=	O
argv	array(*(char))
[	O
0	int
]	O
;	O
exit	(int)->(void)
(	O
generate_output	(array(*(char)),int,*(char),*(struct(*(char),int,*(int),int)))->(int)
(	O
argv	array(*(char))
+	O
optind	int
-	O
1	int
,	O
argc	int
-	O
optind	int
+	O
1	int
,	O
optstr	*(char)
,	O
long_options	*(struct(*(char),int,*(int),int))
)	O
)	O
;	O
}	O
