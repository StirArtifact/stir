const	O
char	O
*	O
kawalib	*(char)
=	O
KAWALIB	O
;	O
const	O
char	O
*	O
kawajar	*(char)
=	O
KAWAJAR	O
;	O
const	O
char	O
*	O
extrapath	*(char)
=	O
EXTRAPATH	O
;	O
char	O
*	O
get_classpath	(*(char))->(*(char))
(	O
const	O
char	O
*	O
progname	*(char)
)	O
{	O
char	O
*	O
classpath	*(char)
;	O
int	O
i	int
;	O
const	O
char	O
*	O
path	*(char)
=	O
getenv	(*(char))->(*(char))
(	O
"KAWALIB"	*(char)
)	O
;	O
if	O
(	O
path	*(char)
==	O
NULL	O
)	O
{	O
const	O
char	O
*	O
rp	*(char)
=	O
progname	*(char)
==	O
NULL	O
?	O
NULL	O
:	O
strrchr	(*(char),int)->(*(char))
(	O
progname	*(char)
,	O
'/'	O
)	O
;	O
path	*(char)
=	O
kawalib	*(char)
;	O
if	O
(	O
rp	*(char)
!=	O
NULL	O
)	O
{	O
char	O
*	O
buf	*(char)
=	O
malloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
progname	*(char)
)	O
+	O
strlen	(*(char))->(long)
(	O
kawajar	*(char)
)	O
+	O
5	int
)	O
;	O
if	O
(	O
buf	*(char)
!=	O
NULL	O
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
buf	*(char)
,	O
"%.*s/../lib/%s"	*(char)
,	O
rp	*(char)
-	O
progname	*(char)
,	O
progname	*(char)
,	O
kawajar	*(char)
)	O
;	O
if	O
(	O
access	(*(char),int)->(int)
(	O
buf	*(char)
,	O
R_OK	int
)	O
==	O
0	int
)	O
path	*(char)
=	O
buf	*(char)
;	O
}	O
}	O
}	O
i	int
=	O
strlen	(*(char))->(long)
(	O
path	*(char)
)	O
;	O
if	O
(	O
i	int
>	O
4	int
&&	O
strcmp	(*(char),*(char))->(int)
(	O
path	*(char)
+	O
i	int
-	O
4	int
,	O
".jar"	*(char)
)	O
==	O
0	int
)	O
{	O
if	O
(	O
access	(*(char),int)->(int)
(	O
path	*(char)
,	O
R_OK	int
)	O
<	O
0	int
)	O
{	O
perror	(*(char))->(void)
(	O
"KAWALIB does not specify a readable .jar file"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
}	O
else	O
{	O
char	O
*	O
buf	*(char)
=	O
malloc	(long)->(*(void))
(	O
i	int
+	O
20	int
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
buf	*(char)
,	O
"%s/kawa/repl.class"	*(char)
,	O
path	*(char)
)	O
;	O
if	O
(	O
access	(*(char),int)->(int)
(	O
buf	*(char)
,	O
R_OK	int
)	O
<	O
0	int
)	O
{	O
perror	(*(char))->(void)
(	O
"KAWALIB does not contain kawa/repl.class"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
}	O
classpath	*(char)
=	O
getenv	(*(char))->(*(char))
(	O
"CLASSPATH"	*(char)
)	O
;	O
if	O
(	O
classpath	*(char)
==	O
NULL	O
)	O
classpath	*(char)
=	O
"."	*(char)
;	O
int	O
extra_length	int
=	O
strlen	(*(char))->(long)
(	O
extrapath	*(char)
)	O
;	O
const	O
char	O
*	O
extra_sep	*(char)
;	O
if	O
(	O
extra_length	int
>	O
0	int
&&	O
extrapath	*(char)
[	O
extra_length	int
-	O
1	int
]	O
==	O
':'	O
)	O
{	O
extra_length	int
--	O
;	O
extra_sep	*(char)
=	O
":"	*(char)
;	O
}	O
else	O
extra_sep	*(char)
=	O
""	*(char)
;	O
char	O
*	O
buf	*(char)
=	O
malloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
path	*(char)
)	O
+	O
strlen	(*(char))->(long)
(	O
classpath	*(char)
)	O
+	O
extra_length	int
+	O
strlen	(*(char))->(long)
(	O
extra_sep	*(char)
)	O
+	O
12	int
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
buf	*(char)
,	O
"CLASSPATH=%s:%s%s%.*s"	*(char)
,	O
classpath	*(char)
,	O
path	*(char)
,	O
extra_sep	*(char)
,	O
extra_length	int
,	O
extrapath	*(char)
)	O
;	O
return	O
buf	*(char)
;	O
}	O
