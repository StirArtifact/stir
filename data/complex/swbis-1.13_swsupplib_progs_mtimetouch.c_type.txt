int	O
main	(int,array(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
time_t	long
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
;	O
struct	O
utimbuf	struct(long,long)
ub	struct(long,long)
;	O
unsigned	O
long	O
create_time	long
;	O
int	O
ret	int
;	O
if	O
(	O
argc	int
<	O
3	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Usage : mtimetouch calendartime path\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
sscanf	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
1	int
]	O
,	O
"%lu"	*(char)
,	O
&	O
create_time	long
)	O
;	O
ub	struct(long,long)
.	O
actime	long
=	O
(	O
time_t	long
)	O
create_time	long
;	O
ub	struct(long,long)
.	O
modtime	long
=	O
(	O
time_t	long
)	O
create_time	long
;	O
ret	int
=	O
utime	(*(char),*(struct(long,long)))->(int)
(	O
argv	array(*(char))
[	O
2	int
]	O
,	O
&	O
ub	struct(long,long)
)	O
;	O
if	O
(	O
ret	int
==	O
0	int
)	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
