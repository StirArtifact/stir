static	O
const	O
unsigned	O
char	O
fillbuf	array(char)
[	O
128	int
]	O
=	O
{	O
0x80	int
,	O
0	int
}	O
;	O
void	O
sha512_init_ctx	(*(struct(array(long),array(long),long,array(long))))->(void)
(	O
struct	O
sha512_ctx	struct(array(long),array(long),long,array(long))
*	O
ctx	*(struct(array(long),array(long),long,array(long)))
)	O
{	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
0	int
]	O
=	O
u64hilo	O
(	O
0x6a09e667	int
,	O
0xf3bcc908	int
)	O
;	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
1	int
]	O
=	O
u64hilo	O
(	O
0xbb67ae85	int
,	O
0x84caa73b	int
)	O
;	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
2	int
]	O
=	O
u64hilo	O
(	O
0x3c6ef372	int
,	O
0xfe94f82b	int
)	O
;	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
3	int
]	O
=	O
u64hilo	O
(	O
0xa54ff53a	int
,	O
0x5f1d36f1	int
)	O
;	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
4	int
]	O
=	O
u64hilo	O
(	O
0x510e527f	int
,	O
0xade682d1	int
)	O
;	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
5	int
]	O
=	O
u64hilo	O
(	O
0x9b05688c	int
,	O
0x2b3e6c1f	int
)	O
;	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
6	int
]	O
=	O
u64hilo	O
(	O
0x1f83d9ab	int
,	O
0xfb41bd6b	int
)	O
;	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
7	int
]	O
=	O
u64hilo	O
(	O
0x5be0cd19	int
,	O
0x137e2179	int
)	O
;	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
total	array(long)
[	O
0	int
]	O
=	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
total	array(long)
[	O
1	int
]	O
=	O
u64lo	O
(	O
0	int
)	O
;	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
buflen	long
=	O
0	int
;	O
}	O
void	O
sha384_init_ctx	(*(struct(array(long),array(long),long,array(long))))->(void)
(	O
struct	O
sha512_ctx	struct(array(long),array(long),long,array(long))
*	O
ctx	*(struct(array(long),array(long),long,array(long)))
)	O
{	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
0	int
]	O
=	O
u64hilo	O
(	O
0xcbbb9d5d	int
,	O
0xc1059ed8	int
)	O
;	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
1	int
]	O
=	O
u64hilo	O
(	O
0x629a292a	int
,	O
0x367cd507	int
)	O
;	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
2	int
]	O
=	O
u64hilo	O
(	O
0x9159015a	int
,	O
0x3070dd17	int
)	O
;	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
3	int
]	O
=	O
u64hilo	O
(	O
0x152fecd8	int
,	O
0xf70e5939	int
)	O
;	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
4	int
]	O
=	O
u64hilo	O
(	O
0x67332667	int
,	O
0xffc00b31	int
)	O
;	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
5	int
]	O
=	O
u64hilo	O
(	O
0x8eb44a87	int
,	O
0x68581511	int
)	O
;	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
6	int
]	O
=	O
u64hilo	O
(	O
0xdb0c2e0d	int
,	O
0x64f98fa7	int
)	O
;	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
7	int
]	O
=	O
u64hilo	O
(	O
0x47b5481d	int
,	O
0xbefa4fa4	int
)	O
;	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
total	array(long)
[	O
0	int
]	O
=	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
total	array(long)
[	O
1	int
]	O
=	O
u64lo	O
(	O
0	int
)	O
;	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
buflen	long
=	O
0	int
;	O
}	O
static	O
void	O
set_uint64	(*(char),long)->(void)
(	O
char	O
*	O
cp	*(char)
,	O
u64	long
v	long
)	O
{	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
cp	*(char)
,	O
&	O
v	long
,	O
sizeof	O
v	long
)	O
;	O
}	O
void	O
*	O
sha512_read_ctx	(*(struct(array(long),array(long),long,array(long))),*(void))->(*(void))
(	O
const	O
struct	O
sha512_ctx	struct(array(long),array(long),long,array(long))
*	O
ctx	*(struct(array(long),array(long),long,array(long)))
,	O
void	O
*	O
resbuf	*(void)
)	O
{	O
int	O
i	int
;	O
char	O
*	O
r	*(char)
=	O
resbuf	*(void)
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
8	int
;	O
i	int
++	O
)	O
set_uint64	(*(char),long)->(void)
(	O
r	*(char)
+	O
i	int
*	O
sizeof	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
0	int
]	O
,	O
SWAP	O
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
i	int
]	O
)	O
)	O
;	O
return	O
resbuf	*(void)
;	O
}	O
void	O
*	O
sha384_read_ctx	(*(struct(array(long),array(long),long,array(long))),*(void))->(*(void))
(	O
const	O
struct	O
sha512_ctx	struct(array(long),array(long),long,array(long))
*	O
ctx	*(struct(array(long),array(long),long,array(long)))
,	O
void	O
*	O
resbuf	*(void)
)	O
{	O
int	O
i	int
;	O
char	O
*	O
r	*(char)
=	O
resbuf	*(void)
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
6	int
;	O
i	int
++	O
)	O
set_uint64	(*(char),long)->(void)
(	O
r	*(char)
+	O
i	int
*	O
sizeof	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
0	int
]	O
,	O
SWAP	O
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
i	int
]	O
)	O
)	O
;	O
return	O
resbuf	*(void)
;	O
}	O
static	O
void	O
sha512_conclude_ctx	(*(struct(array(long),array(long),long,array(long))))->(void)
(	O
struct	O
sha512_ctx	struct(array(long),array(long),long,array(long))
*	O
ctx	*(struct(array(long),array(long),long,array(long)))
)	O
{	O
size_t	long
bytes	long
=	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
buflen	long
;	O
size_t	long
size	long
=	O
(	O
bytes	long
<	O
112	int
)	O
?	O
128	int
/	O
8	int
:	O
128	int
*	O
2	int
/	O
8	int
;	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
total	array(long)
[	O
0	int
]	O
=	O
u64plus	O
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
total	array(long)
[	O
0	int
]	O
,	O
u64lo	O
(	O
bytes	long
)	O
)	O
;	O
if	O
(	O
u64lt	O
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
total	array(long)
[	O
0	int
]	O
,	O
u64lo	O
(	O
bytes	long
)	O
)	O
)	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
total	array(long)
[	O
1	int
]	O
=	O
u64plus	O
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
total	array(long)
[	O
1	int
]	O
,	O
u64lo	O
(	O
1	int
)	O
)	O
;	O
set_uint64	(*(char),long)->(void)
(	O
(	O
char	O
*	O
)	O
&	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
buffer	array(long)
[	O
size	long
-	O
2	int
]	O
,	O
SWAP	O
(	O
u64or	O
(	O
u64shl	O
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
total	array(long)
[	O
1	int
]	O
,	O
3	int
)	O
,	O
u64shr	O
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
total	array(long)
[	O
0	int
]	O
,	O
61	int
)	O
)	O
)	O
)	O
;	O
set_uint64	(*(char),long)->(void)
(	O
(	O
char	O
*	O
)	O
&	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
buffer	array(long)
[	O
size	long
-	O
1	int
]	O
,	O
SWAP	O
(	O
u64shl	O
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
total	array(long)
[	O
0	int
]	O
,	O
3	int
)	O
)	O
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
(	O
(	O
char	O
*	O
)	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
buffer	array(long)
)	O
[	O
bytes	long
]	O
,	O
fillbuf	array(char)
,	O
(	O
size	long
-	O
2	int
)	O
*	O
8	int
-	O
bytes	long
)	O
;	O
sha512_process_block	(*(void),long,*(struct(array(long),array(long),long,array(long))))->(void)
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
buffer	array(long)
,	O
size	long
*	O
8	int
,	O
ctx	*(struct(array(long),array(long),long,array(long)))
)	O
;	O
}	O
void	O
*	O
sha512_finish_ctx	(*(struct(array(long),array(long),long,array(long))),*(void))->(*(void))
(	O
struct	O
sha512_ctx	struct(array(long),array(long),long,array(long))
*	O
ctx	*(struct(array(long),array(long),long,array(long)))
,	O
void	O
*	O
resbuf	*(void)
)	O
{	O
sha512_conclude_ctx	(*(struct(array(long),array(long),long,array(long))))->(void)
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
)	O
;	O
return	O
sha512_read_ctx	(*(struct(array(long),array(long),long,array(long))),*(void))->(*(void))
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
,	O
resbuf	*(void)
)	O
;	O
}	O
void	O
*	O
sha384_finish_ctx	(*(struct(array(long),array(long),long,array(long))),*(void))->(*(void))
(	O
struct	O
sha512_ctx	struct(array(long),array(long),long,array(long))
*	O
ctx	*(struct(array(long),array(long),long,array(long)))
,	O
void	O
*	O
resbuf	*(void)
)	O
{	O
sha512_conclude_ctx	(*(struct(array(long),array(long),long,array(long))))->(void)
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
)	O
;	O
return	O
sha384_read_ctx	(*(struct(array(long),array(long),long,array(long))),*(void))->(*(void))
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
,	O
resbuf	*(void)
)	O
;	O
}	O
static	O
int	O
shaxxx_stream	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),*(void),long,*((*(struct(array(long),array(long),long,array(long))))->(void)),*((*(struct(array(long),array(long),long,array(long))),*(void))->(*(void))))->(int)
(	O
FILE	struct
*	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
char	O
const	O
*	O
alg	*(char)
,	O
void	O
*	O
resblock	*(void)
,	O
ssize_t	long
hashlen	long
,	O
void	O
(	O
*	O
init_ctx	*((*(struct(array(long),array(long),long,array(long))))->(void))
)	O
(	O
struct	O
sha512_ctx	struct(array(long),array(long),long,array(long))
*	O
)	O
,	O
void	O
*	O
(	O
*	O
finish_ctx	*((*(struct(array(long),array(long),long,array(long))),*(void))->(*(void)))
)	O
(	O
struct	O
sha512_ctx	struct(array(long),array(long),long,array(long))
*	O
,	O
void	O
*	O
)	O
)	O
{	O
switch	O
(	O
afalg_stream	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),*(void),long)->(int)
(	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
alg	*(char)
,	O
resblock	*(void)
,	O
hashlen	long
)	O
)	O
{	O
case	O
0	int
:	O
return	O
0	int
;	O
case	O
-	O
EIO	int
:	O
return	O
1	int
;	O
}	O
char	O
*	O
buffer	array(long)
=	O
malloc	(long)->(*(void))
(	O
BLOCKSIZE	int
+	O
72	int
)	O
;	O
if	O
(	O
!	O
buffer	array(long)
)	O
return	O
1	int
;	O
struct	O
sha512_ctx	struct(array(long),array(long),long,array(long))
ctx	*(struct(array(long),array(long),long,array(long)))
;	O
init_ctx	*((*(struct(array(long),array(long),long,array(long))))->(void))
(	O
&	O
ctx	*(struct(array(long),array(long),long,array(long)))
)	O
;	O
size_t	long
sum	long
;	O
while	O
(	O
1	int
)	O
{	O
size_t	long
n	long
;	O
sum	long
=	O
0	int
;	O
while	O
(	O
1	int
)	O
{	O
if	O
(	O
feof	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
goto	O
process_partial_block	O
;	O
n	long
=	O
fread	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
buffer	array(long)
+	O
sum	long
,	O
1	int
,	O
BLOCKSIZE	int
-	O
sum	long
,	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
sum	long
+=	O
n	long
;	O
if	O
(	O
sum	long
==	O
BLOCKSIZE	int
)	O
break	O
;	O
if	O
(	O
n	long
==	O
0	int
)	O
{	O
if	O
(	O
ferror	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
free	(*(void))->(void)
(	O
buffer	array(long)
)	O
;	O
return	O
1	int
;	O
}	O
goto	O
process_partial_block	O
;	O
}	O
}	O
sha512_process_block	(*(void),long,*(struct(array(long),array(long),long,array(long))))->(void)
(	O
buffer	array(long)
,	O
BLOCKSIZE	int
,	O
&	O
ctx	*(struct(array(long),array(long),long,array(long)))
)	O
;	O
}	O
process_partial_block	O
:	O
;	O
if	O
(	O
sum	long
>	O
0	int
)	O
sha512_process_bytes	(*(void),long,*(struct(array(long),array(long),long,array(long))))->(void)
(	O
buffer	array(long)
,	O
sum	long
,	O
&	O
ctx	*(struct(array(long),array(long),long,array(long)))
)	O
;	O
finish_ctx	*((*(struct(array(long),array(long),long,array(long))),*(void))->(*(void)))
(	O
&	O
ctx	*(struct(array(long),array(long),long,array(long)))
,	O
resblock	*(void)
)	O
;	O
free	(*(void))->(void)
(	O
buffer	array(long)
)	O
;	O
return	O
0	int
;	O
}	O
int	O
sha512_stream	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void))->(int)
(	O
FILE	struct
*	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
void	O
*	O
resblock	*(void)
)	O
{	O
return	O
shaxxx_stream	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),*(void),long,*((*(struct(array(long),array(long),long,array(long))))->(void)),*((*(struct(array(long),array(long),long,array(long))),*(void))->(*(void))))->(int)
(	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"sha512"	*(char)
,	O
resblock	*(void)
,	O
SHA512_DIGEST_SIZE	int
,	O
sha512_init_ctx	(*(struct(array(long),array(long),long,array(long))))->(void)
,	O
sha512_finish_ctx	(*(struct(array(long),array(long),long,array(long))),*(void))->(*(void))
)	O
;	O
}	O
int	O
sha384_stream	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(void))->(int)
(	O
FILE	struct
*	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
void	O
*	O
resblock	*(void)
)	O
{	O
return	O
shaxxx_stream	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),*(void),long,*((*(struct(array(long),array(long),long,array(long))))->(void)),*((*(struct(array(long),array(long),long,array(long))),*(void))->(*(void))))->(int)
(	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"sha384"	*(char)
,	O
resblock	*(void)
,	O
SHA384_DIGEST_SIZE	int
,	O
sha384_init_ctx	(*(struct(array(long),array(long),long,array(long))))->(void)
,	O
sha384_finish_ctx	(*(struct(array(long),array(long),long,array(long))),*(void))->(*(void))
)	O
;	O
}	O
void	O
*	O
sha512_buffer	(*(char),long,*(void))->(*(void))
(	O
const	O
char	O
*	O
buffer	array(long)
,	O
size_t	long
len	long
,	O
void	O
*	O
resblock	*(void)
)	O
{	O
struct	O
sha512_ctx	struct(array(long),array(long),long,array(long))
ctx	*(struct(array(long),array(long),long,array(long)))
;	O
sha512_init_ctx	(*(struct(array(long),array(long),long,array(long))))->(void)
(	O
&	O
ctx	*(struct(array(long),array(long),long,array(long)))
)	O
;	O
sha512_process_bytes	(*(void),long,*(struct(array(long),array(long),long,array(long))))->(void)
(	O
buffer	array(long)
,	O
len	long
,	O
&	O
ctx	*(struct(array(long),array(long),long,array(long)))
)	O
;	O
return	O
sha512_finish_ctx	(*(struct(array(long),array(long),long,array(long))),*(void))->(*(void))
(	O
&	O
ctx	*(struct(array(long),array(long),long,array(long)))
,	O
resblock	*(void)
)	O
;	O
}	O
void	O
*	O
sha384_buffer	(*(char),long,*(void))->(*(void))
(	O
const	O
char	O
*	O
buffer	array(long)
,	O
size_t	long
len	long
,	O
void	O
*	O
resblock	*(void)
)	O
{	O
struct	O
sha512_ctx	struct(array(long),array(long),long,array(long))
ctx	*(struct(array(long),array(long),long,array(long)))
;	O
sha384_init_ctx	(*(struct(array(long),array(long),long,array(long))))->(void)
(	O
&	O
ctx	*(struct(array(long),array(long),long,array(long)))
)	O
;	O
sha512_process_bytes	(*(void),long,*(struct(array(long),array(long),long,array(long))))->(void)
(	O
buffer	array(long)
,	O
len	long
,	O
&	O
ctx	*(struct(array(long),array(long),long,array(long)))
)	O
;	O
return	O
sha384_finish_ctx	(*(struct(array(long),array(long),long,array(long))),*(void))->(*(void))
(	O
&	O
ctx	*(struct(array(long),array(long),long,array(long)))
,	O
resblock	*(void)
)	O
;	O
}	O
void	O
sha512_process_bytes	(*(void),long,*(struct(array(long),array(long),long,array(long))))->(void)
(	O
const	O
void	O
*	O
buffer	array(long)
,	O
size_t	long
len	long
,	O
struct	O
sha512_ctx	struct(array(long),array(long),long,array(long))
*	O
ctx	*(struct(array(long),array(long),long,array(long)))
)	O
{	O
if	O
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
buflen	long
!=	O
0	int
)	O
{	O
size_t	long
left_over	long
=	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
buflen	long
;	O
size_t	long
add	long
=	O
256	int
-	O
left_over	long
>	O
len	long
?	O
len	long
:	O
256	int
-	O
left_over	long
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
(	O
(	O
char	O
*	O
)	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
buffer	array(long)
)	O
[	O
left_over	long
]	O
,	O
buffer	array(long)
,	O
add	long
)	O
;	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
buflen	long
+=	O
add	long
;	O
if	O
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
buflen	long
>	O
128	int
)	O
{	O
sha512_process_block	(*(void),long,*(struct(array(long),array(long),long,array(long))))->(void)
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
buffer	array(long)
,	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
buflen	long
&	O
~	O
127	int
,	O
ctx	*(struct(array(long),array(long),long,array(long)))
)	O
;	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
buflen	long
&=	O
127	int
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
buffer	array(long)
,	O
&	O
(	O
(	O
char	O
*	O
)	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
buffer	array(long)
)	O
[	O
(	O
left_over	long
+	O
add	long
)	O
&	O
~	O
127	int
]	O
,	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
buflen	long
)	O
;	O
}	O
buffer	array(long)
=	O
(	O
const	O
char	O
*	O
)	O
buffer	array(long)
+	O
add	long
;	O
len	long
-=	O
add	long
;	O
}	O
if	O
(	O
len	long
>=	O
128	int
)	O
{	O
if	O
(	O
UNALIGNED_P	O
(	O
buffer	array(long)
)	O
)	O
while	O
(	O
len	long
>	O
128	int
)	O
{	O
sha512_process_block	(*(void),long,*(struct(array(long),array(long),long,array(long))))->(void)
(	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
buffer	array(long)
,	O
buffer	array(long)
,	O
128	int
)	O
,	O
128	int
,	O
ctx	*(struct(array(long),array(long),long,array(long)))
)	O
;	O
buffer	array(long)
=	O
(	O
const	O
char	O
*	O
)	O
buffer	array(long)
+	O
128	int
;	O
len	long
-=	O
128	int
;	O
}	O
else	O
{	O
sha512_process_block	(*(void),long,*(struct(array(long),array(long),long,array(long))))->(void)
(	O
buffer	array(long)
,	O
len	long
&	O
~	O
127	int
,	O
ctx	*(struct(array(long),array(long),long,array(long)))
)	O
;	O
buffer	array(long)
=	O
(	O
const	O
char	O
*	O
)	O
buffer	array(long)
+	O
(	O
len	long
&	O
~	O
127	int
)	O
;	O
len	long
&=	O
127	int
;	O
}	O
}	O
if	O
(	O
len	long
>	O
0	int
)	O
{	O
size_t	long
left_over	long
=	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
buflen	long
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
(	O
(	O
char	O
*	O
)	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
buffer	array(long)
)	O
[	O
left_over	long
]	O
,	O
buffer	array(long)
,	O
len	long
)	O
;	O
left_over	long
+=	O
len	long
;	O
if	O
(	O
left_over	long
>=	O
128	int
)	O
{	O
sha512_process_block	(*(void),long,*(struct(array(long),array(long),long,array(long))))->(void)
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
buffer	array(long)
,	O
128	int
,	O
ctx	*(struct(array(long),array(long),long,array(long)))
)	O
;	O
left_over	long
-=	O
128	int
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
buffer	array(long)
,	O
&	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
buffer	array(long)
[	O
16	int
]	O
,	O
left_over	long
)	O
;	O
}	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
buflen	long
=	O
left_over	long
;	O
}	O
}	O
static	O
u64	long
const	O
sha512_round_constants	array(long)
[	O
80	int
]	O
=	O
{	O
u64init	O
(	O
0x428a2f98	int
,	O
0xd728ae22	int
)	O
,	O
u64init	O
(	O
0x71374491	int
,	O
0x23ef65cd	int
)	O
,	O
u64init	O
(	O
0xb5c0fbcf	int
,	O
0xec4d3b2f	int
)	O
,	O
u64init	O
(	O
0xe9b5dba5	int
,	O
0x8189dbbc	int
)	O
,	O
u64init	O
(	O
0x3956c25b	int
,	O
0xf348b538	int
)	O
,	O
u64init	O
(	O
0x59f111f1	int
,	O
0xb605d019	int
)	O
,	O
u64init	O
(	O
0x923f82a4	int
,	O
0xaf194f9b	int
)	O
,	O
u64init	O
(	O
0xab1c5ed5	int
,	O
0xda6d8118	int
)	O
,	O
u64init	O
(	O
0xd807aa98	int
,	O
0xa3030242	int
)	O
,	O
u64init	O
(	O
0x12835b01	int
,	O
0x45706fbe	int
)	O
,	O
u64init	O
(	O
0x243185be	int
,	O
0x4ee4b28c	int
)	O
,	O
u64init	O
(	O
0x550c7dc3	int
,	O
0xd5ffb4e2	int
)	O
,	O
u64init	O
(	O
0x72be5d74	int
,	O
0xf27b896f	int
)	O
,	O
u64init	O
(	O
0x80deb1fe	int
,	O
0x3b1696b1	int
)	O
,	O
u64init	O
(	O
0x9bdc06a7	int
,	O
0x25c71235	int
)	O
,	O
u64init	O
(	O
0xc19bf174	int
,	O
0xcf692694	int
)	O
,	O
u64init	O
(	O
0xe49b69c1	int
,	O
0x9ef14ad2	int
)	O
,	O
u64init	O
(	O
0xefbe4786	int
,	O
0x384f25e3	int
)	O
,	O
u64init	O
(	O
0x0fc19dc6	int
,	O
0x8b8cd5b5	int
)	O
,	O
u64init	O
(	O
0x240ca1cc	int
,	O
0x77ac9c65	int
)	O
,	O
u64init	O
(	O
0x2de92c6f	int
,	O
0x592b0275	int
)	O
,	O
u64init	O
(	O
0x4a7484aa	int
,	O
0x6ea6e483	int
)	O
,	O
u64init	O
(	O
0x5cb0a9dc	int
,	O
0xbd41fbd4	int
)	O
,	O
u64init	O
(	O
0x76f988da	int
,	O
0x831153b5	int
)	O
,	O
u64init	O
(	O
0x983e5152	int
,	O
0xee66dfab	int
)	O
,	O
u64init	O
(	O
0xa831c66d	int
,	O
0x2db43210	int
)	O
,	O
u64init	O
(	O
0xb00327c8	int
,	O
0x98fb213f	int
)	O
,	O
u64init	O
(	O
0xbf597fc7	int
,	O
0xbeef0ee4	int
)	O
,	O
u64init	O
(	O
0xc6e00bf3	int
,	O
0x3da88fc2	int
)	O
,	O
u64init	O
(	O
0xd5a79147	int
,	O
0x930aa725	int
)	O
,	O
u64init	O
(	O
0x06ca6351	int
,	O
0xe003826f	int
)	O
,	O
u64init	O
(	O
0x14292967	int
,	O
0x0a0e6e70	int
)	O
,	O
u64init	O
(	O
0x27b70a85	int
,	O
0x46d22ffc	int
)	O
,	O
u64init	O
(	O
0x2e1b2138	int
,	O
0x5c26c926	int
)	O
,	O
u64init	O
(	O
0x4d2c6dfc	int
,	O
0x5ac42aed	int
)	O
,	O
u64init	O
(	O
0x53380d13	int
,	O
0x9d95b3df	int
)	O
,	O
u64init	O
(	O
0x650a7354	int
,	O
0x8baf63de	int
)	O
,	O
u64init	O
(	O
0x766a0abb	int
,	O
0x3c77b2a8	int
)	O
,	O
u64init	O
(	O
0x81c2c92e	int
,	O
0x47edaee6	int
)	O
,	O
u64init	O
(	O
0x92722c85	int
,	O
0x1482353b	int
)	O
,	O
u64init	O
(	O
0xa2bfe8a1	int
,	O
0x4cf10364	int
)	O
,	O
u64init	O
(	O
0xa81a664b	int
,	O
0xbc423001	int
)	O
,	O
u64init	O
(	O
0xc24b8b70	int
,	O
0xd0f89791	int
)	O
,	O
u64init	O
(	O
0xc76c51a3	int
,	O
0x0654be30	int
)	O
,	O
u64init	O
(	O
0xd192e819	int
,	O
0xd6ef5218	int
)	O
,	O
u64init	O
(	O
0xd6990624	int
,	O
0x5565a910	int
)	O
,	O
u64init	O
(	O
0xf40e3585	int
,	O
0x5771202a	int
)	O
,	O
u64init	O
(	O
0x106aa070	int
,	O
0x32bbd1b8	int
)	O
,	O
u64init	O
(	O
0x19a4c116	int
,	O
0xb8d2d0c8	int
)	O
,	O
u64init	O
(	O
0x1e376c08	int
,	O
0x5141ab53	int
)	O
,	O
u64init	O
(	O
0x2748774c	int
,	O
0xdf8eeb99	int
)	O
,	O
u64init	O
(	O
0x34b0bcb5	int
,	O
0xe19b48a8	int
)	O
,	O
u64init	O
(	O
0x391c0cb3	int
,	O
0xc5c95a63	int
)	O
,	O
u64init	O
(	O
0x4ed8aa4a	int
,	O
0xe3418acb	int
)	O
,	O
u64init	O
(	O
0x5b9cca4f	int
,	O
0x7763e373	int
)	O
,	O
u64init	O
(	O
0x682e6ff3	int
,	O
0xd6b2b8a3	int
)	O
,	O
u64init	O
(	O
0x748f82ee	int
,	O
0x5defb2fc	int
)	O
,	O
u64init	O
(	O
0x78a5636f	int
,	O
0x43172f60	int
)	O
,	O
u64init	O
(	O
0x84c87814	int
,	O
0xa1f0ab72	int
)	O
,	O
u64init	O
(	O
0x8cc70208	int
,	O
0x1a6439ec	int
)	O
,	O
u64init	O
(	O
0x90befffa	int
,	O
0x23631e28	int
)	O
,	O
u64init	O
(	O
0xa4506ceb	int
,	O
0xde82bde9	int
)	O
,	O
u64init	O
(	O
0xbef9a3f7	int
,	O
0xb2c67915	int
)	O
,	O
u64init	O
(	O
0xc67178f2	int
,	O
0xe372532b	int
)	O
,	O
u64init	O
(	O
0xca273ece	int
,	O
0xea26619c	int
)	O
,	O
u64init	O
(	O
0xd186b8c7	int
,	O
0x21c0c207	int
)	O
,	O
u64init	O
(	O
0xeada7dd6	int
,	O
0xcde0eb1e	int
)	O
,	O
u64init	O
(	O
0xf57d4f7f	int
,	O
0xee6ed178	int
)	O
,	O
u64init	O
(	O
0x06f067aa	int
,	O
0x72176fba	int
)	O
,	O
u64init	O
(	O
0x0a637dc5	int
,	O
0xa2c898a6	int
)	O
,	O
u64init	O
(	O
0x113f9804	int
,	O
0xbef90dae	int
)	O
,	O
u64init	O
(	O
0x1b710b35	int
,	O
0x131c471b	int
)	O
,	O
u64init	O
(	O
0x28db77f5	int
,	O
0x23047d84	int
)	O
,	O
u64init	O
(	O
0x32caab7b	int
,	O
0x40c72493	int
)	O
,	O
u64init	O
(	O
0x3c9ebe0a	int
,	O
0x15c9bebc	int
)	O
,	O
u64init	O
(	O
0x431d67c4	int
,	O
0x9c100d4c	int
)	O
,	O
u64init	O
(	O
0x4cc5d4be	int
,	O
0xcb3e42b6	int
)	O
,	O
u64init	O
(	O
0x597f299c	int
,	O
0xfc657e2a	int
)	O
,	O
u64init	O
(	O
0x5fcb6fab	int
,	O
0x3ad6faec	int
)	O
,	O
u64init	O
(	O
0x6c44198c	int
,	O
0x4a475817	int
)	O
,	O
}	O
;	O
void	O
sha512_process_block	(*(void),long,*(struct(array(long),array(long),long,array(long))))->(void)
(	O
const	O
void	O
*	O
buffer	array(long)
,	O
size_t	long
len	long
,	O
struct	O
sha512_ctx	struct(array(long),array(long),long,array(long))
*	O
ctx	*(struct(array(long),array(long),long,array(long)))
)	O
{	O
u64	long
const	O
*	O
words	*(long)
=	O
buffer	array(long)
;	O
u64	long
const	O
*	O
endp	*(long)
=	O
words	*(long)
+	O
len	long
/	O
sizeof	O
(	O
u64	long
)	O
;	O
u64	long
x	array(long)
[	O
16	int
]	O
;	O
u64	long
a	long
=	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
0	int
]	O
;	O
u64	long
b	long
=	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
1	int
]	O
;	O
u64	long
c	long
=	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
2	int
]	O
;	O
u64	long
d	long
=	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
3	int
]	O
;	O
u64	long
e	long
=	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
4	int
]	O
;	O
u64	long
f	long
=	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
5	int
]	O
;	O
u64	long
g	long
=	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
6	int
]	O
;	O
u64	long
h	long
=	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
7	int
]	O
;	O
u64	long
lolen	long
=	O
u64size	O
(	O
len	long
)	O
;	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
total	array(long)
[	O
0	int
]	O
=	O
u64plus	O
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
total	array(long)
[	O
0	int
]	O
,	O
lolen	long
)	O
;	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
total	array(long)
[	O
1	int
]	O
=	O
u64plus	O
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
total	array(long)
[	O
1	int
]	O
,	O
u64plus	O
(	O
u64size	O
(	O
len	long
>>	O
31	int
>>	O
31	int
>>	O
2	int
)	O
,	O
u64lo	O
(	O
u64lt	O
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
total	array(long)
[	O
0	int
]	O
,	O
lolen	long
)	O
)	O
)	O
)	O
;	O
while	O
(	O
words	*(long)
<	O
endp	*(long)
)	O
{	O
int	O
t	int
;	O
for	O
(	O
t	int
=	O
0	int
;	O
t	int
<	O
16	int
;	O
t	int
++	O
)	O
{	O
x	array(long)
[	O
t	int
]	O
=	O
SWAP	O
(	O
*	O
words	*(long)
)	O
;	O
words	*(long)
++	O
;	O
}	O
R	O
(	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
K	O
(	O
0	int
)	O
,	O
x	array(long)
[	O
0	int
]	O
)	O
;	O
R	O
(	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
K	O
(	O
1	int
)	O
,	O
x	array(long)
[	O
1	int
]	O
)	O
;	O
R	O
(	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
K	O
(	O
2	int
)	O
,	O
x	array(long)
[	O
2	int
]	O
)	O
;	O
R	O
(	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
K	O
(	O
3	int
)	O
,	O
x	array(long)
[	O
3	int
]	O
)	O
;	O
R	O
(	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
K	O
(	O
4	int
)	O
,	O
x	array(long)
[	O
4	int
]	O
)	O
;	O
R	O
(	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
K	O
(	O
5	int
)	O
,	O
x	array(long)
[	O
5	int
]	O
)	O
;	O
R	O
(	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
K	O
(	O
6	int
)	O
,	O
x	array(long)
[	O
6	int
]	O
)	O
;	O
R	O
(	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
K	O
(	O
7	int
)	O
,	O
x	array(long)
[	O
7	int
]	O
)	O
;	O
R	O
(	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
K	O
(	O
8	int
)	O
,	O
x	array(long)
[	O
8	int
]	O
)	O
;	O
R	O
(	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
K	O
(	O
9	int
)	O
,	O
x	array(long)
[	O
9	int
]	O
)	O
;	O
R	O
(	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
K	O
(	O
10	int
)	O
,	O
x	array(long)
[	O
10	int
]	O
)	O
;	O
R	O
(	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
K	O
(	O
11	int
)	O
,	O
x	array(long)
[	O
11	int
]	O
)	O
;	O
R	O
(	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
K	O
(	O
12	int
)	O
,	O
x	array(long)
[	O
12	int
]	O
)	O
;	O
R	O
(	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
K	O
(	O
13	int
)	O
,	O
x	array(long)
[	O
13	int
]	O
)	O
;	O
R	O
(	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
K	O
(	O
14	int
)	O
,	O
x	array(long)
[	O
14	int
]	O
)	O
;	O
R	O
(	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
K	O
(	O
15	int
)	O
,	O
x	array(long)
[	O
15	int
]	O
)	O
;	O
R	O
(	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
K	O
(	O
16	int
)	O
,	O
M	O
(	O
16	int
)	O
)	O
;	O
R	O
(	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
K	O
(	O
17	int
)	O
,	O
M	O
(	O
17	int
)	O
)	O
;	O
R	O
(	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
K	O
(	O
18	int
)	O
,	O
M	O
(	O
18	int
)	O
)	O
;	O
R	O
(	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
K	O
(	O
19	int
)	O
,	O
M	O
(	O
19	int
)	O
)	O
;	O
R	O
(	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
K	O
(	O
20	int
)	O
,	O
M	O
(	O
20	int
)	O
)	O
;	O
R	O
(	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
K	O
(	O
21	int
)	O
,	O
M	O
(	O
21	int
)	O
)	O
;	O
R	O
(	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
K	O
(	O
22	int
)	O
,	O
M	O
(	O
22	int
)	O
)	O
;	O
R	O
(	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
K	O
(	O
23	int
)	O
,	O
M	O
(	O
23	int
)	O
)	O
;	O
R	O
(	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
K	O
(	O
24	int
)	O
,	O
M	O
(	O
24	int
)	O
)	O
;	O
R	O
(	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
K	O
(	O
25	int
)	O
,	O
M	O
(	O
25	int
)	O
)	O
;	O
R	O
(	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
K	O
(	O
26	int
)	O
,	O
M	O
(	O
26	int
)	O
)	O
;	O
R	O
(	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
K	O
(	O
27	int
)	O
,	O
M	O
(	O
27	int
)	O
)	O
;	O
R	O
(	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
K	O
(	O
28	int
)	O
,	O
M	O
(	O
28	int
)	O
)	O
;	O
R	O
(	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
K	O
(	O
29	int
)	O
,	O
M	O
(	O
29	int
)	O
)	O
;	O
R	O
(	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
K	O
(	O
30	int
)	O
,	O
M	O
(	O
30	int
)	O
)	O
;	O
R	O
(	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
K	O
(	O
31	int
)	O
,	O
M	O
(	O
31	int
)	O
)	O
;	O
R	O
(	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
K	O
(	O
32	int
)	O
,	O
M	O
(	O
32	int
)	O
)	O
;	O
R	O
(	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
K	O
(	O
33	int
)	O
,	O
M	O
(	O
33	int
)	O
)	O
;	O
R	O
(	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
K	O
(	O
34	int
)	O
,	O
M	O
(	O
34	int
)	O
)	O
;	O
R	O
(	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
K	O
(	O
35	int
)	O
,	O
M	O
(	O
35	int
)	O
)	O
;	O
R	O
(	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
K	O
(	O
36	int
)	O
,	O
M	O
(	O
36	int
)	O
)	O
;	O
R	O
(	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
K	O
(	O
37	int
)	O
,	O
M	O
(	O
37	int
)	O
)	O
;	O
R	O
(	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
K	O
(	O
38	int
)	O
,	O
M	O
(	O
38	int
)	O
)	O
;	O
R	O
(	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
K	O
(	O
39	int
)	O
,	O
M	O
(	O
39	int
)	O
)	O
;	O
R	O
(	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
K	O
(	O
40	int
)	O
,	O
M	O
(	O
40	int
)	O
)	O
;	O
R	O
(	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
K	O
(	O
41	int
)	O
,	O
M	O
(	O
41	int
)	O
)	O
;	O
R	O
(	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
K	O
(	O
42	int
)	O
,	O
M	O
(	O
42	int
)	O
)	O
;	O
R	O
(	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
K	O
(	O
43	int
)	O
,	O
M	O
(	O
43	int
)	O
)	O
;	O
R	O
(	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
K	O
(	O
44	int
)	O
,	O
M	O
(	O
44	int
)	O
)	O
;	O
R	O
(	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
K	O
(	O
45	int
)	O
,	O
M	O
(	O
45	int
)	O
)	O
;	O
R	O
(	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
K	O
(	O
46	int
)	O
,	O
M	O
(	O
46	int
)	O
)	O
;	O
R	O
(	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
K	O
(	O
47	int
)	O
,	O
M	O
(	O
47	int
)	O
)	O
;	O
R	O
(	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
K	O
(	O
48	int
)	O
,	O
M	O
(	O
48	int
)	O
)	O
;	O
R	O
(	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
K	O
(	O
49	int
)	O
,	O
M	O
(	O
49	int
)	O
)	O
;	O
R	O
(	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
K	O
(	O
50	int
)	O
,	O
M	O
(	O
50	int
)	O
)	O
;	O
R	O
(	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
K	O
(	O
51	int
)	O
,	O
M	O
(	O
51	int
)	O
)	O
;	O
R	O
(	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
K	O
(	O
52	int
)	O
,	O
M	O
(	O
52	int
)	O
)	O
;	O
R	O
(	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
K	O
(	O
53	int
)	O
,	O
M	O
(	O
53	int
)	O
)	O
;	O
R	O
(	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
K	O
(	O
54	int
)	O
,	O
M	O
(	O
54	int
)	O
)	O
;	O
R	O
(	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
K	O
(	O
55	int
)	O
,	O
M	O
(	O
55	int
)	O
)	O
;	O
R	O
(	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
K	O
(	O
56	int
)	O
,	O
M	O
(	O
56	int
)	O
)	O
;	O
R	O
(	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
K	O
(	O
57	int
)	O
,	O
M	O
(	O
57	int
)	O
)	O
;	O
R	O
(	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
K	O
(	O
58	int
)	O
,	O
M	O
(	O
58	int
)	O
)	O
;	O
R	O
(	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
K	O
(	O
59	int
)	O
,	O
M	O
(	O
59	int
)	O
)	O
;	O
R	O
(	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
K	O
(	O
60	int
)	O
,	O
M	O
(	O
60	int
)	O
)	O
;	O
R	O
(	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
K	O
(	O
61	int
)	O
,	O
M	O
(	O
61	int
)	O
)	O
;	O
R	O
(	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
K	O
(	O
62	int
)	O
,	O
M	O
(	O
62	int
)	O
)	O
;	O
R	O
(	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
K	O
(	O
63	int
)	O
,	O
M	O
(	O
63	int
)	O
)	O
;	O
R	O
(	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
K	O
(	O
64	int
)	O
,	O
M	O
(	O
64	int
)	O
)	O
;	O
R	O
(	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
K	O
(	O
65	int
)	O
,	O
M	O
(	O
65	int
)	O
)	O
;	O
R	O
(	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
K	O
(	O
66	int
)	O
,	O
M	O
(	O
66	int
)	O
)	O
;	O
R	O
(	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
K	O
(	O
67	int
)	O
,	O
M	O
(	O
67	int
)	O
)	O
;	O
R	O
(	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
K	O
(	O
68	int
)	O
,	O
M	O
(	O
68	int
)	O
)	O
;	O
R	O
(	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
K	O
(	O
69	int
)	O
,	O
M	O
(	O
69	int
)	O
)	O
;	O
R	O
(	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
K	O
(	O
70	int
)	O
,	O
M	O
(	O
70	int
)	O
)	O
;	O
R	O
(	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
K	O
(	O
71	int
)	O
,	O
M	O
(	O
71	int
)	O
)	O
;	O
R	O
(	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
K	O
(	O
72	int
)	O
,	O
M	O
(	O
72	int
)	O
)	O
;	O
R	O
(	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
K	O
(	O
73	int
)	O
,	O
M	O
(	O
73	int
)	O
)	O
;	O
R	O
(	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
K	O
(	O
74	int
)	O
,	O
M	O
(	O
74	int
)	O
)	O
;	O
R	O
(	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
K	O
(	O
75	int
)	O
,	O
M	O
(	O
75	int
)	O
)	O
;	O
R	O
(	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
d	long
,	O
K	O
(	O
76	int
)	O
,	O
M	O
(	O
76	int
)	O
)	O
;	O
R	O
(	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
c	long
,	O
K	O
(	O
77	int
)	O
,	O
M	O
(	O
77	int
)	O
)	O
;	O
R	O
(	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
b	long
,	O
K	O
(	O
78	int
)	O
,	O
M	O
(	O
78	int
)	O
)	O
;	O
R	O
(	O
b	long
,	O
c	long
,	O
d	long
,	O
e	long
,	O
f	long
,	O
g	long
,	O
h	long
,	O
a	long
,	O
K	O
(	O
79	int
)	O
,	O
M	O
(	O
79	int
)	O
)	O
;	O
a	long
=	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
0	int
]	O
=	O
u64plus	O
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
0	int
]	O
,	O
a	long
)	O
;	O
b	long
=	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
1	int
]	O
=	O
u64plus	O
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
1	int
]	O
,	O
b	long
)	O
;	O
c	long
=	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
2	int
]	O
=	O
u64plus	O
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
2	int
]	O
,	O
c	long
)	O
;	O
d	long
=	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
3	int
]	O
=	O
u64plus	O
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
3	int
]	O
,	O
d	long
)	O
;	O
e	long
=	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
4	int
]	O
=	O
u64plus	O
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
4	int
]	O
,	O
e	long
)	O
;	O
f	long
=	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
5	int
]	O
=	O
u64plus	O
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
5	int
]	O
,	O
f	long
)	O
;	O
g	long
=	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
6	int
]	O
=	O
u64plus	O
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
6	int
]	O
,	O
g	long
)	O
;	O
h	long
=	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
7	int
]	O
=	O
u64plus	O
(	O
ctx	*(struct(array(long),array(long),long,array(long)))
->	O
state	array(long)
[	O
7	int
]	O
,	O
h	long
)	O
;	O
}	O
}	O
