struct	O
mu_url_ctx	struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct),*(char),*(char),short,*(char),*(char),*(*(char)),int,*(*(char)),int,*(void),*((*(struct`))->(void)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(int))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int)))),long,*(char),long,long)
{	O
int	O
flags	int
;	O
const	O
char	O
*	O
input	*(char)
;	O
const	O
char	O
*	O
cur	*(char)
;	O
mu_url_t	*(struct)
url	*(struct)
;	O
size_t	long
passoff	long
;	O
char	O
*	O
tokbuf	*(char)
;	O
size_t	long
toksize	long
;	O
size_t	long
toklen	long
;	O
}	O
;	O
static	O
int	O
getkn	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)),*(char))->(int)
(	O
struct	O
mu_url_ctx	struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct),*(char),*(char),short,*(char),*(char),*(*(char)),int,*(*(char)),int,*(void),*((*(struct`))->(void)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(int))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int)))),long,*(char),long,long)
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
,	O
char	O
*	O
delim	int
)	O
{	O
size_t	long
n	long
;	O
if	O
(	O
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
==	O
0	int
)	O
return	O
MU_ERR_PARSE	O
;	O
n	long
=	O
strcspn	(*(char),*(char))->(long)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
,	O
delim	int
)	O
;	O
if	O
(	O
n	long
+	O
1	int
>	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
toksize	long
)	O
{	O
char	O
*	O
p	*(char)
=	O
realloc	(*(void),long)->(*(void))
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
tokbuf	*(char)
,	O
n	long
+	O
1	int
)	O
;	O
if	O
(	O
!	O
p	*(char)
)	O
return	O
ENOENT	int
;	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
toksize	long
=	O
n	long
+	O
1	int
;	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
tokbuf	*(char)
=	O
p	*(char)
;	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
tokbuf	*(char)
,	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
,	O
n	long
)	O
;	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
tokbuf	*(char)
[	O
n	long
]	O
=	O
0	int
;	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
toklen	long
=	O
n	long
;	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
+=	O
n	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
expand_array	(*(long),*(*(*(char))),int)->(int)
(	O
size_t	long
*	O
pwc	*(long)
,	O
char	O
*	O
*	O
*	O
pwv	*(*(*(char)))
,	O
int	O
incr	int
)	O
{	O
size_t	long
wc	long
=	O
*	O
pwc	*(long)
;	O
char	O
*	O
*	O
wv	*(*(char))
=	O
*	O
pwv	*(*(*(char)))
;	O
if	O
(	O
!	O
wv	*(*(char))
)	O
{	O
wv	*(*(char))
=	O
calloc	(long,long)->(*(void))
(	O
INIT_ARRAY_SIZE	int
,	O
sizeof	O
(	O
wv	*(*(char))
[	O
0	int
]	O
)	O
)	O
;	O
wc	long
=	O
INIT_ARRAY_SIZE	int
;	O
}	O
else	O
{	O
if	O
(	O
incr	int
)	O
wc	long
+=	O
incr	int
;	O
else	O
{	O
size_t	long
newsize	long
=	O
wc	long
*	O
2	int
;	O
if	O
(	O
newsize	long
<	O
wc	long
)	O
return	O
ENOMEM	int
;	O
wc	long
=	O
newsize	long
;	O
}	O
wv	*(*(char))
=	O
realloc	(*(void),long)->(*(void))
(	O
wv	*(*(char))
,	O
sizeof	O
(	O
wv	*(*(char))
[	O
0	int
]	O
)	O
*	O
wc	long
)	O
;	O
}	O
if	O
(	O
!	O
wv	*(*(char))
)	O
return	O
ENOMEM	int
;	O
*	O
pwv	*(*(*(char)))
=	O
wv	*(*(char))
;	O
*	O
pwc	*(long)
=	O
wc	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
parse_param	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)),*(char),*(int),*(*(*(char))))->(int)
(	O
struct	O
mu_url_ctx	struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct),*(char),*(char),short,*(char),*(char),*(*(char)),int,*(*(char)),int,*(void),*((*(struct`))->(void)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(int))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int)))),long,*(char),long,long)
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
,	O
char	O
*	O
delim	int
,	O
int	O
*	O
pargc	*(int)
,	O
char	O
*	O
*	O
*	O
pargv	*(*(*(char)))
)	O
{	O
int	O
rc	int
;	O
size_t	long
wc	long
=	O
0	int
,	O
wn	long
=	O
0	int
;	O
char	O
*	O
*	O
wv	*(*(char))
=	O
NULL	O
;	O
while	O
(	O
(	O
rc	int
=	O
getkn	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)),*(char))->(int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
,	O
delim	int
)	O
)	O
==	O
0	int
)	O
{	O
if	O
(	O
wn	long
==	O
wc	long
)	O
{	O
rc	int
=	O
expand_array	(*(long),*(*(*(char))),int)->(int)
(	O
&	O
wc	long
,	O
&	O
wv	*(*(char))
,	O
0	int
)	O
;	O
if	O
(	O
rc	int
)	O
break	O
;	O
}	O
wv	*(*(char))
[	O
wn	long
]	O
=	O
strdup	(*(char))->(*(char))
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
tokbuf	*(char)
)	O
;	O
if	O
(	O
!	O
wv	*(*(char))
[	O
wn	long
]	O
)	O
{	O
rc	int
=	O
ENOMEM	int
;	O
break	O
;	O
}	O
wn	long
++	O
;	O
if	O
(	O
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
!=	O
delim	int
[	O
0	int
]	O
)	O
break	O
;	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
++	O
;	O
}	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
if	O
(	O
wn	long
==	O
wc	long
)	O
{	O
rc	int
=	O
expand_array	(*(long),*(*(*(char))),int)->(int)
(	O
&	O
wc	long
,	O
&	O
wv	*(*(char))
,	O
1	int
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_argcv_free	(long,*(*(char)))->(void)
(	O
wc	long
,	O
wv	*(*(char))
)	O
;	O
return	O
ENOMEM	int
;	O
}	O
wv	*(*(char))
[	O
wn	long
]	O
=	O
NULL	O
;	O
}	O
*	O
pargv	*(*(*(char)))
=	O
realloc	(*(void),long)->(*(void))
(	O
wv	*(*(char))
,	O
sizeof	O
(	O
wv	*(*(char))
[	O
0	int
]	O
)	O
*	O
(	O
wn	long
+	O
1	int
)	O
)	O
;	O
*	O
pargc	*(int)
=	O
wn	long
;	O
}	O
else	O
mu_argcv_free	(long,*(*(char)))->(void)
(	O
wc	long
,	O
wv	*(*(char))
)	O
;	O
return	O
rc	int
;	O
}	O
static	O
int	O
_mu_url_ctx_parse_query	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)))->(int)
(	O
struct	O
mu_url_ctx	struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct),*(char),*(char),short,*(char),*(char),*(*(char)),int,*(*(char)),int,*(void),*((*(struct`))->(void)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(int))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int)))),long,*(char),long,long)
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
)	O
{	O
int	O
rc	int
;	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
++	O
;	O
rc	int
=	O
parse_param	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)),*(char),*(int),*(*(*(char))))->(int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
,	O
"&"	*(char)
,	O
&	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
url	*(struct)
->	O
qargc	int
,	O
&	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
url	*(struct)
->	O
qargv	*(*(char))
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
&&	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
url	*(struct)
->	O
qargc	int
)	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
url	*(struct)
->	O
flags	int
|=	O
MU_URL_QUERY	int
;	O
return	O
rc	int
;	O
}	O
static	O
int	O
_mu_url_ctx_parse_param	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)))->(int)
(	O
struct	O
mu_url_ctx	struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct),*(char),*(char),short,*(char),*(char),*(*(char)),int,*(*(char)),int,*(void),*((*(struct`))->(void)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(int))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int)))),long,*(char),long,long)
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
)	O
{	O
int	O
rc	int
;	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
++	O
;	O
rc	int
=	O
parse_param	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)),*(char),*(int),*(*(*(char))))->(int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
,	O
";?"	*(char)
,	O
&	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
url	*(struct)
->	O
fvcount	int
,	O
&	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
url	*(struct)
->	O
fvpairs	*(*(char))
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
if	O
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
url	*(struct)
->	O
fvcount	int
)	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
url	*(struct)
->	O
flags	int
|=	O
MU_URL_PARAM	int
;	O
if	O
(	O
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
==	O
'?'	O
)	O
return	O
_mu_url_ctx_parse_query	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)))->(int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
str_assign	(*(*(char)),*(char))->(int)
(	O
char	O
*	O
*	O
ptr	*(*(char))
,	O
const	O
char	O
*	O
str	*(char)
)	O
{	O
*	O
ptr	*(*(char))
=	O
strdup	(*(char))->(*(char))
(	O
str	*(char)
)	O
;	O
if	O
(	O
!	O
*	O
ptr	*(*(char))
)	O
return	O
ENOMEM	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_mu_url_ctx_parse_path	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)))->(int)
(	O
struct	O
mu_url_ctx	struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct),*(char),*(char),short,*(char),*(char),*(*(char)),int,*(*(char)),int,*(void),*((*(struct`))->(void)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(int))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int)))),long,*(char),long,long)
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
)	O
{	O
int	O
rc	int
;	O
mu_url_t	*(struct)
url	*(struct)
=	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
url	*(struct)
;	O
rc	int
=	O
getkn	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)),*(char))->(int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
,	O
";?"	*(char)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
str_assign	(*(*(char)),*(char))->(int)
(	O
&	O
url	*(struct)
->	O
path	*(char)
,	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
tokbuf	*(char)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
url	*(struct)
->	O
flags	int
|=	O
MU_URL_PATH	int
;	O
if	O
(	O
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
==	O
';'	O
)	O
return	O
_mu_url_ctx_parse_param	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)))->(int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
)	O
;	O
if	O
(	O
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
==	O
'?'	O
)	O
return	O
_mu_url_ctx_parse_query	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)))->(int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_mu_url_ctx_parse_host	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)),int)->(int)
(	O
struct	O
mu_url_ctx	struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct),*(char),*(char),short,*(char),*(char),*(*(char)),int,*(*(char)),int,*(void),*((*(struct`))->(void)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(int))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int)))),long,*(char),long,long)
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
,	O
int	O
has_host	int
)	O
{	O
int	O
rc	int
;	O
mu_url_t	*(struct)
url	*(struct)
=	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
url	*(struct)
;	O
if	O
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
flags	int
&	O
MU_URL_PARSE_LOCAL	int
)	O
return	O
_mu_url_ctx_parse_path	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)))->(int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
)	O
;	O
rc	int
=	O
getkn	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)),*(char))->(int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
,	O
"[:/;?"	*(char)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
if	O
(	O
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
==	O
'['	O
)	O
{	O
rc	int
=	O
getkn	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)),*(char))->(int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
,	O
"]/;?"	*(char)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
if	O
(	O
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
==	O
']'	O
)	O
{	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
++	O
;	O
rc	int
=	O
str_assign	(*(*(char)),*(char))->(int)
(	O
&	O
url	*(struct)
->	O
host	*(*(char))
,	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
tokbuf	*(char)
+	O
1	int
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
url	*(struct)
->	O
flags	int
|=	O
MU_URL_HOST	int
|	O
MU_URL_IPV6	int
;	O
has_host	int
=	O
1	int
;	O
}	O
}	O
if	O
(	O
!	O
(	O
url	*(struct)
->	O
flags	int
&	O
MU_URL_HOST	int
)	O
&&	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
toklen	long
)	O
{	O
rc	int
=	O
str_assign	(*(*(char)),*(char))->(int)
(	O
&	O
url	*(struct)
->	O
host	*(*(char))
,	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
tokbuf	*(char)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
url	*(struct)
->	O
flags	int
|=	O
MU_URL_HOST	int
;	O
has_host	int
=	O
1	int
;	O
}	O
if	O
(	O
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
==	O
':'	O
)	O
{	O
has_host	int
=	O
1	int
;	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
++	O
;	O
rc	int
=	O
getkn	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)),*(char))->(int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
,	O
":/;?"	*(char)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
str_assign	(*(*(char)),*(char))->(int)
(	O
&	O
url	*(struct)
->	O
portstr	*(char)
,	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
tokbuf	*(char)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
url	*(struct)
->	O
flags	int
|=	O
MU_URL_PORT	int
;	O
}	O
if	O
(	O
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
==	O
'/'	O
)	O
{	O
if	O
(	O
has_host	int
)	O
{	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
++	O
;	O
if	O
(	O
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
==	O
0	int
)	O
{	O
rc	int
=	O
str_assign	(*(*(char)),*(char))->(int)
(	O
&	O
url	*(struct)
->	O
path	*(char)
,	O
""	*(char)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
url	*(struct)
->	O
flags	int
|=	O
MU_URL_PATH	int
;	O
return	O
rc	int
;	O
}	O
}	O
return	O
_mu_url_ctx_parse_path	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)))->(int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
)	O
;	O
}	O
if	O
(	O
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
==	O
';'	O
)	O
return	O
_mu_url_ctx_parse_param	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)))->(int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
)	O
;	O
if	O
(	O
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
==	O
'?'	O
)	O
return	O
_mu_url_ctx_parse_query	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)))->(int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_mu_url_ctx_parse_cred	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)))->(int)
(	O
struct	O
mu_url_ctx	struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct),*(char),*(char),short,*(char),*(char),*(*(char)),int,*(*(char)),int,*(void),*((*(struct`))->(void)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(int))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int)))),long,*(char),long,long)
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
)	O
{	O
int	O
rc	int
,	O
has_cred	int
;	O
mu_url_t	*(struct)
url	*(struct)
=	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
url	*(struct)
;	O
const	O
char	O
*	O
save	*(char)
=	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
;	O
if	O
(	O
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
==	O
0	int
)	O
return	O
0	int
;	O
rc	int
=	O
getkn	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)),*(char))->(int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
,	O
"@"	*(char)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
has_cred	int
=	O
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
==	O
'@'	O
;	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
=	O
save	*(char)
;	O
if	O
(	O
has_cred	int
)	O
{	O
rc	int
=	O
getkn	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)),*(char))->(int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
,	O
":;@"	*(char)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
if	O
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
toklen	long
)	O
{	O
rc	int
=	O
str_assign	(*(*(char)),*(char))->(int)
(	O
&	O
url	*(struct)
->	O
user	*(char)
,	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
tokbuf	*(char)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
url	*(struct)
->	O
flags	int
|=	O
MU_URL_USER	int
;	O
}	O
if	O
(	O
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
==	O
':'	O
)	O
{	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
++	O
;	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
passoff	long
=	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
-	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
input	*(char)
;	O
rc	int
=	O
getkn	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)),*(char))->(int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
,	O
";@"	*(char)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
if	O
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
toklen	long
)	O
{	O
if	O
(	O
mu_secret_create	(*(*(struct)),*(char),long)->(int)
(	O
&	O
url	*(struct)
->	O
secret	*(struct)
,	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
tokbuf	*(char)
,	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
toklen	long
)	O
)	O
return	O
ENOMEM	int
;	O
else	O
memset	(*(void),int,long)->(*(void))
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
tokbuf	*(char)
,	O
0	int
,	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
toklen	long
)	O
;	O
url	*(struct)
->	O
flags	int
|=	O
MU_URL_SECRET	int
;	O
}	O
}	O
if	O
(	O
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
==	O
';'	O
)	O
{	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
++	O
;	O
rc	int
=	O
getkn	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)),*(char))->(int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
,	O
"@"	*(char)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
if	O
(	O
mu_c_strncasecmp	(*(char),*(char),long)->(int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
tokbuf	*(char)
,	O
"auth="	*(char)
,	O
5	int
)	O
==	O
0	int
)	O
{	O
rc	int
=	O
str_assign	(*(*(char)),*(char))->(int)
(	O
&	O
url	*(struct)
->	O
auth	*(char)
,	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
tokbuf	*(char)
+	O
5	int
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
url	*(struct)
->	O
flags	int
|=	O
MU_URL_AUTH	int
;	O
}	O
}	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
++	O
;	O
}	O
return	O
_mu_url_ctx_parse_host	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)),int)->(int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
,	O
has_cred	int
)	O
;	O
}	O
int	O
_mu_url_ctx_parse	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)))->(int)
(	O
struct	O
mu_url_ctx	struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct),*(char),*(char),short,*(char),*(char),*(*(char)),int,*(*(char)),int,*(void),*((*(struct`))->(void)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(int))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int)))),long,*(char),long,long)
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
)	O
{	O
int	O
rc	int
;	O
mu_url_t	*(struct)
url	*(struct)
=	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
url	*(struct)
;	O
const	O
char	O
*	O
save	*(char)
=	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
;	O
if	O
(	O
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
==	O
':'	O
)	O
return	O
_mu_url_ctx_parse_cred	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)))->(int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
)	O
;	O
rc	int
=	O
getkn	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)),*(char))->(int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
,	O
":/"	*(char)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
if	O
(	O
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
==	O
':'	O
&&	O
(	O
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
flags	int
&	O
MU_URL_PARSE_DSLASH_OPTIONAL	int
)	O
||	O
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
[	O
1	int
]	O
==	O
'/'	O
&&	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
[	O
2	int
]	O
==	O
'/'	O
)	O
)	O
)	O
{	O
rc	int
=	O
str_assign	(*(*(char)),*(char))->(int)
(	O
&	O
url	*(struct)
->	O
scheme	*(char)
,	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
tokbuf	*(char)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
url	*(struct)
->	O
flags	int
|=	O
MU_URL_SCHEME	int
;	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
++	O
;	O
}	O
else	O
{	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
=	O
save	*(char)
;	O
return	O
_mu_url_ctx_parse_cred	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)))->(int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
)	O
;	O
}	O
if	O
(	O
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
==	O
0	int
)	O
return	O
0	int
;	O
if	O
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
[	O
0	int
]	O
==	O
'/'	O
&&	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
[	O
1	int
]	O
==	O
'/'	O
)	O
{	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
cur	*(char)
+=	O
2	int
;	O
return	O
_mu_url_ctx_parse_cred	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)))->(int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
)	O
;	O
}	O
return	O
_mu_url_ctx_parse_path	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)))->(int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
)	O
;	O
}	O
static	O
int	O
_mu_url_create_internal	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)),*(struct(int,*(char),*(char),*(char),*(struct),*(char),*(char),short,*(char),*(char),*(*(char)),int,*(*(char)),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))))->(int)
(	O
struct	O
mu_url_ctx	struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct),*(char),*(char),short,*(char),*(char),*(*(char)),int,*(*(char)),int,*(void),*((*(struct`))->(void)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(int))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int)))),long,*(char),long,long)
*	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
,	O
mu_url_t	*(struct)
hint	*(struct)
)	O
{	O
int	O
rc	int
=	O
0	int
;	O
mu_url_t	*(struct)
url	*(struct)
=	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
url	*(struct)
;	O
const	O
char	O
*	O
scheme	*(char)
=	O
NULL	O
;	O
if	O
(	O
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
flags	int
&	O
MU_URL_PARSE_PIPE	int
)	O
&&	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
input	*(char)
[	O
0	int
]	O
==	O
'|'	O
)	O
{	O
struct	O
mu_wordsplit	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
;	O
size_t	long
i	long
;	O
scheme	*(char)
=	O
"prog"	*(char)
;	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
flags	int
&=	O
~	O
MU_URL_PARSE_HEXCODE	int
;	O
if	O
(	O
mu_wordsplit	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
input	*(char)
+	O
1	int
,	O
&	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
,	O
MU_WRDSF_DEFFLAGS	O
)	O
)	O
return	O
errno	O
;	O
url	*(struct)
->	O
path	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
0	int
]	O
)	O
;	O
if	O
(	O
!	O
url	*(struct)
->	O
path	*(char)
)	O
{	O
mu_wordsplit_free	(*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)))->(void)
(	O
&	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
)	O
;	O
return	O
ENOMEM	int
;	O
}	O
url	*(struct)
->	O
flags	int
|=	O
MU_URL_PATH	int
;	O
url	*(struct)
->	O
qargc	int
=	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordc	long
-	O
1	int
;	O
url	*(struct)
->	O
qargv	*(*(char))
=	O
calloc	(long,long)->(*(void))
(	O
url	*(struct)
->	O
qargc	int
+	O
1	int
,	O
sizeof	O
(	O
url	*(struct)
->	O
qargv	*(*(char))
[	O
0	int
]	O
)	O
)	O
;	O
if	O
(	O
!	O
url	*(struct)
->	O
qargv	*(*(char))
)	O
{	O
mu_wordsplit_free	(*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)))->(void)
(	O
&	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
)	O
;	O
return	O
ENOMEM	int
;	O
}	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
url	*(struct)
->	O
qargc	int
;	O
i	long
++	O
)	O
url	*(struct)
->	O
qargv	*(*(char))
[	O
i	long
]	O
=	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
i	long
+	O
1	int
]	O
;	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordc	long
=	O
0	int
;	O
mu_wordsplit_free	(*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)))->(void)
(	O
&	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
)	O
;	O
url	*(struct)
->	O
flags	int
|=	O
MU_URL_QUERY	int
;	O
}	O
else	O
if	O
(	O
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
flags	int
&	O
MU_URL_PARSE_SLASH	int
)	O
&&	O
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
input	*(char)
[	O
0	int
]	O
==	O
'/'	O
||	O
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
input	*(char)
[	O
0	int
]	O
==	O
'.'	O
&&	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
input	*(char)
[	O
1	int
]	O
==	O
'/'	O
)	O
)	O
)	O
{	O
scheme	*(char)
=	O
"file"	*(char)
;	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
flags	int
&=	O
~	O
MU_URL_PARSE_HEXCODE	int
;	O
rc	int
=	O
str_assign	(*(*(char)),*(char))->(int)
(	O
&	O
url	*(struct)
->	O
path	*(char)
,	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
input	*(char)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
url	*(struct)
->	O
flags	int
|=	O
MU_URL_PATH	int
;	O
}	O
else	O
{	O
if	O
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
flags	int
&	O
MU_URL_PARSE_LOCAL	int
)	O
scheme	*(char)
=	O
"file"	*(char)
;	O
rc	int
=	O
_mu_url_ctx_parse	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)))->(int)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
)	O
;	O
}	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
if	O
(	O
hint	*(struct)
)	O
{	O
rc	int
=	O
mu_url_copy_hints	(*(struct),*(struct))->(int)
(	O
url	*(struct)
,	O
hint	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
}	O
if	O
(	O
!	O
(	O
url	*(struct)
->	O
flags	int
&	O
MU_URL_SCHEME	int
)	O
)	O
{	O
if	O
(	O
scheme	*(char)
)	O
{	O
rc	int
=	O
str_assign	(*(*(char)),*(char))->(int)
(	O
&	O
url	*(struct)
->	O
scheme	*(char)
,	O
scheme	*(char)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
url	*(struct)
->	O
flags	int
|=	O
MU_URL_SCHEME	int
;	O
}	O
else	O
return	O
MU_ERR_URL_MISS_PARTS	O
;	O
}	O
mu_strlower	(*(char))->(int)
(	O
url	*(struct)
->	O
scheme	*(char)
)	O
;	O
if	O
(	O
(	O
url	*(struct)
->	O
flags	int
&	O
MU_URL_PORT	int
)	O
&&	O
url	*(struct)
->	O
port	int
==	O
0	int
)	O
{	O
unsigned	O
long	O
n	long
;	O
char	O
*	O
p	*(char)
;	O
n	long
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
url	*(struct)
->	O
portstr	*(char)
,	O
&	O
p	*(char)
,	O
10	int
)	O
;	O
if	O
(	O
*	O
p	*(char)
)	O
{	O
if	O
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
flags	int
&	O
MU_URL_PARSE_PORTSRV	int
)	O
{	O
struct	O
servent	struct(*(char),*(*(char)),int,*(char))
*	O
sp	*(struct(*(char),*(*(char)),int,*(char)))
=	O
getservbyname	(*(char),*(char))->(*(struct(*(char),*(*(char)),int,*(char))))
(	O
url	*(struct)
->	O
portstr	*(char)
,	O
"tcp"	*(char)
)	O
;	O
if	O
(	O
!	O
sp	*(struct(*(char),*(*(char)),int,*(char)))
)	O
return	O
MU_ERR_TCP_NO_PORT	O
;	O
url	*(struct)
->	O
port	int
=	O
ntohs	(short)->(short)
(	O
sp	*(struct(*(char),*(*(char)),int,*(char)))
->	O
s_port	int
)	O
;	O
}	O
else	O
return	O
MU_ERR_TCP_NO_PORT	O
;	O
}	O
else	O
if	O
(	O
n	long
>	O
USHRT_MAX	O
)	O
return	O
ERANGE	int
;	O
else	O
url	*(struct)
->	O
port	int
=	O
n	long
;	O
}	O
if	O
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
flags	int
&	O
MU_URL_PARSE_HEXCODE	int
)	O
{	O
rc	int
=	O
mu_url_decode	(*(struct))->(int)
(	O
url	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
}	O
if	O
(	O
(	O
url	*(struct)
->	O
flags	int
&	O
MU_URL_SECRET	int
)	O
&&	O
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
flags	int
&	O
MU_URL_PARSE_HIDEPASS	int
)	O
)	O
{	O
size_t	long
plen	*(long)
=	O
mu_secret_length	(*(struct))->(long)
(	O
url	*(struct)
->	O
secret	*(struct)
)	O
;	O
size_t	long
nlen	long
=	O
strlen	(*(char))->(long)
(	O
url	*(struct)
->	O
name	*(char)
)	O
;	O
size_t	long
len	long
=	O
nlen	long
-	O
plen	*(long)
+	O
PASS_REPL_LEN	O
+	O
1	int
;	O
char	O
*	O
newname	*(char)
;	O
memset	(*(void),int,long)->(*(void))
(	O
url	*(struct)
->	O
name	*(char)
+	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
passoff	long
,	O
0	int
,	O
plen	*(long)
)	O
;	O
if	O
(	O
len	long
>	O
nlen	long
+	O
1	int
)	O
{	O
newname	*(char)
=	O
realloc	(*(void),long)->(*(void))
(	O
url	*(struct)
->	O
name	*(char)
,	O
len	long
)	O
;	O
if	O
(	O
!	O
newname	*(char)
)	O
return	O
rc	int
;	O
url	*(struct)
->	O
name	*(char)
=	O
newname	*(char)
;	O
}	O
else	O
newname	*(char)
=	O
url	*(struct)
->	O
name	*(char)
;	O
memmove	(*(void),*(void),long)->(*(void))
(	O
newname	*(char)
+	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
passoff	long
+	O
PASS_REPL_LEN	O
,	O
newname	*(char)
+	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
passoff	long
+	O
plen	*(long)
,	O
nlen	long
-	O
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
passoff	long
+	O
plen	*(long)
)	O
+	O
1	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
newname	*(char)
+	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
->	O
passoff	long
,	O
PASS_REPL	*(char)
,	O
PASS_REPL_LEN	O
)	O
;	O
}	O
return	O
0	int
;	O
}	O
int	O
mu_url_create_hint	(*(*(struct)),*(char),int,*(struct))->(int)
(	O
mu_url_t	*(struct)
*	O
purl	*(*(struct))
,	O
const	O
char	O
*	O
str	*(char)
,	O
int	O
flags	int
,	O
mu_url_t	*(struct)
hint	*(struct)
)	O
{	O
int	O
rc	int
;	O
struct	O
mu_url_ctx	struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct),*(char),*(char),short,*(char),*(char),*(*(char)),int,*(*(char)),int,*(void),*((*(struct`))->(void)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(int))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int)))),long,*(char),long,long)
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
;	O
mu_url_t	*(struct)
url	*(struct)
;	O
if	O
(	O
!	O
purl	*(*(struct))
)	O
return	O
EINVAL	int
;	O
url	*(struct)
=	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
*	O
url	*(struct)
)	O
)	O
;	O
if	O
(	O
url	*(struct)
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
url	*(struct)
->	O
name	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
str	*(char)
)	O
;	O
if	O
(	O
!	O
url	*(struct)
->	O
name	*(char)
)	O
{	O
free	(*(void))->(void)
(	O
url	*(struct)
)	O
;	O
return	O
ENOMEM	int
;	O
}	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
,	O
0	int
,	O
sizeof	O
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
)	O
)	O
;	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
.	O
flags	int
=	O
flags	int
;	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
.	O
input	*(char)
=	O
str	*(char)
;	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
.	O
cur	*(char)
=	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
.	O
input	*(char)
;	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
.	O
url	*(struct)
=	O
url	*(struct)
;	O
rc	int
=	O
_mu_url_create_internal	(*(struct(int,*(char),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*(char),long,long)),*(struct(int,*(char),*(char),*(char),*(struct),*(char),*(char),short,*(char),*(char),*(*(char)),int,*(*(char)),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))))->(int)
(	O
&	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
,	O
hint	*(struct)
)	O
;	O
free	(*(void))->(void)
(	O
ctx	*(struct(int,*(char),*(char),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),long,*(char),long,long))
.	O
tokbuf	*(char)
)	O
;	O
if	O
(	O
rc	int
)	O
mu_url_destroy	(*(*(struct)))->(void)
(	O
&	O
url	*(struct)
)	O
;	O
else	O
*	O
purl	*(*(struct))
=	O
url	*(struct)
;	O
return	O
rc	int
;	O
}	O
int	O
mu_url_create	(*(*(struct)),*(char))->(int)
(	O
mu_url_t	*(struct)
*	O
purl	*(*(struct))
,	O
const	O
char	O
*	O
str	*(char)
)	O
{	O
return	O
mu_url_create_hint	(*(*(struct)),*(char),int,*(struct))->(int)
(	O
purl	*(*(struct))
,	O
str	*(char)
,	O
MU_URL_PARSE_HEXCODE	int
|	O
MU_URL_PARSE_HIDEPASS	int
|	O
MU_URL_PARSE_PORTSRV	int
|	O
MU_URL_PARSE_PIPE	int
|	O
MU_URL_PARSE_SLASH	int
|	O
MU_URL_PARSE_DSLASH_OPTIONAL	int
,	O
NULL	O
)	O
;	O
}	O
