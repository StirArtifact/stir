void	O
miFillPolygon_internal	O
(	O
miPaintedSet	struct
*	O
paintedSet	*(struct)
,	O
const	O
miGC	struct
*	O
pGC	*(struct)
,	O
miPolygonShape	enum(int,int)
shape	enum(int,int)
,	O
miCoordMode	enum(int,int)
mode	enum(int,int)
,	O
int	O
count	int
,	O
const	O
miPoint	struct(int,int)
*	O
pPts	*(struct(int,int))
)	O
{	O
miPoint	struct(int,int)
*	O
ppt	*(struct(int,int))
=	O
(	O
miPoint	struct(int,int)
*	O
)	O
NULL	O
;	O
const	O
miPoint	struct(int,int)
*	O
q	*(struct(int,int))
;	O
if	O
(	O
count	int
<=	O
0	int
)	O
return	O
;	O
if	O
(	O
mode	enum(int,int)
==	O
MI_COORD_MODE_PREVIOUS	int
)	O
{	O
int	O
i	int
;	O
ppt	*(struct(int,int))
=	O
(	O
miPoint	struct(int,int)
*	O
)	O
mi_xmalloc	O
(	O
count	int
*	O
sizeof	O
(	O
miPoint	struct(int,int)
)	O
)	O
;	O
ppt	*(struct(int,int))
[	O
0	int
]	O
=	O
pPts	*(struct(int,int))
[	O
0	int
]	O
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
count	int
;	O
i	int
++	O
)	O
{	O
ppt	*(struct(int,int))
[	O
i	int
]	O
.	O
x	int
=	O
ppt	*(struct(int,int))
[	O
i	int
-	O
1	int
]	O
.	O
x	int
+	O
pPts	*(struct(int,int))
[	O
i	int
]	O
.	O
x	int
;	O
ppt	*(struct(int,int))
[	O
i	int
]	O
.	O
y	int
=	O
ppt	*(struct(int,int))
[	O
i	int
-	O
1	int
]	O
.	O
y	int
+	O
pPts	*(struct(int,int))
[	O
i	int
]	O
.	O
y	int
;	O
}	O
q	*(struct(int,int))
=	O
ppt	*(struct(int,int))
;	O
}	O
else	O
q	*(struct(int,int))
=	O
pPts	*(struct(int,int))
;	O
switch	O
(	O
(	O
int	O
)	O
shape	enum(int,int)
)	O
{	O
case	O
(	O
int	O
)	O
MI_SHAPE_GENERAL	int
:	O
default	O
:	O
miFillGeneralPoly	O
(	O
paintedSet	*(struct)
,	O
pGC	*(struct)
,	O
count	int
,	O
q	*(struct(int,int))
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
MI_SHAPE_CONVEX	int
:	O
miFillConvexPoly	O
(	O
paintedSet	*(struct)
,	O
pGC	*(struct)
,	O
count	int
,	O
q	*(struct(int,int))
)	O
;	O
break	O
;	O
}	O
if	O
(	O
mode	enum(int,int)
==	O
MI_COORD_MODE_PREVIOUS	int
)	O
free	(*(void))->(void)
(	O
ppt	*(struct(int,int))
)	O
;	O
}	O
