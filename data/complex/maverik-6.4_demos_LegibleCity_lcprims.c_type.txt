int	O
mav_characterDraw	(*(int),*(int))->(int)
(	O
MAV_object	O
*	O
obj	*(int)
,	O
MAV_drawInfo	O
*	O
di	*(int)
)	O
{	O
Character	struct(*(struct(float,int,int,*(struct(int,int,*`)))),int,*(int),int)
*	O
c	*(struct(*(struct(float,int,int,*(struct`))),int,*(int),int))
=	O
(	O
Character	struct(*(struct(float,int,int,*(struct(int,int,*`)))),int,*(int),int)
*	O
)	O
mav_objectDataGet	()->(int)
(	O
obj	*(int)
)	O
;	O
MAV_vector	O
dr	O
;	O
float	O
dist	float
;	O
int	O
i	int
,	O
j	int
;	O
dr	O
=	O
mav_vectorSub	()->(int)
(	O
c	*(struct(*(struct(float,int,int,*(struct`))),int,*(int),int))
->	O
centre	int
,	O
mav_win_current	O
->	O
vp	O
->	O
eye	O
)	O
;	O
dist	float
=	O
sqrt	O
(	O
mav_vectorDotProduct	()->(int)
(	O
dr	O
,	O
dr	O
)	O
)	O
;	O
if	O
(	O
apply_lod	int
)	O
{	O
if	O
(	O
dist	float
<	O
fog_distance	float
)	O
{	O
mav_surfaceParamsUse	()->(int)
(	O
c	*(struct(*(struct(float,int,int,*(struct`))),int,*(int),int))
->	O
sp	*(int)
)	O
;	O
mav_gfxMatrixPush	()->(int)
(	O
)	O
;	O
mav_gfxMatrixMult	()->(int)
(	O
c	*(struct(*(struct(float,int,int,*(struct`))),int,*(int),int))
->	O
matrix	int
)	O
;	O
if	O
(	O
dist	float
<	O
box_distance	float
)	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
c	*(struct(*(struct(float,int,int,*(struct`))),int,*(int),int))
->	O
character	*(struct(float,int,int,*(struct(int,int,*(int)))))
->	O
num_polys	int
;	O
i	int
++	O
)	O
{	O
mav_gfxPolygonBegin	()->(int)
(	O
)	O
;	O
mav_gfxNormal	()->(int)
(	O
c	*(struct(*(struct(float,int,int,*(struct`))),int,*(int),int))
->	O
character	*(struct(float,int,int,*(struct(int,int,*(int)))))
->	O
polys	*(struct(int,int,*(int)))
[	O
i	int
]	O
.	O
normal	int
)	O
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
c	*(struct(*(struct(float,int,int,*(struct`))),int,*(int),int))
->	O
character	*(struct(float,int,int,*(struct(int,int,*(int)))))
->	O
polys	*(struct(int,int,*(int)))
[	O
i	int
]	O
.	O
num_verts	int
;	O
j	int
++	O
)	O
mav_gfxVertex	()->(int)
(	O
c	*(struct(*(struct(float,int,int,*(struct`))),int,*(int),int))
->	O
character	*(struct(float,int,int,*(struct(int,int,*(int)))))
->	O
polys	*(struct(int,int,*(int)))
[	O
i	int
]	O
.	O
verts	*(int)
[	O
j	int
]	O
)	O
;	O
mav_gfxPolygonEnd	()->(int)
(	O
)	O
;	O
}	O
}	O
else	O
{	O
mav_BBDisplayWithSurfaceParams	()->(int)
(	O
mav_win_current	O
,	O
c	*(struct(*(struct(float,int,int,*(struct`))),int,*(int),int))
->	O
character	*(struct(float,int,int,*(struct(int,int,*(int)))))
->	O
bb	int
,	O
c	*(struct(*(struct(float,int,int,*(struct`))),int,*(int),int))
->	O
sp	*(int)
)	O
;	O
}	O
mav_gfxMatrixPop	()->(int)
(	O
)	O
;	O
}	O
}	O
else	O
{	O
mav_surfaceParamsUse	()->(int)
(	O
c	*(struct(*(struct(float,int,int,*(struct`))),int,*(int),int))
->	O
sp	*(int)
)	O
;	O
mav_gfxMatrixPush	()->(int)
(	O
)	O
;	O
mav_gfxMatrixMult	()->(int)
(	O
c	*(struct(*(struct(float,int,int,*(struct`))),int,*(int),int))
->	O
matrix	int
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
c	*(struct(*(struct(float,int,int,*(struct`))),int,*(int),int))
->	O
character	*(struct(float,int,int,*(struct(int,int,*(int)))))
->	O
num_polys	int
;	O
i	int
++	O
)	O
{	O
mav_gfxPolygonBegin	()->(int)
(	O
)	O
;	O
mav_gfxNormal	()->(int)
(	O
c	*(struct(*(struct(float,int,int,*(struct`))),int,*(int),int))
->	O
character	*(struct(float,int,int,*(struct(int,int,*(int)))))
->	O
polys	*(struct(int,int,*(int)))
[	O
i	int
]	O
.	O
normal	int
)	O
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
c	*(struct(*(struct(float,int,int,*(struct`))),int,*(int),int))
->	O
character	*(struct(float,int,int,*(struct(int,int,*(int)))))
->	O
polys	*(struct(int,int,*(int)))
[	O
i	int
]	O
.	O
num_verts	int
;	O
j	int
++	O
)	O
mav_gfxVertex	()->(int)
(	O
c	*(struct(*(struct(float,int,int,*(struct`))),int,*(int),int))
->	O
character	*(struct(float,int,int,*(struct(int,int,*(int)))))
->	O
polys	*(struct(int,int,*(int)))
[	O
i	int
]	O
.	O
verts	*(int)
[	O
j	int
]	O
)	O
;	O
mav_gfxPolygonEnd	()->(int)
(	O
)	O
;	O
}	O
mav_gfxMatrixPop	()->(int)
(	O
)	O
;	O
}	O
return	O
1	int
;	O
}	O
int	O
mav_characterBBox	(*(int),*(int))->(int)
(	O
MAV_object	O
*	O
obj	*(int)
,	O
MAV_BB	O
*	O
bb	int
)	O
{	O
Character	struct(*(struct(float,int,int,*(struct(int,int,*`)))),int,*(int),int)
*	O
c	*(struct(*(struct(float,int,int,*(struct`))),int,*(int),int))
=	O
(	O
Character	struct(*(struct(float,int,int,*(struct(int,int,*`)))),int,*(int),int)
*	O
)	O
mav_objectDataGet	()->(int)
(	O
obj	*(int)
)	O
;	O
mav_BBAlign	()->(int)
(	O
c	*(struct(*(struct(float,int,int,*(struct`))),int,*(int),int))
->	O
character	*(struct(float,int,int,*(struct(int,int,*(int)))))
->	O
bb	int
,	O
c	*(struct(*(struct(float,int,int,*(struct`))),int,*(int),int))
->	O
matrix	int
,	O
bb	int
)	O
;	O
return	O
1	int
;	O
}	O
int	O
mav_featureDraw	(*(int),*(int))->(int)
(	O
MAV_object	O
*	O
obj	*(int)
,	O
MAV_drawInfo	O
*	O
di	*(int)
)	O
{	O
Feature	struct(int,*(struct(int,int,*(int))),int,*(int),int)
*	O
f	*(struct(int,*(struct(int,int,*(int))),int,*(int),int))
=	O
(	O
Feature	struct(int,*(struct(int,int,*(int))),int,*(int),int)
*	O
)	O
mav_objectDataGet	()->(int)
(	O
obj	*(int)
)	O
;	O
int	O
i	int
,	O
j	int
;	O
mav_surfaceParamsUse	()->(int)
(	O
f	*(struct(int,*(struct(int,int,*(int))),int,*(int),int))
->	O
sp	*(int)
)	O
;	O
mav_gfxMatrixPush	()->(int)
(	O
)	O
;	O
mav_gfxMatrixMult	()->(int)
(	O
f	*(struct(int,*(struct(int,int,*(int))),int,*(int),int))
->	O
matrix	int
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
f	*(struct(int,*(struct(int,int,*(int))),int,*(int),int))
->	O
num_polys	int
;	O
i	int
++	O
)	O
{	O
mav_gfxPolygonBegin	()->(int)
(	O
)	O
;	O
mav_gfxNormal	()->(int)
(	O
f	*(struct(int,*(struct(int,int,*(int))),int,*(int),int))
->	O
polys	*(struct(int,int,*(int)))
[	O
i	int
]	O
.	O
normal	int
)	O
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
f	*(struct(int,*(struct(int,int,*(int))),int,*(int),int))
->	O
polys	*(struct(int,int,*(int)))
[	O
i	int
]	O
.	O
num_verts	int
;	O
j	int
++	O
)	O
mav_gfxVertex	()->(int)
(	O
f	*(struct(int,*(struct(int,int,*(int))),int,*(int),int))
->	O
polys	*(struct(int,int,*(int)))
[	O
i	int
]	O
.	O
verts	*(int)
[	O
j	int
]	O
)	O
;	O
mav_gfxPolygonEnd	()->(int)
(	O
)	O
;	O
}	O
mav_gfxMatrixPop	()->(int)
(	O
)	O
;	O
return	O
1	int
;	O
}	O
int	O
mav_featureBBox	(*(int),*(int))->(int)
(	O
MAV_object	O
*	O
obj	*(int)
,	O
MAV_BB	O
*	O
bb	int
)	O
{	O
Feature	struct(int,*(struct(int,int,*(int))),int,*(int),int)
*	O
f	*(struct(int,*(struct(int,int,*(int))),int,*(int),int))
=	O
(	O
Feature	struct(int,*(struct(int,int,*(int))),int,*(int),int)
*	O
)	O
mav_objectDataGet	()->(int)
(	O
obj	*(int)
)	O
;	O
mav_BBAlign	()->(int)
(	O
f	*(struct(int,*(struct(int,int,*(int))),int,*(int),int))
->	O
bb	int
,	O
f	*(struct(int,*(struct(int,int,*(int))),int,*(int),int))
->	O
matrix	int
,	O
bb	int
)	O
;	O
return	O
1	int
;	O
}	O
int	O
mav_vectorDraw	(*(int),*(int))->(int)
(	O
MAV_object	O
*	O
obj	*(int)
,	O
MAV_drawInfo	O
*	O
di	*(int)
)	O
{	O
Vector	struct(array(char),float,float,int,int,int,int,*(int),int,*(struct(array(char),float,float,int,int,int,int,*(int),int,*(struct(array(char),float,float,int,int,int,int,*`,int,*`)))))
*	O
v	*(struct(array(char),float,float,int,int,int,int,*(int),int,*(struct(array(char),float,float,int,int,int,int,*(int),int,*(struct`)))))
=	O
(	O
Vector	struct(array(char),float,float,int,int,int,int,*(int),int,*(struct(array(char),float,float,int,int,int,int,*(int),int,*(struct(array(char),float,float,int,int,int,int,*`,int,*`)))))
*	O
)	O
mav_objectDataGet	()->(int)
(	O
obj	*(int)
)	O
;	O
mav_surfaceParamsUse	()->(int)
(	O
v	*(struct(array(char),float,float,int,int,int,int,*(int),int,*(struct(array(char),float,float,int,int,int,int,*(int),int,*(struct`)))))
->	O
sp	*(int)
)	O
;	O
mav_gfxMatrixPush	()->(int)
(	O
)	O
;	O
mav_gfxMatrixMult	()->(int)
(	O
v	*(struct(array(char),float,float,int,int,int,int,*(int),int,*(struct(array(char),float,float,int,int,int,int,*(int),int,*(struct`)))))
->	O
matrix	int
)	O
;	O
mav_gfxLineBegin	()->(int)
(	O
)	O
;	O
mav_gfxVertex	()->(int)
(	O
v	*(struct(array(char),float,float,int,int,int,int,*(int),int,*(struct(array(char),float,float,int,int,int,int,*(int),int,*(struct`)))))
->	O
start	int
)	O
;	O
mav_gfxVertex	()->(int)
(	O
v	*(struct(array(char),float,float,int,int,int,int,*(int),int,*(struct(array(char),float,float,int,int,int,int,*(int),int,*(struct`)))))
->	O
end	int
)	O
;	O
mav_gfxLineEnd	()->(int)
(	O
)	O
;	O
mav_gfxMatrixPop	()->(int)
(	O
)	O
;	O
return	O
1	int
;	O
}	O
int	O
mav_vectorBBox	(*(int),*(int))->(int)
(	O
MAV_object	O
*	O
obj	*(int)
,	O
MAV_BB	O
*	O
bb	int
)	O
{	O
Vector	struct(array(char),float,float,int,int,int,int,*(int),int,*(struct(array(char),float,float,int,int,int,int,*(int),int,*(struct(array(char),float,float,int,int,int,int,*`,int,*`)))))
*	O
v	*(struct(array(char),float,float,int,int,int,int,*(int),int,*(struct(array(char),float,float,int,int,int,int,*(int),int,*(struct`)))))
=	O
(	O
Vector	struct(array(char),float,float,int,int,int,int,*(int),int,*(struct(array(char),float,float,int,int,int,int,*(int),int,*(struct(array(char),float,float,int,int,int,int,*`,int,*`)))))
*	O
)	O
mav_objectDataGet	()->(int)
(	O
obj	*(int)
)	O
;	O
mav_BBAlign	()->(int)
(	O
v	*(struct(array(char),float,float,int,int,int,int,*(int),int,*(struct(array(char),float,float,int,int,int,int,*(int),int,*(struct`)))))
->	O
bb	int
,	O
v	*(struct(array(char),float,float,int,int,int,int,*(int),int,*(struct(array(char),float,float,int,int,int,int,*(int),int,*(struct`)))))
->	O
matrix	int
,	O
bb	int
)	O
;	O
return	O
1	int
;	O
}	O
