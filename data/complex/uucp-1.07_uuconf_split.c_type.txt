const	O
char	O
_uuconf_split_rcsid	array(char)
[	O
]	O
=	O
"$Id: split.c,v 1.6 2002/03/05 19:10:42 ian Rel $"	*(char)
;	O
int	O
_uuconf_istrsplit	(*(char),int,*(*(*(char))),*(long))->(int)
(	O
zline	*(char)
,	O
bsep	int
,	O
ppzsplit	*(*(*(char)))
,	O
pcsplit	*(long)
)	O
register	O
char	O
*	O
zline	*(char)
;	O
int	O
bsep	int
;	O
char	O
*	O
*	O
*	O
ppzsplit	*(*(*(char)))
;	O
size_t	long
*	O
pcsplit	*(long)
;	O
{	O
size_t	long
i	long
;	O
i	long
=	O
0	int
;	O
while	O
(	O
TRUE	O
)	O
{	O
if	O
(	O
bsep	int
==	O
'\0'	O
)	O
{	O
while	O
(	O
isspace	(int)->(int)
(	O
BUCHAR	O
(	O
*	O
zline	*(char)
)	O
)	O
)	O
++	O
zline	*(char)
;	O
if	O
(	O
*	O
zline	*(char)
==	O
'\0'	O
)	O
break	O
;	O
}	O
if	O
(	O
i	long
>=	O
*	O
pcsplit	*(long)
)	O
{	O
char	O
*	O
*	O
pznew	*(*(char))
;	O
size_t	long
cnew	long
;	O
if	O
(	O
*	O
pcsplit	*(long)
==	O
0	int
)	O
{	O
cnew	long
=	O
8	int
;	O
pznew	*(*(char))
=	O
(	O
char	O
*	O
*	O
)	O
malloc	(long)->(*(void))
(	O
cnew	long
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
}	O
else	O
{	O
cnew	long
=	O
*	O
pcsplit	*(long)
*	O
2	int
;	O
pznew	*(*(char))
=	O
(	O
char	O
*	O
*	O
)	O
realloc	(*(void),long)->(*(void))
(	O
(	O
pointer	*(void)
)	O
*	O
ppzsplit	*(*(*(char)))
,	O
cnew	long
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
}	O
if	O
(	O
pznew	*(*(char))
==	O
NULL	O
)	O
return	O
-	O
1	int
;	O
*	O
ppzsplit	*(*(*(char)))
=	O
pznew	*(*(char))
;	O
*	O
pcsplit	*(long)
=	O
cnew	long
;	O
}	O
(	O
*	O
ppzsplit	*(*(*(char)))
)	O
[	O
i	long
]	O
=	O
zline	*(char)
;	O
++	O
i	long
;	O
if	O
(	O
bsep	int
==	O
'\0'	O
)	O
{	O
while	O
(	O
*	O
zline	*(char)
!=	O
'\0'	O
&&	O
!	O
isspace	(int)->(int)
(	O
BUCHAR	O
(	O
*	O
zline	*(char)
)	O
)	O
)	O
++	O
zline	*(char)
;	O
}	O
else	O
{	O
while	O
(	O
*	O
zline	*(char)
!=	O
'\0'	O
&&	O
*	O
zline	*(char)
!=	O
bsep	int
)	O
++	O
zline	*(char)
;	O
}	O
if	O
(	O
*	O
zline	*(char)
==	O
'\0'	O
)	O
break	O
;	O
*	O
zline	*(char)
++	O
=	O
'\0'	O
;	O
}	O
return	O
i	long
;	O
}	O
