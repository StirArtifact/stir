void	O
mpn_toom8h_mul	O
(	O
mp_ptr	*(long)
pp	*(long)
,	O
mp_srcptr	*(long)
ap	*(long)
,	O
mp_size_t	long
an	long
,	O
mp_srcptr	*(long)
bp	*(long)
,	O
mp_size_t	long
bn	long
,	O
mp_ptr	*(long)
scratch	*(long)
)	O
{	O
mp_size_t	long
n	long
,	O
s	array(char)
,	O
t	long
;	O
int	O
p	*(char)
,	O
q	int
,	O
half	int
;	O
int	O
sign	char
;	O
ASSERT	O
(	O
an	long
>=	O
bn	long
)	O
;	O
ASSERT	O
(	O
bn	long
>=	O
86	int
)	O
;	O
ASSERT	O
(	O
an	long
<=	O
bn	long
*	O
4	int
)	O
;	O
ASSERT	O
(	O
GMP_NUMB_BITS	O
>	O
11	int
*	O
3	int
||	O
an	long
*	O
4	int
<=	O
bn	long
*	O
11	int
)	O
;	O
ASSERT	O
(	O
GMP_NUMB_BITS	O
>	O
10	int
*	O
3	int
||	O
an	long
*	O
1	int
<=	O
bn	long
*	O
2	int
)	O
;	O
ASSERT	O
(	O
GMP_NUMB_BITS	O
>	O
9	int
*	O
3	int
||	O
an	long
*	O
2	int
<=	O
bn	long
*	O
3	int
)	O
;	O
if	O
(	O
LIKELY	O
(	O
an	long
==	O
bn	long
)	O
||	O
an	long
*	O
(	O
LIMIT_denominat	O
>>	O
1	int
)	O
<	O
LIMIT_numerator	O
*	O
(	O
bn	long
>>	O
1	int
)	O
)	O
{	O
half	int
=	O
0	int
;	O
n	long
=	O
1	int
+	O
(	O
(	O
an	long
-	O
1	int
)	O
>>	O
3	int
)	O
;	O
p	*(char)
=	O
q	int
=	O
7	int
;	O
s	array(char)
=	O
an	long
-	O
7	int
*	O
n	long
;	O
t	long
=	O
bn	long
-	O
7	int
*	O
n	long
;	O
}	O
else	O
{	O
if	O
(	O
an	long
*	O
13	int
<	O
16	int
*	O
bn	long
)	O
{	O
p	*(char)
=	O
9	int
;	O
q	int
=	O
8	int
;	O
}	O
else	O
if	O
(	O
GMP_NUMB_BITS	O
<=	O
9	int
*	O
3	int
||	O
an	long
*	O
(	O
LIMIT_denominat	O
>>	O
1	int
)	O
<	O
(	O
LIMIT_numerator	O
/	O
7	int
*	O
9	int
)	O
*	O
(	O
bn	long
>>	O
1	int
)	O
)	O
{	O
p	*(char)
=	O
9	int
;	O
q	int
=	O
7	int
;	O
}	O
else	O
if	O
(	O
an	long
*	O
10	int
<	O
33	int
*	O
(	O
bn	long
>>	O
1	int
)	O
)	O
{	O
p	*(char)
=	O
10	int
;	O
q	int
=	O
7	int
;	O
}	O
else	O
if	O
(	O
GMP_NUMB_BITS	O
<=	O
10	int
*	O
3	int
||	O
an	long
*	O
(	O
LIMIT_denominat	O
/	O
5	int
)	O
<	O
(	O
LIMIT_numerator	O
/	O
3	int
)	O
*	O
bn	long
)	O
{	O
p	*(char)
=	O
10	int
;	O
q	int
=	O
6	int
;	O
}	O
else	O
if	O
(	O
an	long
*	O
6	int
<	O
13	int
*	O
bn	long
)	O
{	O
p	*(char)
=	O
11	int
;	O
q	int
=	O
6	int
;	O
}	O
else	O
if	O
(	O
GMP_NUMB_BITS	O
<=	O
11	int
*	O
3	int
||	O
an	long
*	O
4	int
<	O
9	int
*	O
bn	long
)	O
{	O
p	*(char)
=	O
11	int
;	O
q	int
=	O
5	int
;	O
}	O
else	O
if	O
(	O
an	long
*	O
(	O
LIMIT_numerator	O
/	O
3	int
)	O
<	O
LIMIT_denominat	O
*	O
bn	long
)	O
{	O
p	*(char)
=	O
12	int
;	O
q	int
=	O
5	int
;	O
}	O
else	O
if	O
(	O
GMP_NUMB_BITS	O
<=	O
12	int
*	O
3	int
||	O
an	long
*	O
9	int
<	O
28	int
*	O
bn	long
)	O
{	O
p	*(char)
=	O
12	int
;	O
q	int
=	O
4	int
;	O
}	O
else	O
{	O
p	*(char)
=	O
13	int
;	O
q	int
=	O
4	int
;	O
}	O
half	int
=	O
(	O
p	*(char)
+	O
q	int
)	O
&	O
1	int
;	O
n	long
=	O
1	int
+	O
(	O
q	int
*	O
an	long
>=	O
p	*(char)
*	O
bn	long
?	O
(	O
an	long
-	O
1	int
)	O
/	O
(	O
size_t	long
)	O
p	*(char)
:	O
(	O
bn	long
-	O
1	int
)	O
/	O
(	O
size_t	long
)	O
q	int
)	O
;	O
p	*(char)
--	O
;	O
q	int
--	O
;	O
s	array(char)
=	O
an	long
-	O
p	*(char)
*	O
n	long
;	O
t	long
=	O
bn	long
-	O
q	int
*	O
n	long
;	O
if	O
(	O
half	int
)	O
{	O
if	O
(	O
UNLIKELY	O
(	O
s	array(char)
<	O
1	int
)	O
)	O
{	O
p	*(char)
--	O
;	O
s	array(char)
+=	O
n	long
;	O
half	int
=	O
0	int
;	O
}	O
else	O
if	O
(	O
UNLIKELY	O
(	O
t	long
<	O
1	int
)	O
)	O
{	O
q	int
--	O
;	O
t	long
+=	O
n	long
;	O
half	int
=	O
0	int
;	O
}	O
}	O
}	O
ASSERT	O
(	O
0	int
<	O
s	array(char)
&&	O
s	array(char)
<=	O
n	long
)	O
;	O
ASSERT	O
(	O
0	int
<	O
t	long
&&	O
t	long
<=	O
n	long
)	O
;	O
ASSERT	O
(	O
half	int
||	O
s	array(char)
+	O
t	long
>	O
3	int
)	O
;	O
ASSERT	O
(	O
n	long
>	O
2	int
)	O
;	O
ASSERT	O
(	O
15	int
*	O
n	long
+	O
6	int
<=	O
mpn_toom8h_mul_itch	(long,long)->(long)
(	O
an	long
,	O
bn	long
)	O
)	O
;	O
ASSERT	O
(	O
15	int
*	O
n	long
+	O
6	int
<=	O
mpn_toom8_sqr_itch	O
(	O
n	long
*	O
8	int
)	O
)	O
;	O
sign	char
=	O
mpn_toom_eval_pm2rexp	O
(	O
v2	O
,	O
v0	O
,	O
p	*(char)
,	O
ap	*(long)
,	O
n	long
,	O
s	array(char)
,	O
3	int
,	O
pp	*(long)
)	O
^	O
mpn_toom_eval_pm2rexp	O
(	O
v3	O
,	O
v1	O
,	O
q	int
,	O
bp	*(long)
,	O
n	long
,	O
t	long
,	O
3	int
,	O
pp	*(long)
)	O
;	O
TOOM8H_MUL_N_REC	O
(	O
pp	*(long)
,	O
v0	O
,	O
v1	O
,	O
2	int
,	O
r7	O
,	O
v2	O
,	O
v3	O
,	O
n	long
+	O
1	int
,	O
wse	O
)	O
;	O
mpn_toom_couple_handling	O
(	O
r7	O
,	O
2	int
*	O
n	long
+	O
1	int
+	O
BIT_CORRECTION	int
,	O
pp	*(long)
,	O
sign	char
,	O
n	long
,	O
3	int
*	O
(	O
1	int
+	O
half	int
)	O
,	O
3	int
*	O
(	O
half	int
)	O
)	O
;	O
sign	char
=	O
mpn_toom_eval_pm2rexp	O
(	O
v2	O
,	O
v0	O
,	O
p	*(char)
,	O
ap	*(long)
,	O
n	long
,	O
s	array(char)
,	O
2	int
,	O
pp	*(long)
)	O
^	O
mpn_toom_eval_pm2rexp	O
(	O
v3	O
,	O
v1	O
,	O
q	int
,	O
bp	*(long)
,	O
n	long
,	O
t	long
,	O
2	int
,	O
pp	*(long)
)	O
;	O
TOOM8H_MUL_N_REC	O
(	O
pp	*(long)
,	O
v0	O
,	O
v1	O
,	O
2	int
,	O
r5	O
,	O
v2	O
,	O
v3	O
,	O
n	long
+	O
1	int
,	O
wse	O
)	O
;	O
mpn_toom_couple_handling	O
(	O
r5	O
,	O
2	int
*	O
n	long
+	O
1	int
,	O
pp	*(long)
,	O
sign	char
,	O
n	long
,	O
2	int
*	O
(	O
1	int
+	O
half	int
)	O
,	O
2	int
*	O
(	O
half	int
)	O
)	O
;	O
sign	char
=	O
mpn_toom_eval_pm2	O
(	O
v2	O
,	O
v0	O
,	O
p	*(char)
,	O
ap	*(long)
,	O
n	long
,	O
s	array(char)
,	O
pp	*(long)
)	O
^	O
mpn_toom_eval_pm2	O
(	O
v3	O
,	O
v1	O
,	O
q	int
,	O
bp	*(long)
,	O
n	long
,	O
t	long
,	O
pp	*(long)
)	O
;	O
TOOM8H_MUL_N_REC	O
(	O
pp	*(long)
,	O
v0	O
,	O
v1	O
,	O
2	int
,	O
r3	O
,	O
v2	O
,	O
v3	O
,	O
n	long
+	O
1	int
,	O
wse	O
)	O
;	O
mpn_toom_couple_handling	O
(	O
r3	O
,	O
2	int
*	O
n	long
+	O
1	int
,	O
pp	*(long)
,	O
sign	char
,	O
n	long
,	O
1	int
,	O
2	int
)	O
;	O
sign	char
=	O
mpn_toom_eval_pm2exp	O
(	O
v2	O
,	O
v0	O
,	O
p	*(char)
,	O
ap	*(long)
,	O
n	long
,	O
s	array(char)
,	O
3	int
,	O
pp	*(long)
)	O
^	O
mpn_toom_eval_pm2exp	O
(	O
v3	O
,	O
v1	O
,	O
q	int
,	O
bp	*(long)
,	O
n	long
,	O
t	long
,	O
3	int
,	O
pp	*(long)
)	O
;	O
TOOM8H_MUL_N_REC	O
(	O
pp	*(long)
,	O
v0	O
,	O
v1	O
,	O
2	int
,	O
r1	O
,	O
v2	O
,	O
v3	O
,	O
n	long
+	O
1	int
,	O
wse	O
)	O
;	O
mpn_toom_couple_handling	O
(	O
r1	O
,	O
2	int
*	O
n	long
+	O
1	int
+	O
BIT_CORRECTION	int
,	O
pp	*(long)
,	O
sign	char
,	O
n	long
,	O
3	int
,	O
6	int
)	O
;	O
sign	char
=	O
mpn_toom_eval_pm2rexp	O
(	O
v2	O
,	O
v0	O
,	O
p	*(char)
,	O
ap	*(long)
,	O
n	long
,	O
s	array(char)
,	O
1	int
,	O
pp	*(long)
)	O
^	O
mpn_toom_eval_pm2rexp	O
(	O
v3	O
,	O
v1	O
,	O
q	int
,	O
bp	*(long)
,	O
n	long
,	O
t	long
,	O
1	int
,	O
pp	*(long)
)	O
;	O
TOOM8H_MUL_N_REC	O
(	O
pp	*(long)
,	O
v0	O
,	O
v1	O
,	O
2	int
,	O
r6	O
,	O
v2	O
,	O
v3	O
,	O
n	long
+	O
1	int
,	O
wse	O
)	O
;	O
mpn_toom_couple_handling	O
(	O
r6	O
,	O
2	int
*	O
n	long
+	O
1	int
,	O
pp	*(long)
,	O
sign	char
,	O
n	long
,	O
1	int
+	O
half	int
,	O
half	int
)	O
;	O
sign	char
=	O
mpn_toom_eval_pm1	O
(	O
v2	O
,	O
v0	O
,	O
p	*(char)
,	O
ap	*(long)
,	O
n	long
,	O
s	array(char)
,	O
pp	*(long)
)	O
;	O
if	O
(	O
GMP_NUMB_BITS	O
>	O
12	int
*	O
3	int
&&	O
UNLIKELY	O
(	O
q	int
==	O
3	int
)	O
)	O
sign	char
^=	O
mpn_toom_eval_dgr3_pm1	O
(	O
v3	O
,	O
v1	O
,	O
bp	*(long)
,	O
n	long
,	O
t	long
,	O
pp	*(long)
)	O
;	O
else	O
sign	char
^=	O
mpn_toom_eval_pm1	O
(	O
v3	O
,	O
v1	O
,	O
q	int
,	O
bp	*(long)
,	O
n	long
,	O
t	long
,	O
pp	*(long)
)	O
;	O
TOOM8H_MUL_N_REC	O
(	O
pp	*(long)
,	O
v0	O
,	O
v1	O
,	O
2	int
,	O
r4	O
,	O
v2	O
,	O
v3	O
,	O
n	long
+	O
1	int
,	O
wse	O
)	O
;	O
mpn_toom_couple_handling	O
(	O
r4	O
,	O
2	int
*	O
n	long
+	O
1	int
,	O
pp	*(long)
,	O
sign	char
,	O
n	long
,	O
0	int
,	O
0	int
)	O
;	O
sign	char
=	O
mpn_toom_eval_pm2exp	O
(	O
v2	O
,	O
v0	O
,	O
p	*(char)
,	O
ap	*(long)
,	O
n	long
,	O
s	array(char)
,	O
2	int
,	O
pp	*(long)
)	O
^	O
mpn_toom_eval_pm2exp	O
(	O
v3	O
,	O
v1	O
,	O
q	int
,	O
bp	*(long)
,	O
n	long
,	O
t	long
,	O
2	int
,	O
pp	*(long)
)	O
;	O
TOOM8H_MUL_N_REC	O
(	O
pp	*(long)
,	O
v0	O
,	O
v1	O
,	O
2	int
,	O
r2	O
,	O
v2	O
,	O
v3	O
,	O
n	long
+	O
1	int
,	O
wse	O
)	O
;	O
mpn_toom_couple_handling	O
(	O
r2	O
,	O
2	int
*	O
n	long
+	O
1	int
,	O
pp	*(long)
,	O
sign	char
,	O
n	long
,	O
2	int
,	O
4	int
)	O
;	O
TOOM8H_MUL_N_REC	O
(	O
pp	*(long)
,	O
ap	*(long)
,	O
bp	*(long)
,	O
0	int
,	O
pp	*(long)
,	O
ap	*(long)
,	O
bp	*(long)
,	O
n	long
,	O
wsi	O
)	O
;	O
if	O
(	O
UNLIKELY	O
(	O
half	int
!=	O
0	int
)	O
)	O
{	O
if	O
(	O
s	array(char)
>	O
t	long
)	O
{	O
TOOM8H_MUL_REC	O
(	O
r0	O
,	O
ap	*(long)
+	O
p	*(char)
*	O
n	long
,	O
s	array(char)
,	O
bp	*(long)
+	O
q	int
*	O
n	long
,	O
t	long
,	O
wsi	O
)	O
;	O
}	O
else	O
{	O
TOOM8H_MUL_REC	O
(	O
r0	O
,	O
bp	*(long)
+	O
q	int
*	O
n	long
,	O
t	long
,	O
ap	*(long)
+	O
p	*(char)
*	O
n	long
,	O
s	array(char)
,	O
wsi	O
)	O
;	O
}	O
;	O
}	O
;	O
mpn_toom_interpolate_16pts	O
(	O
pp	*(long)
,	O
r1	O
,	O
r3	O
,	O
r5	O
,	O
r7	O
,	O
n	long
,	O
s	array(char)
+	O
t	long
,	O
half	int
,	O
wsi	O
)	O
;	O
}	O
