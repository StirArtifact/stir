void	O
mpn_toom_couple_handling	O
(	O
mp_ptr	*(long)
pp	*(long)
,	O
mp_size_t	long
n	long
,	O
mp_ptr	*(long)
np	*(long)
,	O
int	O
nsign	int
,	O
mp_size_t	long
off	long
,	O
int	O
ps	int
,	O
int	O
ns	int
)	O
{	O
if	O
(	O
nsign	int
)	O
{	O
mpn_rsh1sub_n	O
(	O
np	*(long)
,	O
pp	*(long)
,	O
np	*(long)
,	O
n	long
)	O
;	O
}	O
else	O
{	O
mpn_rsh1add_n	O
(	O
np	*(long)
,	O
pp	*(long)
,	O
np	*(long)
,	O
n	long
)	O
;	O
}	O
if	O
(	O
ps	int
==	O
1	int
)	O
mpn_rsh1sub_n	O
(	O
pp	*(long)
,	O
pp	*(long)
,	O
np	*(long)
,	O
n	long
)	O
;	O
else	O
{	O
mpn_sub_n	O
(	O
pp	*(long)
,	O
pp	*(long)
,	O
np	*(long)
,	O
n	long
)	O
;	O
if	O
(	O
ps	int
>	O
0	int
)	O
mpn_rshift	O
(	O
pp	*(long)
,	O
pp	*(long)
,	O
n	long
,	O
ps	int
)	O
;	O
}	O
if	O
(	O
ns	int
>	O
0	int
)	O
mpn_rshift	O
(	O
np	*(long)
,	O
np	*(long)
,	O
n	long
,	O
ns	int
)	O
;	O
pp	*(long)
[	O
n	long
]	O
=	O
mpn_add_n	O
(	O
pp	*(long)
+	O
off	long
,	O
pp	*(long)
+	O
off	long
,	O
np	*(long)
,	O
n	long
-	O
off	long
)	O
;	O
ASSERT_NOCARRY	O
(	O
mpn_add_1	O
(	O
pp	*(long)
+	O
n	long
,	O
np	*(long)
+	O
n	long
-	O
off	long
,	O
off	long
,	O
pp	*(long)
[	O
n	long
]	O
)	O
)	O
;	O
}	O
