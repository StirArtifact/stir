static	O
char	O
const	O
*	O
normalize_arg	(*(char))->(*(char))
(	O
char	O
const	O
*	O
s	*(char)
)	O
{	O
if	O
(	O
*	O
s	*(char)
==	O
'-'	O
)	O
{	O
accf	(*(struct(*(char),*(struct),*(void),long)),*(char))->(void)
(	O
PLEXUS	O
,	O
".%c"	*(char)
,	O
SLASH	char
)	O
;	O
return	O
str_save	(*(char))->(*(char))
(	O
s	*(char)
)	O
;	O
}	O
else	O
return	O
s	*(char)
;	O
}	O
int	O
merge	(bool,*(char),array(struct(*(char),*(char))))->(int)
(	O
bool	bool
tostdout	bool
,	O
char	O
const	O
*	O
edarg	*(char)
,	O
struct	O
symdef	struct(*(char),*(char))
three_manifestations	array(struct(*(char),*(char)))
[	O
3	int
]	O
)	O
{	O
register	O
int	O
i	int
;	O
FILE	struct
*	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
struct	O
fro	struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),long)
*	O
rt	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
;	O
char	O
const	O
*	O
a	array(*(char))
[	O
3	int
]	O
,	O
*	O
t	*(char)
;	O
int	O
s	*(char)
;	O
void	O
(	O
*	O
exiterr	*(()->(void))
)	O
(	O
void	O
)	O
=	O
PROGRAM	O
(	O
exiterr	*(()->(void))
)	O
;	O
for	O
(	O
i	int
=	O
3	int
;	O
0	int
<=	O
--	O
i	int
;	O
)	O
a	array(*(char))
[	O
i	int
]	O
=	O
normalize_arg	(*(char))->(*(char))
(	O
FNAME	O
(	O
i	int
)	O
)	O
;	O
if	O
(	O
!	O
edarg	*(char)
)	O
edarg	*(char)
=	O
"-E"	*(char)
;	O
t	*(char)
=	O
NULL	O
;	O
if	O
(	O
!	O
tostdout	bool
)	O
t	*(char)
=	O
maketemp	(int)->(*(char))
(	O
0	int
)	O
;	O
s	*(char)
=	O
run	(int,*(char))->(int)
(	O
-	O
1	int
,	O
t	*(char)
,	O
prog_diff3	array(char)
,	O
edarg	*(char)
,	O
"-am"	*(char)
,	O
"-L"	*(char)
,	O
LABEL	O
(	O
0	int
)	O
,	O
"-L"	*(char)
,	O
LABEL	O
(	O
1	int
)	O
,	O
"-L"	*(char)
,	O
LABEL	O
(	O
2	int
)	O
,	O
a	array(*(char))
[	O
0	int
]	O
,	O
a	array(*(char))
[	O
1	int
]	O
,	O
a	array(*(char))
[	O
2	int
]	O
,	O
NULL	O
)	O
;	O
if	O
(	O
DIFF_TROUBLE	int
==	O
s	*(char)
)	O
exiterr	*(()->(void))
(	O
)	O
;	O
if	O
(	O
DIFF_FAILURE	int
==	O
s	*(char)
)	O
PWARN	O
(	O
"conflicts during merge"	*(char)
)	O
;	O
if	O
(	O
t	*(char)
)	O
{	O
if	O
(	O
!	O
(	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen_safer	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
FNAME	O
(	O
0	int
)	O
,	O
"w"	*(char)
)	O
)	O
)	O
fatal_sys	(*(char))->(void)
(	O
FNAME	O
(	O
0	int
)	O
)	O
;	O
if	O
(	O
!	O
(	O
rt	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
=	O
fro_open	(*(char),*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long)))
(	O
t	*(char)
,	O
"r"	*(char)
,	O
NULL	O
)	O
)	O
)	O
fatal_sys	(*(char))->(void)
(	O
t	*(char)
)	O
;	O
fro_spew	(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
rt	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
,	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fro_close	(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long)))->(void)
(	O
rt	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
)	O
;	O
Ozclose	(*(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))->(void)
(	O
&	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
tempunlink	()->(void)
(	O
)	O
;	O
return	O
s	*(char)
;	O
}	O
