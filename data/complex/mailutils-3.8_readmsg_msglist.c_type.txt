static	O
int	O
addset	(*(*(int)),*(int),int)->(int)
(	O
int	O
*	O
*	O
set	*(*(int))
,	O
int	O
*	O
n	long
,	O
unsigned	O
val	*(*(char))
)	O
{	O
int	O
*	O
tmp	*(int)
;	O
tmp	*(int)
=	O
realloc	(*(void),long)->(*(void))
(	O
*	O
set	*(*(int))
,	O
(	O
*	O
n	long
+	O
1	int
)	O
*	O
sizeof	O
(	O
*	O
*	O
set	*(*(int))
)	O
)	O
;	O
if	O
(	O
tmp	*(int)
==	O
NULL	O
)	O
{	O
if	O
(	O
*	O
set	*(*(int))
)	O
free	(*(void))->(void)
(	O
*	O
set	*(*(int))
)	O
;	O
*	O
n	long
=	O
0	int
;	O
*	O
set	*(*(int))
=	O
NULL	O
;	O
return	O
ENOMEM	int
;	O
}	O
*	O
set	*(*(int))
=	O
tmp	*(int)
;	O
(	O
*	O
set	*(*(int))
)	O
[	O
*	O
n	long
]	O
=	O
val	*(*(char))
;	O
(	O
*	O
n	long
)	O
++	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
is_number	(*(char))->(int)
(	O
const	O
char	O
*	O
s	*(char)
)	O
{	O
int	O
result	*(*(char))
=	O
1	int
;	O
if	O
(	O
*	O
s	*(char)
==	O
'\0'	O
)	O
result	*(*(char))
=	O
0	int
;	O
for	O
(	O
;	O
*	O
s	*(char)
;	O
s	*(char)
++	O
)	O
{	O
if	O
(	O
!	O
mu_isdigit	O
(	O
(	O
unsigned	O
char	O
)	O
*	O
s	*(char)
)	O
)	O
{	O
result	*(*(char))
=	O
0	int
;	O
break	O
;	O
}	O
}	O
return	O
result	*(*(char))
;	O
}	O
int	O
msglist	(*(struct),int,int,*(*(char)),*(*(int)),*(int))->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
int	O
show_all	int
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
,	O
int	O
*	O
*	O
set	*(*(int))
,	O
int	O
*	O
n	long
)	O
{	O
int	O
i	int
=	O
0	int
;	O
size_t	long
total	long
=	O
0	int
;	O
mu_mailbox_messages_count	(*(struct),*(long))->(int)
(	O
mbox	*(struct)
,	O
&	O
total	long
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
argc	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
argv	*(*(char))
[	O
i	int
]	O
,	O
"*"	*(char)
)	O
)	O
{	O
size_t	long
j	long
;	O
for	O
(	O
j	long
=	O
1	int
;	O
j	long
<=	O
total	long
;	O
j	long
++	O
)	O
addset	(*(*(int)),*(int),int)->(int)
(	O
set	*(*(int))
,	O
n	long
,	O
j	long
)	O
;	O
j	long
=	O
argc	int
+	O
1	int
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
argv	*(*(char))
[	O
i	int
]	O
,	O
"$"	*(char)
)	O
||	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
argv	*(*(char))
[	O
i	int
]	O
,	O
"0"	*(char)
)	O
)	O
{	O
addset	(*(*(int)),*(int),int)->(int)
(	O
set	*(*(int))
,	O
n	long
,	O
total	long
)	O
;	O
}	O
else	O
if	O
(	O
!	O
is_number	(*(char))->(int)
(	O
argv	*(*(char))
[	O
i	int
]	O
)	O
)	O
{	O
size_t	long
j	long
;	O
int	O
found	int
=	O
0	int
;	O
for	O
(	O
j	long
=	O
1	int
;	O
j	long
<=	O
total	long
;	O
j	long
++	O
)	O
{	O
int	O
status	int
;	O
char	O
buf	*(char)
[	O
128	int
]	O
;	O
size_t	long
len	int
=	O
0	int
;	O
mu_message_t	*(struct)
msg	*(struct)
=	O
NULL	O
;	O
mu_stream_t	*(struct)
stream	*(struct)
=	O
NULL	O
;	O
mu_mailbox_get_message	(*(struct),long,*(*(struct)))->(int)
(	O
mbox	*(struct)
,	O
j	long
,	O
&	O
msg	*(struct)
)	O
;	O
status	int
=	O
mu_message_get_streamref	(*(struct),*(*(struct)))->(int)
(	O
msg	*(struct)
,	O
&	O
stream	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
mu_error	(*(char))->(int)
(	O
_	O
(	O
"cannot read message: %s"	*(char)
)	O
,	O
mu_strerror	(int)->(*(char))
(	O
status	int
)	O
)	O
;	O
else	O
{	O
while	O
(	O
mu_stream_readline	(*(struct),*(char),long,*(long))->(int)
(	O
stream	*(struct)
,	O
buf	*(char)
,	O
sizeof	O
buf	*(char)
,	O
&	O
len	int
)	O
==	O
0	int
&&	O
len	int
>	O
0	int
)	O
{	O
if	O
(	O
strstr	(*(char),*(char))->(*(char))
(	O
buf	*(char)
,	O
argv	*(*(char))
[	O
i	int
]	O
)	O
!=	O
NULL	O
)	O
{	O
addset	(*(*(int)),*(int),int)->(int)
(	O
set	*(*(int))
,	O
n	long
,	O
j	long
)	O
;	O
found	int
=	O
1	int
;	O
break	O
;	O
}	O
}	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
stream	*(struct)
)	O
;	O
}	O
if	O
(	O
found	int
&&	O
!	O
show_all	int
)	O
break	O
;	O
}	O
}	O
else	O
if	O
(	O
mu_isdigit	O
(	O
argv	*(*(char))
[	O
i	int
]	O
[	O
0	int
]	O
)	O
)	O
{	O
addset	(*(*(int)),*(int),int)->(int)
(	O
set	*(*(int))
,	O
n	long
,	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
argv	*(*(char))
[	O
i	int
]	O
,	O
NULL	O
,	O
10	int
)	O
)	O
;	O
}	O
}	O
return	O
0	int
;	O
}	O
