struct	O
group	struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long)
{	O
struct	O
file_data	struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)
const	O
*	O
file	array(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long))
;	O
lin	long
from	long
,	O
upto	long
;	O
}	O
;	O
static	O
char	O
const	O
*	O
format_group	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),char,*(struct(*(struct(int,*`,struct`,*`,long,long,*`,long,long,long,long,*`,long,*`,*`,*`,*`,long,*`,bool,bool,long)),long,long)))->(*(char))
(	O
FILE	struct
*	O
,	O
char	O
const	O
*	O
,	O
char	O
,	O
struct	O
group	struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long)
const	O
*	O
)	O
;	O
static	O
char	O
const	O
*	O
do_printf_spec	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,*(struct(*(struct(int,*`,struct`,*`,long,long,*`,long,long,long,long,*`,long,*`,*`,*`,*`,long,*`,bool,bool,long)),long,long)))->(*(char))
(	O
FILE	struct
*	O
,	O
char	O
const	O
*	O
,	O
struct	O
file_data	struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)
const	O
*	O
,	O
lin	long
,	O
struct	O
group	struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long)
const	O
*	O
)	O
;	O
static	O
char	O
const	O
*	O
scan_char_literal	(*(char),*(char))->(*(char))
(	O
char	O
const	O
*	O
,	O
char	O
*	O
)	O
;	O
static	O
lin	long
groups_letter_value	(*(struct(*(struct(int,*`,struct`,*`,long,long,*`,long,long,long,long,*`,long,*`,*`,*`,*`,long,*`,bool,bool,long)),long,long)),char)->(long)
(	O
struct	O
group	struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long)
const	O
*	O
,	O
char	O
)	O
;	O
static	O
void	O
format_ifdef	(*(char),long,long,long,long)->(void)
(	O
char	O
const	O
*	O
,	O
lin	long
,	O
lin	long
,	O
lin	long
,	O
lin	long
)	O
;	O
static	O
void	O
print_ifdef_hunk	(*(struct(*(struct(*`,long,long,long,long,bool)),long,long,long,long,bool)))->(void)
(	O
struct	O
change	struct(*(struct(*(struct(*(struct`),long,long,long,long,bool)),long,long,long,long,bool)),long,long,long,long,bool)
*	O
)	O
;	O
static	O
void	O
print_ifdef_lines	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),*(struct(*(struct(int,*`,struct`,*`,long,long,*`,long,long,long,long,*`,long,*`,*`,*`,*`,long,*`,bool,bool,long)),long,long)))->(void)
(	O
FILE	struct
*	O
,	O
char	O
const	O
*	O
,	O
struct	O
group	struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long)
const	O
*	O
)	O
;	O
static	O
lin	long
next_line0	long
;	O
static	O
lin	long
next_line1	long
;	O
void	O
print_ifdef_script	(*(struct(*(struct(*`,long,long,long,long,bool)),long,long,long,long,bool)))->(void)
(	O
struct	O
change	struct(*(struct(*(struct(*(struct`),long,long,long,long,bool)),long,long,long,long,bool)),long,long,long,long,bool)
*	O
script	*(struct(*(struct(*(struct`),long,long,long,long,bool)),long,long,long,long,bool))
)	O
{	O
next_line0	long
=	O
next_line1	long
=	O
-	O
files	array(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long))
[	O
0	int
]	O
.	O
prefix_lines	long
;	O
print_script	(*(struct(*(struct(*`,long,long,long,long,bool)),long,long,long,long,bool)),*((*(struct(*`,long,long,long,long,bool)))->(*(struct(*`,long,long,long,long,bool)))),*((*(struct(*`,long,long,long,long,bool)))->(void)))->(void)
(	O
script	*(struct(*(struct(*(struct`),long,long,long,long,bool)),long,long,long,long,bool))
,	O
find_change	(*(struct(*(struct(*`,long,long,long,long,bool)),long,long,long,long,bool)))->(*(struct(*(struct(*`,long,long,long,long,bool)),long,long,long,long,bool)))
,	O
print_ifdef_hunk	(*(struct(*(struct(*`,long,long,long,long,bool)),long,long,long,long,bool)))->(void)
)	O
;	O
if	O
(	O
next_line0	long
<	O
files	array(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long))
[	O
0	int
]	O
.	O
valid_lines	long
||	O
next_line1	long
<	O
files	array(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long))
[	O
1	int
]	O
.	O
valid_lines	long
)	O
{	O
begin_output	()->(void)
(	O
)	O
;	O
format_ifdef	(*(char),long,long,long,long)->(void)
(	O
group_format	array(*(char))
[	O
UNCHANGED	int
]	O
,	O
next_line0	long
,	O
files	array(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long))
[	O
0	int
]	O
.	O
valid_lines	long
,	O
next_line1	long
,	O
files	array(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long))
[	O
1	int
]	O
.	O
valid_lines	long
)	O
;	O
}	O
}	O
static	O
void	O
print_ifdef_hunk	(*(struct(*(struct(*`,long,long,long,long,bool)),long,long,long,long,bool)))->(void)
(	O
struct	O
change	struct(*(struct(*(struct(*(struct`),long,long,long,long,bool)),long,long,long,long,bool)),long,long,long,long,bool)
*	O
hunk	*(struct(*(struct(*(struct`),long,long,long,long,bool)),long,long,long,long,bool))
)	O
{	O
lin	long
first0	long
,	O
last0	long
,	O
first1	long
,	O
last1	long
;	O
enum	O
changes	enum(int,int,int,int)
changes	enum(int,int,int,int)
=	O
analyze_hunk	(*(struct(*(struct(*`,long,long,long,long,bool)),long,long,long,long,bool)),*(long),*(long),*(long),*(long))->(enum(int,int,int,int))
(	O
hunk	*(struct(*(struct(*(struct`),long,long,long,long,bool)),long,long,long,long,bool))
,	O
&	O
first0	long
,	O
&	O
last0	long
,	O
&	O
first1	long
,	O
&	O
last1	long
)	O
;	O
if	O
(	O
!	O
changes	enum(int,int,int,int)
)	O
return	O
;	O
begin_output	()->(void)
(	O
)	O
;	O
if	O
(	O
next_line0	long
<	O
first0	long
||	O
next_line1	long
<	O
first1	long
)	O
format_ifdef	(*(char),long,long,long,long)->(void)
(	O
group_format	array(*(char))
[	O
UNCHANGED	int
]	O
,	O
next_line0	long
,	O
first0	long
,	O
next_line1	long
,	O
first1	long
)	O
;	O
next_line0	long
=	O
last0	long
+	O
1	int
;	O
next_line1	long
=	O
last1	long
+	O
1	int
;	O
format_ifdef	(*(char),long,long,long,long)->(void)
(	O
group_format	array(*(char))
[	O
changes	enum(int,int,int,int)
]	O
,	O
first0	long
,	O
next_line0	long
,	O
first1	long
,	O
next_line1	long
)	O
;	O
}	O
static	O
void	O
format_ifdef	(*(char),long,long,long,long)->(void)
(	O
char	O
const	O
*	O
format	*(char)
,	O
lin	long
beg0	long
,	O
lin	long
end0	long
,	O
lin	long
beg1	long
,	O
lin	long
end1	long
)	O
{	O
struct	O
group	struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long)
groups	array(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
[	O
2	int
]	O
;	O
groups	array(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
[	O
0	int
]	O
.	O
file	array(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long))
=	O
&	O
files	array(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long))
[	O
0	int
]	O
;	O
groups	array(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
[	O
0	int
]	O
.	O
from	long
=	O
beg0	long
;	O
groups	array(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
[	O
0	int
]	O
.	O
upto	long
=	O
end0	long
;	O
groups	array(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
[	O
1	int
]	O
.	O
file	array(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long))
=	O
&	O
files	array(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long))
[	O
1	int
]	O
;	O
groups	array(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
[	O
1	int
]	O
.	O
from	long
=	O
beg1	long
;	O
groups	array(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
[	O
1	int
]	O
.	O
upto	long
=	O
end1	long
;	O
format_group	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),char,*(struct(*(struct(int,*`,struct`,*`,long,long,*`,long,long,long,long,*`,long,*`,*`,*`,*`,long,*`,bool,bool,long)),long,long)))->(*(char))
(	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
format	*(char)
,	O
0	int
,	O
groups	array(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
)	O
;	O
}	O
static	O
char	O
const	O
*	O
format_group	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),char,*(struct(*(struct(int,*`,struct`,*`,long,long,*`,long,long,long,long,*`,long,*`,*`,*`,*`,long,*`,bool,bool,long)),long,long)))->(*(char))
(	O
register	O
FILE	struct
*	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
char	O
const	O
*	O
format	*(char)
,	O
char	O
endchar	char
,	O
struct	O
group	struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long)
const	O
*	O
groups	array(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
)	O
{	O
register	O
char	O
c	char
;	O
register	O
char	O
const	O
*	O
f	*(char)
=	O
format	*(char)
;	O
while	O
(	O
(	O
c	char
=	O
*	O
f	*(char)
)	O
!=	O
endchar	char
&&	O
c	char
!=	O
0	int
)	O
{	O
char	O
const	O
*	O
f1	*(char)
=	O
++	O
f	*(char)
;	O
if	O
(	O
c	char
==	O
'%'	O
)	O
switch	O
(	O
(	O
c	char
=	O
*	O
f	*(char)
++	O
)	O
)	O
{	O
case	O
'%'	O
:	O
break	O
;	O
case	O
'('	O
:	O
{	O
int	O
i	int
;	O
uintmax_t	long
value	array(long)
[	O
2	int
]	O
;	O
FILE	struct
*	O
thenout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
*	O
elseout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
2	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
ISDIGIT	O
(	O
*	O
f	*(char)
)	O
)	O
{	O
char	O
*	O
fend	*(char)
;	O
errno	O
=	O
0	int
;	O
value	array(long)
[	O
i	int
]	O
=	O
strtoumax	(*(char),*(*(char)),int)->(long)
(	O
f	*(char)
,	O
&	O
fend	*(char)
,	O
10	int
)	O
;	O
if	O
(	O
errno	O
)	O
goto	O
bad_format	O
;	O
f	*(char)
=	O
fend	*(char)
;	O
}	O
else	O
{	O
value	array(long)
[	O
i	int
]	O
=	O
groups_letter_value	(*(struct(*(struct(int,*`,struct`,*`,long,long,*`,long,long,long,long,*`,long,*`,*`,*`,*`,long,*`,bool,bool,long)),long,long)),char)->(long)
(	O
groups	array(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
,	O
*	O
f	*(char)
)	O
;	O
if	O
(	O
value	array(long)
[	O
i	int
]	O
==	O
-	O
1	int
)	O
goto	O
bad_format	O
;	O
f	*(char)
++	O
;	O
}	O
if	O
(	O
*	O
f	*(char)
++	O
!=	O
"=?"	*(char)
[	O
i	int
]	O
)	O
goto	O
bad_format	O
;	O
}	O
if	O
(	O
value	array(long)
[	O
0	int
]	O
==	O
value	array(long)
[	O
1	int
]	O
)	O
thenout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
elseout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
0	int
;	O
else	O
thenout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
0	int
,	O
elseout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
f	*(char)
=	O
format_group	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),char,*(struct(*(struct(int,*`,struct`,*`,long,long,*`,long,long,long,long,*`,long,*`,*`,*`,*`,long,*`,bool,bool,long)),long,long)))->(*(char))
(	O
thenout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
f	*(char)
,	O
':'	O
,	O
groups	array(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
)	O
;	O
if	O
(	O
*	O
f	*(char)
)	O
{	O
f	*(char)
=	O
format_group	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),char,*(struct(*(struct(int,*`,struct`,*`,long,long,*`,long,long,long,long,*`,long,*`,*`,*`,*`,long,*`,bool,bool,long)),long,long)))->(*(char))
(	O
elseout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
f	*(char)
+	O
1	int
,	O
')'	O
,	O
groups	array(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
)	O
;	O
if	O
(	O
*	O
f	*(char)
)	O
f	*(char)
++	O
;	O
}	O
}	O
continue	O
;	O
case	O
'<'	O
:	O
print_ifdef_lines	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),*(struct(*(struct(int,*`,struct`,*`,long,long,*`,long,long,long,long,*`,long,*`,*`,*`,*`,long,*`,bool,bool,long)),long,long)))->(void)
(	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
line_format	array(*(char))
[	O
OLD	int
]	O
,	O
&	O
groups	array(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
[	O
0	int
]	O
)	O
;	O
continue	O
;	O
case	O
'='	O
:	O
print_ifdef_lines	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),*(struct(*(struct(int,*`,struct`,*`,long,long,*`,long,long,long,long,*`,long,*`,*`,*`,*`,long,*`,bool,bool,long)),long,long)))->(void)
(	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
line_format	array(*(char))
[	O
UNCHANGED	int
]	O
,	O
&	O
groups	array(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
[	O
0	int
]	O
)	O
;	O
continue	O
;	O
case	O
'>'	O
:	O
print_ifdef_lines	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),*(struct(*(struct(int,*`,struct`,*`,long,long,*`,long,long,long,long,*`,long,*`,*`,*`,*`,long,*`,bool,bool,long)),long,long)))->(void)
(	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
line_format	array(*(char))
[	O
NEW	int
]	O
,	O
&	O
groups	array(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
[	O
1	int
]	O
)	O
;	O
continue	O
;	O
default	O
:	O
f	*(char)
=	O
do_printf_spec	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,*(struct(*(struct(int,*`,struct`,*`,long,long,*`,long,long,long,long,*`,long,*`,*`,*`,*`,long,*`,bool,bool,long)),long,long)))->(*(char))
(	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
f	*(char)
-	O
2	int
,	O
0	int
,	O
0	int
,	O
groups	array(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
)	O
;	O
if	O
(	O
f	*(char)
)	O
continue	O
;	O
bad_format	O
:	O
c	char
=	O
'%'	O
;	O
f	*(char)
=	O
f1	*(char)
;	O
break	O
;	O
}	O
if	O
(	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
putc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
c	char
,	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
return	O
f	*(char)
;	O
}	O
static	O
lin	long
groups_letter_value	(*(struct(*(struct(int,*`,struct`,*`,long,long,*`,long,long,long,long,*`,long,*`,*`,*`,*`,long,*`,bool,bool,long)),long,long)),char)->(long)
(	O
struct	O
group	struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long)
const	O
*	O
g	*(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct`,struct`,struct`,array(long)),*(long),long,long,*(*`),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
,	O
char	O
letter	char
)	O
{	O
switch	O
(	O
letter	char
)	O
{	O
case	O
'E'	O
:	O
letter	char
=	O
'e'	O
;	O
g	*(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct`,struct`,struct`,array(long)),*(long),long,long,*(*`),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
++	O
;	O
break	O
;	O
case	O
'F'	O
:	O
letter	char
=	O
'f'	O
;	O
g	*(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct`,struct`,struct`,array(long)),*(long),long,long,*(*`),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
++	O
;	O
break	O
;	O
case	O
'L'	O
:	O
letter	char
=	O
'l'	O
;	O
g	*(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct`,struct`,struct`,array(long)),*(long),long,long,*(*`),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
++	O
;	O
break	O
;	O
case	O
'M'	O
:	O
letter	char
=	O
'm'	O
;	O
g	*(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct`,struct`,struct`,array(long)),*(long),long,long,*(*`),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
++	O
;	O
break	O
;	O
case	O
'N'	O
:	O
letter	char
=	O
'n'	O
;	O
g	*(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct`,struct`,struct`,array(long)),*(long),long,long,*(*`),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
++	O
;	O
break	O
;	O
}	O
switch	O
(	O
letter	char
)	O
{	O
case	O
'e'	O
:	O
return	O
translate_line_number	(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long)->(long)
(	O
g	*(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct`,struct`,struct`,array(long)),*(long),long,long,*(*`),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
->	O
file	array(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long))
,	O
g	*(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct`,struct`,struct`,array(long)),*(long),long,long,*(*`),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
->	O
from	long
)	O
-	O
1	int
;	O
case	O
'f'	O
:	O
return	O
translate_line_number	(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long)->(long)
(	O
g	*(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct`,struct`,struct`,array(long)),*(long),long,long,*(*`),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
->	O
file	array(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long))
,	O
g	*(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct`,struct`,struct`,array(long)),*(long),long,long,*(*`),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
->	O
from	long
)	O
;	O
case	O
'l'	O
:	O
return	O
translate_line_number	(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long)->(long)
(	O
g	*(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct`,struct`,struct`,array(long)),*(long),long,long,*(*`),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
->	O
file	array(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long))
,	O
g	*(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct`,struct`,struct`,array(long)),*(long),long,long,*(*`),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
->	O
upto	long
)	O
-	O
1	int
;	O
case	O
'm'	O
:	O
return	O
translate_line_number	(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long)->(long)
(	O
g	*(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct`,struct`,struct`,array(long)),*(long),long,long,*(*`),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
->	O
file	array(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long))
,	O
g	*(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct`,struct`,struct`,array(long)),*(long),long,long,*(*`),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
->	O
upto	long
)	O
;	O
case	O
'n'	O
:	O
return	O
g	*(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct`,struct`,struct`,array(long)),*(long),long,long,*(*`),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
->	O
upto	long
-	O
g	*(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct`,struct`,struct`,array(long)),*(long),long,long,*(*`),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
->	O
from	long
;	O
default	O
:	O
return	O
-	O
1	int
;	O
}	O
}	O
static	O
void	O
print_ifdef_lines	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),*(struct(*(struct(int,*`,struct`,*`,long,long,*`,long,long,long,long,*`,long,*`,*`,*`,*`,long,*`,bool,bool,long)),long,long)))->(void)
(	O
register	O
FILE	struct
*	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
char	O
const	O
*	O
format	*(char)
,	O
struct	O
group	struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long)
const	O
*	O
group	struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long)
)	O
{	O
struct	O
file_data	struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)
const	O
*	O
file	array(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long))
=	O
group	struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long)
->	O
file	array(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long))
;	O
char	O
const	O
*	O
const	O
*	O
linbuf	*(*(char))
=	O
file	array(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long))
->	O
linbuf	*(*(char))
;	O
lin	long
from	long
=	O
group	struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long)
->	O
from	long
,	O
upto	long
=	O
group	struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long)
->	O
upto	long
;	O
if	O
(	O
!	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
return	O
;	O
if	O
(	O
!	O
expand_tabs	bool
&&	O
format	*(char)
[	O
0	int
]	O
==	O
'%'	O
)	O
{	O
if	O
(	O
format	*(char)
[	O
1	int
]	O
==	O
'l'	O
&&	O
format	*(char)
[	O
2	int
]	O
==	O
'\n'	O
&&	O
!	O
format	*(char)
[	O
3	int
]	O
&&	O
from	long
<	O
upto	long
)	O
{	O
fwrite	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
linbuf	*(*(char))
[	O
from	long
]	O
,	O
sizeof	O
(	O
char	O
)	O
,	O
linbuf	*(*(char))
[	O
upto	long
]	O
+	O
(	O
linbuf	*(*(char))
[	O
upto	long
]	O
[	O
-	O
1	int
]	O
!=	O
'\n'	O
)	O
-	O
linbuf	*(*(char))
[	O
from	long
]	O
,	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
return	O
;	O
}	O
if	O
(	O
format	*(char)
[	O
1	int
]	O
==	O
'L'	O
&&	O
!	O
format	*(char)
[	O
2	int
]	O
)	O
{	O
fwrite	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
linbuf	*(*(char))
[	O
from	long
]	O
,	O
sizeof	O
(	O
char	O
)	O
,	O
linbuf	*(*(char))
[	O
upto	long
]	O
-	O
linbuf	*(*(char))
[	O
from	long
]	O
,	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
return	O
;	O
}	O
}	O
for	O
(	O
;	O
from	long
<	O
upto	long
;	O
from	long
++	O
)	O
{	O
register	O
char	O
c	char
;	O
register	O
char	O
const	O
*	O
f	*(char)
=	O
format	*(char)
;	O
while	O
(	O
(	O
c	char
=	O
*	O
f	*(char)
++	O
)	O
!=	O
0	int
)	O
{	O
char	O
const	O
*	O
f1	*(char)
=	O
f	*(char)
;	O
if	O
(	O
c	char
==	O
'%'	O
)	O
switch	O
(	O
(	O
c	char
=	O
*	O
f	*(char)
++	O
)	O
)	O
{	O
case	O
'%'	O
:	O
break	O
;	O
case	O
'l'	O
:	O
output_1_line	(*(char),*(char),*(char),*(char))->(void)
(	O
linbuf	*(*(char))
[	O
from	long
]	O
,	O
(	O
linbuf	*(*(char))
[	O
from	long
+	O
1	int
]	O
-	O
(	O
linbuf	*(*(char))
[	O
from	long
+	O
1	int
]	O
[	O
-	O
1	int
]	O
==	O
'\n'	O
)	O
)	O
,	O
0	int
,	O
0	int
)	O
;	O
continue	O
;	O
case	O
'L'	O
:	O
output_1_line	(*(char),*(char),*(char),*(char))->(void)
(	O
linbuf	*(*(char))
[	O
from	long
]	O
,	O
linbuf	*(*(char))
[	O
from	long
+	O
1	int
]	O
,	O
0	int
,	O
0	int
)	O
;	O
continue	O
;	O
default	O
:	O
f	*(char)
=	O
do_printf_spec	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,*(struct(*(struct(int,*`,struct`,*`,long,long,*`,long,long,long,long,*`,long,*`,*`,*`,*`,long,*`,bool,bool,long)),long,long)))->(*(char))
(	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
f	*(char)
-	O
2	int
,	O
file	array(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long))
,	O
from	long
,	O
0	int
)	O
;	O
if	O
(	O
f	*(char)
)	O
continue	O
;	O
c	char
=	O
'%'	O
;	O
f	*(char)
=	O
f1	*(char)
;	O
break	O
;	O
}	O
putc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
c	char
,	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
}	O
}	O
static	O
char	O
const	O
*	O
do_printf_spec	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,*(struct(*(struct(int,*`,struct`,*`,long,long,*`,long,long,long,long,*`,long,*`,*`,*`,*`,long,*`,bool,bool,long)),long,long)))->(*(char))
(	O
FILE	struct
*	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
char	O
const	O
*	O
spec	*(char)
,	O
struct	O
file_data	struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)
const	O
*	O
file	array(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long))
,	O
lin	long
n	long
,	O
struct	O
group	struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long)
const	O
*	O
groups	array(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
)	O
{	O
char	O
const	O
*	O
f	*(char)
=	O
spec	*(char)
;	O
char	O
c	char
;	O
char	O
c1	char
;	O
f	*(char)
++	O
;	O
while	O
(	O
(	O
c	char
=	O
*	O
f	*(char)
++	O
)	O
==	O
'-'	O
||	O
c	char
==	O
'\''	O
||	O
c	char
==	O
'0'	O
)	O
continue	O
;	O
while	O
(	O
ISDIGIT	O
(	O
c	char
)	O
)	O
c	char
=	O
*	O
f	*(char)
++	O
;	O
if	O
(	O
c	char
==	O
'.'	O
)	O
while	O
(	O
ISDIGIT	O
(	O
c	char
=	O
*	O
f	*(char)
++	O
)	O
)	O
continue	O
;	O
c1	char
=	O
*	O
f	*(char)
++	O
;	O
switch	O
(	O
c	char
)	O
{	O
case	O
'c'	O
:	O
if	O
(	O
c1	char
!=	O
'\''	O
)	O
return	O
0	int
;	O
else	O
{	O
char	O
value	array(long)
IF_LINT	O
(	O
=	O
0	int
)	O
;	O
f	*(char)
=	O
scan_char_literal	(*(char),*(char))->(*(char))
(	O
f	*(char)
,	O
&	O
value	array(long)
)	O
;	O
if	O
(	O
!	O
f	*(char)
)	O
return	O
0	int
;	O
if	O
(	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
putc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
value	array(long)
,	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
break	O
;	O
case	O
'd'	O
:	O
case	O
'o'	O
:	O
case	O
'x'	O
:	O
case	O
'X'	O
:	O
{	O
lin	long
value	array(long)
;	O
if	O
(	O
file	array(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long))
)	O
{	O
if	O
(	O
c1	char
!=	O
'n'	O
)	O
return	O
0	int
;	O
value	array(long)
=	O
translate_line_number	(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long)->(long)
(	O
file	array(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long))
,	O
n	long
)	O
;	O
}	O
else	O
{	O
value	array(long)
=	O
groups_letter_value	(*(struct(*(struct(int,*`,struct`,*`,long,long,*`,long,long,long,long,*`,long,*`,*`,*`,*`,long,*`,bool,bool,long)),long,long)),char)->(long)
(	O
groups	array(struct(*(struct(int,*(char),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(long),long,long,*(*(char)),long,long,long,long,*(char),long,*(char),*(long),*(long),*(long),long,*(char),bool,bool,long)),long,long))
,	O
c1	char
)	O
;	O
if	O
(	O
value	array(long)
<	O
0	int
)	O
return	O
0	int
;	O
}	O
if	O
(	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
long	O
int	O
long_value	long
=	O
value	array(long)
;	O
size_t	long
spec_prefix_len	long
=	O
f	*(char)
-	O
spec	*(char)
-	O
2	int
;	O
char	O
format	*(char)
[	O
spec_prefix_len	long
+	O
3	int
]	O
;	O
char	O
*	O
p	*(void)
=	O
format	*(char)
+	O
spec_prefix_len	long
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
format	*(char)
,	O
spec	*(char)
,	O
spec_prefix_len	long
)	O
;	O
*	O
p	*(void)
++	O
=	O
'l'	O
;	O
*	O
p	*(void)
++	O
=	O
c	char
;	O
*	O
p	*(void)
=	O
'\0'	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
out	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
format	*(char)
,	O
long_value	long
)	O
;	O
}	O
}	O
break	O
;	O
default	O
:	O
return	O
0	int
;	O
}	O
return	O
f	*(char)
;	O
}	O
static	O
char	O
const	O
*	O
scan_char_literal	(*(char),*(char))->(*(char))
(	O
char	O
const	O
*	O
lit	*(char)
,	O
char	O
*	O
valptr	*(char)
)	O
{	O
register	O
char	O
const	O
*	O
p	*(void)
=	O
lit	*(char)
;	O
char	O
value	array(long)
;	O
ptrdiff_t	long
digits	long
;	O
char	O
c	char
=	O
*	O
p	*(void)
++	O
;	O
switch	O
(	O
c	char
)	O
{	O
case	O
0	int
:	O
case	O
'\''	O
:	O
return	O
NULL	O
;	O
case	O
'\\'	O
:	O
value	array(long)
=	O
0	int
;	O
while	O
(	O
(	O
c	char
=	O
*	O
p	*(void)
++	O
)	O
!=	O
'\''	O
)	O
{	O
unsigned	O
int	O
digit	int
=	O
c	char
-	O
'0'	O
;	O
if	O
(	O
8	int
<=	O
digit	int
)	O
return	O
NULL	O
;	O
value	array(long)
=	O
8	int
*	O
value	array(long)
+	O
digit	int
;	O
}	O
digits	long
=	O
p	*(void)
-	O
lit	*(char)
-	O
2	int
;	O
if	O
(	O
!	O
(	O
1	int
<=	O
digits	long
&&	O
digits	long
<=	O
3	int
)	O
)	O
return	O
NULL	O
;	O
break	O
;	O
default	O
:	O
value	array(long)
=	O
c	char
;	O
if	O
(	O
*	O
p	*(void)
++	O
!=	O
'\''	O
)	O
return	O
NULL	O
;	O
break	O
;	O
}	O
*	O
valptr	*(char)
=	O
value	array(long)
;	O
return	O
p	*(void)
;	O
}	O
