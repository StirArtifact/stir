local	O
int	O
gz_load	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),*(char),int,*(int))->(int)
OF	O
(	O
(	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
,	O
unsigned	O
char	O
*	O
,	O
unsigned	O
,	O
unsigned	O
*	O
)	O
)	O
;	O
local	O
int	O
gz_avail	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))))->(int)
OF	O
(	O
(	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
)	O
)	O
;	O
local	O
int	O
gz_look	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))))->(int)
OF	O
(	O
(	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
)	O
)	O
;	O
local	O
int	O
gz_decomp	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))))->(int)
OF	O
(	O
(	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
)	O
)	O
;	O
local	O
int	O
gz_fetch	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))))->(int)
OF	O
(	O
(	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
)	O
)	O
;	O
local	O
int	O
gz_skip	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),long)->(int)
OF	O
(	O
(	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
,	O
z_off64_t	O
)	O
)	O
;	O
local	O
z_size_t	long
gz_read	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),*(void),long)->(long)
OF	O
(	O
(	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
,	O
voidp	*(void)
,	O
z_size_t	long
)	O
)	O
;	O
local	O
int	O
gz_load	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),*(char),int,*(int))->(int)
(	O
state	*(struct)
,	O
buf	*(void)
,	O
len	int
,	O
have	int
)	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
state	*(struct)
;	O
unsigned	O
char	O
*	O
buf	*(void)
;	O
unsigned	O
len	int
;	O
unsigned	O
*	O
have	int
;	O
{	O
int	O
ret	int
;	O
unsigned	O
get	int
,	O
max	int
=	O
(	O
(	O
unsigned	O
)	O
-	O
1	int
>>	O
2	int
)	O
+	O
1	int
;	O
*	O
have	int
=	O
0	int
;	O
do	O
{	O
get	int
=	O
len	int
-	O
*	O
have	int
;	O
if	O
(	O
get	int
>	O
max	int
)	O
get	int
=	O
max	int
;	O
ret	int
=	O
read	(int,*(void),long)->(long)
(	O
state	*(struct)
->	O
fd	int
,	O
buf	*(void)
+	O
*	O
have	int
,	O
get	int
)	O
;	O
if	O
(	O
ret	int
<=	O
0	int
)	O
break	O
;	O
*	O
have	int
+=	O
(	O
unsigned	O
)	O
ret	int
;	O
}	O
while	O
(	O
*	O
have	int
<	O
len	int
)	O
;	O
if	O
(	O
ret	int
<	O
0	int
)	O
{	O
gz_error	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int,*(char))->(void)
(	O
state	*(struct)
,	O
Z_ERRNO	O
,	O
zstrerror	O
(	O
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
ret	int
==	O
0	int
)	O
state	*(struct)
->	O
eof	int
=	O
1	int
;	O
return	O
0	int
;	O
}	O
local	O
int	O
gz_avail	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))))->(int)
(	O
state	*(struct)
)	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
state	*(struct)
;	O
{	O
unsigned	O
got	int
;	O
z_streamp	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
=	O
&	O
(	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
)	O
;	O
if	O
(	O
state	*(struct)
->	O
err	int
!=	O
Z_OK	int
&&	O
state	*(struct)
->	O
err	int
!=	O
Z_BUF_ERROR	O
)	O
return	O
-	O
1	int
;	O
if	O
(	O
state	*(struct)
->	O
eof	int
==	O
0	int
)	O
{	O
if	O
(	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
)	O
{	O
unsigned	O
char	O
*	O
p	*(char)
=	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
;	O
unsigned	O
const	O
char	O
*	O
q	*(char)
=	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
next_in	*(char)
;	O
unsigned	O
n	int
=	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
;	O
do	O
{	O
*	O
p	*(char)
++	O
=	O
*	O
q	*(char)
++	O
;	O
}	O
while	O
(	O
--	O
n	int
)	O
;	O
}	O
if	O
(	O
gz_load	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),*(char),int,*(int))->(int)
(	O
state	*(struct)
,	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
+	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
,	O
state	*(struct)
->	O
size	int
-	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
,	O
&	O
got	int
)	O
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
+=	O
got	int
;	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
next_in	*(char)
=	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
;	O
}	O
return	O
0	int
;	O
}	O
local	O
int	O
gz_look	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))))->(int)
(	O
state	*(struct)
)	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
state	*(struct)
;	O
{	O
z_streamp	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
=	O
&	O
(	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
)	O
;	O
if	O
(	O
state	*(struct)
->	O
size	int
==	O
0	int
)	O
{	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
=	O
(	O
unsigned	O
char	O
*	O
)	O
malloc	(long)->(*(void))
(	O
state	*(struct)
->	O
want	int
)	O
;	O
state	*(struct)
->	O
out	*((*(void),*(char),int)->(int))
=	O
(	O
unsigned	O
char	O
*	O
)	O
malloc	(long)->(*(void))
(	O
state	*(struct)
->	O
want	int
<<	O
1	int
)	O
;	O
if	O
(	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
==	O
NULL	O
||	O
state	*(struct)
->	O
out	*((*(void),*(char),int)->(int))
==	O
NULL	O
)	O
{	O
free	(*(void))->(void)
(	O
state	*(struct)
->	O
out	*((*(void),*(char),int)->(int))
)	O
;	O
free	(*(void))->(void)
(	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
)	O
;	O
gz_error	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int,*(char))->(void)
(	O
state	*(struct)
,	O
Z_MEM_ERROR	O
,	O
"out of memory"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
state	*(struct)
->	O
size	int
=	O
state	*(struct)
->	O
want	int
;	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
.	O
zalloc	*((*(void),int,int)->(*(void)))
=	O
Z_NULL	int
;	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
.	O
zfree	*((*(void),*(void))->(void))
=	O
Z_NULL	int
;	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
.	O
opaque	*(void)
=	O
Z_NULL	int
;	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
.	O
avail_in	int
=	O
0	int
;	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
.	O
next_in	*(char)
=	O
Z_NULL	int
;	O
if	O
(	O
inflateInit2	O
(	O
&	O
(	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
)	O
,	O
15	int
+	O
16	int
)	O
!=	O
Z_OK	int
)	O
{	O
free	(*(void))->(void)
(	O
state	*(struct)
->	O
out	*((*(void),*(char),int)->(int))
)	O
;	O
free	(*(void))->(void)
(	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
)	O
;	O
state	*(struct)
->	O
size	int
=	O
0	int
;	O
gz_error	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int,*(char))->(void)
(	O
state	*(struct)
,	O
Z_MEM_ERROR	O
,	O
"out of memory"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
if	O
(	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
<	O
2	int
)	O
{	O
if	O
(	O
gz_avail	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))))->(int)
(	O
state	*(struct)
)	O
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
==	O
0	int
)	O
return	O
0	int
;	O
}	O
if	O
(	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
>	O
1	int
&&	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
next_in	*(char)
[	O
0	int
]	O
==	O
31	int
&&	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
next_in	*(char)
[	O
1	int
]	O
==	O
139	int
)	O
{	O
inflateReset	(*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))->(int)
(	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
)	O
;	O
state	*(struct)
->	O
how	int
=	O
GZIP	int
;	O
state	*(struct)
->	O
direct	int
=	O
0	int
;	O
return	O
0	int
;	O
}	O
if	O
(	O
state	*(struct)
->	O
direct	int
==	O
0	int
)	O
{	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
=	O
0	int
;	O
state	*(struct)
->	O
eof	int
=	O
1	int
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
=	O
0	int
;	O
return	O
0	int
;	O
}	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
next	*(char)
=	O
state	*(struct)
->	O
out	*((*(void),*(char),int)->(int))
;	O
if	O
(	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
)	O
{	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
next	*(char)
,	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
next_in	*(char)
,	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
)	O
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
=	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
;	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
=	O
0	int
;	O
}	O
state	*(struct)
->	O
how	int
=	O
COPY	int
;	O
state	*(struct)
->	O
direct	int
=	O
1	int
;	O
return	O
0	int
;	O
}	O
local	O
int	O
gz_decomp	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))))->(int)
(	O
state	*(struct)
)	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
state	*(struct)
;	O
{	O
int	O
ret	int
=	O
Z_OK	int
;	O
unsigned	O
had	int
;	O
z_streamp	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
=	O
&	O
(	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
)	O
;	O
had	int
=	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_out	int
;	O
do	O
{	O
if	O
(	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
==	O
0	int
&&	O
gz_avail	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))))->(int)
(	O
state	*(struct)
)	O
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
==	O
0	int
)	O
{	O
gz_error	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int,*(char))->(void)
(	O
state	*(struct)
,	O
Z_BUF_ERROR	O
,	O
"unexpected end of file"	*(char)
)	O
;	O
break	O
;	O
}	O
ret	int
=	O
inflate	(*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)),int)->(int)
(	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
,	O
Z_NO_FLUSH	int
)	O
;	O
if	O
(	O
ret	int
==	O
Z_STREAM_ERROR	O
||	O
ret	int
==	O
Z_NEED_DICT	int
)	O
{	O
gz_error	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int,*(char))->(void)
(	O
state	*(struct)
,	O
Z_STREAM_ERROR	O
,	O
"internal error: inflate stream corrupt"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
ret	int
==	O
Z_MEM_ERROR	O
)	O
{	O
gz_error	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int,*(char))->(void)
(	O
state	*(struct)
,	O
Z_MEM_ERROR	O
,	O
"out of memory"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
ret	int
==	O
Z_DATA_ERROR	O
)	O
{	O
gz_error	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int,*(char))->(void)
(	O
state	*(struct)
,	O
Z_DATA_ERROR	O
,	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
msg	*(char)
==	O
NULL	O
?	O
"compressed data error"	*(char)
:	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
msg	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
while	O
(	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_out	int
&&	O
ret	int
!=	O
Z_STREAM_END	int
)	O
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
=	O
had	int
-	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_out	int
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
next	*(char)
=	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
next_out	*(char)
-	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
;	O
if	O
(	O
ret	int
==	O
Z_STREAM_END	int
)	O
state	*(struct)
->	O
how	int
=	O
LOOK	int
;	O
return	O
0	int
;	O
}	O
local	O
int	O
gz_fetch	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))))->(int)
(	O
state	*(struct)
)	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
state	*(struct)
;	O
{	O
z_streamp	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
=	O
&	O
(	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
)	O
;	O
do	O
{	O
switch	O
(	O
state	*(struct)
->	O
how	int
)	O
{	O
case	O
LOOK	int
:	O
if	O
(	O
gz_look	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))))->(int)
(	O
state	*(struct)
)	O
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
state	*(struct)
->	O
how	int
==	O
LOOK	int
)	O
return	O
0	int
;	O
break	O
;	O
case	O
COPY	int
:	O
if	O
(	O
gz_load	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),*(char),int,*(int))->(int)
(	O
state	*(struct)
,	O
state	*(struct)
->	O
out	*((*(void),*(char),int)->(int))
,	O
state	*(struct)
->	O
size	int
<<	O
1	int
,	O
&	O
(	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
)	O
)	O
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
next	*(char)
=	O
state	*(struct)
->	O
out	*((*(void),*(char),int)->(int))
;	O
return	O
0	int
;	O
case	O
GZIP	int
:	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_out	int
=	O
state	*(struct)
->	O
size	int
<<	O
1	int
;	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
next_out	*(char)
=	O
state	*(struct)
->	O
out	*((*(void),*(char),int)->(int))
;	O
if	O
(	O
gz_decomp	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))))->(int)
(	O
state	*(struct)
)	O
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
}	O
}	O
while	O
(	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
==	O
0	int
&&	O
(	O
!	O
state	*(struct)
->	O
eof	int
||	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
)	O
)	O
;	O
return	O
0	int
;	O
}	O
local	O
int	O
gz_skip	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),long)->(int)
(	O
state	*(struct)
,	O
len	int
)	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
state	*(struct)
;	O
z_off64_t	O
len	int
;	O
{	O
unsigned	O
n	int
;	O
while	O
(	O
len	int
)	O
if	O
(	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
)	O
{	O
n	int
=	O
GT_OFF	O
(	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
)	O
||	O
(	O
z_off64_t	O
)	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
>	O
len	int
?	O
(	O
unsigned	O
)	O
len	int
:	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
-=	O
n	int
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
next	*(char)
+=	O
n	int
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
pos	long
+=	O
n	int
;	O
len	int
-=	O
n	int
;	O
}	O
else	O
if	O
(	O
state	*(struct)
->	O
eof	int
&&	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
.	O
avail_in	int
==	O
0	int
)	O
break	O
;	O
else	O
{	O
if	O
(	O
gz_fetch	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))))->(int)
(	O
state	*(struct)
)	O
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
local	O
z_size_t	long
gz_read	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),*(void),long)->(long)
(	O
state	*(struct)
,	O
buf	*(void)
,	O
len	int
)	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
state	*(struct)
;	O
voidp	*(void)
buf	*(void)
;	O
z_size_t	long
len	int
;	O
{	O
z_size_t	long
got	int
;	O
unsigned	O
n	int
;	O
if	O
(	O
len	int
==	O
0	int
)	O
return	O
0	int
;	O
if	O
(	O
state	*(struct)
->	O
seek	int
)	O
{	O
state	*(struct)
->	O
seek	int
=	O
0	int
;	O
if	O
(	O
gz_skip	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),long)->(int)
(	O
state	*(struct)
,	O
state	*(struct)
->	O
skip	long
)	O
==	O
-	O
1	int
)	O
return	O
0	int
;	O
}	O
got	int
=	O
0	int
;	O
do	O
{	O
n	int
=	O
-	O
1	int
;	O
if	O
(	O
n	int
>	O
len	int
)	O
n	int
=	O
len	int
;	O
if	O
(	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
)	O
{	O
if	O
(	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
<	O
n	int
)	O
n	int
=	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
buf	*(void)
,	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
next	*(char)
,	O
n	int
)	O
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
next	*(char)
+=	O
n	int
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
-=	O
n	int
;	O
}	O
else	O
if	O
(	O
state	*(struct)
->	O
eof	int
&&	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
.	O
avail_in	int
==	O
0	int
)	O
{	O
state	*(struct)
->	O
past	int
=	O
1	int
;	O
break	O
;	O
}	O
else	O
if	O
(	O
state	*(struct)
->	O
how	int
==	O
LOOK	int
||	O
n	int
<	O
(	O
state	*(struct)
->	O
size	int
<<	O
1	int
)	O
)	O
{	O
if	O
(	O
gz_fetch	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))))->(int)
(	O
state	*(struct)
)	O
==	O
-	O
1	int
)	O
return	O
0	int
;	O
continue	O
;	O
}	O
else	O
if	O
(	O
state	*(struct)
->	O
how	int
==	O
COPY	int
)	O
{	O
if	O
(	O
gz_load	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),*(char),int,*(int))->(int)
(	O
state	*(struct)
,	O
(	O
unsigned	O
char	O
*	O
)	O
buf	*(void)
,	O
n	int
,	O
&	O
n	int
)	O
==	O
-	O
1	int
)	O
return	O
0	int
;	O
}	O
else	O
{	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
.	O
avail_out	int
=	O
n	int
;	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
.	O
next_out	*(char)
=	O
(	O
unsigned	O
char	O
*	O
)	O
buf	*(void)
;	O
if	O
(	O
gz_decomp	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))))->(int)
(	O
state	*(struct)
)	O
==	O
-	O
1	int
)	O
return	O
0	int
;	O
n	int
=	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
=	O
0	int
;	O
}	O
len	int
-=	O
n	int
;	O
buf	*(void)
=	O
(	O
char	O
*	O
)	O
buf	*(void)
+	O
n	int
;	O
got	int
+=	O
n	int
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
pos	long
+=	O
n	int
;	O
}	O
while	O
(	O
len	int
)	O
;	O
return	O
got	int
;	O
}	O
int	O
ZEXPORT	O
gzread	(*(struct),*(void),int)->(int)
(	O
file	*(struct)
,	O
buf	*(void)
,	O
len	int
)	O
gzFile	*(struct)
file	*(struct)
;	O
voidp	*(void)
buf	*(void)
;	O
unsigned	O
len	int
;	O
{	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
state	*(struct)
;	O
if	O
(	O
file	*(struct)
==	O
NULL	O
)	O
return	O
-	O
1	int
;	O
state	*(struct)
=	O
(	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
)	O
file	*(struct)
;	O
if	O
(	O
state	*(struct)
->	O
mode	*(char)
!=	O
GZ_READ	int
||	O
(	O
state	*(struct)
->	O
err	int
!=	O
Z_OK	int
&&	O
state	*(struct)
->	O
err	int
!=	O
Z_BUF_ERROR	O
)	O
)	O
return	O
-	O
1	int
;	O
if	O
(	O
(	O
int	O
)	O
len	int
<	O
0	int
)	O
{	O
gz_error	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int,*(char))->(void)
(	O
state	*(struct)
,	O
Z_STREAM_ERROR	O
,	O
"request does not fit in an int"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
len	int
=	O
gz_read	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),*(void),long)->(long)
(	O
state	*(struct)
,	O
buf	*(void)
,	O
len	int
)	O
;	O
if	O
(	O
len	int
==	O
0	int
&&	O
state	*(struct)
->	O
err	int
!=	O
Z_OK	int
&&	O
state	*(struct)
->	O
err	int
!=	O
Z_BUF_ERROR	O
)	O
return	O
-	O
1	int
;	O
return	O
(	O
int	O
)	O
len	int
;	O
}	O
z_size_t	long
ZEXPORT	O
gzfread	(*(void),long,long,*(struct))->(long)
(	O
buf	*(void)
,	O
size	int
,	O
nitems	long
,	O
file	*(struct)
)	O
voidp	*(void)
buf	*(void)
;	O
z_size_t	long
size	int
;	O
z_size_t	long
nitems	long
;	O
gzFile	*(struct)
file	*(struct)
;	O
{	O
z_size_t	long
len	int
;	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
state	*(struct)
;	O
if	O
(	O
file	*(struct)
==	O
NULL	O
)	O
return	O
0	int
;	O
state	*(struct)
=	O
(	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
)	O
file	*(struct)
;	O
if	O
(	O
state	*(struct)
->	O
mode	*(char)
!=	O
GZ_READ	int
||	O
(	O
state	*(struct)
->	O
err	int
!=	O
Z_OK	int
&&	O
state	*(struct)
->	O
err	int
!=	O
Z_BUF_ERROR	O
)	O
)	O
return	O
0	int
;	O
len	int
=	O
nitems	long
*	O
size	int
;	O
if	O
(	O
size	int
&&	O
len	int
/	O
size	int
!=	O
nitems	long
)	O
{	O
gz_error	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int,*(char))->(void)
(	O
state	*(struct)
,	O
Z_STREAM_ERROR	O
,	O
"request does not fit in a size_t"	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
return	O
len	int
?	O
gz_read	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),*(void),long)->(long)
(	O
state	*(struct)
,	O
buf	*(void)
,	O
len	int
)	O
/	O
size	int
:	O
0	int
;	O
}	O
int	O
ZEXPORT	O
gzgetc	(*(struct))->(int)
(	O
file	*(struct)
)	O
gzFile	*(struct)
file	*(struct)
;	O
{	O
int	O
ret	int
;	O
unsigned	O
char	O
buf	*(void)
[	O
1	int
]	O
;	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
state	*(struct)
;	O
if	O
(	O
file	*(struct)
==	O
NULL	O
)	O
return	O
-	O
1	int
;	O
state	*(struct)
=	O
(	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
)	O
file	*(struct)
;	O
if	O
(	O
state	*(struct)
->	O
mode	*(char)
!=	O
GZ_READ	int
||	O
(	O
state	*(struct)
->	O
err	int
!=	O
Z_OK	int
&&	O
state	*(struct)
->	O
err	int
!=	O
Z_BUF_ERROR	O
)	O
)	O
return	O
-	O
1	int
;	O
if	O
(	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
)	O
{	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
--	O
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
pos	long
++	O
;	O
return	O
*	O
(	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
next	*(char)
)	O
++	O
;	O
}	O
ret	int
=	O
gz_read	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),*(void),long)->(long)
(	O
state	*(struct)
,	O
buf	*(void)
,	O
1	int
)	O
;	O
return	O
ret	int
<	O
1	int
?	O
-	O
1	int
:	O
buf	*(void)
[	O
0	int
]	O
;	O
}	O
int	O
ZEXPORT	O
gzgetc_	(*(struct(int,*(char),long)))->(int)
(	O
file	*(struct)
)	O
gzFile	*(struct)
file	*(struct)
;	O
{	O
return	O
gzgetc	(*(struct))->(int)
(	O
file	*(struct)
)	O
;	O
}	O
int	O
ZEXPORT	O
gzungetc	(int,*(struct))->(int)
(	O
c	int
,	O
file	*(struct)
)	O
int	O
c	int
;	O
gzFile	*(struct)
file	*(struct)
;	O
{	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
state	*(struct)
;	O
if	O
(	O
file	*(struct)
==	O
NULL	O
)	O
return	O
-	O
1	int
;	O
state	*(struct)
=	O
(	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
)	O
file	*(struct)
;	O
if	O
(	O
state	*(struct)
->	O
mode	*(char)
!=	O
GZ_READ	int
||	O
(	O
state	*(struct)
->	O
err	int
!=	O
Z_OK	int
&&	O
state	*(struct)
->	O
err	int
!=	O
Z_BUF_ERROR	O
)	O
)	O
return	O
-	O
1	int
;	O
if	O
(	O
state	*(struct)
->	O
seek	int
)	O
{	O
state	*(struct)
->	O
seek	int
=	O
0	int
;	O
if	O
(	O
gz_skip	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),long)->(int)
(	O
state	*(struct)
,	O
state	*(struct)
->	O
skip	long
)	O
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
c	int
<	O
0	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
==	O
0	int
)	O
{	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
=	O
1	int
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
next	*(char)
=	O
state	*(struct)
->	O
out	*((*(void),*(char),int)->(int))
+	O
(	O
state	*(struct)
->	O
size	int
<<	O
1	int
)	O
-	O
1	int
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
next	*(char)
[	O
0	int
]	O
=	O
(	O
unsigned	O
char	O
)	O
c	int
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
pos	long
--	O
;	O
state	*(struct)
->	O
past	int
=	O
0	int
;	O
return	O
c	int
;	O
}	O
if	O
(	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
==	O
(	O
state	*(struct)
->	O
size	int
<<	O
1	int
)	O
)	O
{	O
gz_error	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int,*(char))->(void)
(	O
state	*(struct)
,	O
Z_DATA_ERROR	O
,	O
"out of room to push characters"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
next	*(char)
==	O
state	*(struct)
->	O
out	*((*(void),*(char),int)->(int))
)	O
{	O
unsigned	O
char	O
*	O
src	*(char)
=	O
state	*(struct)
->	O
out	*((*(void),*(char),int)->(int))
+	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
;	O
unsigned	O
char	O
*	O
dest	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
=	O
state	*(struct)
->	O
out	*((*(void),*(char),int)->(int))
+	O
(	O
state	*(struct)
->	O
size	int
<<	O
1	int
)	O
;	O
while	O
(	O
src	*(char)
>	O
state	*(struct)
->	O
out	*((*(void),*(char),int)->(int))
)	O
*	O
--	O
dest	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
=	O
*	O
--	O
src	*(char)
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
next	*(char)
=	O
dest	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
;	O
}	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
++	O
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
next	*(char)
--	O
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
next	*(char)
[	O
0	int
]	O
=	O
(	O
unsigned	O
char	O
)	O
c	int
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
pos	long
--	O
;	O
state	*(struct)
->	O
past	int
=	O
0	int
;	O
return	O
c	int
;	O
}	O
char	O
*	O
ZEXPORT	O
gzgets	(*(struct),*(char),int)->(*(char))
(	O
file	*(struct)
,	O
buf	*(void)
,	O
len	int
)	O
gzFile	*(struct)
file	*(struct)
;	O
char	O
*	O
buf	*(void)
;	O
int	O
len	int
;	O
{	O
unsigned	O
left	int
,	O
n	int
;	O
char	O
*	O
str	*(char)
;	O
unsigned	O
char	O
*	O
eol	*(char)
;	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
state	*(struct)
;	O
if	O
(	O
file	*(struct)
==	O
NULL	O
||	O
buf	*(void)
==	O
NULL	O
||	O
len	int
<	O
1	int
)	O
return	O
NULL	O
;	O
state	*(struct)
=	O
(	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
)	O
file	*(struct)
;	O
if	O
(	O
state	*(struct)
->	O
mode	*(char)
!=	O
GZ_READ	int
||	O
(	O
state	*(struct)
->	O
err	int
!=	O
Z_OK	int
&&	O
state	*(struct)
->	O
err	int
!=	O
Z_BUF_ERROR	O
)	O
)	O
return	O
NULL	O
;	O
if	O
(	O
state	*(struct)
->	O
seek	int
)	O
{	O
state	*(struct)
->	O
seek	int
=	O
0	int
;	O
if	O
(	O
gz_skip	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),long)->(int)
(	O
state	*(struct)
,	O
state	*(struct)
->	O
skip	long
)	O
==	O
-	O
1	int
)	O
return	O
NULL	O
;	O
}	O
str	*(char)
=	O
buf	*(void)
;	O
left	int
=	O
(	O
unsigned	O
)	O
len	int
-	O
1	int
;	O
if	O
(	O
left	int
)	O
do	O
{	O
if	O
(	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
==	O
0	int
&&	O
gz_fetch	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))))->(int)
(	O
state	*(struct)
)	O
==	O
-	O
1	int
)	O
return	O
NULL	O
;	O
if	O
(	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
==	O
0	int
)	O
{	O
state	*(struct)
->	O
past	int
=	O
1	int
;	O
break	O
;	O
}	O
n	int
=	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
>	O
left	int
?	O
left	int
:	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
;	O
eol	*(char)
=	O
(	O
unsigned	O
char	O
*	O
)	O
memchr	(*(void),int,long)->(*(void))
(	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
next	*(char)
,	O
'\n'	O
,	O
n	int
)	O
;	O
if	O
(	O
eol	*(char)
!=	O
NULL	O
)	O
n	int
=	O
(	O
unsigned	O
)	O
(	O
eol	*(char)
-	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
next	*(char)
)	O
+	O
1	int
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
buf	*(void)
,	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
next	*(char)
,	O
n	int
)	O
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
-=	O
n	int
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
next	*(char)
+=	O
n	int
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
pos	long
+=	O
n	int
;	O
left	int
-=	O
n	int
;	O
buf	*(void)
+=	O
n	int
;	O
}	O
while	O
(	O
left	int
&&	O
eol	*(char)
==	O
NULL	O
)	O
;	O
if	O
(	O
buf	*(void)
==	O
str	*(char)
)	O
return	O
NULL	O
;	O
buf	*(void)
[	O
0	int
]	O
=	O
0	int
;	O
return	O
str	*(char)
;	O
}	O
int	O
ZEXPORT	O
gzdirect	(*(struct))->(int)
(	O
file	*(struct)
)	O
gzFile	*(struct)
file	*(struct)
;	O
{	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
state	*(struct)
;	O
if	O
(	O
file	*(struct)
==	O
NULL	O
)	O
return	O
0	int
;	O
state	*(struct)
=	O
(	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
)	O
file	*(struct)
;	O
if	O
(	O
state	*(struct)
->	O
mode	*(char)
==	O
GZ_READ	int
&&	O
state	*(struct)
->	O
how	int
==	O
LOOK	int
&&	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
have	int
==	O
0	int
)	O
(	O
void	O
)	O
gz_look	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))))->(int)
(	O
state	*(struct)
)	O
;	O
return	O
state	*(struct)
->	O
direct	int
;	O
}	O
int	O
ZEXPORT	O
gzclose_r	(*(struct))->(int)
(	O
file	*(struct)
)	O
gzFile	*(struct)
file	*(struct)
;	O
{	O
int	O
ret	int
,	O
err	int
;	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
state	*(struct)
;	O
if	O
(	O
file	*(struct)
==	O
NULL	O
)	O
return	O
Z_STREAM_ERROR	O
;	O
state	*(struct)
=	O
(	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
)	O
file	*(struct)
;	O
if	O
(	O
state	*(struct)
->	O
mode	*(char)
!=	O
GZ_READ	int
)	O
return	O
Z_STREAM_ERROR	O
;	O
if	O
(	O
state	*(struct)
->	O
size	int
)	O
{	O
inflateEnd	(*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))->(int)
(	O
&	O
(	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
)	O
)	O
;	O
free	(*(void))->(void)
(	O
state	*(struct)
->	O
out	*((*(void),*(char),int)->(int))
)	O
;	O
free	(*(void))->(void)
(	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
)	O
;	O
}	O
err	int
=	O
state	*(struct)
->	O
err	int
==	O
Z_BUF_ERROR	O
?	O
Z_BUF_ERROR	O
:	O
Z_OK	int
;	O
gz_error	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int,*(char))->(void)
(	O
state	*(struct)
,	O
Z_OK	int
,	O
NULL	O
)	O
;	O
free	(*(void))->(void)
(	O
state	*(struct)
->	O
path	*(char)
)	O
;	O
ret	int
=	O
close	(int)->(int)
(	O
state	*(struct)
->	O
fd	int
)	O
;	O
free	(*(void))->(void)
(	O
state	*(struct)
)	O
;	O
return	O
ret	int
?	O
Z_ERRNO	O
:	O
err	int
;	O
}	O
