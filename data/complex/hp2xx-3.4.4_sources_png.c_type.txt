void	O
pdImagePNG	(*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
im	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int))
,	O
fd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
pdImagePtr	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int))
im	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int))
;	O
FILE	struct
*	O
fd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
{	O
png_structp	O
png_ptr	O
;	O
png_infop	O
info_ptr	O
;	O
png_uint_32	O
width	O
,	O
height	O
;	O
int	O
bit_depth	int
;	O
struct	O
png_color_struct	O
*	O
palette	*(struct)
;	O
int	O
ci	int
;	O
png_bytep	O
*	O
row_pointers	O
;	O
png_ptr	O
=	O
png_create_write_struct	()->(int)
(	O
PNG_LIBPNG_VER_STRING	O
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
)	O
;	O
if	O
(	O
!	O
png_ptr	O
)	O
return	O
;	O
info_ptr	O
=	O
png_create_info_struct	()->(int)
(	O
png_ptr	O
)	O
;	O
if	O
(	O
!	O
info_ptr	O
)	O
{	O
png_destroy_write_struct	()->(int)
(	O
&	O
png_ptr	O
,	O
(	O
png_infopp	O
)	O
NULL	O
)	O
;	O
return	O
;	O
}	O
if	O
(	O
setjmp	()->(int)
(	O
png_ptr	O
->	O
jmpbuf	O
)	O
)	O
{	O
png_destroy_write_struct	()->(int)
(	O
&	O
png_ptr	O
,	O
&	O
info_ptr	O
)	O
;	O
return	O
;	O
}	O
png_data_freer	()->(int)
(	O
png_ptr	O
,	O
info_ptr	O
,	O
PNG_DESTROY_WILL_FREE_DATA	O
,	O
-	O
1	int
)	O
;	O
png_init_io	()->(int)
(	O
png_ptr	O
,	O
fd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
png_set_filter	()->(int)
(	O
png_ptr	O
,	O
0	int
,	O
PNG_FILTER_NONE	O
|	O
PNG_FILTER_SUB	O
|	O
PNG_FILTER_PAETH	O
)	O
;	O
png_set_compression_level	()->(int)
(	O
png_ptr	O
,	O
Z_BEST_COMPRESSION	O
)	O
;	O
png_set_compression_mem_level	()->(int)
(	O
png_ptr	O
,	O
8	int
)	O
;	O
png_set_compression_strategy	()->(int)
(	O
png_ptr	O
,	O
Z_DEFAULT_STRATEGY	O
)	O
;	O
png_set_compression_window_bits	()->(int)
(	O
png_ptr	O
,	O
15	int
)	O
;	O
png_set_compression_method	()->(int)
(	O
png_ptr	O
,	O
8	int
)	O
;	O
png_set_compression_buffer_size	()->(int)
(	O
png_ptr	O
,	O
8192	int
)	O
;	O
width	O
=	O
(	O
png_uint_32	O
)	O
im	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int))
->	O
sx	int
;	O
height	O
=	O
(	O
png_uint_32	O
)	O
im	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int))
->	O
sy	int
;	O
bit_depth	int
=	O
8	int
;	O
png_set_IHDR	()->(int)
(	O
png_ptr	O
,	O
info_ptr	O
,	O
width	O
,	O
height	O
,	O
bit_depth	int
,	O
PNG_COLOR_TYPE_PALETTE	O
,	O
PNG_INTERLACE_NONE	O
,	O
PNG_COMPRESSION_TYPE_DEFAULT	O
,	O
PNG_FILTER_TYPE_DEFAULT	O
)	O
;	O
palette	*(struct)
=	O
png_malloc	()->(int)
(	O
png_ptr	O
,	O
PDNCOL	int
*	O
sizeof	O
(	O
png_color	O
)	O
)	O
;	O
for	O
(	O
ci	int
=	O
0	int
;	O
ci	int
<	O
PDNCOL	int
;	O
ci	int
++	O
)	O
{	O
palette	*(struct)
[	O
ci	int
]	O
.	O
red	array(int)
=	O
(	O
png_byte	O
)	O
im	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int))
->	O
red	array(int)
[	O
ci	int
]	O
;	O
palette	*(struct)
[	O
ci	int
]	O
.	O
green	array(int)
=	O
(	O
png_byte	O
)	O
im	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int))
->	O
green	array(int)
[	O
ci	int
]	O
;	O
palette	*(struct)
[	O
ci	int
]	O
.	O
blue	array(int)
=	O
(	O
png_byte	O
)	O
im	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int))
->	O
blue	array(int)
[	O
ci	int
]	O
;	O
}	O
png_set_PLTE	()->(int)
(	O
png_ptr	O
,	O
info_ptr	O
,	O
palette	*(struct)
,	O
PDNCOL	int
)	O
;	O
png_write_info	()->(int)
(	O
png_ptr	O
,	O
info_ptr	O
)	O
;	O
png_set_packing	()->(int)
(	O
png_ptr	O
)	O
;	O
row_pointers	O
=	O
im	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int))
->	O
pixels	*(*(char))
;	O
png_write_image	()->(int)
(	O
png_ptr	O
,	O
row_pointers	O
)	O
;	O
png_write_end	()->(int)
(	O
png_ptr	O
,	O
info_ptr	O
)	O
;	O
png_destroy_write_struct	()->(int)
(	O
&	O
png_ptr	O
,	O
&	O
info_ptr	O
)	O
;	O
png_free_data	()->(int)
(	O
png_ptr	O
,	O
info_ptr	O
,	O
PNG_FREE_ALL	O
,	O
-	O
1	int
)	O
;	O
return	O
;	O
}	O
