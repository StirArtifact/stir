extern	O
struct	O
desc	O
abs_0	O
(	O
struct	O
arg	O
)	O
;	O
extern	O
struct	O
desc	O
iabs_0	O
(	O
struct	O
arg	O
)	O
;	O
extern	O
struct	O
desc	O
sign_0	O
(	O
struct	O
arg	O
)	O
;	O
extern	O
struct	O
desc	O
entier_0	O
(	O
struct	O
arg	O
)	O
;	O
extern	O
struct	O
desc	O
sqrt_0	O
(	O
struct	O
arg	O
)	O
;	O
extern	O
struct	O
desc	O
sin_0	O
(	O
struct	O
arg	O
)	O
;	O
extern	O
struct	O
desc	O
cos_0	O
(	O
struct	O
arg	O
)	O
;	O
extern	O
struct	O
desc	O
arctan_0	O
(	O
struct	O
arg	O
)	O
;	O
extern	O
struct	O
desc	O
ln_0	O
(	O
struct	O
arg	O
)	O
;	O
extern	O
struct	O
desc	O
exp_0	O
(	O
struct	O
arg	O
)	O
;	O
extern	O
struct	O
desc	O
stop_0	O
(	O
void	O
)	O
;	O
extern	O
struct	O
desc	O
fault_0	O
(	O
struct	O
arg	O
,	O
struct	O
arg	O
)	O
;	O
extern	O
struct	O
desc	O
inchar_0	O
(	O
struct	O
arg	O
,	O
struct	O
arg	O
,	O
struct	O
arg	O
)	O
;	O
extern	O
struct	O
desc	O
outchar_0	O
(	O
struct	O
arg	O
,	O
struct	O
arg	O
,	O
struct	O
arg	O
)	O
;	O
extern	O
struct	O
desc	O
length_0	O
(	O
struct	O
arg	O
)	O
;	O
extern	O
struct	O
desc	O
outstring_0	O
(	O
struct	O
arg	O
,	O
struct	O
arg	O
)	O
;	O
extern	O
struct	O
desc	O
outterminator_0	O
(	O
struct	O
arg	O
)	O
;	O
extern	O
struct	O
desc	O
ininteger_0	O
(	O
struct	O
arg	O
,	O
struct	O
arg	O
)	O
;	O
extern	O
struct	O
desc	O
outinteger_0	O
(	O
struct	O
arg	O
,	O
struct	O
arg	O
)	O
;	O
extern	O
struct	O
desc	O
inreal_0	O
(	O
struct	O
arg	O
,	O
struct	O
arg	O
)	O
;	O
extern	O
struct	O
desc	O
outreal_0	O
(	O
struct	O
arg	O
,	O
struct	O
arg	O
)	O
;	O
extern	O
struct	O
desc	O
maxreal_0	O
(	O
void	O
)	O
;	O
extern	O
struct	O
desc	O
minreal_0	O
(	O
void	O
)	O
;	O
extern	O
struct	O
desc	O
maxint_0	O
(	O
void	O
)	O
;	O
extern	O
struct	O
desc	O
epsilon_0	O
(	O
void	O
)	O
;	O
struct	O
dsa_abs_0	O
{	O
char	O
*	O
proc	O
;	O
char	O
*	O
file	O
;	O
int	O
line	O
;	O
struct	O
dsa	O
*	O
parent	O
;	O
struct	O
dsa	O
*	O
vector	O
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	O
*	O
old_top_0	O
;	O
struct	O
mem	O
*	O
new_top_0	O
;	O
struct	O
mem	O
*	O
old_top_1	O
;	O
struct	O
mem	O
*	O
new_top_1	O
;	O
struct	O
desc	O
retval	O
;	O
double	O
E_1	O
;	O
}	O
;	O
struct	O
dsa_iabs_0	O
{	O
char	O
*	O
proc	O
;	O
char	O
*	O
file	O
;	O
int	O
line	O
;	O
struct	O
dsa	O
*	O
parent	O
;	O
struct	O
dsa	O
*	O
vector	O
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	O
*	O
old_top_0	O
;	O
struct	O
mem	O
*	O
new_top_0	O
;	O
struct	O
mem	O
*	O
old_top_1	O
;	O
struct	O
mem	O
*	O
new_top_1	O
;	O
struct	O
desc	O
retval	O
;	O
int	O
E_3	O
;	O
}	O
;	O
struct	O
dsa_sign_0	O
{	O
char	O
*	O
proc	O
;	O
char	O
*	O
file	O
;	O
int	O
line	O
;	O
struct	O
dsa	O
*	O
parent	O
;	O
struct	O
dsa	O
*	O
vector	O
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	O
*	O
old_top_0	O
;	O
struct	O
mem	O
*	O
new_top_0	O
;	O
struct	O
mem	O
*	O
old_top_1	O
;	O
struct	O
mem	O
*	O
new_top_1	O
;	O
struct	O
desc	O
retval	O
;	O
double	O
E_5	O
;	O
}	O
;	O
struct	O
dsa_entier_0	O
{	O
char	O
*	O
proc	O
;	O
char	O
*	O
file	O
;	O
int	O
line	O
;	O
struct	O
dsa	O
*	O
parent	O
;	O
struct	O
dsa	O
*	O
vector	O
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	O
*	O
old_top_0	O
;	O
struct	O
mem	O
*	O
new_top_0	O
;	O
struct	O
mem	O
*	O
old_top_1	O
;	O
struct	O
mem	O
*	O
new_top_1	O
;	O
struct	O
mem	O
*	O
old_top_2	O
;	O
struct	O
mem	O
*	O
new_top_2	O
;	O
struct	O
desc	O
retval	O
;	O
double	O
E_7	O
;	O
int	O
j_9	O
;	O
}	O
;	O
struct	O
dsa_sqrt_0	O
{	O
char	O
*	O
proc	O
;	O
char	O
*	O
file	O
;	O
int	O
line	O
;	O
struct	O
dsa	O
*	O
parent	O
;	O
struct	O
dsa	O
*	O
vector	O
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	O
*	O
old_top_0	O
;	O
struct	O
mem	O
*	O
new_top_0	O
;	O
struct	O
mem	O
*	O
old_top_1	O
;	O
struct	O
mem	O
*	O
new_top_1	O
;	O
struct	O
desc	O
retval	O
;	O
double	O
E_10	O
;	O
}	O
;	O
struct	O
dsa_sin_0	O
{	O
char	O
*	O
proc	O
;	O
char	O
*	O
file	O
;	O
int	O
line	O
;	O
struct	O
dsa	O
*	O
parent	O
;	O
struct	O
dsa	O
*	O
vector	O
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	O
*	O
old_top_0	O
;	O
struct	O
mem	O
*	O
new_top_0	O
;	O
struct	O
mem	O
*	O
old_top_1	O
;	O
struct	O
mem	O
*	O
new_top_1	O
;	O
struct	O
desc	O
retval	O
;	O
double	O
E_12	O
;	O
}	O
;	O
struct	O
dsa_cos_0	O
{	O
char	O
*	O
proc	O
;	O
char	O
*	O
file	O
;	O
int	O
line	O
;	O
struct	O
dsa	O
*	O
parent	O
;	O
struct	O
dsa	O
*	O
vector	O
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	O
*	O
old_top_0	O
;	O
struct	O
mem	O
*	O
new_top_0	O
;	O
struct	O
mem	O
*	O
old_top_1	O
;	O
struct	O
mem	O
*	O
new_top_1	O
;	O
struct	O
desc	O
retval	O
;	O
double	O
E_14	O
;	O
}	O
;	O
struct	O
dsa_arctan_0	O
{	O
char	O
*	O
proc	O
;	O
char	O
*	O
file	O
;	O
int	O
line	O
;	O
struct	O
dsa	O
*	O
parent	O
;	O
struct	O
dsa	O
*	O
vector	O
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	O
*	O
old_top_0	O
;	O
struct	O
mem	O
*	O
new_top_0	O
;	O
struct	O
mem	O
*	O
old_top_1	O
;	O
struct	O
mem	O
*	O
new_top_1	O
;	O
struct	O
desc	O
retval	O
;	O
double	O
E_16	O
;	O
}	O
;	O
struct	O
dsa_ln_0	O
{	O
char	O
*	O
proc	O
;	O
char	O
*	O
file	O
;	O
int	O
line	O
;	O
struct	O
dsa	O
*	O
parent	O
;	O
struct	O
dsa	O
*	O
vector	O
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	O
*	O
old_top_0	O
;	O
struct	O
mem	O
*	O
new_top_0	O
;	O
struct	O
mem	O
*	O
old_top_1	O
;	O
struct	O
mem	O
*	O
new_top_1	O
;	O
struct	O
desc	O
retval	O
;	O
double	O
E_18	O
;	O
}	O
;	O
struct	O
dsa_exp_0	O
{	O
char	O
*	O
proc	O
;	O
char	O
*	O
file	O
;	O
int	O
line	O
;	O
struct	O
dsa	O
*	O
parent	O
;	O
struct	O
dsa	O
*	O
vector	O
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	O
*	O
old_top_0	O
;	O
struct	O
mem	O
*	O
new_top_0	O
;	O
struct	O
mem	O
*	O
old_top_1	O
;	O
struct	O
mem	O
*	O
new_top_1	O
;	O
struct	O
desc	O
retval	O
;	O
double	O
E_20	O
;	O
}	O
;	O
struct	O
dsa_stop_0	O
{	O
char	O
*	O
proc	O
;	O
char	O
*	O
file	O
;	O
int	O
line	O
;	O
struct	O
dsa	O
*	O
parent	O
;	O
struct	O
dsa	O
*	O
vector	O
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	O
*	O
old_top_0	O
;	O
struct	O
mem	O
*	O
new_top_0	O
;	O
struct	O
mem	O
*	O
old_top_1	O
;	O
struct	O
mem	O
*	O
new_top_1	O
;	O
struct	O
desc	O
retval	O
;	O
}	O
;	O
struct	O
dsa_fault_0	O
{	O
char	O
*	O
proc	O
;	O
char	O
*	O
file	O
;	O
int	O
line	O
;	O
struct	O
dsa	O
*	O
parent	O
;	O
struct	O
dsa	O
*	O
vector	O
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	O
*	O
old_top_0	O
;	O
struct	O
mem	O
*	O
new_top_0	O
;	O
struct	O
mem	O
*	O
old_top_1	O
;	O
struct	O
mem	O
*	O
new_top_1	O
;	O
struct	O
desc	O
retval	O
;	O
char	O
*	O
str_24	O
;	O
double	O
r_24	O
;	O
}	O
;	O
struct	O
dsa_inchar_0	O
{	O
char	O
*	O
proc	O
;	O
char	O
*	O
file	O
;	O
int	O
line	O
;	O
struct	O
dsa	O
*	O
parent	O
;	O
struct	O
dsa	O
*	O
vector	O
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	O
*	O
old_top_0	O
;	O
struct	O
mem	O
*	O
new_top_0	O
;	O
struct	O
mem	O
*	O
old_top_1	O
;	O
struct	O
mem	O
*	O
new_top_1	O
;	O
struct	O
mem	O
*	O
old_top_2	O
;	O
struct	O
mem	O
*	O
new_top_2	O
;	O
struct	O
desc	O
retval	O
;	O
int	O
channel_26	O
;	O
char	O
*	O
str_26	O
;	O
struct	O
arg	O
int_26	O
;	O
int	O
val_28	O
;	O
}	O
;	O
struct	O
dsa_outchar_0	O
{	O
char	O
*	O
proc	O
;	O
char	O
*	O
file	O
;	O
int	O
line	O
;	O
struct	O
dsa	O
*	O
parent	O
;	O
struct	O
dsa	O
*	O
vector	O
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	O
*	O
old_top_0	O
;	O
struct	O
mem	O
*	O
new_top_0	O
;	O
struct	O
mem	O
*	O
old_top_1	O
;	O
struct	O
mem	O
*	O
new_top_1	O
;	O
struct	O
desc	O
retval	O
;	O
int	O
channel_29	O
;	O
char	O
*	O
str_29	O
;	O
int	O
int_29	O
;	O
}	O
;	O
struct	O
dsa_length_0	O
{	O
char	O
*	O
proc	O
;	O
char	O
*	O
file	O
;	O
int	O
line	O
;	O
struct	O
dsa	O
*	O
parent	O
;	O
struct	O
dsa	O
*	O
vector	O
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	O
*	O
old_top_0	O
;	O
struct	O
mem	O
*	O
new_top_0	O
;	O
struct	O
mem	O
*	O
old_top_1	O
;	O
struct	O
mem	O
*	O
new_top_1	O
;	O
struct	O
desc	O
retval	O
;	O
char	O
*	O
str_31	O
;	O
}	O
;	O
struct	O
dsa_outstring_0	O
{	O
char	O
*	O
proc	O
;	O
char	O
*	O
file	O
;	O
int	O
line	O
;	O
struct	O
dsa	O
*	O
parent	O
;	O
struct	O
dsa	O
*	O
vector	O
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	O
*	O
old_top_0	O
;	O
struct	O
mem	O
*	O
new_top_0	O
;	O
struct	O
mem	O
*	O
old_top_1	O
;	O
struct	O
mem	O
*	O
new_top_1	O
;	O
struct	O
desc	O
retval	O
;	O
int	O
channel_33	O
;	O
char	O
*	O
str_33	O
;	O
}	O
;	O
struct	O
dsa_outterminator_0	O
{	O
char	O
*	O
proc	O
;	O
char	O
*	O
file	O
;	O
int	O
line	O
;	O
struct	O
dsa	O
*	O
parent	O
;	O
struct	O
dsa	O
*	O
vector	O
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	O
*	O
old_top_0	O
;	O
struct	O
mem	O
*	O
new_top_0	O
;	O
struct	O
mem	O
*	O
old_top_1	O
;	O
struct	O
mem	O
*	O
new_top_1	O
;	O
struct	O
desc	O
retval	O
;	O
int	O
channel_35	O
;	O
}	O
;	O
struct	O
dsa_ininteger_0	O
{	O
char	O
*	O
proc	O
;	O
char	O
*	O
file	O
;	O
int	O
line	O
;	O
struct	O
dsa	O
*	O
parent	O
;	O
struct	O
dsa	O
*	O
vector	O
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	O
*	O
old_top_0	O
;	O
struct	O
mem	O
*	O
new_top_0	O
;	O
struct	O
mem	O
*	O
old_top_1	O
;	O
struct	O
mem	O
*	O
new_top_1	O
;	O
struct	O
mem	O
*	O
old_top_2	O
;	O
struct	O
mem	O
*	O
new_top_2	O
;	O
struct	O
desc	O
retval	O
;	O
int	O
channel_37	O
;	O
struct	O
arg	O
int_37	O
;	O
int	O
val_39	O
;	O
}	O
;	O
struct	O
dsa_outinteger_0	O
{	O
char	O
*	O
proc	O
;	O
char	O
*	O
file	O
;	O
int	O
line	O
;	O
struct	O
dsa	O
*	O
parent	O
;	O
struct	O
dsa	O
*	O
vector	O
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	O
*	O
old_top_0	O
;	O
struct	O
mem	O
*	O
new_top_0	O
;	O
struct	O
mem	O
*	O
old_top_1	O
;	O
struct	O
mem	O
*	O
new_top_1	O
;	O
struct	O
desc	O
retval	O
;	O
int	O
channel_40	O
;	O
int	O
int_40	O
;	O
}	O
;	O
struct	O
dsa_inreal_0	O
{	O
char	O
*	O
proc	O
;	O
char	O
*	O
file	O
;	O
int	O
line	O
;	O
struct	O
dsa	O
*	O
parent	O
;	O
struct	O
dsa	O
*	O
vector	O
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	O
*	O
old_top_0	O
;	O
struct	O
mem	O
*	O
new_top_0	O
;	O
struct	O
mem	O
*	O
old_top_1	O
;	O
struct	O
mem	O
*	O
new_top_1	O
;	O
struct	O
mem	O
*	O
old_top_2	O
;	O
struct	O
mem	O
*	O
new_top_2	O
;	O
struct	O
desc	O
retval	O
;	O
int	O
channel_42	O
;	O
struct	O
arg	O
re_42	O
;	O
double	O
val_44	O
;	O
}	O
;	O
struct	O
dsa_outreal_0	O
{	O
char	O
*	O
proc	O
;	O
char	O
*	O
file	O
;	O
int	O
line	O
;	O
struct	O
dsa	O
*	O
parent	O
;	O
struct	O
dsa	O
*	O
vector	O
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	O
*	O
old_top_0	O
;	O
struct	O
mem	O
*	O
new_top_0	O
;	O
struct	O
mem	O
*	O
old_top_1	O
;	O
struct	O
mem	O
*	O
new_top_1	O
;	O
struct	O
desc	O
retval	O
;	O
int	O
channel_45	O
;	O
double	O
re_45	O
;	O
}	O
;	O
struct	O
dsa_maxreal_0	O
{	O
char	O
*	O
proc	O
;	O
char	O
*	O
file	O
;	O
int	O
line	O
;	O
struct	O
dsa	O
*	O
parent	O
;	O
struct	O
dsa	O
*	O
vector	O
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	O
*	O
old_top_0	O
;	O
struct	O
mem	O
*	O
new_top_0	O
;	O
struct	O
mem	O
*	O
old_top_1	O
;	O
struct	O
mem	O
*	O
new_top_1	O
;	O
struct	O
desc	O
retval	O
;	O
}	O
;	O
struct	O
dsa_minreal_0	O
{	O
char	O
*	O
proc	O
;	O
char	O
*	O
file	O
;	O
int	O
line	O
;	O
struct	O
dsa	O
*	O
parent	O
;	O
struct	O
dsa	O
*	O
vector	O
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	O
*	O
old_top_0	O
;	O
struct	O
mem	O
*	O
new_top_0	O
;	O
struct	O
mem	O
*	O
old_top_1	O
;	O
struct	O
mem	O
*	O
new_top_1	O
;	O
struct	O
desc	O
retval	O
;	O
}	O
;	O
struct	O
dsa_maxint_0	O
{	O
char	O
*	O
proc	O
;	O
char	O
*	O
file	O
;	O
int	O
line	O
;	O
struct	O
dsa	O
*	O
parent	O
;	O
struct	O
dsa	O
*	O
vector	O
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	O
*	O
old_top_0	O
;	O
struct	O
mem	O
*	O
new_top_0	O
;	O
struct	O
mem	O
*	O
old_top_1	O
;	O
struct	O
mem	O
*	O
new_top_1	O
;	O
struct	O
desc	O
retval	O
;	O
}	O
;	O
struct	O
dsa_epsilon_0	O
{	O
char	O
*	O
proc	O
;	O
char	O
*	O
file	O
;	O
int	O
line	O
;	O
struct	O
dsa	O
*	O
parent	O
;	O
struct	O
dsa	O
*	O
vector	O
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	O
*	O
old_top_0	O
;	O
struct	O
mem	O
*	O
new_top_0	O
;	O
struct	O
mem	O
*	O
old_top_1	O
;	O
struct	O
mem	O
*	O
new_top_1	O
;	O
struct	O
desc	O
retval	O
;	O
}	O
;	O
struct	O
desc	O
abs_0	O
(	O
struct	O
arg	O
E_1	O
)	O
{	O
struct	O
dsa_abs_0	O
my_dsa	O
;	O
register	O
struct	O
dsa_abs_0	O
*	O
dsa_0	O
=	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
proc	O
=	O
"abs"	*(char)
;	O
my_dsa	O
.	O
file	O
=	O
"alglib1.alg"	*(char)
;	O
my_dsa	O
.	O
line	O
=	O
26	int
;	O
my_dsa	O
.	O
parent	O
=	O
active_dsa	O
,	O
active_dsa	O
=	O
(	O
struct	O
dsa	O
*	O
)	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
vector	O
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
;	O
dsa_0	O
->	O
old_top_0	O
=	O
stack_top	O
;	O
my_dsa	O
.	O
line	O
=	O
27	int
;	O
my_dsa	O
.	O
E_1	O
=	O
get_real	O
(	O
(	O
global_dsa	O
=	O
E_1	O
.	O
arg2	O
,	O
(	O
*	O
(	O
struct	O
desc	O
(	O
*	O
)	O
(	O
void	O
)	O
)	O
E_1	O
.	O
arg1	O
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	O
->	O
new_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
old_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
28	int
;	O
dsa_0	O
->	O
retval	O
.	O
u	O
.	O
real_val	O
=	O
(	O
(	O
notless	O
(	O
dsa_0	O
->	O
E_1	O
,	O
.0	int
)	O
)	O
?	O
(	O
dsa_0	O
->	O
E_1	O
)	O
:	O
(	O
-	O
dsa_0	O
->	O
E_1	O
)	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_1	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_0	O
)	O
;	O
my_dsa	O
.	O
retval	O
.	O
lval	O
=	O
0	int
;	O
my_dsa	O
.	O
retval	O
.	O
type	O
=	O
'r'	O
;	O
active_dsa	O
=	O
my_dsa	O
.	O
parent	O
;	O
return	O
my_dsa	O
.	O
retval	O
;	O
}	O
struct	O
desc	O
iabs_0	O
(	O
struct	O
arg	O
E_3	O
)	O
{	O
struct	O
dsa_iabs_0	O
my_dsa	O
;	O
register	O
struct	O
dsa_iabs_0	O
*	O
dsa_0	O
=	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
proc	O
=	O
"iabs"	*(char)
;	O
my_dsa	O
.	O
file	O
=	O
"alglib1.alg"	*(char)
;	O
my_dsa	O
.	O
line	O
=	O
30	int
;	O
my_dsa	O
.	O
parent	O
=	O
active_dsa	O
,	O
active_dsa	O
=	O
(	O
struct	O
dsa	O
*	O
)	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
vector	O
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
;	O
dsa_0	O
->	O
old_top_0	O
=	O
stack_top	O
;	O
my_dsa	O
.	O
line	O
=	O
31	int
;	O
my_dsa	O
.	O
E_3	O
=	O
get_int	O
(	O
(	O
global_dsa	O
=	O
E_3	O
.	O
arg2	O
,	O
(	O
*	O
(	O
struct	O
desc	O
(	O
*	O
)	O
(	O
void	O
)	O
)	O
E_3	O
.	O
arg1	O
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	O
->	O
new_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
old_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
32	int
;	O
dsa_0	O
->	O
retval	O
.	O
u	O
.	O
int_val	O
=	O
(	O
(	O
notless	O
(	O
dsa_0	O
->	O
E_3	O
,	O
0	int
)	O
)	O
?	O
(	O
dsa_0	O
->	O
E_3	O
)	O
:	O
(	O
-	O
dsa_0	O
->	O
E_3	O
)	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_1	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_0	O
)	O
;	O
my_dsa	O
.	O
retval	O
.	O
lval	O
=	O
0	int
;	O
my_dsa	O
.	O
retval	O
.	O
type	O
=	O
'i'	O
;	O
active_dsa	O
=	O
my_dsa	O
.	O
parent	O
;	O
return	O
my_dsa	O
.	O
retval	O
;	O
}	O
struct	O
desc	O
sign_0	O
(	O
struct	O
arg	O
E_5	O
)	O
{	O
struct	O
dsa_sign_0	O
my_dsa	O
;	O
register	O
struct	O
dsa_sign_0	O
*	O
dsa_0	O
=	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
proc	O
=	O
"sign"	*(char)
;	O
my_dsa	O
.	O
file	O
=	O
"alglib1.alg"	*(char)
;	O
my_dsa	O
.	O
line	O
=	O
34	int
;	O
my_dsa	O
.	O
parent	O
=	O
active_dsa	O
,	O
active_dsa	O
=	O
(	O
struct	O
dsa	O
*	O
)	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
vector	O
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
;	O
dsa_0	O
->	O
old_top_0	O
=	O
stack_top	O
;	O
my_dsa	O
.	O
line	O
=	O
35	int
;	O
my_dsa	O
.	O
E_5	O
=	O
get_real	O
(	O
(	O
global_dsa	O
=	O
E_5	O
.	O
arg2	O
,	O
(	O
*	O
(	O
struct	O
desc	O
(	O
*	O
)	O
(	O
void	O
)	O
)	O
E_5	O
.	O
arg1	O
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	O
->	O
new_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
old_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
36	int
;	O
dsa_0	O
->	O
retval	O
.	O
u	O
.	O
int_val	O
=	O
(	O
(	O
greater	O
(	O
dsa_0	O
->	O
E_5	O
,	O
.0	int
)	O
)	O
?	O
(	O
1	int
)	O
:	O
(	O
(	O
(	O
less	O
(	O
dsa_0	O
->	O
E_5	O
,	O
.0	int
)	O
)	O
?	O
(	O
-	O
1	int
)	O
:	O
(	O
0	int
)	O
)	O
)	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_1	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_0	O
)	O
;	O
my_dsa	O
.	O
retval	O
.	O
lval	O
=	O
0	int
;	O
my_dsa	O
.	O
retval	O
.	O
type	O
=	O
'i'	O
;	O
active_dsa	O
=	O
my_dsa	O
.	O
parent	O
;	O
return	O
my_dsa	O
.	O
retval	O
;	O
}	O
struct	O
desc	O
entier_0	O
(	O
struct	O
arg	O
E_7	O
)	O
{	O
struct	O
dsa_entier_0	O
my_dsa	O
;	O
register	O
struct	O
dsa_entier_0	O
*	O
dsa_0	O
=	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
proc	O
=	O
"entier"	*(char)
;	O
my_dsa	O
.	O
file	O
=	O
"alglib1.alg"	*(char)
;	O
my_dsa	O
.	O
line	O
=	O
39	int
;	O
my_dsa	O
.	O
parent	O
=	O
active_dsa	O
,	O
active_dsa	O
=	O
(	O
struct	O
dsa	O
*	O
)	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
vector	O
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
;	O
dsa_0	O
->	O
old_top_0	O
=	O
stack_top	O
;	O
my_dsa	O
.	O
line	O
=	O
40	int
;	O
my_dsa	O
.	O
E_7	O
=	O
get_real	O
(	O
(	O
global_dsa	O
=	O
E_7	O
.	O
arg2	O
,	O
(	O
*	O
(	O
struct	O
desc	O
(	O
*	O
)	O
(	O
void	O
)	O
)	O
E_7	O
.	O
arg1	O
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	O
->	O
new_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
old_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
43	int
;	O
dsa_0	O
->	O
old_top_2	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_2	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
45	int
;	O
dsa_0	O
->	O
j_9	O
=	O
real2int	O
(	O
dsa_0	O
->	O
E_7	O
)	O
;	O
dsa_0	O
->	O
line	O
=	O
46	int
;	O
dsa_0	O
->	O
retval	O
.	O
u	O
.	O
int_val	O
=	O
(	O
(	O
greater	O
(	O
int2real	O
(	O
dsa_0	O
->	O
j_9	O
)	O
,	O
dsa_0	O
->	O
E_7	O
)	O
)	O
?	O
(	O
dsa_0	O
->	O
j_9	O
-	O
1	int
)	O
:	O
(	O
dsa_0	O
->	O
j_9	O
)	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_2	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_1	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_0	O
)	O
;	O
my_dsa	O
.	O
retval	O
.	O
lval	O
=	O
0	int
;	O
my_dsa	O
.	O
retval	O
.	O
type	O
=	O
'i'	O
;	O
active_dsa	O
=	O
my_dsa	O
.	O
parent	O
;	O
return	O
my_dsa	O
.	O
retval	O
;	O
}	O
static	O
struct	O
desc	O
_thunk_1	O
(	O
void	O
)	O
{	O
struct	O
desc	O
res	O
;	O
register	O
struct	O
dsa_sqrt_0	O
*	O
dsa_0	O
=	O
(	O
void	O
*	O
)	O
global_dsa	O
->	O
vector	O
[	O
0	int
]	O
;	O
dsa_0	O
->	O
line	O
=	O
54	int
;	O
res	O
.	O
lval	O
=	O
1	int
;	O
res	O
.	O
type	O
=	O
'r'	O
;	O
res	O
.	O
u	O
.	O
real_ptr	O
=	O
&	O
(	O
dsa_0	O
->	O
E_10	O
)	O
;	O
return	O
res	O
;	O
}	O
struct	O
desc	O
sqrt_0	O
(	O
struct	O
arg	O
E_10	O
)	O
{	O
struct	O
dsa_sqrt_0	O
my_dsa	O
;	O
register	O
struct	O
dsa_sqrt_0	O
*	O
dsa_0	O
=	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
proc	O
=	O
"sqrt"	*(char)
;	O
my_dsa	O
.	O
file	O
=	O
"alglib1.alg"	*(char)
;	O
my_dsa	O
.	O
line	O
=	O
51	int
;	O
my_dsa	O
.	O
parent	O
=	O
active_dsa	O
,	O
active_dsa	O
=	O
(	O
struct	O
dsa	O
*	O
)	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
vector	O
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
;	O
dsa_0	O
->	O
old_top_0	O
=	O
stack_top	O
;	O
my_dsa	O
.	O
line	O
=	O
52	int
;	O
my_dsa	O
.	O
E_10	O
=	O
get_real	O
(	O
(	O
global_dsa	O
=	O
E_10	O
.	O
arg2	O
,	O
(	O
*	O
(	O
struct	O
desc	O
(	O
*	O
)	O
(	O
void	O
)	O
)	O
E_10	O
.	O
arg1	O
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	O
->	O
new_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
old_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
53	int
;	O
if	O
(	O
!	O
(	O
less	O
(	O
dsa_0	O
->	O
E_10	O
,	O
.0	int
)	O
)	O
)	O
goto	O
_gamma_1	O
;	O
dsa_0	O
->	O
line	O
=	O
54	int
;	O
(	O
(	O
global_dsa	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
,	O
fault_0	O
(	O
make_arg	O
(	O
"negative sqrt"	*(char)
,	O
NULL	O
)	O
,	O
make_arg	O
(	O
(	O
void	O
*	O
)	O
_thunk_1	O
,	O
dsa_0	O
)	O
)	O
)	O
)	O
;	O
goto	O
_omega_1	O
;	O
_gamma_1	O
:	O
dsa_0	O
->	O
line	O
=	O
56	int
;	O
my_dsa	O
.	O
retval	O
.	O
u	O
.	O
real_val	O
=	O
sqrt	(double)->(double)
(	O
my_dsa	O
.	O
E_10	O
)	O
;	O
_omega_1	O
:	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_1	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_0	O
)	O
;	O
my_dsa	O
.	O
retval	O
.	O
lval	O
=	O
0	int
;	O
my_dsa	O
.	O
retval	O
.	O
type	O
=	O
'r'	O
;	O
active_dsa	O
=	O
my_dsa	O
.	O
parent	O
;	O
return	O
my_dsa	O
.	O
retval	O
;	O
}	O
struct	O
desc	O
sin_0	O
(	O
struct	O
arg	O
E_12	O
)	O
{	O
struct	O
dsa_sin_0	O
my_dsa	O
;	O
register	O
struct	O
dsa_sin_0	O
*	O
dsa_0	O
=	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
proc	O
=	O
"sin"	*(char)
;	O
my_dsa	O
.	O
file	O
=	O
"alglib1.alg"	*(char)
;	O
my_dsa	O
.	O
line	O
=	O
58	int
;	O
my_dsa	O
.	O
parent	O
=	O
active_dsa	O
,	O
active_dsa	O
=	O
(	O
struct	O
dsa	O
*	O
)	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
vector	O
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
;	O
dsa_0	O
->	O
old_top_0	O
=	O
stack_top	O
;	O
my_dsa	O
.	O
line	O
=	O
59	int
;	O
my_dsa	O
.	O
E_12	O
=	O
get_real	O
(	O
(	O
global_dsa	O
=	O
E_12	O
.	O
arg2	O
,	O
(	O
*	O
(	O
struct	O
desc	O
(	O
*	O
)	O
(	O
void	O
)	O
)	O
E_12	O
.	O
arg1	O
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	O
->	O
new_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
old_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
61	int
;	O
my_dsa	O
.	O
retval	O
.	O
u	O
.	O
real_val	O
=	O
sin	(double)->(double)
(	O
my_dsa	O
.	O
E_12	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_1	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_0	O
)	O
;	O
my_dsa	O
.	O
retval	O
.	O
lval	O
=	O
0	int
;	O
my_dsa	O
.	O
retval	O
.	O
type	O
=	O
'r'	O
;	O
active_dsa	O
=	O
my_dsa	O
.	O
parent	O
;	O
return	O
my_dsa	O
.	O
retval	O
;	O
}	O
struct	O
desc	O
cos_0	O
(	O
struct	O
arg	O
E_14	O
)	O
{	O
struct	O
dsa_cos_0	O
my_dsa	O
;	O
register	O
struct	O
dsa_cos_0	O
*	O
dsa_0	O
=	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
proc	O
=	O
"cos"	*(char)
;	O
my_dsa	O
.	O
file	O
=	O
"alglib1.alg"	*(char)
;	O
my_dsa	O
.	O
line	O
=	O
63	int
;	O
my_dsa	O
.	O
parent	O
=	O
active_dsa	O
,	O
active_dsa	O
=	O
(	O
struct	O
dsa	O
*	O
)	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
vector	O
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
;	O
dsa_0	O
->	O
old_top_0	O
=	O
stack_top	O
;	O
my_dsa	O
.	O
line	O
=	O
64	int
;	O
my_dsa	O
.	O
E_14	O
=	O
get_real	O
(	O
(	O
global_dsa	O
=	O
E_14	O
.	O
arg2	O
,	O
(	O
*	O
(	O
struct	O
desc	O
(	O
*	O
)	O
(	O
void	O
)	O
)	O
E_14	O
.	O
arg1	O
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	O
->	O
new_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
old_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
66	int
;	O
my_dsa	O
.	O
retval	O
.	O
u	O
.	O
real_val	O
=	O
cos	(double)->(double)
(	O
my_dsa	O
.	O
E_14	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_1	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_0	O
)	O
;	O
my_dsa	O
.	O
retval	O
.	O
lval	O
=	O
0	int
;	O
my_dsa	O
.	O
retval	O
.	O
type	O
=	O
'r'	O
;	O
active_dsa	O
=	O
my_dsa	O
.	O
parent	O
;	O
return	O
my_dsa	O
.	O
retval	O
;	O
}	O
struct	O
desc	O
arctan_0	O
(	O
struct	O
arg	O
E_16	O
)	O
{	O
struct	O
dsa_arctan_0	O
my_dsa	O
;	O
register	O
struct	O
dsa_arctan_0	O
*	O
dsa_0	O
=	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
proc	O
=	O
"arctan"	*(char)
;	O
my_dsa	O
.	O
file	O
=	O
"alglib1.alg"	*(char)
;	O
my_dsa	O
.	O
line	O
=	O
68	int
;	O
my_dsa	O
.	O
parent	O
=	O
active_dsa	O
,	O
active_dsa	O
=	O
(	O
struct	O
dsa	O
*	O
)	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
vector	O
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
;	O
dsa_0	O
->	O
old_top_0	O
=	O
stack_top	O
;	O
my_dsa	O
.	O
line	O
=	O
69	int
;	O
my_dsa	O
.	O
E_16	O
=	O
get_real	O
(	O
(	O
global_dsa	O
=	O
E_16	O
.	O
arg2	O
,	O
(	O
*	O
(	O
struct	O
desc	O
(	O
*	O
)	O
(	O
void	O
)	O
)	O
E_16	O
.	O
arg1	O
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	O
->	O
new_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
old_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
72	int
;	O
my_dsa	O
.	O
retval	O
.	O
u	O
.	O
real_val	O
=	O
atan	(double)->(double)
(	O
my_dsa	O
.	O
E_16	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_1	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_0	O
)	O
;	O
my_dsa	O
.	O
retval	O
.	O
lval	O
=	O
0	int
;	O
my_dsa	O
.	O
retval	O
.	O
type	O
=	O
'r'	O
;	O
active_dsa	O
=	O
my_dsa	O
.	O
parent	O
;	O
return	O
my_dsa	O
.	O
retval	O
;	O
}	O
static	O
struct	O
desc	O
_thunk_2	O
(	O
void	O
)	O
{	O
struct	O
desc	O
res	O
;	O
register	O
struct	O
dsa_ln_0	O
*	O
dsa_0	O
=	O
(	O
void	O
*	O
)	O
global_dsa	O
->	O
vector	O
[	O
0	int
]	O
;	O
dsa_0	O
->	O
line	O
=	O
78	int
;	O
res	O
.	O
lval	O
=	O
1	int
;	O
res	O
.	O
type	O
=	O
'r'	O
;	O
res	O
.	O
u	O
.	O
real_ptr	O
=	O
&	O
(	O
dsa_0	O
->	O
E_18	O
)	O
;	O
return	O
res	O
;	O
}	O
struct	O
desc	O
ln_0	O
(	O
struct	O
arg	O
E_18	O
)	O
{	O
struct	O
dsa_ln_0	O
my_dsa	O
;	O
register	O
struct	O
dsa_ln_0	O
*	O
dsa_0	O
=	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
proc	O
=	O
"ln"	*(char)
;	O
my_dsa	O
.	O
file	O
=	O
"alglib1.alg"	*(char)
;	O
my_dsa	O
.	O
line	O
=	O
74	int
;	O
my_dsa	O
.	O
parent	O
=	O
active_dsa	O
,	O
active_dsa	O
=	O
(	O
struct	O
dsa	O
*	O
)	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
vector	O
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
;	O
dsa_0	O
->	O
old_top_0	O
=	O
stack_top	O
;	O
my_dsa	O
.	O
line	O
=	O
75	int
;	O
my_dsa	O
.	O
E_18	O
=	O
get_real	O
(	O
(	O
global_dsa	O
=	O
E_18	O
.	O
arg2	O
,	O
(	O
*	O
(	O
struct	O
desc	O
(	O
*	O
)	O
(	O
void	O
)	O
)	O
E_18	O
.	O
arg1	O
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	O
->	O
new_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
old_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
77	int
;	O
if	O
(	O
!	O
(	O
notgreater	O
(	O
dsa_0	O
->	O
E_18	O
,	O
.0	int
)	O
)	O
)	O
goto	O
_gamma_2	O
;	O
dsa_0	O
->	O
line	O
=	O
78	int
;	O
(	O
(	O
global_dsa	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
,	O
fault_0	O
(	O
make_arg	O
(	O
"ln not positive"	*(char)
,	O
NULL	O
)	O
,	O
make_arg	O
(	O
(	O
void	O
*	O
)	O
_thunk_2	O
,	O
dsa_0	O
)	O
)	O
)	O
)	O
;	O
goto	O
_omega_2	O
;	O
_gamma_2	O
:	O
dsa_0	O
->	O
line	O
=	O
80	int
;	O
my_dsa	O
.	O
retval	O
.	O
u	O
.	O
real_val	O
=	O
log	(double)->(double)
(	O
my_dsa	O
.	O
E_18	O
)	O
;	O
_omega_2	O
:	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_1	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_0	O
)	O
;	O
my_dsa	O
.	O
retval	O
.	O
lval	O
=	O
0	int
;	O
my_dsa	O
.	O
retval	O
.	O
type	O
=	O
'r'	O
;	O
active_dsa	O
=	O
my_dsa	O
.	O
parent	O
;	O
return	O
my_dsa	O
.	O
retval	O
;	O
}	O
static	O
struct	O
desc	O
_thunk_3	O
(	O
void	O
)	O
{	O
struct	O
desc	O
res	O
;	O
register	O
struct	O
dsa_exp_0	O
*	O
dsa_0	O
=	O
(	O
void	O
*	O
)	O
global_dsa	O
->	O
vector	O
[	O
0	int
]	O
;	O
dsa_0	O
->	O
line	O
=	O
86	int
;	O
res	O
.	O
lval	O
=	O
1	int
;	O
res	O
.	O
type	O
=	O
'r'	O
;	O
res	O
.	O
u	O
.	O
real_ptr	O
=	O
&	O
(	O
dsa_0	O
->	O
E_20	O
)	O
;	O
return	O
res	O
;	O
}	O
struct	O
desc	O
exp_0	O
(	O
struct	O
arg	O
E_20	O
)	O
{	O
struct	O
dsa_exp_0	O
my_dsa	O
;	O
register	O
struct	O
dsa_exp_0	O
*	O
dsa_0	O
=	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
proc	O
=	O
"exp"	*(char)
;	O
my_dsa	O
.	O
file	O
=	O
"alglib1.alg"	*(char)
;	O
my_dsa	O
.	O
line	O
=	O
82	int
;	O
my_dsa	O
.	O
parent	O
=	O
active_dsa	O
,	O
active_dsa	O
=	O
(	O
struct	O
dsa	O
*	O
)	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
vector	O
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
;	O
dsa_0	O
->	O
old_top_0	O
=	O
stack_top	O
;	O
my_dsa	O
.	O
line	O
=	O
83	int
;	O
my_dsa	O
.	O
E_20	O
=	O
get_real	O
(	O
(	O
global_dsa	O
=	O
E_20	O
.	O
arg2	O
,	O
(	O
*	O
(	O
struct	O
desc	O
(	O
*	O
)	O
(	O
void	O
)	O
)	O
E_20	O
.	O
arg1	O
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	O
->	O
new_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
old_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
85	int
;	O
if	O
(	O
!	O
(	O
greater	O
(	O
dsa_0	O
->	O
E_20	O
,	O
get_real	O
(	O
(	O
global_dsa	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
,	O
ln_0	O
(	O
make_arg	O
(	O
(	O
void	O
*	O
)	O
maxreal_0	O
,	O
dsa_0	O
)	O
)	O
)	O
)	O
)	O
)	O
)	O
goto	O
_gamma_3	O
;	O
dsa_0	O
->	O
line	O
=	O
86	int
;	O
(	O
(	O
global_dsa	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
,	O
fault_0	O
(	O
make_arg	O
(	O
"overflow on exp"	*(char)
,	O
NULL	O
)	O
,	O
make_arg	O
(	O
(	O
void	O
*	O
)	O
_thunk_3	O
,	O
dsa_0	O
)	O
)	O
)	O
)	O
;	O
goto	O
_omega_3	O
;	O
_gamma_3	O
:	O
dsa_0	O
->	O
line	O
=	O
88	int
;	O
my_dsa	O
.	O
retval	O
.	O
u	O
.	O
real_val	O
=	O
exp	(double)->(double)
(	O
my_dsa	O
.	O
E_20	O
)	O
;	O
_omega_3	O
:	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_1	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_0	O
)	O
;	O
my_dsa	O
.	O
retval	O
.	O
lval	O
=	O
0	int
;	O
my_dsa	O
.	O
retval	O
.	O
type	O
=	O
'r'	O
;	O
active_dsa	O
=	O
my_dsa	O
.	O
parent	O
;	O
return	O
my_dsa	O
.	O
retval	O
;	O
}	O
struct	O
desc	O
stop_0	O
(	O
void	O
)	O
{	O
struct	O
dsa_stop_0	O
my_dsa	O
;	O
register	O
struct	O
dsa_stop_0	O
*	O
dsa_0	O
=	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
proc	O
=	O
"stop"	*(char)
;	O
my_dsa	O
.	O
file	O
=	O
"alglib1.alg"	*(char)
;	O
my_dsa	O
.	O
line	O
=	O
92	int
;	O
my_dsa	O
.	O
parent	O
=	O
active_dsa	O
,	O
active_dsa	O
=	O
(	O
struct	O
dsa	O
*	O
)	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
vector	O
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
;	O
dsa_0	O
->	O
old_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
old_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
93	int
;	O
exit	(int)->(void)
(	O
EXIT_SUCCESS	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_1	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_0	O
)	O
;	O
my_dsa	O
.	O
retval	O
.	O
lval	O
=	O
0	int
;	O
my_dsa	O
.	O
retval	O
.	O
type	O
=	O
0	int
;	O
active_dsa	O
=	O
my_dsa	O
.	O
parent	O
;	O
return	O
my_dsa	O
.	O
retval	O
;	O
}	O
struct	O
desc	O
fault_0	O
(	O
struct	O
arg	O
str_24	O
,	O
struct	O
arg	O
r_24	O
)	O
{	O
struct	O
dsa_fault_0	O
my_dsa	O
;	O
register	O
struct	O
dsa_fault_0	O
*	O
dsa_0	O
=	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
proc	O
=	O
"fault"	*(char)
;	O
my_dsa	O
.	O
file	O
=	O
"alglib1.alg"	*(char)
;	O
my_dsa	O
.	O
line	O
=	O
95	int
;	O
my_dsa	O
.	O
parent	O
=	O
active_dsa	O
,	O
active_dsa	O
=	O
(	O
struct	O
dsa	O
*	O
)	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
vector	O
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
;	O
dsa_0	O
->	O
old_top_0	O
=	O
stack_top	O
;	O
my_dsa	O
.	O
str_24	O
=	O
str_24	O
.	O
arg1	O
;	O
my_dsa	O
.	O
line	O
=	O
96	int
;	O
my_dsa	O
.	O
r_24	O
=	O
get_real	O
(	O
(	O
global_dsa	O
=	O
r_24	O
.	O
arg2	O
,	O
(	O
*	O
(	O
struct	O
desc	O
(	O
*	O
)	O
(	O
void	O
)	O
)	O
r_24	O
.	O
arg1	O
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	O
->	O
new_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
old_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
97	int
;	O
fault	O
(	O
"%s "	*(char)
REAL_FMT	O
,	O
my_dsa	O
.	O
str_24	O
,	O
my_dsa	O
.	O
r_24	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_1	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_0	O
)	O
;	O
my_dsa	O
.	O
retval	O
.	O
lval	O
=	O
0	int
;	O
my_dsa	O
.	O
retval	O
.	O
type	O
=	O
0	int
;	O
active_dsa	O
=	O
my_dsa	O
.	O
parent	O
;	O
return	O
my_dsa	O
.	O
retval	O
;	O
}	O
struct	O
desc	O
inchar_0	O
(	O
struct	O
arg	O
channel_26	O
,	O
struct	O
arg	O
str_26	O
,	O
struct	O
arg	O
int_26	O
)	O
{	O
struct	O
dsa_inchar_0	O
my_dsa	O
;	O
register	O
struct	O
dsa_inchar_0	O
*	O
dsa_0	O
=	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
proc	O
=	O
"inchar"	*(char)
;	O
my_dsa	O
.	O
file	O
=	O
"alglib1.alg"	*(char)
;	O
my_dsa	O
.	O
line	O
=	O
101	int
;	O
my_dsa	O
.	O
parent	O
=	O
active_dsa	O
,	O
active_dsa	O
=	O
(	O
struct	O
dsa	O
*	O
)	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
vector	O
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
;	O
dsa_0	O
->	O
old_top_0	O
=	O
stack_top	O
;	O
my_dsa	O
.	O
line	O
=	O
103	int
;	O
my_dsa	O
.	O
channel_26	O
=	O
get_int	O
(	O
(	O
global_dsa	O
=	O
channel_26	O
.	O
arg2	O
,	O
(	O
*	O
(	O
struct	O
desc	O
(	O
*	O
)	O
(	O
void	O
)	O
)	O
channel_26	O
.	O
arg1	O
)	O
(	O
)	O
)	O
)	O
;	O
my_dsa	O
.	O
str_26	O
=	O
str_26	O
.	O
arg1	O
;	O
my_dsa	O
.	O
int_26	O
=	O
int_26	O
;	O
dsa_0	O
->	O
new_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
old_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
107	int
;	O
dsa_0	O
->	O
old_top_2	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_2	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
109	int
;	O
{	O
char	O
*	O
ptr	O
;	O
dsa_0	O
->	O
line	O
=	O
110	int
;	O
ptr	O
=	O
strchr	(*(char),int)->(*(char))
(	O
my_dsa	O
.	O
str_26	O
,	O
inchar	O
(	O
my_dsa	O
.	O
channel_26	O
)	O
)	O
;	O
dsa_0	O
->	O
line	O
=	O
111	int
;	O
my_dsa	O
.	O
val_28	O
=	O
(	O
ptr	O
==	O
NULL	O
?	O
0	int
:	O
(	O
ptr	O
-	O
my_dsa	O
.	O
str_26	O
)	O
+	O
1	int
)	O
;	O
dsa_0	O
->	O
line	O
=	O
113	int
;	O
}	O
dsa_0	O
->	O
line	O
=	O
114	int
;	O
set_int	O
(	O
(	O
global_dsa	O
=	O
dsa_0	O
->	O
int_26	O
.	O
arg2	O
,	O
(	O
*	O
(	O
struct	O
desc	O
(	O
*	O
)	O
(	O
void	O
)	O
)	O
dsa_0	O
->	O
int_26	O
.	O
arg1	O
)	O
(	O
)	O
)	O
,	O
dsa_0	O
->	O
val_28	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_2	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_1	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_0	O
)	O
;	O
my_dsa	O
.	O
retval	O
.	O
lval	O
=	O
0	int
;	O
my_dsa	O
.	O
retval	O
.	O
type	O
=	O
0	int
;	O
active_dsa	O
=	O
my_dsa	O
.	O
parent	O
;	O
return	O
my_dsa	O
.	O
retval	O
;	O
}	O
static	O
struct	O
desc	O
_thunk_4	O
(	O
void	O
)	O
{	O
struct	O
desc	O
res	O
;	O
register	O
struct	O
dsa_outchar_0	O
*	O
dsa_0	O
=	O
(	O
void	O
*	O
)	O
global_dsa	O
->	O
vector	O
[	O
0	int
]	O
;	O
dsa_0	O
->	O
line	O
=	O
123	int
;	O
res	O
.	O
lval	O
=	O
1	int
;	O
res	O
.	O
type	O
=	O
'i'	O
;	O
res	O
.	O
u	O
.	O
int_ptr	O
=	O
&	O
(	O
dsa_0	O
->	O
int_29	O
)	O
;	O
return	O
res	O
;	O
}	O
struct	O
desc	O
outchar_0	O
(	O
struct	O
arg	O
channel_29	O
,	O
struct	O
arg	O
str_29	O
,	O
struct	O
arg	O
int_29	O
)	O
{	O
struct	O
dsa_outchar_0	O
my_dsa	O
;	O
register	O
struct	O
dsa_outchar_0	O
*	O
dsa_0	O
=	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
proc	O
=	O
"outchar"	*(char)
;	O
my_dsa	O
.	O
file	O
=	O
"alglib1.alg"	*(char)
;	O
my_dsa	O
.	O
line	O
=	O
117	int
;	O
my_dsa	O
.	O
parent	O
=	O
active_dsa	O
,	O
active_dsa	O
=	O
(	O
struct	O
dsa	O
*	O
)	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
vector	O
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
;	O
dsa_0	O
->	O
old_top_0	O
=	O
stack_top	O
;	O
my_dsa	O
.	O
line	O
=	O
119	int
;	O
my_dsa	O
.	O
channel_29	O
=	O
get_int	O
(	O
(	O
global_dsa	O
=	O
channel_29	O
.	O
arg2	O
,	O
(	O
*	O
(	O
struct	O
desc	O
(	O
*	O
)	O
(	O
void	O
)	O
)	O
channel_29	O
.	O
arg1	O
)	O
(	O
)	O
)	O
)	O
;	O
my_dsa	O
.	O
str_29	O
=	O
str_29	O
.	O
arg1	O
;	O
my_dsa	O
.	O
line	O
=	O
119	int
;	O
my_dsa	O
.	O
int_29	O
=	O
get_int	O
(	O
(	O
global_dsa	O
=	O
int_29	O
.	O
arg2	O
,	O
(	O
*	O
(	O
struct	O
desc	O
(	O
*	O
)	O
(	O
void	O
)	O
)	O
int_29	O
.	O
arg1	O
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	O
->	O
new_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
old_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
122	int
;	O
if	O
(	O
!	O
(	O
or	O
(	O
less	O
(	O
dsa_0	O
->	O
int_29	O
,	O
1	int
)	O
,	O
greater	O
(	O
dsa_0	O
->	O
int_29	O
,	O
get_int	O
(	O
(	O
global_dsa	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
,	O
length_0	O
(	O
make_arg	O
(	O
dsa_0	O
->	O
str_29	O
,	O
NULL	O
)	O
)	O
)	O
)	O
)	O
)	O
)	O
)	O
goto	O
_gamma_4	O
;	O
dsa_0	O
->	O
line	O
=	O
123	int
;	O
(	O
(	O
global_dsa	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
,	O
fault_0	O
(	O
make_arg	O
(	O
"character not in "	*(char)
"string"	*(char)
,	O
NULL	O
)	O
,	O
make_arg	O
(	O
(	O
void	O
*	O
)	O
_thunk_4	O
,	O
dsa_0	O
)	O
)	O
)	O
)	O
;	O
goto	O
_omega_4	O
;	O
_gamma_4	O
:	O
dsa_0	O
->	O
line	O
=	O
125	int
;	O
outchar	O
(	O
my_dsa	O
.	O
channel_29	O
,	O
my_dsa	O
.	O
str_29	O
[	O
my_dsa	O
.	O
int_29	O
-	O
1	int
]	O
)	O
;	O
_omega_4	O
:	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_1	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_0	O
)	O
;	O
my_dsa	O
.	O
retval	O
.	O
lval	O
=	O
0	int
;	O
my_dsa	O
.	O
retval	O
.	O
type	O
=	O
0	int
;	O
active_dsa	O
=	O
my_dsa	O
.	O
parent	O
;	O
return	O
my_dsa	O
.	O
retval	O
;	O
}	O
struct	O
desc	O
length_0	O
(	O
struct	O
arg	O
str_31	O
)	O
{	O
struct	O
dsa_length_0	O
my_dsa	O
;	O
register	O
struct	O
dsa_length_0	O
*	O
dsa_0	O
=	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
proc	O
=	O
"length"	*(char)
;	O
my_dsa	O
.	O
file	O
=	O
"alglib1.alg"	*(char)
;	O
my_dsa	O
.	O
line	O
=	O
128	int
;	O
my_dsa	O
.	O
parent	O
=	O
active_dsa	O
,	O
active_dsa	O
=	O
(	O
struct	O
dsa	O
*	O
)	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
vector	O
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
;	O
dsa_0	O
->	O
old_top_0	O
=	O
stack_top	O
;	O
my_dsa	O
.	O
str_31	O
=	O
str_31	O
.	O
arg1	O
;	O
dsa_0	O
->	O
new_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
old_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
131	int
;	O
my_dsa	O
.	O
retval	O
.	O
u	O
.	O
int_val	O
=	O
strlen	(*(char))->(long)
(	O
my_dsa	O
.	O
str_31	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_1	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_0	O
)	O
;	O
my_dsa	O
.	O
retval	O
.	O
lval	O
=	O
0	int
;	O
my_dsa	O
.	O
retval	O
.	O
type	O
=	O
'i'	O
;	O
active_dsa	O
=	O
my_dsa	O
.	O
parent	O
;	O
return	O
my_dsa	O
.	O
retval	O
;	O
}	O
struct	O
desc	O
outstring_0	O
(	O
struct	O
arg	O
channel_33	O
,	O
struct	O
arg	O
str_33	O
)	O
{	O
struct	O
dsa_outstring_0	O
my_dsa	O
;	O
register	O
struct	O
dsa_outstring_0	O
*	O
dsa_0	O
=	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
proc	O
=	O
"outstring"	*(char)
;	O
my_dsa	O
.	O
file	O
=	O
"alglib1.alg"	*(char)
;	O
my_dsa	O
.	O
line	O
=	O
133	int
;	O
my_dsa	O
.	O
parent	O
=	O
active_dsa	O
,	O
active_dsa	O
=	O
(	O
struct	O
dsa	O
*	O
)	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
vector	O
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
;	O
dsa_0	O
->	O
old_top_0	O
=	O
stack_top	O
;	O
my_dsa	O
.	O
line	O
=	O
135	int
;	O
my_dsa	O
.	O
channel_33	O
=	O
get_int	O
(	O
(	O
global_dsa	O
=	O
channel_33	O
.	O
arg2	O
,	O
(	O
*	O
(	O
struct	O
desc	O
(	O
*	O
)	O
(	O
void	O
)	O
)	O
channel_33	O
.	O
arg1	O
)	O
(	O
)	O
)	O
)	O
;	O
my_dsa	O
.	O
str_33	O
=	O
str_33	O
.	O
arg1	O
;	O
dsa_0	O
->	O
new_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
old_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
136	int
;	O
outstring	O
(	O
my_dsa	O
.	O
channel_33	O
,	O
my_dsa	O
.	O
str_33	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_1	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_0	O
)	O
;	O
my_dsa	O
.	O
retval	O
.	O
lval	O
=	O
0	int
;	O
my_dsa	O
.	O
retval	O
.	O
type	O
=	O
0	int
;	O
active_dsa	O
=	O
my_dsa	O
.	O
parent	O
;	O
return	O
my_dsa	O
.	O
retval	O
;	O
}	O
struct	O
desc	O
outterminator_0	O
(	O
struct	O
arg	O
channel_35	O
)	O
{	O
struct	O
dsa_outterminator_0	O
my_dsa	O
;	O
register	O
struct	O
dsa_outterminator_0	O
*	O
dsa_0	O
=	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
proc	O
=	O
"outterminator"	*(char)
;	O
my_dsa	O
.	O
file	O
=	O
"alglib1.alg"	*(char)
;	O
my_dsa	O
.	O
line	O
=	O
138	int
;	O
my_dsa	O
.	O
parent	O
=	O
active_dsa	O
,	O
active_dsa	O
=	O
(	O
struct	O
dsa	O
*	O
)	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
vector	O
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
;	O
dsa_0	O
->	O
old_top_0	O
=	O
stack_top	O
;	O
my_dsa	O
.	O
line	O
=	O
139	int
;	O
my_dsa	O
.	O
channel_35	O
=	O
get_int	O
(	O
(	O
global_dsa	O
=	O
channel_35	O
.	O
arg2	O
,	O
(	O
*	O
(	O
struct	O
desc	O
(	O
*	O
)	O
(	O
void	O
)	O
)	O
channel_35	O
.	O
arg1	O
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	O
->	O
new_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
old_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
141	int
;	O
outchar	O
(	O
my_dsa	O
.	O
channel_35	O
,	O
0x20	int
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_1	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_0	O
)	O
;	O
my_dsa	O
.	O
retval	O
.	O
lval	O
=	O
0	int
;	O
my_dsa	O
.	O
retval	O
.	O
type	O
=	O
0	int
;	O
active_dsa	O
=	O
my_dsa	O
.	O
parent	O
;	O
return	O
my_dsa	O
.	O
retval	O
;	O
}	O
struct	O
desc	O
ininteger_0	O
(	O
struct	O
arg	O
channel_37	O
,	O
struct	O
arg	O
int_37	O
)	O
{	O
struct	O
dsa_ininteger_0	O
my_dsa	O
;	O
register	O
struct	O
dsa_ininteger_0	O
*	O
dsa_0	O
=	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
proc	O
=	O
"ininteger"	*(char)
;	O
my_dsa	O
.	O
file	O
=	O
"alglib1.alg"	*(char)
;	O
my_dsa	O
.	O
line	O
=	O
143	int
;	O
my_dsa	O
.	O
parent	O
=	O
active_dsa	O
,	O
active_dsa	O
=	O
(	O
struct	O
dsa	O
*	O
)	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
vector	O
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
;	O
dsa_0	O
->	O
old_top_0	O
=	O
stack_top	O
;	O
my_dsa	O
.	O
line	O
=	O
144	int
;	O
my_dsa	O
.	O
channel_37	O
=	O
get_int	O
(	O
(	O
global_dsa	O
=	O
channel_37	O
.	O
arg2	O
,	O
(	O
*	O
(	O
struct	O
desc	O
(	O
*	O
)	O
(	O
void	O
)	O
)	O
channel_37	O
.	O
arg1	O
)	O
(	O
)	O
)	O
)	O
;	O
my_dsa	O
.	O
int_37	O
=	O
int_37	O
;	O
dsa_0	O
->	O
new_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
old_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
146	int
;	O
dsa_0	O
->	O
old_top_2	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_2	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
148	int
;	O
my_dsa	O
.	O
val_39	O
=	O
ininteger	O
(	O
my_dsa	O
.	O
channel_37	O
)	O
;	O
dsa_0	O
->	O
line	O
=	O
149	int
;	O
set_int	O
(	O
(	O
global_dsa	O
=	O
dsa_0	O
->	O
int_37	O
.	O
arg2	O
,	O
(	O
*	O
(	O
struct	O
desc	O
(	O
*	O
)	O
(	O
void	O
)	O
)	O
dsa_0	O
->	O
int_37	O
.	O
arg1	O
)	O
(	O
)	O
)	O
,	O
dsa_0	O
->	O
val_39	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_2	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_1	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_0	O
)	O
;	O
my_dsa	O
.	O
retval	O
.	O
lval	O
=	O
0	int
;	O
my_dsa	O
.	O
retval	O
.	O
type	O
=	O
0	int
;	O
active_dsa	O
=	O
my_dsa	O
.	O
parent	O
;	O
return	O
my_dsa	O
.	O
retval	O
;	O
}	O
struct	O
desc	O
outinteger_0	O
(	O
struct	O
arg	O
channel_40	O
,	O
struct	O
arg	O
int_40	O
)	O
{	O
struct	O
dsa_outinteger_0	O
my_dsa	O
;	O
register	O
struct	O
dsa_outinteger_0	O
*	O
dsa_0	O
=	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
proc	O
=	O
"outinteger"	*(char)
;	O
my_dsa	O
.	O
file	O
=	O
"alglib1.alg"	*(char)
;	O
my_dsa	O
.	O
line	O
=	O
152	int
;	O
my_dsa	O
.	O
parent	O
=	O
active_dsa	O
,	O
active_dsa	O
=	O
(	O
struct	O
dsa	O
*	O
)	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
vector	O
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
;	O
dsa_0	O
->	O
old_top_0	O
=	O
stack_top	O
;	O
my_dsa	O
.	O
line	O
=	O
154	int
;	O
my_dsa	O
.	O
channel_40	O
=	O
get_int	O
(	O
(	O
global_dsa	O
=	O
channel_40	O
.	O
arg2	O
,	O
(	O
*	O
(	O
struct	O
desc	O
(	O
*	O
)	O
(	O
void	O
)	O
)	O
channel_40	O
.	O
arg1	O
)	O
(	O
)	O
)	O
)	O
;	O
my_dsa	O
.	O
line	O
=	O
154	int
;	O
my_dsa	O
.	O
int_40	O
=	O
get_int	O
(	O
(	O
global_dsa	O
=	O
int_40	O
.	O
arg2	O
,	O
(	O
*	O
(	O
struct	O
desc	O
(	O
*	O
)	O
(	O
void	O
)	O
)	O
int_40	O
.	O
arg1	O
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	O
->	O
new_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
old_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
157	int
;	O
outinteger	O
(	O
my_dsa	O
.	O
channel_40	O
,	O
my_dsa	O
.	O
int_40	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_1	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_0	O
)	O
;	O
my_dsa	O
.	O
retval	O
.	O
lval	O
=	O
0	int
;	O
my_dsa	O
.	O
retval	O
.	O
type	O
=	O
0	int
;	O
active_dsa	O
=	O
my_dsa	O
.	O
parent	O
;	O
return	O
my_dsa	O
.	O
retval	O
;	O
}	O
struct	O
desc	O
inreal_0	O
(	O
struct	O
arg	O
channel_42	O
,	O
struct	O
arg	O
re_42	O
)	O
{	O
struct	O
dsa_inreal_0	O
my_dsa	O
;	O
register	O
struct	O
dsa_inreal_0	O
*	O
dsa_0	O
=	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
proc	O
=	O
"inreal"	*(char)
;	O
my_dsa	O
.	O
file	O
=	O
"alglib1.alg"	*(char)
;	O
my_dsa	O
.	O
line	O
=	O
159	int
;	O
my_dsa	O
.	O
parent	O
=	O
active_dsa	O
,	O
active_dsa	O
=	O
(	O
struct	O
dsa	O
*	O
)	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
vector	O
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
;	O
dsa_0	O
->	O
old_top_0	O
=	O
stack_top	O
;	O
my_dsa	O
.	O
line	O
=	O
161	int
;	O
my_dsa	O
.	O
channel_42	O
=	O
get_int	O
(	O
(	O
global_dsa	O
=	O
channel_42	O
.	O
arg2	O
,	O
(	O
*	O
(	O
struct	O
desc	O
(	O
*	O
)	O
(	O
void	O
)	O
)	O
channel_42	O
.	O
arg1	O
)	O
(	O
)	O
)	O
)	O
;	O
my_dsa	O
.	O
re_42	O
=	O
re_42	O
;	O
dsa_0	O
->	O
new_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
old_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
163	int
;	O
dsa_0	O
->	O
old_top_2	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_2	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
165	int
;	O
my_dsa	O
.	O
val_44	O
=	O
inreal	O
(	O
my_dsa	O
.	O
channel_42	O
)	O
;	O
dsa_0	O
->	O
line	O
=	O
166	int
;	O
set_real	O
(	O
(	O
global_dsa	O
=	O
dsa_0	O
->	O
re_42	O
.	O
arg2	O
,	O
(	O
*	O
(	O
struct	O
desc	O
(	O
*	O
)	O
(	O
void	O
)	O
)	O
dsa_0	O
->	O
re_42	O
.	O
arg1	O
)	O
(	O
)	O
)	O
,	O
dsa_0	O
->	O
val_44	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_2	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_1	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_0	O
)	O
;	O
my_dsa	O
.	O
retval	O
.	O
lval	O
=	O
0	int
;	O
my_dsa	O
.	O
retval	O
.	O
type	O
=	O
0	int
;	O
active_dsa	O
=	O
my_dsa	O
.	O
parent	O
;	O
return	O
my_dsa	O
.	O
retval	O
;	O
}	O
struct	O
desc	O
outreal_0	O
(	O
struct	O
arg	O
channel_45	O
,	O
struct	O
arg	O
re_45	O
)	O
{	O
struct	O
dsa_outreal_0	O
my_dsa	O
;	O
register	O
struct	O
dsa_outreal_0	O
*	O
dsa_0	O
=	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
proc	O
=	O
"outreal"	*(char)
;	O
my_dsa	O
.	O
file	O
=	O
"alglib1.alg"	*(char)
;	O
my_dsa	O
.	O
line	O
=	O
169	int
;	O
my_dsa	O
.	O
parent	O
=	O
active_dsa	O
,	O
active_dsa	O
=	O
(	O
struct	O
dsa	O
*	O
)	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
vector	O
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
;	O
dsa_0	O
->	O
old_top_0	O
=	O
stack_top	O
;	O
my_dsa	O
.	O
line	O
=	O
171	int
;	O
my_dsa	O
.	O
channel_45	O
=	O
get_int	O
(	O
(	O
global_dsa	O
=	O
channel_45	O
.	O
arg2	O
,	O
(	O
*	O
(	O
struct	O
desc	O
(	O
*	O
)	O
(	O
void	O
)	O
)	O
channel_45	O
.	O
arg1	O
)	O
(	O
)	O
)	O
)	O
;	O
my_dsa	O
.	O
line	O
=	O
171	int
;	O
my_dsa	O
.	O
re_45	O
=	O
get_real	O
(	O
(	O
global_dsa	O
=	O
re_45	O
.	O
arg2	O
,	O
(	O
*	O
(	O
struct	O
desc	O
(	O
*	O
)	O
(	O
void	O
)	O
)	O
re_45	O
.	O
arg1	O
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	O
->	O
new_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
old_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
174	int
;	O
outreal	O
(	O
my_dsa	O
.	O
channel_45	O
,	O
my_dsa	O
.	O
re_45	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_1	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_0	O
)	O
;	O
my_dsa	O
.	O
retval	O
.	O
lval	O
=	O
0	int
;	O
my_dsa	O
.	O
retval	O
.	O
type	O
=	O
0	int
;	O
active_dsa	O
=	O
my_dsa	O
.	O
parent	O
;	O
return	O
my_dsa	O
.	O
retval	O
;	O
}	O
struct	O
desc	O
maxreal_0	O
(	O
void	O
)	O
{	O
struct	O
dsa_maxreal_0	O
my_dsa	O
;	O
register	O
struct	O
dsa_maxreal_0	O
*	O
dsa_0	O
=	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
proc	O
=	O
"maxreal"	*(char)
;	O
my_dsa	O
.	O
file	O
=	O
"alglib1.alg"	*(char)
;	O
my_dsa	O
.	O
line	O
=	O
178	int
;	O
my_dsa	O
.	O
parent	O
=	O
active_dsa	O
,	O
active_dsa	O
=	O
(	O
struct	O
dsa	O
*	O
)	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
vector	O
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
;	O
dsa_0	O
->	O
old_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
old_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
179	int
;	O
my_dsa	O
.	O
retval	O
.	O
u	O
.	O
real_val	O
=	O
DBL_MAX	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_1	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_0	O
)	O
;	O
my_dsa	O
.	O
retval	O
.	O
lval	O
=	O
0	int
;	O
my_dsa	O
.	O
retval	O
.	O
type	O
=	O
'r'	O
;	O
active_dsa	O
=	O
my_dsa	O
.	O
parent	O
;	O
return	O
my_dsa	O
.	O
retval	O
;	O
}	O
struct	O
desc	O
minreal_0	O
(	O
void	O
)	O
{	O
struct	O
dsa_minreal_0	O
my_dsa	O
;	O
register	O
struct	O
dsa_minreal_0	O
*	O
dsa_0	O
=	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
proc	O
=	O
"minreal"	*(char)
;	O
my_dsa	O
.	O
file	O
=	O
"alglib1.alg"	*(char)
;	O
my_dsa	O
.	O
line	O
=	O
181	int
;	O
my_dsa	O
.	O
parent	O
=	O
active_dsa	O
,	O
active_dsa	O
=	O
(	O
struct	O
dsa	O
*	O
)	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
vector	O
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
;	O
dsa_0	O
->	O
old_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
old_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
182	int
;	O
my_dsa	O
.	O
retval	O
.	O
u	O
.	O
real_val	O
=	O
DBL_MIN	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_1	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_0	O
)	O
;	O
my_dsa	O
.	O
retval	O
.	O
lval	O
=	O
0	int
;	O
my_dsa	O
.	O
retval	O
.	O
type	O
=	O
'r'	O
;	O
active_dsa	O
=	O
my_dsa	O
.	O
parent	O
;	O
return	O
my_dsa	O
.	O
retval	O
;	O
}	O
struct	O
desc	O
maxint_0	O
(	O
void	O
)	O
{	O
struct	O
dsa_maxint_0	O
my_dsa	O
;	O
register	O
struct	O
dsa_maxint_0	O
*	O
dsa_0	O
=	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
proc	O
=	O
"maxint"	*(char)
;	O
my_dsa	O
.	O
file	O
=	O
"alglib1.alg"	*(char)
;	O
my_dsa	O
.	O
line	O
=	O
184	int
;	O
my_dsa	O
.	O
parent	O
=	O
active_dsa	O
,	O
active_dsa	O
=	O
(	O
struct	O
dsa	O
*	O
)	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
vector	O
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
;	O
dsa_0	O
->	O
old_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
old_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
185	int
;	O
my_dsa	O
.	O
retval	O
.	O
u	O
.	O
int_val	O
=	O
INT_MAX	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_1	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_0	O
)	O
;	O
my_dsa	O
.	O
retval	O
.	O
lval	O
=	O
0	int
;	O
my_dsa	O
.	O
retval	O
.	O
type	O
=	O
'i'	O
;	O
active_dsa	O
=	O
my_dsa	O
.	O
parent	O
;	O
return	O
my_dsa	O
.	O
retval	O
;	O
}	O
struct	O
desc	O
epsilon_0	O
(	O
void	O
)	O
{	O
struct	O
dsa_epsilon_0	O
my_dsa	O
;	O
register	O
struct	O
dsa_epsilon_0	O
*	O
dsa_0	O
=	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
proc	O
=	O
"epsilon"	*(char)
;	O
my_dsa	O
.	O
file	O
=	O
"alglib1.alg"	*(char)
;	O
my_dsa	O
.	O
line	O
=	O
198	int
;	O
my_dsa	O
.	O
parent	O
=	O
active_dsa	O
,	O
active_dsa	O
=	O
(	O
struct	O
dsa	O
*	O
)	O
&	O
my_dsa	O
;	O
my_dsa	O
.	O
vector	O
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	O
;	O
dsa_0	O
->	O
old_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_0	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
old_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
new_top_1	O
=	O
stack_top	O
;	O
dsa_0	O
->	O
line	O
=	O
202	int
;	O
my_dsa	O
.	O
retval	O
.	O
u	O
.	O
real_val	O
=	O
DBL_EPSILON	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_1	O
)	O
;	O
pop_stack	O
(	O
dsa_0	O
->	O
old_top_0	O
)	O
;	O
my_dsa	O
.	O
retval	O
.	O
lval	O
=	O
0	int
;	O
my_dsa	O
.	O
retval	O
.	O
type	O
=	O
'r'	O
;	O
active_dsa	O
=	O
my_dsa	O
.	O
parent	O
;	O
return	O
my_dsa	O
.	O
retval	O
;	O
}	O
