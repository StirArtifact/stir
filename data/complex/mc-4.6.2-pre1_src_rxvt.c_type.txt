static	O
int	O
rxvt_extensions	int
=	O
0	int
;	O
int	O
look_for_rxvt_extensions	()->(int)
(	O
void	O
)	O
{	O
static	O
int	O
been_called	int
=	O
0	int
;	O
const	O
char	O
*	O
e	*(char)
;	O
if	O
(	O
!	O
been_called	int
)	O
{	O
rxvt_extensions	int
=	O
0	int
;	O
e	*(char)
=	O
getenv	(*(char))->(*(char))
(	O
"RXVT_EXT"	*(char)
)	O
;	O
if	O
(	O
e	*(char)
)	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
e	*(char)
,	O
"1.0"	*(char)
)	O
)	O
rxvt_extensions	int
=	O
1	int
;	O
been_called	int
=	O
1	int
;	O
}	O
if	O
(	O
rxvt_extensions	int
)	O
console_flag	char
=	O
4	int
;	O
return	O
rxvt_extensions	int
;	O
}	O
static	O
int	O
rxvt_getc	()->(int)
(	O
void	O
)	O
{	O
int	O
r	*(struct)
;	O
unsigned	O
char	O
c	int
;	O
while	O
(	O
read	*((*(void),*(char),long)->(long))
(	O
0	int
,	O
&	O
c	int
,	O
1	int
)	O
!=	O
1	int
)	O
;	O
if	O
(	O
c	int
==	O
'\n'	O
)	O
return	O
-	O
1	int
;	O
r	*(struct)
=	O
(	O
c	int
-	O
'A'	O
)	O
*	O
16	int
;	O
while	O
(	O
read	*((*(void),*(char),long)->(long))
(	O
0	int
,	O
&	O
c	int
,	O
1	int
)	O
!=	O
1	int
)	O
;	O
r	*(struct)
+=	O
(	O
c	int
-	O
'A'	O
)	O
;	O
return	O
r	*(struct)
;	O
}	O
extern	O
int	O
keybar_visible	int
;	O
static	O
int	O
anything_ready	()->(int)
(	O
void	O
)	O
{	O
fd_set	struct(array(long))
fds	*(struct(int,short,short))
;	O
struct	O
timeval	struct(long,long)
tv	*(struct(long,long))
;	O
FD_ZERO	O
(	O
&	O
fds	*(struct(int,short,short))
)	O
;	O
FD_SET	O
(	O
0	int
,	O
&	O
fds	*(struct(int,short,short))
)	O
;	O
tv	*(struct(long,long))
.	O
tv_sec	long
=	O
0	int
;	O
tv	*(struct(long,long))
.	O
tv_usec	long
=	O
0	int
;	O
return	O
select	(int,*(struct(array(long))),*(struct(array(long))),*(struct(array(long))),*(struct(long,long)))->(int)
(	O
1	int
,	O
&	O
fds	*(struct(int,short,short))
,	O
0	int
,	O
0	int
,	O
&	O
tv	*(struct(long,long))
)	O
;	O
}	O
void	O
show_rxvt_contents	(int,char,char)->(void)
(	O
int	O
starty	int
,	O
unsigned	O
char	O
y1	char
,	O
unsigned	O
char	O
y2	char
)	O
{	O
unsigned	O
char	O
*	O
k	*(char)
;	O
int	O
bytes	*(struct)
,	O
i	array(int)
,	O
j	int
,	O
cols	int
=	O
0	int
;	O
y1	char
+=	O
(	O
keybar_visible	int
!=	O
0	int
)	O
;	O
y2	char
+=	O
(	O
keybar_visible	int
!=	O
0	int
)	O
;	O
while	O
(	O
anything_ready	()->(int)
(	O
)	O
)	O
getch	()->(int)
(	O
)	O
;	O
printf	(*(char))->(int)
(	O
"\033CL%c%c%c%c\n"	*(char)
,	O
(	O
y1	char
/	O
26	int
)	O
+	O
'A'	O
,	O
(	O
y1	char
%	O
26	int
)	O
+	O
'A'	O
,	O
(	O
y2	char
/	O
26	int
)	O
+	O
'A'	O
,	O
(	O
y2	char
%	O
26	int
)	O
+	O
'A'	O
)	O
;	O
bytes	*(struct)
=	O
(	O
y2	char
-	O
y1	char
)	O
*	O
(	O
COLS	O
+	O
1	int
)	O
+	O
1	int
;	O
j	int
=	O
0	int
;	O
k	*(char)
=	O
g_malloc	(long)->(*(void))
(	O
bytes	*(struct)
)	O
;	O
for	O
(	O
;	O
;	O
)	O
{	O
int	O
c	int
;	O
c	int
=	O
rxvt_getc	()->(int)
(	O
)	O
;	O
if	O
(	O
c	int
<	O
0	int
)	O
break	O
;	O
if	O
(	O
j	int
<	O
bytes	*(struct)
)	O
k	*(char)
[	O
j	int
++	O
]	O
=	O
c	int
;	O
for	O
(	O
cols	int
=	O
1	int
;	O
;	O
cols	int
++	O
)	O
{	O
c	int
=	O
rxvt_getc	()->(int)
(	O
)	O
;	O
if	O
(	O
c	int
<	O
0	int
)	O
break	O
;	O
if	O
(	O
j	int
<	O
bytes	*(struct)
)	O
k	*(char)
[	O
j	int
++	O
]	O
=	O
c	int
;	O
}	O
}	O
for	O
(	O
i	array(int)
=	O
0	int
;	O
i	array(int)
<	O
j	int
;	O
i	array(int)
++	O
)	O
{	O
if	O
(	O
(	O
i	array(int)
%	O
cols	int
)	O
==	O
0	int
)	O
move	O
(	O
starty	int
+	O
(	O
i	array(int)
/	O
cols	int
)	O
,	O
0	int
)	O
;	O
addch	O
(	O
is_printable	(int)->(int)
(	O
k	*(char)
[	O
i	array(int)
]	O
)	O
?	O
k	*(char)
[	O
i	array(int)
]	O
:	O
' '	O
)	O
;	O
}	O
g_free	(*(void))->(void)
(	O
k	*(char)
)	O
;	O
}	O
