extern	O
int	O
(	O
*	O
wrapx	*((int,int)->(int))
)	O
(	O
)	O
,	O
(	O
*	O
wrapy	*((int,int)->(int))
)	O
(	O
)	O
;	O
extern	O
Sworld	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
;	O
extern	O
struct	O
s_desig_map	struct(char,*(char),int,int,int,int)
desig_map	array(struct(char,*(char),int,int,int,int))
[	O
]	O
;	O
extern	O
struct	O
s_altitude_map	struct(char,*(char),int)
altitude_map	array(struct(char,*(char),int))
[	O
]	O
;	O
extern	O
struct	O
item_map	struct(char,*(char))
terrains	array(struct(char,*(char)))
[	O
]	O
;	O
extern	O
struct	O
item_map	struct(char,*(char))
climates	array(struct(char,*(char)))
[	O
]	O
;	O
extern	O
Suser	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
;	O
int	O
viewall	int
;	O
extern	O
int	O
debug	int
;	O
WINDOW	struct
*	O
sectw	*(struct(short,short,short,short,short,short,short,int,int,bool,bool,bool,bool,bool,bool,bool,bool,bool,int,*(struct),short,short,int,int,*(struct(short,short,short,short,short,short,short,int,int,bool,bool,bool,bool,bool,bool,bool,bool,bool,int,*(struct`),short,short,int,int,*(struct`),struct(short,short,short,short,short,short),short)),struct(short,short,short,short,short,short),short))
;	O
int	O
interrupt	()->(int)
(	O
)	O
{	O
printf	(*(char))->(int)
(	O
"\r\ngot an interrupt.  quitting nicely...\r\n"	*(char)
)	O
;	O
cleanup	()->(void)
(	O
)	O
;	O
clean_exit	()->(void)
(	O
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
int	O
alarm_interrupt	()->(int)
(	O
)	O
{	O
char	O
message	array(char)
[	O
100	int
]	O
;	O
int	O
i	int
,	O
j	int
;	O
sprintf	(*(char),*(char))->(int)
(	O
message	array(char)
,	O
"You have timed out after %d seconds; quitting nicely"	*(char)
,	O
TIMEOUT_SECS	O
)	O
;	O
standout	()->(int)
(	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
strlen	(*(char))->(long)
(	O
message	array(char)
)	O
+	O
3	int
;	O
++	O
i	int
)	O
{	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
3	int
;	O
++	O
j	int
)	O
{	O
move	(int,int)->(int)
(	O
LINES	int
/	O
2	int
-	O
1	int
+	O
j	int
,	O
(	O
COLS	int
-	O
10	int
-	O
strlen	(*(char))->(long)
(	O
message	array(char)
)	O
)	O
/	O
2	int
+	O
i	int
)	O
;	O
addch	(int)->(int)
(	O
' '	O
)	O
;	O
}	O
}	O
move	(int,int)->(int)
(	O
LINES	int
/	O
2	int
,	O
(	O
COLS	int
-	O
strlen	(*(char))->(long)
(	O
message	array(char)
)	O
)	O
/	O
2	int
-	O
3	int
)	O
;	O
addstr	(*(char))->(int)
(	O
message	array(char)
)	O
;	O
standend	()->(int)
(	O
)	O
;	O
cleanup	()->(void)
(	O
)	O
;	O
clean_exit	()->(void)
(	O
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
void	O
show_nation	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))->(void)
(	O
Snation	struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))),*(struct(struct(int,int),*(struct(struct`,*`)))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct(int,int,*`)))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int)))
*	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
)	O
{	O
printf	(*(char))->(int)
(	O
"\n\tname: %s (id = %d)\n"	*(char)
,	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
name	array(char)
,	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
id	short
)	O
;	O
printf	(*(char))->(int)
(	O
"\tleader: %s\n"	*(char)
,	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
leader	array(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"\tpasswd: %s\n"	*(char)
,	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
passwd	array(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"\tcapital is at (%d, %d)\n"	*(char)
,	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
capital	struct(int,int)
.	O
x	int
,	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
capital	struct(int,int)
.	O
y	int
)	O
;	O
printf	(*(char))->(int)
(	O
"\trace is %s\n"	*(char)
,	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
race	struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int)
.	O
name	array(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"\tnation mark is %c\n"	*(char)
,	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
mark	char
)	O
;	O
printf	(*(char))->(int)
(	O
"\t%d civilians; %d soldiers; %d armies.\n"	*(char)
,	O
get_n_civil	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))->(int)
(	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
)	O
,	O
get_n_soldiers	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))->(int)
(	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
)	O
,	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
n_armies	int
)	O
;	O
printf	(*(char))->(int)
(	O
"\tmagical order %s\n"	*(char)
,	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
mag_order	array(char)
)	O
;	O
}	O
char	O
hex_mark	(int)->(char)
(	O
val	int
)	O
int	O
val	int
;	O
{	O
char	O
mark	char
;	O
if	O
(	O
val	int
<	O
0	int
)	O
{	O
mark	char
=	O
'-'	O
;	O
}	O
else	O
if	O
(	O
val	int
<=	O
9	int
)	O
{	O
mark	char
=	O
val	int
+	O
'0'	O
;	O
}	O
else	O
if	O
(	O
val	int
<=	O
15	int
)	O
{	O
mark	char
=	O
val	int
-	O
10	int
+	O
'a'	O
;	O
}	O
else	O
{	O
mark	char
=	O
'+'	O
;	O
}	O
return	O
mark	char
;	O
}	O
int	O
free_nation_mark	(*(struct(struct(int,int,double,double,double),int,int,int,*(*(struct`)),int,*(struct(int,array(char),array(char),array(char),struct`,struct`,char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*`,*`,int,int,int,int,int,struct`,*`,*`,*`)))),char)->(int)
(	O
Sworld	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
*	O
wp	*(struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct`,short,short,short,short,short,short,short,short,short,short,int,long,*`,*`))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct`),*(struct`),int,int,int,int,int,struct(short,short,short,int),*(struct`),*(struct`),*(struct`)))))
,	O
Symbol	char
c	char
)	O
{	O
int	O
i	int
;	O
if	O
(	O
!	O
isprint	(int)->(int)
(	O
c	char
)	O
)	O
{	O
return	O
0	int
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
wp	*(struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct`,short,short,short,short,short,short,short,short,short,short,int,long,*`,*`))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct`),*(struct`),int,int,int,int,int,struct(short,short,short,int),*(struct`),*(struct`),*(struct`)))))
->	O
n_nations	int
;	O
++	O
i	int
)	O
{	O
if	O
(	O
wp	*(struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct`,short,short,short,short,short,short,short,short,short,short,int,long,*`,*`))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct`),*(struct`),int,int,int,int,int,struct(short,short,short,int),*(struct`),*(struct`),*(struct`)))))
->	O
nations	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
[	O
i	int
]	O
.	O
mark	char
==	O
c	char
)	O
{	O
return	O
0	int
;	O
}	O
}	O
return	O
1	int
;	O
}	O
void	O
getline	(*(*(char)),*(long),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
char	O
s	array(char)
[	O
]	O
,	O
int	O
n	int
)	O
{	O
fgets	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
s	array(char)
,	O
n	int
,	O
stdin	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
s	array(char)
[	O
strlen	(*(char))->(long)
(	O
s	array(char)
)	O
-	O
1	int
]	O
==	O
'\n'	O
)	O
{	O
s	array(char)
[	O
strlen	(*(char))->(long)
(	O
s	array(char)
)	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
}	O
}	O
void	O
get_crypt_pass	(array(char),array(char),*(struct(short,short,short,short,short,short,short,int,int,bool,bool,bool,bool,bool,bool,bool,bool,bool,int,*(struct),short,short,int,int,*(struct(short,short,short,short,short,short,short,int,int,bool,bool,bool,bool,bool,bool,bool,bool,bool,int,*`,short,short,int,int,*`,struct`,short)),struct(short,short,short,short,short,short),short)),array(char))->(void)
(	O
char	O
prompt	array(char)
[	O
]	O
,	O
char	O
pass	array(char)
[	O
]	O
,	O
WINDOW	struct
*	O
w	*(struct(short,short,short,short,short,short,short,int,int,bool,bool,bool,bool,bool,bool,bool,bool,bool,int,*(struct),short,short,int,int,*(struct(short,short,short,short,short,short,short,int,int,bool,bool,bool,bool,bool,bool,bool,bool,bool,int,*(struct`),short,short,int,int,*(struct`),struct(short,short,short,short,short,short),short)),struct(short,short,short,short,short,short),short))
,	O
char	O
def_pass	array(char)
[	O
]	O
)	O
{	O
char	O
*	O
s1	array(char)
,	O
s2	array(char)
[	O
PASSLEN	int
]	O
,	O
*	O
getpass	()->(*(char))
(	O
)	O
,	O
*	O
crypt	()->(*(char))
(	O
)	O
;	O
if	O
(	O
def_pass	array(char)
!=	O
NULL	O
&&	O
strlen	(*(char))->(long)
(	O
def_pass	array(char)
)	O
>	O
0	int
)	O
{	O
strcpy	(*(char),*(char))->(*(char))
(	O
s2	array(char)
,	O
def_pass	array(char)
)	O
;	O
s1	array(char)
=	O
crypt	()->(*(char))
(	O
s2	array(char)
,	O
SALT	*(char)
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
pass	array(char)
,	O
s1	array(char)
+	O
2	int
)	O
;	O
return	O
;	O
}	O
if	O
(	O
w	*(struct(short,short,short,short,short,short,short,int,int,bool,bool,bool,bool,bool,bool,bool,bool,bool,int,*(struct),short,short,int,int,*(struct(short,short,short,short,short,short,short,int,int,bool,bool,bool,bool,bool,bool,bool,bool,bool,int,*(struct`),short,short,int,int,*(struct`),struct(short,short,short,short,short,short),short)),struct(short,short,short,short,short,short),short))
==	O
NULL	O
)	O
{	O
s1	array(char)
=	O
getpass	()->(*(char))
(	O
prompt	array(char)
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
s2	array(char)
,	O
s1	array(char)
)	O
;	O
s1	array(char)
=	O
crypt	()->(*(char))
(	O
s2	array(char)
,	O
SALT	*(char)
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
pass	array(char)
,	O
s1	array(char)
+	O
2	int
)	O
;	O
}	O
else	O
{	O
wprintw	(*(struct(short,short,short,short,short,short,short,int,int,bool,bool,bool,bool,bool,bool,bool,bool,bool,int,*(struct),short,short,int,int,*(struct(short,short,short,short,short,short,short,int,int,bool,bool,bool,bool,bool,bool,bool,bool,bool,int,*`,short,short,int,int,*`,struct`,short)),struct(short,short,short,short,short,short),short)),*(char))->(int)
(	O
w	*(struct(short,short,short,short,short,short,short,int,int,bool,bool,bool,bool,bool,bool,bool,bool,bool,int,*(struct),short,short,int,int,*(struct(short,short,short,short,short,short,short,int,int,bool,bool,bool,bool,bool,bool,bool,bool,bool,int,*(struct`),short,short,int,int,*(struct`),struct(short,short,short,short,short,short),short)),struct(short,short,short,short,short,short),short))
,	O
"%s"	*(char)
,	O
prompt	array(char)
)	O
;	O
wrefresh	(*(struct(short,short,short,short,short,short,short,int,int,bool,bool,bool,bool,bool,bool,bool,bool,bool,int,*(struct),short,short,int,int,*(struct(short,short,short,short,short,short,short,int,int,bool,bool,bool,bool,bool,bool,bool,bool,bool,int,*`,short,short,int,int,*`,struct`,short)),struct(short,short,short,short,short,short),short)))->(int)
(	O
w	*(struct(short,short,short,short,short,short,short,int,int,bool,bool,bool,bool,bool,bool,bool,bool,bool,int,*(struct),short,short,int,int,*(struct(short,short,short,short,short,short,short,int,int,bool,bool,bool,bool,bool,bool,bool,bool,bool,int,*(struct`),short,short,int,int,*(struct`),struct(short,short,short,short,short,short),short)),struct(short,short,short,short,short,short),short))
)	O
;	O
wscanw	(*(struct(short,short,short,short,short,short,short,int,int,bool,bool,bool,bool,bool,bool,bool,bool,bool,int,*(struct),short,short,int,int,*(struct(short,short,short,short,short,short,short,int,int,bool,bool,bool,bool,bool,bool,bool,bool,bool,int,*`,short,short,int,int,*`,struct`,short)),struct(short,short,short,short,short,short),short)),*(char))->(int)
(	O
w	*(struct(short,short,short,short,short,short,short,int,int,bool,bool,bool,bool,bool,bool,bool,bool,bool,int,*(struct),short,short,int,int,*(struct(short,short,short,short,short,short,short,int,int,bool,bool,bool,bool,bool,bool,bool,bool,bool,int,*(struct`),short,short,int,int,*(struct`),struct(short,short,short,short,short,short),short)),struct(short,short,short,short,short,short),short))
,	O
"%s"	*(char)
,	O
s2	array(char)
)	O
;	O
s1	array(char)
=	O
crypt	()->(*(char))
(	O
s2	array(char)
,	O
SALT	*(char)
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
pass	array(char)
,	O
s1	array(char)
+	O
2	int
)	O
;	O
}	O
}	O
void	O
cpass	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),array(char))->(void)
(	O
Snation	struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))),*(struct(struct(int,int),*(struct(struct`,*`)))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct(int,int,*`)))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int)))
*	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
,	O
char	O
pass	array(char)
[	O
]	O
)	O
{	O
char	O
s	array(char)
[	O
EXECLEN	int
]	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
s	array(char)
,	O
"CPASS:%d:%s\n"	*(char)
,	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
id	short
,	O
pass	array(char)
)	O
;	O
gen_exec	(*(char))->(void)
(	O
s	array(char)
)	O
;	O
}	O
int	O
which_mark	(int,int,*(struct(int,*(struct(int,array(char),array(char),array(char),struct`,struct`,char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*`,*`,int,int,int,int,int,struct`,*`,*`,*`)),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct`)),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*`)),*(struct(array(char),int,int,*`)),*(struct(int,array(char),int,int,*`,*`)),*(struct(array(char),int,*`)),int,int,int,int,int)))->(int)
(	O
int	O
x	int
,	O
int	O
y	int
,	O
Suser	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
*	O
up	*(struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct`),*(struct`),int,int,int,int,int,struct(short,short,short,int),*(struct`),*(struct`),*(struct`))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct`))),*(struct(array(char),int,int,*(struct`))),*(struct(int,array(char),int,int,*(*`),*(struct`))),*(struct(array(char),int,*(struct`))),int,int,int,int,int))
)	O
{	O
int	O
highlight	int
=	O
1	int
;	O
int	O
owner	int
=	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
x	int
]	O
[	O
y	int
]	O
.	O
owner	int
,	O
mark	char
=	O
'\0'	O
;	O
Ssector	struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct(int,int,*`)))))
*	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
=	O
&	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
x	int
]	O
[	O
y	int
]	O
;	O
int	O
visibility	int
=	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
visible_sectors	*(*(int))
[	O
x	int
]	O
[	O
y	int
]	O
;	O
int	O
cost	int
;	O
Sarmy	struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))))
*	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
,	O
*	O
get_army	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),int)->(*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))))
(	O
)	O
;	O
struct	O
armyid	struct(int,int,*(struct(int,int,*(struct(int,int,*(struct`))))))
*	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
;	O
if	O
(	O
!	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
underwater	int
&&	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
altitude	short
<	O
SEA_LEVEL	int
)	O
{	O
mark	char
=	O
'~'	O
;	O
}	O
if	O
(	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
underwater	int
&&	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
altitude	short
>=	O
SEA_LEVEL	int
)	O
{	O
mark	char
=	O
'.'	O
;	O
}	O
if	O
(	O
!	O
mark	char
)	O
{	O
switch	O
(	O
up	*(struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct`),*(struct`),int,int,int,int,int,struct(short,short,short,int),*(struct`),*(struct`),*(struct`))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct`))),*(struct(array(char),int,int,*(struct`))),*(struct(int,array(char),int,int,*(*`),*(struct`))),*(struct(array(char),int,*(struct`))),int,int,int,int,int))
->	O
display	int
)	O
{	O
case	O
DESIGNATION	int
:	O
if	O
(	O
owner	int
==	O
up	*(struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct`),*(struct`),int,int,int,int,int,struct(short,short,short,int),*(struct`),*(struct`),*(struct`))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct`))),*(struct(array(char),int,int,*(struct`))),*(struct(int,array(char),int,int,*(*`),*(struct`))),*(struct(array(char),int,*(struct`))),int,int,int,int,int))
->	O
id	short
)	O
{	O
mark	char
=	O
desig_map	array(struct(char,*(char),int,int,int,int))
[	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
designation	short
]	O
.	O
mark	char
;	O
}	O
else	O
{	O
if	O
(	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
nations	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
[	O
owner	int
]	O
.	O
mark	char
==	O
'-'	O
)	O
{	O
mark	char
=	O
altitude_map	array(struct(char,*(char),int))
[	O
map_alt	(int)->(int)
(	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
altitude	short
)	O
]	O
.	O
mark	char
;	O
}	O
else	O
{	O
mark	char
=	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
nations	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
[	O
owner	int
]	O
.	O
mark	char
;	O
}	O
}	O
break	O
;	O
case	O
NATION_MARK	int
:	O
mark	char
=	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
nations	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
[	O
owner	int
]	O
.	O
mark	char
;	O
break	O
;	O
case	O
SOIL	int
:	O
if	O
(	O
visibility	int
&	O
SEE_RESOURCES	int
)	O
{	O
mark	char
=	O
hex_mark	(int)->(char)
(	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
soil	short
)	O
;	O
}	O
else	O
{	O
mark	char
=	O
'?'	O
;	O
}	O
break	O
;	O
case	O
METAL	int
:	O
if	O
(	O
visibility	int
&	O
SEE_RESOURCES	int
)	O
{	O
mark	char
=	O
hex_mark	(int)->(char)
(	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
metal	int
)	O
;	O
}	O
else	O
{	O
mark	char
=	O
'?'	O
;	O
}	O
break	O
;	O
case	O
JEWELS	int
:	O
if	O
(	O
visibility	int
&	O
SEE_RESOURCES	int
)	O
{	O
mark	char
=	O
hex_mark	(int)->(char)
(	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
jewels	int
)	O
;	O
}	O
else	O
{	O
mark	char
=	O
'?'	O
;	O
}	O
break	O
;	O
case	O
ALTITUDE	int
:	O
if	O
(	O
visibility	int
&	O
SEE_LAND_WATER	int
)	O
{	O
if	O
(	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
altitude	short
>	O
9	int
)	O
{	O
mark	char
=	O
'+'	O
;	O
}	O
else	O
if	O
(	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
altitude	short
>=	O
0	int
)	O
{	O
mark	char
=	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
altitude	short
+	O
'0'	O
;	O
}	O
else	O
{	O
mark	char
=	O
(	O
-	O
1	int
*	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
altitude	short
)	O
+	O
'0'	O
;	O
}	O
}	O
else	O
{	O
mark	char
=	O
'?'	O
;	O
}	O
break	O
;	O
case	O
CLIMATE	int
:	O
if	O
(	O
visibility	int
&	O
SEE_LAND_WATER	int
)	O
{	O
mark	char
=	O
climates	array(struct(char,*(char)))
[	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
climate	short
]	O
.	O
mark	char
;	O
}	O
else	O
{	O
mark	char
=	O
'?'	O
;	O
}	O
break	O
;	O
case	O
POPULATION	int
:	O
if	O
(	O
visibility	int
&	O
SEE_POPULATION	int
)	O
{	O
if	O
(	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
n_people	int
<	O
0	int
)	O
{	O
mark	char
=	O
'-'	O
;	O
}	O
else	O
if	O
(	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
n_people	int
<	O
950	int
)	O
{	O
mark	char
=	O
(	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
n_people	int
<	O
950	int
)	O
?	O
(	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
n_people	int
+	O
50	int
)	O
/	O
100	int
+	O
'0'	O
:	O
'+'	O
;	O
}	O
else	O
if	O
(	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
n_people	int
<	O
4501	int
)	O
{	O
mark	char
=	O
'I'	O
;	O
}	O
else	O
if	O
(	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
n_people	int
<	O
9501	int
)	O
{	O
mark	char
=	O
'V'	O
;	O
}	O
else	O
{	O
mark	char
=	O
'X'	O
;	O
}	O
}	O
else	O
{	O
mark	char
=	O
'?'	O
;	O
}	O
break	O
;	O
case	O
ARMY_MOVECOST	int
:	O
if	O
(	O
visibility	int
&	O
SEE_LAND_WATER	int
)	O
{	O
if	O
(	O
(	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
=	O
get_army	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),int)->(*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))))
(	O
&	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
nations	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
[	O
up	*(struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct`),*(struct`),int,int,int,int,int,struct(short,short,short,int),*(struct`),*(struct`),*(struct`))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct`))),*(struct(array(char),int,int,*(struct`))),*(struct(int,array(char),int,int,*(*`),*(struct`))),*(struct(array(char),int,*(struct`))),int,int,int,int,int))
->	O
id	short
]	O
,	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
current_army	int
)	O
)	O
==	O
NULL	O
)	O
{	O
cost	int
=	O
get_generic_move_cost	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))->(int)
(	O
&	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
nations	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
[	O
up	*(struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct`),*(struct`),int,int,int,int,int,struct(short,short,short,int),*(struct`),*(struct`),*(struct`))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct`))),*(struct(array(char),int,int,*(struct`))),*(struct(int,array(char),int,int,*(*`),*(struct`))),*(struct(array(char),int,*(struct`))),int,int,int,int,int))
->	O
id	short
]	O
,	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
)	O
;	O
}	O
else	O
{	O
cost	int
=	O
get_army_move_cost	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))))->(int)
(	O
&	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
nations	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
[	O
up	*(struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct`),*(struct`),int,int,int,int,int,struct(short,short,short,int),*(struct`),*(struct`),*(struct`))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct`))),*(struct(array(char),int,int,*(struct`))),*(struct(int,array(char),int,int,*(*`),*(struct`))),*(struct(array(char),int,*(struct`))),int,int,int,int,int))
->	O
id	short
]	O
,	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
,	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
)	O
;	O
}	O
if	O
(	O
cost	int
==	O
TOO_MUCH_MOVE_COST	int
)	O
{	O
mark	char
=	O
'X'	O
;	O
}	O
else	O
if	O
(	O
cost	int
==	O
STOP_MOVE_COST	int
)	O
{	O
mark	char
=	O
'S'	O
;	O
}	O
else	O
{	O
mark	char
=	O
hex_mark	(int)->(char)
(	O
cost	int
)	O
;	O
}	O
}	O
else	O
{	O
mark	char
=	O
'?'	O
;	O
}	O
break	O
;	O
case	O
MOVECOST	int
:	O
if	O
(	O
visibility	int
&	O
SEE_LAND_WATER	int
)	O
{	O
cost	int
=	O
get_generic_move_cost	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))->(int)
(	O
&	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
nations	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
[	O
up	*(struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct`),*(struct`),int,int,int,int,int,struct(short,short,short,int),*(struct`),*(struct`),*(struct`))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct`))),*(struct(array(char),int,int,*(struct`))),*(struct(int,array(char),int,int,*(*`),*(struct`))),*(struct(array(char),int,*(struct`))),int,int,int,int,int))
->	O
id	short
]	O
,	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
)	O
;	O
if	O
(	O
cost	int
==	O
TOO_MUCH_MOVE_COST	int
)	O
{	O
mark	char
=	O
'X'	O
;	O
}	O
else	O
if	O
(	O
cost	int
==	O
STOP_MOVE_COST	int
)	O
{	O
mark	char
=	O
'S'	O
;	O
}	O
else	O
{	O
mark	char
=	O
hex_mark	(int)->(char)
(	O
cost	int
)	O
;	O
}	O
}	O
else	O
{	O
mark	char
=	O
'?'	O
;	O
}	O
break	O
;	O
case	O
TERRAIN	int
:	O
if	O
(	O
visibility	int
&	O
SEE_LAND_WATER	int
)	O
{	O
mark	char
=	O
terrains	array(struct(char,*(char)))
[	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
terrain	short
-	O
MIN_TERRAIN	O
]	O
.	O
mark	char
;	O
}	O
else	O
{	O
mark	char
=	O
'?'	O
;	O
}	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
}	O
switch	O
(	O
up	*(struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct`),*(struct`),int,int,int,int,int,struct(short,short,short,int),*(struct`),*(struct`),*(struct`))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct`))),*(struct(array(char),int,int,*(struct`))),*(struct(int,array(char),int,int,*(*`),*(struct`))),*(struct(array(char),int,*(struct`))),int,int,int,int,int))
->	O
highlight	int
)	O
{	O
case	O
H_OWNED	int
:	O
if	O
(	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
owner	int
==	O
up	*(struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct`),*(struct`),int,int,int,int,int,struct(short,short,short,int),*(struct`),*(struct`),*(struct`))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct`))),*(struct(array(char),int,int,*(struct`))),*(struct(int,array(char),int,int,*(*`),*(struct`))),*(struct(array(char),int,*(struct`))),int,int,int,int,int))
->	O
id	short
)	O
{	O
highlight	int
=	O
-	O
1	int
;	O
}	O
break	O
;	O
case	O
H_ARMIES	int
:	O
if	O
(	O
(	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
visible_sectors	*(*(int))
[	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
loc	struct(int,int)
.	O
x	int
]	O
[	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
loc	struct(int,int)
.	O
y	int
]	O
&	O
SEE_ARMIES	int
)	O
&&	O
has_visible_army	(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))),*(struct(int,*(struct(int,array(char),array(char),array(char),struct`,struct`,char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*`,*`,int,int,int,int,int,struct`,*`,*`,*`)),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct`)),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*`)),*(struct(array(char),int,int,*`)),*(struct(int,array(char),int,int,*`,*`)),*(struct(array(char),int,*`)),int,int,int,int,int)))->(int)
(	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
,	O
&	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
)	O
)	O
{	O
highlight	int
=	O
-	O
1	int
;	O
}	O
break	O
;	O
case	O
H_HOSTILE	int
:	O
if	O
(	O
has_hostile	O
(	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
)	O
)	O
{	O
highlight	int
=	O
-	O
1	int
;	O
}	O
break	O
;	O
case	O
H_PATROL	int
:	O
case	O
H_INTERCEPT	int
:	O
case	O
H_P_OR_I	int
:	O
if	O
(	O
sect_is_patrolled	(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))),int)->(int)
(	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
,	O
up	*(struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct`),*(struct`),int,int,int,int,int,struct(short,short,short,int),*(struct`),*(struct`),*(struct`))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct`))),*(struct(array(char),int,int,*(struct`))),*(struct(int,array(char),int,int,*(*`),*(struct`))),*(struct(array(char),int,*(struct`))),int,int,int,int,int))
->	O
highlight	int
)	O
&&	O
(	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
id	short
==	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
owner	int
)	O
)	O
{	O
highlight	int
=	O
-	O
1	int
;	O
}	O
break	O
;	O
case	O
H_YOUR_ARMIES	int
:	O
if	O
(	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
!=	O
NULL	O
&&	O
(	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
visible_sectors	*(*(int))
[	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
loc	struct(int,int)
.	O
x	int
]	O
[	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
loc	struct(int,int)
.	O
y	int
]	O
&	O
SEE_ARMIES	int
)	O
)	O
{	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
=	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
;	O
while	O
(	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
!=	O
NULL	O
)	O
{	O
if	O
(	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
->	O
owner	int
==	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
id	short
)	O
{	O
highlight	int
=	O
-	O
1	int
;	O
break	O
;	O
}	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
=	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
->	O
next	*(struct(int,int,*(struct(int,int,*(struct`)))))
;	O
}	O
}	O
break	O
;	O
case	O
H_OTHER_ARMIES	int
:	O
if	O
(	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
!=	O
NULL	O
&&	O
(	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
visible_sectors	*(*(int))
[	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
loc	struct(int,int)
.	O
x	int
]	O
[	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
loc	struct(int,int)
.	O
y	int
]	O
&	O
SEE_ARMIES	int
)	O
)	O
{	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
=	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
;	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
=	O
get_army	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),int)->(*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))))
(	O
&	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
nations	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
[	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
->	O
owner	int
]	O
,	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
->	O
id	short
)	O
;	O
while	O
(	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
!=	O
NULL	O
)	O
{	O
if	O
(	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
->	O
owner	int
!=	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
id	short
&&	O
!	O
is_hidden	O
(	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
)	O
)	O
{	O
highlight	int
=	O
-	O
1	int
;	O
break	O
;	O
}	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
=	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
->	O
next	*(struct(int,int,*(struct(int,int,*(struct`)))))
;	O
}	O
}	O
break	O
;	O
case	O
H_MOVE_LEFT	int
:	O
if	O
(	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
!=	O
NULL	O
&&	O
(	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
visible_sectors	*(*(int))
[	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
loc	struct(int,int)
.	O
x	int
]	O
[	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
loc	struct(int,int)
.	O
y	int
]	O
&	O
SEE_ARMIES	int
)	O
)	O
{	O
highlight	int
=	O
1	int
;	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
=	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
;	O
while	O
(	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
!=	O
NULL	O
)	O
{	O
if	O
(	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
->	O
owner	int
==	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
id	short
)	O
{	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
=	O
get_army	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),int)->(*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))))
(	O
&	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
nations	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
[	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
->	O
owner	int
]	O
,	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
->	O
id	short
)	O
;	O
if	O
(	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
->	O
mvpts	int
>	O
0	int
)	O
{	O
highlight	int
=	O
-	O
1	int
;	O
}	O
}	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
=	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
->	O
next	*(struct(int,int,*(struct(int,int,*(struct`)))))
;	O
}	O
}	O
else	O
{	O
highlight	int
=	O
1	int
;	O
}	O
break	O
;	O
case	O
H_UNEMP	int
:	O
if	O
(	O
(	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
n_people	int
>	O
n_workers	(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))->(int)
(	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
)	O
)	O
&&	O
(	O
sectp	*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct`)))))
->	O
owner	int
==	O
up	*(struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct`),*(struct`),int,int,int,int,int,struct(short,short,short,int),*(struct`),*(struct`),*(struct`))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct`))),*(struct(array(char),int,int,*(struct`))),*(struct(int,array(char),int,int,*(*`),*(struct`))),*(struct(array(char),int,*(struct`))),int,int,int,int,int))
->	O
id	short
)	O
)	O
{	O
highlight	int
=	O
-	O
1	int
;	O
}	O
break	O
;	O
case	O
H_NONE	int
:	O
highlight	int
=	O
1	int
;	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
return	O
highlight	int
*	O
mark	char
;	O
}	O
void	O
addsector	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),int,int)->(void)
(	O
Snation	struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))),*(struct(struct(int,int),*(struct(struct`,*`)))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct(int,int,*`)))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int)))
*	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
,	O
int	O
x	int
,	O
int	O
y	int
)	O
{	O
struct	O
pt_list	struct(struct(int,int),*(struct(struct(int,int),*(struct(struct(int,int),*(struct`))))))
*	O
sect	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
;	O
sect	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
=	O
(	O
struct	O
pt_list	struct(struct(int,int),*(struct(struct(int,int),*(struct(struct(int,int),*(struct`))))))
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
pt_list	struct(struct(int,int),*(struct(struct(int,int),*(struct(struct(int,int),*(struct`))))))
)	O
)	O
;	O
sect	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
pt	struct(int,int)
.	O
x	int
=	O
x	int
;	O
sect	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
pt	struct(int,int)
.	O
y	int
=	O
y	int
;	O
sect	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
next	*(struct(int,int,*(struct(int,int,*(struct`)))))
=	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
;	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
=	O
sect	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
;	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
n_sects	int
++	O
;	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
x	int
]	O
[	O
y	int
]	O
.	O
owner	int
=	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
id	short
;	O
}	O
int	O
subtsector	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),int,int)->(int)
(	O
Snation	struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))),*(struct(struct(int,int),*(struct(struct`,*`)))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct(int,int,*`)))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int)))
*	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
,	O
int	O
x	int
,	O
int	O
y	int
)	O
{	O
struct	O
pt_list	struct(struct(int,int),*(struct(struct(int,int),*(struct(struct(int,int),*(struct`))))))
*	O
sect	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
,	O
*	O
temp	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
;	O
int	O
rtvl	int
=	O
0	int
;	O
sect	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
=	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
;	O
if	O
(	O
sect	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
pt	struct(int,int)
.	O
x	int
==	O
x	int
&&	O
sect	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
pt	struct(int,int)
.	O
y	int
==	O
y	int
)	O
{	O
temp	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
=	O
sect	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
;	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
=	O
sect	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
next	*(struct(int,int,*(struct(int,int,*(struct`)))))
;	O
(	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
n_sects	int
)	O
--	O
;	O
free	(*(void))->(void)
(	O
temp	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
)	O
;	O
}	O
else	O
{	O
temp	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
=	O
sect	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
;	O
while	O
(	O
(	O
sect	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
pt	struct(int,int)
.	O
x	int
!=	O
x	int
||	O
sect	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
pt	struct(int,int)
.	O
y	int
!=	O
y	int
)	O
&&	O
sect	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
next	*(struct(int,int,*(struct(int,int,*(struct`)))))
!=	O
NULL	O
)	O
{	O
temp	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
=	O
sect	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
;	O
sect	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
=	O
sect	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
next	*(struct(int,int,*(struct(int,int,*(struct`)))))
;	O
}	O
if	O
(	O
sect	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
pt	struct(int,int)
.	O
x	int
==	O
x	int
&&	O
sect	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
pt	struct(int,int)
.	O
y	int
==	O
y	int
)	O
{	O
temp	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
next	*(struct(int,int,*(struct(int,int,*(struct`)))))
=	O
sect	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
next	*(struct(int,int,*(struct(int,int,*(struct`)))))
;	O
free	(*(void))->(void)
(	O
sect	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
)	O
;	O
(	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
n_sects	int
)	O
--	O
;	O
}	O
else	O
{	O
printf	(*(char))->(int)
(	O
"Error - deleting sector not in list!\n"	*(char)
)	O
;	O
rtvl	int
=	O
1	int
;	O
}	O
}	O
if	O
(	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
n_sects	int
==	O
0	int
)	O
{	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
=	O
NULL	O
;	O
}	O
return	O
rtvl	int
;	O
}	O
void	O
destroy_nation	(int)->(void)
(	O
int	O
id	short
)	O
{	O
struct	O
pt_list	struct(struct(int,int),*(struct(struct(int,int),*(struct(struct(int,int),*(struct`))))))
*	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
,	O
*	O
pt_tmp	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
;	O
Sarmy	struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))))
*	O
army_list	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
,	O
*	O
ap_tmp	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
;	O
Snation	struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))),*(struct(struct(int,int),*(struct(struct`,*`)))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct(int,int,*`)))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int)))
*	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
=	O
&	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
nations	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
[	O
id	short
]	O
;	O
Ssector	struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct(int,int,*`)))))
*	O
sp	int
;	O
if	O
(	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
id	short
==	O
0	int
)	O
{	O
return	O
;	O
}	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
=	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
;	O
while	O
(	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
)	O
{	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
pt	struct(int,int)
.	O
x	int
]	O
[	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
pt	struct(int,int)
.	O
y	int
]	O
.	O
owner	int
=	O
0	int
;	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
pt	struct(int,int)
.	O
x	int
]	O
[	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
pt	struct(int,int)
.	O
y	int
]	O
.	O
designation	short
=	O
D_NODESIG	int
;	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
pt	struct(int,int)
.	O
x	int
]	O
[	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
pt	struct(int,int)
.	O
y	int
]	O
.	O
n_people	int
=	O
0	int
;	O
pt_tmp	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
=	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
next	*(struct(int,int,*(struct(int,int,*(struct`)))))
;	O
free	(*(void))->(void)
(	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
)	O
;	O
--	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
n_sects	int
;	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
=	O
pt_tmp	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
;	O
}	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
=	O
NULL	O
;	O
army_list	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
=	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
armies	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
;	O
while	O
(	O
army_list	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
)	O
{	O
ap_tmp	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
=	O
army_list	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
->	O
next	*(struct(int,int,*(struct(int,int,*(struct`)))))
;	O
sp	int
=	O
&	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
army_list	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
->	O
pos	struct(int,int)
.	O
x	int
]	O
[	O
army_list	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
->	O
pos	struct(int,int)
.	O
y	int
]	O
;	O
delete_army_sector	(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))))->(void)
(	O
sp	int
,	O
army_list	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
)	O
;	O
delete_army_nation	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))))->(void)
(	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
,	O
army_list	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
)	O
;	O
army_list	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
=	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
armies	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
;	O
}	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
armies	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
=	O
NULL	O
;	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
capital	struct(int,int)
.	O
x	int
=	O
-	O
1	int
;	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
capital	struct(int,int)
.	O
y	int
=	O
-	O
1	int
;	O
}	O
int	O
get_n_cities	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))->(int)
(	O
Snation	struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))),*(struct(struct(int,int),*(struct(struct`,*`)))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct(int,int,*`)))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int)))
*	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
)	O
{	O
Ssector	struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct(int,int,*`)))))
*	O
sp	int
;	O
struct	O
pt_list	struct(struct(int,int),*(struct(struct(int,int),*(struct(struct(int,int),*(struct`))))))
*	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
=	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
;	O
int	O
n_cities	int
=	O
0	int
;	O
while	O
(	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
!=	O
NULL	O
)	O
{	O
sp	int
=	O
&	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
pt	struct(int,int)
.	O
x	int
]	O
[	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
pt	struct(int,int)
.	O
y	int
]	O
;	O
if	O
(	O
sp	int
->	O
designation	short
==	O
D_CITY	int
||	O
sp	int
->	O
designation	short
==	O
D_CAPITAL	int
)	O
{	O
++	O
n_cities	int
;	O
}	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
=	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
next	*(struct(int,int,*(struct(int,int,*(struct`)))))
;	O
}	O
return	O
n_cities	int
;	O
}	O
int	O
get_n_civil	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))->(int)
(	O
Snation	struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))),*(struct(struct(int,int),*(struct(struct`,*`)))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct(int,int,*`)))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int)))
*	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
)	O
{	O
Ssector	struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct(int,int,*`)))))
*	O
sp	int
;	O
struct	O
pt_list	struct(struct(int,int),*(struct(struct(int,int),*(struct(struct(int,int),*(struct`))))))
*	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
=	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
;	O
int	O
n_civil	int
=	O
0	int
;	O
while	O
(	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
!=	O
NULL	O
)	O
{	O
sp	int
=	O
&	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
pt	struct(int,int)
.	O
x	int
]	O
[	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
pt	struct(int,int)
.	O
y	int
]	O
;	O
n_civil	int
+=	O
sp	int
->	O
n_people	int
;	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
=	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
next	*(struct(int,int,*(struct(int,int,*(struct`)))))
;	O
}	O
return	O
n_civil	int
;	O
}	O
int	O
get_n_soldiers	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))->(int)
(	O
Snation	struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))),*(struct(struct(int,int),*(struct(struct`,*`)))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct(int,int,*`)))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int)))
*	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
)	O
{	O
Sarmy	struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))))
*	O
armies	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
=	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
armies	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
;	O
int	O
n_sold	int
=	O
0	int
;	O
while	O
(	O
armies	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
!=	O
NULL	O
)	O
{	O
n_sold	int
+=	O
armies	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
->	O
n_soldiers	int
;	O
armies	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
=	O
armies	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
->	O
next	*(struct(int,int,*(struct(int,int,*(struct`)))))
;	O
}	O
return	O
n_sold	int
;	O
}	O
int	O
unique_name	(array(char))->(int)
(	O
char	O
name	array(char)
[	O
]	O
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
n_nations	int
;	O
++	O
i	int
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
nations	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
[	O
i	int
]	O
.	O
name	array(char)
,	O
name	array(char)
)	O
==	O
0	int
)	O
{	O
return	O
0	int
;	O
}	O
}	O
return	O
1	int
;	O
}	O
void	O
null_key	()->(void)
(	O
)	O
{	O
}	O
int	O
free_army_id	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))->(int)
(	O
Snation	struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))),*(struct(struct(int,int),*(struct(struct`,*`)))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct(int,int,*`)))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int)))
*	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
)	O
{	O
Sarmy	struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))))
*	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
=	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
armies	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
,	O
*	O
ap_prev	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
=	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
armies	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
;	O
int	O
id	short
;	O
if	O
(	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
==	O
NULL	O
)	O
{	O
return	O
0	int
;	O
}	O
if	O
(	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
->	O
id	short
>	O
0	int
)	O
{	O
return	O
0	int
;	O
}	O
if	O
(	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
->	O
next	*(struct(int,int,*(struct(int,int,*(struct`)))))
==	O
NULL	O
)	O
{	O
return	O
1	int
;	O
}	O
while	O
(	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
!=	O
NULL	O
)	O
{	O
if	O
(	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
->	O
id	short
>	O
ap_prev	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
->	O
id	short
+	O
1	int
)	O
{	O
id	short
=	O
ap_prev	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
->	O
id	short
+	O
1	int
;	O
return	O
id	short
;	O
}	O
ap_prev	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
=	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
;	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
=	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
->	O
next	*(struct(int,int,*(struct(int,int,*(struct`)))))
;	O
}	O
id	short
=	O
ap_prev	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
->	O
id	short
+	O
1	int
;	O
return	O
id	short
;	O
}	O
int	O
dom_min_int	(int,int)->(int)
(	O
a	int
,	O
b	int
)	O
int	O
a	int
,	O
b	int
;	O
{	O
return	O
(	O
a	int
<	O
b	int
)	O
?	O
a	int
:	O
b	int
;	O
}	O
int	O
dom_max_int	(int,int)->(int)
(	O
a	int
,	O
b	int
)	O
int	O
a	int
,	O
b	int
;	O
{	O
return	O
(	O
a	int
>	O
b	int
)	O
?	O
a	int
:	O
b	int
;	O
}	O
void	O
statline	(array(char),array(char))->(void)
(	O
char	O
s1	array(char)
[	O
]	O
,	O
char	O
s2	array(char)
[	O
]	O
)	O
{	O
mvaddstr	(int,int,*(char))->(int)
(	O
LINES	int
-	O
1	int
,	O
0	int
,	O
s1	array(char)
)	O
;	O
clrtoeol	()->(int)
(	O
)	O
;	O
standout	()->(int)
(	O
)	O
;	O
mvaddstr	(int,int,*(char))->(int)
(	O
LINES	int
-	O
1	int
,	O
COLS	int
-	O
strlen	(*(char))->(long)
(	O
s2	array(char)
)	O
-	O
2	int
,	O
s2	array(char)
)	O
;	O
standend	()->(int)
(	O
)	O
;	O
refresh	()->(int)
(	O
)	O
;	O
}	O
void	O
statline2	(array(char),array(char))->(void)
(	O
char	O
s1	array(char)
[	O
]	O
,	O
char	O
s2	array(char)
[	O
]	O
)	O
{	O
mvprintw	(int,int,*(char))->(int)
(	O
LINES	int
-	O
2	int
,	O
0	int
,	O
"%s"	*(char)
,	O
s1	array(char)
)	O
;	O
clrtoeol	()->(int)
(	O
)	O
;	O
standout	()->(int)
(	O
)	O
;	O
mvprintw	(int,int,*(char))->(int)
(	O
LINES	int
-	O
2	int
,	O
COLS	int
-	O
strlen	(*(char))->(long)
(	O
s2	array(char)
)	O
-	O
2	int
,	O
"%s"	*(char)
,	O
s2	array(char)
)	O
;	O
standend	()->(int)
(	O
)	O
;	O
refresh	()->(int)
(	O
)	O
;	O
}	O
void	O
statline_prompt	(array(char),array(char))->(void)
(	O
char	O
s1	array(char)
[	O
]	O
,	O
char	O
s2	array(char)
[	O
]	O
)	O
{	O
statline	(array(char),array(char))->(void)
(	O
s1	array(char)
,	O
s2	array(char)
)	O
;	O
move	(int,int)->(int)
(	O
LINES	int
-	O
1	int
,	O
strlen	(*(char))->(long)
(	O
s1	array(char)
)	O
)	O
;	O
refresh	()->(int)
(	O
)	O
;	O
}	O
void	O
statline2_prompt	(array(char),array(char))->(void)
(	O
char	O
s1	array(char)
[	O
]	O
,	O
char	O
s2	array(char)
[	O
]	O
)	O
{	O
statline2	(array(char),array(char))->(void)
(	O
s1	array(char)
,	O
s2	array(char)
)	O
;	O
move	(int,int)->(int)
(	O
LINES	int
-	O
2	int
,	O
strlen	(*(char))->(long)
(	O
s1	array(char)
)	O
)	O
;	O
refresh	()->(int)
(	O
)	O
;	O
}	O
void	O
init_screen	()->(void)
(	O
)	O
{	O
printf	(*(char))->(int)
(	O
"initializing screen...\r\n"	*(char)
)	O
;	O
initscr	()->(*(struct(short,short,short,short,short,short,short,int,int,bool,bool,bool,bool,bool,bool,bool,bool,bool,int,*(struct),short,short,int,int,*(struct(short,short,short,short,short,short,short,int,int,bool,bool,bool,bool,bool,bool,bool,bool,bool,int,*`,short,short,int,int,*`,struct`,short)),struct(short,short,short,short,short,short),short)))
(	O
)	O
;	O
savetty	()->(int)
(	O
)	O
;	O
cbreak	()->(int)
(	O
)	O
;	O
noecho	()->(int)
(	O
)	O
;	O
clear	()->(int)
(	O
)	O
;	O
sectw	*(struct(short,short,short,short,short,short,short,int,int,bool,bool,bool,bool,bool,bool,bool,bool,bool,int,*(struct),short,short,int,int,*(struct(short,short,short,short,short,short,short,int,int,bool,bool,bool,bool,bool,bool,bool,bool,bool,int,*(struct`),short,short,int,int,*(struct`),struct(short,short,short,short,short,short),short)),struct(short,short,short,short,short,short),short))
=	O
newwin	(int,int,int,int)->(*(struct(short,short,short,short,short,short,short,int,int,bool,bool,bool,bool,bool,bool,bool,bool,bool,int,*(struct),short,short,int,int,*(struct(short,short,short,short,short,short,short,int,int,bool,bool,bool,bool,bool,bool,bool,bool,bool,int,*`,short,short,int,int,*`,struct`,short)),struct(short,short,short,short,short,short),short)))
(	O
SECTW_SIZE_Y	int
,	O
SECTW_SIZE_X	int
,	O
SECTW_Y	O
,	O
SECTW_X	O
)	O
;	O
if	O
(	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
map_style	int
==	O
NORMAL_MAP	int
)	O
{	O
move	(int,int)->(int)
(	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
cursor	struct(int,int)
.	O
y	int
,	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
cursor	struct(int,int)
.	O
x	int
)	O
;	O
}	O
else	O
{	O
move	(int,int)->(int)
(	O
2	int
*	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
cursor	struct(int,int)
.	O
y	int
,	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
cursor	struct(int,int)
.	O
x	int
)	O
;	O
}	O
}	O
struct	O
spirit_type	struct(array(char),char,int,float,int,int,int,int,int)
*	O
get_spirit_type	(*(struct(int,*(struct(int,array(char),array(char),array(char),struct`,struct`,char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*`,*`,int,int,int,int,int,struct`,*`,*`,*`)),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct`)),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*`)),*(struct(array(char),int,int,*`)),*(struct(int,array(char),int,int,*`,*`)),*(struct(array(char),int,*`)),int,int,int,int,int)),array(char))->(*(struct(array(char),char,int,float,int,int,int,int,int)))
(	O
up	*(struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct`),*(struct`),int,int,int,int,int,struct(short,short,short,int),*(struct`),*(struct`),*(struct`))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct`))),*(struct(array(char),int,int,*(struct`))),*(struct(int,array(char),int,int,*(*`),*(struct`))),*(struct(array(char),int,*(struct`))),int,int,int,int,int))
,	O
type	array(char)
)	O
Suser	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
*	O
up	*(struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct`),*(struct`),int,int,int,int,int,struct(short,short,short,int),*(struct`),*(struct`),*(struct`))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct`))),*(struct(array(char),int,int,*(struct`))),*(struct(int,array(char),int,int,*(*`),*(struct`))),*(struct(array(char),int,*(struct`))),int,int,int,int,int))
;	O
char	O
type	array(char)
[	O
]	O
;	O
{	O
int	O
i	int
;	O
extern	O
struct	O
spirit_type	struct(array(char),char,int,float,int,int,int,int,int)
*	O
spirit_types	*(struct(array(char),char,int,float,int,int,int,int,int))
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
up	*(struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct`),*(struct`),int,int,int,int,int,struct(short,short,short,int),*(struct`),*(struct`),*(struct`))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct`))),*(struct(array(char),int,int,*(struct`))),*(struct(int,array(char),int,int,*(*`),*(struct`))),*(struct(array(char),int,*(struct`))),int,int,int,int,int))
->	O
n_spirit_types	int
;	O
++	O
i	int
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
type	array(char)
,	O
spirit_types	*(struct(array(char),char,int,float,int,int,int,int,int))
[	O
i	int
]	O
.	O
type	array(char)
)	O
==	O
0	int
)	O
{	O
return	O
&	O
(	O
spirit_types	*(struct(array(char),char,int,float,int,int,int,int,int))
[	O
i	int
]	O
)	O
;	O
}	O
}	O
return	O
NULL	O
;	O
}	O
void	O
gen_exec	(*(char))->(void)
(	O
char	O
*	O
s	array(char)
)	O
{	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
*	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
)	O
;	O
char	O
exec_file	array(char)
[	O
NAMELEN	int
]	O
;	O
int	O
i	int
;	O
sprintf	(*(char),*(char))->(int)
(	O
exec_file	array(char)
,	O
"exec/exec%d"	*(char)
,	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
id	short
)	O
;	O
if	O
(	O
(	O
s	array(char)
!=	O
NULL	O
)	O
&&	O
(	O
strlen	(*(char))->(long)
(	O
s	array(char)
)	O
==	O
0	int
)	O
)	O
{	O
return	O
;	O
}	O
if	O
(	O
s	array(char)
!=	O
NULL	O
)	O
{	O
strcpy	(*(char),*(char))->(*(char))
(	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
exec_lines	array(array(char))
[	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
n_execs	int
]	O
,	O
s	array(char)
)	O
;	O
++	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
n_execs	int
;	O
}	O
if	O
(	O
(	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
n_execs	int
>=	O
N_EXECS	int
)	O
||	O
(	O
s	array(char)
==	O
NULL	O
)	O
)	O
{	O
if	O
(	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
exec_file	array(char)
,	O
"a"	*(char)
)	O
)	O
==	O
NULL	O
)	O
{	O
printf	(*(char))->(int)
(	O
"cannot open your exec file, this is serious\n"	*(char)
)	O
;	O
clean_exit	()->(void)
(	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
critical	()->(void)
(	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
n_execs	int
;	O
++	O
i	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s"	*(char)
,	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
exec_lines	array(array(char))
[	O
i	int
]	O
)	O
;	O
}	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
noncritical	()->(void)
(	O
)	O
;	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
n_execs	int
=	O
0	int
;	O
}	O
}	O
int	O
is_good_order	(array(char))->(int)
(	O
char	O
name	array(char)
[	O
]	O
)	O
{	O
int	O
good	int
=	O
0	int
;	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
*	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
)	O
;	O
char	O
line	array(char)
[	O
200	int
]	O
;	O
int	O
i	int
,	O
n_orders	int
;	O
if	O
(	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
MAG_ORDERS	*(char)
,	O
"r"	*(char)
)	O
)	O
==	O
NULL	O
)	O
{	O
printf	(*(char))->(int)
(	O
"cannot find file %s.  this is bad.\n"	*(char)
,	O
MAG_ORDERS	*(char)
)	O
;	O
clean_exit	()->(void)
(	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
while	O
(	O
fgets	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
line	array(char)
,	O
200	int
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
!=	O
NULL	O
)	O
{	O
if	O
(	O
line	array(char)
[	O
0	int
]	O
!=	O
'#'	O
)	O
{	O
sscanf	(*(char),*(char))->(int)
(	O
line	array(char)
,	O
"%d"	*(char)
,	O
&	O
n_orders	int
)	O
;	O
break	O
;	O
}	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
n_orders	int
;	O
)	O
{	O
fgets	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
line	array(char)
,	O
NAMELEN	int
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
line	array(char)
[	O
strlen	(*(char))->(long)
(	O
line	array(char)
)	O
-	O
1	int
]	O
==	O
'\n'	O
)	O
{	O
line	array(char)
[	O
strlen	(*(char))->(long)
(	O
line	array(char)
)	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
}	O
if	O
(	O
line	array(char)
[	O
0	int
]	O
!=	O
'#'	O
)	O
{	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
line	array(char)
,	O
name	array(char)
,	O
NAMELEN	int
)	O
==	O
0	int
)	O
{	O
good	int
=	O
1	int
;	O
}	O
++	O
i	int
;	O
}	O
}	O
return	O
good	int
;	O
}	O
int	O
has_visible_army	(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))),*(struct(int,*(struct(int,array(char),array(char),array(char),struct`,struct`,char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*`,*`,int,int,int,int,int,struct`,*`,*`,*`)),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct`)),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*`)),*(struct(array(char),int,int,*`)),*(struct(int,array(char),int,int,*`,*`)),*(struct(array(char),int,*`)),int,int,int,int,int)))->(int)
(	O
Ssector	struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct(int,int,*`)))))
*	O
sp	int
,	O
Suser	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
*	O
up	*(struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct`),*(struct`),int,int,int,int,int,struct(short,short,short,int),*(struct`),*(struct`),*(struct`))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct`))),*(struct(array(char),int,int,*(struct`))),*(struct(int,array(char),int,int,*(*`),*(struct`))),*(struct(array(char),int,*(struct`))),int,int,int,int,int))
)	O
{	O
struct	O
armyid	struct(int,int,*(struct(int,int,*(struct(int,int,*(struct`))))))
*	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
=	O
sp	int
->	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
;	O
Sarmy	struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))))
*	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
,	O
*	O
get_army	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),int)->(*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))))
(	O
)	O
;	O
int	O
found	int
=	O
0	int
;	O
while	O
(	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
)	O
{	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
=	O
get_army	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),int)->(*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))))
(	O
&	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
nations	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
[	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
->	O
owner	int
]	O
,	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
->	O
id	short
)	O
;	O
if	O
(	O
!	O
is_hidden	O
(	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
)	O
)	O
{	O
found	int
=	O
1	int
;	O
break	O
;	O
}	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
=	O
alist	*(struct(int,int,*(struct(int,int,*(struct`)))))
->	O
next	*(struct(int,int,*(struct(int,int,*(struct`)))))
;	O
}	O
return	O
found	int
;	O
}	O
void	O
find_visible_sectors	(*(*(int)))->(void)
(	O
int	O
*	O
*	O
visible_sectors	*(*(int))
)	O
{	O
int	O
x	int
,	O
y	int
,	O
i	int
,	O
j	int
;	O
struct	O
pt_list	struct(struct(int,int),*(struct(struct(int,int),*(struct(struct(int,int),*(struct`))))))
*	O
plist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
;	O
Sarmy	struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))))
*	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
;	O
Ssector	struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*(struct(int,int,*`)))))
*	O
sp	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
xmax	int
;	O
++	O
i	int
)	O
{	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
ymax	int
;	O
++	O
j	int
)	O
{	O
visible_sectors	*(*(int))
[	O
i	int
]	O
[	O
j	int
]	O
=	O
viewall	int
?	O
SEE_ALL	int
:	O
SEE_NOTHING	int
;	O
}	O
}	O
for	O
(	O
plist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
=	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
ptlist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
;	O
plist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
!=	O
NULL	O
;	O
plist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
=	O
plist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
next	*(struct(int,int,*(struct(int,int,*(struct`)))))
)	O
{	O
x	int
=	O
plist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
pt	struct(int,int)
.	O
x	int
;	O
y	int
=	O
plist	*(struct(struct(int,int),*(struct(struct(int,int),*(struct`)))))
->	O
pt	struct(int,int)
.	O
y	int
;	O
visible_sectors	*(*(int))
[	O
x	int
]	O
[	O
y	int
]	O
=	O
SEE_ALL	int
;	O
for	O
(	O
i	int
=	O
x	int
-	O
LAND_SIGHT	int
;	O
i	int
<=	O
x	int
+	O
LAND_SIGHT	int
;	O
++	O
i	int
)	O
{	O
for	O
(	O
j	int
=	O
y	int
-	O
LAND_SIGHT	int
;	O
j	int
<=	O
y	int
+	O
LAND_SIGHT	int
;	O
++	O
j	int
)	O
{	O
sp	int
=	O
&	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
(	O
*	O
wrapx	*((int,int)->(int))
)	O
(	O
i	int
,	O
j	int
)	O
]	O
[	O
(	O
*	O
wrapy	*((int,int)->(int))
)	O
(	O
i	int
,	O
j	int
)	O
]	O
;	O
if	O
(	O
has_hidden	O
(	O
sp	int
)	O
&&	O
sp	int
->	O
owner	int
!=	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
id	short
)	O
{	O
visible_sectors	*(*(int))
[	O
x	int
]	O
[	O
y	int
]	O
|=	O
SEE_ARMIES	int
;	O
}	O
else	O
{	O
visible_sectors	*(*(int))
[	O
(	O
*	O
wrapx	*((int,int)->(int))
)	O
(	O
i	int
,	O
j	int
)	O
]	O
[	O
(	O
*	O
wrapy	*((int,int)->(int))
)	O
(	O
i	int
,	O
j	int
)	O
]	O
|=	O
(	O
SEE_LAND_WATER	int
|	O
SEE_OWNER	int
|	O
SEE_DESIG	int
|	O
SEE_POPULATION	int
)	O
;	O
}	O
if	O
(	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
(	O
*	O
wrapx	*((int,int)->(int))
)	O
(	O
i	int
,	O
j	int
)	O
]	O
[	O
(	O
*	O
wrapy	*((int,int)->(int))
)	O
(	O
i	int
,	O
j	int
)	O
]	O
.	O
owner	int
==	O
0	int
)	O
{	O
visible_sectors	*(*(int))
[	O
(	O
*	O
wrapx	*((int,int)->(int))
)	O
(	O
i	int
,	O
j	int
)	O
]	O
[	O
(	O
*	O
wrapy	*((int,int)->(int))
)	O
(	O
i	int
,	O
j	int
)	O
]	O
|=	O
SEE_RESOURCES	int
;	O
}	O
}	O
}	O
}	O
for	O
(	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
=	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
armies	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
;	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
!=	O
NULL	O
;	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
=	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
->	O
next	*(struct(int,int,*(struct(int,int,*(struct`)))))
)	O
{	O
x	int
=	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
->	O
pos	struct(int,int)
.	O
x	int
;	O
y	int
=	O
ap	*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`)))))
->	O
pos	struct(int,int)
.	O
y	int
;	O
sp	int
=	O
&	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
x	int
]	O
[	O
y	int
]	O
;	O
if	O
(	O
has_hidden	O
(	O
sp	int
)	O
&&	O
sp	int
->	O
owner	int
!=	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
id	short
)	O
{	O
visible_sectors	*(*(int))
[	O
x	int
]	O
[	O
y	int
]	O
=	O
SEE_ARMIES	int
;	O
}	O
else	O
{	O
visible_sectors	*(*(int))
[	O
x	int
]	O
[	O
y	int
]	O
=	O
SEE_ALL	int
;	O
}	O
for	O
(	O
i	int
=	O
x	int
-	O
ARMY_SIGHT	int
;	O
i	int
<=	O
x	int
+	O
ARMY_SIGHT	int
;	O
++	O
i	int
)	O
{	O
for	O
(	O
j	int
=	O
y	int
-	O
ARMY_SIGHT	int
;	O
j	int
<=	O
y	int
+	O
ARMY_SIGHT	int
;	O
++	O
j	int
)	O
{	O
sp	int
=	O
&	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
(	O
*	O
wrapx	*((int,int)->(int))
)	O
(	O
i	int
,	O
j	int
)	O
]	O
[	O
(	O
*	O
wrapy	*((int,int)->(int))
)	O
(	O
i	int
,	O
j	int
)	O
]	O
;	O
if	O
(	O
!	O
has_hidden	O
(	O
sp	int
)	O
)	O
{	O
visible_sectors	*(*(int))
[	O
(	O
*	O
wrapx	*((int,int)->(int))
)	O
(	O
i	int
,	O
j	int
)	O
]	O
[	O
(	O
*	O
wrapy	*((int,int)->(int))
)	O
(	O
i	int
,	O
j	int
)	O
]	O
|=	O
(	O
SEE_LAND_WATER	int
|	O
SEE_OWNER	int
|	O
SEE_DESIG	int
|	O
SEE_POPULATION	int
|	O
SEE_ARMIES	int
)	O
;	O
}	O
if	O
(	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
.	O
map	*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct(int,int,*`)))))
[	O
(	O
*	O
wrapx	*((int,int)->(int))
)	O
(	O
i	int
,	O
j	int
)	O
]	O
[	O
(	O
*	O
wrapy	*((int,int)->(int))
)	O
(	O
i	int
,	O
j	int
)	O
]	O
.	O
owner	int
==	O
0	int
)	O
{	O
visible_sectors	*(*(int))
[	O
(	O
*	O
wrapx	*((int,int)->(int))
)	O
(	O
i	int
,	O
j	int
)	O
]	O
[	O
(	O
*	O
wrapy	*((int,int)->(int))
)	O
(	O
i	int
,	O
j	int
)	O
]	O
|=	O
SEE_RESOURCES	int
;	O
}	O
}	O
}	O
}	O
}	O
char	O
*	O
contents	(int,int,int,int,int,int,*(struct(int,int)),int)->(*(char))
(	O
int	O
money	int
,	O
int	O
metal	int
,	O
int	O
jewels	int
,	O
int	O
food	int
,	O
int	O
people	int
,	O
int	O
army	int
,	O
Pt	struct(int,int)
*	O
title	struct(int,int)
,	O
int	O
sp	int
)	O
{	O
char	O
*	O
rcontents	*(char)
;	O
char	O
tmps	array(char)
[	O
60	int
]	O
;	O
if	O
(	O
(	O
rcontents	*(char)
=	O
(	O
char	O
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
char	O
)	O
*	O
100	int
)	O
)	O
==	O
NULL	O
)	O
{	O
clean_exit	()->(void)
(	O
)	O
;	O
exit	(int)->(void)
(	O
-	O
1	int
)	O
;	O
}	O
sprintf	(*(char),*(char))->(int)
(	O
rcontents	*(char)
,	O
"%s"	*(char)
,	O
""	*(char)
)	O
;	O
if	O
(	O
money	int
>	O
0	int
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
tmps	array(char)
,	O
"/%d sk."	*(char)
,	O
money	int
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
rcontents	*(char)
,	O
tmps	array(char)
)	O
;	O
}	O
if	O
(	O
metal	int
>	O
0	int
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
tmps	array(char)
,	O
"/%d met"	*(char)
,	O
metal	int
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
rcontents	*(char)
,	O
tmps	array(char)
)	O
;	O
}	O
if	O
(	O
jewels	int
>	O
0	int
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
tmps	array(char)
,	O
"/%d jwl"	*(char)
,	O
jewels	int
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
rcontents	*(char)
,	O
tmps	array(char)
)	O
;	O
}	O
if	O
(	O
food	int
>	O
0	int
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
tmps	array(char)
,	O
"/%d food"	*(char)
,	O
food	int
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
rcontents	*(char)
,	O
tmps	array(char)
)	O
;	O
}	O
if	O
(	O
people	int
>	O
0	int
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
tmps	array(char)
,	O
"/%d peop"	*(char)
,	O
people	int
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
rcontents	*(char)
,	O
tmps	array(char)
)	O
;	O
}	O
if	O
(	O
army	int
>=	O
0	int
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
tmps	array(char)
,	O
"/army %d"	*(char)
,	O
army	int
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
rcontents	*(char)
,	O
tmps	array(char)
)	O
;	O
}	O
if	O
(	O
title	struct(int,int)
&&	O
title	struct(int,int)
->	O
x	int
!=	O
-	O
1	int
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
tmps	array(char)
,	O
"/sect %d,%d"	*(char)
,	O
xrel	(int,int,struct(int,int))->(int)
(	O
title	struct(int,int)
->	O
x	int
,	O
title	struct(int,int)
->	O
y	int
,	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
capital	struct(int,int)
)	O
,	O
yrel	(int,int,struct(int,int))->(int)
(	O
title	struct(int,int)
->	O
x	int
,	O
title	struct(int,int)
->	O
y	int
,	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
capital	struct(int,int)
)	O
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
rcontents	*(char)
,	O
tmps	array(char)
)	O
;	O
}	O
if	O
(	O
sp	int
>	O
0	int
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
tmps	array(char)
,	O
"/%d sp"	*(char)
,	O
sp	int
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
rcontents	*(char)
,	O
tmps	array(char)
)	O
;	O
}	O
if	O
(	O
rcontents	*(char)
[	O
0	int
]	O
==	O
'/'	O
)	O
{	O
strcpy	(*(char),*(char))->(*(char))
(	O
rcontents	*(char)
,	O
rcontents	*(char)
+	O
1	int
)	O
;	O
}	O
return	O
rcontents	*(char)
;	O
}	O
int	O
univ_intel	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))->(int)
(	O
Snation	struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))),*(struct(struct(int,int),*(struct(struct`,*`)))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct(int,int,*`)))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int)))
*	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
)	O
{	O
double	O
sqrt	()->(double)
(	O
)	O
;	O
int	O
ret	int
;	O
if	O
(	O
get_n_civil	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))->(int)
(	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
)	O
)	O
{	O
ret	int
=	O
(	O
int	O
)	O
(	O
100	int
*	O
get_n_students	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))->(int)
(	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
)	O
/	O
get_n_civil	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))->(int)
(	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
)	O
)	O
;	O
}	O
else	O
{	O
ret	int
=	O
0	int
;	O
}	O
return	O
ret	int
;	O
}	O
int	O
priestliness	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))->(int)
(	O
Snation	struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))),*(struct(struct(int,int),*(struct(struct`,*`)))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct(int,int,*`)))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int)))
*	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
)	O
{	O
double	O
sqrt	()->(double)
(	O
)	O
;	O
int	O
ret	int
;	O
if	O
(	O
get_n_civil	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))->(int)
(	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
)	O
)	O
{	O
ret	int
=	O
(	O
int	O
)	O
(	O
100	int
*	O
get_n_priests	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))->(int)
(	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
)	O
/	O
get_n_civil	(*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))->(int)
(	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
)	O
)	O
;	O
}	O
else	O
{	O
ret	int
=	O
0	int
;	O
}	O
return	O
ret	int
;	O
}	O
int	O
are_all_digits	(*(char))->(int)
(	O
char	O
*	O
s	array(char)
)	O
{	O
while	O
(	O
*	O
s	array(char)
)	O
{	O
if	O
(	O
!	O
isdigit	(int)->(int)
(	O
*	O
s	array(char)
)	O
)	O
{	O
return	O
0	int
;	O
}	O
++	O
s	array(char)
;	O
}	O
return	O
1	int
;	O
}	O
char	O
next_free_nation_mark	()->(char)
(	O
)	O
{	O
char	O
mark	char
;	O
for	O
(	O
mark	char
=	O
'a'	O
;	O
mark	char
<=	O
'z'	O
;	O
mark	char
++	O
)	O
{	O
if	O
(	O
free_nation_mark	(*(struct(struct(int,int,double,double,double),int,int,int,*(*(struct`)),int,*(struct(int,array(char),array(char),array(char),struct`,struct`,char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*`,*`,int,int,int,int,int,struct`,*`,*`,*`)))),char)->(int)
(	O
&	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
,	O
mark	char
)	O
)	O
{	O
return	O
mark	char
;	O
}	O
}	O
for	O
(	O
mark	char
=	O
'A'	O
;	O
mark	char
<=	O
'Z'	O
;	O
mark	char
++	O
)	O
{	O
if	O
(	O
free_nation_mark	(*(struct(struct(int,int,double,double,double),int,int,int,*(*(struct`)),int,*(struct(int,array(char),array(char),array(char),struct`,struct`,char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*`,*`,int,int,int,int,int,struct`,*`,*`,*`)))),char)->(int)
(	O
&	O
world	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
,	O
mark	char
)	O
)	O
{	O
return	O
mark	char
;	O
}	O
}	O
return	O
0	int
;	O
}	O
