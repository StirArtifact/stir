void	O
chacha_poly1305_set_key	O
(	O
struct	O
chacha_poly1305_ctx	struct(struct(array(int)),struct(union(array(int),array(long)),array(int),int,union(array(int),array(long))),union(array(char),array(long),array(long)),long,long,array(char),int)
*	O
ctx	*(void)
,	O
const	O
uint8_t	char
*	O
key	*(char)
)	O
{	O
chacha_set_key	O
(	O
&	O
ctx	*(void)
->	O
chacha	struct(array(int))
,	O
key	*(char)
)	O
;	O
}	O
void	O
chacha_poly1305_set_nonce	O
(	O
struct	O
chacha_poly1305_ctx	struct(struct(array(int)),struct(union(array(int),array(long)),array(int),int,union(array(int),array(long))),union(array(char),array(long),array(long)),long,long,array(char),int)
*	O
ctx	*(void)
,	O
const	O
uint8_t	char
*	O
nonce	*(char)
)	O
{	O
union	O
{	O
uint32_t	int
x	array(int)
[	O
_CHACHA_STATE_LENGTH	int
]	O
;	O
uint8_t	char
subkey	array(char)
[	O
32	int
]	O
;	O
}	O
u	union(struct(array(int)),struct(array(int)),struct(array(int)))
;	O
chacha_set_nonce96	O
(	O
&	O
ctx	*(void)
->	O
chacha	struct(array(int))
,	O
nonce	*(char)
)	O
;	O
_chacha_core	O
(	O
u	union(struct(array(int)),struct(array(int)),struct(array(int)))
.	O
x	array(int)
,	O
ctx	*(void)
->	O
chacha	struct(array(int))
.	O
state	array(int)
,	O
CHACHA_ROUNDS	int
)	O
;	O
poly1305_set_key	O
(	O
&	O
ctx	*(void)
->	O
poly1305	struct(union(array(int),array(long)),array(int),int,union(array(int),array(long)))
,	O
u	union(struct(array(int)),struct(array(int)),struct(array(int)))
.	O
subkey	array(char)
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
ctx	*(void)
->	O
s	*(union(array(char),array(long),array(long)))
.	O
b	array(char)
,	O
u	union(struct(array(int)),struct(array(int)),struct(array(int)))
.	O
subkey	array(char)
+	O
16	int
,	O
16	int
)	O
;	O
ctx	*(void)
->	O
chacha	struct(array(int))
.	O
state	array(int)
[	O
12	int
]	O
=	O
1	int
;	O
ctx	*(void)
->	O
auth_size	long
=	O
ctx	*(void)
->	O
data_size	long
=	O
ctx	*(void)
->	O
index	(*(char),int)->(*(char))
=	O
0	int
;	O
}	O
static	O
void	O
poly1305_update	(*(struct(struct(array(int)),struct(union(array(int),array(long)),array(int),int,union(array(int),array(long))),union(array(char),array(long),array(long)),long,long,array(char),int)),long,*(char))->(void)
(	O
struct	O
chacha_poly1305_ctx	struct(struct(array(int)),struct(union(array(int),array(long)),array(int),int,union(array(int),array(long))),union(array(char),array(long),array(long)),long,long,array(char),int)
*	O
ctx	*(void)
,	O
size_t	long
length	long
,	O
const	O
uint8_t	char
*	O
data	*(char)
)	O
{	O
MD_UPDATE	O
(	O
ctx	*(void)
,	O
length	long
,	O
data	*(char)
,	O
COMPRESS	O
,	O
(	O
void	O
)	O
0	int
)	O
;	O
}	O
static	O
void	O
poly1305_pad	(*(struct(struct(array(int)),struct(union(array(int),array(long)),array(int),int,union(array(int),array(long))),union(array(char),array(long),array(long)),long,long,array(char),int)))->(void)
(	O
struct	O
chacha_poly1305_ctx	struct(struct(array(int)),struct(union(array(int),array(long)),array(int),int,union(array(int),array(long))),union(array(char),array(long),array(long)),long,long,array(char),int)
*	O
ctx	*(void)
)	O
{	O
if	O
(	O
ctx	*(void)
->	O
index	(*(char),int)->(*(char))
)	O
{	O
memset	(*(void),int,long)->(*(void))
(	O
ctx	*(void)
->	O
block	array(char)
+	O
ctx	*(void)
->	O
index	(*(char),int)->(*(char))
,	O
0	int
,	O
POLY1305_BLOCK_SIZE	int
-	O
ctx	*(void)
->	O
index	(*(char),int)->(*(char))
)	O
;	O
_poly1305_block	O
(	O
&	O
ctx	*(void)
->	O
poly1305	struct(union(array(int),array(long)),array(int),int,union(array(int),array(long)))
,	O
ctx	*(void)
->	O
block	array(char)
,	O
1	int
)	O
;	O
ctx	*(void)
->	O
index	(*(char),int)->(*(char))
=	O
0	int
;	O
}	O
}	O
void	O
chacha_poly1305_update	O
(	O
struct	O
chacha_poly1305_ctx	struct(struct(array(int)),struct(union(array(int),array(long)),array(int),int,union(array(int),array(long))),union(array(char),array(long),array(long)),long,long,array(char),int)
*	O
ctx	*(void)
,	O
size_t	long
length	long
,	O
const	O
uint8_t	char
*	O
data	*(char)
)	O
{	O
assert	O
(	O
ctx	*(void)
->	O
data_size	long
==	O
0	int
)	O
;	O
poly1305_update	(*(struct(struct(array(int)),struct(union(array(int),array(long)),array(int),int,union(array(int),array(long))),union(array(char),array(long),array(long)),long,long,array(char),int)),long,*(char))->(void)
(	O
ctx	*(void)
,	O
length	long
,	O
data	*(char)
)	O
;	O
ctx	*(void)
->	O
auth_size	long
+=	O
length	long
;	O
}	O
void	O
chacha_poly1305_encrypt	O
(	O
struct	O
chacha_poly1305_ctx	struct(struct(array(int)),struct(union(array(int),array(long)),array(int),int,union(array(int),array(long))),union(array(char),array(long),array(long)),long,long,array(char),int)
*	O
ctx	*(void)
,	O
size_t	long
length	long
,	O
uint8_t	char
*	O
dst	*(char)
,	O
const	O
uint8_t	char
*	O
src	*(char)
)	O
{	O
if	O
(	O
!	O
length	long
)	O
return	O
;	O
assert	O
(	O
ctx	*(void)
->	O
data_size	long
%	O
CHACHA_POLY1305_BLOCK_SIZE	int
==	O
0	int
)	O
;	O
poly1305_pad	(*(struct(struct(array(int)),struct(union(array(int),array(long)),array(int),int,union(array(int),array(long))),union(array(char),array(long),array(long)),long,long,array(char),int)))->(void)
(	O
ctx	*(void)
)	O
;	O
chacha_crypt	O
(	O
&	O
ctx	*(void)
->	O
chacha	struct(array(int))
,	O
length	long
,	O
dst	*(char)
,	O
src	*(char)
)	O
;	O
poly1305_update	(*(struct(struct(array(int)),struct(union(array(int),array(long)),array(int),int,union(array(int),array(long))),union(array(char),array(long),array(long)),long,long,array(char),int)),long,*(char))->(void)
(	O
ctx	*(void)
,	O
length	long
,	O
dst	*(char)
)	O
;	O
ctx	*(void)
->	O
data_size	long
+=	O
length	long
;	O
}	O
void	O
chacha_poly1305_decrypt	O
(	O
struct	O
chacha_poly1305_ctx	struct(struct(array(int)),struct(union(array(int),array(long)),array(int),int,union(array(int),array(long))),union(array(char),array(long),array(long)),long,long,array(char),int)
*	O
ctx	*(void)
,	O
size_t	long
length	long
,	O
uint8_t	char
*	O
dst	*(char)
,	O
const	O
uint8_t	char
*	O
src	*(char)
)	O
{	O
if	O
(	O
!	O
length	long
)	O
return	O
;	O
assert	O
(	O
ctx	*(void)
->	O
data_size	long
%	O
CHACHA_POLY1305_BLOCK_SIZE	int
==	O
0	int
)	O
;	O
poly1305_pad	(*(struct(struct(array(int)),struct(union(array(int),array(long)),array(int),int,union(array(int),array(long))),union(array(char),array(long),array(long)),long,long,array(char),int)))->(void)
(	O
ctx	*(void)
)	O
;	O
poly1305_update	(*(struct(struct(array(int)),struct(union(array(int),array(long)),array(int),int,union(array(int),array(long))),union(array(char),array(long),array(long)),long,long,array(char),int)),long,*(char))->(void)
(	O
ctx	*(void)
,	O
length	long
,	O
src	*(char)
)	O
;	O
chacha_crypt	O
(	O
&	O
ctx	*(void)
->	O
chacha	struct(array(int))
,	O
length	long
,	O
dst	*(char)
,	O
src	*(char)
)	O
;	O
ctx	*(void)
->	O
data_size	long
+=	O
length	long
;	O
}	O
void	O
chacha_poly1305_digest	O
(	O
struct	O
chacha_poly1305_ctx	struct(struct(array(int)),struct(union(array(int),array(long)),array(int),int,union(array(int),array(long))),union(array(char),array(long),array(long)),long,long,array(char),int)
*	O
ctx	*(void)
,	O
size_t	long
length	long
,	O
uint8_t	char
*	O
digest	*(char)
)	O
{	O
uint8_t	char
buf	array(char)
[	O
16	int
]	O
;	O
poly1305_pad	(*(struct(struct(array(int)),struct(union(array(int),array(long)),array(int),int,union(array(int),array(long))),union(array(char),array(long),array(long)),long,long,array(char),int)))->(void)
(	O
ctx	*(void)
)	O
;	O
LE_WRITE_UINT64	O
(	O
buf	array(char)
,	O
ctx	*(void)
->	O
auth_size	long
)	O
;	O
LE_WRITE_UINT64	O
(	O
buf	array(char)
+	O
8	int
,	O
ctx	*(void)
->	O
data_size	long
)	O
;	O
_poly1305_block	O
(	O
&	O
ctx	*(void)
->	O
poly1305	struct(union(array(int),array(long)),array(int),int,union(array(int),array(long)))
,	O
buf	array(char)
,	O
1	int
)	O
;	O
poly1305_digest	O
(	O
&	O
ctx	*(void)
->	O
poly1305	struct(union(array(int),array(long)),array(int),int,union(array(int),array(long)))
,	O
&	O
ctx	*(void)
->	O
s	*(union(array(char),array(long),array(long)))
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
digest	*(char)
,	O
&	O
ctx	*(void)
->	O
s	*(union(array(char),array(long),array(long)))
.	O
b	array(char)
,	O
length	long
)	O
;	O
}	O
