static	O
char	O
*	O
dos_name2	(*(char))->(*(char))
(	O
const	O
char	O
*	O
name	*(char)
)	O
;	O
int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
int	O
i	int
;	O
const	O
char	O
*	O
name	*(char)
;	O
char	O
*	O
new_name	*(char)
;	O
if	O
(	O
argc	int
>=	O
2	int
&&	O
strcmp	(*(char),*(char))->(int)
(	O
argv	*(*(char))
[	O
1	int
]	O
,	O
"-V"	*(char)
)	O
==	O
0	int
)	O
{	O
printf	(*(char))->(int)
(	O
"Mtools version %s, dated %s\n"	*(char)
,	O
mversion	*(char)
,	O
mdate	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
if	O
(	O
argc	int
==	O
1	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Usage: mkmanifest [-V] <list-of-files>\n"	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
argc	int
;	O
i	int
++	O
)	O
{	O
name	*(char)
=	O
_basename	(*(char))->(*(char))
(	O
argv	*(*(char))
[	O
i	int
]	O
)	O
;	O
new_name	*(char)
=	O
dos_name2	(*(char))->(*(char))
(	O
name	*(char)
)	O
;	O
if	O
(	O
strcasecmp	(*(char),*(char))->(int)
(	O
new_name	*(char)
,	O
name	*(char)
)	O
)	O
printf	(*(char))->(int)
(	O
"mv %s %s\n"	*(char)
,	O
new_name	*(char)
,	O
name	*(char)
)	O
;	O
}	O
return	O
0	int
;	O
}	O
static	O
char	O
*	O
dos_name2	(*(char))->(*(char))
(	O
const	O
char	O
*	O
name	*(char)
)	O
{	O
static	O
const	O
char	O
*	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
[	O
9	int
]	O
=	O
{	O
"con"	*(char)
,	O
"aux"	*(char)
,	O
"com1"	*(char)
,	O
"com2"	*(char)
,	O
"lpt1"	*(char)
,	O
"prn"	*(char)
,	O
"lpt2"	*(char)
,	O
"lpt3"	*(char)
,	O
"nul"	*(char)
}	O
;	O
char	O
*	O
s	*(char)
;	O
char	O
*	O
ext	array(char)
,	O
*	O
temp	*(char)
;	O
char	O
buf	*(char)
[	O
MAX_PATH	int
]	O
;	O
int	O
i	int
,	O
dot	int
;	O
static	O
char	O
ans	*(char)
[	O
13	int
]	O
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
buf	*(char)
,	O
name	*(char)
,	O
MAX_PATH	int
-	O
1	int
)	O
;	O
temp	*(char)
=	O
buf	*(char)
;	O
ext	array(char)
=	O
0	int
;	O
dot	int
=	O
0	int
;	O
for	O
(	O
i	int
=	O
strlen	(*(char))->(long)
(	O
buf	*(char)
)	O
-	O
1	int
;	O
i	int
>=	O
0	int
;	O
i	int
--	O
)	O
{	O
if	O
(	O
buf	*(char)
[	O
i	int
]	O
==	O
'.'	O
&&	O
!	O
dot	int
)	O
{	O
dot	int
=	O
1	int
;	O
buf	*(char)
[	O
i	int
]	O
=	O
'\0'	O
;	O
ext	array(char)
=	O
&	O
buf	*(char)
[	O
i	int
+	O
1	int
]	O
;	O
}	O
if	O
(	O
isupper	(int)->(int)
(	O
(	O
unsigned	O
char	O
)	O
buf	*(char)
[	O
i	int
]	O
)	O
)	O
buf	*(char)
[	O
i	int
]	O
=	O
ch_tolower	(char)->(char)
(	O
buf	*(char)
[	O
i	int
]	O
)	O
;	O
}	O
if	O
(	O
*	O
temp	*(char)
==	O
'\0'	O
)	O
strcpy	(*(char),*(char))->(*(char))
(	O
ans	*(char)
,	O
"x"	*(char)
)	O
;	O
else	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
9	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
!	O
strcasecmp	(*(char),*(char))->(int)
(	O
temp	*(char)
,	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
[	O
i	int
]	O
)	O
)	O
*	O
temp	*(char)
=	O
'x'	O
;	O
}	O
if	O
(	O
strlen	(*(char))->(long)
(	O
temp	*(char)
)	O
>	O
8	int
)	O
*	O
(	O
temp	*(char)
+	O
8	int
)	O
=	O
'\0'	O
;	O
if	O
(	O
ext	array(char)
&&	O
strlen	(*(char))->(long)
(	O
ext	array(char)
)	O
>	O
3	int
)	O
*	O
(	O
ext	array(char)
+	O
3	int
)	O
=	O
'\0'	O
;	O
while	O
(	O
(	O
s	*(char)
=	O
strpbrk	(*(char),*(char))->(*(char))
(	O
temp	*(char)
,	O
"^+=/[]:',?*\\<>|\". "	*(char)
)	O
)	O
)	O
*	O
s	*(char)
=	O
'x'	O
;	O
while	O
(	O
ext	array(char)
&&	O
(	O
s	*(char)
=	O
strpbrk	(*(char),*(char))->(*(char))
(	O
ext	array(char)
,	O
"^+=/[]:',?*\\<>|\". "	*(char)
)	O
)	O
)	O
*	O
s	*(char)
=	O
'x'	O
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
ans	*(char)
,	O
temp	*(char)
,	O
12	int
)	O
;	O
ans	*(char)
[	O
12	int
]	O
=	O
'\0'	O
;	O
}	O
if	O
(	O
ext	array(char)
&&	O
*	O
ext	array(char)
)	O
{	O
strcat	(*(char),*(char))->(*(char))
(	O
ans	*(char)
,	O
"."	*(char)
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
ans	*(char)
,	O
ext	array(char)
)	O
;	O
}	O
return	O
(	O
ans	*(char)
)	O
;	O
}	O
