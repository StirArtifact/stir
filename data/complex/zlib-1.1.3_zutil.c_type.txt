struct	O
internal_state	struct(int)
{	O
int	O
dummy	int
;	O
}	O
;	O
const	O
char	O
*	O
z_errmsg	array(*(char))
[	O
10	int
]	O
=	O
{	O
"need dictionary"	*(char)
,	O
"stream end"	*(char)
,	O
""	*(char)
,	O
"file error"	*(char)
,	O
"stream error"	*(char)
,	O
"data error"	*(char)
,	O
"insufficient memory"	*(char)
,	O
"buffer error"	*(char)
,	O
"incompatible version"	*(char)
,	O
""	*(char)
}	O
;	O
const	O
char	O
*	O
ZEXPORT	O
zlibVersion	()->(*(char))
(	O
)	O
{	O
return	O
ZLIB_VERSION	*(char)
;	O
}	O
const	O
char	O
*	O
ZEXPORT	O
zError	(int)->(*(char))
(	O
err	int
)	O
int	O
err	int
;	O
{	O
return	O
ERR_MSG	O
(	O
err	int
)	O
;	O
}	O
voidpf	*(void)
zcalloc	(*(void),int,int)->(*(void))
(	O
opaque	*(void)
,	O
items	int
,	O
size	int
)	O
voidpf	*(void)
opaque	*(void)
;	O
unsigned	O
items	int
;	O
unsigned	O
size	int
;	O
{	O
if	O
(	O
opaque	*(void)
)	O
items	int
+=	O
size	int
-	O
size	int
;	O
return	O
(	O
voidpf	*(void)
)	O
calloc	(long,long)->(*(void))
(	O
items	int
,	O
size	int
)	O
;	O
}	O
void	O
zcfree	(*(void),*(void))->(void)
(	O
opaque	*(void)
,	O
ptr	*(void)
)	O
voidpf	*(void)
opaque	*(void)
;	O
voidpf	*(void)
ptr	*(void)
;	O
{	O
free	(*(void))->(void)
(	O
ptr	*(void)
)	O
;	O
if	O
(	O
opaque	*(void)
)	O
return	O
;	O
}	O
