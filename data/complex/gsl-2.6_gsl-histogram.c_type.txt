int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
double	O
a	double
=	O
0.0	int
,	O
b	double
=	O
1.0	int
;	O
size_t	long
n	long
=	O
10	int
;	O
if	O
(	O
argc	int
!=	O
3	int
&&	O
argc	int
!=	O
4	int
)	O
{	O
printf	(*(char))->(int)
(	O
"Usage: gsl-histogram xmin xmax [n]\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"Computes a histogram of the data on stdin using n bins from xmin to xmax.\n"	*(char)
"If n is unspecified then bins of integer width are used.\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
a	double
=	O
atof	(*(char))->(double)
(	O
argv	*(*(char))
[	O
1	int
]	O
)	O
;	O
b	double
=	O
atof	(*(char))->(double)
(	O
argv	*(*(char))
[	O
2	int
]	O
)	O
;	O
if	O
(	O
argc	int
==	O
4	int
)	O
{	O
n	long
=	O
atoi	(*(char))->(int)
(	O
argv	*(*(char))
[	O
3	int
]	O
)	O
;	O
}	O
else	O
{	O
n	long
=	O
(	O
int	O
)	O
(	O
b	double
-	O
a	double
)	O
;	O
}	O
{	O
double	O
x	double
;	O
gsl_histogram	struct(long,*(double),*(double))
*	O
h	*(struct(long,*(double),*(double)))
=	O
gsl_histogram_alloc	(long)->(*(struct(long,*(double),*(double))))
(	O
n	long
)	O
;	O
gsl_histogram_set_ranges_uniform	(*(struct(long,*(double),*(double))),double,double)->(int)
(	O
h	*(struct(long,*(double),*(double)))
,	O
a	double
,	O
b	double
)	O
;	O
while	O
(	O
fscanf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdin	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%lg"	*(char)
,	O
&	O
x	double
)	O
==	O
1	int
)	O
{	O
gsl_histogram_increment	(*(struct(long,*(double),*(double))),double)->(int)
(	O
h	*(struct(long,*(double),*(double)))
,	O
x	double
)	O
;	O
}	O
gsl_histogram_fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(long,*(double),*(double))),*(char),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
h	*(struct(long,*(double),*(double)))
,	O
"%g"	*(char)
,	O
"%g"	*(char)
)	O
;	O
gsl_histogram_free	(*(struct(long,*(double),*(double))))->(void)
(	O
h	*(struct(long,*(double),*(double)))
)	O
;	O
}	O
return	O
0	int
;	O
}	O
