static	O
int	O
is_status_response	(*(char))->(int)
(	O
const	O
char	O
*	O
word	*(char)
)	O
{	O
static	O
struct	O
mu_kwd	struct(*(char),int)
resptab	array(struct(*(char),int))
[	O
]	O
=	O
{	O
{	O
"OK"	*(char)
,	O
STATUS_RESPONSE	int
}	O
,	O
{	O
"NO"	*(char)
,	O
STATUS_RESPONSE	int
}	O
,	O
{	O
"BAD"	*(char)
,	O
STATUS_RESPONSE	int
}	O
,	O
{	O
"PREAUTH"	*(char)
,	O
STATUS_RESPONSE_UNTAGGED	int
}	O
,	O
{	O
"BYE"	*(char)
,	O
STATUS_RESPONSE_UNTAGGED	int
}	O
,	O
{	O
NULL	O
}	O
}	O
;	O
int	O
result	int
;	O
if	O
(	O
mu_kwd_xlat_name	(*(struct(*(char),int)),*(char),*(int))->(int)
(	O
resptab	array(struct(*(char),int))
,	O
word	*(char)
,	O
&	O
result	int
)	O
)	O
return	O
0	int
;	O
return	O
result	int
;	O
}	O
static	O
int	O
get_response_code	(*(struct(*(struct),*(char),long,long,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,int,int,int,int)))->(int)
(	O
struct	O
_mu_imapio	struct(*(struct),*(char),long,long,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,int,int,int,int)
*	O
io	*(struct)
)	O
{	O
size_t	long
end	long
=	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_endp	long
;	O
size_t	long
wc	long
=	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_wordc	long
;	O
int	O
rc	int
,	O
i	int
;	O
do	O
{	O
if	O
(	O
(	O
rc	int
=	O
mu_wordsplit	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
(	O
NULL	O
,	O
&	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
,	O
MU_WRDSF_INCREMENTAL	O
)	O
)	O
)	O
{	O
if	O
(	O
rc	int
==	O
MU_WRDSE_NOINPUT	O
)	O
break	O
;	O
return	O
MU_ERR_PARSE	O
;	O
}	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_wordv	*(*(char))
[	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_wordc	long
-	O
1	int
]	O
,	O
"["	*(char)
)	O
==	O
0	int
)	O
{	O
do	O
{	O
if	O
(	O
(	O
rc	int
=	O
mu_wordsplit	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
(	O
NULL	O
,	O
&	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
,	O
MU_WRDSF_INCREMENTAL	O
)	O
)	O
)	O
{	O
if	O
(	O
rc	int
==	O
MU_WRDSE_NOINPUT	O
)	O
break	O
;	O
return	O
MU_ERR_PARSE	O
;	O
}	O
}	O
while	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_wordv	*(*(char))
[	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_wordc	long
-	O
1	int
]	O
,	O
"]"	*(char)
)	O
)	O
;	O
if	O
(	O
rc	int
)	O
break	O
;	O
return	O
0	int
;	O
}	O
}	O
while	O
(	O
0	int
)	O
;	O
for	O
(	O
i	int
=	O
wc	long
;	O
i	int
<	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_wordc	long
;	O
i	int
++	O
)	O
free	(*(void))->(void)
(	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_wordv	*(*(char))
[	O
i	int
]	O
)	O
;	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_wordv	*(*(char))
[	O
wc	long
]	O
=	O
NULL	O
;	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_wordc	long
=	O
wc	long
;	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_endp	long
=	O
end	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
initial_parse	(*(struct(*(struct),*(char),long,long,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,int,int,int,int)))->(int)
(	O
struct	O
_mu_imapio	struct(*(struct),*(char),long,long,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,int,int,int,int)
*	O
io	*(struct)
)	O
{	O
int	O
rc	int
,	O
type	int
;	O
int	O
eat_rest	int
=	O
0	int
;	O
if	O
(	O
(	O
rc	int
=	O
mu_wordsplit_len	(*(char),long,*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)),int)->(int)
(	O
io	*(struct)
->	O
_imap_buf_base	*(char)
,	O
io	*(struct)
->	O
_imap_buf_level	long
,	O
&	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
,	O
io	*(struct)
->	O
_imap_ws_flags	int
|	O
(	O
io	*(struct)
->	O
_imap_server	int
?	O
0	int
:	O
MU_WRDSF_INCREMENTAL	O
)	O
)	O
)	O
)	O
{	O
if	O
(	O
rc	int
==	O
MU_WRDSE_NOINPUT	O
)	O
return	O
IMAPIO_OK	int
;	O
return	O
IMAPIO_ERR	int
;	O
}	O
io	*(struct)
->	O
_imap_ws_flags	int
|=	O
MU_WRDSF_REUSE	O
;	O
if	O
(	O
io	*(struct)
->	O
_imap_server	int
)	O
return	O
IMAPIO_OK	int
;	O
if	O
(	O
(	O
rc	int
=	O
mu_wordsplit	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
(	O
NULL	O
,	O
&	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
,	O
MU_WRDSF_INCREMENTAL	O
)	O
)	O
)	O
{	O
if	O
(	O
rc	int
==	O
MU_WRDSE_NOINPUT	O
)	O
return	O
IMAPIO_OK	int
;	O
return	O
IMAPIO_ERR	int
;	O
}	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_wordv	*(*(char))
[	O
0	int
]	O
,	O
"+"	*(char)
)	O
==	O
0	int
)	O
eat_rest	int
=	O
1	int
;	O
else	O
if	O
(	O
(	O
type	int
=	O
is_status_response	(*(char))->(int)
(	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_wordv	*(*(char))
[	O
1	int
]	O
)	O
)	O
&&	O
(	O
type	int
==	O
STATUS_RESPONSE	int
||	O
strcmp	(*(char),*(char))->(int)
(	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_wordv	*(*(char))
[	O
0	int
]	O
,	O
"*"	*(char)
)	O
==	O
0	int
)	O
)	O
{	O
rc	int
=	O
get_response_code	(*(struct(*(struct),*(char),long,long,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,int,int,int,int)))->(int)
(	O
io	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
IMAPIO_ERR	int
;	O
eat_rest	int
=	O
1	int
;	O
}	O
if	O
(	O
eat_rest	int
)	O
{	O
while	O
(	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_endp	long
<	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_len	long
&&	O
mu_isblank	O
(	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_input	*(char)
[	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_endp	long
]	O
)	O
)	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_endp	long
++	O
;	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_flags	int
|=	O
MU_WRDSF_NOSPLIT	O
;	O
rc	int
=	O
mu_wordsplit	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
(	O
NULL	O
,	O
&	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
,	O
MU_WRDSF_INCREMENTAL	O
)	O
;	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_flags	int
&=	O
~	O
MU_WRDSF_NOSPLIT	O
;	O
if	O
(	O
rc	int
)	O
{	O
if	O
(	O
rc	int
!=	O
MU_WRDSE_NOINPUT	O
)	O
return	O
IMAPIO_ERR	int
;	O
}	O
return	O
IMAPIO_RESP	int
;	O
}	O
return	O
IMAPIO_OK	int
;	O
}	O
int	O
mu_imapio_getline	(*(struct))->(int)
(	O
struct	O
_mu_imapio	struct(*(struct),*(char),long,long,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,int,int,int,int)
*	O
io	*(struct)
)	O
{	O
int	O
rc	int
;	O
char	O
*	O
last_arg	*(char)
;	O
int	O
xlev	int
=	O
MU_XSCRIPT_NORMAL	int
;	O
if	O
(	O
io	*(struct)
->	O
_imap_reply_ready	int
)	O
{	O
mu_wordsplit_free_words	(*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)))->(void)
(	O
&	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
)	O
;	O
io	*(struct)
->	O
_imap_reply_ready	int
=	O
0	int
;	O
}	O
for	O
(	O
;	O
;	O
)	O
{	O
rc	int
=	O
mu_stream_getline	(*(struct),*(*(char)),*(long),*(long))->(int)
(	O
io	*(struct)
->	O
_imap_stream	*(struct)
,	O
&	O
io	*(struct)
->	O
_imap_buf_base	*(char)
,	O
&	O
io	*(struct)
->	O
_imap_buf_size	long
,	O
&	O
io	*(struct)
->	O
_imap_buf_level	long
)	O
;	O
if	O
(	O
rc	int
)	O
break	O
;	O
if	O
(	O
io	*(struct)
->	O
_imap_buf_level	long
==	O
0	int
)	O
break	O
;	O
io	*(struct)
->	O
_imap_buf_level	long
=	O
mu_rtrim_class	(*(char),int)->(long)
(	O
io	*(struct)
->	O
_imap_buf_base	*(char)
,	O
MU_CTYPE_ENDLN	int
)	O
;	O
rc	int
=	O
initial_parse	(*(struct(*(struct),*(char),long,long,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,int,int,int,int)))->(int)
(	O
io	*(struct)
)	O
;	O
if	O
(	O
rc	int
==	O
IMAPIO_ERR	int
)	O
{	O
rc	int
=	O
MU_ERR_PARSE	O
;	O
break	O
;	O
}	O
else	O
if	O
(	O
rc	int
==	O
IMAPIO_RESP	int
)	O
{	O
rc	int
=	O
0	int
;	O
break	O
;	O
}	O
rc	int
=	O
mu_wordsplit_len	(*(char),long,*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)),int)->(int)
(	O
io	*(struct)
->	O
_imap_buf_base	*(char)
+	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_endp	long
,	O
io	*(struct)
->	O
_imap_buf_level	long
-	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_endp	long
,	O
&	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
,	O
io	*(struct)
->	O
_imap_ws_flags	int
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
rc	int
=	O
MU_ERR_PARSE	O
;	O
break	O
;	O
}	O
if	O
(	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_wordc	long
==	O
0	int
)	O
break	O
;	O
last_arg	*(char)
=	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_wordv	*(*(char))
[	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_wordc	long
-	O
1	int
]	O
;	O
if	O
(	O
last_arg	*(char)
[	O
0	int
]	O
==	O
'{'	O
&&	O
last_arg	*(char)
[	O
strlen	(*(char))->(long)
(	O
last_arg	*(char)
)	O
-	O
1	int
]	O
==	O
'}'	O
)	O
{	O
int	O
rc	int
;	O
unsigned	O
long	O
number	long
;	O
char	O
*	O
sp	*(char)
=	O
NULL	O
;	O
if	O
(	O
!	O
io	*(struct)
->	O
_imap_trace_payload	int
)	O
xlev	int
=	O
mu_imapio_set_xscript_level	(*(struct),int)->(int)
(	O
io	*(struct)
,	O
MU_XSCRIPT_PAYLOAD	int
)	O
;	O
number	long
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
last_arg	*(char)
+	O
1	int
,	O
&	O
sp	*(char)
,	O
10	int
)	O
;	O
if	O
(	O
*	O
sp	*(char)
==	O
'}'	O
)	O
{	O
if	O
(	O
io	*(struct)
->	O
_imap_server	int
)	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
io	*(struct)
->	O
_imap_stream	*(struct)
,	O
"+ GO AHEAD\n"	*(char)
)	O
;	O
}	O
else	O
if	O
(	O
*	O
sp	*(char)
!=	O
'+'	O
)	O
break	O
;	O
if	O
(	O
number	long
+	O
1	int
>	O
io	*(struct)
->	O
_imap_buf_size	long
)	O
{	O
size_t	long
newsize	long
=	O
number	long
+	O
1	int
;	O
void	O
*	O
newp	*(void)
=	O
realloc	(*(void),long)->(*(void))
(	O
io	*(struct)
->	O
_imap_buf_base	*(char)
,	O
newsize	long
)	O
;	O
if	O
(	O
!	O
newp	*(void)
)	O
{	O
rc	int
=	O
ENOMEM	int
;	O
break	O
;	O
}	O
io	*(struct)
->	O
_imap_buf_base	*(char)
=	O
newp	*(void)
;	O
io	*(struct)
->	O
_imap_buf_size	long
=	O
newsize	long
;	O
}	O
for	O
(	O
io	*(struct)
->	O
_imap_buf_level	long
=	O
0	int
;	O
io	*(struct)
->	O
_imap_buf_level	long
<	O
number	long
;	O
)	O
{	O
size_t	long
sz	long
;	O
rc	int
=	O
mu_stream_read	(*(struct),*(void),long,*(long))->(int)
(	O
io	*(struct)
->	O
_imap_stream	*(struct)
,	O
io	*(struct)
->	O
_imap_buf_base	*(char)
+	O
io	*(struct)
->	O
_imap_buf_level	long
,	O
number	long
-	O
io	*(struct)
->	O
_imap_buf_level	long
,	O
&	O
sz	long
)	O
;	O
if	O
(	O
rc	int
||	O
sz	long
==	O
0	int
)	O
break	O
;	O
io	*(struct)
->	O
_imap_buf_level	long
+=	O
sz	long
;	O
}	O
mu_imapio_set_xscript_level	(*(struct),int)->(int)
(	O
io	*(struct)
,	O
xlev	int
)	O
;	O
if	O
(	O
rc	int
)	O
break	O
;	O
io	*(struct)
->	O
_imap_buf_base	*(char)
[	O
io	*(struct)
->	O
_imap_buf_level	long
++	O
]	O
=	O
0	int
;	O
free	(*(void))->(void)
(	O
last_arg	*(char)
)	O
;	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_wordv	*(*(char))
[	O
--	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_wordc	long
]	O
=	O
NULL	O
;	O
if	O
(	O
mu_wordsplit_len	(*(char),long,*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)),int)->(int)
(	O
io	*(struct)
->	O
_imap_buf_base	*(char)
,	O
io	*(struct)
->	O
_imap_buf_level	long
,	O
&	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
,	O
io	*(struct)
->	O
_imap_ws_flags	int
|	O
MU_WRDSF_NOSPLIT	O
)	O
)	O
{	O
rc	int
=	O
MU_ERR_PARSE	O
;	O
break	O
;	O
}	O
}	O
else	O
break	O
;	O
}	O
if	O
(	O
!	O
io	*(struct)
->	O
_imap_trace_payload	int
)	O
mu_imapio_set_xscript_level	(*(struct),int)->(int)
(	O
io	*(struct)
,	O
xlev	int
)	O
;	O
io	*(struct)
->	O
_imap_reply_ready	int
=	O
1	int
;	O
return	O
rc	int
;	O
}	O
