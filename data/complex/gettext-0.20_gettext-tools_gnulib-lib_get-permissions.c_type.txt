int	O
get_permissions	(*(char),int,int,*(struct(int,*(struct),*(struct),bool)))->(int)
(	O
const	O
char	O
*	O
name	*(char)
,	O
int	O
desc	int
,	O
mode_t	int
mode	int
,	O
struct	O
permission_context	struct(int,*(struct),*(struct),bool)
*	O
ctx	*(struct(int,*(struct),*(struct),bool))
)	O
{	O
memset	(*(void),int,long)->(*(void))
(	O
ctx	*(struct(int,*(struct),*(struct),bool))
,	O
0	int
,	O
sizeof	O
*	O
ctx	*(struct(int,*(struct),*(struct),bool))
)	O
;	O
ctx	*(struct(int,*(struct),*(struct),bool))
->	O
mode	int
=	O
mode	int
;	O
if	O
(	O
HAVE_ACL_GET_FD	int
&&	O
desc	int
!=	O
-	O
1	int
)	O
ctx	*(struct(int,*(struct),*(struct),bool))
->	O
acl	*(struct)
=	O
acl_get_fd	(int)->(*(struct))
(	O
desc	int
)	O
;	O
else	O
ctx	*(struct(int,*(struct),*(struct),bool))
->	O
acl	*(struct)
=	O
acl_get_file	(*(char),int)->(*(struct))
(	O
name	*(char)
,	O
ACL_TYPE_ACCESS	O
)	O
;	O
if	O
(	O
ctx	*(struct(int,*(struct),*(struct),bool))
->	O
acl	*(struct)
==	O
NULL	O
)	O
return	O
acl_errno_valid	(int)->(bool)
(	O
errno	O
)	O
?	O
-	O
1	int
:	O
0	int
;	O
if	O
(	O
S_ISDIR	O
(	O
mode	int
)	O
)	O
{	O
ctx	*(struct(int,*(struct),*(struct),bool))
->	O
default_acl	*(struct)
=	O
acl_get_file	(*(char),int)->(*(struct))
(	O
name	*(char)
,	O
ACL_TYPE_DEFAULT	O
)	O
;	O
if	O
(	O
ctx	*(struct(int,*(struct),*(struct),bool))
->	O
default_acl	*(struct)
==	O
NULL	O
)	O
return	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
