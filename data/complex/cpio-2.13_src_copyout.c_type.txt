static	O
uint32_t	int
read_for_checksum	(int,int,*(char))->(int)
(	O
int	O
in_file_des	int
,	O
int	O
file_size	int
,	O
char	O
*	O
file_name	*(char)
)	O
{	O
uint32_t	int
crc	int
;	O
char	O
buf	*(char)
[	O
BUFSIZ	int
]	O
;	O
int	O
bytes_left	int
;	O
int	O
bytes_read	int
;	O
int	O
i	int
;	O
crc	int
=	O
0	int
;	O
for	O
(	O
bytes_left	int
=	O
file_size	int
;	O
bytes_left	int
>	O
0	int
;	O
bytes_left	int
-=	O
bytes_read	int
)	O
{	O
bytes_read	int
=	O
read	(int,*(void),long)->(long)
(	O
in_file_des	int
,	O
buf	*(char)
,	O
BUFSIZ	int
)	O
;	O
if	O
(	O
bytes_read	int
<	O
0	int
)	O
error	(int,int,*(char))->(void)
(	O
PAXEXIT_FAILURE	int
,	O
errno	O
,	O
_	O
(	O
"cannot read checksum for %s"	*(char)
)	O
,	O
file_name	*(char)
)	O
;	O
if	O
(	O
bytes_read	int
==	O
0	int
)	O
break	O
;	O
if	O
(	O
bytes_left	int
<	O
bytes_read	int
)	O
bytes_read	int
=	O
bytes_left	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
bytes_read	int
;	O
++	O
i	int
)	O
crc	int
+=	O
buf	*(char)
[	O
i	int
]	O
&	O
0xff	int
;	O
}	O
if	O
(	O
lseek	(int,long,int)->(long)
(	O
in_file_des	int
,	O
0L	int
,	O
SEEK_SET	int
)	O
)	O
error	(int,int,*(char))->(void)
(	O
PAXEXIT_FAILURE	int
,	O
errno	O
,	O
_	O
(	O
"cannot read checksum for %s"	*(char)
)	O
,	O
file_name	*(char)
)	O
;	O
return	O
crc	int
;	O
}	O
static	O
void	O
tape_clear_rest_of_block	(int)->(void)
(	O
int	O
out_file_des	int
)	O
{	O
write_nuls_to_file	(long,int,*((*(char),int,long)->(void)))->(void)
(	O
io_block_size	int
-	O
output_size	long
,	O
out_file_des	int
,	O
tape_buffered_write	(*(char),int,long)->(void)
)	O
;	O
}	O
static	O
void	O
tape_pad_output	(int,int)->(void)
(	O
int	O
out_file_des	int
,	O
int	O
offset	long
)	O
{	O
size_t	long
pad	long
;	O
if	O
(	O
archive_format	enum(int,int,int,int,int,int,int,int,int)
==	O
arf_newascii	int
||	O
archive_format	enum(int,int,int,int,int,int,int,int,int)
==	O
arf_crcascii	int
)	O
pad	long
=	O
(	O
4	int
-	O
(	O
offset	long
%	O
4	int
)	O
)	O
%	O
4	int
;	O
else	O
if	O
(	O
archive_format	enum(int,int,int,int,int,int,int,int,int)
==	O
arf_tar	int
||	O
archive_format	enum(int,int,int,int,int,int,int,int,int)
==	O
arf_ustar	int
)	O
pad	long
=	O
(	O
512	int
-	O
(	O
offset	long
%	O
512	int
)	O
)	O
%	O
512	int
;	O
else	O
if	O
(	O
archive_format	enum(int,int,int,int,int,int,int,int,int)
!=	O
arf_oldascii	int
&&	O
archive_format	enum(int,int,int,int,int,int,int,int,int)
!=	O
arf_hpoldascii	int
)	O
pad	long
=	O
(	O
2	int
-	O
(	O
offset	long
%	O
2	int
)	O
)	O
%	O
2	int
;	O
else	O
pad	long
=	O
0	int
;	O
if	O
(	O
pad	long
!=	O
0	int
)	O
write_nuls_to_file	(long,int,*((*(char),int,long)->(void)))->(void)
(	O
pad	long
,	O
out_file_des	int
,	O
tape_buffered_write	(*(char),int,long)->(void)
)	O
;	O
}	O
struct	O
deferment	struct(*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
*	O
deferouts	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
=	O
NULL	O
;	O
static	O
size_t	long
count_defered_links_to_dev_ino	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))->(long)
(	O
struct	O
cpio_file_stat	struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))
*	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
)	O
{	O
struct	O
deferment	struct(*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
*	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
;	O
ino_t	long
ino	long
=	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_ino	short
;	O
long	O
maj	long
=	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_dev_maj	array(char)
;	O
long	O
min	long
=	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_dev_min	array(char)
;	O
size_t	long
count	int
=	O
0	int
;	O
for	O
(	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
=	O
deferouts	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
;	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
!=	O
NULL	O
;	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
=	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
->	O
next	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
)	O
{	O
if	O
(	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
->	O
header	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_ino	short
==	O
ino	long
&&	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
->	O
header	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_dev_maj	array(char)
==	O
maj	long
&&	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
->	O
header	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_dev_min	array(char)
==	O
min	long
)	O
++	O
count	int
;	O
}	O
return	O
count	int
;	O
}	O
static	O
int	O
last_link	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))->(int)
(	O
struct	O
cpio_file_stat	struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))
*	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
)	O
{	O
return	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_nlink	short
==	O
count_defered_links_to_dev_ino	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))->(long)
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
)	O
+	O
1	int
;	O
}	O
static	O
void	O
add_link_defer	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))->(void)
(	O
struct	O
cpio_file_stat	struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))
*	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
)	O
{	O
struct	O
deferment	struct(*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
*	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
;	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
=	O
create_deferment	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))->(*(struct(*(struct(*`,struct`)),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))))
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
)	O
;	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
->	O
next	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
=	O
deferouts	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
;	O
deferouts	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
=	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
;	O
}	O
static	O
void	O
writeout_other_defers	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),int)->(void)
(	O
struct	O
cpio_file_stat	struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))
*	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
int	O
out_des	int
)	O
{	O
struct	O
deferment	struct(*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
*	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
;	O
struct	O
deferment	struct(*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
*	O
d_prev	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
;	O
ino_t	long
ino	long
;	O
int	O
maj	long
;	O
int	O
min	long
;	O
ino	long
=	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_ino	short
;	O
maj	long
=	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_dev_maj	array(char)
;	O
min	long
=	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_dev_min	array(char)
;	O
d_prev	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
=	O
NULL	O
;	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
=	O
deferouts	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
;	O
while	O
(	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
!=	O
NULL	O
)	O
{	O
if	O
(	O
(	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
->	O
header	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_ino	short
==	O
ino	long
)	O
&&	O
(	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
->	O
header	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_dev_maj	array(char)
==	O
maj	long
)	O
&&	O
(	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
->	O
header	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_dev_min	array(char)
==	O
min	long
)	O
)	O
{	O
struct	O
deferment	struct(*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
*	O
d_free	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
;	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
->	O
header	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_filesize	array(char)
=	O
0	int
;	O
write_out_header	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),int)->(int)
(	O
&	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
->	O
header	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
out_des	int
)	O
;	O
if	O
(	O
d_prev	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
!=	O
NULL	O
)	O
d_prev	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
->	O
next	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
=	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
->	O
next	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
;	O
else	O
deferouts	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
=	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
->	O
next	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
;	O
d_free	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
=	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
;	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
=	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
->	O
next	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
;	O
free_deferment	(*(struct(*(struct(*`,struct`)),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))))->(void)
(	O
d_free	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
)	O
;	O
}	O
else	O
{	O
d_prev	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
=	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
;	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
=	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
->	O
next	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
;	O
}	O
}	O
return	O
;	O
}	O
static	O
void	O
writeout_defered_file	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),int)->(void)
(	O
struct	O
cpio_file_stat	struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))
*	O
header	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
int	O
out_file_des	int
)	O
{	O
int	O
in_file_des	int
;	O
struct	O
cpio_file_stat	struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
;	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
=	O
*	O
header	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
;	O
in_file_des	int
=	O
open	(*(char),int)->(int)
(	O
header	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
O_RDONLY	int
|	O
O_BINARY	int
,	O
0	int
)	O
;	O
if	O
(	O
in_file_des	int
<	O
0	int
)	O
{	O
open_error	(*(char))->(void)
(	O
header	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
)	O
;	O
return	O
;	O
}	O
if	O
(	O
archive_format	enum(int,int,int,int,int,int,int,int,int)
==	O
arf_crcascii	int
)	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_chksum	array(char)
=	O
read_for_checksum	(int,int,*(char))->(int)
(	O
in_file_des	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_filesize	array(char)
,	O
header	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
)	O
;	O
if	O
(	O
write_out_header	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),int)->(int)
(	O
&	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
out_file_des	int
)	O
)	O
return	O
;	O
copy_files_disk_to_tape	(int,int,long,*(char))->(void)
(	O
in_file_des	int
,	O
out_file_des	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_filesize	array(char)
,	O
header	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
)	O
;	O
warn_if_file_changed	(*(char),long,long)->(void)
(	O
header	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_filesize	array(char)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_mtime	array(char)
)	O
;	O
if	O
(	O
archive_format	enum(int,int,int,int,int,int,int,int,int)
==	O
arf_tar	int
||	O
archive_format	enum(int,int,int,int,int,int,int,int,int)
==	O
arf_ustar	int
)	O
add_inode	(long,*(char),long,long)->(*(struct))
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_ino	short
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_name	*(char)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_dev_maj	array(char)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_dev_min	array(char)
)	O
;	O
tape_pad_output	(int,int)->(void)
(	O
out_file_des	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_filesize	array(char)
)	O
;	O
if	O
(	O
reset_time_flag	int
)	O
set_file_times	(int,*(char),long,long)->(void)
(	O
in_file_des	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_name	*(char)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_mtime	array(char)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_mtime	array(char)
)	O
;	O
if	O
(	O
close	(int)->(int)
(	O
in_file_des	int
)	O
<	O
0	int
)	O
close_error	(*(char))->(void)
(	O
header	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
)	O
;	O
}	O
static	O
void	O
writeout_final_defers	(int)->(void)
(	O
int	O
out_des	int
)	O
{	O
struct	O
deferment	struct(*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
*	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
;	O
int	O
other_count	int
;	O
while	O
(	O
deferouts	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
!=	O
NULL	O
)	O
{	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
=	O
deferouts	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
;	O
other_count	int
=	O
count_defered_links_to_dev_ino	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))->(long)
(	O
&	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
->	O
header	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
)	O
;	O
if	O
(	O
other_count	int
==	O
1	int
)	O
{	O
writeout_defered_file	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),int)->(void)
(	O
&	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
->	O
header	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
out_des	int
)	O
;	O
}	O
else	O
{	O
struct	O
cpio_file_stat	struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
;	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
=	O
d	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
->	O
header	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
;	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_filesize	array(char)
=	O
0	int
;	O
write_out_header	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),int)->(int)
(	O
&	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
out_des	int
)	O
;	O
}	O
deferouts	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
=	O
deferouts	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
->	O
next	*(struct(*(struct(*(struct`),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*`,long,*`))),struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))
;	O
}	O
}	O
int	O
to_ascii	(*(char),long,long,int,bool)->(int)
(	O
char	O
*	O
where	*(char)
,	O
uintmax_t	long
v	long
,	O
size_t	long
digits	long
,	O
unsigned	O
logbase	int
,	O
bool	bool
nul	bool
)	O
{	O
static	O
char	O
codetab	array(char)
[	O
]	O
=	O
"0123456789ABCDEF"	*(char)
;	O
if	O
(	O
nul	bool
)	O
where	*(char)
[	O
--	O
digits	long
]	O
=	O
0	int
;	O
while	O
(	O
digits	long
>	O
0	int
)	O
{	O
where	*(char)
[	O
--	O
digits	long
]	O
=	O
codetab	array(char)
[	O
(	O
v	long
&	O
(	O
(	O
1	int
<<	O
logbase	int
)	O
-	O
1	int
)	O
)	O
]	O
;	O
v	long
>>=	O
logbase	int
;	O
}	O
return	O
v	long
!=	O
0	int
;	O
}	O
void	O
field_width_error	(*(char),*(char),long,long,bool)->(void)
(	O
const	O
char	O
*	O
filename	*(char)
,	O
const	O
char	O
*	O
fieldname	*(char)
,	O
uintmax_t	long
value	long
,	O
size_t	long
width	long
,	O
bool	bool
nul	bool
)	O
{	O
char	O
valbuf	array(char)
[	O
UINTMAX_STRSIZE_BOUND	O
+	O
1	int
]	O
;	O
char	O
maxbuf	array(char)
[	O
UINTMAX_STRSIZE_BOUND	O
+	O
1	int
]	O
;	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"%s: value %s %s out of allowed range 0..%s"	*(char)
)	O
,	O
filename	*(char)
,	O
fieldname	*(char)
,	O
STRINGIFY_BIGINT	O
(	O
value	long
,	O
valbuf	array(char)
)	O
,	O
STRINGIFY_BIGINT	O
(	O
MAX_VAL_WITH_DIGITS	O
(	O
width	long
-	O
nul	bool
,	O
LG_8	int
)	O
,	O
maxbuf	array(char)
)	O
)	O
;	O
}	O
static	O
void	O
field_width_warning	(*(char),*(char))->(void)
(	O
const	O
char	O
*	O
filename	*(char)
,	O
const	O
char	O
*	O
fieldname	*(char)
)	O
{	O
if	O
(	O
warn_option	int
&	O
CPIO_WARN_TRUNCATE	int
)	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"%s: truncating %s"	*(char)
)	O
,	O
filename	*(char)
,	O
fieldname	*(char)
)	O
;	O
}	O
void	O
to_ascii_or_warn	(*(char),long,long,int,*(char),*(char))->(void)
(	O
char	O
*	O
where	*(char)
,	O
uintmax_t	long
n	long
,	O
size_t	long
digits	long
,	O
unsigned	O
logbase	int
,	O
const	O
char	O
*	O
filename	*(char)
,	O
const	O
char	O
*	O
fieldname	*(char)
)	O
{	O
if	O
(	O
to_ascii	(*(char),long,long,int,bool)->(int)
(	O
where	*(char)
,	O
n	long
,	O
digits	long
,	O
logbase	int
,	O
false	int
)	O
)	O
field_width_warning	(*(char),*(char))->(void)
(	O
filename	*(char)
,	O
fieldname	*(char)
)	O
;	O
}	O
int	O
to_ascii_or_error	(*(char),long,long,int,*(char),*(char))->(int)
(	O
char	O
*	O
where	*(char)
,	O
uintmax_t	long
n	long
,	O
size_t	long
digits	long
,	O
unsigned	O
logbase	int
,	O
const	O
char	O
*	O
filename	*(char)
,	O
const	O
char	O
*	O
fieldname	*(char)
)	O
{	O
if	O
(	O
to_ascii	(*(char),long,long,int,bool)->(int)
(	O
where	*(char)
,	O
n	long
,	O
digits	long
,	O
logbase	int
,	O
false	int
)	O
)	O
{	O
field_width_error	(*(char),*(char),long,long,bool)->(void)
(	O
filename	*(char)
,	O
fieldname	*(char)
,	O
n	long
,	O
digits	long
,	O
false	int
)	O
;	O
return	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
int	O
write_out_new_ascii_header	(*(char),*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),int)->(int)
(	O
const	O
char	O
*	O
magic_string	*(char)
,	O
struct	O
cpio_file_stat	struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))
*	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
int	O
out_des	int
)	O
{	O
char	O
ascii_header	array(char)
[	O
110	int
]	O
;	O
char	O
*	O
p	*(void)
;	O
p	*(void)
=	O
stpcpy	(*(char),*(char))->(*(char))
(	O
ascii_header	array(char)
,	O
magic_string	*(char)
)	O
;	O
to_ascii_or_warn	(*(char),long,long,int,*(char),*(char))->(void)
(	O
p	*(void)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_ino	short
,	O
8	int
,	O
LG_16	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"inode number"	*(char)
)	O
)	O
;	O
p	*(void)
+=	O
8	int
;	O
to_ascii_or_warn	(*(char),long,long,int,*(char),*(char))->(void)
(	O
p	*(void)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_mode	short
,	O
8	int
,	O
LG_16	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"file mode"	*(char)
)	O
)	O
;	O
p	*(void)
+=	O
8	int
;	O
to_ascii_or_warn	(*(char),long,long,int,*(char),*(char))->(void)
(	O
p	*(void)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_uid	short
,	O
8	int
,	O
LG_16	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"uid"	*(char)
)	O
)	O
;	O
p	*(void)
+=	O
8	int
;	O
to_ascii_or_warn	(*(char),long,long,int,*(char),*(char))->(void)
(	O
p	*(void)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_gid	short
,	O
8	int
,	O
LG_16	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"gid"	*(char)
)	O
)	O
;	O
p	*(void)
+=	O
8	int
;	O
to_ascii_or_warn	(*(char),long,long,int,*(char),*(char))->(void)
(	O
p	*(void)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_nlink	short
,	O
8	int
,	O
LG_16	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"number of links"	*(char)
)	O
)	O
;	O
p	*(void)
+=	O
8	int
;	O
to_ascii_or_warn	(*(char),long,long,int,*(char),*(char))->(void)
(	O
p	*(void)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_mtime	array(char)
,	O
8	int
,	O
LG_16	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"modification time"	*(char)
)	O
)	O
;	O
p	*(void)
+=	O
8	int
;	O
if	O
(	O
to_ascii_or_error	(*(char),long,long,int,*(char),*(char))->(int)
(	O
p	*(void)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_filesize	array(char)
,	O
8	int
,	O
LG_16	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"file size"	*(char)
)	O
)	O
)	O
return	O
1	int
;	O
p	*(void)
+=	O
8	int
;	O
if	O
(	O
to_ascii_or_error	(*(char),long,long,int,*(char),*(char))->(int)
(	O
p	*(void)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_dev_maj	array(char)
,	O
8	int
,	O
LG_16	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"device major number"	*(char)
)	O
)	O
)	O
return	O
1	int
;	O
p	*(void)
+=	O
8	int
;	O
if	O
(	O
to_ascii_or_error	(*(char),long,long,int,*(char),*(char))->(int)
(	O
p	*(void)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_dev_min	array(char)
,	O
8	int
,	O
LG_16	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"device minor number"	*(char)
)	O
)	O
)	O
return	O
1	int
;	O
p	*(void)
+=	O
8	int
;	O
if	O
(	O
to_ascii_or_error	(*(char),long,long,int,*(char),*(char))->(int)
(	O
p	*(void)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_rdev_maj	array(char)
,	O
8	int
,	O
LG_16	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"rdev major"	*(char)
)	O
)	O
)	O
return	O
1	int
;	O
p	*(void)
+=	O
8	int
;	O
if	O
(	O
to_ascii_or_error	(*(char),long,long,int,*(char),*(char))->(int)
(	O
p	*(void)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_rdev_min	array(char)
,	O
8	int
,	O
LG_16	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"rdev minor"	*(char)
)	O
)	O
)	O
return	O
1	int
;	O
p	*(void)
+=	O
8	int
;	O
if	O
(	O
to_ascii_or_error	(*(char),long,long,int,*(char),*(char))->(int)
(	O
p	*(void)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_namesize	short
,	O
8	int
,	O
LG_16	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"name size"	*(char)
)	O
)	O
)	O
return	O
1	int
;	O
p	*(void)
+=	O
8	int
;	O
to_ascii	(*(char),long,long,int,bool)->(int)
(	O
p	*(void)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_chksum	array(char)
&	O
0xffffffff	int
,	O
8	int
,	O
LG_16	int
,	O
false	int
)	O
;	O
tape_buffered_write	(*(char),int,long)->(void)
(	O
ascii_header	array(char)
,	O
out_des	int
,	O
sizeof	O
ascii_header	array(char)
)	O
;	O
tape_buffered_write	(*(char),int,long)->(void)
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
out_des	int
,	O
(	O
long	O
)	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_namesize	short
)	O
;	O
tape_pad_output	(int,int)->(void)
(	O
out_des	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_namesize	short
+	O
sizeof	O
ascii_header	array(char)
)	O
;	O
return	O
0	int
;	O
}	O
int	O
write_out_old_ascii_header	(long,long,*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),int)->(int)
(	O
dev_t	long
dev	long
,	O
dev_t	long
rdev	long
,	O
struct	O
cpio_file_stat	struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))
*	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
int	O
out_des	int
)	O
{	O
char	O
ascii_header	array(char)
[	O
76	int
]	O
;	O
char	O
*	O
p	*(void)
=	O
ascii_header	array(char)
;	O
to_ascii	(*(char),long,long,int,bool)->(int)
(	O
p	*(void)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_magic	short
,	O
6	int
,	O
LG_8	int
,	O
false	int
)	O
;	O
p	*(void)
+=	O
6	int
;	O
to_ascii_or_warn	(*(char),long,long,int,*(char),*(char))->(void)
(	O
p	*(void)
,	O
dev	long
,	O
6	int
,	O
LG_8	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"device number"	*(char)
)	O
)	O
;	O
p	*(void)
+=	O
6	int
;	O
to_ascii_or_warn	(*(char),long,long,int,*(char),*(char))->(void)
(	O
p	*(void)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_ino	short
,	O
6	int
,	O
LG_8	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"inode number"	*(char)
)	O
)	O
;	O
p	*(void)
+=	O
6	int
;	O
to_ascii_or_warn	(*(char),long,long,int,*(char),*(char))->(void)
(	O
p	*(void)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_mode	short
,	O
6	int
,	O
LG_8	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"file mode"	*(char)
)	O
)	O
;	O
p	*(void)
+=	O
6	int
;	O
to_ascii_or_warn	(*(char),long,long,int,*(char),*(char))->(void)
(	O
p	*(void)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_uid	short
,	O
6	int
,	O
LG_8	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"uid"	*(char)
)	O
)	O
;	O
p	*(void)
+=	O
6	int
;	O
to_ascii_or_warn	(*(char),long,long,int,*(char),*(char))->(void)
(	O
p	*(void)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_gid	short
,	O
6	int
,	O
LG_8	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"gid"	*(char)
)	O
)	O
;	O
p	*(void)
+=	O
6	int
;	O
to_ascii_or_warn	(*(char),long,long,int,*(char),*(char))->(void)
(	O
p	*(void)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_nlink	short
,	O
6	int
,	O
LG_8	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"number of links"	*(char)
)	O
)	O
;	O
p	*(void)
+=	O
6	int
;	O
to_ascii_or_warn	(*(char),long,long,int,*(char),*(char))->(void)
(	O
p	*(void)
,	O
rdev	long
,	O
6	int
,	O
LG_8	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"rdev"	*(char)
)	O
)	O
;	O
p	*(void)
+=	O
6	int
;	O
to_ascii_or_warn	(*(char),long,long,int,*(char),*(char))->(void)
(	O
p	*(void)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_mtime	array(char)
,	O
11	int
,	O
LG_8	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"modification time"	*(char)
)	O
)	O
;	O
p	*(void)
+=	O
11	int
;	O
if	O
(	O
to_ascii_or_error	(*(char),long,long,int,*(char),*(char))->(int)
(	O
p	*(void)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_namesize	short
,	O
6	int
,	O
LG_8	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"name size"	*(char)
)	O
)	O
)	O
return	O
1	int
;	O
p	*(void)
+=	O
6	int
;	O
if	O
(	O
to_ascii_or_error	(*(char),long,long,int,*(char),*(char))->(int)
(	O
p	*(void)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_filesize	array(char)
,	O
11	int
,	O
LG_8	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"file size"	*(char)
)	O
)	O
)	O
return	O
1	int
;	O
tape_buffered_write	(*(char),int,long)->(void)
(	O
ascii_header	array(char)
,	O
out_des	int
,	O
sizeof	O
ascii_header	array(char)
)	O
;	O
tape_buffered_write	(*(char),int,long)->(void)
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
out_des	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_namesize	short
)	O
;	O
return	O
0	int
;	O
}	O
void	O
hp_compute_dev	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),*(long),*(long))->(void)
(	O
struct	O
cpio_file_stat	struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))
*	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
dev_t	long
*	O
pdev	*(long)
,	O
dev_t	long
*	O
prdev	*(long)
)	O
{	O
switch	O
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_mode	short
&	O
CP_IFMT	int
)	O
{	O
case	O
CP_IFCHR	int
:	O
case	O
CP_IFBLK	int
:	O
case	O
CP_IFSOCK	int
:	O
case	O
CP_IFIFO	int
:	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_filesize	array(char)
=	O
makedev	O
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_rdev_maj	array(char)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_rdev_min	array(char)
)	O
;	O
*	O
pdev	*(long)
=	O
*	O
prdev	*(long)
=	O
makedev	O
(	O
0	int
,	O
1	int
)	O
;	O
break	O
;	O
default	O
:	O
*	O
pdev	*(long)
=	O
makedev	O
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_dev_maj	array(char)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_dev_min	array(char)
)	O
;	O
*	O
prdev	*(long)
=	O
makedev	O
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_rdev_maj	array(char)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_rdev_min	array(char)
)	O
;	O
break	O
;	O
}	O
}	O
int	O
write_out_binary_header	(long,*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),int)->(int)
(	O
dev_t	long
rdev	long
,	O
struct	O
cpio_file_stat	struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))
*	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
int	O
out_des	int
)	O
{	O
struct	O
old_cpio_header	struct(short,short,short,short,short,short,short,short,array(short),short,array(short))
short_hdr	*(struct(short,short,short,short,short,short,short,short,array(short),short,array(short)))
;	O
short_hdr	*(struct(short,short,short,short,short,short,short,short,array(short),short,array(short)))
.	O
c_magic	short
=	O
070707	int
;	O
short_hdr	*(struct(short,short,short,short,short,short,short,short,array(short),short,array(short)))
.	O
c_dev	short
=	O
makedev	O
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_dev_maj	array(char)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_dev_min	array(char)
)	O
;	O
if	O
(	O
(	O
warn_option	int
&	O
CPIO_WARN_TRUNCATE	int
)	O
&&	O
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_ino	short
>>	O
16	int
)	O
!=	O
0	int
)	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"%s: truncating inode number"	*(char)
)	O
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
)	O
;	O
short_hdr	*(struct(short,short,short,short,short,short,short,short,array(short),short,array(short)))
.	O
c_ino	short
=	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_ino	short
&	O
0xFFFF	int
;	O
if	O
(	O
short_hdr	*(struct(short,short,short,short,short,short,short,short,array(short),short,array(short)))
.	O
c_ino	short
!=	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_ino	short
)	O
field_width_warning	(*(char),*(char))->(void)
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"inode number"	*(char)
)	O
)	O
;	O
short_hdr	*(struct(short,short,short,short,short,short,short,short,array(short),short,array(short)))
.	O
c_mode	short
=	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_mode	short
&	O
0xFFFF	int
;	O
if	O
(	O
short_hdr	*(struct(short,short,short,short,short,short,short,short,array(short),short,array(short)))
.	O
c_mode	short
!=	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_mode	short
)	O
field_width_warning	(*(char),*(char))->(void)
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"file mode"	*(char)
)	O
)	O
;	O
short_hdr	*(struct(short,short,short,short,short,short,short,short,array(short),short,array(short)))
.	O
c_uid	short
=	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_uid	short
&	O
0xFFFF	int
;	O
if	O
(	O
short_hdr	*(struct(short,short,short,short,short,short,short,short,array(short),short,array(short)))
.	O
c_uid	short
!=	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_uid	short
)	O
field_width_warning	(*(char),*(char))->(void)
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"uid"	*(char)
)	O
)	O
;	O
short_hdr	*(struct(short,short,short,short,short,short,short,short,array(short),short,array(short)))
.	O
c_gid	short
=	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_gid	short
&	O
0xFFFF	int
;	O
if	O
(	O
short_hdr	*(struct(short,short,short,short,short,short,short,short,array(short),short,array(short)))
.	O
c_gid	short
!=	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_gid	short
)	O
field_width_warning	(*(char),*(char))->(void)
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"gid"	*(char)
)	O
)	O
;	O
short_hdr	*(struct(short,short,short,short,short,short,short,short,array(short),short,array(short)))
.	O
c_nlink	short
=	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_nlink	short
&	O
0xFFFF	int
;	O
if	O
(	O
short_hdr	*(struct(short,short,short,short,short,short,short,short,array(short),short,array(short)))
.	O
c_nlink	short
!=	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_nlink	short
)	O
field_width_warning	(*(char),*(char))->(void)
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"number of links"	*(char)
)	O
)	O
;	O
short_hdr	*(struct(short,short,short,short,short,short,short,short,array(short),short,array(short)))
.	O
c_rdev	short
=	O
rdev	long
;	O
short_hdr	*(struct(short,short,short,short,short,short,short,short,array(short),short,array(short)))
.	O
c_mtimes	array(short)
[	O
0	int
]	O
=	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_mtime	array(char)
>>	O
16	int
;	O
short_hdr	*(struct(short,short,short,short,short,short,short,short,array(short),short,array(short)))
.	O
c_mtimes	array(short)
[	O
1	int
]	O
=	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_mtime	array(char)
&	O
0xFFFF	int
;	O
short_hdr	*(struct(short,short,short,short,short,short,short,short,array(short),short,array(short)))
.	O
c_namesize	short
=	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_namesize	short
&	O
0xFFFF	int
;	O
if	O
(	O
short_hdr	*(struct(short,short,short,short,short,short,short,short,array(short),short,array(short)))
.	O
c_namesize	short
!=	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_namesize	short
)	O
{	O
char	O
maxbuf	array(char)
[	O
UINTMAX_STRSIZE_BOUND	O
+	O
1	int
]	O
;	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"%s: value %s %s out of allowed range 0..%u"	*(char)
)	O
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"name size"	*(char)
)	O
,	O
STRINGIFY_BIGINT	O
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_namesize	short
,	O
maxbuf	array(char)
)	O
,	O
0xFFFFu	int
)	O
;	O
return	O
1	int
;	O
}	O
short_hdr	*(struct(short,short,short,short,short,short,short,short,array(short),short,array(short)))
.	O
c_filesizes	array(short)
[	O
0	int
]	O
=	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_filesize	array(char)
>>	O
16	int
;	O
short_hdr	*(struct(short,short,short,short,short,short,short,short,array(short),short,array(short)))
.	O
c_filesizes	array(short)
[	O
1	int
]	O
=	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_filesize	array(char)
&	O
0xFFFF	int
;	O
if	O
(	O
(	O
(	O
off_t	long
)	O
short_hdr	*(struct(short,short,short,short,short,short,short,short,array(short),short,array(short)))
.	O
c_filesizes	array(short)
[	O
0	int
]	O
<<	O
16	int
)	O
+	O
short_hdr	*(struct(short,short,short,short,short,short,short,short,array(short),short,array(short)))
.	O
c_filesizes	array(short)
[	O
1	int
]	O
!=	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_filesize	array(char)
)	O
{	O
char	O
maxbuf	array(char)
[	O
UINTMAX_STRSIZE_BOUND	O
+	O
1	int
]	O
;	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"%s: value %s %s out of allowed range 0..%lu"	*(char)
)	O
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
_	O
(	O
"file size"	*(char)
)	O
,	O
STRINGIFY_BIGINT	O
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_namesize	short
,	O
maxbuf	array(char)
)	O
,	O
0xFFFFFFFFlu	int
)	O
;	O
return	O
1	int
;	O
}	O
tape_buffered_write	(*(char),int,long)->(void)
(	O
(	O
char	O
*	O
)	O
&	O
short_hdr	*(struct(short,short,short,short,short,short,short,short,array(short),short,array(short)))
,	O
out_des	int
,	O
26	int
)	O
;	O
tape_buffered_write	(*(char),int,long)->(void)
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
,	O
out_des	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_namesize	short
)	O
;	O
tape_pad_output	(int,int)->(void)
(	O
out_des	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_namesize	short
+	O
26	int
)	O
;	O
return	O
0	int
;	O
}	O
int	O
write_out_header	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),int)->(int)
(	O
struct	O
cpio_file_stat	struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))
*	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
int	O
out_des	int
)	O
{	O
dev_t	long
dev	long
;	O
dev_t	long
rdev	long
;	O
switch	O
(	O
archive_format	enum(int,int,int,int,int,int,int,int,int)
)	O
{	O
case	O
arf_newascii	int
:	O
return	O
write_out_new_ascii_header	(*(char),*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),int)->(int)
(	O
"070701"	*(char)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
out_des	int
)	O
;	O
case	O
arf_crcascii	int
:	O
return	O
write_out_new_ascii_header	(*(char),*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),int)->(int)
(	O
"070702"	*(char)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
out_des	int
)	O
;	O
case	O
arf_oldascii	int
:	O
return	O
write_out_old_ascii_header	(long,long,*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),int)->(int)
(	O
makedev	O
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_dev_maj	array(char)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_dev_min	array(char)
)	O
,	O
makedev	O
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_rdev_maj	array(char)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_rdev_min	array(char)
)	O
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
out_des	int
)	O
;	O
case	O
arf_hpoldascii	int
:	O
hp_compute_dev	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),*(long),*(long))->(void)
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
&	O
dev	long
,	O
&	O
rdev	long
)	O
;	O
return	O
write_out_old_ascii_header	(long,long,*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),int)->(int)
(	O
dev	long
,	O
rdev	long
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
out_des	int
)	O
;	O
case	O
arf_tar	int
:	O
case	O
arf_ustar	int
:	O
if	O
(	O
is_tar_filename_too_long	(*(char))->(int)
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
)	O
)	O
{	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"%s: file name too long"	*(char)
)	O
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_name	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
return	O
write_out_tar_header	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),int)->(int)
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
out_des	int
)	O
;	O
case	O
arf_binary	int
:	O
return	O
write_out_binary_header	(long,*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),int)->(int)
(	O
makedev	O
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_rdev_maj	array(char)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
->	O
c_rdev_min	array(char)
)	O
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
out_des	int
)	O
;	O
case	O
arf_hpbinary	int
:	O
hp_compute_dev	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),*(long),*(long))->(void)
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
&	O
dev	long
,	O
&	O
rdev	long
)	O
;	O
return	O
write_out_binary_header	(long,*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),int)->(int)
(	O
rdev	long
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
out_des	int
)	O
;	O
default	O
:	O
abort	()->(void)
(	O
)	O
;	O
}	O
}	O
static	O
void	O
assign_string	(*(*(char)),*(char))->(void)
(	O
char	O
*	O
*	O
pvar	*(*(char))
,	O
char	O
*	O
value	long
)	O
{	O
char	O
*	O
p	*(void)
=	O
xrealloc	(*(void),long)->(*(void))
(	O
*	O
pvar	*(*(char))
,	O
strlen	(*(char))->(long)
(	O
value	long
)	O
+	O
1	int
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
p	*(void)
,	O
value	long
)	O
;	O
*	O
pvar	*(*(char))
=	O
p	*(void)
;	O
}	O
void	O
process_copy_out	()->(void)
(	O
)	O
{	O
dynamic_string	struct(int,*(char))
input_name	struct(int,*(char))
;	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
file_stat	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
;	O
struct	O
cpio_file_stat	struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
=	O
CPIO_FILE_STAT_INITIALIZER	O
;	O
int	O
in_file_des	int
;	O
int	O
out_file_des	int
;	O
char	O
*	O
orig_file_name	*(char)
=	O
NULL	O
;	O
ds_init	(*(struct(int,*(char))),int)->(void)
(	O
&	O
input_name	struct(int,*(char))
,	O
128	int
)	O
;	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_magic	short
=	O
070707	int
;	O
out_file_des	int
=	O
archive_des	int
;	O
if	O
(	O
_isrmt	O
(	O
out_file_des	int
)	O
)	O
{	O
output_is_special	char
=	O
1	int
;	O
output_is_seekable	char
=	O
0	int
;	O
}	O
else	O
{	O
if	O
(	O
fstat	(int,*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
out_file_des	int
,	O
&	O
file_stat	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
)	O
)	O
error	(int,int,*(char))->(void)
(	O
PAXEXIT_FAILURE	int
,	O
errno	O
,	O
_	O
(	O
"standard output is closed"	*(char)
)	O
)	O
;	O
output_is_special	char
=	O
S_ISBLK	O
(	O
file_stat	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
st_mode	int
)	O
||	O
S_ISCHR	O
(	O
file_stat	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
st_mode	int
)	O
;	O
output_is_seekable	char
=	O
S_ISREG	O
(	O
file_stat	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
st_mode	int
)	O
;	O
}	O
change_dir	()->(void)
(	O
)	O
;	O
if	O
(	O
append_flag	int
)	O
{	O
process_copy_in	()->(void)
(	O
)	O
;	O
prepare_append	(int)->(void)
(	O
out_file_des	int
)	O
;	O
}	O
while	O
(	O
ds_fgetstr	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,*(char))),char)->(*(char))
(	O
stdin	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
&	O
input_name	struct(int,*(char))
,	O
name_end	char
)	O
!=	O
NULL	O
)	O
{	O
if	O
(	O
input_name	struct(int,*(char))
.	O
ds_string	*(char)
[	O
0	int
]	O
==	O
0	int
)	O
{	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"blank line ignored"	*(char)
)	O
)	O
;	O
continue	O
;	O
}	O
if	O
(	O
(	O
*	O
xstat	*(()->(int))
)	O
(	O
input_name	struct(int,*(char))
.	O
ds_string	*(char)
,	O
&	O
file_stat	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
)	O
<	O
0	int
)	O
stat_error	(*(char))->(void)
(	O
input_name	struct(int,*(char))
.	O
ds_string	*(char)
)	O
;	O
else	O
{	O
stat_to_cpio	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(void)
(	O
&	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
&	O
file_stat	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
)	O
;	O
if	O
(	O
archive_format	enum(int,int,int,int,int,int,int,int,int)
==	O
arf_tar	int
||	O
archive_format	enum(int,int,int,int,int,int,int,int,int)
==	O
arf_ustar	int
)	O
{	O
if	O
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_mode	short
&	O
CP_IFDIR	int
)	O
{	O
int	O
len	long
=	O
strlen	(*(char))->(long)
(	O
input_name	struct(int,*(char))
.	O
ds_string	*(char)
)	O
;	O
if	O
(	O
input_name	struct(int,*(char))
.	O
ds_string	*(char)
[	O
len	long
-	O
1	int
]	O
!=	O
'/'	O
)	O
{	O
ds_resize	(*(struct(int,*(char))),int)->(void)
(	O
&	O
input_name	struct(int,*(char))
,	O
len	long
+	O
2	int
)	O
;	O
input_name	struct(int,*(char))
.	O
ds_string	*(char)
[	O
len	long
]	O
=	O
'/'	O
;	O
input_name	struct(int,*(char))
.	O
ds_string	*(char)
[	O
len	long
+	O
1	int
]	O
=	O
0	int
;	O
}	O
}	O
}	O
assign_string	(*(*(char)),*(char))->(void)
(	O
&	O
orig_file_name	*(char)
,	O
input_name	struct(int,*(char))
.	O
ds_string	*(char)
)	O
;	O
cpio_safer_name_suffix	(*(char),bool,bool,bool)->(void)
(	O
input_name	struct(int,*(char))
.	O
ds_string	*(char)
,	O
false	int
,	O
!	O
no_abs_paths_flag	int
,	O
true	int
)	O
;	O
cpio_set_c_name	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),*(char))->(void)
(	O
&	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
input_name	struct(int,*(char))
.	O
ds_string	*(char)
)	O
;	O
switch	O
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_mode	short
&	O
CP_IFMT	int
)	O
{	O
case	O
CP_IFREG	int
:	O
if	O
(	O
archive_format	enum(int,int,int,int,int,int,int,int,int)
==	O
arf_tar	int
||	O
archive_format	enum(int,int,int,int,int,int,int,int,int)
==	O
arf_ustar	int
)	O
{	O
char	O
*	O
otherfile	*(char)
;	O
if	O
(	O
(	O
otherfile	*(char)
=	O
find_inode_file	(long,long,long)->(*(char))
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_ino	short
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_dev_maj	array(char)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_dev_min	array(char)
)	O
)	O
)	O
{	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_tar_linkname	*(char)
=	O
otherfile	*(char)
;	O
if	O
(	O
write_out_header	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),int)->(int)
(	O
&	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
out_file_des	int
)	O
)	O
continue	O
;	O
break	O
;	O
}	O
}	O
if	O
(	O
(	O
archive_format	enum(int,int,int,int,int,int,int,int,int)
==	O
arf_newascii	int
||	O
archive_format	enum(int,int,int,int,int,int,int,int,int)
==	O
arf_crcascii	int
)	O
&&	O
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_nlink	short
>	O
1	int
)	O
)	O
{	O
if	O
(	O
last_link	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))->(int)
(	O
&	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
)	O
)	O
{	O
writeout_other_defers	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),int)->(void)
(	O
&	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
out_file_des	int
)	O
;	O
}	O
else	O
{	O
add_link_defer	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))->(void)
(	O
&	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
)	O
;	O
break	O
;	O
}	O
}	O
in_file_des	int
=	O
open	(*(char),int)->(int)
(	O
orig_file_name	*(char)
,	O
O_RDONLY	int
|	O
O_BINARY	int
,	O
0	int
)	O
;	O
if	O
(	O
in_file_des	int
<	O
0	int
)	O
{	O
open_error	(*(char))->(void)
(	O
orig_file_name	*(char)
)	O
;	O
continue	O
;	O
}	O
if	O
(	O
archive_format	enum(int,int,int,int,int,int,int,int,int)
==	O
arf_crcascii	int
)	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_chksum	array(char)
=	O
read_for_checksum	(int,int,*(char))->(int)
(	O
in_file_des	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_filesize	array(char)
,	O
orig_file_name	*(char)
)	O
;	O
if	O
(	O
write_out_header	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),int)->(int)
(	O
&	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
out_file_des	int
)	O
)	O
continue	O
;	O
copy_files_disk_to_tape	(int,int,long,*(char))->(void)
(	O
in_file_des	int
,	O
out_file_des	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_filesize	array(char)
,	O
orig_file_name	*(char)
)	O
;	O
warn_if_file_changed	(*(char),long,long)->(void)
(	O
orig_file_name	*(char)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_filesize	array(char)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_mtime	array(char)
)	O
;	O
if	O
(	O
archive_format	enum(int,int,int,int,int,int,int,int,int)
==	O
arf_tar	int
||	O
archive_format	enum(int,int,int,int,int,int,int,int,int)
==	O
arf_ustar	int
)	O
add_inode	(long,*(char),long,long)->(*(struct))
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_ino	short
,	O
orig_file_name	*(char)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_dev_maj	array(char)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_dev_min	array(char)
)	O
;	O
tape_pad_output	(int,int)->(void)
(	O
out_file_des	int
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_filesize	array(char)
)	O
;	O
if	O
(	O
reset_time_flag	int
)	O
set_file_times	(int,*(char),long,long)->(void)
(	O
in_file_des	int
,	O
orig_file_name	*(char)
,	O
file_stat	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
st_atime	O
,	O
file_stat	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
st_mtime	O
)	O
;	O
if	O
(	O
close	(int)->(int)
(	O
in_file_des	int
)	O
<	O
0	int
)	O
close_error	(*(char))->(void)
(	O
orig_file_name	*(char)
)	O
;	O
break	O
;	O
case	O
CP_IFDIR	int
:	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_filesize	array(char)
=	O
0	int
;	O
if	O
(	O
write_out_header	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),int)->(int)
(	O
&	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
out_file_des	int
)	O
)	O
continue	O
;	O
break	O
;	O
case	O
CP_IFCHR	int
:	O
case	O
CP_IFBLK	int
:	O
case	O
CP_IFSOCK	int
:	O
case	O
CP_IFIFO	int
:	O
if	O
(	O
archive_format	enum(int,int,int,int,int,int,int,int,int)
==	O
arf_tar	int
)	O
{	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"%s not dumped: not a regular file"	*(char)
)	O
,	O
orig_file_name	*(char)
)	O
;	O
continue	O
;	O
}	O
else	O
if	O
(	O
archive_format	enum(int,int,int,int,int,int,int,int,int)
==	O
arf_ustar	int
)	O
{	O
char	O
*	O
otherfile	*(char)
;	O
if	O
(	O
(	O
otherfile	*(char)
=	O
find_inode_file	(long,long,long)->(*(char))
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_ino	short
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_dev_maj	array(char)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_dev_min	array(char)
)	O
)	O
)	O
{	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_mode	short
=	O
(	O
file_stat	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
st_mode	int
&	O
07777	int
)	O
;	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_mode	short
|=	O
CP_IFREG	int
;	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_tar_linkname	*(char)
=	O
otherfile	*(char)
;	O
if	O
(	O
write_out_header	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),int)->(int)
(	O
&	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
out_file_des	int
)	O
)	O
continue	O
;	O
break	O
;	O
}	O
add_inode	(long,*(char),long,long)->(*(struct))
(	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_ino	short
,	O
orig_file_name	*(char)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_dev_maj	array(char)
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_dev_min	array(char)
)	O
;	O
}	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_filesize	array(char)
=	O
0	int
;	O
if	O
(	O
write_out_header	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),int)->(int)
(	O
&	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
out_file_des	int
)	O
)	O
continue	O
;	O
break	O
;	O
case	O
CP_IFLNK	int
:	O
{	O
char	O
*	O
link_name	*(char)
=	O
(	O
char	O
*	O
)	O
xmalloc	(long)->(*(void))
(	O
file_stat	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
st_size	long
+	O
1	int
)	O
;	O
int	O
link_size	int
;	O
link_size	int
=	O
readlink	(*(char),*(char),long)->(long)
(	O
orig_file_name	*(char)
,	O
link_name	*(char)
,	O
file_stat	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
st_size	long
)	O
;	O
if	O
(	O
link_size	int
<	O
0	int
)	O
{	O
readlink_warn	(*(char))->(void)
(	O
orig_file_name	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
link_name	*(char)
)	O
;	O
continue	O
;	O
}	O
link_name	*(char)
[	O
link_size	int
]	O
=	O
0	int
;	O
cpio_safer_name_suffix	(*(char),bool,bool,bool)->(void)
(	O
link_name	*(char)
,	O
false	int
,	O
!	O
no_abs_paths_flag	int
,	O
true	int
)	O
;	O
link_size	int
=	O
strlen	(*(char))->(long)
(	O
link_name	*(char)
)	O
;	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_filesize	array(char)
=	O
link_size	int
;	O
if	O
(	O
archive_format	enum(int,int,int,int,int,int,int,int,int)
==	O
arf_tar	int
||	O
archive_format	enum(int,int,int,int,int,int,int,int,int)
==	O
arf_ustar	int
)	O
{	O
if	O
(	O
link_size	int
+	O
1	int
>	O
100	int
)	O
{	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"%s: symbolic link too long"	*(char)
)	O
,	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_name	*(char)
)	O
;	O
}	O
else	O
{	O
link_name	*(char)
[	O
link_size	int
]	O
=	O
'\0'	O
;	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_tar_linkname	*(char)
=	O
link_name	*(char)
;	O
if	O
(	O
write_out_header	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),int)->(int)
(	O
&	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
out_file_des	int
)	O
)	O
continue	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
write_out_header	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),int)->(int)
(	O
&	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
out_file_des	int
)	O
)	O
continue	O
;	O
tape_buffered_write	(*(char),int,long)->(void)
(	O
link_name	*(char)
,	O
out_file_des	int
,	O
link_size	int
)	O
;	O
tape_pad_output	(int,int)->(void)
(	O
out_file_des	int
,	O
link_size	int
)	O
;	O
}	O
free	(*(void))->(void)
(	O
link_name	*(char)
)	O
;	O
}	O
break	O
;	O
default	O
:	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"%s: unknown file type"	*(char)
)	O
,	O
orig_file_name	*(char)
)	O
;	O
}	O
if	O
(	O
verbose_flag	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s\n"	*(char)
,	O
orig_file_name	*(char)
)	O
;	O
if	O
(	O
dot_flag	int
)	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'.'	O
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
}	O
free	(*(void))->(void)
(	O
orig_file_name	*(char)
)	O
;	O
writeout_final_defers	(int)->(void)
(	O
out_file_des	int
)	O
;	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_ino	short
=	O
0	int
;	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_mode	short
=	O
0	int
;	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_uid	short
=	O
0	int
;	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_gid	short
=	O
0	int
;	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_nlink	short
=	O
1	int
;	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_dev_maj	array(char)
=	O
0	int
;	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_dev_min	array(char)
=	O
0	int
;	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_rdev_maj	array(char)
=	O
0	int
;	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_rdev_min	array(char)
=	O
0	int
;	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_mtime	array(char)
=	O
0	int
;	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_chksum	array(char)
=	O
0	int
;	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
.	O
c_filesize	array(char)
=	O
0	int
;	O
cpio_set_c_name	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),*(char))->(void)
(	O
&	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
CPIO_TRAILER_NAME	*(char)
)	O
;	O
if	O
(	O
archive_format	enum(int,int,int,int,int,int,int,int,int)
!=	O
arf_tar	int
&&	O
archive_format	enum(int,int,int,int,int,int,int,int,int)
!=	O
arf_ustar	int
)	O
write_out_header	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))),int)->(int)
(	O
&	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
,	O
out_file_des	int
)	O
;	O
else	O
write_nuls_to_file	(long,int,*((*(char),int,long)->(void)))->(void)
(	O
1024	int
,	O
out_file_des	int
,	O
tape_buffered_write	(*(char),int,long)->(void)
)	O
;	O
tape_clear_rest_of_block	(int)->(void)
(	O
out_file_des	int
)	O
;	O
tape_empty_output_buffer	(int)->(void)
(	O
out_file_des	int
)	O
;	O
if	O
(	O
dot_flag	int
)	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\n'	O
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
!	O
quiet_flag	int
)	O
{	O
size_t	long
blocks	long
=	O
(	O
output_bytes	long
+	O
io_block_size	int
-	O
1	int
)	O
/	O
io_block_size	int
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
ngettext	(*(char),*(char),long)->(*(char))
(	O
"%lu block\n"	*(char)
,	O
"%lu blocks\n"	*(char)
,	O
(	O
unsigned	O
long	O
)	O
blocks	long
)	O
,	O
(	O
unsigned	O
long	O
)	O
blocks	long
)	O
;	O
}	O
cpio_file_stat_free	(*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char))))->(void)
(	O
&	O
file_hdr	*(struct(short,long,int,int,int,long,long,long,long,long,long,long,long,int,*(char),long,*(char)))
)	O
;	O
}	O
