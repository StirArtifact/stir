int	O
mu_stdstream_strerr_create	(*(*(struct)),int,int,int,*(char),*(char))->(int)
(	O
mu_stream_t	*(struct)
*	O
plogger	*(*(struct))
,	O
int	O
type	int
,	O
int	O
facility	int
,	O
int	O
priority	int
,	O
const	O
char	O
*	O
tag	*(char)
,	O
const	O
char	O
*	O
fname	*(char)
MU_ARG_UNUSED	O
)	O
{	O
int	O
rc	int
;	O
mu_stream_t	*(struct)
transport	*(struct)
;	O
switch	O
(	O
type	int
)	O
{	O
case	O
MU_STRERR_STDERR	int
:	O
{	O
int	O
yes	int
=	O
1	int
;	O
mu_stream_t	*(struct)
str	*(struct(int,*(char),*(char),*(char),*(char)))
;	O
rc	int
=	O
mu_stdio_stream_create	(*(*(struct)),int,int)->(int)
(	O
&	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
MU_STDERR_FD	int
,	O
0	int
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s: cannot open error stream: %s\n"	*(char)
)	O
,	O
tag	*(char)
?	O
tag	*(char)
:	O
"<unknown>"	*(char)
,	O
mu_strerror	(int)->(*(char))
(	O
rc	int
)	O
)	O
;	O
return	O
MU_ERR_FAILURE	O
;	O
}	O
mu_stream_ioctl	(*(struct),int,int,*(void))->(int)
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
MU_IOCTL_FD	int
,	O
MU_IOCTL_FD_SET_BORROW	int
,	O
&	O
yes	int
)	O
;	O
if	O
(	O
!	O
tag	*(char)
)	O
transport	*(struct)
=	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
;	O
else	O
{	O
char	O
*	O
fltargs	array(*(char))
[	O
3	int
]	O
=	O
{	O
"INLINE-COMMENT"	*(char)
,	O
}	O
;	O
mu_asprintf	(*(*(char)),*(char))->(int)
(	O
&	O
fltargs	array(*(char))
[	O
1	int
]	O
,	O
"%s: "	*(char)
,	O
tag	*(char)
)	O
;	O
fltargs	array(*(char))
[	O
2	int
]	O
=	O
NULL	O
;	O
rc	int
=	O
mu_filter_create_args	(*(*(struct)),*(struct),*(char),int,*(*(char)),int,int)->(int)
(	O
&	O
transport	*(struct)
,	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
"INLINE-COMMENT"	*(char)
,	O
2	int
,	O
(	O
const	O
char	O
*	O
*	O
)	O
fltargs	array(*(char))
,	O
MU_FILTER_ENCODE	int
,	O
MU_STREAM_WRITE	int
)	O
;	O
mu_stream_unref	(*(struct))->(void)
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
)	O
;	O
free	(*(void))->(void)
(	O
fltargs	array(*(char))
[	O
1	int
]	O
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s: cannot open output filter stream: %s"	*(char)
)	O
,	O
tag	*(char)
?	O
tag	*(char)
:	O
"<unknown>"	*(char)
,	O
mu_strerror	(int)->(*(char))
(	O
rc	int
)	O
)	O
;	O
return	O
MU_ERR_FAILURE	O
;	O
}	O
mu_stream_set_buffer	(*(struct),enum(int,int,int),long)->(int)
(	O
transport	*(struct)
,	O
mu_buffer_line	int
,	O
0	int
)	O
;	O
}	O
}	O
break	O
;	O
case	O
MU_STRERR_SYSLOG	int
:	O
openlog	(*(char),int,int)->(void)
(	O
tag	*(char)
,	O
LOG_PID	int
,	O
facility	int
)	O
;	O
rc	int
=	O
mu_syslog_stream_create	(*(*(struct)),int)->(int)
(	O
&	O
transport	*(struct)
,	O
priority	int
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s: cannot create syslog stream: %s\n"	*(char)
)	O
,	O
tag	*(char)
?	O
tag	*(char)
:	O
"<unknown>"	*(char)
,	O
mu_strerror	(int)->(*(char))
(	O
rc	int
)	O
)	O
;	O
return	O
MU_ERR_FAILURE	O
;	O
}	O
break	O
;	O
default	O
:	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s: cannot create error stream: %s\n"	*(char)
)	O
,	O
tag	*(char)
?	O
tag	*(char)
:	O
"<unknown>"	*(char)
,	O
mu_strerror	(int)->(*(char))
(	O
EINVAL	int
)	O
)	O
;	O
return	O
EINVAL	int
;	O
}	O
rc	int
=	O
mu_log_stream_create	(*(*(struct)),*(struct))->(int)
(	O
plogger	*(*(struct))
,	O
transport	*(struct)
)	O
;	O
mu_stream_unref	(*(struct))->(void)
(	O
transport	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s: cannot open logger stream: %s\n"	*(char)
)	O
,	O
tag	*(char)
?	O
tag	*(char)
:	O
"<unknown>"	*(char)
,	O
mu_strerror	(int)->(*(char))
(	O
rc	int
)	O
)	O
;	O
return	O
MU_ERR_FAILURE	O
;	O
}	O
return	O
0	int
;	O
}	O
int	O
mu_stdstream_strerr_setup	(int)->(int)
(	O
int	O
type	int
)	O
{	O
mu_stream_t	*(struct)
str	*(struct(int,*(char),*(char),*(char),*(char)))
;	O
if	O
(	O
mu_stdstream_strerr_create	(*(*(struct)),int,int,int,*(char),*(char))->(int)
(	O
&	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
type	int
,	O
mu_log_facility	int
,	O
LOG_ERR	int
,	O
MU_LOG_TAG	O
(	O
)	O
,	O
NULL	O
)	O
==	O
0	int
)	O
{	O
if	O
(	O
mu_log_print_severity	int
)	O
{	O
int	O
mode	int
=	O
MU_LOGMODE_SEVERITY	int
;	O
mu_stream_ioctl	(*(struct),int,int,*(void))->(int)
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
MU_IOCTL_LOGSTREAM	int
,	O
MU_IOCTL_LOGSTREAM_SET_MODE	int
,	O
&	O
mode	int
)	O
;	O
}	O
if	O
(	O
mu_log_severity_threshold	int
>	O
MU_LOG_DEBUG	int
)	O
mu_stream_ioctl	(*(struct),int,int,*(void))->(int)
(	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
,	O
MU_IOCTL_LOGSTREAM	int
,	O
MU_IOCTL_LOGSTREAM_SUPPRESS_SEVERITY	int
,	O
&	O
mu_log_severity_threshold	int
)	O
;	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
mu_strerr	*(struct)
)	O
;	O
mu_strerr	*(struct)
=	O
str	*(struct(int,*(char),*(char),*(char),*(char)))
;	O
}	O
return	O
0	int
;	O
}	O
