gss_OID_desc	struct(int,*(void))
GSS_C_NT_USER_NAME_static	struct(int,*(void))
=	O
{	O
10	int
,	O
(	O
void	O
*	O
)	O
"\x2a\x86\x48\x86\xf7\x12\x01\x02\x01\x01"	*(char)
}	O
;	O
gss_OID	*(struct(int,*(void)))
GSS_C_NT_USER_NAME	*(struct(int,*(void)))
=	O
&	O
GSS_C_NT_USER_NAME_static	struct(int,*(void))
;	O
gss_OID_desc	struct(int,*(void))
GSS_C_NT_MACHINE_UID_NAME_static	struct(int,*(void))
=	O
{	O
10	int
,	O
(	O
void	O
*	O
)	O
"\x2a\x86\x48\x86\xf7\x12\x01\x02\x01\x02"	*(char)
}	O
;	O
gss_OID	*(struct(int,*(void)))
GSS_C_NT_MACHINE_UID_NAME	*(struct(int,*(void)))
=	O
&	O
GSS_C_NT_MACHINE_UID_NAME_static	struct(int,*(void))
;	O
gss_OID_desc	struct(int,*(void))
GSS_C_NT_STRING_UID_NAME_static	struct(int,*(void))
=	O
{	O
10	int
,	O
(	O
void	O
*	O
)	O
"\x2a\x86\x48\x86\xf7\x12\x01\x02\x01\x03"	*(char)
}	O
;	O
gss_OID	*(struct(int,*(void)))
GSS_C_NT_STRING_UID_NAME	*(struct(int,*(void)))
=	O
&	O
GSS_C_NT_STRING_UID_NAME_static	struct(int,*(void))
;	O
gss_OID_desc	struct(int,*(void))
GSS_C_NT_HOSTBASED_SERVICE_X_static	struct(int,*(void))
=	O
{	O
6	int
,	O
(	O
void	O
*	O
)	O
"\x2b\x06\x01\x05\x06\x02"	*(char)
}	O
;	O
gss_OID	*(struct(int,*(void)))
GSS_C_NT_HOSTBASED_SERVICE_X	*(struct(int,*(void)))
=	O
&	O
GSS_C_NT_HOSTBASED_SERVICE_X_static	struct(int,*(void))
;	O
gss_OID_desc	struct(int,*(void))
GSS_C_NT_HOSTBASED_SERVICE_static	struct(int,*(void))
=	O
{	O
10	int
,	O
(	O
void	O
*	O
)	O
"\x2a\x86\x48\x86\xf7\x12\x01\x02\x01\x04"	*(char)
}	O
;	O
gss_OID	*(struct(int,*(void)))
GSS_C_NT_HOSTBASED_SERVICE	*(struct(int,*(void)))
=	O
&	O
GSS_C_NT_HOSTBASED_SERVICE_static	struct(int,*(void))
;	O
gss_OID_desc	struct(int,*(void))
GSS_C_NT_ANONYMOUS_static	struct(int,*(void))
=	O
{	O
6	int
,	O
(	O
void	O
*	O
)	O
"\x2b\x06\01\x05\x06\x03"	*(char)
}	O
;	O
gss_OID	*(struct(int,*(void)))
GSS_C_NT_ANONYMOUS	*(struct(int,*(void)))
=	O
&	O
GSS_C_NT_ANONYMOUS_static	struct(int,*(void))
;	O
gss_OID_desc	struct(int,*(void))
GSS_C_NT_EXPORT_NAME_static	struct(int,*(void))
=	O
{	O
6	int
,	O
(	O
void	O
*	O
)	O
"\x2b\x06\x01\x05\x06\x04"	*(char)
}	O
;	O
gss_OID	*(struct(int,*(void)))
GSS_C_NT_EXPORT_NAME	*(struct(int,*(void)))
=	O
&	O
GSS_C_NT_EXPORT_NAME_static	struct(int,*(void))
;	O
int	O
gss_oid_equal	(*(struct(int,*(void))),*(struct(int,*(void))))->(int)
(	O
gss_const_OID	*(struct(int,*(void)))
first_oid	*(struct(int,*(void)))
,	O
gss_const_OID	*(struct(int,*(void)))
second_oid	*(struct(int,*(void)))
)	O
{	O
return	O
first_oid	*(struct(int,*(void)))
&&	O
second_oid	*(struct(int,*(void)))
&&	O
first_oid	*(struct(int,*(void)))
->	O
length	int
==	O
second_oid	*(struct(int,*(void)))
->	O
length	int
&&	O
memcmp	(*(void),*(void),long)->(int)
(	O
first_oid	*(struct(int,*(void)))
->	O
elements	*(void)
,	O
second_oid	*(struct(int,*(void)))
->	O
elements	*(void)
,	O
second_oid	*(struct(int,*(void)))
->	O
length	int
)	O
==	O
0	int
;	O
}	O
