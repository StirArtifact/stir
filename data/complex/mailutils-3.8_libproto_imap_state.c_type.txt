const	O
char	O
*	O
_mu_imap_state_name	array(*(char))
[	O
]	O
=	O
{	O
N_	O
(	O
"initial"	*(char)
)	O
,	O
N_	O
(	O
"non-authenticated"	*(char)
)	O
,	O
N_	O
(	O
"authenticated"	*(char)
)	O
,	O
N_	O
(	O
"selected"	*(char)
)	O
,	O
N_	O
(	O
"logout"	*(char)
)	O
}	O
;	O
int	O
_mu_imap_state_count	int
=	O
MU_ARRAY_SIZE	O
(	O
_mu_imap_state_name	array(*(char))
)	O
;	O
int	O
mu_imap_session_state	enum(int,int,int,int)
(	O
mu_imap_t	*(struct)
imap	*(struct)
)	O
{	O
if	O
(	O
!	O
imap	*(struct)
)	O
return	O
-	O
1	int
;	O
return	O
imap	*(struct)
->	O
session_state	enum(int,int,int,int)
;	O
}	O
int	O
mu_imap_session_state_str	(int,*(*(char)))->(int)
(	O
int	O
state	int
,	O
const	O
char	O
*	O
*	O
pstr	*(*(char))
)	O
{	O
if	O
(	O
state	int
<	O
0	int
||	O
state	int
>=	O
_mu_imap_state_count	int
)	O
return	O
EINVAL	int
;	O
*	O
pstr	*(*(char))
=	O
gettext	(*(char))->(*(char))
(	O
_mu_imap_state_name	array(*(char))
[	O
state	int
]	O
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_imap_iserror	(*(struct))->(int)
(	O
mu_imap_t	*(struct)
imap	*(struct)
)	O
{	O
if	O
(	O
!	O
imap	*(struct)
)	O
return	O
-	O
1	int
;	O
return	O
imap	*(struct)
->	O
client_state	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
==	O
MU_IMAP_CLIENT_ERROR	int
;	O
}	O
void	O
mu_imap_clearerr	(*(struct))->(void)
(	O
mu_imap_t	*(struct)
imap	*(struct)
)	O
{	O
if	O
(	O
imap	*(struct)
)	O
{	O
imap	*(struct)
->	O
client_state	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
=	O
MU_IMAP_CLIENT_READY	int
;	O
if	O
(	O
imap	*(struct)
->	O
io	*(struct)
)	O
mu_imapio_clearerr	(*(struct))->(void)
(	O
imap	*(struct)
->	O
io	*(struct)
)	O
;	O
}	O
}	O
