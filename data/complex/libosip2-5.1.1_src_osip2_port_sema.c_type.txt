struct	O
osip_mutex	O
*	O
osip_mutex_init	()->(*(struct))
(	O
)	O
{	O
osip_mutex_t	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
*	O
mut	*(struct)
=	O
(	O
osip_mutex_t	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
*	O
)	O
osip_malloc	O
(	O
sizeof	O
(	O
osip_mutex_t	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
)	O
;	O
if	O
(	O
mut	*(struct)
==	O
NULL	O
)	O
return	O
NULL	O
;	O
pthread_mutex_init	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)),*(union(array(char),int)))->(int)
(	O
mut	*(struct)
,	O
NULL	O
)	O
;	O
return	O
(	O
struct	O
osip_mutex	O
*	O
)	O
mut	*(struct)
;	O
}	O
void	O
osip_mutex_destroy	(*(struct))->(void)
(	O
struct	O
osip_mutex	O
*	O
_mut	*(struct)
)	O
{	O
osip_mutex_t	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
*	O
mut	*(struct)
=	O
(	O
osip_mutex_t	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
*	O
)	O
_mut	*(struct)
;	O
if	O
(	O
mut	*(struct)
==	O
NULL	O
)	O
return	O
;	O
pthread_mutex_destroy	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
mut	*(struct)
)	O
;	O
osip_free	O
(	O
mut	*(struct)
)	O
;	O
}	O
int	O
osip_mutex_lock	(*(struct))->(int)
(	O
struct	O
osip_mutex	O
*	O
_mut	*(struct)
)	O
{	O
osip_mutex_t	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
*	O
mut	*(struct)
=	O
(	O
osip_mutex_t	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
*	O
)	O
_mut	*(struct)
;	O
if	O
(	O
mut	*(struct)
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
return	O
pthread_mutex_lock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
mut	*(struct)
)	O
;	O
}	O
int	O
osip_mutex_unlock	(*(struct))->(int)
(	O
struct	O
osip_mutex	O
*	O
_mut	*(struct)
)	O
{	O
osip_mutex_t	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
*	O
mut	*(struct)
=	O
(	O
osip_mutex_t	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
*	O
)	O
_mut	*(struct)
;	O
if	O
(	O
mut	*(struct)
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
return	O
pthread_mutex_unlock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
mut	*(struct)
)	O
;	O
}	O
struct	O
osip_sem	O
*	O
osip_sem_init	(int)->(*(struct))
(	O
unsigned	O
int	O
value	int
)	O
{	O
osip_sem_t	union(array(char),long)
*	O
sem	*(struct)
=	O
(	O
osip_sem_t	union(array(char),long)
*	O
)	O
osip_malloc	O
(	O
sizeof	O
(	O
osip_sem_t	union(array(char),long)
)	O
)	O
;	O
if	O
(	O
sem	*(struct)
==	O
NULL	O
)	O
return	O
NULL	O
;	O
if	O
(	O
sem_init	(*(union(array(char),long)),int,int)->(int)
(	O
sem	*(struct)
,	O
0	int
,	O
value	int
)	O
==	O
0	int
)	O
return	O
(	O
struct	O
osip_sem	O
*	O
)	O
sem	*(struct)
;	O
osip_free	O
(	O
sem	*(struct)
)	O
;	O
return	O
NULL	O
;	O
}	O
int	O
osip_sem_destroy	(*(struct))->(int)
(	O
struct	O
osip_sem	O
*	O
_sem	*(struct)
)	O
{	O
osip_sem_t	union(array(char),long)
*	O
sem	*(struct)
=	O
(	O
osip_sem_t	union(array(char),long)
*	O
)	O
_sem	*(struct)
;	O
if	O
(	O
sem	*(struct)
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
sem_destroy	(*(union(array(char),long)))->(int)
(	O
sem	*(struct)
)	O
;	O
osip_free	O
(	O
sem	*(struct)
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_sem_post	(*(struct))->(int)
(	O
struct	O
osip_sem	O
*	O
_sem	*(struct)
)	O
{	O
osip_sem_t	union(array(char),long)
*	O
sem	*(struct)
=	O
(	O
osip_sem_t	union(array(char),long)
*	O
)	O
_sem	*(struct)
;	O
if	O
(	O
sem	*(struct)
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
return	O
sem_post	(*(union(array(char),long)))->(int)
(	O
sem	*(struct)
)	O
;	O
}	O
int	O
osip_sem_wait	(*(struct))->(int)
(	O
struct	O
osip_sem	O
*	O
_sem	*(struct)
)	O
{	O
osip_sem_t	union(array(char),long)
*	O
sem	*(struct)
=	O
(	O
osip_sem_t	union(array(char),long)
*	O
)	O
_sem	*(struct)
;	O
if	O
(	O
sem	*(struct)
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
return	O
sem_wait	(*(union(array(char),long)))->(int)
(	O
sem	*(struct)
)	O
;	O
}	O
int	O
osip_sem_trywait	(*(struct))->(int)
(	O
struct	O
osip_sem	O
*	O
_sem	*(struct)
)	O
{	O
osip_sem_t	union(array(char),long)
*	O
sem	*(struct)
=	O
(	O
osip_sem_t	union(array(char),long)
*	O
)	O
_sem	*(struct)
;	O
if	O
(	O
sem	*(struct)
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
return	O
sem_trywait	(*(union(array(char),long)))->(int)
(	O
sem	*(struct)
)	O
;	O
}	O
