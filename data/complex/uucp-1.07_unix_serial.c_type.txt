const	O
char	O
serial_rcsid	array(char)
[	O
]	O
=	O
"$Id: serial.c,v 1.78 2002/03/05 19:10:42 ian Rel $"	*(char)
;	O
enum	O
tclocal_setting	enum(int,int,int)
{	O
SET_CLOCAL	int
,	O
CLEAR_CLOCAL	int
,	O
IGNORE_CLOCAL	int
}	O
;	O
static	O
RETSIGTYPE	void
usalarm	(int)->(void)
P	O
(	O
(	O
int	O
isig	int
)	O
)	O
;	O
static	O
boolean	int
fsserial_init	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(char))->(int)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
,	O
const	O
struct	O
sconncmds	struct(*((*(struct(*(struct`),*(void),*(struct`))))->(void)),*((*(struct(*(struct`),*(void),*(struct`))),int,int)->(int)),*((*(struct(*(struct`),*(void),*(struct`))))->(int)),*((*(struct(*(struct`),*(void),*(struct`))),long,int,int)->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(void),*(struct(*(char),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,struct(*`,*`,int,*`,int),struct(*`,*`,int,*`,int),*(struct`),int,*(void))),int)->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(void),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(char),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,struct(*`,*`,int,*`,int),struct(*`,*`,int,*`,int),*(struct`),int,*(void))),*(enum(int,int,int)))->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(char),*(long),long,int,int)->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(char),long)->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(char),*(long),*(char),*(long))->(int)),*((*(struct(*(struct`),*(void),*(struct`))))->(int)),*((*(struct(*(struct`),*(void),*(struct`))),enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*(struct(*(struct`),*(void),*(struct`))),int)->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(*(char)))->(int)),*((*(struct(*(struct`),*(void),*(struct`))))->(long)))
*	O
qcmds	*(struct)
,	O
const	O
char	O
*	O
zdevice	*(char)
)	O
)	O
;	O
static	O
void	O
usserial_free	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(void)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
)	O
)	O
;	O
static	O
boolean	int
fsserial_lockfile	(int,*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
P	O
(	O
(	O
boolean	int
flok	int
,	O
const	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
)	O
)	O
;	O
static	O
boolean	int
fsserial_lock	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int,int)->(int)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
,	O
boolean	int
fin	int
,	O
boolean	int
fuser	int
)	O
)	O
;	O
static	O
boolean	int
fsserial_unlock	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
)	O
)	O
;	O
static	O
boolean	int
fsserial_open	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),long,int,int,enum(int,int,int))->(int)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
,	O
long	O
ibaud	long
,	O
boolean	int
fwait	int
,	O
boolean	int
fuser	int
,	O
enum	O
tclocal_setting	enum(int,int,int)
tlocal	enum(int,int,int)
)	O
)	O
;	O
static	O
boolean	int
fsstdin_open	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),long,int,int)->(int)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
,	O
long	O
ibaud	long
,	O
boolean	int
fwait	int
,	O
boolean	int
fuser	int
)	O
)	O
;	O
static	O
boolean	int
fsmodem_open	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),long,int,int)->(int)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
,	O
long	O
ibaud	long
,	O
boolean	int
fwait	int
,	O
boolean	int
fuser	int
)	O
)	O
;	O
static	O
boolean	int
fsdirect_open	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),long,int,int)->(int)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
,	O
long	O
ibaud	long
,	O
boolean	int
fwait	int
,	O
boolean	int
fuser	int
)	O
)	O
;	O
static	O
boolean	int
fsblock	(*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)),int)->(int)
P	O
(	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
q	*(struct)
,	O
boolean	int
fblock	int
)	O
)	O
;	O
static	O
boolean	int
fsserial_close	(*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)))->(int)
P	O
(	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
q	*(struct)
)	O
)	O
;	O
static	O
boolean	int
fsstdin_close	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),int)->(int)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
,	O
pointer	*(void)
puuconf	*(void)
,	O
struct	O
uuconf_dialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*(*`))))),int,*(void))
*	O
qdialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
,	O
boolean	int
fsuccess	int
)	O
)	O
;	O
static	O
boolean	int
fsmodem_close	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),int)->(int)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
,	O
pointer	*(void)
puuconf	*(void)
,	O
struct	O
uuconf_dialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*(*`))))),int,*(void))
*	O
qdialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
,	O
boolean	int
fsuccess	int
)	O
)	O
;	O
static	O
boolean	int
fsdirect_close	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),int)->(int)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
,	O
pointer	*(void)
puuconf	*(void)
,	O
struct	O
uuconf_dialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*(*`))))),int,*(void))
*	O
qdialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
,	O
boolean	int
fsuccess	int
)	O
)	O
;	O
static	O
boolean	int
fsserial_break	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
)	O
)	O
;	O
static	O
boolean	int
fsstdin_break	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
)	O
)	O
;	O
static	O
boolean	int
fsserial_set	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
,	O
enum	O
tparitysetting	enum(int,int,int,int,int,int)
tparity	enum(int,int,int,int,int,int)
,	O
enum	O
tstripsetting	enum(int,int,int)
tstrip	enum(int,int,int)
,	O
enum	O
txonxoffsetting	enum(int,int,int)
txonxoff	enum(int,int,int)
)	O
)	O
;	O
static	O
boolean	int
fsstdin_set	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
,	O
enum	O
tparitysetting	enum(int,int,int,int,int,int)
tparity	enum(int,int,int,int,int,int)
,	O
enum	O
tstripsetting	enum(int,int,int)
tstrip	enum(int,int,int)
,	O
enum	O
txonxoffsetting	enum(int,int,int)
txonxoff	enum(int,int,int)
)	O
)	O
;	O
static	O
boolean	int
fsmodem_carrier	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int)->(int)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
,	O
boolean	int
fcarrier	int
)	O
)	O
;	O
static	O
boolean	int
fsserial_hardflow	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int)->(int)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
,	O
boolean	int
fhardflow	int
)	O
)	O
;	O
static	O
boolean	int
fsrun_chat	(int,int,*(*(char)))->(int)
P	O
(	O
(	O
int	O
oread	int
,	O
int	O
owrite	int
,	O
char	O
*	O
*	O
pzprog	*(*(char))
)	O
)	O
;	O
static	O
long	O
isserial_baud	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(long)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
)	O
)	O
;	O
static	O
const	O
struct	O
sconncmds	struct(*((*(struct(*(struct`),*(void),*(struct`))))->(void)),*((*(struct(*(struct`),*(void),*(struct`))),int,int)->(int)),*((*(struct(*(struct`),*(void),*(struct`))))->(int)),*((*(struct(*(struct`),*(void),*(struct`))),long,int,int)->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(void),*(struct(*(char),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,struct(*`,*`,int,*`,int),struct(*`,*`,int,*`,int),*(struct`),int,*(void))),int)->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(void),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(char),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,struct(*`,*`,int,*`,int),struct(*`,*`,int,*`,int),*(struct`),int,*(void))),*(enum(int,int,int)))->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(char),*(long),long,int,int)->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(char),long)->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(char),*(long),*(char),*(long))->(int)),*((*(struct(*(struct`),*(void),*(struct`))))->(int)),*((*(struct(*(struct`),*(void),*(struct`))),enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*(struct(*(struct`),*(void),*(struct`))),int)->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(*(char)))->(int)),*((*(struct(*(struct`),*(void),*(struct`))))->(long)))
sstdincmds	struct(*((*(struct(*`,*`,*`)))->(void)),*((*(struct(*`,*`,*`)),int,int)->(int)),*((*(struct(*`,*`,*`)))->(int)),*((*(struct(*`,*`,*`)),long,int,int)->(int)),*((*(struct(*`,*`,*`)),*(void),*(struct(*`,struct`,*`,*`,int,int,int,int,struct`,struct`,*`,int,*`)),int)->(int)),*((*(struct(*`,*`,*`)),*(void),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,struct`,*`,*`,int,int,int,int,struct`,struct`,*`,int,*`)),*(enum(int,int,int)))->(int)),*((*(struct(*`,*`,*`)),*(char),*(long),long,int,int)->(int)),*((*(struct(*`,*`,*`)),*(char),long)->(int)),*((*(struct(*`,*`,*`)),*(char),*(long),*(char),*(long))->(int)),*((*(struct(*`,*`,*`)))->(int)),*((*(struct(*`,*`,*`)),enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*(struct(*`,*`,*`)),int)->(int)),*((*(struct(*`,*`,*`)),*(*(char)))->(int)),*((*(struct(*`,*`,*`)))->(long)))
=	O
{	O
usserial_free	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(void)
,	O
NULL	O
,	O
NULL	O
,	O
fsstdin_open	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),long,int,int)->(int)
,	O
fsstdin_close	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),int)->(int)
,	O
NULL	O
,	O
fsdouble_read	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),*(long),long,int,int)->(int)
,	O
fsdouble_write	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long)->(int)
,	O
fsysdep_conn_io	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),*(long),*(char),*(long))->(int)
,	O
fsstdin_break	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
,	O
fsstdin_set	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)
,	O
NULL	O
,	O
fsdouble_chat	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(*(char)))->(int)
,	O
isserial_baud	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(long)
}	O
;	O
static	O
const	O
struct	O
sconncmds	struct(*((*(struct(*(struct`),*(void),*(struct`))))->(void)),*((*(struct(*(struct`),*(void),*(struct`))),int,int)->(int)),*((*(struct(*(struct`),*(void),*(struct`))))->(int)),*((*(struct(*(struct`),*(void),*(struct`))),long,int,int)->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(void),*(struct(*(char),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,struct(*`,*`,int,*`,int),struct(*`,*`,int,*`,int),*(struct`),int,*(void))),int)->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(void),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(char),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,struct(*`,*`,int,*`,int),struct(*`,*`,int,*`,int),*(struct`),int,*(void))),*(enum(int,int,int)))->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(char),*(long),long,int,int)->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(char),long)->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(char),*(long),*(char),*(long))->(int)),*((*(struct(*(struct`),*(void),*(struct`))))->(int)),*((*(struct(*(struct`),*(void),*(struct`))),enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*(struct(*(struct`),*(void),*(struct`))),int)->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(*(char)))->(int)),*((*(struct(*(struct`),*(void),*(struct`))))->(long)))
smodemcmds	struct(*((*(struct(*`,*`,*`)))->(void)),*((*(struct(*`,*`,*`)),int,int)->(int)),*((*(struct(*`,*`,*`)))->(int)),*((*(struct(*`,*`,*`)),long,int,int)->(int)),*((*(struct(*`,*`,*`)),*(void),*(struct(*`,struct`,*`,*`,int,int,int,int,struct`,struct`,*`,int,*`)),int)->(int)),*((*(struct(*`,*`,*`)),*(void),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,struct`,*`,*`,int,int,int,int,struct`,struct`,*`,int,*`)),*(enum(int,int,int)))->(int)),*((*(struct(*`,*`,*`)),*(char),*(long),long,int,int)->(int)),*((*(struct(*`,*`,*`)),*(char),long)->(int)),*((*(struct(*`,*`,*`)),*(char),*(long),*(char),*(long))->(int)),*((*(struct(*`,*`,*`)))->(int)),*((*(struct(*`,*`,*`)),enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*(struct(*`,*`,*`)),int)->(int)),*((*(struct(*`,*`,*`)),*(*(char)))->(int)),*((*(struct(*`,*`,*`)))->(long)))
=	O
{	O
usserial_free	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(void)
,	O
fsserial_lock	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int,int)->(int)
,	O
fsserial_unlock	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
,	O
fsmodem_open	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),long,int,int)->(int)
,	O
fsmodem_close	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),int)->(int)
,	O
fmodem_dial	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(struct(*(char),*(*(char)),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),long,long,*(char),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*`)),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),*(enum(int,int,int)))->(int)
,	O
fsysdep_conn_read	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),*(long),long,int,int)->(int)
,	O
fsysdep_conn_write	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long)->(int)
,	O
fsysdep_conn_io	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),*(long),*(char),*(long))->(int)
,	O
fsserial_break	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
,	O
fsserial_set	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)
,	O
fsmodem_carrier	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int)->(int)
,	O
fsysdep_conn_chat	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(*(char)))->(int)
,	O
isserial_baud	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(long)
}	O
;	O
static	O
const	O
struct	O
sconncmds	struct(*((*(struct(*(struct`),*(void),*(struct`))))->(void)),*((*(struct(*(struct`),*(void),*(struct`))),int,int)->(int)),*((*(struct(*(struct`),*(void),*(struct`))))->(int)),*((*(struct(*(struct`),*(void),*(struct`))),long,int,int)->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(void),*(struct(*(char),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,struct(*`,*`,int,*`,int),struct(*`,*`,int,*`,int),*(struct`),int,*(void))),int)->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(void),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(char),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,struct(*`,*`,int,*`,int),struct(*`,*`,int,*`,int),*(struct`),int,*(void))),*(enum(int,int,int)))->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(char),*(long),long,int,int)->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(char),long)->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(char),*(long),*(char),*(long))->(int)),*((*(struct(*(struct`),*(void),*(struct`))))->(int)),*((*(struct(*(struct`),*(void),*(struct`))),enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*(struct(*(struct`),*(void),*(struct`))),int)->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(*(char)))->(int)),*((*(struct(*(struct`),*(void),*(struct`))))->(long)))
sdirectcmds	struct(*((*(struct(*`,*`,*`)))->(void)),*((*(struct(*`,*`,*`)),int,int)->(int)),*((*(struct(*`,*`,*`)))->(int)),*((*(struct(*`,*`,*`)),long,int,int)->(int)),*((*(struct(*`,*`,*`)),*(void),*(struct(*`,struct`,*`,*`,int,int,int,int,struct`,struct`,*`,int,*`)),int)->(int)),*((*(struct(*`,*`,*`)),*(void),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,struct`,*`,*`,int,int,int,int,struct`,struct`,*`,int,*`)),*(enum(int,int,int)))->(int)),*((*(struct(*`,*`,*`)),*(char),*(long),long,int,int)->(int)),*((*(struct(*`,*`,*`)),*(char),long)->(int)),*((*(struct(*`,*`,*`)),*(char),*(long),*(char),*(long))->(int)),*((*(struct(*`,*`,*`)))->(int)),*((*(struct(*`,*`,*`)),enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*(struct(*`,*`,*`)),int)->(int)),*((*(struct(*`,*`,*`)),*(*(char)))->(int)),*((*(struct(*`,*`,*`)))->(long)))
=	O
{	O
usserial_free	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(void)
,	O
fsserial_lock	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int,int)->(int)
,	O
fsserial_unlock	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
,	O
fsdirect_open	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),long,int,int)->(int)
,	O
fsdirect_close	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),int)->(int)
,	O
NULL	O
,	O
fsysdep_conn_read	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),*(long),long,int,int)->(int)
,	O
fsysdep_conn_write	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long)->(int)
,	O
fsysdep_conn_io	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),*(long),*(char),*(long))->(int)
,	O
fsserial_break	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
,	O
fsserial_set	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)
,	O
NULL	O
,	O
fsysdep_conn_chat	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(*(char)))->(int)
,	O
isserial_baud	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(long)
}	O
;	O
static	O
int	O
iSunblock	int
=	O
O_NDELAY	O
|	O
O_NONBLOCK	int
;	O
volatile	O
sig_atomic_t	int
fSalarm	int
;	O
static	O
RETSIGTYPE	void
usalarm	(int)->(void)
(	O
isig	int
)	O
int	O
isig	int
ATTRIBUTE_UNUSED	O
;	O
{	O
fSalarm	int
=	O
TRUE	O
;	O
alarm	(int)->(int)
(	O
1	int
)	O
;	O
}	O
static	O
sigset_t	struct(array(long))
isblocksigs	()->(struct(array(long)))
P	O
(	O
(	O
void	O
)	O
)	O
;	O
static	O
sigset_t	struct(array(long))
isblocksigs	()->(struct(array(long)))
(	O
)	O
{	O
sigset_t	struct(array(long))
sblock	struct(array(long))
,	O
sold	struct(array(long))
;	O
(	O
void	O
)	O
(	O
sigemptyset	(*(struct(array(long))))->(int)
(	O
&	O
sblock	struct(array(long))
)	O
)	O
;	O
(	O
void	O
)	O
(	O
sigaddset	(*(struct(array(long))),int)->(int)
(	O
&	O
sblock	struct(array(long))
,	O
SIGINT	int
)	O
)	O
;	O
(	O
void	O
)	O
(	O
sigaddset	(*(struct(array(long))),int)->(int)
(	O
&	O
sblock	struct(array(long))
,	O
SIGQUIT	int
)	O
)	O
;	O
(	O
void	O
)	O
(	O
sigaddset	(*(struct(array(long))),int)->(int)
(	O
&	O
sblock	struct(array(long))
,	O
SIGTERM	int
)	O
)	O
;	O
(	O
void	O
)	O
(	O
sigaddset	(*(struct(array(long))),int)->(int)
(	O
&	O
sblock	struct(array(long))
,	O
SIGPIPE	int
)	O
)	O
;	O
(	O
void	O
)	O
sigprocmask	(int,*(struct(array(long))),*(struct(array(long))))->(int)
(	O
SIG_BLOCK	int
,	O
&	O
sblock	struct(array(long))
,	O
&	O
sold	struct(array(long))
)	O
;	O
return	O
sold	struct(array(long))
;	O
}	O
static	O
boolean	int
fsserial_init	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(char))->(int)
(	O
qconn	*(struct)
,	O
qcmds	*(struct)
,	O
zdevice	*(char)
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
const	O
struct	O
sconncmds	struct(*((*(struct(*(struct`),*(void),*(struct`))))->(void)),*((*(struct(*(struct`),*(void),*(struct`))),int,int)->(int)),*((*(struct(*(struct`),*(void),*(struct`))))->(int)),*((*(struct(*(struct`),*(void),*(struct`))),long,int,int)->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(void),*(struct(*(char),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,struct(*`,*`,int,*`,int),struct(*`,*`,int,*`,int),*(struct`),int,*(void))),int)->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(void),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),*(struct(*(char),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,struct(*`,*`,int,*`,int),struct(*`,*`,int,*`,int),*(struct`),int,*(void))),*(enum(int,int,int)))->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(char),*(long),long,int,int)->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(char),long)->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(char),*(long),*(char),*(long))->(int)),*((*(struct(*(struct`),*(void),*(struct`))))->(int)),*((*(struct(*(struct`),*(void),*(struct`))),enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*(struct(*(struct`),*(void),*(struct`))),int)->(int)),*((*(struct(*(struct`),*(void),*(struct`))),*(*(char)))->(int)),*((*(struct(*(struct`),*(void),*(struct`))))->(long)))
*	O
qcmds	*(struct)
;	O
const	O
char	O
*	O
zdevice	*(char)
;	O
{	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
q	*(struct)
;	O
q	*(struct)
=	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
)	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
)	O
)	O
;	O
if	O
(	O
zdevice	*(char)
==	O
NULL	O
&&	O
qconn	*(struct)
->	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
!=	O
NULL	O
&&	O
qconn	*(struct)
->	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_ttype	enum(int,int,int,int,int,int,int)
!=	O
UUCONF_PORTTYPE_STDIN	int
)	O
zdevice	*(char)
=	O
qconn	*(struct)
->	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_zname	*(char)
;	O
if	O
(	O
zdevice	*(char)
==	O
NULL	O
)	O
q	*(struct)
->	O
zdevice	*(char)
=	O
NULL	O
;	O
else	O
if	O
(	O
*	O
zdevice	*(char)
==	O
'/'	O
)	O
q	*(struct)
->	O
zdevice	*(char)
=	O
zbufcpy	(*(char))->(*(char))
(	O
zdevice	*(char)
)	O
;	O
else	O
{	O
size_t	long
clen	long
;	O
clen	long
=	O
strlen	(*(char))->(long)
(	O
zdevice	*(char)
)	O
;	O
q	*(struct)
->	O
zdevice	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
sizeof	O
"/dev/"	*(char)
+	O
clen	long
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
q	*(struct)
->	O
zdevice	*(char)
,	O
"/dev/"	*(char)
,	O
sizeof	O
"/dev/"	*(char)
-	O
1	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
q	*(struct)
->	O
zdevice	*(char)
+	O
sizeof	O
"/dev/"	*(char)
-	O
1	int
,	O
zdevice	*(char)
,	O
clen	long
)	O
;	O
q	*(struct)
->	O
zdevice	*(char)
[	O
sizeof	O
"/dev/"	*(char)
+	O
clen	long
-	O
1	int
]	O
=	O
'\0'	O
;	O
}	O
q	*(struct)
->	O
o	int
=	O
-	O
1	int
;	O
q	*(struct)
->	O
ord	int
=	O
-	O
1	int
;	O
q	*(struct)
->	O
owr	int
=	O
-	O
1	int
;	O
q	*(struct)
->	O
ftli	int
=	O
FALSE	O
;	O
qconn	*(struct)
->	O
psysdep	*(void)
=	O
(	O
pointer	*(void)
)	O
q	*(struct)
;	O
qconn	*(struct)
->	O
qcmds	*(struct)
=	O
qcmds	*(struct)
;	O
return	O
TRUE	O
;	O
}	O
boolean	int
fsysdep_stdin_init	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
(	O
qconn	*(struct)
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
{	O
(	O
void	O
)	O
chmod	(*(char),int)->(int)
(	O
"/dev/tty"	*(char)
,	O
S_IRUSR	O
|	O
S_IWUSR	O
)	O
;	O
return	O
fsserial_init	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(char))->(int)
(	O
qconn	*(struct)
,	O
&	O
sstdincmds	struct(*((*(struct(*`,*`,*`)))->(void)),*((*(struct(*`,*`,*`)),int,int)->(int)),*((*(struct(*`,*`,*`)))->(int)),*((*(struct(*`,*`,*`)),long,int,int)->(int)),*((*(struct(*`,*`,*`)),*(void),*(struct(*`,struct`,*`,*`,int,int,int,int,struct`,struct`,*`,int,*`)),int)->(int)),*((*(struct(*`,*`,*`)),*(void),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,struct`,*`,*`,int,int,int,int,struct`,struct`,*`,int,*`)),*(enum(int,int,int)))->(int)),*((*(struct(*`,*`,*`)),*(char),*(long),long,int,int)->(int)),*((*(struct(*`,*`,*`)),*(char),long)->(int)),*((*(struct(*`,*`,*`)),*(char),*(long),*(char),*(long))->(int)),*((*(struct(*`,*`,*`)))->(int)),*((*(struct(*`,*`,*`)),enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*(struct(*`,*`,*`)),int)->(int)),*((*(struct(*`,*`,*`)),*(*(char)))->(int)),*((*(struct(*`,*`,*`)))->(long)))
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
}	O
boolean	int
fsysdep_modem_init	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
(	O
qconn	*(struct)
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
{	O
return	O
fsserial_init	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(char))->(int)
(	O
qconn	*(struct)
,	O
&	O
smodemcmds	struct(*((*(struct(*`,*`,*`)))->(void)),*((*(struct(*`,*`,*`)),int,int)->(int)),*((*(struct(*`,*`,*`)))->(int)),*((*(struct(*`,*`,*`)),long,int,int)->(int)),*((*(struct(*`,*`,*`)),*(void),*(struct(*`,struct`,*`,*`,int,int,int,int,struct`,struct`,*`,int,*`)),int)->(int)),*((*(struct(*`,*`,*`)),*(void),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,struct`,*`,*`,int,int,int,int,struct`,struct`,*`,int,*`)),*(enum(int,int,int)))->(int)),*((*(struct(*`,*`,*`)),*(char),*(long),long,int,int)->(int)),*((*(struct(*`,*`,*`)),*(char),long)->(int)),*((*(struct(*`,*`,*`)),*(char),*(long),*(char),*(long))->(int)),*((*(struct(*`,*`,*`)))->(int)),*((*(struct(*`,*`,*`)),enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*(struct(*`,*`,*`)),int)->(int)),*((*(struct(*`,*`,*`)),*(*(char)))->(int)),*((*(struct(*`,*`,*`)))->(long)))
,	O
qconn	*(struct)
->	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_smodem	struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct))
.	O
uuconf_zdevice	*(char)
)	O
;	O
}	O
boolean	int
fsysdep_direct_init	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
(	O
qconn	*(struct)
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
{	O
return	O
fsserial_init	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(char))->(int)
(	O
qconn	*(struct)
,	O
&	O
sdirectcmds	struct(*((*(struct(*`,*`,*`)))->(void)),*((*(struct(*`,*`,*`)),int,int)->(int)),*((*(struct(*`,*`,*`)))->(int)),*((*(struct(*`,*`,*`)),long,int,int)->(int)),*((*(struct(*`,*`,*`)),*(void),*(struct(*`,struct`,*`,*`,int,int,int,int,struct`,struct`,*`,int,*`)),int)->(int)),*((*(struct(*`,*`,*`)),*(void),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),*(struct(*`,struct`,*`,*`,int,int,int,int,struct`,struct`,*`,int,*`)),*(enum(int,int,int)))->(int)),*((*(struct(*`,*`,*`)),*(char),*(long),long,int,int)->(int)),*((*(struct(*`,*`,*`)),*(char),long)->(int)),*((*(struct(*`,*`,*`)),*(char),*(long),*(char),*(long))->(int)),*((*(struct(*`,*`,*`)))->(int)),*((*(struct(*`,*`,*`)),enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*(struct(*`,*`,*`)),int)->(int)),*((*(struct(*`,*`,*`)),*(*(char)))->(int)),*((*(struct(*`,*`,*`)))->(long)))
,	O
qconn	*(struct)
->	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_sdirect	struct(*(char),long,int,int)
.	O
uuconf_zdevice	*(char)
)	O
;	O
}	O
static	O
void	O
usserial_free	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(void)
(	O
qconn	*(struct)
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
{	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
;	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
=	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
)	O
qconn	*(struct)
->	O
psysdep	*(void)
;	O
ubuffree	(*(char))->(void)
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
zdevice	*(char)
)	O
;	O
xfree	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
)	O
;	O
qconn	*(struct)
->	O
psysdep	*(void)
=	O
NULL	O
;	O
}	O
static	O
boolean	int
fsserial_lockfile	(int,*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
(	O
flok	int
,	O
qconn	*(struct)
)	O
boolean	int
flok	int
;	O
const	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
{	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
;	O
const	O
char	O
*	O
z	*(char)
;	O
char	O
*	O
zalc	*(char)
;	O
boolean	int
fret	int
;	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
=	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
)	O
qconn	*(struct)
->	O
psysdep	*(void)
;	O
if	O
(	O
qconn	*(struct)
->	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
==	O
NULL	O
)	O
z	*(char)
=	O
NULL	O
;	O
else	O
z	*(char)
=	O
qconn	*(struct)
->	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_zlockname	*(char)
;	O
zalc	*(char)
=	O
NULL	O
;	O
if	O
(	O
z	*(char)
==	O
NULL	O
)	O
{	O
{	O
const	O
char	O
*	O
zbase	*(char)
;	O
size_t	long
clen	long
;	O
zbase	*(char)
=	O
strrchr	(*(char),int)->(*(char))
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
zdevice	*(char)
,	O
'/'	O
)	O
+	O
1	int
;	O
clen	long
=	O
strlen	(*(char))->(long)
(	O
zbase	*(char)
)	O
;	O
zalc	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
sizeof	O
LCK_TEMPLATE	*(char)
+	O
clen	long
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
zalc	*(char)
,	O
LCK_TEMPLATE	*(char)
,	O
sizeof	O
LCK_TEMPLATE	*(char)
-	O
1	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
zalc	*(char)
+	O
sizeof	O
LCK_TEMPLATE	*(char)
-	O
1	int
,	O
zbase	*(char)
,	O
clen	long
+	O
1	int
)	O
;	O
z	*(char)
=	O
zalc	*(char)
;	O
}	O
}	O
if	O
(	O
flok	int
)	O
fret	int
=	O
fsdo_lock	(*(char),int,*(int))->(int)
(	O
z	*(char)
,	O
FALSE	O
,	O
(	O
boolean	int
*	O
)	O
NULL	O
)	O
;	O
else	O
fret	int
=	O
fsdo_unlock	(*(char),int)->(int)
(	O
z	*(char)
,	O
FALSE	O
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zalc	*(char)
)	O
;	O
return	O
fret	int
;	O
}	O
static	O
boolean	int
fsserial_lock	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int,int)->(int)
(	O
qconn	*(struct)
,	O
fin	int
,	O
fuser	int
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
boolean	int
fin	int
;	O
boolean	int
fuser	int
;	O
{	O
if	O
(	O
!	O
fsserial_lockfile	(int,*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
(	O
TRUE	O
,	O
qconn	*(struct)
)	O
)	O
return	O
FALSE	O
;	O
{	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
;	O
int	O
iflag	int
;	O
uid_t	int
ieuid	int
;	O
gid_t	int
iegid	int
;	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
=	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
)	O
qconn	*(struct)
->	O
psysdep	*(void)
;	O
if	O
(	O
fin	int
)	O
iflag	int
=	O
0	int
;	O
else	O
iflag	int
=	O
iSunblock	int
;	O
if	O
(	O
fuser	int
)	O
{	O
if	O
(	O
!	O
fsuser_perms	(*(int),*(int))->(int)
(	O
&	O
ieuid	int
,	O
&	O
iegid	int
)	O
)	O
{	O
(	O
void	O
)	O
fsserial_lockfile	(int,*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
(	O
FALSE	O
,	O
qconn	*(struct)
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
=	O
open	(*(char),int)->(int)
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
zdevice	*(char)
,	O
O_RDWR	int
|	O
iflag	int
)	O
;	O
if	O
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
<	O
0	int
)	O
{	O
if	O
(	O
!	O
fin	int
&&	O
iSunblock	int
!=	O
O_NONBLOCK	int
&&	O
errno	O
==	O
EINVAL	int
)	O
{	O
iSunblock	int
=	O
O_NONBLOCK	int
;	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
=	O
open	(*(char),int)->(int)
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
zdevice	*(char)
,	O
O_RDWR	int
|	O
O_NONBLOCK	int
)	O
;	O
}	O
if	O
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
<	O
0	int
)	O
{	O
int	O
ierr	int
;	O
ierr	int
=	O
errno	O
;	O
if	O
(	O
fuser	int
)	O
(	O
void	O
)	O
fsuucp_perms	(long,long)->(int)
(	O
(	O
long	O
)	O
ieuid	int
,	O
(	O
long	O
)	O
iegid	int
)	O
;	O
if	O
(	O
ierr	int
!=	O
EBUSY	int
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"open (%s): %s"	*(char)
,	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
zdevice	*(char)
,	O
strerror	(int)->(*(char))
(	O
ierr	int
)	O
)	O
;	O
(	O
void	O
)	O
fsserial_lockfile	(int,*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
(	O
FALSE	O
,	O
qconn	*(struct)
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
if	O
(	O
fuser	int
)	O
{	O
if	O
(	O
!	O
fsuucp_perms	(long,long)->(int)
(	O
(	O
long	O
)	O
ieuid	int
,	O
(	O
long	O
)	O
iegid	int
)	O
)	O
{	O
(	O
void	O
)	O
close	(int)->(int)
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
)	O
;	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
=	O
-	O
1	int
;	O
(	O
void	O
)	O
fsserial_lockfile	(int,*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
(	O
FALSE	O
,	O
qconn	*(struct)
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
if	O
(	O
fcntl	(int,int)->(int)
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
,	O
F_SETFD	int
,	O
fcntl	(int,int)->(int)
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
,	O
F_GETFD	int
,	O
0	int
)	O
|	O
FD_CLOEXEC	int
)	O
<	O
0	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"fcntl (FD_CLOEXEC): %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
(	O
void	O
)	O
ioctl	(int,long)->(int)
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
,	O
TIOCNOTTY	int
,	O
(	O
char	O
*	O
)	O
NULL	O
)	O
;	O
(	O
void	O
)	O
close	(int)->(int)
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
)	O
;	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
=	O
-	O
1	int
;	O
(	O
void	O
)	O
fsserial_lockfile	(int,*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
(	O
FALSE	O
,	O
qconn	*(struct)
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
fsserial_unlock	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
(	O
qconn	*(struct)
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
{	O
boolean	int
fret	int
;	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
;	O
fret	int
=	O
TRUE	O
;	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
=	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
)	O
qconn	*(struct)
->	O
psysdep	*(void)
;	O
if	O
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
>=	O
0	int
)	O
{	O
(	O
void	O
)	O
ioctl	(int,long)->(int)
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
,	O
TIOCNOTTY	int
,	O
(	O
char	O
*	O
)	O
NULL	O
)	O
;	O
if	O
(	O
close	(int)->(int)
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
)	O
<	O
0	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"close: %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
fret	int
=	O
FALSE	O
;	O
}	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
=	O
-	O
1	int
;	O
}	O
if	O
(	O
!	O
fsserial_lockfile	(int,*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
(	O
FALSE	O
,	O
qconn	*(struct)
)	O
)	O
fret	int
=	O
FALSE	O
;	O
return	O
fret	int
;	O
}	O
typedef	O
speed_t	int
baud_code	int
;	O
static	O
struct	O
sbaud_table	struct(int,long)
{	O
baud_code	int
icode	int
;	O
long	O
ibaud	long
;	O
}	O
asSbaud_table	array(struct(int,long))
[	O
]	O
=	O
{	O
{	O
B50	int
,	O
50	int
}	O
,	O
{	O
B75	int
,	O
75	int
}	O
,	O
{	O
B110	int
,	O
110	int
}	O
,	O
{	O
B134	int
,	O
134	int
}	O
,	O
{	O
B150	int
,	O
150	int
}	O
,	O
{	O
B200	int
,	O
200	int
}	O
,	O
{	O
B300	int
,	O
300	int
}	O
,	O
{	O
B600	int
,	O
600	int
}	O
,	O
{	O
B1200	int
,	O
1200	int
}	O
,	O
{	O
B1800	int
,	O
1800	int
}	O
,	O
{	O
B2400	int
,	O
2400	int
}	O
,	O
{	O
B4800	int
,	O
4800	int
}	O
,	O
{	O
B9600	int
,	O
9600	int
}	O
,	O
{	O
B19200	int
,	O
19200	int
}	O
,	O
{	O
B38400	int
,	O
38400	int
}	O
,	O
{	O
B57600	int
,	O
57600	int
}	O
,	O
{	O
B115200	int
,	O
115200	int
}	O
,	O
{	O
B230400	int
,	O
230400	int
}	O
,	O
{	O
B460800	int
,	O
460800	int
}	O
,	O
{	O
B500000	int
,	O
500000	int
}	O
,	O
{	O
B576000	int
,	O
576000	int
}	O
,	O
{	O
B921600	int
,	O
921600	int
}	O
,	O
{	O
B1000000	int
,	O
1000000	int
}	O
,	O
{	O
B1152000	int
,	O
1152000	int
}	O
,	O
{	O
B1500000	int
,	O
1500000	int
}	O
,	O
{	O
B2000000	int
,	O
2000000	int
}	O
,	O
{	O
B2500000	int
,	O
2500000	int
}	O
,	O
{	O
B3000000	int
,	O
3000000	int
}	O
,	O
{	O
B3500000	int
,	O
3500000	int
}	O
,	O
{	O
B4000000	int
,	O
4000000	int
}	O
,	O
{	O
B0	int
,	O
0	int
}	O
}	O
;	O
static	O
int	O
cSmin	int
;	O
static	O
boolean	int
fsserial_open	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),long,int,int,enum(int,int,int))->(int)
(	O
qconn	*(struct)
,	O
ibaud	long
,	O
fwait	int
,	O
fuser	int
,	O
tlocal	enum(int,int,int)
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
long	O
ibaud	long
;	O
boolean	int
fwait	int
;	O
boolean	int
fuser	int
;	O
enum	O
tclocal_setting	enum(int,int,int)
tlocal	enum(int,int,int)
;	O
{	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
q	*(struct)
;	O
baud_code	int
ib	int
;	O
q	*(struct)
=	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
)	O
qconn	*(struct)
->	O
psysdep	*(void)
;	O
if	O
(	O
q	*(struct)
->	O
zdevice	*(char)
!=	O
NULL	O
)	O
{	O
const	O
char	O
*	O
z	*(char)
;	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
q	*(struct)
->	O
zdevice	*(char)
,	O
"/dev/"	*(char)
,	O
sizeof	O
"/dev/"	*(char)
-	O
1	int
)	O
==	O
0	int
)	O
z	*(char)
=	O
q	*(struct)
->	O
zdevice	*(char)
+	O
sizeof	O
"/dev/"	*(char)
-	O
1	int
;	O
else	O
z	*(char)
=	O
q	*(struct)
->	O
zdevice	*(char)
;	O
ulog_device	(*(char))->(void)
(	O
z	*(char)
)	O
;	O
}	O
else	O
{	O
const	O
char	O
*	O
zport	*(char)
;	O
boolean	int
fdummy	int
;	O
if	O
(	O
qconn	*(struct)
->	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
!=	O
NULL	O
&&	O
qconn	*(struct)
->	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_ttype	enum(int,int,int,int,int,int,int)
!=	O
UUCONF_PORTTYPE_STDIN	int
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_FATAL	int
,	O
"fsserial_open: Can't happen"	*(char)
)	O
;	O
zport	*(char)
=	O
zsysdep_port_name	(*(int))->(*(char))
(	O
&	O
fdummy	int
)	O
;	O
if	O
(	O
zport	*(char)
!=	O
NULL	O
)	O
ulog_device	(*(char))->(void)
(	O
zport	*(char)
)	O
;	O
}	O
ib	int
=	O
B0	int
;	O
if	O
(	O
ibaud	long
!=	O
0	int
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
CBAUD_TABLE	O
;	O
i	long
++	O
)	O
if	O
(	O
asSbaud_table	array(struct(int,long))
[	O
i	long
]	O
.	O
ibaud	long
==	O
ibaud	long
)	O
break	O
;	O
if	O
(	O
i	long
>=	O
CBAUD_TABLE	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Unsupported baud rate %ld"	*(char)
,	O
ibaud	long
)	O
;	O
return	O
FALSE	O
;	O
}	O
ib	int
=	O
asSbaud_table	array(struct(int,long))
[	O
i	long
]	O
.	O
icode	int
;	O
}	O
if	O
(	O
q	*(struct)
->	O
o	int
<	O
0	int
)	O
{	O
int	O
iflag	int
;	O
uid_t	int
ieuid	int
;	O
gid_t	int
iegid	int
;	O
if	O
(	O
fwait	int
)	O
iflag	int
=	O
0	int
;	O
else	O
iflag	int
=	O
iSunblock	int
;	O
if	O
(	O
fuser	int
)	O
{	O
if	O
(	O
!	O
fsuser_perms	(*(int),*(int))->(int)
(	O
&	O
ieuid	int
,	O
&	O
iegid	int
)	O
)	O
return	O
FALSE	O
;	O
}	O
q	*(struct)
->	O
o	int
=	O
open	(*(char),int)->(int)
(	O
q	*(struct)
->	O
zdevice	*(char)
,	O
O_RDWR	int
|	O
iflag	int
)	O
;	O
if	O
(	O
q	*(struct)
->	O
o	int
<	O
0	int
)	O
{	O
if	O
(	O
!	O
fwait	int
&&	O
iSunblock	int
!=	O
O_NONBLOCK	int
&&	O
errno	O
==	O
EINVAL	int
)	O
{	O
iSunblock	int
=	O
O_NONBLOCK	int
;	O
q	*(struct)
->	O
o	int
=	O
open	(*(char),int)->(int)
(	O
q	*(struct)
->	O
zdevice	*(char)
,	O
O_RDWR	int
|	O
O_NONBLOCK	int
)	O
;	O
}	O
if	O
(	O
q	*(struct)
->	O
o	int
<	O
0	int
)	O
{	O
int	O
ierr	int
;	O
ierr	int
=	O
errno	O
;	O
if	O
(	O
fuser	int
)	O
(	O
void	O
)	O
fsuucp_perms	(long,long)->(int)
(	O
(	O
long	O
)	O
ieuid	int
,	O
(	O
long	O
)	O
iegid	int
)	O
;	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"open (%s): %s"	*(char)
,	O
q	*(struct)
->	O
zdevice	*(char)
,	O
strerror	(int)->(*(char))
(	O
ierr	int
)	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
if	O
(	O
fuser	int
)	O
{	O
if	O
(	O
!	O
fsuucp_perms	(long,long)->(int)
(	O
(	O
long	O
)	O
ieuid	int
,	O
(	O
long	O
)	O
iegid	int
)	O
)	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
fcntl	(int,int)->(int)
(	O
q	*(struct)
->	O
o	int
,	O
F_SETFD	int
,	O
fcntl	(int,int)->(int)
(	O
q	*(struct)
->	O
o	int
,	O
F_GETFD	int
,	O
0	int
)	O
|	O
FD_CLOEXEC	int
)	O
<	O
0	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"fcntl (FD_CLOEXEC): %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
q	*(struct)
->	O
iflags	int
=	O
fcntl	(int,int)->(int)
(	O
q	*(struct)
->	O
o	int
,	O
F_GETFL	int
,	O
0	int
)	O
;	O
if	O
(	O
q	*(struct)
->	O
iflags	int
<	O
0	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"fcntl: %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
q	*(struct)
->	O
iwr_flags	int
=	O
-	O
1	int
;	O
if	O
(	O
!	O
fsblock	(*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)),int)->(int)
(	O
q	*(struct)
,	O
TRUE	O
)	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
!	O
fgetterminfo	O
(	O
q	*(struct)
->	O
o	int
,	O
&	O
q	*(struct)
->	O
sorig	struct(int,int,int,int,char,array(char),int,int)
)	O
)	O
{	O
q	*(struct)
->	O
fterminal	int
=	O
FALSE	O
;	O
return	O
TRUE	O
;	O
}	O
q	*(struct)
->	O
fterminal	int
=	O
TRUE	O
;	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
=	O
q	*(struct)
->	O
sorig	struct(int,int,int,int,char,array(char),int,int)
;	O
if	O
(	O
ibaud	long
==	O
0	int
)	O
ib	int
=	O
cfgetospeed	(*(struct(int,int,int,int,char,array(char),int,int)))->(int)
(	O
&	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
)	O
;	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_iflag	int
&=	O
~	O
ICLEAR_IFLAG	O
;	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_oflag	int
&=	O
~	O
ICLEAR_OFLAG	O
;	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cflag	int
&=	O
~	O
ICLEAR_CFLAG	O
;	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cflag	int
|=	O
ISET_CFLAG	O
;	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_lflag	int
&=	O
~	O
ICLEAR_LFLAG	O
;	O
cSmin	int
=	O
1	int
;	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cc	array(char)
[	O
VMIN	int
]	O
=	O
cSmin	int
;	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cc	array(char)
[	O
VTIME	int
]	O
=	O
1	int
;	O
(	O
void	O
)	O
cfsetospeed	(*(struct(int,int,int,int,char,array(char),int,int)),int)->(int)
(	O
&	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
,	O
ib	int
)	O
;	O
(	O
void	O
)	O
cfsetispeed	(*(struct(int,int,int,int,char,array(char),int,int)),int)->(int)
(	O
&	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
,	O
ib	int
)	O
;	O
(	O
void	O
)	O
tcflush	(int,int)->(int)
(	O
q	*(struct)
->	O
o	int
,	O
TCIFLUSH	int
)	O
;	O
switch	O
(	O
tlocal	enum(int,int,int)
)	O
{	O
case	O
SET_CLOCAL	int
:	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cflag	int
|=	O
CLOCAL	int
;	O
break	O
;	O
case	O
CLEAR_CLOCAL	int
:	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cflag	int
&=	O
~	O
CLOCAL	int
;	O
break	O
;	O
case	O
IGNORE_CLOCAL	int
:	O
break	O
;	O
}	O
if	O
(	O
!	O
fsetterminfo	O
(	O
q	*(struct)
->	O
o	int
,	O
&	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
)	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Can't set terminal settings: %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
(	O
void	O
)	O
ioctl	(int,long)->(int)
(	O
q	*(struct)
->	O
o	int
,	O
TIOCSCTTY	int
,	O
0	int
)	O
;	O
if	O
(	O
ibaud	long
!=	O
0	int
)	O
q	*(struct)
->	O
ibaud	long
=	O
ibaud	long
;	O
else	O
{	O
size_t	long
i	long
;	O
q	*(struct)
->	O
ibaud	long
=	O
(	O
long	O
)	O
1200	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
CBAUD_TABLE	O
;	O
i	long
++	O
)	O
{	O
if	O
(	O
asSbaud_table	array(struct(int,long))
[	O
i	long
]	O
.	O
icode	int
==	O
ib	int
&&	O
asSbaud_table	array(struct(int,long))
[	O
i	long
]	O
.	O
ibaud	long
!=	O
0	int
)	O
{	O
q	*(struct)
->	O
ibaud	long
=	O
asSbaud_table	array(struct(int,long))
[	O
i	long
]	O
.	O
ibaud	long
;	O
break	O
;	O
}	O
}	O
DEBUG_MESSAGE1	O
(	O
DEBUG_PORT	O
,	O
"fsserial_open: Baud rate is %ld"	*(char)
,	O
q	*(struct)
->	O
ibaud	long
)	O
;	O
}	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
fsstdin_open	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),long,int,int)->(int)
(	O
qconn	*(struct)
,	O
ibaud	long
,	O
fwait	int
,	O
fuser	int
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
long	O
ibaud	long
;	O
boolean	int
fwait	int
;	O
boolean	int
fuser	int
;	O
{	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
q	*(struct)
;	O
q	*(struct)
=	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
)	O
qconn	*(struct)
->	O
psysdep	*(void)
;	O
q	*(struct)
->	O
ord	int
=	O
0	int
;	O
q	*(struct)
->	O
owr	int
=	O
1	int
;	O
q	*(struct)
->	O
o	int
=	O
q	*(struct)
->	O
ord	int
;	O
if	O
(	O
!	O
fsserial_open	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),long,int,int,enum(int,int,int))->(int)
(	O
qconn	*(struct)
,	O
ibaud	long
,	O
fwait	int
,	O
fuser	int
,	O
IGNORE_CLOCAL	int
)	O
)	O
return	O
FALSE	O
;	O
q	*(struct)
->	O
iwr_flags	int
=	O
fcntl	(int,int)->(int)
(	O
q	*(struct)
->	O
owr	int
,	O
F_GETFL	int
,	O
0	int
)	O
;	O
if	O
(	O
q	*(struct)
->	O
iwr_flags	int
<	O
0	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"fcntl: %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
fsmodem_open	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),long,int,int)->(int)
(	O
qconn	*(struct)
,	O
ibaud	long
,	O
fwait	int
,	O
fuser	int
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
long	O
ibaud	long
;	O
boolean	int
fwait	int
;	O
boolean	int
fuser	int
;	O
{	O
struct	O
uuconf_modem_port	struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct))
*	O
qm	*(struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct(*(char),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,struct(*`,*`,int,*`,int),struct(*`,*`,int,*`,int),*(struct`),int,*(void)))))
;	O
qm	*(struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct(*(char),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,struct(*`,*`,int,*`,int),struct(*`,*`,int,*`,int),*(struct`),int,*(void)))))
=	O
&	O
qconn	*(struct)
->	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_smodem	struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct))
;	O
if	O
(	O
ibaud	long
==	O
(	O
long	O
)	O
0	int
)	O
ibaud	long
=	O
qm	*(struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct(*(char),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,struct(*`,*`,int,*`,int),struct(*`,*`,int,*`,int),*(struct`),int,*(void)))))
->	O
uuconf_ibaud	long
;	O
if	O
(	O
!	O
fsserial_open	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),long,int,int,enum(int,int,int))->(int)
(	O
qconn	*(struct)
,	O
ibaud	long
,	O
fwait	int
,	O
fuser	int
,	O
fwait	int
?	O
CLEAR_CLOCAL	int
:	O
SET_CLOCAL	int
)	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
fwait	int
&&	O
!	O
fsserial_hardflow	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int)->(int)
(	O
qconn	*(struct)
,	O
qm	*(struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct(*(char),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,struct(*`,*`,int,*`,int),struct(*`,*`,int,*`,int),*(struct`),int,*(void)))))
->	O
uuconf_fhardflow	int
)	O
)	O
return	O
FALSE	O
;	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
fsdirect_open	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),long,int,int)->(int)
(	O
qconn	*(struct)
,	O
ibaud	long
,	O
fwait	int
,	O
fuser	int
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
long	O
ibaud	long
;	O
boolean	int
fwait	int
;	O
boolean	int
fuser	int
;	O
{	O
struct	O
uuconf_direct_port	struct(*(char),long,int,int)
*	O
qd	*(struct(*(char),long,int,int))
;	O
qd	*(struct(*(char),long,int,int))
=	O
&	O
qconn	*(struct)
->	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_sdirect	struct(*(char),long,int,int)
;	O
if	O
(	O
ibaud	long
==	O
(	O
long	O
)	O
0	int
)	O
ibaud	long
=	O
qd	*(struct(*(char),long,int,int))
->	O
uuconf_ibaud	long
;	O
if	O
(	O
!	O
fsserial_open	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),long,int,int,enum(int,int,int))->(int)
(	O
qconn	*(struct)
,	O
ibaud	long
,	O
fwait	int
,	O
fuser	int
,	O
qd	*(struct(*(char),long,int,int))
->	O
uuconf_fcarrier	int
?	O
CLEAR_CLOCAL	int
:	O
SET_CLOCAL	int
)	O
)	O
return	O
FALSE	O
;	O
return	O
fsserial_hardflow	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int)->(int)
(	O
qconn	*(struct)
,	O
qd	*(struct(*(char),long,int,int))
->	O
uuconf_fhardflow	int
)	O
;	O
}	O
static	O
boolean	int
fsblock	(*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)),int)->(int)
(	O
qs	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
,	O
fblock	int
)	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
qs	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
;	O
boolean	int
fblock	int
;	O
{	O
int	O
iwant	int
;	O
int	O
isys	int
;	O
if	O
(	O
fblock	int
)	O
iwant	int
=	O
qs	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
iflags	int
&	O
~	O
(	O
O_NDELAY	O
|	O
O_NONBLOCK	int
)	O
;	O
else	O
iwant	int
=	O
qs	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
iflags	int
|	O
iSunblock	int
;	O
if	O
(	O
iwant	int
==	O
qs	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
iflags	int
)	O
return	O
TRUE	O
;	O
isys	int
=	O
fcntl	(int,int)->(int)
(	O
qs	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
,	O
F_SETFL	int
,	O
iwant	int
)	O
;	O
if	O
(	O
isys	int
<	O
0	int
)	O
{	O
if	O
(	O
!	O
fblock	int
&&	O
iSunblock	int
!=	O
O_NONBLOCK	int
&&	O
errno	O
==	O
EINVAL	int
)	O
{	O
iSunblock	int
=	O
O_NONBLOCK	int
;	O
iwant	int
=	O
qs	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
iflags	int
|	O
O_NONBLOCK	int
;	O
isys	int
=	O
fcntl	(int,int)->(int)
(	O
qs	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
,	O
F_SETFL	int
,	O
iwant	int
)	O
;	O
}	O
if	O
(	O
isys	int
<	O
0	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"fcntl: %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
qs	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
iflags	int
=	O
iwant	int
;	O
if	O
(	O
qs	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
iwr_flags	int
>=	O
0	int
&&	O
qs	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
ord	int
!=	O
qs	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
owr	int
)	O
{	O
if	O
(	O
fblock	int
)	O
iwant	int
=	O
qs	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
iwr_flags	int
&	O
~	O
(	O
O_NDELAY	O
|	O
O_NONBLOCK	int
)	O
;	O
else	O
iwant	int
=	O
qs	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
iwr_flags	int
|	O
iSunblock	int
;	O
isys	int
=	O
fcntl	(int,int)->(int)
(	O
qs	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
owr	int
,	O
F_SETFL	int
,	O
iwant	int
)	O
;	O
if	O
(	O
isys	int
<	O
0	int
)	O
{	O
if	O
(	O
!	O
fblock	int
&&	O
iSunblock	int
!=	O
O_NONBLOCK	int
&&	O
errno	O
==	O
EINVAL	int
)	O
{	O
iSunblock	int
=	O
O_NONBLOCK	int
;	O
iwant	int
=	O
qs	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
iwr_flags	int
|	O
O_NONBLOCK	int
;	O
isys	int
=	O
fcntl	(int,int)->(int)
(	O
qs	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
owr	int
,	O
F_SETFL	int
,	O
iwant	int
)	O
;	O
}	O
if	O
(	O
isys	int
<	O
0	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"fcntl: %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
qs	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
iwr_flags	int
=	O
iwant	int
;	O
}	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
fsserial_close	(*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)))->(int)
(	O
q	*(struct)
)	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
q	*(struct)
;	O
{	O
if	O
(	O
q	*(struct)
->	O
o	int
>=	O
0	int
)	O
{	O
if	O
(	O
q	*(struct)
->	O
fterminal	int
)	O
{	O
fSalarm	int
=	O
FALSE	O
;	O
if	O
(	O
fsysdep_catch	()->(int)
(	O
)	O
)	O
{	O
usysdep_start_catch	()->(void)
(	O
)	O
;	O
usset_signal	(int,*((int)->(void)),int,*(int))->(void)
(	O
SIGALRM	int
,	O
usalarm	(int)->(void)
,	O
TRUE	O
,	O
(	O
boolean	int
*	O
)	O
NULL	O
)	O
;	O
(	O
void	O
)	O
alarm	(int)->(int)
(	O
30	int
)	O
;	O
(	O
void	O
)	O
fsetterminfodrain	O
(	O
q	*(struct)
->	O
o	int
,	O
&	O
q	*(struct)
->	O
sorig	struct(int,int,int,int,char,array(char),int,int)
)	O
;	O
}	O
usset_signal	(int,*((int)->(void)),int,*(int))->(void)
(	O
SIGALRM	int
,	O
SIG_IGN	O
,	O
TRUE	O
,	O
(	O
boolean	int
*	O
)	O
NULL	O
)	O
;	O
(	O
void	O
)	O
alarm	(int)->(int)
(	O
0	int
)	O
;	O
usysdep_end_catch	()->(void)
(	O
)	O
;	O
if	O
(	O
fSalarm	int
)	O
(	O
void	O
)	O
fsetterminfo	O
(	O
q	*(struct)
->	O
o	int
,	O
&	O
q	*(struct)
->	O
sorig	struct(int,int,int,int,char,array(char),int,int)
)	O
;	O
}	O
(	O
void	O
)	O
ioctl	(int,long)->(int)
(	O
q	*(struct)
->	O
o	int
,	O
TIOCNOTTY	int
,	O
(	O
char	O
*	O
)	O
NULL	O
)	O
;	O
(	O
void	O
)	O
close	(int)->(int)
(	O
q	*(struct)
->	O
o	int
)	O
;	O
q	*(struct)
->	O
o	int
=	O
-	O
1	int
;	O
sleep	(int)->(int)
(	O
2	int
)	O
;	O
}	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
fsstdin_close	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),int)->(int)
(	O
qconn	*(struct)
,	O
puuconf	*(void)
,	O
qdialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
,	O
fsuccess	int
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
pointer	*(void)
puuconf	*(void)
ATTRIBUTE_UNUSED	O
;	O
struct	O
uuconf_dialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*(*`))))),int,*(void))
*	O
qdialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
ATTRIBUTE_UNUSED	O
;	O
boolean	int
fsuccess	int
ATTRIBUTE_UNUSED	O
;	O
{	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
;	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
=	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
)	O
qconn	*(struct)
->	O
psysdep	*(void)
;	O
(	O
void	O
)	O
close	(int)->(int)
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
owr	int
)	O
;	O
(	O
void	O
)	O
close	(int)->(int)
(	O
2	int
)	O
;	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
=	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
ord	int
;	O
return	O
fsserial_close	(*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)))->(int)
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
)	O
;	O
}	O
static	O
boolean	int
fsmodem_close	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),int)->(int)
(	O
qconn	*(struct)
,	O
puuconf	*(void)
,	O
qdialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
,	O
fsuccess	int
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
pointer	*(void)
puuconf	*(void)
;	O
struct	O
uuconf_dialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*(*`))))),int,*(void))
*	O
qdialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
;	O
boolean	int
fsuccess	int
;	O
{	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
;	O
boolean	int
fret	int
;	O
struct	O
uuconf_dialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*(*`))))),int,*(void))
sdialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*`)))),int,*(void))
;	O
const	O
struct	O
uuconf_chat	struct(*(*(char)),*(*(char)),int,*(*(char)),int)
*	O
qchat	*(struct(*(*(char)),*(*(char)),int,*(*(char)),int))
;	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
=	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
)	O
qconn	*(struct)
->	O
psysdep	*(void)
;	O
fret	int
=	O
TRUE	O
;	O
if	O
(	O
qdialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
==	O
NULL	O
)	O
{	O
if	O
(	O
qconn	*(struct)
->	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_smodem	struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct))
.	O
uuconf_pzdialer	*(*(char))
!=	O
NULL	O
)	O
{	O
const	O
char	O
*	O
zdialer	*(char)
;	O
int	O
iuuconf	int
;	O
zdialer	*(char)
=	O
qconn	*(struct)
->	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_smodem	struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct))
.	O
uuconf_pzdialer	*(*(char))
[	O
0	int
]	O
;	O
iuuconf	int
=	O
uuconf_dialer_info	(*(void),*(char),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))))->(int)
(	O
puuconf	*(void)
,	O
zdialer	*(char)
,	O
&	O
sdialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*`)))),int,*(void))
)	O
;	O
if	O
(	O
iuuconf	int
==	O
UUCONF_SUCCESS	O
)	O
qdialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
=	O
&	O
sdialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*`)))),int,*(void))
;	O
else	O
{	O
ulog_uuconf	(enum(int,int,int,int,int,int,int),*(void),int)->(void)
(	O
LOG_ERROR	int
,	O
puuconf	*(void)
,	O
iuuconf	int
)	O
;	O
fret	int
=	O
FALSE	O
;	O
}	O
}	O
else	O
qdialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
=	O
qconn	*(struct)
->	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_smodem	struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct))
.	O
uuconf_qdialer	*(struct)
;	O
}	O
qchat	*(struct(*(*(char)),*(*(char)),int,*(*(char)),int))
=	O
NULL	O
;	O
if	O
(	O
qdialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
!=	O
NULL	O
)	O
{	O
if	O
(	O
fsuccess	int
)	O
qchat	*(struct(*(*(char)),*(*(char)),int,*(*(char)),int))
=	O
&	O
qdialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
->	O
uuconf_scomplete	struct(*(*(char)),*(*(char)),int,*(*(char)),int)
;	O
else	O
qchat	*(struct(*(*(char)),*(*(char)),int,*(*(char)),int))
=	O
&	O
qdialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
->	O
uuconf_sabort	struct(*(*(char)),*(*(char)),int,*(*(char)),int)
;	O
}	O
if	O
(	O
qchat	*(struct(*(*(char)),*(*(char)),int,*(*(char)),int))
!=	O
NULL	O
&&	O
(	O
qchat	*(struct(*(*(char)),*(*(char)),int,*(*(char)),int))
->	O
uuconf_pzprogram	*(*(char))
!=	O
NULL	O
||	O
qchat	*(struct(*(*(char)),*(*(char)),int,*(*(char)),int))
->	O
uuconf_pzchat	*(*(char))
!=	O
NULL	O
)	O
)	O
{	O
boolean	int
fsighup_ignored	int
;	O
HELD_SIG_MASK	O
smask	struct(array(long))
;	O
int	O
i	long
;	O
sig_atomic_t	int
afhold	array(int)
[	O
INDEXSIG_COUNT	O
]	O
;	O
(	O
void	O
)	O
fsmodem_carrier	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int)->(int)
(	O
qconn	*(struct)
,	O
FALSE	O
)	O
;	O
usset_signal	(int,*((int)->(void)),int,*(int))->(void)
(	O
SIGHUP	int
,	O
SIG_IGN	O
,	O
FALSE	O
,	O
&	O
fsighup_ignored	int
)	O
;	O
smask	struct(array(long))
=	O
isblocksigs	()->(struct(array(long)))
(	O
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
INDEXSIG_COUNT	O
;	O
i	long
++	O
)	O
{	O
afhold	array(int)
[	O
i	long
]	O
=	O
afSignal	array(int)
[	O
i	long
]	O
;	O
afSignal	array(int)
[	O
i	long
]	O
=	O
FALSE	O
;	O
}	O
usunblocksigs	O
(	O
smask	struct(array(long))
)	O
;	O
if	O
(	O
!	O
fchat	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(struct(*(*(char)),*(*(char)),int,*(*(char)),int)),*(struct(*(char),*(*(char)),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),long,long,*(char),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*`)),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),*(char),int,*(char),long)->(int)
(	O
qconn	*(struct)
,	O
puuconf	*(void)
,	O
qchat	*(struct(*(*(char)),*(*(char)),int,*(*(char)),int))
,	O
(	O
const	O
struct	O
uuconf_system	struct(*(char),*(*(char)),*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),int,int,*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct(int,*(*`))))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))
*	O
)	O
NULL	O
,	O
(	O
const	O
struct	O
uuconf_dialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*(*`))))),int,*(void))
*	O
)	O
NULL	O
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
FALSE	O
,	O
qconn	*(struct)
->	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_zname	*(char)
,	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
ibaud	long
)	O
)	O
fret	int
=	O
FALSE	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
INDEXSIG_COUNT	O
;	O
i	long
++	O
)	O
if	O
(	O
afhold	array(int)
[	O
i	long
]	O
)	O
afSignal	array(int)
[	O
i	long
]	O
=	O
TRUE	O
;	O
if	O
(	O
!	O
fsighup_ignored	int
)	O
usset_signal	(int,*((int)->(void)),int,*(int))->(void)
(	O
SIGHUP	int
,	O
ussignal	(int)->(void)
,	O
TRUE	O
,	O
(	O
boolean	int
*	O
)	O
NULL	O
)	O
;	O
}	O
if	O
(	O
qdialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
!=	O
NULL	O
&&	O
qdialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
==	O
&	O
sdialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*`)))),int,*(void))
)	O
(	O
void	O
)	O
uuconf_dialer_free	(*(void),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))))->(int)
(	O
puuconf	*(void)
,	O
&	O
sdialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*`)))),int,*(void))
)	O
;	O
if	O
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
fterminal	int
)	O
{	O
(	O
void	O
)	O
cfsetospeed	(*(struct(int,int,int,int,char,array(char),int,int)),int)->(int)
(	O
&	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
,	O
B0	int
)	O
;	O
fSalarm	int
=	O
FALSE	O
;	O
if	O
(	O
fsysdep_catch	()->(int)
(	O
)	O
)	O
{	O
usysdep_start_catch	()->(void)
(	O
)	O
;	O
usset_signal	(int,*((int)->(void)),int,*(int))->(void)
(	O
SIGALRM	int
,	O
usalarm	(int)->(void)
,	O
TRUE	O
,	O
(	O
boolean	int
*	O
)	O
NULL	O
)	O
;	O
(	O
void	O
)	O
alarm	(int)->(int)
(	O
30	int
)	O
;	O
(	O
void	O
)	O
fsetterminfodrain	O
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
,	O
&	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
)	O
;	O
}	O
usset_signal	(int,*((int)->(void)),int,*(int))->(void)
(	O
SIGALRM	int
,	O
SIG_IGN	O
,	O
TRUE	O
,	O
(	O
boolean	int
*	O
)	O
NULL	O
)	O
;	O
(	O
void	O
)	O
alarm	(int)->(int)
(	O
0	int
)	O
;	O
usysdep_end_catch	()->(void)
(	O
)	O
;	O
sleep	(int)->(int)
(	O
2	int
)	O
;	O
}	O
if	O
(	O
!	O
fsserial_close	(*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)))->(int)
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
)	O
)	O
fret	int
=	O
FALSE	O
;	O
return	O
fret	int
;	O
}	O
static	O
boolean	int
fsdirect_close	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),int)->(int)
(	O
qconn	*(struct)
,	O
puuconf	*(void)
,	O
qdialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
,	O
fsuccess	int
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
pointer	*(void)
puuconf	*(void)
ATTRIBUTE_UNUSED	O
;	O
struct	O
uuconf_dialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*(*`))))),int,*(void))
*	O
qdialer	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
ATTRIBUTE_UNUSED	O
;	O
boolean	int
fsuccess	int
ATTRIBUTE_UNUSED	O
;	O
{	O
return	O
fsserial_close	(*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)))->(int)
(	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
)	O
qconn	*(struct)
->	O
psysdep	*(void)
)	O
;	O
}	O
boolean	int
fsysdep_modem_begin_dial	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))))->(int)
(	O
qconn	*(struct)
,	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
struct	O
uuconf_dialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*(*`))))),int,*(void))
*	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
;	O
{	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
;	O
const	O
char	O
*	O
z	*(char)
;	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
=	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
)	O
qconn	*(struct)
->	O
psysdep	*(void)
;	O
if	O
(	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
->	O
uuconf_fdtr_toggle	int
)	O
{	O
if	O
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
fterminal	int
)	O
{	O
sterminal	struct(int,int,int,int,char,array(char),int,int)
sbaud	struct(int,int,int,int,char,array(char),int,int)
;	O
sbaud	struct(int,int,int,int,char,array(char),int,int)
=	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
;	O
(	O
void	O
)	O
cfsetospeed	(*(struct(int,int,int,int,char,array(char),int,int)),int)->(int)
(	O
&	O
sbaud	struct(int,int,int,int,char,array(char),int,int)
,	O
B0	int
)	O
;	O
(	O
void	O
)	O
fsetterminfodrain	O
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
,	O
&	O
sbaud	struct(int,int,int,int,char,array(char),int,int)
)	O
;	O
sleep	(int)->(int)
(	O
2	int
)	O
;	O
(	O
void	O
)	O
fsetterminfo	O
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
,	O
&	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
)	O
;	O
}	O
if	O
(	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
->	O
uuconf_fdtr_toggle_wait	int
)	O
sleep	(int)->(int)
(	O
2	int
)	O
;	O
}	O
if	O
(	O
!	O
fsmodem_carrier	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int)->(int)
(	O
qconn	*(struct)
,	O
FALSE	O
)	O
)	O
return	O
FALSE	O
;	O
z	*(char)
=	O
qconn	*(struct)
->	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_smodem	struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct))
.	O
uuconf_zdial_device	*(char)
;	O
if	O
(	O
z	*(char)
!=	O
NULL	O
)	O
{	O
char	O
*	O
zfree	*(char)
;	O
int	O
o	int
;	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
ohold	int
=	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
;	O
zfree	*(char)
=	O
NULL	O
;	O
if	O
(	O
*	O
z	*(char)
!=	O
'/'	O
)	O
{	O
zfree	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
sizeof	O
"/dev/"	*(char)
+	O
strlen	(*(char))->(long)
(	O
z	*(char)
)	O
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
zfree	*(char)
,	O
"/dev/%s"	*(char)
,	O
z	*(char)
)	O
;	O
z	*(char)
=	O
zfree	*(char)
;	O
}	O
o	int
=	O
open	(*(char),int)->(int)
(	O
(	O
char	O
*	O
)	O
z	*(char)
,	O
O_RDWR	int
|	O
O_NOCTTY	int
)	O
;	O
if	O
(	O
o	int
<	O
0	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"open (%s): %s"	*(char)
,	O
z	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zfree	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
ubuffree	(*(char))->(void)
(	O
zfree	*(char)
)	O
;	O
if	O
(	O
fcntl	(int,int)->(int)
(	O
o	int
,	O
F_SETFD	int
,	O
fcntl	(int,int)->(int)
(	O
o	int
,	O
F_GETFD	int
,	O
0	int
)	O
|	O
FD_CLOEXEC	int
)	O
<	O
0	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"fcntl (FD_CLOEXEC): %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
(	O
void	O
)	O
close	(int)->(int)
(	O
o	int
)	O
;	O
return	O
FALSE	O
;	O
}	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
=	O
o	int
;	O
}	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
fsmodem_carrier	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int)->(int)
(	O
qconn	*(struct)
,	O
fcarrier	int
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
boolean	int
fcarrier	int
;	O
{	O
register	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
q	*(struct)
;	O
struct	O
uuconf_modem_port	struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct))
*	O
qm	*(struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct(*(char),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,struct(*`,*`,int,*`,int),struct(*`,*`,int,*`,int),*(struct`),int,*(void)))))
;	O
q	*(struct)
=	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
)	O
qconn	*(struct)
->	O
psysdep	*(void)
;	O
if	O
(	O
!	O
q	*(struct)
->	O
fterminal	int
)	O
return	O
TRUE	O
;	O
qm	*(struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct(*(char),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,struct(*`,*`,int,*`,int),struct(*`,*`,int,*`,int),*(struct`),int,*(void)))))
=	O
&	O
qconn	*(struct)
->	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_smodem	struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct))
;	O
if	O
(	O
fcarrier	int
)	O
{	O
if	O
(	O
qm	*(struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct(*(char),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,struct(*`,*`,int,*`,int),struct(*`,*`,int,*`,int),*(struct`),int,*(void)))))
->	O
uuconf_fcarrier	int
)	O
{	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cflag	int
&=	O
~	O
CLOCAL	int
;	O
if	O
(	O
!	O
fsetterminfo	O
(	O
q	*(struct)
->	O
o	int
,	O
&	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
)	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Can't clear CLOCAL: %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
if	O
(	O
!	O
fsserial_hardflow	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int)->(int)
(	O
qconn	*(struct)
,	O
qm	*(struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct(*(char),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,struct(*`,*`,int,*`,int),struct(*`,*`,int,*`,int),*(struct`),int,*(void)))))
->	O
uuconf_fhardflow	int
)	O
)	O
return	O
FALSE	O
;	O
}	O
else	O
{	O
if	O
(	O
!	O
fsserial_hardflow	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int)->(int)
(	O
qconn	*(struct)
,	O
FALSE	O
)	O
)	O
return	O
FALSE	O
;	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cflag	int
|=	O
CLOCAL	int
;	O
if	O
(	O
!	O
fsetterminfo	O
(	O
q	*(struct)
->	O
o	int
,	O
&	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
)	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Can't set CLOCAL: %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
fsserial_hardflow	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int)->(int)
(	O
qconn	*(struct)
,	O
fhardflow	int
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
boolean	int
fhardflow	int
;	O
{	O
register	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
q	*(struct)
;	O
q	*(struct)
=	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
)	O
qconn	*(struct)
->	O
psysdep	*(void)
;	O
if	O
(	O
!	O
q	*(struct)
->	O
fterminal	int
)	O
return	O
TRUE	O
;	O
if	O
(	O
fhardflow	int
)	O
{	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cflag	int
|=	O
CRTSCTS	int
;	O
if	O
(	O
!	O
fsetterminfo	O
(	O
q	*(struct)
->	O
o	int
,	O
&	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
)	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Can't enable hardware flow control: %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
else	O
{	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cflag	int
&=	O
~	O
CRTSCTS	int
;	O
if	O
(	O
!	O
fsetterminfo	O
(	O
q	*(struct)
->	O
o	int
,	O
&	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
)	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Can't disable hardware flow control: %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
return	O
TRUE	O
;	O
}	O
boolean	int
fsysdep_modem_end_dial	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))))->(int)
(	O
qconn	*(struct)
,	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
struct	O
uuconf_dialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*(*`))))),int,*(void))
*	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
;	O
{	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
q	*(struct)
;	O
q	*(struct)
=	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
)	O
qconn	*(struct)
->	O
psysdep	*(void)
;	O
if	O
(	O
qconn	*(struct)
->	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_smodem	struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct))
.	O
uuconf_zdial_device	*(char)
!=	O
NULL	O
)	O
{	O
(	O
void	O
)	O
close	(int)->(int)
(	O
q	*(struct)
->	O
o	int
)	O
;	O
q	*(struct)
->	O
o	int
=	O
q	*(struct)
->	O
ohold	int
;	O
}	O
if	O
(	O
qconn	*(struct)
->	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_smodem	struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct))
.	O
uuconf_fcarrier	int
&&	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
->	O
uuconf_fcarrier	int
)	O
{	O
if	O
(	O
!	O
fsmodem_carrier	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int)->(int)
(	O
qconn	*(struct)
,	O
TRUE	O
)	O
)	O
return	O
FALSE	O
;	O
{	O
int	O
onew	int
;	O
onew	int
=	O
open	(*(char),int)->(int)
(	O
q	*(struct)
->	O
zdevice	*(char)
,	O
O_RDWR	int
)	O
;	O
if	O
(	O
onew	int
>=	O
0	int
)	O
{	O
boolean	int
fbad	int
;	O
int	O
iflags	int
;	O
fbad	int
=	O
FALSE	O
;	O
if	O
(	O
fcntl	(int,int)->(int)
(	O
onew	int
,	O
F_SETFD	int
,	O
fcntl	(int,int)->(int)
(	O
onew	int
,	O
F_GETFD	int
,	O
0	int
)	O
|	O
FD_CLOEXEC	int
)	O
<	O
0	int
)	O
fbad	int
=	O
TRUE	O
;	O
if	O
(	O
!	O
fbad	int
)	O
{	O
iflags	int
=	O
fcntl	(int,int)->(int)
(	O
onew	int
,	O
F_GETFL	int
,	O
0	int
)	O
;	O
if	O
(	O
iflags	int
<	O
0	int
||	O
!	O
fsetterminfo	O
(	O
onew	int
,	O
&	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
)	O
)	O
fbad	int
=	O
TRUE	O
;	O
}	O
if	O
(	O
fbad	int
)	O
(	O
void	O
)	O
close	(int)->(int)
(	O
onew	int
)	O
;	O
else	O
{	O
(	O
void	O
)	O
close	(int)->(int)
(	O
q	*(struct)
->	O
o	int
)	O
;	O
q	*(struct)
->	O
o	int
=	O
onew	int
;	O
q	*(struct)
->	O
iflags	int
=	O
iflags	int
;	O
}	O
}	O
}	O
}	O
return	O
TRUE	O
;	O
}	O
boolean	int
fsysdep_conn_read	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),*(long),long,int,int)->(int)
(	O
qconn	*(struct)
,	O
zbuf	*(char)
,	O
pclen	*(long)
,	O
cmin	long
,	O
ctimeout	int
,	O
freport	int
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
char	O
*	O
zbuf	*(char)
;	O
size_t	long
*	O
pclen	*(long)
;	O
size_t	long
cmin	long
;	O
int	O
ctimeout	int
;	O
boolean	int
freport	int
;	O
{	O
CATCH_PROTECT	O
size_t	long
cwant	long
;	O
boolean	int
fret	int
;	O
register	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
const	O
q	*(struct)
=	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
)	O
qconn	*(struct)
->	O
psysdep	*(void)
;	O
int	O
cwouldblock	int
;	O
cwant	long
=	O
*	O
pclen	*(long)
;	O
*	O
pclen	*(long)
=	O
0	int
;	O
if	O
(	O
ctimeout	int
<=	O
0	int
)	O
return	O
TRUE	O
;	O
if	O
(	O
!	O
fsblock	(*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)),int)->(int)
(	O
q	*(struct)
,	O
TRUE	O
)	O
)	O
return	O
FALSE	O
;	O
fSalarm	int
=	O
FALSE	O
;	O
if	O
(	O
fsysdep_catch	()->(int)
(	O
)	O
)	O
{	O
usysdep_start_catch	()->(void)
(	O
)	O
;	O
usset_signal	(int,*((int)->(void)),int,*(int))->(void)
(	O
SIGALRM	int
,	O
usalarm	(int)->(void)
,	O
TRUE	O
,	O
(	O
boolean	int
*	O
)	O
NULL	O
)	O
;	O
alarm	(int)->(int)
(	O
ctimeout	int
)	O
;	O
}	O
else	O
{	O
}	O
fret	int
=	O
FALSE	O
;	O
cwouldblock	int
=	O
0	int
;	O
while	O
(	O
TRUE	O
)	O
{	O
int	O
cgot	int
;	O
if	O
(	O
q	*(struct)
->	O
fterminal	int
)	O
{	O
int	O
csetmin	int
;	O
if	O
(	O
cmin	long
<	O
127	int
)	O
csetmin	int
=	O
cmin	long
;	O
else	O
csetmin	int
=	O
127	int
;	O
if	O
(	O
csetmin	int
!=	O
cSmin	int
)	O
{	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cc	array(char)
[	O
VMIN	int
]	O
=	O
csetmin	int
;	O
while	O
(	O
!	O
fsetterminfo	O
(	O
q	*(struct)
->	O
o	int
,	O
&	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
)	O
)	O
{	O
if	O
(	O
errno	O
!=	O
EINTR	int
||	O
FGOT_QUIT_SIGNAL	O
(	O
)	O
)	O
{	O
int	O
ierr	int
;	O
ierr	int
=	O
errno	O
;	O
usset_signal	(int,*((int)->(void)),int,*(int))->(void)
(	O
SIGALRM	int
,	O
SIG_IGN	O
,	O
TRUE	O
,	O
(	O
boolean	int
*	O
)	O
NULL	O
)	O
;	O
alarm	(int)->(int)
(	O
0	int
)	O
;	O
usysdep_end_catch	()->(void)
(	O
)	O
;	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Can't set MIN for terminal: %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
ierr	int
)	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
fSalarm	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Timed out when setting MIN to %d; retrying"	*(char)
,	O
csetmin	int
)	O
;	O
fSalarm	int
=	O
FALSE	O
;	O
alarm	(int)->(int)
(	O
ctimeout	int
)	O
;	O
}	O
}	O
cSmin	int
=	O
csetmin	int
;	O
}	O
}	O
if	O
(	O
FGOT_QUIT_SIGNAL	O
(	O
)	O
)	O
break	O
;	O
if	O
(	O
fSalarm	int
)	O
{	O
fret	int
=	O
TRUE	O
;	O
break	O
;	O
}	O
cgot	int
=	O
read	(int,*(void),long)->(long)
(	O
q	*(struct)
->	O
o	int
,	O
zbuf	*(char)
,	O
cwant	long
)	O
;	O
if	O
(	O
cgot	int
<	O
0	int
)	O
{	O
if	O
(	O
errno	O
==	O
EINTR	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
}	O
if	O
(	O
fSalarm	int
)	O
{	O
fret	int
=	O
TRUE	O
;	O
break	O
;	O
}	O
if	O
(	O
FGOT_QUIT_SIGNAL	O
(	O
)	O
)	O
break	O
;	O
}	O
if	O
(	O
cgot	int
>	O
0	int
)	O
cwouldblock	int
=	O
0	int
;	O
else	O
{	O
if	O
(	O
cgot	int
<	O
0	int
&&	O
errno	O
==	O
EINTR	int
)	O
cgot	int
=	O
0	int
;	O
else	O
if	O
(	O
cgot	int
<	O
0	int
&&	O
(	O
errno	O
==	O
EAGAIN	int
||	O
errno	O
==	O
EWOULDBLOCK	O
)	O
&&	O
cwouldblock	int
<	O
2	int
)	O
{	O
++	O
cwouldblock	int
;	O
cgot	int
=	O
0	int
;	O
}	O
else	O
{	O
int	O
ierr	int
;	O
ierr	int
=	O
errno	O
;	O
usset_signal	(int,*((int)->(void)),int,*(int))->(void)
(	O
SIGALRM	int
,	O
SIG_IGN	O
,	O
TRUE	O
,	O
(	O
boolean	int
*	O
)	O
NULL	O
)	O
;	O
alarm	(int)->(int)
(	O
0	int
)	O
;	O
usysdep_end_catch	()->(void)
(	O
)	O
;	O
if	O
(	O
freport	int
)	O
{	O
if	O
(	O
cgot	int
==	O
0	int
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Line disconnected"	*(char)
)	O
;	O
else	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"read: %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
ierr	int
)	O
)	O
;	O
}	O
return	O
FALSE	O
;	O
}	O
}	O
cwant	long
-=	O
cgot	int
;	O
if	O
(	O
(	O
size_t	long
)	O
cgot	int
>=	O
cmin	long
)	O
cmin	long
=	O
0	int
;	O
else	O
cmin	long
-=	O
cgot	int
;	O
zbuf	*(char)
+=	O
cgot	int
;	O
*	O
pclen	*(long)
+=	O
cgot	int
;	O
if	O
(	O
cmin	long
==	O
0	int
)	O
{	O
fret	int
=	O
TRUE	O
;	O
break	O
;	O
}	O
}	O
usset_signal	(int,*((int)->(void)),int,*(int))->(void)
(	O
SIGALRM	int
,	O
SIG_IGN	O
,	O
TRUE	O
,	O
(	O
boolean	int
*	O
)	O
NULL	O
)	O
;	O
alarm	(int)->(int)
(	O
0	int
)	O
;	O
usysdep_end_catch	()->(void)
(	O
)	O
;	O
return	O
fret	int
;	O
}	O
boolean	int
fsdouble_read	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),*(long),long,int,int)->(int)
(	O
qconn	*(struct)
,	O
zbuf	*(char)
,	O
pclen	*(long)
,	O
cmin	long
,	O
ctimeout	int
,	O
freport	int
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
char	O
*	O
zbuf	*(char)
;	O
size_t	long
*	O
pclen	*(long)
;	O
size_t	long
cmin	long
;	O
int	O
ctimeout	int
;	O
boolean	int
freport	int
;	O
{	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
;	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
=	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
)	O
qconn	*(struct)
->	O
psysdep	*(void)
;	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
=	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
ord	int
;	O
return	O
fsysdep_conn_read	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),*(long),long,int,int)->(int)
(	O
qconn	*(struct)
,	O
zbuf	*(char)
,	O
pclen	*(long)
,	O
cmin	long
,	O
ctimeout	int
,	O
freport	int
)	O
;	O
}	O
boolean	int
fsysdep_conn_write	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long)->(int)
(	O
qconn	*(struct)
,	O
zwrite	*(char)
,	O
cwrite	long
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
const	O
char	O
*	O
zwrite	*(char)
;	O
size_t	long
cwrite	long
;	O
{	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
q	*(struct)
;	O
int	O
czero	int
;	O
q	*(struct)
=	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
)	O
qconn	*(struct)
->	O
psysdep	*(void)
;	O
if	O
(	O
!	O
fsblock	(*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)),int)->(int)
(	O
q	*(struct)
,	O
TRUE	O
)	O
)	O
return	O
FALSE	O
;	O
czero	int
=	O
0	int
;	O
while	O
(	O
cwrite	long
>	O
0	int
)	O
{	O
int	O
cdid	int
;	O
while	O
(	O
TRUE	O
)	O
{	O
if	O
(	O
FGOT_QUIT_SIGNAL	O
(	O
)	O
)	O
return	O
FALSE	O
;	O
cdid	int
=	O
write	(int,*(void),long)->(long)
(	O
q	*(struct)
->	O
o	int
,	O
zwrite	*(char)
,	O
cwrite	long
)	O
;	O
if	O
(	O
cdid	int
>=	O
0	int
)	O
break	O
;	O
if	O
(	O
errno	O
!=	O
EINTR	int
)	O
break	O
;	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
}	O
if	O
(	O
cdid	int
<	O
0	int
)	O
{	O
if	O
(	O
errno	O
!=	O
EAGAIN	int
&&	O
errno	O
!=	O
EWOULDBLOCK	O
&&	O
errno	O
!=	O
ENODATA	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"write: %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
cdid	int
=	O
0	int
;	O
}	O
if	O
(	O
cdid	int
==	O
0	int
)	O
{	O
++	O
czero	int
;	O
if	O
(	O
czero	int
>=	O
10	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Line disconnected"	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
else	O
{	O
czero	int
=	O
0	int
;	O
cwrite	long
-=	O
cdid	int
;	O
zwrite	*(char)
+=	O
cdid	int
;	O
}	O
}	O
return	O
TRUE	O
;	O
}	O
boolean	int
fsdouble_write	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long)->(int)
(	O
qconn	*(struct)
,	O
zwrite	*(char)
,	O
cwrite	long
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
const	O
char	O
*	O
zwrite	*(char)
;	O
size_t	long
cwrite	long
;	O
{	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
;	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
=	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
)	O
qconn	*(struct)
->	O
psysdep	*(void)
;	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
=	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
ord	int
;	O
if	O
(	O
!	O
fsblock	(*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)),int)->(int)
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
,	O
TRUE	O
)	O
)	O
return	O
FALSE	O
;	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
=	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
owr	int
;	O
return	O
fsysdep_conn_write	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long)->(int)
(	O
qconn	*(struct)
,	O
zwrite	*(char)
,	O
cwrite	long
)	O
;	O
}	O
boolean	int
fsysdep_conn_io	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),*(long),*(char),*(long))->(int)
(	O
qconn	*(struct)
,	O
zwrite	*(char)
,	O
pcwrite	*(long)
,	O
zread	*(char)
,	O
pcread	*(long)
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
const	O
char	O
*	O
zwrite	*(char)
;	O
size_t	long
*	O
pcwrite	*(long)
;	O
char	O
*	O
zread	*(char)
;	O
size_t	long
*	O
pcread	*(long)
;	O
{	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
q	*(struct)
;	O
size_t	long
cwrite	long
,	O
cread	long
;	O
int	O
czero	int
;	O
q	*(struct)
=	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
)	O
qconn	*(struct)
->	O
psysdep	*(void)
;	O
cwrite	long
=	O
*	O
pcwrite	*(long)
;	O
*	O
pcwrite	*(long)
=	O
0	int
;	O
cread	long
=	O
*	O
pcread	*(long)
;	O
*	O
pcread	*(long)
=	O
0	int
;	O
czero	int
=	O
0	int
;	O
while	O
(	O
TRUE	O
)	O
{	O
int	O
cgot	int
,	O
cdid	int
;	O
size_t	long
cdo	long
;	O
if	O
(	O
q	*(struct)
->	O
ord	int
>=	O
0	int
)	O
q	*(struct)
->	O
o	int
=	O
q	*(struct)
->	O
ord	int
;	O
if	O
(	O
!	O
fsblock	(*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)),int)->(int)
(	O
q	*(struct)
,	O
FALSE	O
)	O
)	O
return	O
FALSE	O
;	O
while	O
(	O
TRUE	O
)	O
{	O
if	O
(	O
FGOT_QUIT_SIGNAL	O
(	O
)	O
)	O
return	O
FALSE	O
;	O
cgot	int
=	O
read	(int,*(void),long)->(long)
(	O
q	*(struct)
->	O
o	int
,	O
zread	*(char)
,	O
cread	long
)	O
;	O
if	O
(	O
cgot	int
>=	O
0	int
)	O
break	O
;	O
if	O
(	O
errno	O
!=	O
EINTR	int
)	O
break	O
;	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
}	O
if	O
(	O
cgot	int
<	O
0	int
)	O
{	O
if	O
(	O
errno	O
!=	O
EAGAIN	int
&&	O
errno	O
!=	O
EWOULDBLOCK	O
&&	O
errno	O
!=	O
ENODATA	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"read: %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
cgot	int
=	O
0	int
;	O
}	O
cread	long
-=	O
cgot	int
;	O
zread	*(char)
+=	O
cgot	int
;	O
*	O
pcread	*(long)
+=	O
cgot	int
;	O
if	O
(	O
cread	long
==	O
0	int
||	O
cwrite	long
==	O
0	int
)	O
return	O
TRUE	O
;	O
cdo	long
=	O
cwrite	long
;	O
if	O
(	O
q	*(struct)
->	O
owr	int
>=	O
0	int
)	O
q	*(struct)
->	O
o	int
=	O
q	*(struct)
->	O
owr	int
;	O
while	O
(	O
TRUE	O
)	O
{	O
if	O
(	O
FGOT_QUIT_SIGNAL	O
(	O
)	O
)	O
return	O
FALSE	O
;	O
cdid	int
=	O
write	(int,*(void),long)->(long)
(	O
q	*(struct)
->	O
o	int
,	O
zwrite	*(char)
,	O
cdo	long
)	O
;	O
if	O
(	O
cdid	int
>=	O
0	int
)	O
break	O
;	O
if	O
(	O
errno	O
!=	O
EINTR	int
)	O
break	O
;	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
}	O
if	O
(	O
cdid	int
<	O
0	int
)	O
{	O
if	O
(	O
errno	O
!=	O
EAGAIN	int
&&	O
errno	O
!=	O
EWOULDBLOCK	O
&&	O
errno	O
!=	O
ENODATA	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"write: %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
cdid	int
=	O
0	int
;	O
}	O
if	O
(	O
cdid	int
>	O
0	int
)	O
{	O
cwrite	long
-=	O
cdid	int
;	O
zwrite	*(char)
+=	O
cdid	int
;	O
*	O
pcwrite	*(long)
+=	O
cdid	int
;	O
if	O
(	O
cwrite	long
==	O
0	int
)	O
return	O
TRUE	O
;	O
czero	int
=	O
0	int
;	O
}	O
else	O
{	O
struct	O
timeval	struct(long,long)
stime	struct(long,long)
;	O
fd_set	struct(array(long))
smask	struct(array(long))
;	O
int	O
c	int
;	O
if	O
(	O
q	*(struct)
->	O
fterminal	int
)	O
{	O
unsigned	O
long	O
cwait	int
;	O
cwait	int
=	O
1024	int
;	O
if	O
(	O
cwait	int
>	O
cread	long
)	O
cwait	int
=	O
cread	long
;	O
stime	struct(long,long)
.	O
tv_sec	long
=	O
(	O
cwait	int
*	O
10	int
)	O
/	O
q	*(struct)
->	O
ibaud	long
;	O
stime	struct(long,long)
.	O
tv_usec	long
=	O
(	O
(	O
(	O
(	O
cwait	int
*	O
1000000	int
)	O
/	O
q	*(struct)
->	O
ibaud	long
)	O
*	O
10	int
)	O
%	O
1000000	int
)	O
;	O
}	O
else	O
{	O
stime	struct(long,long)
.	O
tv_sec	long
=	O
1	int
;	O
stime	struct(long,long)
.	O
tv_usec	long
=	O
0	int
;	O
}	O
FD_ZERO	O
(	O
&	O
smask	struct(array(long))
)	O
;	O
FD_SET	O
(	O
q	*(struct)
->	O
o	int
,	O
&	O
smask	struct(array(long))
)	O
;	O
if	O
(	O
FGOT_QUIT_SIGNAL	O
(	O
)	O
)	O
return	O
FALSE	O
;	O
DEBUG_MESSAGE0	O
(	O
DEBUG_PORT	O
,	O
"fsysdep_conn_io: Calling select"	*(char)
)	O
;	O
c	int
=	O
select	(int,*(struct(array(long))),*(struct(array(long))),*(struct(array(long))),*(struct(long,long)))->(int)
(	O
q	*(struct)
->	O
o	int
+	O
1	int
,	O
(	O
pointer	*(void)
)	O
NULL	O
,	O
(	O
pointer	*(void)
)	O
&	O
smask	struct(array(long))
,	O
(	O
pointer	*(void)
)	O
NULL	O
,	O
&	O
stime	struct(long,long)
)	O
;	O
if	O
(	O
c	int
<	O
0	int
&&	O
errno	O
==	O
EINTR	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
}	O
else	O
if	O
(	O
c	int
>=	O
0	int
)	O
{	O
}	O
else	O
{	O
int	O
ierr	int
;	O
if	O
(	O
q	*(struct)
->	O
ord	int
>=	O
0	int
)	O
q	*(struct)
->	O
o	int
=	O
q	*(struct)
->	O
ord	int
;	O
if	O
(	O
!	O
fsblock	(*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)),int)->(int)
(	O
q	*(struct)
,	O
TRUE	O
)	O
)	O
return	O
FALSE	O
;	O
DEBUG_MESSAGE0	O
(	O
DEBUG_PORT	O
,	O
"fsysdep_conn_io: Blocking write"	*(char)
)	O
;	O
if	O
(	O
q	*(struct)
->	O
owr	int
>=	O
0	int
)	O
q	*(struct)
->	O
o	int
=	O
q	*(struct)
->	O
owr	int
;	O
if	O
(	O
FGOT_QUIT_SIGNAL	O
(	O
)	O
)	O
return	O
FALSE	O
;	O
usset_signal	(int,*((int)->(void)),int,*(int))->(void)
(	O
SIGALRM	int
,	O
usalarm	(int)->(void)
,	O
TRUE	O
,	O
(	O
boolean	int
*	O
)	O
NULL	O
)	O
;	O
if	O
(	O
q	*(struct)
->	O
fterminal	int
)	O
alarm	(int)->(int)
(	O
(	O
int	O
)	O
(	O
(	O
long	O
)	O
10240	int
/	O
q	*(struct)
->	O
ibaud	long
)	O
+	O
1	int
)	O
;	O
else	O
alarm	(int)->(int)
(	O
1	int
)	O
;	O
cdid	int
=	O
write	(int,*(void),long)->(long)
(	O
q	*(struct)
->	O
o	int
,	O
zwrite	*(char)
,	O
1	int
)	O
;	O
ierr	int
=	O
errno	O
;	O
usset_signal	(int,*((int)->(void)),int,*(int))->(void)
(	O
SIGALRM	int
,	O
SIG_IGN	O
,	O
TRUE	O
,	O
(	O
boolean	int
*	O
)	O
NULL	O
)	O
;	O
alarm	(int)->(int)
(	O
0	int
)	O
;	O
if	O
(	O
cdid	int
<	O
0	int
)	O
{	O
if	O
(	O
ierr	int
==	O
EINTR	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
}	O
else	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"write: %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
ierr	int
)	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
else	O
if	O
(	O
cdid	int
==	O
0	int
)	O
{	O
++	O
czero	int
;	O
if	O
(	O
czero	int
>=	O
10	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Line disconnected"	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
else	O
{	O
cwrite	long
-=	O
cdid	int
;	O
zwrite	*(char)
+=	O
cdid	int
;	O
*	O
pcwrite	*(long)
+=	O
cdid	int
;	O
czero	int
=	O
0	int
;	O
}	O
}	O
}	O
}	O
}	O
static	O
boolean	int
fsserial_break	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
(	O
qconn	*(struct)
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
{	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
q	*(struct)
;	O
q	*(struct)
=	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
)	O
qconn	*(struct)
->	O
psysdep	*(void)
;	O
return	O
tcsendbreak	(int,int)->(int)
(	O
q	*(struct)
->	O
o	int
,	O
0	int
)	O
==	O
0	int
;	O
}	O
static	O
boolean	int
fsstdin_break	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
(	O
qconn	*(struct)
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
{	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
;	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
=	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
)	O
qconn	*(struct)
->	O
psysdep	*(void)
;	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
=	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
owr	int
;	O
return	O
fsserial_break	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
(	O
qconn	*(struct)
)	O
;	O
}	O
static	O
boolean	int
fsserial_set	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)
(	O
qconn	*(struct)
,	O
tparity	enum(int,int,int,int,int,int)
,	O
tstrip	enum(int,int,int)
,	O
txonxoff	enum(int,int,int)
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
enum	O
tparitysetting	enum(int,int,int,int,int,int)
tparity	enum(int,int,int,int,int,int)
;	O
enum	O
tstripsetting	enum(int,int,int)
tstrip	enum(int,int,int)
;	O
enum	O
txonxoffsetting	enum(int,int,int)
txonxoff	enum(int,int,int)
;	O
{	O
register	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
q	*(struct)
;	O
boolean	int
fchanged	int
,	O
fdo	int
;	O
unsigned	O
int	O
iset	int
=	O
0	int
;	O
unsigned	O
int	O
iclear	int
=	O
0	int
;	O
q	*(struct)
=	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
)	O
qconn	*(struct)
->	O
psysdep	*(void)
;	O
if	O
(	O
!	O
q	*(struct)
->	O
fterminal	int
)	O
return	O
TRUE	O
;	O
fchanged	int
=	O
FALSE	O
;	O
fdo	int
=	O
FALSE	O
;	O
switch	O
(	O
tparity	enum(int,int,int,int,int,int)
)	O
{	O
case	O
PARITYSETTING_DEFAULT	int
:	O
break	O
;	O
case	O
PARITYSETTING_NONE	int
:	O
iset	int
=	O
CS8	int
;	O
iclear	int
=	O
PARENB	int
|	O
PARODD	int
|	O
(	O
CSIZE	int
&	O
~	O
CS8	int
)	O
;	O
fdo	int
=	O
TRUE	O
;	O
break	O
;	O
case	O
PARITYSETTING_EVEN	int
:	O
iset	int
=	O
PARENB	int
|	O
CS7	int
;	O
iclear	int
=	O
PARODD	int
|	O
(	O
CSIZE	int
&	O
~	O
CS7	int
)	O
;	O
fdo	int
=	O
TRUE	O
;	O
break	O
;	O
case	O
PARITYSETTING_ODD	int
:	O
iset	int
=	O
PARENB	int
|	O
PARODD	int
|	O
CS7	int
;	O
iclear	int
=	O
CSIZE	int
&	O
~	O
CS7	int
;	O
fdo	int
=	O
TRUE	O
;	O
break	O
;	O
case	O
PARITYSETTING_MARK	int
:	O
case	O
PARITYSETTING_SPACE	int
:	O
break	O
;	O
}	O
if	O
(	O
fdo	int
)	O
{	O
if	O
(	O
(	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cflag	int
&	O
iset	int
)	O
!=	O
iset	int
||	O
(	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cflag	int
&	O
iclear	int
)	O
!=	O
0	int
)	O
{	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cflag	int
|=	O
iset	int
;	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cflag	int
&=	O
~	O
iclear	int
;	O
fchanged	int
=	O
TRUE	O
;	O
}	O
}	O
fdo	int
=	O
FALSE	O
;	O
switch	O
(	O
tstrip	enum(int,int,int)
)	O
{	O
case	O
STRIPSETTING_DEFAULT	int
:	O
break	O
;	O
case	O
STRIPSETTING_EIGHTBITS	int
:	O
iset	int
=	O
0	int
;	O
iclear	int
=	O
ISTRIP	int
;	O
fdo	int
=	O
TRUE	O
;	O
break	O
;	O
case	O
STRIPSETTING_SEVENBITS	int
:	O
iset	int
=	O
ISTRIP	int
;	O
iclear	int
=	O
0	int
;	O
fdo	int
=	O
TRUE	O
;	O
break	O
;	O
}	O
if	O
(	O
fdo	int
)	O
{	O
if	O
(	O
(	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_iflag	int
&	O
iset	int
)	O
!=	O
iset	int
||	O
(	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_iflag	int
&	O
iclear	int
)	O
!=	O
0	int
)	O
{	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_iflag	int
|=	O
iset	int
;	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_iflag	int
&=	O
~	O
iclear	int
;	O
fchanged	int
=	O
TRUE	O
;	O
}	O
}	O
fdo	int
=	O
FALSE	O
;	O
switch	O
(	O
txonxoff	enum(int,int,int)
)	O
{	O
case	O
XONXOFF_DEFAULT	int
:	O
break	O
;	O
case	O
XONXOFF_OFF	int
:	O
iset	int
=	O
0	int
;	O
iclear	int
=	O
IXON	int
|	O
IXOFF	int
;	O
fdo	int
=	O
TRUE	O
;	O
break	O
;	O
case	O
XONXOFF_ON	int
:	O
if	O
(	O
(	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_cflag	int
&	O
CRTSCTS	int
)	O
!=	O
0	int
)	O
{	O
iset	int
=	O
IXON	int
;	O
iclear	int
=	O
IXOFF	int
;	O
fdo	int
=	O
TRUE	O
;	O
break	O
;	O
}	O
iset	int
=	O
IXON	int
|	O
IXOFF	int
;	O
iclear	int
=	O
0	int
;	O
fdo	int
=	O
TRUE	O
;	O
break	O
;	O
}	O
if	O
(	O
fdo	int
)	O
{	O
if	O
(	O
(	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_iflag	int
&	O
iset	int
)	O
!=	O
iset	int
||	O
(	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_iflag	int
&	O
iclear	int
)	O
!=	O
0	int
)	O
{	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_iflag	int
|=	O
iset	int
;	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
.	O
c_iflag	int
&=	O
~	O
iclear	int
;	O
fchanged	int
=	O
TRUE	O
;	O
}	O
}	O
if	O
(	O
fchanged	int
)	O
{	O
if	O
(	O
!	O
fsetterminfodrain	O
(	O
q	*(struct)
->	O
o	int
,	O
&	O
q	*(struct)
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
)	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Can't change terminal settings: %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
fsstdin_set	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)
(	O
qconn	*(struct)
,	O
tparity	enum(int,int,int,int,int,int)
,	O
tstrip	enum(int,int,int)
,	O
txonxoff	enum(int,int,int)
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
enum	O
tparitysetting	enum(int,int,int,int,int,int)
tparity	enum(int,int,int,int,int,int)
;	O
enum	O
tstripsetting	enum(int,int,int)
tstrip	enum(int,int,int)
;	O
enum	O
txonxoffsetting	enum(int,int,int)
txonxoff	enum(int,int,int)
;	O
{	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
;	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
=	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
)	O
qconn	*(struct)
->	O
psysdep	*(void)
;	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
=	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
ord	int
;	O
return	O
fsserial_set	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)
(	O
qconn	*(struct)
,	O
tparity	enum(int,int,int,int,int,int)
,	O
tstrip	enum(int,int,int)
,	O
txonxoff	enum(int,int,int)
)	O
;	O
}	O
static	O
boolean	int
fsrun_chat	(int,int,*(*(char)))->(int)
(	O
oread	int
,	O
owrite	int
,	O
pzprog	*(*(char))
)	O
int	O
oread	int
;	O
int	O
owrite	int
;	O
char	O
*	O
*	O
pzprog	*(*(char))
;	O
{	O
int	O
aidescs	*(int)
[	O
3	int
]	O
;	O
FILE	struct
*	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
pid_t	int
ipid	int
;	O
char	O
*	O
z	*(char)
;	O
size_t	long
c	int
;	O
aidescs	*(int)
[	O
0	int
]	O
=	O
oread	int
;	O
aidescs	*(int)
[	O
1	int
]	O
=	O
owrite	int
;	O
aidescs	*(int)
[	O
2	int
]	O
=	O
SPAWN_READ_PIPE	O
;	O
ipid	int
=	O
ixsspawn	(*(*(char)),*(int),int,int,*(char),int,int,*(char),*(char),*(char))->(int)
(	O
(	O
const	O
char	O
*	O
*	O
)	O
pzprog	*(*(char))
,	O
aidescs	*(int)
,	O
TRUE	O
,	O
TRUE	O
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
FALSE	O
,	O
TRUE	O
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
if	O
(	O
ipid	int
<	O
0	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"ixsspawn (%s): %s"	*(char)
,	O
pzprog	*(*(char))
[	O
0	int
]	O
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fdopen	(int,*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
aidescs	*(int)
[	O
2	int
]	O
,	O
(	O
char	O
*	O
)	O
"r"	*(char)
)	O
;	O
if	O
(	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
==	O
NULL	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"fdopen: %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
(	O
void	O
)	O
close	(int)->(int)
(	O
aidescs	*(int)
[	O
2	int
]	O
)	O
;	O
(	O
void	O
)	O
kill	(int,int)->(int)
(	O
ipid	int
,	O
SIGKILL	int
)	O
;	O
(	O
void	O
)	O
ixswait	(long,*(char))->(int)
(	O
(	O
unsigned	O
long	O
)	O
ipid	int
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
z	*(char)
=	O
NULL	O
;	O
c	int
=	O
0	int
;	O
while	O
(	O
getline	(*(*(char)),*(long),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
&	O
z	*(char)
,	O
&	O
c	int
,	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
>	O
0	int
)	O
{	O
size_t	long
clen	long
;	O
clen	long
=	O
strlen	(*(char))->(long)
(	O
z	*(char)
)	O
;	O
if	O
(	O
z	*(char)
[	O
clen	long
-	O
1	int
]	O
==	O
'\n'	O
)	O
z	*(char)
[	O
clen	long
-	O
1	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
*	O
z	*(char)
!=	O
'\0'	O
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_NORMAL	int
,	O
"chat: %s"	*(char)
,	O
z	*(char)
)	O
;	O
}	O
xfree	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
z	*(char)
)	O
;	O
(	O
void	O
)	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
return	O
ixswait	(long,*(char))->(int)
(	O
(	O
unsigned	O
long	O
)	O
ipid	int
,	O
"Chat program"	*(char)
)	O
==	O
0	int
;	O
}	O
boolean	int
fsdouble_chat	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(*(char)))->(int)
(	O
qconn	*(struct)
,	O
pzprog	*(*(char))
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
char	O
*	O
*	O
pzprog	*(*(char))
;	O
{	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
;	O
boolean	int
fret	int
;	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
=	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
)	O
qconn	*(struct)
->	O
psysdep	*(void)
;	O
fret	int
=	O
fsrun_chat	(int,int,*(*(char)))->(int)
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
ord	int
,	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
owr	int
,	O
pzprog	*(*(char))
)	O
;	O
if	O
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
fterminal	int
)	O
(	O
void	O
)	O
fgetterminfo	O
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
ord	int
,	O
&	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
)	O
;	O
return	O
fret	int
;	O
}	O
boolean	int
fsysdep_conn_chat	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(*(char)))->(int)
(	O
qconn	*(struct)
,	O
pzprog	*(*(char))
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
char	O
*	O
*	O
pzprog	*(*(char))
;	O
{	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
;	O
boolean	int
fret	int
;	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
=	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
)	O
qconn	*(struct)
->	O
psysdep	*(void)
;	O
fret	int
=	O
fsrun_chat	(int,int,*(*(char)))->(int)
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
,	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
,	O
pzprog	*(*(char))
)	O
;	O
if	O
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
fterminal	int
)	O
(	O
void	O
)	O
fgetterminfo	O
(	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
o	int
,	O
&	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
snew	struct(int,int,int,int,char,array(char),int,int)
)	O
;	O
return	O
fret	int
;	O
}	O
static	O
long	O
isserial_baud	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(long)
(	O
qconn	*(struct)
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
{	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
;	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
=	O
(	O
struct	O
ssysdep_conn	struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int)
*	O
)	O
qconn	*(struct)
->	O
psysdep	*(void)
;	O
return	O
qsysdep	*(struct(int,int,int,*(char),int,int,int,int,int,long,struct(int,int,int,int,char,array(char),int,int),struct(int,int,int,int,char,array(char),int,int),int))
->	O
ibaud	long
;	O
}	O
