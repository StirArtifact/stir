int	O
debugging_enabled	int
=	O
0	int
;	O
int	O
strict_match_flag	int
=	O
0	int
;	O
int	O
print_controls	int
=	O
0	int
;	O
int	O
ahz	int
=	O
AHZ	int
;	O
char	O
*	O
program_name	*(char)
;	O
int	O
show_paging	int
=	O
0	int
;	O
char	O
show_pid	char
=	O
0	int
;	O
static	O
unsigned	O
int	O
hzval	int
;	O
struct	O
hashtab	struct(long,long,long,*(*(struct(*(void),int,int,*(void),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(long,long,long,*`,int))))),int)
*	O
user_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
=	O
NULL	O
;	O
struct	O
hashtab	struct(long,long,long,*(*(struct(*(void),int,int,*(void),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(long,long,long,*`,int))))),int)
*	O
tty_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
=	O
NULL	O
;	O
struct	O
hashtab	struct(long,long,long,*(*(struct(*(void),int,int,*(void),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(long,long,long,*`,int))))),int)
*	O
command_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
=	O
NULL	O
;	O
struct	O
hashtab	struct(long,long,long,*(*(struct(*(void),int,int,*(void),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(long,long,long,*`,int))))),int)
*	O
all_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
=	O
NULL	O
;	O
char	O
*	O
dev_gnu_name	(long)->(*(char))
(	O
long	O
)	O
;	O
int	O
get_entry	(*(*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))))->(int)
(	O
struct	O
acct	(*(char))->(int)
*	O
*	O
)	O
;	O
int	O
desired_entry	(*(char),*(char),*(char))->(int)
(	O
char	O
*	O
,	O
char	O
*	O
,	O
char	O
*	O
)	O
;	O
int	O
main	(int,array(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
int	O
c	int
;	O
int	O
other_pacct_file_specified	int
=	O
0	int
;	O
int	O
backwards	int
=	O
1	int
;	O
hzval	int
=	O
sysconf	(int)->(long)
(	O
_SC_CLK_TCK	int
)	O
;	O
program_name	*(char)
=	O
argv	array(*(char))
[	O
0	int
]	O
;	O
while	O
(	O
1	int
)	O
{	O
int	O
option_index	int
=	O
0	int
;	O
static	O
struct	O
option	struct(*(char),int,*(int),int)
long_options	array(struct(*(char),int,*(int),int))
[	O
]	O
=	O
{	O
{	O
"debug"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
1	int
}	O
,	O
{	O
"version"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
2	int
}	O
,	O
{	O
"help"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
3	int
}	O
,	O
{	O
"file"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
4	int
}	O
,	O
{	O
"strict-match"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
5	int
}	O
,	O
{	O
"print-controls"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
6	int
}	O
,	O
{	O
"user"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
7	int
}	O
,	O
{	O
"tty"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
8	int
}	O
,	O
{	O
"command"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
9	int
}	O
,	O
{	O
"ahz"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
10	int
}	O
,	O
{	O
"show-paging"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
11	int
}	O
,	O
{	O
"forwards"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
12	int
}	O
,	O
{	O
"pid"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
13	int
}	O
,	O
{	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
}	O
}	O
;	O
c	int
=	O
getopt_long	(int,*(*(char)),*(char),*(struct(*(char),int,*(int),int)),*(int))->(int)
(	O
argc	int
,	O
argv	array(*(char))
,	O
"f:hV"	*(char)
"p"	*(char)
,	O
long_options	array(struct(*(char),int,*(int),int))
,	O
&	O
option_index	int
)	O
;	O
if	O
(	O
c	int
==	O
EOF	O
)	O
break	O
;	O
switch	O
(	O
c	int
)	O
{	O
case	O
1	int
:	O
debugging_enabled	int
=	O
1	int
;	O
break	O
;	O
case	O
'V'	O
:	O
case	O
2	int
:	O
(	O
void	O
)	O
printf	(*(char))->(int)
(	O
"%s: GNU Accounting Utilities (release %s)\n"	*(char)
,	O
program_name	*(char)
,	O
VERSION_STRING	*(char)
)	O
;	O
exit	(int)->(void)
(	O
EXIT_SUCCESS	int
)	O
;	O
case	O
'f'	O
:	O
case	O
4	int
:	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
optarg	*(char)
,	O
"-"	*(char)
)	O
==	O
0	int
)	O
{	O
if	O
(	O
backwards	int
&&	O
other_pacct_file_specified	int
)	O
{	O
(	O
void	O
)	O
printf	(*(char))->(int)
(	O
"%s: -f - must be specified first, or --forwards must precede the first -f\n"	*(char)
,	O
program_name	*(char)
)	O
;	O
exit	(int)->(void)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
backwards	int
=	O
0	int
;	O
optarg	*(char)
=	O
"/proc/self/fd/0"	*(char)
;	O
}	O
if	O
(	O
other_pacct_file_specified	int
==	O
0	int
)	O
pacct_init	(int)->(void)
(	O
backwards	int
)	O
;	O
add_pacct_file	(*(char))->(void)
(	O
optarg	*(char)
)	O
;	O
other_pacct_file_specified	int
=	O
1	int
;	O
break	O
;	O
case	O
5	int
:	O
strict_match_flag	int
=	O
1	int
;	O
break	O
;	O
case	O
6	int
:	O
print_controls	int
=	O
1	int
;	O
break	O
;	O
case	O
7	int
:	O
if	O
(	O
user_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
==	O
NULL	O
)	O
user_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
=	O
hashtab_init	(int)->(*(struct(long,long,long,*(*(struct`)),int)))
(	O
0	int
)	O
;	O
hashtab_create	(*(struct(long,long,long,*(*(struct`)),int)),*(void),int)->(*(struct(*(void),int,int,*(void),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(long,long,long,*`,int)))))
(	O
user_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
,	O
optarg	*(char)
,	O
0	int
)	O
;	O
break	O
;	O
case	O
8	int
:	O
if	O
(	O
tty_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
==	O
NULL	O
)	O
tty_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
=	O
hashtab_init	(int)->(*(struct(long,long,long,*(*(struct`)),int)))
(	O
0	int
)	O
;	O
hashtab_create	(*(struct(long,long,long,*(*(struct`)),int)),*(void),int)->(*(struct(*(void),int,int,*(void),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(long,long,long,*`,int)))))
(	O
tty_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
,	O
optarg	*(char)
,	O
0	int
)	O
;	O
break	O
;	O
case	O
9	int
:	O
if	O
(	O
command_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
==	O
NULL	O
)	O
command_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
=	O
hashtab_init	(int)->(*(struct(long,long,long,*(*(struct`)),int)))
(	O
0	int
)	O
;	O
hashtab_create	(*(struct(long,long,long,*(*(struct`)),int)),*(void),int)->(*(struct(*(void),int,int,*(void),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(long,long,long,*`,int)))))
(	O
command_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
,	O
optarg	*(char)
,	O
0	int
)	O
;	O
break	O
;	O
case	O
10	int
:	O
ahz	int
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
optarg	*(char)
,	O
(	O
char	O
*	O
*	O
)	O
NULL	O
,	O
10	int
)	O
;	O
if	O
(	O
ahz	int
<	O
1	int
)	O
{	O
(	O
void	O
)	O
printf	(*(char))->(int)
(	O
"%s: AHZ must be one or greater\n"	*(char)
,	O
program_name	*(char)
)	O
;	O
exit	(int)->(void)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
break	O
;	O
case	O
'p'	O
:	O
case	O
11	int
:	O
show_paging	int
=	O
1	int
;	O
break	O
;	O
case	O
12	int
:	O
if	O
(	O
other_pacct_file_specified	int
)	O
{	O
(	O
void	O
)	O
printf	(*(char))->(int)
(	O
"%s: --forwards must come before -f\n"	*(char)
,	O
program_name	*(char)
)	O
;	O
exit	(int)->(void)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
backwards	int
=	O
0	int
;	O
break	O
;	O
case	O
13	int
:	O
show_pid	char
=	O
1	int
;	O
break	O
;	O
case	O
'h'	O
:	O
case	O
3	int
:	O
default	O
:	O
give_usage	()->(void)
(	O
)	O
;	O
exit	(int)->(void)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
}	O
if	O
(	O
other_pacct_file_specified	int
==	O
0	int
)	O
pacct_init	(int)->(void)
(	O
backwards	int
)	O
;	O
if	O
(	O
optind	int
<	O
argc	int
)	O
{	O
all_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
=	O
hashtab_init	(int)->(*(struct(long,long,long,*(*(struct`)),int)))
(	O
0	int
)	O
;	O
while	O
(	O
optind	int
<	O
argc	int
)	O
hashtab_create	(*(struct(long,long,long,*(*(struct`)),int)),*(void),int)->(*(struct(*(void),int,int,*(void),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(long,long,long,*`,int)))))
(	O
all_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
,	O
argv	array(*(char))
[	O
optind	int
++	O
]	O
,	O
0	int
)	O
;	O
}	O
if	O
(	O
strict_match_flag	int
)	O
{	O
if	O
(	O
(	O
tty_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
&&	O
(	O
tty_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
->	O
items_hashed	long
>	O
1	int
)	O
)	O
||	O
(	O
user_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
&&	O
(	O
user_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
->	O
items_hashed	long
>	O
1	int
)	O
)	O
||	O
(	O
command_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
&&	O
(	O
command_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
->	O
items_hashed	long
>	O
1	int
)	O
)	O
)	O
{	O
(	O
void	O
)	O
printf	(*(char))->(int)
(	O
"%s: ERROR: when using the `--strict-match' flag,\n"	*(char)
"   it is nonsensical to specify more than one item\n"	*(char)
"   to match in a single category (using the `--tty',\n"	*(char)
"   `--user', or `--command' flags).\n"	*(char)
,	O
program_name	*(char)
)	O
;	O
exit	(int)->(void)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
}	O
if	O
(	O
debugging_enabled	int
)	O
{	O
if	O
(	O
all_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
)	O
{	O
(	O
void	O
)	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
"all_list\n--------\n"	*(char)
,	O
stddebug	O
)	O
;	O
hashtab_dump_keys	(*(struct(long,long,long,*(*(struct`)),int)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
all_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
,	O
stddebug	O
)	O
;	O
}	O
if	O
(	O
tty_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
)	O
{	O
(	O
void	O
)	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
"tty_list\n--------\n"	*(char)
,	O
stddebug	O
)	O
;	O
hashtab_dump_keys	(*(struct(long,long,long,*(*(struct`)),int)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
tty_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
,	O
stddebug	O
)	O
;	O
}	O
if	O
(	O
user_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
)	O
{	O
(	O
void	O
)	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
"user_list\n---------\n"	*(char)
,	O
stddebug	O
)	O
;	O
hashtab_dump_keys	(*(struct(long,long,long,*(*(struct`)),int)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
user_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
,	O
stddebug	O
)	O
;	O
}	O
if	O
(	O
command_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
)	O
{	O
(	O
void	O
)	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
"command_list\n------------\n"	*(char)
,	O
stddebug	O
)	O
;	O
hashtab_dump_keys	(*(struct(long,long,long,*(*(struct`)),int)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
command_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
,	O
stddebug	O
)	O
;	O
}	O
}	O
if	O
(	O
!	O
other_pacct_file_specified	int
)	O
add_pacct_file	(*(char))->(void)
(	O
ACCT_FILE_LOC	*(char)
)	O
;	O
parse_entries	()->(void)
(	O
)	O
;	O
exit	(int)->(void)
(	O
EXIT_SUCCESS	int
)	O
;	O
}	O
void	O
give_usage	()->(void)
(	O
void	O
)	O
{	O
(	O
void	O
)	O
printf	(*(char))->(int)
(	O
"Usage: %s [-h"	*(char)
"p"	*(char)
"V] [-f file] [command] ... [user] ... [terminal] ...\n"	*(char)
"       [--forwards] [--file <file>] [--strict-match] [--print-controls]\n"	*(char)
"       [--user <name>] [--tty <name>] [--command <name>] [--debug]\n"	*(char)
"       "	*(char)
"[--show-paging] "	*(char)
"[--pid] "	*(char)
"[--ahz <freq>] [--version] [--help]\n"	*(char)
,	O
program_name	*(char)
)	O
;	O
print_acct_file_location	()->(void)
(	O
)	O
;	O
}	O
void	O
parse_entries	()->(void)
(	O
void	O
)	O
{	O
struct	O
acct	(*(char))->(int)
*	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
;	O
time_t	long
btime	long
;	O
while	O
(	O
(	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
=	O
pacct_get_entry	()->(*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char)))
(	O
)	O
)	O
!=	O
NULL	O
)	O
{	O
char	O
*	O
this_uid	*(char)
=	O
uid_name	(int)->(*(char))
(	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
->	O
ac_uid	int
)	O
;	O
char	O
*	O
this_dev	*(char)
=	O
dev_gnu_name	(long)->(*(char))
(	O
(	O
long	O
)	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
->	O
ac_tty	short
)	O
;	O
if	O
(	O
debugging_enabled	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stddebug	O
,	O
"---------------------------------------------------------------------------\nCURRENT REC: "	*(char)
)	O
;	O
print_pacct_record	(*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
,	O
stddebug	O
)	O
;	O
}	O
if	O
(	O
desired_entry	(*(char),*(char),*(char))->(int)
(	O
this_uid	*(char)
,	O
this_dev	*(char)
,	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
->	O
ac_comm	array(char)
)	O
)	O
{	O
double	O
ut	double
=	O
ACUTIME_2_DOUBLE	O
(	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
->	O
ac_utime	short
)	O
;	O
double	O
st	double
=	O
ACSTIME_2_DOUBLE	O
(	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
->	O
ac_stime	short
)	O
;	O
double	O
minf	double
=	O
ACMINFLT_2_DOUBLE	O
(	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
->	O
ac_minflt	short
)	O
;	O
double	O
majf	double
=	O
ACMAJFLT_2_DOUBLE	O
(	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
->	O
ac_majflt	short
)	O
;	O
double	O
swap	double
=	O
ACSWAPS_2_DOUBLE	O
(	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
->	O
ac_swaps	short
)	O
;	O
if	O
(	O
!	O
print_controls	int
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
COMM_LEN	O
;	O
i	int
++	O
)	O
{	O
if	O
(	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
->	O
ac_comm	array(char)
[	O
i	int
]	O
==	O
'\0'	O
)	O
break	O
;	O
if	O
(	O
!	O
isprint	(int)->(int)
(	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
->	O
ac_comm	array(char)
[	O
i	int
]	O
)	O
)	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
->	O
ac_comm	array(char)
[	O
i	int
]	O
=	O
'?'	O
;	O
}	O
}	O
(	O
void	O
)	O
printf	(*(char))->(int)
(	O
"%-*.*s "	*(char)
,	O
COMM_LEN	O
,	O
COMM_LEN	O
,	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
->	O
ac_comm	array(char)
)	O
;	O
if	O
(	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
->	O
ac_flag	char
&	O
ASU	int
)	O
(	O
void	O
)	O
putchar	(int)->(int)
(	O
'S'	O
)	O
;	O
else	O
(	O
void	O
)	O
putchar	(int)->(int)
(	O
' '	O
)	O
;	O
if	O
(	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
->	O
ac_flag	char
&	O
AFORK	int
)	O
(	O
void	O
)	O
putchar	(int)->(int)
(	O
'F'	O
)	O
;	O
else	O
(	O
void	O
)	O
putchar	(int)->(int)
(	O
' '	O
)	O
;	O
if	O
(	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
->	O
ac_flag	char
&	O
ACOMPAT	int
)	O
(	O
void	O
)	O
putchar	(int)->(int)
(	O
'C'	O
)	O
;	O
else	O
(	O
void	O
)	O
putchar	(int)->(int)
(	O
' '	O
)	O
;	O
if	O
(	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
->	O
ac_flag	char
&	O
ACORE	int
)	O
(	O
void	O
)	O
putchar	(int)->(int)
(	O
'D'	O
)	O
;	O
else	O
(	O
void	O
)	O
putchar	(int)->(int)
(	O
' '	O
)	O
;	O
if	O
(	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
->	O
ac_flag	char
&	O
AXSIG	int
)	O
(	O
void	O
)	O
putchar	(int)->(int)
(	O
'X'	O
)	O
;	O
else	O
(	O
void	O
)	O
putchar	(int)->(int)
(	O
' '	O
)	O
;	O
btime	long
=	O
(	O
time_t	long
)	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
->	O
ac_btime	int
;	O
if	O
(	O
show_paging	int
==	O
0	int
)	O
(	O
void	O
)	O
printf	(*(char))->(int)
(	O
" %-8.8s %-8.8s %6.2f secs %-16.16s"	*(char)
,	O
this_uid	*(char)
,	O
this_dev	*(char)
,	O
(	O
(	O
ut	double
+	O
st	double
)	O
/	O
(	O
double	O
)	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
->	O
ac_ahz	short
)	O
,	O
ctime	(*(long))->(*(char))
(	O
&	O
btime	long
)	O
)	O
;	O
else	O
(	O
void	O
)	O
printf	(*(char))->(int)
(	O
" %6.0fmin %6.0fmaj %4.0fswp %6.2f secs %-16.16s"	*(char)
,	O
minf	double
,	O
majf	double
,	O
swap	double
,	O
(	O
(	O
ut	double
+	O
st	double
)	O
/	O
(	O
double	O
)	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
->	O
ac_ahz	short
)	O
,	O
ctime	(*(long))->(*(char))
(	O
&	O
btime	long
)	O
)	O
;	O
if	O
(	O
show_pid	char
)	O
{	O
if	O
(	O
(	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
->	O
ac_version	char
&	O
0x7f	int
)	O
==	O
3	int
)	O
{	O
(	O
void	O
)	O
printf	(*(char))->(int)
(	O
" %d %d"	*(char)
,	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
->	O
ac_pid	int
,	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
->	O
ac_ppid	int
)	O
;	O
}	O
}	O
(	O
void	O
)	O
printf	(*(char))->(int)
(	O
"\n"	*(char)
)	O
;	O
}	O
}	O
}	O
int	O
desired_entry	(*(char),*(char),*(char))->(int)
(	O
char	O
*	O
uid	*(char)
,	O
char	O
*	O
dev	*(char)
,	O
char	O
*	O
comm	*(char)
)	O
{	O
if	O
(	O
(	O
all_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
==	O
NULL	O
)	O
&&	O
(	O
user_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
==	O
NULL	O
)	O
&&	O
(	O
tty_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
==	O
NULL	O
)	O
&&	O
(	O
command_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
==	O
NULL	O
)	O
)	O
return	O
1	int
;	O
if	O
(	O
strict_match_flag	int
)	O
{	O
if	O
(	O
all_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
)	O
{	O
struct	O
hashtab_order	struct(int,*(struct),*(struct))
ho	*(struct(int,*(struct(*(void),int,int,*(void),*(struct`),*(struct`),*(struct`))),*(struct(long,long,long,*(*`),int))))
;	O
struct	O
hashtab_elem	struct(*(void),int,int,*(void),*(struct(*(void),int,int,*(void),*(struct(*(void),int,int,*(void),*(struct`),*(struct`),*(struct`))),*(struct(*(void),int,int,*(void),*(struct`),*(struct`),*(struct`))),*(struct))),*(struct(*(void),int,int,*(void),*(struct(*(void),int,int,*(void),*(struct`),*(struct`),*(struct`))),*(struct(*(void),int,int,*(void),*(struct`),*(struct`),*(struct`))),*(struct))),*(struct))
*	O
he	*(struct(*(void),int,int,*(void),*(struct(*(void),int,int,*(void),*(struct`),*(struct`),*(struct`))),*(struct(*(void),int,int,*(void),*(struct`),*(struct`),*(struct`))),*(struct(long,long,long,*(*`),int))))
;	O
for	O
(	O
he	*(struct(*(void),int,int,*(void),*(struct(*(void),int,int,*(void),*(struct`),*(struct`),*(struct`))),*(struct(*(void),int,int,*(void),*(struct`),*(struct`),*(struct`))),*(struct(long,long,long,*(*`),int))))
=	O
hashtab_first	(*(struct(long,long,long,*(*(struct`)),int)),*(struct(int,*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(long,long,long,*`,int)))))->(*(struct(*(void),int,int,*(void),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(long,long,long,*`,int)))))
(	O
all_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
,	O
&	O
ho	*(struct(int,*(struct(*(void),int,int,*(void),*(struct`),*(struct`),*(struct`))),*(struct(long,long,long,*(*`),int))))
)	O
;	O
he	*(struct(*(void),int,int,*(void),*(struct(*(void),int,int,*(void),*(struct`),*(struct`),*(struct`))),*(struct(*(void),int,int,*(void),*(struct`),*(struct`),*(struct`))),*(struct(long,long,long,*(*`),int))))
!=	O
NULL	O
;	O
he	*(struct(*(void),int,int,*(void),*(struct(*(void),int,int,*(void),*(struct`),*(struct`),*(struct`))),*(struct(*(void),int,int,*(void),*(struct`),*(struct`),*(struct`))),*(struct(long,long,long,*(*`),int))))
=	O
hashtab_next	(*(struct(int,*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(long,long,long,*`,int)))))->(*(struct(*(void),int,int,*(void),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(long,long,long,*`,int)))))
(	O
&	O
ho	*(struct(int,*(struct(*(void),int,int,*(void),*(struct`),*(struct`),*(struct`))),*(struct(long,long,long,*(*`),int))))
)	O
)	O
{	O
int	O
commlen	int
=	O
strlen	(*(char))->(long)
(	O
comm	*(char)
)	O
;	O
if	O
(	O
commlen	int
>	O
COMM_LEN	O
)	O
commlen	int
=	O
COMM_LEN	O
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
he	*(struct(*(void),int,int,*(void),*(struct(*(void),int,int,*(void),*(struct`),*(struct`),*(struct`))),*(struct(*(void),int,int,*(void),*(struct`),*(struct`),*(struct`))),*(struct(long,long,long,*(*`),int))))
->	O
key	*(void)
,	O
uid	*(char)
)	O
||	O
strcmp	(*(char),*(char))->(int)
(	O
he	*(struct(*(void),int,int,*(void),*(struct(*(void),int,int,*(void),*(struct`),*(struct`),*(struct`))),*(struct(*(void),int,int,*(void),*(struct`),*(struct`),*(struct`))),*(struct(long,long,long,*(*`),int))))
->	O
key	*(void)
,	O
dev	*(char)
)	O
||	O
strncmp	(*(char),*(char),long)->(int)
(	O
he	*(struct(*(void),int,int,*(void),*(struct(*(void),int,int,*(void),*(struct`),*(struct`),*(struct`))),*(struct(*(void),int,int,*(void),*(struct`),*(struct`),*(struct`))),*(struct(long,long,long,*(*`),int))))
->	O
key	*(void)
,	O
comm	*(char)
,	O
commlen	int
)	O
)	O
return	O
0	int
;	O
}	O
}	O
if	O
(	O
tty_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
&&	O
hashtab_find	(*(struct(long,long,long,*(*(struct`)),int)),*(void),int)->(*(struct(*(void),int,int,*(void),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(long,long,long,*`,int)))))
(	O
tty_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
,	O
dev	*(char)
,	O
(	O
unsigned	O
int	O
)	O
0	int
)	O
==	O
NULL	O
)	O
return	O
0	int
;	O
if	O
(	O
user_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
&&	O
hashtab_find	(*(struct(long,long,long,*(*(struct`)),int)),*(void),int)->(*(struct(*(void),int,int,*(void),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(long,long,long,*`,int)))))
(	O
user_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
,	O
uid	*(char)
,	O
(	O
unsigned	O
int	O
)	O
0	int
)	O
==	O
NULL	O
)	O
return	O
0	int
;	O
if	O
(	O
command_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
&&	O
hashtab_find	(*(struct(long,long,long,*(*(struct`)),int)),*(void),int)->(*(struct(*(void),int,int,*(void),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(long,long,long,*`,int)))))
(	O
command_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
,	O
comm	*(char)
,	O
(	O
unsigned	O
int	O
)	O
COMM_LEN	O
)	O
==	O
NULL	O
)	O
return	O
0	int
;	O
return	O
1	int
;	O
}	O
else	O
{	O
if	O
(	O
all_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
&&	O
(	O
hashtab_find	(*(struct(long,long,long,*(*(struct`)),int)),*(void),int)->(*(struct(*(void),int,int,*(void),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(long,long,long,*`,int)))))
(	O
all_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
,	O
uid	*(char)
,	O
(	O
unsigned	O
int	O
)	O
0	int
)	O
||	O
hashtab_find	(*(struct(long,long,long,*(*(struct`)),int)),*(void),int)->(*(struct(*(void),int,int,*(void),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(long,long,long,*`,int)))))
(	O
all_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
,	O
dev	*(char)
,	O
(	O
unsigned	O
int	O
)	O
0	int
)	O
||	O
hashtab_find	(*(struct(long,long,long,*(*(struct`)),int)),*(void),int)->(*(struct(*(void),int,int,*(void),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(long,long,long,*`,int)))))
(	O
all_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
,	O
comm	*(char)
,	O
(	O
unsigned	O
int	O
)	O
COMM_LEN	O
)	O
)	O
)	O
return	O
1	int
;	O
if	O
(	O
tty_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
&&	O
hashtab_find	(*(struct(long,long,long,*(*(struct`)),int)),*(void),int)->(*(struct(*(void),int,int,*(void),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(long,long,long,*`,int)))))
(	O
tty_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
,	O
dev	*(char)
,	O
(	O
unsigned	O
int	O
)	O
0	int
)	O
)	O
return	O
1	int
;	O
if	O
(	O
user_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
&&	O
hashtab_find	(*(struct(long,long,long,*(*(struct`)),int)),*(void),int)->(*(struct(*(void),int,int,*(void),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(long,long,long,*`,int)))))
(	O
user_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
,	O
uid	*(char)
,	O
(	O
unsigned	O
int	O
)	O
0	int
)	O
)	O
return	O
1	int
;	O
if	O
(	O
command_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
&&	O
hashtab_find	(*(struct(long,long,long,*(*(struct`)),int)),*(void),int)->(*(struct(*(void),int,int,*(void),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(*`,int,int,*`,*`,*`,*`)),*(struct(long,long,long,*`,int)))))
(	O
command_list	*(struct(long,long,long,*(*(struct(*`,int,int,*`,*`,*`,*`))),int))
,	O
comm	*(char)
,	O
(	O
unsigned	O
int	O
)	O
COMM_LEN	O
)	O
)	O
return	O
1	int
;	O
return	O
0	int
;	O
}	O
}	O
