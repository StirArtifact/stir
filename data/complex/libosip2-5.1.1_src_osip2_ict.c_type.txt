int	O
__osip_ict_init	(*(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))),*(struct(*(void),*(void),*(void),*(void),*(void),*(void),*(void),int,struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),array(*((int,*(struct(*(void),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,long,int,int,*(void),enum(int,int,int,int),*(struct`),*(struct`),*(struct`),*(struct`),struct(array(char),int,array(char),array(char),array(char),array(char),int,int,int,array(struct(array(char),int,int,int,int,array(char),struct(long,long)))),*(struct`),*(void),*(void),*(void),*(void),*(void),*(void))),*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))))->(void))),array(*((int,*(struct(*(void),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,long,int,int,*(void),enum(int,int,int,int),*(struct`),*(struct`),*(struct`),*(struct`),struct(array(char),int,array(char),array(char),array(char),array(char),int,int,int,array(struct(array(char),int,int,int,int,array(char),struct(long,long)))),*(struct`),*(void),*(void),*(void),*(void),*(void),*(void))))->(void))),array(*((int,*(struct(*(void),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,long,int,int,*(void),enum(int,int,int,int),*(struct`),*(struct`),*(struct`),*(struct`),struct(array(char),int,array(char),array(char),array(char),array(char),int,int,int,array(struct(array(char),int,int,int,int,array(char),struct(long,long)))),*(struct`),*(void),*(void),*(void),*(void),*(void),*(void))),int)->(void))),*((*`,*`,*`,int,int)->(int)),*(void),*(void),*(void),*(void))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))->(int)
(	O
osip_ict_t	struct
*	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
,	O
osip_t	struct
*	O
osip	struct(*(void),*(void),*(void),*(void),*(void),*(void),*(void),int,struct(int,*(struct(*(struct(*`,*`)),*(void)))),struct(int,*(struct(*(struct(*`,*`)),*(void)))),struct(int,*(struct(*(struct(*`,*`)),*(void)))),struct(int,*(struct(*(struct(*`,*`)),*(void)))),struct(int,*(struct(*(struct(*`,*`)),*(void)))),array(*((int,*(struct(*(void),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,long,int,int,*(void),enum(int,int,int,int),*(struct`),*(struct`),*(struct`),*(struct`),struct(array(char),int,array(char),array(char),array(char),array(char),int,int,int,array(struct(array(char),int,int,int,int,array(char),struct(long,long)))),*(struct`),*(void),*(void),*(void),*(void),*(void),*(void))),*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))))->(void))),array(*((int,*(struct(*(void),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,long,int,int,*(void),enum(int,int,int,int),*(struct`),*(struct`),*(struct`),*(struct`),struct(array(char),int,array(char),array(char),array(char),array(char),int,int,int,array(struct(array(char),int,int,int,int,array(char),struct(long,long)))),*(struct`),*(void),*(void),*(void),*(void),*(void),*(void))))->(void))),array(*((int,*(struct(*(void),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,long,int,int,*(void),enum(int,int,int,int),*(struct`),*(struct`),*(struct`),*(struct`),struct(array(char),int,array(char),array(char),array(char),array(char),int,int,int,array(struct(array(char),int,int,int,int,array(char),struct(long,long)))),*(struct`),*(void),*(void),*(void),*(void),*(void),*(void))),int)->(void))),*((*(struct(*(void),int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,long,int,int,*(void),enum(int,int,int,int),*(struct`),*(struct`),*(struct`),*(struct`),struct(array(char),int,array(char),array(char),array(char),array(char),int,int,int,array(struct(array(char),int,int,int,int,array(char),struct(long,long)))),*(struct`),*(void),*(void),*(void),*(void),*(void),*(void))),*(struct(*(char),*(struct`),*(char),int,*(char),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),*(struct`),*(struct`),struct(int,*`),*(struct`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),*(struct`),struct(int,*`),struct(int,*`),struct(int,*`),struct(int,*`),int,*(char),long,*(void))),*(char),int,int)->(int)),*(void),*(void),*(void),*(void))
,	O
osip_message_t	struct
*	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
)	O
{	O
osip_route_t	struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))),struct(int,*(struct(*(struct`),*(void)))))
*	O
route	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
;	O
int	O
i	int
;	O
OSIP_TRACE	O
(	O
osip_trace	(*(char),int,enum(int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_INFO2	O
,	O
NULL	O
,	O
"allocating ICT context\n"	*(char)
)	O
)	O
;	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
=	O
(	O
osip_ict_t	struct
*	O
)	O
osip_malloc	O
(	O
sizeof	O
(	O
osip_ict_t	struct
)	O
)	O
;	O
if	O
(	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
,	O
0	int
,	O
sizeof	O
(	O
osip_ict_t	struct
)	O
)	O
;	O
{	O
osip_via_t	struct
*	O
via	*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`)))))
;	O
char	O
*	O
proto	*(char)
;	O
i	int
=	O
osip_message_get_via	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),int,*(*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`)))))->(int)
(	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
,	O
0	int
,	O
&	O
via	*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`)))))
)	O
;	O
if	O
(	O
i	int
<	O
0	int
)	O
{	O
osip_free	O
(	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
)	O
;	O
return	O
i	int
;	O
}	O
proto	*(char)
=	O
via_get_protocol	(*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)))))->(*(char))
(	O
via	*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`)))))
)	O
;	O
if	O
(	O
proto	*(char)
==	O
NULL	O
)	O
{	O
osip_free	O
(	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
)	O
;	O
return	O
OSIP_SYNTAXERROR	O
;	O
}	O
if	O
(	O
osip_strcasecmp	(*(char),*(char))->(int)
(	O
proto	*(char)
,	O
"TCP"	*(char)
)	O
!=	O
0	int
&&	O
osip_strcasecmp	(*(char),*(char))->(int)
(	O
proto	*(char)
,	O
"TLS"	*(char)
)	O
!=	O
0	int
&&	O
osip_strcasecmp	(*(char),*(char))->(int)
(	O
proto	*(char)
,	O
"SCTP"	*(char)
)	O
!=	O
0	int
)	O
{	O
(	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
)	O
->	O
timer_a_length	int
=	O
DEFAULT_T1	int
;	O
if	O
(	O
64	int
*	O
DEFAULT_T1	int
<	O
32000	int
)	O
(	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
)	O
->	O
timer_d_length	int
=	O
32000	int
;	O
else	O
(	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
)	O
->	O
timer_d_length	int
=	O
64	int
*	O
DEFAULT_T1	int
;	O
osip_gettimeofday	(*(struct(long,long)),*(void))->(int)
(	O
&	O
(	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
)	O
->	O
timer_a_start	struct(long,long)
,	O
NULL	O
)	O
;	O
add_gettimeofday	(*(struct(long,long)),int)->(void)
(	O
&	O
(	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
)	O
->	O
timer_a_start	struct(long,long)
,	O
(	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
)	O
->	O
timer_a_length	int
)	O
;	O
(	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
)	O
->	O
timer_d_start	struct(long,long)
.	O
tv_sec	long
=	O
-	O
1	int
;	O
}	O
else	O
{	O
(	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
)	O
->	O
timer_a_length	int
=	O
DEFAULT_T1	int
;	O
(	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
)	O
->	O
timer_d_length	int
=	O
0	int
;	O
osip_gettimeofday	(*(struct(long,long)),*(void))->(int)
(	O
&	O
(	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
)	O
->	O
timer_a_start	struct(long,long)
,	O
NULL	O
)	O
;	O
add_gettimeofday	(*(struct(long,long)),int)->(void)
(	O
&	O
(	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
)	O
->	O
timer_a_start	struct(long,long)
,	O
(	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
)	O
->	O
timer_a_length	int
)	O
;	O
(	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
)	O
->	O
timer_d_start	struct(long,long)
.	O
tv_sec	long
=	O
-	O
1	int
;	O
}	O
}	O
osip_message_get_route	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),int,*(*(struct(*(char),*(struct`),struct(int,*`)))))->(int)
(	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
,	O
0	int
,	O
&	O
route	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
)	O
;	O
if	O
(	O
route	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
!=	O
NULL	O
&&	O
route	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
->	O
url	*(*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))))
!=	O
NULL	O
)	O
{	O
osip_uri_param_t	struct
*	O
lr_param	*(struct(*(char),*(char)))
;	O
osip_uri_uparam_get_byname	O
(	O
route	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
->	O
url	*(*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))))
,	O
"lr"	*(char)
,	O
&	O
lr_param	*(struct(*(char),*(char)))
)	O
;	O
if	O
(	O
lr_param	*(struct(*(char),*(char)))
==	O
NULL	O
)	O
{	O
route	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
=	O
NULL	O
;	O
}	O
}	O
if	O
(	O
route	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
!=	O
NULL	O
&&	O
route	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
->	O
url	*(*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))))
!=	O
NULL	O
)	O
{	O
int	O
port	*(char)
=	O
5060	int
;	O
if	O
(	O
route	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
->	O
url	*(*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))))
->	O
port	*(char)
!=	O
NULL	O
)	O
port	*(char)
=	O
osip_atoi	(*(char))->(int)
(	O
route	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
->	O
url	*(*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))))
->	O
port	*(char)
)	O
;	O
osip_ict_set_destination	(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int)),*(char),int)->(int)
(	O
(	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
)	O
,	O
osip_strdup	(*(char))->(*(char))
(	O
route	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
->	O
url	*(*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))))
->	O
host	*(char)
)	O
,	O
port	*(char)
)	O
;	O
}	O
else	O
{	O
int	O
port	*(char)
=	O
5060	int
;	O
osip_uri_param_t	struct
*	O
maddr_param	*(struct(*(char),*(char)))
=	O
NULL	O
;	O
osip_uri_param_t	struct
*	O
obr_param	*(struct(*(char),*(char)))
=	O
NULL	O
;	O
osip_uri_param_t	struct
*	O
obp_param	*(struct(*(char),*(char)))
=	O
NULL	O
;	O
port	*(char)
=	O
5060	int
;	O
if	O
(	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
req_uri	*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(char)))
->	O
port	*(char)
!=	O
NULL	O
)	O
port	*(char)
=	O
osip_atoi	(*(char))->(int)
(	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
req_uri	*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(char)))
->	O
port	*(char)
)	O
;	O
osip_uri_uparam_get_byname	O
(	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
req_uri	*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(char)))
,	O
"x-obr"	*(char)
,	O
&	O
obr_param	*(struct(*(char),*(char)))
)	O
;	O
osip_uri_uparam_get_byname	O
(	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
req_uri	*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(char)))
,	O
"x-obp"	*(char)
,	O
&	O
obp_param	*(struct(*(char),*(char)))
)	O
;	O
osip_uri_uparam_get_byname	O
(	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
req_uri	*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(char)))
,	O
"maddr"	*(char)
,	O
&	O
maddr_param	*(struct(*(char),*(char)))
)	O
;	O
if	O
(	O
maddr_param	*(struct(*(char),*(char)))
!=	O
NULL	O
&&	O
maddr_param	*(struct(*(char),*(char)))
->	O
gvalue	*(char)
!=	O
NULL	O
)	O
osip_ict_set_destination	(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int)),*(char),int)->(int)
(	O
(	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
)	O
,	O
osip_strdup	(*(char))->(*(char))
(	O
maddr_param	*(struct(*(char),*(char)))
->	O
gvalue	*(char)
)	O
,	O
port	*(char)
)	O
;	O
else	O
if	O
(	O
obr_param	*(struct(*(char),*(char)))
!=	O
NULL	O
&&	O
obr_param	*(struct(*(char),*(char)))
->	O
gvalue	*(char)
!=	O
NULL	O
&&	O
obp_param	*(struct(*(char),*(char)))
!=	O
NULL	O
&&	O
obp_param	*(struct(*(char),*(char)))
->	O
gvalue	*(char)
!=	O
NULL	O
)	O
osip_ict_set_destination	(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int)),*(char),int)->(int)
(	O
(	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
)	O
,	O
osip_strdup	(*(char))->(*(char))
(	O
obr_param	*(struct(*(char),*(char)))
->	O
gvalue	*(char)
)	O
,	O
osip_atoi	(*(char))->(int)
(	O
obp_param	*(struct(*(char),*(char)))
->	O
gvalue	*(char)
)	O
)	O
;	O
else	O
osip_ict_set_destination	(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int)),*(char),int)->(int)
(	O
(	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
)	O
,	O
osip_strdup	(*(char))->(*(char))
(	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
req_uri	*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(char)))
->	O
host	*(char)
)	O
,	O
port	*(char)
)	O
;	O
}	O
(	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
)	O
->	O
timer_b_length	int
=	O
64	int
*	O
DEFAULT_T1	int
;	O
osip_gettimeofday	(*(struct(long,long)),*(void))->(int)
(	O
&	O
(	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
)	O
->	O
timer_b_start	struct(long,long)
,	O
NULL	O
)	O
;	O
add_gettimeofday	(*(struct(long,long)),int)->(void)
(	O
&	O
(	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
)	O
->	O
timer_b_start	struct(long,long)
,	O
(	O
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
)	O
->	O
timer_b_length	int
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
__osip_ict_free	(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int)))->(int)
(	O
osip_ict_t	struct
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
)	O
{	O
if	O
(	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
OSIP_TRACE	O
(	O
osip_trace	(*(char),int,enum(int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_INFO2	O
,	O
NULL	O
,	O
"free ict resource\n"	*(char)
)	O
)	O
;	O
osip_free	O
(	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
->	O
destination	*(char)
)	O
;	O
osip_free	O
(	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_ict_set_destination	(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int)),*(char),int)->(int)
(	O
osip_ict_t	struct
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
,	O
char	O
*	O
destination	*(char)
,	O
int	O
port	*(char)
)	O
{	O
if	O
(	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
->	O
destination	*(char)
!=	O
NULL	O
)	O
osip_free	O
(	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
->	O
destination	*(char)
)	O
;	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
->	O
destination	*(char)
=	O
destination	*(char)
;	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
->	O
port	*(char)
=	O
port	*(char)
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
osip_event_t	struct
*	O
__osip_ict_need_timer_a_event	(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)))))
(	O
osip_ict_t	struct
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
,	O
state_t	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
state	*(int)
,	O
int	O
transactionid	int
)	O
{	O
return	O
__osip_transaction_need_timer_x_event	(*(void),*(struct(long,long)),int,int,int)->(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)))))
(	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
,	O
&	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
->	O
timer_a_start	struct(long,long)
,	O
state	*(int)
==	O
ICT_CALLING	int
,	O
transactionid	int
,	O
TIMEOUT_A	int
)	O
;	O
}	O
osip_event_t	struct
*	O
__osip_ict_need_timer_b_event	(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)))))
(	O
osip_ict_t	struct
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
,	O
state_t	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
state	*(int)
,	O
int	O
transactionid	int
)	O
{	O
return	O
__osip_transaction_need_timer_x_event	(*(void),*(struct(long,long)),int,int,int)->(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)))))
(	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
,	O
&	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
->	O
timer_b_start	struct(long,long)
,	O
state	*(int)
==	O
ICT_CALLING	int
,	O
transactionid	int
,	O
TIMEOUT_B	int
)	O
;	O
}	O
osip_event_t	struct
*	O
__osip_ict_need_timer_d_event	(*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)))))
(	O
osip_ict_t	struct
*	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
,	O
state_t	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
state	*(int)
,	O
int	O
transactionid	int
)	O
{	O
return	O
__osip_transaction_need_timer_x_event	(*(void),*(struct(long,long)),int,int,int)->(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*`,*`,*`,int,*`,struct`,struct`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,*`,*`,*`,struct`,*`,*`,struct`,struct`,struct`,struct`,struct`,*`,struct`,struct`,struct`,struct`,int,*`,long,*`)))))
(	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
,	O
&	O
ict	*(struct(int,struct(long,long),int,struct(long,long),int,struct(long,long),*(char),int))
->	O
timer_d_start	struct(long,long)
,	O
state	*(int)
==	O
ICT_COMPLETED	int
,	O
transactionid	int
,	O
TIMEOUT_D	int
)	O
;	O
}	O
