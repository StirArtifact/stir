VObject	struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct(double,double,double),*(struct`),*(struct`),*(struct`),double))),*(short))
*	O
VCopyObject	(*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct`)),*(short))))->(*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct`)),*(short))))
(	O
VObject	struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct(double,double,double),*(struct`),*(struct`),*(struct`),double))),*(short))
*	O
obj	*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct`,*`,*`,*`,double))),*(short)))
)	O
{	O
register	O
int	O
i	int
;	O
register	O
VObject	struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct(double,double,double),*(struct`),*(struct`),*(struct`),double))),*(short))
*	O
newObj	*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct`,*`,*`,*`,double))),*(short)))
;	O
newObj	*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct`,*`,*`,*`,double))),*(short)))
=	O
(	O
VObject	struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct(double,double,double),*(struct`),*(struct`),*(struct`),double))),*(short))
*	O
)	O
Vmalloc	(int)->(*(char))
(	O
sizeof	O
(	O
VObject	struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct(double,double,double),*(struct`),*(struct`),*(struct`),double))),*(short))
)	O
)	O
;	O
newObj	*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct`,*`,*`,*`,double))),*(short)))
->	O
name	*(char)
=	O
obj	*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct`,*`,*`,*`,double))),*(short)))
->	O
name	*(char)
;	O
newObj	*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct`,*`,*`,*`,double))),*(short)))
->	O
extent	double
=	O
obj	*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct`,*`,*`,*`,double))),*(short)))
->	O
extent	double
;	O
newObj	*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct`,*`,*`,*`,double))),*(short)))
->	O
center	struct(double,double,double)
=	O
obj	*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct`,*`,*`,*`,double))),*(short)))
->	O
center	struct(double,double,double)
;	O
newObj	*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct`,*`,*`,*`,double))),*(short)))
->	O
numPolys	int
=	O
obj	*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct`,*`,*`,*`,double))),*(short)))
->	O
numPolys	int
;	O
newObj	*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct`,*`,*`,*`,double))),*(short)))
->	O
polygon	*(*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*`,short,short,*`)),*(struct(*`,short,short,*`)),double)))
=	O
(	O
VPolygon	struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),double)
*	O
*	O
)	O
Vmalloc	(int)->(*(char))
(	O
sizeof	O
(	O
VPolygon	struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),double)
*	O
)	O
*	O
newObj	*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct`,*`,*`,*`,double))),*(short)))
->	O
numPolys	int
)	O
;	O
if	O
(	O
obj	*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct`,*`,*`,*`,double))),*(short)))
->	O
order	*(short)
)	O
{	O
newObj	*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct`,*`,*`,*`,double))),*(short)))
->	O
order	*(short)
=	O
(	O
unsigned	O
short	O
*	O
)	O
Vmalloc	(int)->(*(char))
(	O
sizeof	O
(	O
unsigned	O
short	O
)	O
*	O
NUM_ASPECTS	int
*	O
newObj	*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct`,*`,*`,*`,double))),*(short)))
->	O
numPolys	int
)	O
;	O
memcpy	O
(	O
(	O
char	O
*	O
)	O
newObj	*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct`,*`,*`,*`,double))),*(short)))
->	O
order	*(short)
,	O
(	O
char	O
*	O
)	O
obj	*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct`,*`,*`,*`,double))),*(short)))
->	O
order	*(short)
,	O
sizeof	O
(	O
unsigned	O
short	O
)	O
*	O
NUM_ASPECTS	int
*	O
newObj	*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct`,*`,*`,*`,double))),*(short)))
->	O
numPolys	int
)	O
;	O
}	O
else	O
{	O
newObj	*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct`,*`,*`,*`,double))),*(short)))
->	O
order	*(short)
=	O
(	O
unsigned	O
short	O
*	O
)	O
NULL	O
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
obj	*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct`,*`,*`,*`,double))),*(short)))
->	O
numPolys	int
;	O
++	O
i	int
)	O
{	O
if	O
(	O
(	O
newObj	*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct`,*`,*`,*`,double))),*(short)))
->	O
polygon	*(*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*`,short,short,*`)),*(struct(*`,short,short,*`)),double)))
[	O
i	int
]	O
=	O
VCopyPolygon	(*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*`,short,short,*`)),*(struct(*`,short,short,*`)),double)))->(*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*`,short,short,*`)),*(struct(*`,short,short,*`)),double)))
(	O
obj	*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct`,*`,*`,*`,double))),*(short)))
->	O
polygon	*(*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*`,short,short,*`)),*(struct(*`,short,short,*`)),double)))
[	O
i	int
]	O
)	O
)	O
==	O
(	O
VPolygon	struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),double)
*	O
)	O
NULL	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"VCopyObject: can't copy polygons\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
}	O
return	O
newObj	*(struct(*(char),struct(double,double,double),struct(double,double,double),struct(double,double,double),struct(double,double,double),double,int,*(*(struct(short,short,short,struct`,*`,*`,*`,double))),*(short)))
;	O
}	O
