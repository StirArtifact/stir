static	O
void	O
umac_kdf	(*(struct(array(int))),int,int,*(char))->(void)
(	O
struct	O
aes128_ctx	struct(array(int))
*	O
aes	*(struct(array(int)))
,	O
unsigned	O
index	(*(char),int)->(*(char))
,	O
unsigned	O
length	long
,	O
uint8_t	char
*	O
dst	*(char)
)	O
{	O
uint8_t	char
block	array(char)
[	O
AES_BLOCK_SIZE	int
]	O
;	O
uint64_t	long
count	long
;	O
WRITE_UINT64	O
(	O
block	array(char)
,	O
(	O
uint64_t	long
)	O
index	(*(char),int)->(*(char))
)	O
;	O
for	O
(	O
count	long
=	O
1	int
;	O
length	long
>=	O
AES_BLOCK_SIZE	int
;	O
length	long
-=	O
AES_BLOCK_SIZE	int
,	O
dst	*(char)
+=	O
AES_BLOCK_SIZE	int
,	O
count	long
++	O
)	O
{	O
WRITE_UINT64	O
(	O
block	array(char)
+	O
8	int
,	O
count	long
)	O
;	O
aes128_encrypt	O
(	O
aes	*(struct(array(int)))
,	O
AES_BLOCK_SIZE	int
,	O
dst	*(char)
,	O
block	array(char)
)	O
;	O
}	O
if	O
(	O
length	long
>	O
0	int
)	O
{	O
WRITE_UINT64	O
(	O
block	array(char)
+	O
8	int
,	O
count	long
)	O
;	O
aes128_encrypt	O
(	O
aes	*(struct(array(int)))
,	O
AES_BLOCK_SIZE	int
,	O
block	array(char)
,	O
block	array(char)
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
dst	*(char)
,	O
block	array(char)
,	O
length	long
)	O
;	O
}	O
}	O
void	O
_umac_set_key	O
(	O
uint32_t	int
*	O
l1_key	array(int)
,	O
uint32_t	int
*	O
l2_key	array(int)
,	O
uint64_t	long
*	O
l3_key1	array(long)
,	O
uint32_t	int
*	O
l3_key2	array(int)
,	O
struct	O
aes128_ctx	struct(array(int))
*	O
aes	*(struct(array(int)))
,	O
const	O
uint8_t	char
*	O
key	*(char)
,	O
unsigned	O
n	int
)	O
{	O
unsigned	O
size	int
;	O
uint8_t	char
buffer	array(char)
[	O
UMAC_KEY_SIZE	O
]	O
;	O
aes128_set_encrypt_key	O
(	O
aes	*(struct(array(int)))
,	O
key	*(char)
)	O
;	O
size	int
=	O
UMAC_BLOCK_SIZE	int
/	O
4	int
+	O
4	int
*	O
(	O
n	int
-	O
1	int
)	O
;	O
umac_kdf	(*(struct(array(int))),int,int,*(char))->(void)
(	O
aes	*(struct(array(int)))
,	O
1	int
,	O
size	int
*	O
sizeof	O
(	O
uint32_t	int
)	O
,	O
(	O
uint8_t	char
*	O
)	O
l1_key	array(int)
)	O
;	O
BE_SWAP32_N	O
(	O
size	int
,	O
l1_key	array(int)
)	O
;	O
size	int
=	O
6	int
*	O
n	int
;	O
umac_kdf	(*(struct(array(int))),int,int,*(char))->(void)
(	O
aes	*(struct(array(int)))
,	O
2	int
,	O
size	int
*	O
sizeof	O
(	O
uint32_t	int
)	O
,	O
(	O
uint8_t	char
*	O
)	O
l2_key	array(int)
)	O
;	O
_umac_l2_init	O
(	O
size	int
,	O
l2_key	array(int)
)	O
;	O
size	int
=	O
8	int
*	O
n	int
;	O
umac_kdf	(*(struct(array(int))),int,int,*(char))->(void)
(	O
aes	*(struct(array(int)))
,	O
3	int
,	O
size	int
*	O
sizeof	O
(	O
uint64_t	long
)	O
,	O
(	O
uint8_t	char
*	O
)	O
l3_key1	array(long)
)	O
;	O
_umac_l3_init	O
(	O
size	int
,	O
l3_key1	array(long)
)	O
;	O
umac_kdf	(*(struct(array(int))),int,int,*(char))->(void)
(	O
aes	*(struct(array(int)))
,	O
4	int
,	O
n	int
*	O
sizeof	O
(	O
uint32_t	int
)	O
,	O
(	O
uint8_t	char
*	O
)	O
l3_key2	array(int)
)	O
;	O
umac_kdf	(*(struct(array(int))),int,int,*(char))->(void)
(	O
aes	*(struct(array(int)))
,	O
0	int
,	O
UMAC_KEY_SIZE	O
,	O
buffer	array(char)
)	O
;	O
aes128_set_encrypt_key	O
(	O
aes	*(struct(array(int)))
,	O
buffer	array(char)
)	O
;	O
}	O
