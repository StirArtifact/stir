extern	O
char	O
*	O
*	O
environ	*(*(char))
;	O
char	O
*	O
progname	*(char)
;	O
enum	O
{	O
TRIMNL_OPTION	int
=	O
0x01	int
,	O
PLAINTEXT_OPTION	int
=	O
0x02	int
}	O
;	O
enum	O
env_type	enum(int,int,int)
{	O
env_none	int
,	O
env_null	int
,	O
env_sys	int
}	O
;	O
struct	O
wsclosure	struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)
{	O
int	O
options	int
;	O
struct	O
wordsplit	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
;	O
int	O
wsflags	int
;	O
enum	O
env_type	enum(int,int,int)
env_type	enum(int,int,int)
;	O
int	O
offarg	int
;	O
char	O
*	O
*	O
fenvbase	*(*(char))
;	O
int	O
fenvidx	int
;	O
int	O
fenvmax	int
;	O
int	O
append_start	int
;	O
int	O
append_count	int
;	O
}	O
;	O
enum	O
{	O
ws_no_argument	int
,	O
ws_boolean	int
,	O
ws_required_argument	int
,	O
ws_multiple_arguments	int
}	O
;	O
struct	O
wsopt	struct(*(char),int,int,*((int,int,*(char),*(struct(int,struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int),int,enum(int,int,int),int,*(*`),int,int,int,int)))->(void)))
{	O
const	O
char	O
*	O
name	*(char)
;	O
int	O
tok	int
;	O
int	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
;	O
void	O
(	O
*	O
setfn	*((int,int,*(char),*(struct(int,struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int),int,enum(int,int,int),int,*(*`),int,int,int,int)))->(void))
)	O
(	O
int	O
tok	int
,	O
int	O
neg	int
,	O
char	O
*	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
struct	O
wsclosure	struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)
*	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
)	O
;	O
}	O
;	O
static	O
int	O
wsoptind	int
=	O
-	O
1	int
;	O
static	O
int	O
getwsopt	(int,*(*(char)),*(struct(*(char),int,int,*((int,int,*`,*`)->(void)))),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
,	O
struct	O
wsopt	struct(*(char),int,int,*((int,int,*(char),*(struct(int,struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int),int,enum(int,int,int),int,*(*`),int,int,int,int)))->(void)))
*	O
wso	*(struct(*(char),int,int,*((int,int,*(char),*(struct`))->(void))))
,	O
struct	O
wsclosure	struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)
*	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
)	O
{	O
int	O
negate	int
=	O
0	int
;	O
char	O
*	O
opt	*(char)
;	O
if	O
(	O
wsoptind	int
==	O
-	O
1	int
)	O
wsoptind	int
=	O
1	int
;	O
if	O
(	O
wsoptind	int
==	O
argc	int
)	O
return	O
EOF	O
;	O
opt	*(char)
=	O
argv	*(*(char))
[	O
wsoptind	int
++	O
]	O
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
opt	*(char)
,	O
"--"	*(char)
)	O
==	O
0	int
)	O
return	O
EOF	O
;	O
if	O
(	O
*	O
opt	*(char)
!=	O
'-'	O
)	O
{	O
if	O
(	O
strchr	(*(char),int)->(*(char))
(	O
opt	*(char)
,	O
'='	O
)	O
)	O
{	O
assert	O
(	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
fenvidx	int
<	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
fenvmax	int
-	O
1	int
)	O
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
fenvbase	*(*(char))
[	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
fenvidx	int
++	O
]	O
=	O
opt	*(char)
;	O
return	O
0	int
;	O
}	O
wsoptind	int
--	O
;	O
return	O
EOF	O
;	O
}	O
opt	*(char)
++	O
;	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
opt	*(char)
,	O
"no-"	*(char)
,	O
3	int
)	O
==	O
0	int
)	O
{	O
negate	int
=	O
1	int
;	O
opt	*(char)
+=	O
3	int
;	O
}	O
else	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
opt	*(char)
,	O
"no"	*(char)
,	O
2	int
)	O
==	O
0	int
)	O
{	O
negate	int
=	O
1	int
;	O
opt	*(char)
+=	O
2	int
;	O
}	O
for	O
(	O
;	O
wso	*(struct(*(char),int,int,*((int,int,*(char),*(struct`))->(void))))
->	O
name	*(char)
;	O
wso	*(struct(*(char),int,int,*((int,int,*(char),*(struct`))->(void))))
++	O
)	O
{	O
if	O
(	O
wso	*(struct(*(char),int,int,*((int,int,*(char),*(struct`))->(void))))
->	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
==	O
ws_boolean	int
&&	O
wso	*(struct(*(char),int,int,*((int,int,*(char),*(struct`))->(void))))
->	O
name	*(char)
[	O
0	int
]	O
==	O
'n'	O
&&	O
wso	*(struct(*(char),int,int,*((int,int,*(char),*(struct`))->(void))))
->	O
name	*(char)
[	O
1	int
]	O
==	O
'o'	O
&&	O
strcmp	(*(char),*(char))->(int)
(	O
wso	*(struct(*(char),int,int,*((int,int,*(char),*(struct`))->(void))))
->	O
name	*(char)
+	O
2	int
,	O
opt	*(char)
)	O
==	O
0	int
)	O
{	O
negate	int
^=	O
1	int
;	O
break	O
;	O
}	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
wso	*(struct(*(char),int,int,*((int,int,*(char),*(struct`))->(void))))
->	O
name	*(char)
,	O
opt	*(char)
)	O
==	O
0	int
)	O
break	O
;	O
}	O
if	O
(	O
wso	*(struct(*(char),int,int,*((int,int,*(char),*(struct`))->(void))))
->	O
name	*(char)
)	O
{	O
char	O
*	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
;	O
if	O
(	O
wso	*(struct(*(char),int,int,*((int,int,*(char),*(struct`))->(void))))
->	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
==	O
ws_multiple_arguments	int
)	O
{	O
while	O
(	O
1	int
)	O
{	O
if	O
(	O
wsoptind	int
==	O
argc	int
)	O
break	O
;	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
=	O
argv	*(*(char))
[	O
wsoptind	int
++	O
]	O
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
"--"	*(char)
)	O
==	O
0	int
)	O
break	O
;	O
wso	*(struct(*(char),int,int,*((int,int,*(char),*(struct`))->(void))))
->	O
setfn	*((int,int,*(char),*(struct(int,struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int),int,enum(int,int,int),int,*(*`),int,int,int,int)))->(void))
(	O
wso	*(struct(*(char),int,int,*((int,int,*(char),*(struct`))->(void))))
->	O
tok	int
,	O
negate	int
,	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
)	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
wso	*(struct(*(char),int,int,*((int,int,*(char),*(struct`))->(void))))
->	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
==	O
ws_required_argument	int
)	O
{	O
if	O
(	O
wsoptind	int
==	O
argc	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: missing arguments for -%s\n"	*(char)
,	O
progname	*(char)
,	O
opt	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
=	O
argv	*(*(char))
[	O
wsoptind	int
++	O
]	O
;	O
}	O
wso	*(struct(*(char),int,int,*((int,int,*(char),*(struct`))->(void))))
->	O
setfn	*((int,int,*(char),*(struct(int,struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int),int,enum(int,int,int),int,*(*`),int,int,int,int)))->(void))
(	O
wso	*(struct(*(char),int,int,*((int,int,*(char),*(struct`))->(void))))
->	O
tok	int
,	O
negate	int
,	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
)	O
;	O
}	O
return	O
0	int
;	O
}	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: unrecognized option: -%s\n"	*(char)
,	O
progname	*(char)
,	O
opt	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: try %s -help for more detail\n"	*(char)
,	O
progname	*(char)
,	O
progname	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
static	O
void	O
setfn_flag	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
(	O
int	O
flag	int
,	O
int	O
neg	int
,	O
char	O
*	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
struct	O
wsclosure	struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)
*	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
)	O
{	O
if	O
(	O
neg	int
)	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
wsflags	int
&=	O
~	O
flag	int
;	O
else	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
wsflags	int
|=	O
flag	int
;	O
}	O
static	O
void	O
setfn_option	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
(	O
int	O
flag	int
,	O
int	O
neg	int
,	O
char	O
*	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
struct	O
wsclosure	struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)
*	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
)	O
{	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
wsflags	int
|=	O
WRDSF_OPTIONS	int
;	O
if	O
(	O
neg	int
)	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_options	int
&=	O
~	O
flag	int
;	O
else	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_options	int
|=	O
flag	int
;	O
}	O
static	O
void	O
setfn_delim	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
(	O
int	O
flag	int
,	O
int	O
neg	int
,	O
char	O
*	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
struct	O
wsclosure	struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)
*	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
)	O
{	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
wsflags	int
|=	O
flag	int
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_delim	*(char)
=	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
;	O
}	O
static	O
void	O
setfn_comment	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
(	O
int	O
flag	int
,	O
int	O
neg	int
,	O
char	O
*	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
struct	O
wsclosure	struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)
*	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
)	O
{	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
wsflags	int
|=	O
flag	int
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_comment	*(char)
=	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
;	O
}	O
static	O
void	O
set_escape_string	(*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)),*(int),int,*(char))->(void)
(	O
wordsplit_t	struct
*	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
,	O
int	O
*	O
wsflags	int
,	O
int	O
q	int
,	O
const	O
char	O
*	O
str	*(char)
)	O
{	O
if	O
(	O
*	O
str	*(char)
==	O
':'	O
)	O
{	O
while	O
(	O
*	O
++	O
str	*(char)
!=	O
':'	O
)	O
{	O
int	O
f	int
;	O
switch	O
(	O
*	O
str	*(char)
)	O
{	O
case	O
'+'	O
:	O
f	int
=	O
WRDSO_BSKEEP	O
;	O
break	O
;	O
case	O
'0'	O
:	O
f	int
=	O
WRDSO_OESC	O
;	O
break	O
;	O
case	O
'x'	O
:	O
f	int
=	O
WRDSO_XESC	O
;	O
break	O
;	O
default	O
:	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: invalid escape flag near %s\n"	*(char)
,	O
progname	*(char)
,	O
str	*(char)
)	O
;	O
abort	()->(void)
(	O
)	O
;	O
}	O
WRDSO_ESC_SET	O
(	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
,	O
q	int
,	O
f	int
)	O
;	O
}	O
*	O
wsflags	int
|=	O
WRDSF_OPTIONS	int
;	O
++	O
str	*(char)
;	O
}	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
->	O
ws_escape	array(*(char))
[	O
q	int
]	O
=	O
str	*(char)
;	O
}	O
static	O
void	O
setfn_escape	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
(	O
int	O
flag	int
,	O
int	O
neg	int
,	O
char	O
*	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
struct	O
wsclosure	struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)
*	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
)	O
{	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
wsflags	int
|=	O
flag	int
;	O
set_escape_string	(*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)),*(int),int,*(char))->(void)
(	O
&	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
,	O
&	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
wsflags	int
,	O
0	int
,	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
)	O
;	O
set_escape_string	(*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)),*(int),int,*(char))->(void)
(	O
&	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
,	O
&	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
wsflags	int
,	O
1	int
,	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
)	O
;	O
}	O
static	O
void	O
setfn_escape_qw	(*(char),int,*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
(	O
char	O
*	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
int	O
quote	*(int)
,	O
struct	O
wsclosure	struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)
*	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
)	O
{	O
if	O
(	O
!	O
(	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
wsflags	int
&	O
WRDSF_ESCAPE	int
)	O
)	O
{	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
wsflags	int
|=	O
WRDSF_ESCAPE	int
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_escape	array(*(char))
[	O
!	O
quote	*(int)
]	O
=	O
NULL	O
;	O
}	O
set_escape_string	(*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)),*(int),int,*(char))->(void)
(	O
&	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
,	O
&	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
wsflags	int
,	O
quote	*(int)
,	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
)	O
;	O
}	O
static	O
void	O
setfn_escape_word	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
(	O
int	O
flag	int
,	O
int	O
neg	int
,	O
char	O
*	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
struct	O
wsclosure	struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)
*	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
)	O
{	O
setfn_escape_qw	(*(char),int,*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
(	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
0	int
,	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
)	O
;	O
}	O
static	O
void	O
setfn_escape_quote	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
(	O
int	O
flag	int
,	O
int	O
neg	int
,	O
char	O
*	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
struct	O
wsclosure	struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)
*	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
)	O
{	O
setfn_escape_qw	(*(char),int,*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
(	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
1	int
,	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
)	O
;	O
}	O
static	O
void	O
setfn_maxwords	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
(	O
int	O
flag	int
,	O
int	O
neg	int
,	O
char	O
*	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
struct	O
wsclosure	struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)
*	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
)	O
{	O
char	O
*	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
wsflags	int
|=	O
WRDSF_OPTIONS	int
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_options	int
|=	O
WRDSO_MAXWORDS	int
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_maxwords	long
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
&	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
,	O
10	int
)	O
;	O
if	O
(	O
*	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: invalid number: %s\n"	*(char)
,	O
progname	*(char)
,	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
}	O
static	O
void	O
setfn_global	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
(	O
int	O
flag	int
,	O
int	O
neg	int
,	O
char	O
*	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
struct	O
wsclosure	struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)
*	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
)	O
{	O
if	O
(	O
neg	int
)	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
options	int
&=	O
~	O
flag	int
;	O
else	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
options	int
|=	O
flag	int
;	O
}	O
static	O
void	O
setfn_env	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
(	O
int	O
flag	int
,	O
int	O
neg	int
,	O
char	O
*	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
struct	O
wsclosure	struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)
*	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
"none"	*(char)
)	O
==	O
0	int
)	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
env_type	enum(int,int,int)
=	O
env_none	int
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
"null"	*(char)
)	O
==	O
0	int
)	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
env_type	enum(int,int,int)
=	O
env_null	int
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
"sys"	*(char)
)	O
==	O
0	int
)	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
env_type	enum(int,int,int)
=	O
env_sys	int
;	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: environment flag: %s\n"	*(char)
,	O
progname	*(char)
,	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
}	O
static	O
void	O
setfn_dooffs	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
(	O
int	O
flag	int
,	O
int	O
neg	int
,	O
char	O
*	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
struct	O
wsclosure	struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)
*	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
)	O
{	O
if	O
(	O
!	O
(	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
wsflags	int
&	O
flag	int
)	O
)	O
{	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
wsflags	int
|=	O
flag	int
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
offarg	int
=	O
wsoptind	int
-	O
1	int
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_offs	long
=	O
0	int
;	O
}	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_offs	long
++	O
;	O
}	O
static	O
void	O
setfn_append	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
(	O
int	O
flag	int
,	O
int	O
neg	int
,	O
char	O
*	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
struct	O
wsclosure	struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)
*	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
)	O
{	O
if	O
(	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
append_count	int
==	O
0	int
)	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
append_start	int
=	O
wsoptind	int
-	O
1	int
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
->	O
append_count	int
++	O
;	O
}	O
static	O
void	O
help	()->(void)
(	O
void	O
)	O
;	O
static	O
void	O
setfn_help	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
(	O
int	O
flag	int
,	O
int	O
neg	int
,	O
char	O
*	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
,	O
struct	O
wsclosure	struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)
*	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
)	O
{	O
help	()->(void)
(	O
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
struct	O
wsopt	struct(*(char),int,int,*((int,int,*(char),*(struct(int,struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int),int,enum(int,int,int),int,*(*`),int,int,int,int)))->(void)))
opttab	array(struct(*(char),int,int,*((int,int,*(char),*(struct(int,struct`,int,enum(int,int,int),int,*`,int,int,int,int)))->(void))))
[	O
]	O
=	O
{	O
{	O
"trimnl"	*(char)
,	O
TRIMNL_OPTION	int
,	O
ws_boolean	int
,	O
setfn_global	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"plaintext"	*(char)
,	O
PLAINTEXT_OPTION	int
,	O
ws_boolean	int
,	O
setfn_global	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"env"	*(char)
,	O
0	int
,	O
ws_required_argument	int
,	O
setfn_env	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"append"	*(char)
,	O
WRDSF_APPEND	int
,	O
ws_boolean	int
,	O
setfn_flag	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"undef"	*(char)
,	O
WRDSF_UNDEF	int
,	O
ws_boolean	int
,	O
setfn_flag	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"novar"	*(char)
,	O
WRDSF_NOVAR	int
,	O
ws_boolean	int
,	O
setfn_flag	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"nocmd"	*(char)
,	O
WRDSF_NOCMD	int
,	O
ws_boolean	int
,	O
setfn_flag	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"ws"	*(char)
,	O
WRDSF_WS	int
,	O
ws_boolean	int
,	O
setfn_flag	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"quote"	*(char)
,	O
WRDSF_QUOTE	O
,	O
ws_boolean	int
,	O
setfn_flag	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"squote"	*(char)
,	O
WRDSF_SQUOTE	int
,	O
ws_boolean	int
,	O
setfn_flag	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"dquote"	*(char)
,	O
WRDSF_DQUOTE	int
,	O
ws_boolean	int
,	O
setfn_flag	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"squeeze_delims"	*(char)
,	O
WRDSF_SQUEEZE_DELIMS	int
,	O
ws_boolean	int
,	O
setfn_flag	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"return_delims"	*(char)
,	O
WRDSF_RETURN_DELIMS	int
,	O
ws_boolean	int
,	O
setfn_flag	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"sed"	*(char)
,	O
WRDSF_SED_EXPR	int
,	O
ws_boolean	int
,	O
setfn_flag	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"debug"	*(char)
,	O
WRDSF_SHOWDBG	int
,	O
ws_boolean	int
,	O
setfn_flag	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"nosplit"	*(char)
,	O
WRDSF_NOSPLIT	int
,	O
ws_boolean	int
,	O
setfn_flag	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"keepundef"	*(char)
,	O
WRDSF_KEEPUNDEF	int
,	O
ws_boolean	int
,	O
setfn_flag	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"warnundef"	*(char)
,	O
WRDSF_WARNUNDEF	int
,	O
ws_boolean	int
,	O
setfn_flag	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"cescapes"	*(char)
,	O
WRDSF_CESCAPES	int
,	O
ws_boolean	int
,	O
setfn_flag	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"default"	*(char)
,	O
WRDSF_DEFFLAGS	O
,	O
ws_boolean	int
,	O
setfn_flag	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"env_kv"	*(char)
,	O
WRDSF_ENV_KV	int
,	O
ws_boolean	int
,	O
setfn_flag	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"incremental"	*(char)
,	O
WRDSF_INCREMENTAL	int
,	O
ws_boolean	int
,	O
setfn_flag	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"pathexpand"	*(char)
,	O
WRDSF_PATHEXPAND	int
,	O
ws_boolean	int
,	O
setfn_flag	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"default"	*(char)
,	O
WRDSF_DEFFLAGS	O
,	O
ws_boolean	int
,	O
setfn_flag	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"nullglob"	*(char)
,	O
WRDSO_NULLGLOB	int
,	O
ws_boolean	int
,	O
setfn_option	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"failglob"	*(char)
,	O
WRDSO_FAILGLOB	int
,	O
ws_boolean	int
,	O
setfn_option	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"dotglob"	*(char)
,	O
WRDSO_DOTGLOB	int
,	O
ws_boolean	int
,	O
setfn_option	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"bskeep_words"	*(char)
,	O
WRDSO_BSKEEP_WORD	int
,	O
ws_boolean	int
,	O
setfn_option	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"bskeep_quote"	*(char)
,	O
WRDSO_BSKEEP_QUOTE	int
,	O
ws_boolean	int
,	O
setfn_option	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"bskeep"	*(char)
,	O
WRDSO_BSKEEP_WORD	int
|	O
WRDSO_BSKEEP_QUOTE	int
,	O
ws_boolean	int
,	O
setfn_option	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"novarsplit"	*(char)
,	O
WRDSO_NOVARSPLIT	int
,	O
ws_boolean	int
,	O
setfn_option	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"nocmdsplit"	*(char)
,	O
WRDSO_NOCMDSPLIT	int
,	O
ws_boolean	int
,	O
setfn_option	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"maxwords"	*(char)
,	O
WRDSO_MAXWORDS	int
,	O
ws_required_argument	int
,	O
setfn_maxwords	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"delim"	*(char)
,	O
WRDSF_DELIM	int
,	O
ws_required_argument	int
,	O
setfn_delim	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"comment"	*(char)
,	O
WRDSF_COMMENT	int
,	O
ws_required_argument	int
,	O
setfn_comment	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"escape"	*(char)
,	O
WRDSF_ESCAPE	int
,	O
ws_required_argument	int
,	O
setfn_escape	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"escape-word"	*(char)
,	O
WRDSF_ESCAPE	int
,	O
ws_required_argument	int
,	O
setfn_escape_word	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"escape-quote"	*(char)
,	O
WRDSF_ESCAPE	int
,	O
ws_required_argument	int
,	O
setfn_escape_quote	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"dooffs"	*(char)
,	O
WRDSF_DOOFFS	int
,	O
ws_multiple_arguments	int
,	O
setfn_dooffs	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"append-args"	*(char)
,	O
0	int
,	O
ws_multiple_arguments	int
,	O
setfn_append	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
"help"	*(char)
,	O
0	int
,	O
ws_no_argument	int
,	O
setfn_help	(int,int,*(char),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(void)
}	O
,	O
{	O
NULL	O
,	O
0	int
}	O
}	O
;	O
static	O
void	O
help	()->(void)
(	O
void	O
)	O
{	O
size_t	long
i	long
;	O
printf	(*(char))->(int)
(	O
"usage: %s [options] [VAR=VALUE...] [-- EXTRA...]\n"	*(char)
,	O
progname	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"options are:\n"	*(char)
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
opttab	array(struct(*(char),int,int,*((int,int,*(char),*(struct(int,struct`,int,enum(int,int,int),int,*`,int,int,int,int)))->(void))))
[	O
i	long
]	O
.	O
name	*(char)
;	O
i	long
++	O
)	O
{	O
printf	(*(char))->(int)
(	O
" -"	*(char)
)	O
;	O
if	O
(	O
opttab	array(struct(*(char),int,int,*((int,int,*(char),*(struct(int,struct`,int,enum(int,int,int),int,*`,int,int,int,int)))->(void))))
[	O
i	long
]	O
.	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
==	O
ws_boolean	int
)	O
printf	(*(char))->(int)
(	O
"[no]"	*(char)
)	O
;	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
opttab	array(struct(*(char),int,int,*((int,int,*(char),*(struct(int,struct`,int,enum(int,int,int),int,*`,int,int,int,int)))->(void))))
[	O
i	long
]	O
.	O
name	*(char)
,	O
"no"	*(char)
,	O
2	int
)	O
==	O
0	int
)	O
printf	(*(char))->(int)
(	O
"%s"	*(char)
,	O
opttab	array(struct(*(char),int,int,*((int,int,*(char),*(struct(int,struct`,int,enum(int,int,int),int,*`,int,int,int,int)))->(void))))
[	O
i	long
]	O
.	O
name	*(char)
+	O
2	int
)	O
;	O
else	O
printf	(*(char))->(int)
(	O
"%s"	*(char)
,	O
opttab	array(struct(*(char),int,int,*((int,int,*(char),*(struct(int,struct`,int,enum(int,int,int),int,*`,int,int,int,int)))->(void))))
[	O
i	long
]	O
.	O
name	*(char)
)	O
;	O
switch	O
(	O
opttab	array(struct(*(char),int,int,*((int,int,*(char),*(struct(int,struct`,int,enum(int,int,int),int,*`,int,int,int,int)))->(void))))
[	O
i	long
]	O
.	O
arg	struct(long,*(*(struct(int,struct(struct`,struct`)))))
)	O
{	O
case	O
ws_no_argument	int
:	O
case	O
ws_boolean	int
:	O
break	O
;	O
case	O
ws_required_argument	int
:	O
printf	(*(char))->(int)
(	O
" ARG"	*(char)
)	O
;	O
break	O
;	O
case	O
ws_multiple_arguments	int
:	O
printf	(*(char))->(int)
(	O
" ARGS... --"	*(char)
)	O
;	O
}	O
putchar	(int)->(int)
(	O
'\n'	O
)	O
;	O
}	O
putchar	(int)->(int)
(	O
'\n'	O
)	O
;	O
}	O
void	O
print_qword	(*(char),int)->(void)
(	O
const	O
char	O
*	O
word	*(char)
,	O
int	O
plaintext	int
)	O
{	O
static	O
char	O
*	O
qbuf	*(char)
=	O
NULL	O
;	O
static	O
size_t	long
qlen	long
=	O
0	int
;	O
int	O
quote	*(int)
;	O
size_t	long
size	*(long)
=	O
wordsplit_c_quoted_length	(*(char),int,*(int))->(long)
(	O
word	*(char)
,	O
0	int
,	O
&	O
quote	*(int)
)	O
;	O
if	O
(	O
plaintext	int
)	O
{	O
printf	(*(char))->(int)
(	O
"%s"	*(char)
,	O
word	*(char)
)	O
;	O
return	O
;	O
}	O
if	O
(	O
*	O
word	*(char)
==	O
0	int
)	O
quote	*(int)
=	O
1	int
;	O
if	O
(	O
size	*(long)
>=	O
qlen	long
)	O
{	O
qlen	long
=	O
size	*(long)
+	O
1	int
;	O
qbuf	*(char)
=	O
realloc	(*(void),long)->(*(void))
(	O
qbuf	*(char)
,	O
qlen	long
)	O
;	O
assert	O
(	O
qbuf	*(char)
!=	O
NULL	O
)	O
;	O
}	O
wordsplit_c_quote_copy	(*(char),*(char),int)->(void)
(	O
qbuf	*(char)
,	O
word	*(char)
,	O
0	int
)	O
;	O
qbuf	*(char)
[	O
size	*(long)
]	O
=	O
0	int
;	O
if	O
(	O
quote	*(int)
)	O
printf	(*(char))->(int)
(	O
"\"%s\""	*(char)
,	O
qbuf	*(char)
)	O
;	O
else	O
printf	(*(char))->(int)
(	O
"%s"	*(char)
,	O
qbuf	*(char)
)	O
;	O
}	O
static	O
char	O
*	O
*	O
make_env_kv	()->(*(*(char)))
(	O
)	O
{	O
size_t	long
i	long
,	O
j	long
,	O
size	*(long)
;	O
char	O
*	O
*	O
newenv	*(*(char))
;	O
for	O
(	O
i	long
=	O
0	int
;	O
environ	*(*(char))
[	O
i	long
]	O
;	O
i	long
++	O
)	O
;	O
size	*(long)
=	O
i	long
*	O
2	int
+	O
1	int
;	O
newenv	*(*(char))
=	O
calloc	(long,long)->(*(void))
(	O
size	*(long)
,	O
sizeof	O
(	O
newenv	*(*(char))
[	O
0	int
]	O
)	O
)	O
;	O
assert	O
(	O
newenv	*(*(char))
!=	O
NULL	O
)	O
;	O
for	O
(	O
i	long
=	O
j	long
=	O
0	int
;	O
environ	*(*(char))
[	O
i	long
]	O
;	O
i	long
++	O
)	O
{	O
size_t	long
len	long
=	O
strcspn	(*(char),*(char))->(long)
(	O
environ	*(*(char))
[	O
i	long
]	O
,	O
"="	*(char)
)	O
;	O
char	O
*	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
=	O
malloc	(long)->(*(void))
(	O
len	long
+	O
1	int
)	O
;	O
assert	O
(	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
!=	O
NULL	O
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
,	O
environ	*(*(char))
[	O
i	long
]	O
,	O
len	long
)	O
;	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
[	O
len	long
]	O
=	O
0	int
;	O
newenv	*(*(char))
[	O
j	long
++	O
]	O
=	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
;	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
=	O
strdup	(*(char))->(*(char))
(	O
environ	*(*(char))
[	O
i	long
]	O
+	O
len	long
+	O
1	int
)	O
;	O
assert	O
(	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
!=	O
NULL	O
)	O
;	O
newenv	*(*(char))
[	O
j	long
++	O
]	O
=	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
;	O
}	O
newenv	*(*(char))
[	O
j	long
]	O
=	O
NULL	O
;	O
return	O
newenv	*(*(char))
;	O
}	O
static	O
int	O
wsp_getvar	(*(*(char)),*(char),long,*(void))->(int)
(	O
char	O
*	O
*	O
ret	*(*(char))
,	O
const	O
char	O
*	O
vptr	*(char)
,	O
size_t	long
vlen	long
,	O
void	O
*	O
data	*(void)
)	O
{	O
char	O
*	O
*	O
base	*(void)
=	O
data	*(void)
;	O
int	O
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
base	*(void)
[	O
i	long
]	O
;	O
i	long
++	O
)	O
{	O
size_t	long
l	long
=	O
strcspn	(*(char),*(char))->(long)
(	O
base	*(void)
[	O
i	long
]	O
,	O
"="	*(char)
)	O
;	O
if	O
(	O
l	long
==	O
vlen	long
&&	O
memcmp	(*(void),*(void),long)->(int)
(	O
base	*(void)
[	O
i	long
]	O
,	O
vptr	*(char)
,	O
vlen	long
)	O
==	O
0	int
)	O
{	O
char	O
*	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
=	O
strdup	(*(char))->(*(char))
(	O
base	*(void)
[	O
i	long
]	O
+	O
vlen	long
+	O
1	int
)	O
;	O
if	O
(	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
==	O
NULL	O
)	O
return	O
WRDSE_NOSPACE	int
;	O
*	O
ret	*(*(char))
=	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
;	O
return	O
WRDSE_OK	int
;	O
}	O
}	O
return	O
WRDSE_UNDEF	int
;	O
}	O
static	O
int	O
cmd_quote	(*(*(char)),*(char),long,*(*(char)))->(int)
(	O
char	O
*	O
*	O
ret	*(*(char))
,	O
const	O
char	O
*	O
str	*(char)
,	O
size_t	long
len	long
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
int	O
alen	int
;	O
for	O
(	O
alen	int
=	O
0	int
;	O
alen	int
<	O
len	long
&&	O
!	O
(	O
str	*(char)
[	O
alen	int
]	O
==	O
' '	O
||	O
str	*(char)
[	O
alen	int
]	O
==	O
'\t'	O
)	O
;	O
alen	int
++	O
)	O
;	O
for	O
(	O
;	O
alen	int
<	O
len	long
&&	O
(	O
str	*(char)
[	O
alen	int
]	O
==	O
' '	O
||	O
str	*(char)
[	O
alen	int
]	O
==	O
'\t'	O
)	O
;	O
alen	int
++	O
)	O
;	O
len	long
-=	O
alen	int
;	O
*	O
ret	*(*(char))
=	O
malloc	(long)->(*(void))
(	O
len	long
+	O
1	int
)	O
;	O
if	O
(	O
!	O
*	O
ret	*(*(char))
)	O
return	O
WRDSE_NOSPACE	int
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
*	O
ret	*(*(char))
,	O
str	*(char)
+	O
alen	int
,	O
len	long
)	O
;	O
(	O
*	O
ret	*(*(char))
)	O
[	O
len	long
]	O
=	O
0	int
;	O
return	O
WRDSE_OK	int
;	O
}	O
static	O
int	O
cmd_words	(*(*(char)),*(char),long,*(*(char)))->(int)
(	O
char	O
*	O
*	O
ret	*(*(char))
,	O
const	O
char	O
*	O
str	*(char)
,	O
size_t	long
len	long
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
char	O
*	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
;	O
int	O
i	long
;	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
=	O
malloc	(long)->(*(void))
(	O
len	long
+	O
1	int
)	O
;	O
if	O
(	O
!	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
)	O
return	O
WRDSE_NOSPACE	int
;	O
*	O
ret	*(*(char))
=	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
;	O
for	O
(	O
i	long
=	O
1	int
;	O
argv	*(*(char))
[	O
i	long
]	O
;	O
i	long
++	O
)	O
{	O
size_t	long
s	*(char)
=	O
strlen	(*(char))->(long)
(	O
argv	*(*(char))
[	O
i	long
]	O
)	O
;	O
if	O
(	O
i	long
>	O
1	int
)	O
*	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
++	O
=	O
' '	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
,	O
argv	*(*(char))
[	O
i	long
]	O
,	O
s	*(char)
)	O
;	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
+=	O
s	*(char)
;	O
}	O
*	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
=	O
0	int
;	O
return	O
WRDSE_OK	int
;	O
}	O
static	O
int	O
cmd_lines	(*(*(char)),*(char),long,*(*(char)))->(int)
(	O
char	O
*	O
*	O
ret	*(*(char))
,	O
const	O
char	O
*	O
str	*(char)
,	O
size_t	long
len	long
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
char	O
*	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
;	O
int	O
i	long
;	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
=	O
malloc	(long)->(*(void))
(	O
len	long
+	O
1	int
)	O
;	O
if	O
(	O
!	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
)	O
return	O
WRDSE_NOSPACE	int
;	O
*	O
ret	*(*(char))
=	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
;	O
for	O
(	O
i	long
=	O
1	int
;	O
argv	*(*(char))
[	O
i	long
]	O
;	O
i	long
++	O
)	O
{	O
size_t	long
s	*(char)
=	O
strlen	(*(char))->(long)
(	O
argv	*(*(char))
[	O
i	long
]	O
)	O
;	O
if	O
(	O
i	long
>	O
1	int
)	O
*	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
++	O
=	O
'\n'	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
,	O
argv	*(*(char))
[	O
i	long
]	O
,	O
s	*(char)
)	O
;	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
+=	O
s	*(char)
;	O
}	O
*	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
=	O
0	int
;	O
return	O
WRDSE_OK	int
;	O
}	O
static	O
struct	O
command	struct(*(char),*((*(*(char)),*(char),long,*(*(char)))->(int)))
{	O
char	O
const	O
*	O
name	*(char)
;	O
int	O
(	O
*	O
cmd	enum(int,int,int)
)	O
(	O
char	O
*	O
*	O
ret	*(*(char))
,	O
const	O
char	O
*	O
str	*(char)
,	O
size_t	long
len	long
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
;	O
}	O
comtab	array(struct(*(char),*((*(*(char)),*(char),long,*(*(char)))->(int))))
[	O
]	O
=	O
{	O
{	O
"quote"	*(char)
,	O
cmd_quote	(*(*(char)),*(char),long,*(*(char)))->(int)
}	O
,	O
{	O
"words"	*(char)
,	O
cmd_words	(*(*(char)),*(char),long,*(*(char)))->(int)
}	O
,	O
{	O
"lines"	*(char)
,	O
cmd_lines	(*(*(char)),*(char),long,*(*(char)))->(int)
}	O
}	O
;	O
static	O
int	O
wsp_runcmd	(*(*(char)),*(char),long,*(*(char)),*(void))->(int)
(	O
char	O
*	O
*	O
ret	*(*(char))
,	O
const	O
char	O
*	O
str	*(char)
,	O
size_t	long
len	long
,	O
char	O
*	O
*	O
argv	*(*(char))
,	O
void	O
*	O
closure	*(void)
)	O
{	O
int	O
i	long
;	O
size_t	long
s	*(char)
=	O
0	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
;	O
i	long
++	O
)	O
{	O
if	O
(	O
i	long
==	O
sizeof	O
(	O
comtab	array(struct(*(char),*((*(*(char)),*(char),long,*(*(char)))->(int))))
)	O
/	O
sizeof	O
(	O
comtab	array(struct(*(char),*((*(*(char)),*(char),long,*(*(char)))->(int))))
[	O
0	int
]	O
)	O
)	O
break	O
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
comtab	array(struct(*(char),*((*(*(char)),*(char),long,*(*(char)))->(int))))
[	O
i	long
]	O
.	O
name	*(char)
,	O
argv	*(*(char))
[	O
0	int
]	O
)	O
==	O
0	int
)	O
return	O
comtab	array(struct(*(char),*((*(*(char)),*(char),long,*(*(char)))->(int))))
[	O
i	long
]	O
.	O
cmd	enum(int,int,int)
(	O
ret	*(*(char))
,	O
str	*(char)
,	O
len	long
,	O
argv	*(*(char))
)	O
;	O
}	O
*	O
ret	*(*(char))
=	O
NULL	O
;	O
if	O
(	O
grecs_asprintf	(*(*(char)),*(long),*(char))->(int)
(	O
ret	*(*(char))
,	O
&	O
s	*(char)
,	O
"unknown command: %s"	*(char)
,	O
argv	*(*(char))
[	O
0	int
]	O
)	O
)	O
return	O
WRDSE_NOSPACE	int
;	O
else	O
return	O
WRDSE_USERERR	int
;	O
}	O
int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
struct	O
wsclosure	struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
;	O
char	O
*	O
fenvbase	*(*(char))
[	O
128	int
]	O
;	O
char	O
buf	*(char)
[	O
1024	int
]	O
,	O
*	O
ptr	*(void)
,	O
*	O
saved_ptr	*(char)
;	O
int	O
next_call	int
=	O
0	int
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
options	int
=	O
0	int
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
wsflags	int
=	O
0	int
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
env_type	enum(int,int,int)
=	O
env_sys	int
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
offarg	int
=	O
0	int
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
fenvbase	*(*(char))
=	O
fenvbase	*(*(char))
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
fenvmax	int
=	O
sizeof	O
(	O
fenvbase	*(*(char))
)	O
/	O
sizeof	O
(	O
fenvbase	*(*(char))
[	O
0	int
]	O
)	O
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
fenvidx	int
=	O
0	int
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_options	int
=	O
0	int
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
wsflags	int
=	O
(	O
WRDSF_DEFFLAGS	O
&	O
~	O
WRDSF_NOVAR	int
)	O
|	O
WRDSF_ENOMEMABRT	int
|	O
WRDSF_SHOWERR	int
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
append_count	int
=	O
0	int
;	O
progname	*(char)
=	O
argv	*(*(char))
[	O
0	int
]	O
;	O
while	O
(	O
getwsopt	(int,*(*(char)),*(struct(*(char),int,int,*((int,int,*`,*`)->(void)))),*(struct(int,struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int)))->(int)
(	O
argc	int
,	O
argv	*(*(char))
,	O
opttab	array(struct(*(char),int,int,*((int,int,*(char),*(struct(int,struct`,int,enum(int,int,int),int,*`,int,int,int,int)))->(void))))
,	O
&	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
)	O
!=	O
EOF	O
)	O
;	O
if	O
(	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
fenvidx	int
>	O
0	int
)	O
{	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
fenvbase	*(*(char))
[	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
fenvidx	int
]	O
=	O
NULL	O
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
wsflags	int
|=	O
WRDSF_GETVAR	int
|	O
WRDSF_CLOSURE	int
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_getvar	*((*(*(char)),*(char),long,*(void))->(int))
=	O
wsp_getvar	(*(*(char)),*(char),long,*(void))->(int)
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_closure	*(void)
=	O
fenvbase	*(*(char))
;	O
}	O
if	O
(	O
wsoptind	int
<	O
argc	int
)	O
{	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_paramc	long
=	O
argc	int
-	O
wsoptind	int
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_paramv	*(*(char))
=	O
(	O
char	O
const	O
*	O
*	O
)	O
(	O
argv	*(*(char))
+	O
wsoptind	int
)	O
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_options	int
|=	O
WRDSO_PARAMV	int
|	O
WRDSO_PARAM_NEGIDX	int
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
wsflags	int
|=	O
WRDSF_OPTIONS	int
;	O
}	O
switch	O
(	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
env_type	enum(int,int,int)
)	O
{	O
case	O
env_null	int
:	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
wsflags	int
|=	O
WRDSF_ENV	int
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_env	*(*(char))
=	O
NULL	O
;	O
break	O
;	O
case	O
env_none	int
:	O
break	O
;	O
case	O
env_sys	int
:	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
wsflags	int
|=	O
WRDSF_ENV	int
;	O
if	O
(	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
wsflags	int
&	O
WRDSF_ENV_KV	int
)	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_env	*(*(char))
=	O
(	O
const	O
char	O
*	O
*	O
)	O
make_env_kv	()->(*(*(char)))
(	O
)	O
;	O
else	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_env	*(*(char))
=	O
(	O
const	O
char	O
*	O
*	O
)	O
environ	*(*(char))
;	O
break	O
;	O
}	O
if	O
(	O
!	O
(	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
wsflags	int
&	O
WRDSF_NOCMD	int
)	O
)	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_command	*((*(*(char)),*(char),long,*(*(char)),*(void))->(int))
=	O
wsp_runcmd	(*(*(char)),*(char),long,*(*(char)),*(void))->(int)
;	O
if	O
(	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
wsflags	int
&	O
WRDSF_INCREMENTAL	int
)	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
options	int
|=	O
TRIMNL_OPTION	int
;	O
next_call	int
=	O
0	int
;	O
while	O
(	O
(	O
ptr	*(void)
=	O
fgets	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
buf	*(char)
,	O
sizeof	O
(	O
buf	*(char)
)	O
,	O
stdin	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
)	O
{	O
int	O
rc	int
;	O
size_t	long
i	long
;	O
if	O
(	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
options	int
&	O
TRIMNL_OPTION	int
)	O
{	O
size_t	long
len	long
=	O
strlen	(*(char))->(long)
(	O
ptr	*(void)
)	O
;	O
if	O
(	O
len	long
&&	O
ptr	*(void)
[	O
len	long
-	O
1	int
]	O
==	O
'\n'	O
)	O
ptr	*(void)
[	O
len	long
-	O
1	int
]	O
=	O
0	int
;	O
}	O
if	O
(	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
wsflags	int
&	O
WRDSF_INCREMENTAL	int
)	O
{	O
if	O
(	O
next_call	int
)	O
{	O
if	O
(	O
*	O
ptr	*(void)
==	O
0	int
)	O
ptr	*(void)
=	O
NULL	O
;	O
else	O
free	(*(void))->(void)
(	O
saved_ptr	*(char)
)	O
;	O
}	O
else	O
next_call	int
=	O
1	int
;	O
if	O
(	O
ptr	*(void)
)	O
{	O
ptr	*(void)
=	O
saved_ptr	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
ptr	*(void)
)	O
;	O
assert	O
(	O
ptr	*(void)
!=	O
NULL	O
)	O
;	O
}	O
}	O
rc	int
=	O
wordsplit	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
(	O
ptr	*(void)
,	O
&	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
,	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
wsflags	int
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
if	O
(	O
!	O
(	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
wsflags	int
&	O
WRDSF_SHOWERR	int
)	O
)	O
wordsplit_perror	(*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)))->(void)
(	O
&	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
)	O
;	O
continue	O
;	O
}	O
if	O
(	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
offarg	int
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_offs	long
;	O
i	long
++	O
)	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
i	long
]	O
=	O
argv	*(*(char))
[	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
offarg	int
+	O
i	long
]	O
;	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
offarg	int
=	O
0	int
;	O
}	O
if	O
(	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
append_count	int
)	O
{	O
rc	int
=	O
wordsplit_append	(*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)),int,*(*(char)))->(int)
(	O
&	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
,	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
append_count	int
,	O
argv	*(*(char))
+	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
append_start	int
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
if	O
(	O
!	O
(	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
wsflags	int
&	O
WRDSF_SHOWERR	int
)	O
)	O
wordsplit_perror	(*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)))->(void)
(	O
&	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
)	O
;	O
continue	O
;	O
}	O
}	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
wsflags	int
|=	O
WRDSF_REUSE	int
;	O
printf	(*(char))->(int)
(	O
"NF: %lu"	*(char)
,	O
(	O
unsigned	O
long	O
)	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordc	long
)	O
;	O
if	O
(	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
wsflags	int
&	O
WRDSF_DOOFFS	int
)	O
printf	(*(char))->(int)
(	O
" (%lu)"	*(char)
,	O
(	O
unsigned	O
long	O
)	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_offs	long
)	O
;	O
putchar	(int)->(int)
(	O
'\n'	O
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_offs	long
;	O
i	long
++	O
)	O
{	O
printf	(*(char))->(int)
(	O
"(%lu): "	*(char)
,	O
(	O
unsigned	O
long	O
)	O
i	long
)	O
;	O
print_qword	(*(char),int)->(void)
(	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
i	long
]	O
,	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
options	int
&	O
PLAINTEXT_OPTION	int
)	O
;	O
putchar	(int)->(int)
(	O
'\n'	O
)	O
;	O
}	O
for	O
(	O
;	O
i	long
<	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_offs	long
+	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordc	long
;	O
i	long
++	O
)	O
{	O
printf	(*(char))->(int)
(	O
"%lu: "	*(char)
,	O
(	O
unsigned	O
long	O
)	O
i	long
)	O
;	O
print_qword	(*(char),int)->(void)
(	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
i	long
]	O
,	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
options	int
&	O
PLAINTEXT_OPTION	int
)	O
;	O
putchar	(int)->(int)
(	O
'\n'	O
)	O
;	O
}	O
printf	(*(char))->(int)
(	O
"TOTAL: %lu\n"	*(char)
,	O
(	O
unsigned	O
long	O
)	O
wsc	*(struct(int,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,enum(int,int,int),int,*(*(char)),int,int,int,int))
.	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordi	long
)	O
;	O
}	O
return	O
0	int
;	O
}	O
