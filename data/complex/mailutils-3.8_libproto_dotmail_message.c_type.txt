void	O
mu_dotmail_message_free	(*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*`,*`,long,long,long,int,*`,long,long)),long)))->(void)
(	O
struct	O
mu_dotmail_message	struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct),long)
*	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
{	O
if	O
(	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
MU_DOTMAIL_HDR_MAX	int
;	O
i	int
++	O
)	O
free	(*(void))->(void)
(	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
hdr	array(*(char))
[	O
i	int
]	O
)	O
;	O
mu_message_destroy	(*(*(struct)),*(void))->(void)
(	O
&	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
message	*(struct)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
;	O
free	(*(void))->(void)
(	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
;	O
}	O
}	O
static	O
int	O
_msg_stream_setup	(*(struct(int,*(void),*(struct),*(struct),*(struct),int,*(struct),*(struct),*(struct),*(struct(*`,*`,int,int)),*(struct),*(struct),*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,long,long,long,int,*`,long,long)),long)))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
struct	O
mu_dotmail_message	struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct),long)
*	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
{	O
mu_stream_t	*(struct)
stream	*(struct)
;	O
int	O
rc	int
;	O
rc	int
=	O
mu_streamref_create_abridged	(*(*(struct)),*(struct),long,long)->(int)
(	O
&	O
stream	*(struct)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
mbox	*(struct)
->	O
mailbox	*(struct)
->	O
stream	*(struct)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
message_start	long
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
message_end	long
-	O
1	int
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
rc	int
=	O
mu_message_set_stream	(*(struct),*(struct),*(void))->(int)
(	O
msg	*(struct)
,	O
stream	*(struct)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
;	O
return	O
rc	int
;	O
}	O
static	O
int	O
dotmail_body_size	(*(struct),*(long))->(int)
(	O
mu_body_t	*(struct)
body	*(struct)
,	O
size_t	long
*	O
psize	*(long)
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
=	O
mu_body_get_owner	(*(struct))->(*(void))
(	O
body	*(struct)
)	O
;	O
struct	O
mu_dotmail_message	struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct),long)
*	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
if	O
(	O
!	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
return	O
EINVAL	int
;	O
if	O
(	O
psize	*(long)
)	O
*	O
psize	*(long)
=	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
body_size	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
dotmail_body_lines	(*(struct),*(long))->(int)
(	O
mu_body_t	*(struct)
body	*(struct)
,	O
size_t	long
*	O
plines	*(long)
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
=	O
mu_body_get_owner	(*(struct))->(*(void))
(	O
body	*(struct)
)	O
;	O
struct	O
mu_dotmail_message	struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct),long)
*	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
if	O
(	O
!	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
return	O
EINVAL	int
;	O
if	O
(	O
!	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
body_lines_scanned	int
)	O
{	O
int	O
rc	int
;	O
mu_stream_t	*(struct)
str	*(struct)
;	O
char	O
c	char
;	O
size_t	long
n	int
;	O
rc	int
=	O
mu_body_get_streamref	(*(struct),*(*(struct)))->(int)
(	O
body	*(struct)
,	O
&	O
str	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
body_lines	long
=	O
0	int
;	O
while	O
(	O
(	O
rc	int
=	O
mu_stream_read	(*(struct),*(void),long,*(long))->(int)
(	O
str	*(struct)
,	O
&	O
c	char
,	O
1	int
,	O
&	O
n	int
)	O
)	O
==	O
0	int
&&	O
n	int
==	O
1	int
)	O
{	O
if	O
(	O
c	char
==	O
'\n'	O
)	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
body_lines	long
++	O
;	O
}	O
mu_stream_unref	(*(struct))->(void)
(	O
str	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
body_lines_scanned	int
=	O
1	int
;	O
}	O
if	O
(	O
plines	*(long)
)	O
*	O
plines	*(long)
=	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
body_lines	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_msg_body_setup	(*(struct(int,*(void),*(struct),*(struct),*(struct),int,*(struct),*(struct),*(struct),*(struct(*`,*`,int,int)),*(struct),*(struct),*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,long,long,long,int,*`,long,long)),long)))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
struct	O
mu_dotmail_message	struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct),long)
*	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
{	O
mu_body_t	*(struct)
body	*(struct)
;	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
flt	*(struct)
;	O
int	O
rc	int
;	O
if	O
(	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
body_dot_stuffed	int
)	O
{	O
rc	int
=	O
mu_streamref_create_abridged	(*(*(struct)),*(struct),long,long)->(int)
(	O
&	O
stream	*(struct)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
mbox	*(struct)
->	O
mailbox	*(struct)
->	O
stream	*(struct)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
body_start	long
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
message_end	long
+	O
1	int
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
mu_filter_create	(*(*(struct)),*(struct),*(char),int,int)->(int)
(	O
&	O
flt	*(struct)
,	O
stream	*(struct)
,	O
"DOT"	*(char)
,	O
MU_FILTER_DECODE	int
,	O
MU_STREAM_READ	int
)	O
;	O
mu_stream_unref	(*(struct))->(void)
(	O
stream	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
mu_rdcache_stream_create	(*(*(struct)),*(struct),int)->(int)
(	O
&	O
stream	*(struct)
,	O
flt	*(struct)
,	O
MU_STREAM_READ	int
|	O
MU_STREAM_SEEK	int
)	O
;	O
mu_stream_unref	(*(struct))->(void)
(	O
flt	*(struct)
)	O
;	O
}	O
else	O
{	O
rc	int
=	O
mu_streamref_create_abridged	(*(*(struct)),*(struct),long,long)->(int)
(	O
&	O
stream	*(struct)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
mbox	*(struct)
->	O
mailbox	*(struct)
->	O
stream	*(struct)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
body_start	long
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
message_end	long
-	O
1	int
)	O
;	O
}	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
mu_body_create	(*(*(struct)),*(void))->(int)
(	O
&	O
body	*(struct)
,	O
msg	*(struct)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
mu_body_set_stream	(*(struct),*(struct),*(void))->(int)
(	O
body	*(struct)
,	O
stream	*(struct)
,	O
msg	*(struct)
)	O
;	O
mu_body_set_size	(*(struct),*((*(struct),*(long))->(int)),*(void))->(int)
(	O
body	*(struct)
,	O
dotmail_body_size	(*(struct),*(long))->(int)
,	O
msg	*(struct)
)	O
;	O
mu_body_set_lines	(*(struct),*((*(struct),*(long))->(int)),*(void))->(int)
(	O
body	*(struct)
,	O
dotmail_body_lines	(*(struct),*(long))->(int)
,	O
msg	*(struct)
)	O
;	O
mu_body_clear_modified	(*(struct))->(int)
(	O
body	*(struct)
)	O
;	O
mu_message_set_body	(*(struct),*(struct),*(void))->(int)
(	O
msg	*(struct)
,	O
body	*(struct)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
;	O
}	O
return	O
rc	int
;	O
}	O
int	O
mu_dotmail_message_attr_load	(*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*`,*`,long,long,long,int,*`,long,long)),long)))->(int)
(	O
struct	O
mu_dotmail_message	struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct),long)
*	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
{	O
if	O
(	O
!	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
attr_scanned	int
)	O
{	O
if	O
(	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
hdr	array(*(char))
[	O
mu_dotmail_hdr_status	int
]	O
)	O
mu_string_to_flags	(*(char),*(int))->(int)
(	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
hdr	array(*(char))
[	O
mu_dotmail_hdr_status	int
]	O
,	O
&	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
attr_flags	int
)	O
;	O
else	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
attr_flags	int
=	O
0	int
;	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
attr_scanned	int
=	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
static	O
int	O
dotmail_get_attr_flags	(*(struct),*(int))->(int)
(	O
mu_attribute_t	*(struct)
attr	*(struct)
,	O
int	O
*	O
pflags	*(int)
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
=	O
mu_attribute_get_owner	(*(struct))->(*(void))
(	O
attr	*(struct)
)	O
;	O
struct	O
mu_dotmail_message	struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct),long)
*	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
if	O
(	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
mu_dotmail_message_attr_load	(*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*`,*`,long,long,long,int,*`,long,long)),long)))->(int)
(	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
;	O
if	O
(	O
pflags	*(int)
)	O
*	O
pflags	*(int)
=	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
attr_flags	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
dotmail_set_attr_flags	(*(struct),int)->(int)
(	O
mu_attribute_t	*(struct)
attr	*(struct)
,	O
int	O
flags	int
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
=	O
mu_attribute_get_owner	(*(struct))->(*(void))
(	O
attr	*(struct)
)	O
;	O
struct	O
mu_dotmail_message	struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct),long)
*	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
mu_dotmail_message_attr_load	(*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*`,*`,long,long,long,int,*`,long,long)),long)))->(int)
(	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
;	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
attr_flags	int
|=	O
flags	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
dotmail_unset_attr_flags	(*(struct),int)->(int)
(	O
mu_attribute_t	*(struct)
attr	*(struct)
,	O
int	O
flags	int
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
=	O
mu_attribute_get_owner	(*(struct))->(*(void))
(	O
attr	*(struct)
)	O
;	O
struct	O
mu_dotmail_message	struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct),long)
*	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
mu_dotmail_message_attr_load	(*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*`,*`,long,long,long,int,*`,long,long)),long)))->(int)
(	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
;	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
attr_flags	int
&=	O
~	O
flags	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_msg_attribute_setup	(*(struct(int,*(void),*(struct),*(struct),*(struct),int,*(struct),*(struct),*(struct),*(struct(*`,*`,int,int)),*(struct),*(struct),*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,long,long,long,int,*`,long,long)),long)))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
struct	O
mu_dotmail_message	struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct),long)
*	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
{	O
mu_attribute_t	*(struct)
attribute	*(struct)
;	O
int	O
rc	int
=	O
mu_attribute_create	(*(*(struct)),*(void))->(int)
(	O
&	O
attribute	*(struct)
,	O
msg	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
mu_attribute_set_get_flags	(*(struct),*((*(struct),*(int))->(int)),*(void))->(int)
(	O
attribute	*(struct)
,	O
dotmail_get_attr_flags	(*(struct),*(int))->(int)
,	O
msg	*(struct)
)	O
;	O
mu_attribute_set_set_flags	(*(struct),*((*(struct),int)->(int)),*(void))->(int)
(	O
attribute	*(struct)
,	O
dotmail_set_attr_flags	(*(struct),int)->(int)
,	O
msg	*(struct)
)	O
;	O
mu_attribute_set_unset_flags	(*(struct),*((*(struct),int)->(int)),*(void))->(int)
(	O
attribute	*(struct)
,	O
dotmail_unset_attr_flags	(*(struct),int)->(int)
,	O
msg	*(struct)
)	O
;	O
mu_message_set_attribute	(*(struct),*(struct),*(void))->(int)
(	O
msg	*(struct)
,	O
attribute	*(struct)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
dotmail_message_uid	(*(struct(int,*(void),*(struct),*(struct),*(struct),int,*(struct),*(struct),*(struct),*(struct(*`,*`,int,int)),*(struct),*(struct),*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
size_t	long
*	O
puid	*(long)
)	O
{	O
struct	O
mu_dotmail_message	struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct),long)
*	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
int	O
rc	int
=	O
mu_dotmail_mailbox_uid_setup	(*(struct(*(char),*(struct),long,long,long,int,*(*(struct`)),long,long)))->(int)
(	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
mbox	*(struct)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
*	O
puid	*(long)
=	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
uid	long
;	O
return	O
rc	int
;	O
}	O
static	O
int	O
dotmail_message_qid	(*(struct(int,*(void),*(struct),*(struct),*(struct),int,*(struct),*(struct),*(struct),*(struct(*`,*`,int,int)),*(struct),*(struct),*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),*(*(char)))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
mu_message_qid_t	*(char)
*	O
pqid	*(*(char))
)	O
{	O
struct	O
mu_dotmail_message	struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct),long)
*	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
return	O
mu_asprintf	(*(*(char)),*(char))->(int)
(	O
pqid	*(*(char))
,	O
"%lu"	*(char)
,	O
(	O
unsigned	O
long	O
)	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
message_start	long
)	O
;	O
}	O
static	O
int	O
dotmail_message_setup	(*(struct(int,*(void),*(struct),*(struct),*(struct),int,*(struct),*(struct),*(struct),*(struct(*`,*`,int,int)),*(struct),*(struct),*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
)	O
{	O
struct	O
mu_dotmail_message	struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct),long)
*	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
=	O
mu_message_get_owner	(*(struct))->(*(void))
(	O
msg	*(struct)
)	O
;	O
int	O
rc	int
;	O
rc	int
=	O
_msg_stream_setup	(*(struct(int,*(void),*(struct),*(struct),*(struct),int,*(struct),*(struct),*(struct),*(struct(*`,*`,int,int)),*(struct),*(struct),*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,long,long,long,int,*`,long,long)),long)))->(int)
(	O
msg	*(struct)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
_msg_body_setup	(*(struct(int,*(void),*(struct),*(struct),*(struct),int,*(struct),*(struct),*(struct),*(struct(*`,*`,int,int)),*(struct),*(struct),*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,long,long,long,int,*`,long,long)),long)))->(int)
(	O
msg	*(struct)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
_msg_attribute_setup	(*(struct(int,*(void),*(struct),*(struct),*(struct),int,*(struct),*(struct),*(struct),*(struct(*`,*`,int,int)),*(struct),*(struct),*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,long,long,long,int,*`,long,long)),long)))->(int)
(	O
msg	*(struct)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
return	O
0	int
;	O
}	O
int	O
mu_dotmail_message_get	(*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*`,*`,long,long,long,int,*`,long,long)),long)),*(*(struct)))->(int)
(	O
struct	O
mu_dotmail_message	struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct),long)
*	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
,	O
mu_message_t	*(struct)
*	O
mptr	*(*(struct))
)	O
{	O
if	O
(	O
!	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
message	*(struct)
)	O
{	O
mu_message_t	*(struct)
msg	*(struct)
;	O
int	O
rc	int
=	O
mu_message_create	(*(*(struct)),*(void))->(int)
(	O
&	O
msg	*(struct)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
dotmail_message_setup	(*(struct(int,*(void),*(struct),*(struct),*(struct),int,*(struct),*(struct),*(struct),*(struct(*`,*`,int,int)),*(struct),*(struct),*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))))->(int)
(	O
msg	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_message_destroy	(*(*(struct)),*(void))->(void)
(	O
&	O
msg	*(struct)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
;	O
return	O
rc	int
;	O
}	O
mu_message_set_uid	(*(struct),*((*(struct),*(long))->(int)),*(void))->(int)
(	O
msg	*(struct)
,	O
dotmail_message_uid	(*(struct(int,*(void),*(struct),*(struct),*(struct),int,*(struct),*(struct),*(struct),*(struct(*`,*`,int,int)),*(struct),*(struct),*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),*(long))->(int)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
;	O
mu_message_set_qid	(*(struct),*((*(struct),*(*(char)))->(int)),*(void))->(int)
(	O
msg	*(struct)
,	O
dotmail_message_qid	(*(struct(int,*(void),*(struct),*(struct),*(struct),int,*(struct),*(struct),*(struct),*(struct(*`,*`,int,int)),*(struct),*(struct),*(struct(*`,*`,*`,*`,*`,int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),long,*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`)->(int)))),*(*(char)))->(int)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
;	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
message	*(struct)
=	O
msg	*(struct)
;	O
mu_message_set_mailbox	(*(struct),*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(void))->(int)
(	O
msg	*(struct)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
mbox	*(struct)
->	O
mailbox	*(struct)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
;	O
mu_message_clear_modified	(*(struct))->(int)
(	O
msg	*(struct)
)	O
;	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
message	*(struct)
=	O
msg	*(struct)
;	O
}	O
if	O
(	O
mptr	*(*(struct))
)	O
*	O
mptr	*(*(struct))
=	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
message	*(struct)
;	O
return	O
0	int
;	O
}	O
static	O
int	O
dotmail_message_uid_save	(*(struct),*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,long,long,long,int,*`,long,long)),long)))->(int)
(	O
mu_stream_t	*(struct)
dst	*(struct)
,	O
struct	O
mu_dotmail_message	struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct),long)
const	O
*	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
{	O
struct	O
mu_dotmail_mailbox	struct(*(char),*(struct),long,long,long,int,*(*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*`,*`,long,long,long,int,*`,long,long)),long))),long,long)
*	O
dmp	*(struct(*(char),*(struct),long,long,long,int,*(*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*`,*`,long))),long,long))
=	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
mbox	*(struct)
;	O
if	O
(	O
dmp	*(struct(*(char),*(struct),long,long,long,int,*(*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*`,*`,long))),long,long))
->	O
uidvalidity_scanned	int
)	O
{	O
if	O
(	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
hdr	array(*(char))
[	O
mu_dotmail_hdr_x_imapbase	int
]	O
)	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
dst	*(struct)
,	O
"%s: %s\n"	*(char)
,	O
MU_HEADER_X_IMAPBASE	*(char)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
hdr	array(*(char))
[	O
mu_dotmail_hdr_x_imapbase	int
]	O
)	O
;	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
dst	*(struct)
,	O
"%s: %lu\n"	*(char)
,	O
MU_HEADER_X_UID	*(char)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
uid	long
)	O
;	O
return	O
mu_stream_err	(*(struct))->(int)
(	O
dst	*(struct)
)	O
?	O
mu_stream_last_error	(*(struct))->(int)
(	O
dst	*(struct)
)	O
:	O
0	int
;	O
}	O
return	O
0	int
;	O
}	O
int	O
dotmail_message_copy_with_uid	(*(struct),*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,long,long,long,int,*`,long,long)),long)),*(struct(long,long,long,long,int)))->(int)
(	O
mu_stream_t	*(struct)
dst	*(struct)
,	O
struct	O
mu_dotmail_message	struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct),long)
const	O
*	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
,	O
struct	O
mu_dotmail_message_ref	struct(long,long,long,long,int)
*	O
ref	*(struct(long,long,long,long,int))
)	O
{	O
int	O
rc	int
;	O
mu_stream_t	*(struct)
src	*(struct(*(char),int,int))
;	O
static	O
char	O
*	O
exclude_headers	array(*(char))
[	O
]	O
=	O
{	O
MU_HEADER_X_IMAPBASE	*(char)
,	O
MU_HEADER_X_UID	*(char)
,	O
NULL	O
}	O
;	O
src	*(struct(*(char),int,int))
=	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
mbox	*(struct)
->	O
mailbox	*(struct)
->	O
stream	*(struct)
;	O
rc	int
=	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
dst	*(struct)
,	O
0	int
,	O
MU_SEEK_CUR	int
,	O
&	O
ref	*(struct(long,long,long,long,int))
->	O
message_start	long
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
src	*(struct(*(char),int,int))
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
message_start	long
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
mu_stream_header_copy	(*(struct),*(struct),*(*(char)))->(int)
(	O
dst	*(struct)
,	O
src	*(struct(*(char),int,int))
,	O
exclude_headers	array(*(char))
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
dotmail_message_uid_save	(*(struct),*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,long,long,long,int,*`,long,long)),long)))->(int)
(	O
dst	*(struct)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
dst	*(struct)
,	O
"\n"	*(char)
,	O
1	int
,	O
NULL	O
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
dst	*(struct)
,	O
0	int
,	O
MU_SEEK_CUR	int
,	O
&	O
ref	*(struct(long,long,long,long,int))
->	O
body_start	long
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
mu_stream_copy	(*(struct),*(struct),long,*(long))->(int)
(	O
dst	*(struct)
,	O
src	*(struct(*(char),int,int))
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
message_end	long
-	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
body_start	long
+	O
2	int
,	O
NULL	O
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
return	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
dst	*(struct)
,	O
0	int
,	O
MU_SEEK_CUR	int
,	O
&	O
ref	*(struct(long,long,long,long,int))
->	O
message_end	long
)	O
;	O
}	O
static	O
int	O
msg_header_to_stream	(*(struct),*(struct),*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,long,long,long,int,*`,long,long)),long)))->(int)
(	O
mu_stream_t	*(struct)
dst	*(struct)
,	O
mu_stream_t	*(struct)
src	*(struct(*(char),int,int))
,	O
struct	O
mu_dotmail_message	struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct),long)
*	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
{	O
static	O
char	O
*	O
exclude_headers	array(*(char))
[	O
]	O
=	O
{	O
MU_HEADER_STATUS	*(char)
,	O
MU_HEADER_X_IMAPBASE	*(char)
,	O
MU_HEADER_X_UID	*(char)
,	O
NULL	O
}	O
;	O
mu_attribute_t	*(struct)
attr	*(struct)
;	O
int	O
rc	int
;	O
rc	int
=	O
mu_stream_header_copy	(*(struct),*(struct),*(*(char)))->(int)
(	O
dst	*(struct)
,	O
src	*(struct(*(char),int,int))
,	O
exclude_headers	array(*(char))
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
dotmail_message_uid_save	(*(struct),*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,long,long,long,int,*`,long,long)),long)))->(int)
(	O
dst	*(struct)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
mu_message_get_attribute	(*(struct),*(*(struct)))->(int)
(	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
message	*(struct)
,	O
&	O
attr	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
free	(*(void))->(void)
(	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
hdr	array(*(char))
[	O
mu_dotmail_hdr_status	int
]	O
)	O
;	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
hdr	array(*(char))
[	O
mu_dotmail_hdr_status	int
]	O
=	O
malloc	(long)->(*(void))
(	O
MU_STATUS_BUF_SIZE	O
)	O
;	O
if	O
(	O
!	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
hdr	array(*(char))
[	O
mu_dotmail_hdr_status	int
]	O
)	O
return	O
ENOMEM	int
;	O
rc	int
=	O
mu_attribute_to_string	(*(struct),*(char),long,*(long))->(int)
(	O
attr	*(struct)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
hdr	array(*(char))
[	O
mu_dotmail_hdr_status	int
]	O
,	O
MU_STATUS_BUF_SIZE	O
,	O
NULL	O
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
dst	*(struct)
,	O
"%s: %s\n"	*(char)
,	O
MU_HEADER_STATUS	*(char)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
hdr	array(*(char))
[	O
mu_dotmail_hdr_status	int
]	O
)	O
;	O
return	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
dst	*(struct)
,	O
"\n"	*(char)
,	O
1	int
,	O
NULL	O
)	O
;	O
}	O
int	O
mu_dotmail_message_reconstruct	(*(struct),*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*`,*`,long,long,long,int,*`,long,long)),long)),*(struct(long,long,long,long,int)))->(int)
(	O
mu_stream_t	*(struct)
dest	*(struct)
,	O
struct	O
mu_dotmail_message	struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct),long)
*	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
,	O
struct	O
mu_dotmail_message_ref	struct(long,long,long,long,int)
*	O
ref	*(struct(long,long,long,long,int))
)	O
{	O
int	O
rc	int
;	O
mu_header_t	*(struct)
hdr	array(*(char))
;	O
mu_body_t	*(struct)
body	*(struct)
;	O
mu_stream_t	*(struct)
str	*(struct)
,	O
flt	*(struct)
;	O
if	O
(	O
!	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
message	*(struct)
)	O
return	O
dotmail_message_copy_with_uid	(*(struct),*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,long,long,long,int,*`,long,long)),long)),*(struct(long,long,long,long,int)))->(int)
(	O
dest	*(struct)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
,	O
ref	*(struct(long,long,long,long,int))
)	O
;	O
rc	int
=	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
dest	*(struct)
,	O
0	int
,	O
MU_SEEK_CUR	int
,	O
&	O
ref	*(struct(long,long,long,long,int))
->	O
message_start	long
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
mu_message_get_header	(*(struct),*(*(struct)))->(int)
(	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
message	*(struct)
,	O
&	O
hdr	array(*(char))
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
mu_header_get_streamref	(*(struct),*(*(struct)))->(int)
(	O
hdr	array(*(char))
,	O
&	O
str	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
msg_header_to_stream	(*(struct),*(struct),*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct(int,*`,*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,long,long,long,int,*`,long,long)),long)))->(int)
(	O
dest	*(struct)
,	O
str	*(struct)
,	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
)	O
;	O
mu_stream_unref	(*(struct))->(void)
(	O
str	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
dest	*(struct)
,	O
0	int
,	O
MU_SEEK_CUR	int
,	O
&	O
ref	*(struct(long,long,long,long,int))
->	O
body_start	long
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
mu_message_get_body	(*(struct),*(*(struct)))->(int)
(	O
dmsg	*(struct(long,long,long,long,long,long,array(*(char)),int,int,int,int,int,*(struct),*(struct(*(char),*(struct`),long,long,long,int,*(*`),long,long)),long))
->	O
message	*(struct)
,	O
&	O
body	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
mu_body_get_streamref	(*(struct),*(*(struct)))->(int)
(	O
body	*(struct)
,	O
&	O
str	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
mu_filter_create	(*(*(struct)),*(struct),*(char),int,int)->(int)
(	O
&	O
flt	*(struct)
,	O
str	*(struct)
,	O
"DOT"	*(char)
,	O
MU_FILTER_ENCODE	int
,	O
MU_STREAM_READ	int
)	O
;	O
mu_stream_unref	(*(struct))->(void)
(	O
str	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
mu_stream_copy	(*(struct),*(struct),long,*(long))->(int)
(	O
dest	*(struct)
,	O
flt	*(struct)
,	O
0	int
,	O
NULL	O
)	O
;	O
mu_stream_unref	(*(struct))->(void)
(	O
flt	*(struct)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
rc	int
=	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
dest	*(struct)
,	O
0	int
,	O
MU_SEEK_CUR	int
,	O
&	O
ref	*(struct(long,long,long,long,int))
->	O
message_end	long
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
ref	*(struct(long,long,long,long,int))
->	O
message_end	long
-=	O
2	int
;	O
ref	*(struct(long,long,long,long,int))
->	O
rescan	int
=	O
1	int
;	O
}	O
return	O
rc	int
;	O
}	O
