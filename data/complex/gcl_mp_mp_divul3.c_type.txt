ulong	O
divul3	O
(	O
x	O
,	O
y	O
,	O
hi	O
)	O
ulong	O
x	O
,	O
y	O
,	O
*	O
hi	O
;	O
{	O
ulong	O
q	O
=	O
0	int
;	O
ulong	O
h	O
=	O
*	O
hi	O
,	O
l	O
=	O
x	O
,	O
hibit	O
;	O
int	O
count	O
=	O
WORD_SIZE	int
;	O
do	O
{	O
q	O
=	O
q	O
<<	O
1	int
;	O
hibit	O
=	O
h	O
&	O
(	O
1	int
<<	O
(	O
WORD_SIZE	int
-	O
1	int
)	O
)	O
;	O
shift1bit	O
(	O
h	O
,	O
l	O
)	O
;	O
if	O
(	O
hibit	O
||	O
(	O
y	O
<=	O
h	O
)	O
)	O
{	O
q	O
+=	O
1	int
;	O
h	O
-=	O
y	O
;	O
}	O
}	O
while	O
(	O
--	O
count	O
>	O
0	int
)	O
;	O
*	O
hi	O
=	O
h	O
;	O
return	O
q	O
;	O
}	O
