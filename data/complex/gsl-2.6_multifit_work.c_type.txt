gsl_multifit_linear_workspace	struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),double)
*	O
gsl_multifit_linear_alloc	(long,long)->(*(struct(long,long,long,long,*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),double)))
(	O
const	O
size_t	long
nmax	long
,	O
const	O
size_t	long
pmax	long
)	O
{	O
gsl_multifit_linear_workspace	struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),double)
*	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
gsl_multifit_linear_workspace	struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),double)
)	O
)	O
;	O
if	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
==	O
0	int
)	O
{	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for multifit_linear struct"	*(char)
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
nmax	long
=	O
nmax	long
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
pmax	long
=	O
pmax	long
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
n	int
=	O
0	int
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
p	int
=	O
0	int
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
rcond	double
=	O
0.0	int
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
A	*(float)
=	O
gsl_matrix_alloc	(long,long)->(*(struct(long,long,long,*(double),*(struct(long,*`)),int)))
(	O
nmax	long
,	O
pmax	long
)	O
;	O
if	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
A	*(float)
==	O
0	int
)	O
{	O
gsl_multifit_linear_free	(*(struct(long,long,long,long,*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),double)))->(void)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
)	O
;	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for A"	*(char)
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
Q	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_matrix_alloc	(long,long)->(*(struct(long,long,long,*(double),*(struct(long,*`)),int)))
(	O
pmax	long
,	O
pmax	long
)	O
;	O
if	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
Q	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
==	O
0	int
)	O
{	O
gsl_multifit_linear_free	(*(struct(long,long,long,long,*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),double)))->(void)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
)	O
;	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for Q"	*(char)
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
QSI	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_matrix_alloc	(long,long)->(*(struct(long,long,long,*(double),*(struct(long,*`)),int)))
(	O
pmax	long
,	O
pmax	long
)	O
;	O
if	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
QSI	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
==	O
0	int
)	O
{	O
gsl_multifit_linear_free	(*(struct(long,long,long,long,*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),double)))->(void)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
)	O
;	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for QSI"	*(char)
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
S	*(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_vector_alloc	(long)->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
pmax	long
)	O
;	O
if	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
S	*(struct(long,long,*(double),*(struct(long,*(double))),int))
==	O
0	int
)	O
{	O
gsl_multifit_linear_free	(*(struct(long,long,long,long,*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),double)))->(void)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
)	O
;	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for S"	*(char)
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
t	*(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_vector_alloc	(long)->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
nmax	long
)	O
;	O
if	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
t	*(struct(long,long,*(double),*(struct(long,*(double))),int))
==	O
0	int
)	O
{	O
gsl_multifit_linear_free	(*(struct(long,long,long,long,*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),double)))->(void)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
)	O
;	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for t"	*(char)
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
xt	*(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_vector_calloc	(long)->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
pmax	long
)	O
;	O
if	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
xt	*(struct(long,long,*(double),*(struct(long,*(double))),int))
==	O
0	int
)	O
{	O
gsl_multifit_linear_free	(*(struct(long,long,long,long,*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),double)))->(void)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
)	O
;	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for xt"	*(char)
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
D	*(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_vector_calloc	(long)->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
pmax	long
)	O
;	O
if	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
D	*(struct(long,long,*(double),*(struct(long,*(double))),int))
==	O
0	int
)	O
{	O
gsl_multifit_linear_free	(*(struct(long,long,long,long,*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),double)))->(void)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
)	O
;	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for D"	*(char)
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
return	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
}	O
void	O
gsl_multifit_linear_free	(*(struct(long,long,long,long,*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),double)))->(void)
(	O
gsl_multifit_linear_workspace	struct(long,long,long,long,*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),double)
*	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
)	O
{	O
RETURN_IF_NULL	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
)	O
;	O
if	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
A	*(float)
)	O
gsl_matrix_free	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
A	*(float)
)	O
;	O
if	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
Q	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
)	O
gsl_matrix_free	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
Q	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
if	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
QSI	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
)	O
gsl_matrix_free	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
QSI	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
if	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
S	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
gsl_vector_free	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
S	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
if	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
t	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
gsl_vector_free	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
t	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
if	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
xt	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
gsl_vector_free	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
xt	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
if	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
D	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
gsl_vector_free	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
D	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
free	(*(void))->(void)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
)	O
;	O
}	O
