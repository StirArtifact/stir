void	O
mu_sieve_require	(*(struct),*(struct(long,long)))->(void)
(	O
mu_sieve_machine_t	*(struct)
mach	*(struct)
,	O
mu_sieve_slice_t	*(struct(long,long))
list	*(struct)
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
list	*(struct)
->	O
count	long
;	O
i	long
++	O
)	O
{	O
struct	O
mu_sieve_string	struct(int,int,*(char),*(char),*(void))
*	O
str	*(char)
=	O
mu_sieve_string_raw	(*(struct),*(struct(long,long)),long)->(*(struct(int,int,*(char),*(char),*(void))))
(	O
mach	*(struct)
,	O
list	*(struct)
,	O
i	long
)	O
;	O
char	O
*	O
name	*(char)
=	O
str	*(char)
->	O
orig	*(struct)
;	O
int	O
rc	int
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
name	*(char)
,	O
"variables"	*(char)
)	O
==	O
0	int
)	O
rc	int
=	O
mu_sieve_require_variables	(*(struct))->(int)
(	O
mach	*(struct)
)	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
name	*(char)
,	O
"relational"	*(char)
)	O
==	O
0	int
)	O
rc	int
=	O
mu_sieve_require_relational	(*(struct),*(char))->(int)
(	O
mach	*(struct)
,	O
name	*(char)
)	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
name	*(char)
,	O
"encoded-character"	*(char)
)	O
==	O
0	int
)	O
rc	int
=	O
mu_sieve_require_encoded_character	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))),*(char))->(int)
(	O
mach	*(struct)
,	O
name	*(char)
)	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
name	*(char)
,	O
"environment"	*(char)
)	O
==	O
0	int
)	O
rc	int
=	O
mu_sieve_require_environment	(*(struct))->(int)
(	O
mach	*(struct)
)	O
;	O
else	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
name	*(char)
,	O
"comparator-"	*(char)
,	O
11	int
)	O
==	O
0	int
)	O
rc	int
=	O
mu_sieve_registry_require	(*(struct),*(char),enum(int,int,int))->(int)
(	O
mach	*(struct)
,	O
name	*(char)
+	O
11	int
,	O
mu_sieve_record_comparator	int
)	O
;	O
else	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
name	*(char)
,	O
"test-"	*(char)
,	O
5	int
)	O
==	O
0	int
)	O
rc	int
=	O
mu_sieve_registry_require	(*(struct),*(char),enum(int,int,int))->(int)
(	O
mach	*(struct)
,	O
name	*(char)
+	O
5	int
,	O
mu_sieve_record_test	int
)	O
;	O
else	O
rc	int
=	O
mu_sieve_registry_require	(*(struct),*(char),enum(int,int,int))->(int)
(	O
mach	*(struct)
,	O
name	*(char)
,	O
mu_sieve_record_action	int
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_diag_at_locus_range	(int,*(struct(struct(*(char),int,int),struct(*(char),int,int))),*(char))->(void)
(	O
MU_LOG_ERROR	int
,	O
&	O
mach	*(struct)
->	O
locus	struct(struct(*(char),int,int),struct(*(char),int,int))
,	O
_	O
(	O
"can't require %s"	*(char)
)	O
,	O
name	*(char)
)	O
;	O
mu_i_sv_error	(*(struct(struct(struct(*`,int,int),struct(*`,int,int)),int,*(struct),*(struct),*(struct),*(struct),*(*(char)),long,long,*(struct(int,int,*`,*`,*`)),long,long,*(struct(enum(int,int,int,int,int),*`,struct`,union`)),long,long,long,*(union(*`,*`,*`,*`,long,long,long,int,*`,int)),enum(int,int,int,int,int),long,long,*(struct),*(char),*(struct(int,int)),long,long,*(struct),*(char),long,long,long,*((*`,*`,*`)->(int)),int,array(struct(array(long),int,struct(array(long)))),*(struct),*(struct),long,*(struct),int,int,int,struct(struct(*`,int,int),struct(*`,int,int)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(struct),*(struct),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(struct),*(char),*(void))))->(void)
(	O
mach	*(struct)
)	O
;	O
}	O
}	O
}	O
