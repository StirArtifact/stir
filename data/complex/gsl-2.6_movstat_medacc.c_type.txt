typedef	O
double	O
medacc_type_t	double
;	O
typedef	O
struct	O
{	O
int	O
n	int
;	O
int	O
idx	long
;	O
int	O
ct	int
;	O
medacc_type_t	double
*	O
data	*(long double)
;	O
int	O
*	O
pos	*(int)
;	O
int	O
*	O
heap	*(int)
;	O
}	O
medacc_state_t	struct(int,int,int,*(double),*(int),*(int))
;	O
static	O
size_t	long
medacc_size	(long)->(long)
(	O
const	O
size_t	long
n	int
)	O
;	O
static	O
int	O
medacc_init	(long,*(void))->(int)
(	O
const	O
size_t	long
n	int
,	O
void	O
*	O
vstate	*(void)
)	O
;	O
static	O
int	O
medacc_insert	(double,*(void))->(int)
(	O
const	O
medacc_type_t	double
x	double
,	O
void	O
*	O
vstate	*(void)
)	O
;	O
static	O
int	O
medacc_delete	(*(void))->(int)
(	O
void	O
*	O
vstate	*(void)
)	O
;	O
static	O
int	O
medacc_get	(*(void),*(double),*(void))->(int)
(	O
void	O
*	O
params	*(void)
,	O
medacc_type_t	double
*	O
result	*(double)
,	O
const	O
void	O
*	O
vstate	*(void)
)	O
;	O
static	O
int	O
mmless	(*(struct(int,int,int,*(double),*(int),*(int))),int,int)->(int)
(	O
const	O
medacc_state_t	struct(int,int,int,*(double),*(int),*(int))
*	O
state	*(int)
,	O
const	O
int	O
i	long
,	O
const	O
int	O
j	long
)	O
;	O
static	O
int	O
mmexchange	(*(struct(int,int,int,*(double),*(int),*(int))),int,int)->(int)
(	O
medacc_state_t	struct(int,int,int,*(double),*(int),*(int))
*	O
state	*(int)
,	O
const	O
int	O
i	long
,	O
const	O
int	O
j	long
)	O
;	O
static	O
int	O
mmCmpExch	(*(struct(int,int,int,*(double),*(int),*(int))),int,int)->(int)
(	O
medacc_state_t	struct(int,int,int,*(double),*(int),*(int))
*	O
state	*(int)
,	O
const	O
int	O
i	long
,	O
const	O
int	O
j	long
)	O
;	O
static	O
void	O
minSortDown	(*(struct(int,int,int,*(double),*(int),*(int))),int)->(void)
(	O
medacc_state_t	struct(int,int,int,*(double),*(int),*(int))
*	O
state	*(int)
,	O
int	O
i	long
)	O
;	O
static	O
void	O
maxSortDown	(*(struct(int,int,int,*(double),*(int),*(int))),int)->(void)
(	O
medacc_state_t	struct(int,int,int,*(double),*(int),*(int))
*	O
state	*(int)
,	O
int	O
i	long
)	O
;	O
static	O
int	O
minSortUp	(*(struct(int,int,int,*(double),*(int),*(int))),int)->(int)
(	O
medacc_state_t	struct(int,int,int,*(double),*(int),*(int))
*	O
state	*(int)
,	O
int	O
i	long
)	O
;	O
static	O
int	O
maxSortUp	(*(struct(int,int,int,*(double),*(int),*(int))),int)->(int)
(	O
medacc_state_t	struct(int,int,int,*(double),*(int),*(int))
*	O
state	*(int)
,	O
int	O
i	long
)	O
;	O
static	O
size_t	long
medacc_size	(long)->(long)
(	O
const	O
size_t	long
n	int
)	O
{	O
size_t	long
size	long
=	O
0	int
;	O
size	long
+=	O
sizeof	O
(	O
medacc_state_t	struct(int,int,int,*(double),*(int),*(int))
)	O
;	O
size	long
+=	O
n	int
*	O
sizeof	O
(	O
medacc_type_t	double
)	O
;	O
size	long
+=	O
2	int
*	O
n	int
*	O
sizeof	O
(	O
int	O
)	O
;	O
return	O
size	long
;	O
}	O
static	O
int	O
medacc_init	(long,*(void))->(int)
(	O
const	O
size_t	long
n	int
,	O
void	O
*	O
vstate	*(void)
)	O
{	O
medacc_state_t	struct(int,int,int,*(double),*(int),*(int))
*	O
state	*(int)
=	O
(	O
medacc_state_t	struct(int,int,int,*(double),*(int),*(int))
*	O
)	O
vstate	*(void)
;	O
int	O
k	int
=	O
(	O
int	O
)	O
n	int
;	O
state	*(int)
->	O
n	int
=	O
n	int
;	O
state	*(int)
->	O
ct	int
=	O
0	int
;	O
state	*(int)
->	O
idx	long
=	O
0	int
;	O
state	*(int)
->	O
data	*(long double)
=	O
(	O
medacc_type_t	double
*	O
)	O
(	O
(	O
unsigned	O
char	O
*	O
)	O
vstate	*(void)
+	O
sizeof	O
(	O
medacc_state_t	struct(int,int,int,*(double),*(int),*(int))
)	O
)	O
;	O
state	*(int)
->	O
pos	*(int)
=	O
(	O
int	O
*	O
)	O
(	O
(	O
unsigned	O
char	O
*	O
)	O
state	*(int)
->	O
data	*(long double)
+	O
n	int
*	O
sizeof	O
(	O
medacc_type_t	double
)	O
)	O
;	O
state	*(int)
->	O
heap	*(int)
=	O
state	*(int)
->	O
pos	*(int)
+	O
n	int
+	O
(	O
n	int
/	O
2	int
)	O
;	O
while	O
(	O
k	int
--	O
)	O
{	O
state	*(int)
->	O
pos	*(int)
[	O
k	int
]	O
=	O
(	O
(	O
k	int
+	O
1	int
)	O
/	O
2	int
)	O
*	O
(	O
(	O
k	int
&	O
1	int
)	O
?	O
-	O
1	int
:	O
1	int
)	O
;	O
state	*(int)
->	O
heap	*(int)
[	O
state	*(int)
->	O
pos	*(int)
[	O
k	int
]	O
]	O
=	O
k	int
;	O
}	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
medacc_insert	(double,*(void))->(int)
(	O
const	O
medacc_type_t	double
x	double
,	O
void	O
*	O
vstate	*(void)
)	O
{	O
medacc_state_t	struct(int,int,int,*(double),*(int),*(int))
*	O
state	*(int)
=	O
(	O
medacc_state_t	struct(int,int,int,*(double),*(int),*(int))
*	O
)	O
vstate	*(void)
;	O
int	O
isNew	int
=	O
(	O
state	*(int)
->	O
ct	int
<	O
(	O
int	O
)	O
state	*(int)
->	O
n	int
)	O
;	O
int	O
p	int
=	O
state	*(int)
->	O
pos	*(int)
[	O
state	*(int)
->	O
idx	long
]	O
;	O
medacc_type_t	double
old	double
=	O
state	*(int)
->	O
data	*(long double)
[	O
state	*(int)
->	O
idx	long
]	O
;	O
state	*(int)
->	O
data	*(long double)
[	O
state	*(int)
->	O
idx	long
]	O
=	O
x	double
;	O
state	*(int)
->	O
idx	long
=	O
(	O
state	*(int)
->	O
idx	long
+	O
1	int
)	O
%	O
state	*(int)
->	O
n	int
;	O
state	*(int)
->	O
ct	int
+=	O
isNew	int
;	O
if	O
(	O
p	int
>	O
0	int
)	O
{	O
if	O
(	O
!	O
isNew	int
&&	O
ItemLess	O
(	O
old	double
,	O
x	double
)	O
)	O
minSortDown	(*(struct(int,int,int,*(double),*(int),*(int))),int)->(void)
(	O
state	*(int)
,	O
p	int
*	O
2	int
)	O
;	O
else	O
if	O
(	O
minSortUp	(*(struct(int,int,int,*(double),*(int),*(int))),int)->(int)
(	O
state	*(int)
,	O
p	int
)	O
)	O
maxSortDown	(*(struct(int,int,int,*(double),*(int),*(int))),int)->(void)
(	O
state	*(int)
,	O
-	O
1	int
)	O
;	O
}	O
else	O
if	O
(	O
p	int
<	O
0	int
)	O
{	O
if	O
(	O
!	O
isNew	int
&&	O
ItemLess	O
(	O
x	double
,	O
old	double
)	O
)	O
maxSortDown	(*(struct(int,int,int,*(double),*(int),*(int))),int)->(void)
(	O
state	*(int)
,	O
p	int
*	O
2	int
)	O
;	O
else	O
if	O
(	O
maxSortUp	(*(struct(int,int,int,*(double),*(int),*(int))),int)->(int)
(	O
state	*(int)
,	O
p	int
)	O
)	O
minSortDown	(*(struct(int,int,int,*(double),*(int),*(int))),int)->(void)
(	O
state	*(int)
,	O
1	int
)	O
;	O
}	O
else	O
{	O
if	O
(	O
maxCt	O
(	O
state	*(int)
)	O
)	O
maxSortDown	(*(struct(int,int,int,*(double),*(int),*(int))),int)->(void)
(	O
state	*(int)
,	O
-	O
1	int
)	O
;	O
if	O
(	O
minCt	O
(	O
state	*(int)
)	O
)	O
minSortDown	(*(struct(int,int,int,*(double),*(int),*(int))),int)->(void)
(	O
state	*(int)
,	O
1	int
)	O
;	O
}	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
medacc_delete	(*(void))->(int)
(	O
void	O
*	O
vstate	*(void)
)	O
{	O
medacc_state_t	struct(int,int,int,*(double),*(int),*(int))
*	O
state	*(int)
=	O
(	O
medacc_state_t	struct(int,int,int,*(double),*(int),*(int))
*	O
)	O
vstate	*(void)
;	O
if	O
(	O
state	*(int)
->	O
ct	int
>	O
0	int
)	O
{	O
int	O
p	int
=	O
state	*(int)
->	O
pos	*(int)
[	O
(	O
state	*(int)
->	O
idx	long
-	O
state	*(int)
->	O
ct	int
+	O
state	*(int)
->	O
n	int
)	O
%	O
state	*(int)
->	O
n	int
]	O
;	O
if	O
(	O
p	int
>	O
0	int
)	O
{	O
mmexchange	(*(struct(int,int,int,*(double),*(int),*(int))),int,int)->(int)
(	O
state	*(int)
,	O
p	int
,	O
minCt	O
(	O
state	*(int)
)	O
)	O
;	O
--	O
(	O
state	*(int)
->	O
ct	int
)	O
;	O
minSortDown	(*(struct(int,int,int,*(double),*(int),*(int))),int)->(void)
(	O
state	*(int)
,	O
2	int
*	O
p	int
)	O
;	O
}	O
else	O
if	O
(	O
p	int
<	O
0	int
)	O
{	O
mmexchange	(*(struct(int,int,int,*(double),*(int),*(int))),int,int)->(int)
(	O
state	*(int)
,	O
p	int
,	O
maxCt	O
(	O
state	*(int)
)	O
)	O
;	O
--	O
(	O
state	*(int)
->	O
ct	int
)	O
;	O
maxSortDown	(*(struct(int,int,int,*(double),*(int),*(int))),int)->(void)
(	O
state	*(int)
,	O
2	int
*	O
p	int
)	O
;	O
}	O
else	O
if	O
(	O
p	int
==	O
0	int
)	O
{	O
}	O
}	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
medacc_get	(*(void),*(double),*(void))->(int)
(	O
void	O
*	O
params	*(void)
,	O
medacc_type_t	double
*	O
result	*(double)
,	O
const	O
void	O
*	O
vstate	*(void)
)	O
{	O
const	O
medacc_state_t	struct(int,int,int,*(double),*(int),*(int))
*	O
state	*(int)
=	O
(	O
const	O
medacc_state_t	struct(int,int,int,*(double),*(int),*(int))
*	O
)	O
vstate	*(void)
;	O
medacc_type_t	double
median	double
=	O
state	*(int)
->	O
data	*(long double)
[	O
state	*(int)
->	O
heap	*(int)
[	O
0	int
]	O
]	O
;	O
(	O
void	O
)	O
params	*(void)
;	O
if	O
(	O
(	O
state	*(int)
->	O
ct	int
&	O
1	int
)	O
==	O
0	int
)	O
median	double
=	O
ItemMean	O
(	O
median	double
,	O
state	*(int)
->	O
data	*(long double)
[	O
state	*(int)
->	O
heap	*(int)
[	O
-	O
1	int
]	O
]	O
)	O
;	O
*	O
result	*(double)
=	O
median	double
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
mmless	(*(struct(int,int,int,*(double),*(int),*(int))),int,int)->(int)
(	O
const	O
medacc_state_t	struct(int,int,int,*(double),*(int),*(int))
*	O
state	*(int)
,	O
const	O
int	O
i	long
,	O
const	O
int	O
j	long
)	O
{	O
return	O
ItemLess	O
(	O
state	*(int)
->	O
data	*(long double)
[	O
state	*(int)
->	O
heap	*(int)
[	O
i	long
]	O
]	O
,	O
state	*(int)
->	O
data	*(long double)
[	O
state	*(int)
->	O
heap	*(int)
[	O
j	long
]	O
]	O
)	O
;	O
}	O
static	O
int	O
mmexchange	(*(struct(int,int,int,*(double),*(int),*(int))),int,int)->(int)
(	O
medacc_state_t	struct(int,int,int,*(double),*(int),*(int))
*	O
state	*(int)
,	O
const	O
int	O
i	long
,	O
const	O
int	O
j	long
)	O
{	O
int	O
t	int
=	O
state	*(int)
->	O
heap	*(int)
[	O
i	long
]	O
;	O
state	*(int)
->	O
heap	*(int)
[	O
i	long
]	O
=	O
state	*(int)
->	O
heap	*(int)
[	O
j	long
]	O
;	O
state	*(int)
->	O
heap	*(int)
[	O
j	long
]	O
=	O
t	int
;	O
state	*(int)
->	O
pos	*(int)
[	O
state	*(int)
->	O
heap	*(int)
[	O
i	long
]	O
]	O
=	O
i	long
;	O
state	*(int)
->	O
pos	*(int)
[	O
state	*(int)
->	O
heap	*(int)
[	O
j	long
]	O
]	O
=	O
j	long
;	O
return	O
1	int
;	O
}	O
static	O
int	O
mmCmpExch	(*(struct(int,int,int,*(double),*(int),*(int))),int,int)->(int)
(	O
medacc_state_t	struct(int,int,int,*(double),*(int),*(int))
*	O
state	*(int)
,	O
const	O
int	O
i	long
,	O
const	O
int	O
j	long
)	O
{	O
return	O
(	O
mmless	(*(struct(int,int,int,*(double),*(int),*(int))),int,int)->(int)
(	O
state	*(int)
,	O
i	long
,	O
j	long
)	O
&&	O
mmexchange	(*(struct(int,int,int,*(double),*(int),*(int))),int,int)->(int)
(	O
state	*(int)
,	O
i	long
,	O
j	long
)	O
)	O
;	O
}	O
static	O
void	O
minSortDown	(*(struct(int,int,int,*(double),*(int),*(int))),int)->(void)
(	O
medacc_state_t	struct(int,int,int,*(double),*(int),*(int))
*	O
state	*(int)
,	O
int	O
i	long
)	O
{	O
for	O
(	O
;	O
i	long
<=	O
minCt	O
(	O
state	*(int)
)	O
;	O
i	long
*=	O
2	int
)	O
{	O
if	O
(	O
i	long
>	O
1	int
&&	O
i	long
<	O
minCt	O
(	O
state	*(int)
)	O
&&	O
mmless	(*(struct(int,int,int,*(double),*(int),*(int))),int,int)->(int)
(	O
state	*(int)
,	O
i	long
+	O
1	int
,	O
i	long
)	O
)	O
++	O
i	long
;	O
if	O
(	O
!	O
mmCmpExch	(*(struct(int,int,int,*(double),*(int),*(int))),int,int)->(int)
(	O
state	*(int)
,	O
i	long
,	O
i	long
/	O
2	int
)	O
)	O
break	O
;	O
}	O
}	O
static	O
void	O
maxSortDown	(*(struct(int,int,int,*(double),*(int),*(int))),int)->(void)
(	O
medacc_state_t	struct(int,int,int,*(double),*(int),*(int))
*	O
state	*(int)
,	O
int	O
i	long
)	O
{	O
for	O
(	O
;	O
i	long
>=	O
-	O
maxCt	O
(	O
state	*(int)
)	O
;	O
i	long
*=	O
2	int
)	O
{	O
if	O
(	O
i	long
<	O
-	O
1	int
&&	O
i	long
>	O
-	O
maxCt	O
(	O
state	*(int)
)	O
&&	O
mmless	(*(struct(int,int,int,*(double),*(int),*(int))),int,int)->(int)
(	O
state	*(int)
,	O
i	long
,	O
i	long
-	O
1	int
)	O
)	O
--	O
i	long
;	O
if	O
(	O
!	O
mmCmpExch	(*(struct(int,int,int,*(double),*(int),*(int))),int,int)->(int)
(	O
state	*(int)
,	O
i	long
/	O
2	int
,	O
i	long
)	O
)	O
break	O
;	O
}	O
}	O
static	O
int	O
minSortUp	(*(struct(int,int,int,*(double),*(int),*(int))),int)->(int)
(	O
medacc_state_t	struct(int,int,int,*(double),*(int),*(int))
*	O
state	*(int)
,	O
int	O
i	long
)	O
{	O
while	O
(	O
i	long
>	O
0	int
&&	O
mmCmpExch	(*(struct(int,int,int,*(double),*(int),*(int))),int,int)->(int)
(	O
state	*(int)
,	O
i	long
,	O
i	long
/	O
2	int
)	O
)	O
i	long
/=	O
2	int
;	O
return	O
(	O
i	long
==	O
0	int
)	O
;	O
}	O
static	O
int	O
maxSortUp	(*(struct(int,int,int,*(double),*(int),*(int))),int)->(int)
(	O
medacc_state_t	struct(int,int,int,*(double),*(int),*(int))
*	O
state	*(int)
,	O
int	O
i	long
)	O
{	O
while	O
(	O
i	long
<	O
0	int
&&	O
mmCmpExch	(*(struct(int,int,int,*(double),*(int),*(int))),int,int)->(int)
(	O
state	*(int)
,	O
i	long
/	O
2	int
,	O
i	long
)	O
)	O
i	long
/=	O
2	int
;	O
return	O
(	O
i	long
==	O
0	int
)	O
;	O
}	O
static	O
const	O
gsl_movstat_accum	struct(*((long)->(long)),*((long,*(void))->(int)),*((double,*(void))->(int)),*((*(void))->(int)),*((*(void),*(double),*(void))->(int)))
median_accum_type	struct(*((long)->(long)),*((long,*(void))->(int)),*((double,*(void))->(int)),*((*(void))->(int)),*((*(void),*(double),*(void))->(int)))
=	O
{	O
medacc_size	(long)->(long)
,	O
medacc_init	(long,*(void))->(int)
,	O
medacc_insert	(double,*(void))->(int)
,	O
NULL	O
,	O
medacc_get	(*(void),*(double),*(void))->(int)
}	O
;	O
const	O
gsl_movstat_accum	struct(*((long)->(long)),*((long,*(void))->(int)),*((double,*(void))->(int)),*((*(void))->(int)),*((*(void),*(double),*(void))->(int)))
*	O
gsl_movstat_accum_median	*(struct(*((long)->(long)),*((long,*(void))->(int)),*((double,*(void))->(int)),*((*(void))->(int)),*((*(void),*(double),*(void))->(int))))
=	O
&	O
median_accum_type	struct(*((long)->(long)),*((long,*(void))->(int)),*((double,*(void))->(int)),*((*(void))->(int)),*((*(void),*(double),*(void))->(int)))
;	O
