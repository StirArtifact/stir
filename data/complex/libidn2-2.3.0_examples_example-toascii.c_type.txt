int	O
main	()->(int)
(	O
void	O
)	O
{	O
char	O
buf	array(char)
[	O
BUFSIZ	int
]	O
;	O
char	O
*	O
p	*(char)
;	O
int	O
rc	int
;	O
size_t	long
i	long
;	O
if	O
(	O
!	O
fgets	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
buf	array(char)
,	O
BUFSIZ	int
,	O
stdin	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
perror	(*(char))->(void)
(	O
"fgets"	*(char)
)	O
;	O
buf	array(char)
[	O
strlen	(*(char))->(long)
(	O
buf	array(char)
)	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
printf	(*(char))->(int)
(	O
"Read string (length %ld): "	*(char)
,	O
(	O
long	O
int	O
)	O
strlen	(*(char))->(long)
(	O
buf	array(char)
)	O
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
strlen	(*(char))->(long)
(	O
buf	array(char)
)	O
;	O
i	long
++	O
)	O
printf	(*(char))->(int)
(	O
"%02x "	*(char)
,	O
(	O
unsigned	O
)	O
buf	array(char)
[	O
i	long
]	O
&	O
0xFF	int
)	O
;	O
printf	(*(char))->(int)
(	O
"\n"	*(char)
)	O
;	O
rc	int
=	O
idn2_to_ascii_8z	(*(char),*(*(char)),int)->(int)
(	O
buf	array(char)
,	O
&	O
p	*(char)
,	O
IDN2_NONTRANSITIONAL	int
)	O
;	O
if	O
(	O
rc	int
!=	O
IDNA_SUCCESS	int
)	O
{	O
printf	(*(char))->(int)
(	O
"ToASCII() failed (%d): %s\n"	*(char)
,	O
rc	int
,	O
idn2_strerror	(int)->(*(char))
(	O
rc	int
)	O
)	O
;	O
return	O
EXIT_FAILURE	int
;	O
}	O
printf	(*(char))->(int)
(	O
"ACE label (length %ld): '%s'\n"	*(char)
,	O
(	O
long	O
int	O
)	O
strlen	(*(char))->(long)
(	O
p	*(char)
)	O
,	O
p	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
p	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
