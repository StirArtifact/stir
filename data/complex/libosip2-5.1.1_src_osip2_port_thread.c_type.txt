struct	O
osip_thread	O
*	O
osip_thread_create	(int,*((*(void))->(*(void))),*(void))->(*(struct))
(	O
int	O
stacksize	int
,	O
void	O
*	O
(	O
*	O
func	*((*(char),int,enum(int,int,int,int,int,int,int,int,int),*(char),array(struct(int,int,*(void),*(void))))->(void))
)	O
(	O
void	O
*	O
)	O
,	O
void	O
*	O
arg	*(void)
)	O
{	O
int	O
i	int
;	O
osip_thread_t	long
*	O
thread	*(struct)
=	O
(	O
osip_thread_t	long
*	O
)	O
osip_malloc	O
(	O
sizeof	O
(	O
osip_thread_t	long
)	O
)	O
;	O
if	O
(	O
thread	*(struct)
==	O
NULL	O
)	O
return	O
NULL	O
;	O
i	int
=	O
pthread_create	(*(long),*(union(array(char),long)),*((*(void))->(*(void))),*(void))->(int)
(	O
thread	*(struct)
,	O
NULL	O
,	O
func	*((*(char),int,enum(int,int,int,int,int,int,int,int,int),*(char),array(struct(int,int,*(void),*(void))))->(void))
,	O
(	O
void	O
*	O
)	O
arg	*(void)
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
OSIP_TRACE	O
(	O
osip_trace	(*(char),int,enum(int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_ERROR	O
,	O
NULL	O
,	O
"Error while creating a new thread\n"	*(char)
)	O
)	O
;	O
osip_free	O
(	O
thread	*(struct)
)	O
;	O
return	O
NULL	O
;	O
}	O
return	O
(	O
struct	O
osip_thread	O
*	O
)	O
thread	*(struct)
;	O
}	O
int	O
osip_thread_set_priority	(*(struct),int)->(int)
(	O
struct	O
osip_thread	O
*	O
thread	*(struct)
,	O
int	O
priority	int
)	O
{	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_thread_join	(*(struct))->(int)
(	O
struct	O
osip_thread	O
*	O
_thread	*(struct)
)	O
{	O
osip_thread_t	long
*	O
thread	*(struct)
=	O
(	O
osip_thread_t	long
*	O
)	O
_thread	*(struct)
;	O
if	O
(	O
thread	*(struct)
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
return	O
pthread_join	(long,*(*(void)))->(int)
(	O
*	O
thread	*(struct)
,	O
NULL	O
)	O
;	O
}	O
void	O
osip_thread_exit	()->(void)
(	O
)	O
{	O
pthread_exit	(*(void))->(void)
(	O
NULL	O
)	O
;	O
}	O
