const	O
struct	O
nettle_aead	struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void)))
*	O
const	O
_nettle_aeads	array(*(struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void)))))
[	O
]	O
=	O
{	O
&	O
nettle_gcm_aes128	struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void)))
,	O
&	O
nettle_gcm_aes192	struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void)))
,	O
&	O
nettle_gcm_aes256	struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void)))
,	O
&	O
nettle_gcm_camellia128	struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void)))
,	O
&	O
nettle_gcm_camellia256	struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void)))
,	O
&	O
nettle_eax_aes128	struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void)))
,	O
&	O
nettle_chacha_poly1305	struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void)))
,	O
NULL	O
}	O
;	O
const	O
struct	O
nettle_aead	struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void)))
*	O
const	O
*	O
nettle_get_aeads	()->(*(*(struct(*(char),int,int,int,int,int,*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`,*`)->(void)),*((*`,long,*`,*`)->(void)),*((*`,long,*`)->(void))))))
(	O
void	O
)	O
{	O
return	O
_nettle_aeads	array(*(struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void)))))
;	O
}	O
