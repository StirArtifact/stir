void	O
mu_url_destroy	(*(*(struct)))->(void)
(	O
mu_url_t	*(struct)
*	O
purl	*(*(struct))
)	O
{	O
if	O
(	O
purl	*(*(struct))
&&	O
*	O
purl	*(*(struct))
)	O
{	O
mu_url_t	*(struct)
url	*(struct)
=	O
(	O
*	O
purl	*(*(struct))
)	O
;	O
if	O
(	O
url	*(struct)
->	O
_destroy	*((*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))))->(void))
)	O
url	*(struct)
->	O
_destroy	*((*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))))->(void))
(	O
url	*(struct)
)	O
;	O
if	O
(	O
url	*(struct)
->	O
name	*(char)
)	O
free	(*(void))->(void)
(	O
url	*(struct)
->	O
name	*(char)
)	O
;	O
if	O
(	O
url	*(struct)
->	O
scheme	*(char)
)	O
free	(*(void))->(void)
(	O
url	*(struct)
->	O
scheme	*(char)
)	O
;	O
if	O
(	O
url	*(struct)
->	O
user	*(char)
)	O
free	(*(void))->(void)
(	O
url	*(struct)
->	O
user	*(char)
)	O
;	O
mu_secret_destroy	(*(*(struct)))->(void)
(	O
&	O
url	*(struct)
->	O
secret	*(struct)
)	O
;	O
if	O
(	O
url	*(struct)
->	O
auth	*(char)
)	O
free	(*(void))->(void)
(	O
url	*(struct)
->	O
auth	*(char)
)	O
;	O
if	O
(	O
url	*(struct)
->	O
host	*(char)
)	O
free	(*(void))->(void)
(	O
url	*(struct)
->	O
host	*(char)
)	O
;	O
if	O
(	O
url	*(struct)
->	O
path	*(char)
)	O
free	(*(void))->(void)
(	O
url	*(struct)
->	O
path	*(char)
)	O
;	O
if	O
(	O
url	*(struct)
->	O
fvcount	int
)	O
mu_argcv_free	(long,*(*(char)))->(void)
(	O
url	*(struct)
->	O
fvcount	int
,	O
url	*(struct)
->	O
fvpairs	*(*(char))
)	O
;	O
mu_argcv_free	(long,*(*(char)))->(void)
(	O
url	*(struct)
->	O
qargc	int
,	O
url	*(struct)
->	O
qargv	*(*(char))
)	O
;	O
free	(*(void))->(void)
(	O
url	*(struct)
)	O
;	O
*	O
purl	*(*(struct))
=	O
NULL	O
;	O
}	O
}	O
