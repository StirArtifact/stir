MAV_vrad	O
vrad	int
;	O
int	O
keyb	(*(int),*(int))->(int)
(	O
MAV_object	O
*	O
o	*(int)
,	O
MAV_keyboardEvent	O
*	O
ke	*(int)
)	O
{	O
if	O
(	O
ke	*(int)
->	O
movement	O
==	O
MAV_PRESSED	O
)	O
{	O
switch	O
(	O
ke	*(int)
->	O
key	O
)	O
{	O
case	O
'='	O
:	O
mav_vradGamma	()->(int)
(	O
&	O
vrad	int
,	O
0.9	int
)	O
;	O
break	O
;	O
case	O
'-'	O
:	O
mav_vradGamma	()->(int)
(	O
&	O
vrad	int
,	O
1.1	int
)	O
;	O
break	O
;	O
}	O
}	O
return	O
1	int
;	O
}	O
int	O
main	(int,array(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
MAV_SMS	O
*	O
sms	O
;	O
mav_opt_objectTables	O
=	O
MAV_FALSE	O
;	O
mav_initialise	()->(int)
(	O
&	O
argc	int
,	O
argv	array(*(char))
)	O
;	O
mav_vradModuleInit	()->(int)
(	O
)	O
;	O
if	O
(	O
!	O
mav_vradRead	()->(int)
(	O
"aiglab"	*(char)
,	O
&	O
vrad	int
,	O
MAV_ID_MATRIX	O
)	O
)	O
exit	O
(	O
1	int
)	O
;	O
mav_vradGamma	()->(int)
(	O
&	O
vrad	int
,	O
0.7	int
)	O
;	O
sms	O
=	O
mav_SMSNew	()->(int)
(	O
mav_SMSClass_objList	O
,	O
mav_objListNew	()->(int)
(	O
)	O
)	O
;	O
mav_SMSCallbackObjectAddExec	()->(int)
(	O
sms	O
,	O
mav_objectNew	()->(int)
(	O
mav_class_vrad	O
,	O
&	O
vrad	int
)	O
)	O
;	O
mav_windowBackfaceCullSet	()->(int)
(	O
mav_win_all	O
,	O
MAV_TRUE	O
)	O
;	O
mav_navigationMouse	()->(int)
(	O
mav_win_all	O
,	O
mav_navigationMouseDefault	O
)	O
;	O
mav_navigationMouseDefaultParams	()->(int)
(	O
mav_win_all	O
,	O
MAV_MIDDLE_BUTTON	O
,	O
mav_navigateYawFixedUp	O
,	O
0.5	int
,	O
-	O
0.001	int
,	O
mav_navigatePitch	O
,	O
0.5	int
,	O
0.001	int
)	O
;	O
mav_callbackKeyboardSet	()->(int)
(	O
mav_win_all	O
,	O
mav_class_world	O
,	O
keyb	(*(int),*(int))->(int)
)	O
;	O
mav_vp_default	O
.	O
eye	O
.	O
x	O
=	O
-	O
0.687075	int
;	O
mav_vp_default	O
.	O
eye	O
.	O
y	O
=	O
1.220000	int
;	O
mav_vp_default	O
.	O
eye	O
.	O
z	O
=	O
-	O
0.127375	int
;	O
while	O
(	O
1	int
)	O
{	O
mav_eventsCheck	()->(int)
(	O
)	O
;	O
mav_frameBegin	()->(int)
(	O
)	O
;	O
mav_SMSDisplay	()->(int)
(	O
mav_win_all	O
,	O
sms	O
)	O
;	O
mav_frameEnd	()->(int)
(	O
)	O
;	O
}	O
}	O
