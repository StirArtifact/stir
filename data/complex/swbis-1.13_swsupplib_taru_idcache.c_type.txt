char	O
*	O
xstrdup	(*(char))->(*(char))
(	O
char	O
*	O
)	O
;	O
struct	O
userid	struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`))))))
{	O
union	O
{	O
uid_t	int
u	int
;	O
gid_t	int
g	int
;	O
}	O
id	union(int,int)
;	O
char	O
*	O
name	*(char)
;	O
struct	O
userid	struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`))))))
*	O
next	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
}	O
;	O
static	O
struct	O
userid	struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`))))))
*	O
user_alist	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
static	O
struct	O
userid	struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`))))))
*	O
nouser_alist	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
char	O
*	O
tar_idcache_getuser	(int)->(*(char))
(	O
uid_t	int
uid	int
)	O
{	O
register	O
struct	O
userid	struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`))))))
*	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
struct	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
*	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
;	O
char	O
usernum_string	array(char)
[	O
20	int
]	O
;	O
for	O
(	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
user_alist	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
next	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
)	O
if	O
(	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
id	union(int,int)
.	O
u	int
==	O
uid	int
)	O
return	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
name	*(char)
;	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
=	O
getpwuid	(int)->(*(struct(*(char),*(char),int,int,*(char),*(char),*(char))))
(	O
uid	int
)	O
;	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
(	O
struct	O
userid	struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`))))))
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
userid	struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`))))))
)	O
)	O
;	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
id	union(int,int)
.	O
u	int
=	O
uid	int
;	O
if	O
(	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
==	O
0	int
)	O
{	O
snprintf	(*(char),long,*(char))->(int)
(	O
usernum_string	array(char)
,	O
sizeof	O
(	O
usernum_string	array(char)
)	O
,	O
"%u"	*(char)
,	O
(	O
unsigned	O
)	O
uid	int
)	O
;	O
usernum_string	array(char)
[	O
sizeof	O
(	O
usernum_string	array(char)
)	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
name	*(char)
=	O
xstrdup	(*(char))->(*(char))
(	O
usernum_string	array(char)
)	O
;	O
}	O
else	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
name	*(char)
=	O
xstrdup	(*(char))->(*(char))
(	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_name	*(char)
)	O
;	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
next	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
user_alist	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
user_alist	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
return	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
name	*(char)
;	O
}	O
uid_t	int
*	O
tar_idcache_getuidbyname	(*(char))->(*(int))
(	O
char	O
*	O
user	*(char)
)	O
{	O
register	O
struct	O
userid	struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`))))))
*	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
struct	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
*	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
;	O
for	O
(	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
user_alist	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
next	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
)	O
if	O
(	O
*	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
name	*(char)
==	O
*	O
user	*(char)
&&	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
name	*(char)
,	O
user	*(char)
)	O
)	O
return	O
&	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
id	union(int,int)
.	O
u	int
;	O
for	O
(	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
nouser_alist	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
next	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
)	O
if	O
(	O
*	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
name	*(char)
==	O
*	O
user	*(char)
&&	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
name	*(char)
,	O
user	*(char)
)	O
)	O
return	O
0	int
;	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
=	O
getpwnam	(*(char))->(*(struct(*(char),*(char),int,int,*(char),*(char),*(char))))
(	O
user	*(char)
)	O
;	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
(	O
struct	O
userid	struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`))))))
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
userid	struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`))))))
)	O
)	O
;	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
name	*(char)
=	O
xstrdup	(*(char))->(*(char))
(	O
user	*(char)
)	O
;	O
if	O
(	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
)	O
{	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
id	union(int,int)
.	O
u	int
=	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_uid	int
;	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
next	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
user_alist	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
user_alist	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
return	O
&	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
id	union(int,int)
.	O
u	int
;	O
}	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
next	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
nouser_alist	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
nouser_alist	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
return	O
0	int
;	O
}	O
static	O
struct	O
userid	struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`))))))
*	O
group_alist	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
static	O
struct	O
userid	struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`))))))
*	O
nogroup_alist	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
char	O
*	O
tar_idcache_getgroup	(int)->(*(char))
(	O
gid_t	int
gid	int
)	O
{	O
register	O
struct	O
userid	struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`))))))
*	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
struct	O
group	struct(*(char),*(char),int,*(*(char)))
*	O
grent	*(struct(*(char),*(char),int,*(*(char))))
;	O
char	O
groupnum_string	array(char)
[	O
20	int
]	O
;	O
for	O
(	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
group_alist	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
next	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
)	O
if	O
(	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
id	union(int,int)
.	O
g	int
==	O
gid	int
)	O
return	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
name	*(char)
;	O
grent	*(struct(*(char),*(char),int,*(*(char))))
=	O
getgrgid	(int)->(*(struct(*(char),*(char),int,*(*(char)))))
(	O
gid	int
)	O
;	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
(	O
struct	O
userid	struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`))))))
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
userid	struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`))))))
)	O
)	O
;	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
id	union(int,int)
.	O
g	int
=	O
gid	int
;	O
if	O
(	O
grent	*(struct(*(char),*(char),int,*(*(char))))
==	O
0	int
)	O
{	O
snprintf	(*(char),long,*(char))->(int)
(	O
groupnum_string	array(char)
,	O
sizeof	O
(	O
groupnum_string	array(char)
)	O
,	O
"%u"	*(char)
,	O
(	O
unsigned	O
int	O
)	O
gid	int
)	O
;	O
groupnum_string	array(char)
[	O
sizeof	O
(	O
groupnum_string	array(char)
)	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
name	*(char)
=	O
xstrdup	(*(char))->(*(char))
(	O
groupnum_string	array(char)
)	O
;	O
}	O
else	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
name	*(char)
=	O
xstrdup	(*(char))->(*(char))
(	O
grent	*(struct(*(char),*(char),int,*(*(char))))
->	O
gr_name	*(char)
)	O
;	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
next	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
group_alist	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
group_alist	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
return	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
name	*(char)
;	O
}	O
gid_t	int
*	O
tar_idcache_getgidbyname	(*(char))->(*(int))
(	O
char	O
*	O
group	struct(*(char),*(char),int,*(*(char)))
)	O
{	O
register	O
struct	O
userid	struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`))))))
*	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
struct	O
group	struct(*(char),*(char),int,*(*(char)))
*	O
grent	*(struct(*(char),*(char),int,*(*(char))))
;	O
for	O
(	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
group_alist	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
next	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
)	O
if	O
(	O
*	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
name	*(char)
==	O
*	O
group	struct(*(char),*(char),int,*(*(char)))
&&	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
name	*(char)
,	O
group	struct(*(char),*(char),int,*(*(char)))
)	O
)	O
return	O
&	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
id	union(int,int)
.	O
g	int
;	O
for	O
(	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
nogroup_alist	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
next	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
)	O
if	O
(	O
*	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
name	*(char)
==	O
*	O
group	struct(*(char),*(char),int,*(*(char)))
&&	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
name	*(char)
,	O
group	struct(*(char),*(char),int,*(*(char)))
)	O
)	O
return	O
0	int
;	O
grent	*(struct(*(char),*(char),int,*(*(char))))
=	O
getgrnam	(*(char))->(*(struct(*(char),*(char),int,*(*(char)))))
(	O
group	struct(*(char),*(char),int,*(*(char)))
)	O
;	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
(	O
struct	O
userid	struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`))))))
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
userid	struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`))))))
)	O
)	O
;	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
name	*(char)
=	O
xstrdup	(*(char))->(*(char))
(	O
group	struct(*(char),*(char),int,*(*(char)))
)	O
;	O
if	O
(	O
grent	*(struct(*(char),*(char),int,*(*(char))))
)	O
{	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
id	union(int,int)
.	O
g	int
=	O
grent	*(struct(*(char),*(char),int,*(*(char))))
->	O
gr_gid	int
;	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
next	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
group_alist	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
group_alist	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
return	O
&	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
id	union(int,int)
.	O
g	int
;	O
}	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
->	O
next	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
nogroup_alist	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
nogroup_alist	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
=	O
tail	*(struct(union(int,int),*(char),*(struct(union(int,int),*(char),*(struct`)))))
;	O
return	O
0	int
;	O
}	O
