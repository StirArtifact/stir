int	O
mu_rename_file	(*(char),*(char),int)->(int)
(	O
const	O
char	O
*	O
oldpath	*(char)
,	O
const	O
char	O
*	O
newpath	*(char)
,	O
int	O
flags	int
)	O
{	O
int	O
rc	int
;	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
st	*(struct(long,long,long))
;	O
if	O
(	O
access	(*(char),int)->(int)
(	O
oldpath	*(char)
,	O
F_OK	int
)	O
)	O
return	O
errno	O
;	O
if	O
(	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
(	O
newpath	*(char)
,	O
&	O
st	*(struct(long,long,long))
)	O
==	O
0	int
)	O
{	O
if	O
(	O
flags	int
&	O
MU_COPY_OVERWRITE	int
)	O
{	O
if	O
(	O
S_ISDIR	O
(	O
st	*(struct(long,long,long))
.	O
st_mode	int
)	O
)	O
{	O
if	O
(	O
mu_remove_file	(*(char))->(int)
(	O
newpath	*(char)
)	O
)	O
return	O
MU_ERR_REMOVE_DEST	O
;	O
}	O
}	O
else	O
return	O
EEXIST	int
;	O
}	O
if	O
(	O
rename	(*(char),*(char))->(int)
(	O
oldpath	*(char)
,	O
newpath	*(char)
)	O
==	O
0	int
)	O
return	O
0	int
;	O
if	O
(	O
errno	O
==	O
EXDEV	int
)	O
{	O
mu_debug	O
(	O
MU_DEBCAT_STREAM	int
,	O
MU_DEBUG_ERROR	int
,	O
(	O
_	O
(	O
"cannot rename %s to %s: %s"	*(char)
)	O
,	O
oldpath	*(char)
,	O
newpath	*(char)
,	O
mu_strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
)	O
;	O
mu_debug	O
(	O
MU_DEBCAT_STREAM	int
,	O
MU_DEBUG_TRACE1	int
,	O
(	O
_	O
(	O
"attempting copy"	*(char)
)	O
)	O
)	O
;	O
rc	int
=	O
mu_copy_file	(*(char),*(char),int)->(int)
(	O
oldpath	*(char)
,	O
newpath	*(char)
,	O
flags	int
|	O
MU_COPY_MODE	int
|	O
MU_COPY_OWNER	int
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
rc	int
=	O
mu_remove_file	(*(char))->(int)
(	O
oldpath	*(char)
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_debug	O
(	O
MU_DEBCAT_STREAM	int
,	O
MU_DEBUG_ERROR	int
,	O
(	O
_	O
(	O
"copied %s to %s, but failed to remove the source: %s"	*(char)
)	O
,	O
oldpath	*(char)
,	O
newpath	*(char)
,	O
mu_strerror	(int)->(*(char))
(	O
rc	int
)	O
)	O
)	O
;	O
rc	int
=	O
MU_ERR_REMOVE_SOURCE	O
;	O
}	O
}	O
}	O
else	O
rc	int
=	O
errno	O
;	O
return	O
rc	int
;	O
}	O
